
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	15.15.6	synth with cache (only 1: intros n0; only 1: intros a b; only 1: CRelationClasses.simpl_crelation).	4.97448801994	7952
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	7.3.18.16	synth with cache (only 1: intros P; only 1: intros H; only 1: intros H0; only 1: firstorder).	7.45464301109	12665
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	30	synth with cache (only 1: CRelationClasses.simpl_crelation).	1.50927209854	2196
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	6.20	synth with cache (only 1: intros a b H; only 1: intuition).	1.41653108597	1558
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	29	synth with cache (only 1: firstorder  (subst; auto)).	0.746062040329	833
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0218188762665	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0214238166809	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.1.11	synth with cache (only 1: intros w; only 1: intro; only 1: ring).	0.113542079926	121
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0219011306763	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0214259624481	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	1.5.0.0.0.0.0.1.1.1.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: rewrite Rlt_le_neq; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq in H; only 1: now right).	34.1141028404	17983
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	1.0.0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).	0.117348909378	50
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.0.4.3.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	1.49468588829	546
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0	synth with cache (only 1: intros n m p; only 1: intuition Z.order).	0.0286040306091	2
Coq.micromega.Ztac.elim_concl_eq	40	4	synth with cache (only 1: intuition Z.order).	0.066871881485	21
Coq.micromega.Ztac.elim_concl_le	40	4.0	synth with cache (only 1: intros; only 1: now apply Z.ge_le).	0.0245499610901	6
Coq.micromega.Ztac.elim_concl_lt	40	5.0	synth with cache (only 1: intros x y H; only 1: now apply Z.nle_gt).	0.0473101139069	25
Coq.micromega.Ztac.Zlt_le_add_1	40	0.8.0.1	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l; only 1: Z.order).	1.11410903931	285
Coq.micromega.Ztac.add_le	40	2.1	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0579590797424	14
Coq.micromega.Ztac.mul_le	40	0.0.4.0	synth with cache (only 1: intros n m Hn Hm; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.0363340377808	8
Coq.micromega.ZifyInst.eq_pos_inj	40	1.0.2.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: split; only 1: congruence; only 1: congruence).	0.11753487587	28
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.0.0.0.0.0.0.0.2.0.9.10.1.33	synth with cache (only 1: revert x; only 1: intros n; only 1: unfold Z.max, Pos.max; only 1: rewrite Z.compare_sub; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: unfold Z.sub; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	24.6044950485	21558
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0192399024963	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0189461708069	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0208809375763	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0205020904541	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0206060409546	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0573179721832	5
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	5.6.2.32	synth with cache (only 1: split; only 1: exact (SORplus_wd sor); only 1: exact (SORtimes_wd sor); only 1: exact (SORopp_wd sor)).	3.76737904549	2996
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.1.0.0.4	synth with cache (only 1: intros a b; only 1: intro; only 1: intro; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	2.79830312729	1146
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	1.3.1	synth with cache (only 1: intros n0 H'; only 1: rewrite Rplus_comm; only 1: auto with real).	0.352161169052	98
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.2.3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: cut (1 + 0 * x = 1); only 1: auto with real; only 1: ring).	0.36906003952	96
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.3.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.0697479248047	7
Coq.micromega.ZifySint63.to_Z_bounded	40
Coq.micromega.ZifySint63.ltb_lt	40
Coq.micromega.ZifySint63.leb_le	40
Coq.micromega.ZifySint63.eqb_eq	40
Coq.micromega.ZifySint63.eq_int_inj	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: now subst; reflexivity; only 1: intro H; only 1: now apply to_Z_inj in H).	0.0536019802094	5
Coq.micromega.ZifySint63.div_quots	40
Coq.micromega.ZifySint63.quots_spec	40
Coq.micromega.ZifySint63.is_zeroE	40	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: case Z.eqb_spec; only 1: intros h; only 1: apply (Uint63.to_Z_inj n 0) in h; only 1: subst n; only 1: reflexivity; only 1: generalize (proj1 (is_zero_spec n)); only 1: case is_zero; only 1: intros ->; only 1: destruct 1; only 1: easy; only 1: auto; only 1: auto).	3.73161792755	692
Coq.micromega.ZifyClasses.mkapp2	40	4.14	synth with cache (only 1: subst; only 1: trivial).	0.0834858417511	175
Coq.micromega.ZifyClasses.mkapp	40	8.33	synth with cache (only 1: subst; only 1: trivial).	0.297071218491	937
Coq.micromega.ZifyClasses.mkrel	40	6.0	synth with cache (only 1: subst; only 1: auto).	0.0168359279633	8
Coq.micromega.ZifyClasses.and_morph	40	5.1.0.0.1.2.0.0.0.0.8	synth with cache (only 1: intro H; only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	7.90241003036	19839
Coq.micromega.ZifyClasses.or_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.115763902664	2
Coq.micromega.ZifyClasses.impl_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0287711620331	2
Coq.micromega.ZifyClasses.iff_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0500512123108	2
Coq.micromega.ZifyClasses.not_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0224330425262	2
Coq.micromega.ZifyClasses.eq_iff	40	0.0.1.2	synth with cache (only 1: intros A B []; only 1: split; only 1: auto; only 1: auto).	0.0277810096741	18
Coq.micromega.ZifyClasses.rew_iff	40	3	synth with cache (only 1: tauto).	0.0136799812317	4
Coq.micromega.ZifyClasses.rew_iff_rev	40	4	synth with cache (only 1: tauto).	0.0141611099243	5
Coq.micromega.ZifyUint63.to_Z_bounded	40	7.0	synth with cache (only 1: intro H; only 1: apply to_Z_rec_bounded).	0.0735521316528	11
Coq.micromega.ZifyUint63.ltb_lt	40
Coq.micromega.ZifyUint63.leb_le	40
Coq.micromega.ZifyUint63.eqb_eq	40
Coq.micromega.ZifyUint63.eq_int_inj	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: now subst; reflexivity; only 1: intro H; only 1: now apply to_Z_inj in H).	0.0541279315948	5
Coq.micromega.ZifyUint63.is_evenE	40
Coq.micromega.ZMicromega.eq_le_iff	40	5	synth with cache (only 1: intuition Z.order).	0.227920055389	45
Coq.micromega.ZMicromega.lt_le_iff	40	2.0.3.0	synth with cache (only 1: intro; only 1: split; only 1: now destruct x as [| [x| x| ]| ]; only 1: apply Z.lt_le_pred).	0.183490037918	37
Coq.micromega.ZMicromega.le_0_iff	40	0.0.3.2	synth with cache (only 1: intros a m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	0.0797591209412	30
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.pop2_bop2	40
Coq.micromega.ZMicromega.Zeval_op2_hold	40
Coq.micromega.ZMicromega.Zeval_formula_compat	40	0.0.2.8	synth with cache (only 1: intros H; only 1: intros Hn; only 1: fix even_spec 1; only 1: tauto).	0.655336856842	398
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.6.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.0333049297333	9
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.0.2.0	synth with cache (only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	0.122615814209	29
Coq.micromega.ZMicromega.isZ0_n0	40
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	0.0.0.0.2.0.0.0.14.3.0.11.1.1	synth with cache (only 1: intros; only 1: revert H; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros H; only 1: destruct p; only 1: now f_equal; only 1: destr_eq H; only 1: now destruct Hn || easy; only 1: intros; only 1: easy; only 1: intros; only 1: simpl; only 1: inv H).	38.3560841084	38766
Coq.micromega.ZMicromega.pos_le_add	40	0.0.2.0.0.2.17	synth with cache (only 1: intros g; only 1: fix sqrtrem_spec 1; only 1: intros y; only 1: destruct y as [y| y| ]; only 1: easy; only 1: now rewrite ?Pos.square_xO; only 1: trivial).	1.61756706238	2269
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.ltof_bdepth_split_l	40	1.0.16.1	synth with cache (only 1: intros p; only 1: fix even_specT 1; only 1: intros; only 1: auto with zarith).	3.62991976738	3680
Coq.micromega.ZMicromega.ltof_bdepth_split_r	40	1.0.0.13	synth with cache (only 1: repeat red; only 1: intros; only 1: simpl; only 1: auto with arith).	3.89574790001	2559
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.3.0.1.0.8	synth with cache (only 1: intros z n H; only 1: apply Z.ge_le; only 1: rewrite ?eval_pol_sub; only 1: rewrite <- !eval_pol_norm; only 1: Z.nzsimpl; only 1: now destruct Hn || easy).	7.16157698631	2853
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	0.0565629005432	5
Coq.micromega.ZMicromega.eval_nformula_split	40
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.xorb_eq	40	25	synth with cache (only 1: destr_bool).	0.136887073517	306
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.b2n_b2z	40
Coq.micromega.ZifyBool.b2z_spec	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40	0.2.5.1.1.0	synth with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: simpl; only 1: auto).	0.26988196373	232
Coq.micromega.Env.S.jump_succ	40	3.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0660967826843	37
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	3.4.3.9	synth with cache (only 1: destruct p; only 1: easy'; only 1: now destruct p; only 1: now BinNat.N.nzsimpl).	0.478761196136	394
Coq.micromega.Env.S.nth_pred_double	40	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0321459770203	3
Coq.micromega.Tauto.S.EVAL.eval_f_rew	40	11.7.1.13	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: now intro l; induction l; only 1: now intro l; induction l).	13.1198120117	15343
Coq.micromega.Tauto.S.eiff_refl	40
Coq.micromega.Tauto.S.eiff_sym	40	0.1.0.1.5.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct 1; only 1: tauto).	0.6828789711	231
Coq.micromega.Tauto.S.eiff_trans	40	0.6.0.0.2.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: intros; only 1: intuition; only 1: destruct 2; only 1: intuition).	1.16860485077	588
Coq.micromega.Tauto.S.hold_eiff	40
Coq.micromega.Tauto.S.eiff_eq	40	1.0.1.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0400850772858	7
Coq.micromega.Tauto.S.eAnd_morph_Proper	40	0.1.0.0.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: intuition congruence).	0.0730650424957	7
Coq.micromega.Tauto.S.eOR_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0813341140747	6
Coq.micromega.Tauto.S.eIMPL_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.169315099716	6
Coq.micromega.Tauto.S.eIFF_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0964300632477	6
Coq.micromega.Tauto.S.eNOT_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0538561344147	6
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.1.0.2	synth with cache (only 1: intros A t; only 1: intro l; only 1: intros []; only 1: simpl; only 1: f_equal; only 1: reflexivity).	0.0459861755371	18
Coq.micromega.Tauto.S.is_bool_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	5	synth with cache (only 1: destr_bool).	0.048348903656	33
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.0141308307648	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.0145139694214	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	5.7	synth with cache (only 1: fix even_specT 1; only 1: assumption).	0.213633060455	146
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	12.8	synth with cache (only 1: fix even_specT 1; only 1: easy).	2.7698841095	2948
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.0.0.3.5	synth with cache (only 1: destruct f; only 1: reflexivity; only 1: unfold cnf_tt; only 1: simpl; only 1: congruence).	0.369644880295	155
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	0.0.26	synth with cache (only 1: fix even_spec 1; only 1: intros f; only 1: auto).	10.4573731422	13018
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	2.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: reflexivity).	1.45461797714	531
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_ff_r	40	1.0.1.0.1.1.23.5.24	synth with cache (only 1: destruct f; only 1: reflexivity; only 1: unfold cnf_ff; only 1: unfold and_cnf_opt; only 1: destruct (is_cnf_ff f) eqn:EQ1; only 1: rewrite orb_comm; only 1: reflexivity; only 1: rewrite orb_comm; only 1: reflexivity).	10.9685640335	20013
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_ff	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: rewrite is_cnf_ff_cnf_ff; only 1: rewrite orb_comm; only 1: rewrite orb_comm; only 1: rewrite orb_comm; only 1: rewrite orb_comm; only 1: reflexivity).	0.083771944046	12
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_tt	40	2.1.0.4.4.1.0.0	synth with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: rewrite orb_comm; only 1: simpl; only 1: destruct (is_cnf_ff f) eqn:EQ1; only 1: apply is_cnf_ff_inv in EQ1; only 1: congruence; only 1: reflexivity).	4.17605996132	2473
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_bool_abst_simpl	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_simpl_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.mk_iff_is_bool	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_iff_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_eq_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_and_xcnf	40
Coq.micromega.Tauto.S.rxcnf_or_xcnf	40
Coq.micromega.Tauto.S.rxcnf_impl_xcnf	40
Coq.micromega.Tauto.S.rxcnf_iff_xcnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	1.1.9.39.25.1	synth with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: simpl; only 1: tauto; only 1: tauto).	37.9026699066	87696
Coq.micromega.Tauto.S.eval_cnf_tt	40	1.0.0.0	synth with cache (only 1: clear; only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0331130027771	5
Coq.micromega.Tauto.S.eval_cnf_and_opt	40	1.0.4.3.1	synth with cache (only 1: clear; only 1: intro l; only 1: fix gcd_divide 1; only 1: intros r EVAL; only 1: auto).	1.17274188995	696
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	39.3	synth with cache (only 1: intros; only 1: eauto).	9.10763001442	11129
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	1.0.0.0.0.2.3.0.0.2.0	synth with cache (only 1: unfold eval_cnf; only 1: intros env t; only 1: simpl; only 1: set (F := fun (acc : list clause) (e : clause) => match or_clause t e with | Some cl => cl :: acc | None => acc end); only 1: induction f as [| a f IHf]; only 1: unfold eval_clause; only 1: simpl; only 1: tauto; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	28.8959770203	6195
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0987691879272	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.hold_eTT	40	0.0.1.4.0	synth with cache (only 1: clear; only 1: intro n; only 1: destruct n; only 1: constructor; only 1: constructor).	0.0474679470062	28
Coq.micromega.Tauto.S.hold_eFF	40	0.0.0.0.0.0	synth with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0740151405334	6
Coq.micromega.Tauto.S.hold_eAND	40	1.5.4.1.0.4.0.0.0	synth with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros k; only 1: clear; only 1: fix even_spec 1; only 1: tauto).	25.9931612015	10758
Coq.micromega.Tauto.S.hold_eOR	40
Coq.micromega.Tauto.S.hold_eNOT	40
Coq.micromega.Tauto.S.hold_eIMPL	40
Coq.micromega.Tauto.S.hold_eIFF	40
Coq.micromega.Tauto.S.xcnf_impl	40
Coq.micromega.Tauto.S.hold_eIFF_IMPL	40
Coq.micromega.Tauto.S.hold_eEQ	40	0.0.0.0.0.0.1.0.0	synth with cache (only 1: simpl; only 1: intros e1 e2; only 1: unfold is_true; only 1: rewrite eqb_true_iff; only 1: destruct e1, e2; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	0.25252699852	10
Coq.micromega.Tauto.S.xcnf_iff	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	28.13	synth with cache (only 1: intros; only 1: firstorder).	4.39214301109	3816
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	17.24	synth with cache (only 1: intros l n d ln dn Hlen; only 1: firstorder).	3.80381608009	3396
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	44	synth with cache (only 1: firstorder).	3.49987101555	3290
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	63	synth with cache (only 1: firstorder).	2.47874212265	3795
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	80	synth with cache (only 1: firstorder).	3.9251768589	6694
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	0.0.0.0.32	synth with cache (only 1: unfold tail; only 1: apply env_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal).	23.0794689655	14750
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P as [| | ? ? ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	18.1920189857	2633
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.1.1.0.0.1.0.0.0.3.0.0.1	synth with cache (only 1: revert l; only 1: induction P as [| | ? IHP1 ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	37.5482680798	6510
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.134880065918	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.145766973495	6
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	3.3.6.13	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: rsimpl; only 1: now jump_simpl; only 1: now jump_simpl).	3.17279601097	1060
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0231339931488	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0211260318756	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	1	synth with cache (only 1: exact (SORopp_wd sor)).	0.0210990905762	2
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.0230529308319	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.0246200561523	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0649921894073	9
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	4.3.121	synth with cache (only 1: clear; only 1: fix gcd_divide 1; only 1: auto).	37.5394248962	69169
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	13.7.9.5.9.12	synth with cache (only 1: intros n; only 1: intros H1; only 1: unfold eval_pol in *; only 1: intros nf; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	21.6132991314	31990
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	1.2.0.5.1	synth with cache (only 1: intros P Q l; only 1: induction l as [| a l' Hrec]; only 1: constructor; only 1: simpl; only 1: trivial).	0.478999853134	365
Coq.micromega.Refl.make_impl_map	40	2.1.0.0.2.2.3	synth with cache (only 1: intros op Hop; only 1: intros n d; only 1: induction l; only 1: intro l; only 1: firstorder; only 1: simpl in *; only 1: firstorder  (subst; auto)).	2.64062285423	1785
Coq.micromega.Refl.make_conj_cons	40	1.2.1.4.0	synth with cache (only 1: intros A eval l; only 1: intros []; only 1: simpl; only 1: intuition congruence; only 1: now simpl).	1.89973282814	1101
Coq.micromega.Refl.make_conj_impl	40	0.1.3.1.0.0.3.0.1.0	synth with cache (only 1: intros A eval l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intros HF; only 1: tauto; only 1: intros; only 1: simpl; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	14.0481100082	10437
Coq.micromega.Refl.make_conj_in	40	1.1.1.0.1.8	synth with cache (only 1: intros H a l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	1.67273402214	1553
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.0.0.3.0.1.2.2	synth with cache (only 1: simpl; only 1: intros A eval l; only 1: intros n m; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).	5.73691010475	1705
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0380771160126	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qlt_bool_iff	40	1.2	synth with cache (only 1: intros n m; only 1: apply Z.ltb_lt).	0.507976055145	85
Coq.micromega.QMicromega.pop2_bop2	40
Coq.micromega.QMicromega.Qeval_op2_hold	40	1.7.15.11	synth with cache (only 1: intros k f; only 1: intro n; only 1: fix odd_spec 1; only 1: tauto).	35.6104149818	26243
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40	8.0.16.12	synth with cache (only 1: intro l; only 1: destruct (split (A:=l)); only 1: fix even_specT 1; only 1: tauto).	5.18950891495	6411
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	1	synth with cache (only 1: exact RTheory).	0.700485944748	170
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.0	synth with cache (only 1: intro; only 1: field).	0.0878150463104	17
Coq.micromega.RMicromega.Qeq_true	40	8.1.26	synth with cache (only 1: intros l; only 1: fix even_specT 1; only 1: eauto).	20.0488550663	18587
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40	2.0.5.30.23	synth with cache (only 1: assert (H : forall a b : Q, (0 < a)%Q -> (0 < b)%Q -> / a - / b == (b - a) / (a * b)) by (intros; field; Lqa.lra); only 1: generalize (Rlt_irrefl 0); only 1: unfold Qopp, Qeq, Q2R; only 1: intros; only 1: auto with real).	2.89768099785	4062
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40	3.0.0.0	synth with cache (only 1: fix odd_specT 1; only 1: intro n; only 1: intros H; only 1: auto).	0.0716500282288	7
Coq.micromega.RMicromega.is_neg_false	40	1.6.0.0.1.1.0.0.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: now try Nat.order'; only 1: intros H; only 1: now destruct Hn || easy; only 1: congruence; only 1: simpl; only 1: Z.swap_greater; only 1: Lia.lia).	10.5652809143	4513
Coq.micromega.RMicromega.Q2R_m_Proper	40	0.3.0.1	synth with cache (only 1: intros x y H; only 1: apply Qeq_true; only 1: rewrite Qeq_bool_iff; only 1: assumption).	0.769464969635	139
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0661449432373	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.pop2_bop2	40
Coq.micromega.RMicromega.Reval_op2_hold	40
Coq.micromega.RMicromega.Reval_pop2_eval_op2	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.QReval_formula_compat	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct f; only 1: simpl; only 1: rewrite Reval_op2_hold; only 1: apply Reval_pop2_eval_op2).	0.0739920139313	6
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40	7.24	synth with cache (only 1: fix even_spec 1; only 1: auto).	7.82647919655	8658
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40	1.3.8.0.0	synth with cache (only 1: intros m n v1; only 1: revert n; only 1: fix odd_spec 1; only 1: intros v; only 1: eauto).	8.54742002487	1026
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	13	synth with cache (only 1: congruence).	0.752935886383	357
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_hd	40
Coq.Vectors.VectorSpec.nth_order_tl	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.nth_order_ext	40	3.1.1.1.0.0.1.14	synth with cache (only 1: destruct n; only 1: unfold nth_order; only 1: intros a b Ha Hb; only 1: now simpl; only 1: intros k v H HS; only 1: rewrite (eta v); only 1: f_equal; only 1: apply Peano_dec.le_unique).	23.8890779018	21347
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.nth_order_replace_eq	40
Coq.Vectors.VectorSpec.nth_order_replace_neq	40
Coq.Vectors.VectorSpec.replace_id	40
Coq.Vectors.VectorSpec.replace_replace_eq	40
Coq.Vectors.VectorSpec.replace_replace_neq	40
Coq.Vectors.VectorSpec.const_nth	40	1.1.10	synth with cache (only 1: induction p as [| ? p]; only 1: now simpl; only 1: now simpl).	0.558572053909	259
Coq.Vectors.VectorSpec.map_id	40	7.0.0.0.2.6.4.27	synth with cache (only 1: intro l1; only 1: intro n; only 1: revert n; only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	10.7773530483	18292
Coq.Vectors.VectorSpec.map_map	40	0.2.0.2.2.0.0	synth with cache (only 1: intro l'; only 1: intros; only 1: induction v as [| ? ? v IHv]; only 1: reflexivity; only 1: simpl; only 1: rewrite IHv; only 1: auto).	0.61338019371	292
Coq.Vectors.VectorSpec.map_ext_in	40
Coq.Vectors.VectorSpec.map_ext	40	0.0.1.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: intuition).	0.133491039276	27
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.take_O	40	2.1	synth with cache (only 1: intros n m H1 H2; only 1: auto).	0.0219581127167	5
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.4.1.2.0.0.1.11.0	synth with cache (only 1: intros A p; only 1: induction p as [| p IHp]; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: simpl; only 1: destruct v; only 1: now subst; only 1: apply f_equal; only 1: auto).	23.7140128613	23803
Coq.Vectors.VectorSpec.uncons_cons	40	0.0	synth with cache (only 1: intros; only 1: now simpl).	0.0214779376984	2
Coq.Vectors.VectorSpec.append_comm_cons	40	0	synth with cache (only 1: now simpl).	0.0166280269623	1
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorSpec.Forall_impl	40	5.4.2.1.1.6.2	synth with cache (only 1: intros P Q H l; only 1: firstorder  (subst; auto); only 1: induction H0 as [x l H0| x l H0 IHExists]; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto).	4.25178289413	6338
Coq.Vectors.VectorSpec.Forall_forall	40
Coq.Vectors.VectorSpec.Forall_nth_order	40
Coq.Vectors.VectorSpec.Forall2_nth_order	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40	0.2.5.1.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: cbn; only 1: apply f_equal; only 1: easy).	0.974265098572	597
Coq.Vectors.VectorSpec.length_to_list	40	13.1.1.0.1	synth with cache (only 1: induction v; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intuition).	3.87793803215	2436
Coq.Vectors.VectorSpec.of_list_to_list_opp	40
Coq.Vectors.VectorSpec.to_list_nil	40	1	synth with cache (only 1: auto).	0.0154168605804	2
Coq.Vectors.VectorSpec.to_list_cons	40	2	synth with cache (only 1: constructor).	0.0188629627228	3
Coq.Vectors.VectorSpec.to_list_hd	40	0.0.0.0.0	synth with cache (only 1: rewrite 2!(eta v); only 1: simpl; only 1: generalize dependent n; only 1: apply caseS; only 1: now simpl).	0.0406370162964	5
Coq.Vectors.VectorSpec.to_list_last	40	0.1.5.1.1.0.0.1	synth with cache (only 1: generalize dependent n; only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: simpl; only 1: intros n; only 1: refine (@caseS _ _ _); only 1: intros; only 1: auto).	4.24601912498	1482
Coq.Vectors.VectorSpec.to_list_const	40	0.3.0.0.39	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: reflexivity; only 1: cbn; only 1: now f_equal).	0.578342914581	1136
Coq.Vectors.VectorSpec.to_list_nth_order	40
Coq.Vectors.VectorSpec.to_list_tl	40	0.1	synth with cache (only 1: apply (fun P IS => caseS P IS v); only 1: reflexivity).	0.0241611003876	3
Coq.Vectors.VectorSpec.to_list_append	40	1.1.7.2.1.9.0.0.5	synth with cache (only 1: revert n v1 v2; only 1: intro len1; only 1: intro l; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: f_equal; only 1: firstorder).	39.1411020756	26299
Coq.Vectors.VectorSpec.to_list_rev_append_tail	40
Coq.Vectors.VectorSpec.to_list_rev_append	40
Coq.Vectors.VectorSpec.to_list_rev	40
Coq.Vectors.VectorSpec.to_list_map	40	0.1.0.0.6	synth with cache (only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite to_list_cons; f_equal).	0.996731996536	378
Coq.Vectors.VectorSpec.to_list_fold_left	40
Coq.Vectors.VectorSpec.to_list_fold_right	40	0.4.0.1.3	synth with cache (only 1: induction v as [| ? ? v IHv]; only 1: reflexivity; only 1: cbn; only 1: rewrite IHv; only 1: auto).	0.385624170303	165
Coq.Vectors.VectorSpec.to_list_Forall	40
Coq.Vectors.VectorSpec.to_list_Exists	40
Coq.Vectors.VectorSpec.to_list_In	40
Coq.Vectors.VectorSpec.to_list_Forall2	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	15.0.2.98	synth with cache (only 1: induction n; only 1: Nat.nzsimpl; only 1: assumption; only 1: constructor).	6.66350483894	10741
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	3.4.10.10	synth with cache (only 1: intros H; only 1: intros Hp; only 1: fix odd_specT 1; only 1: easy).	11.0170810223	10075
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	1.1.3.12	synth with cache (only 1: intros x y; only 1: intro m; only 1: intros <-; only 1: exact y).	1.84892702103	1686
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.0.4.0.0.0.4.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: trivial).	4.30194497108	2030
Coq.rtauto.Bintree.map_app	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite map_app; only 1: auto).	0.0309898853302	4
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0.0	synth with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.049299955368	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	0	synth with cache (only 1: now intros []).	0.0173218250275	1
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	1.2.1.2	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0396630764008	13
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.0.16	synth with cache (only 1: inversion 1; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	0.737925052643	543
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40	0.6.0.16	synth with cache (only 1: intro q; only 1: fix even_specT 1; only 1: intros; only 1: auto).	5.91736912727	4354
Coq.rtauto.Rtauto.form_eq_refl	40	0.5.1.13	synth with cache (only 1: intro q; only 1: fix even_specT 1; only 1: intros; only 1: auto).	1.54711389542	1723
Coq.rtauto.Rtauto.with_env.compose0	40	6.0.5.1.6.12	synth with cache (only 1: intro e; only 1: induction F; only 1: destr_bool; only 1: intros; only 1: destruct S; only 1: eauto).	9.78252911568	13396
Coq.rtauto.Rtauto.with_env.compose1	40	12.1.1.1.3.14	synth with cache (only 1: intro e; only 1: induction F; only 1: intros A B f; only 1: auto; only 1: intros x y Hneq Hin; only 1: firstorder).	22.5534849167	30558
Coq.rtauto.Rtauto.with_env.compose2	40
Coq.rtauto.Rtauto.with_env.compose3	40	4.0.0.3.2.0	synth with cache (only 1: induction F; only 1: auto; only 1: intros HP HIS; only 1: intros A B C H; only 1: simpl; only 1: firstorder).	18.1134200096	742
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	9.5	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	2.49005913734	1594
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.0129888057709	1
Coq.Setoids.Setoid.Seq_sym	40	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0191011428833	2
Coq.Setoids.Setoid.Seq_trans	40	1.1.2.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.208813905716	74
Coq.Setoids.Setoid.gen_st	40	13	synth with cache (only 1: CRelationClasses.simpl_crelation).	1.0457868576	1035
Coq.Bool.IfProp.Iftrue_inv	40	0.2.1.2	synth with cache (only 1: destruct 1; only 1: auto; only 1: intuition; only 1: discriminate).	0.0256741046906	17
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.1.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.026426076889	7
Coq.Bool.IfProp.IfProp_true	40	0.40.3	synth with cache (only 1: intro b1; only 1: inversion 1; only 1: auto with bool).	12.4803540707	58351
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0419709682465	11
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.0279140472412	16
Coq.Bool.IfProp.IfProp_sum	40	0.0.6.0.0.5.12	synth with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).	3.80596590042	6010
Coq.Bool.BoolOrder.le_refl	40	4	synth with cache (only 1: destr_bool).	0.0134930610657	5
Coq.Bool.BoolOrder.le_trans	40	8	synth with cache (only 1: destr_bool).	0.0315961837769	20
Coq.Bool.BoolOrder.le_true	40	0	synth with cache (only 1: destr_bool).	0.013368844986	1
Coq.Bool.BoolOrder.false_le	40	0	synth with cache (only 1: destr_bool).	0.0118639469147	1
Coq.Bool.BoolOrder.le_compat	40	2.0.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: congruence; only 1: congruence; only 1: reduce; only 1: subst; only 1: firstorder).	0.0393960475922	20
Coq.Bool.BoolOrder.lt_irrefl	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0187599658966	2
Coq.Bool.BoolOrder.lt_trans	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0227689743042	2
Coq.Bool.BoolOrder.lt_compat	40	0	synth with cache (only 1: intuition).	0.0172328948975	1
Coq.Bool.BoolOrder.lt_trichotomy	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition; only 1: intuition).	0.058247089386	6
Coq.Bool.BoolOrder.lt_total	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.0396699905396	5
Coq.Bool.BoolOrder.lt_le_incl	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0195710659027	2
Coq.Bool.BoolOrder.le_lteq_dec	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).	0.0369820594788	4
Coq.Bool.BoolOrder.le_lteq	40	1.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0559089183807	9
Coq.Bool.BoolOrder.le_preorder	40	2.8.8.4.2	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: destr_bool; only 1: compute; only 1: destr_bool).	2.18779706955	3496
Coq.Bool.BoolOrder.lt_strorder	40	0.2.0.1.2.3	synth with cache (only 1: split; only 1: compute; only 1: destr_bool; only 1: intros b1 b2 b3; only 1: destr_bool; only 1: auto).	0.190584897995	147
Coq.Bool.Zerob.zerob_true_intro	40	3.1	synth with cache (only 1: intros; only 1: now subst).	0.0322000980377	6
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	synth with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: inversion 1).	0.0304870605469	3
Coq.Bool.Zerob.zerob_false_intro	40	3.1.2.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: intros; only 1: auto).	0.0366859436035	10
Coq.Bool.Zerob.zerob_false_elim	40	5.0.3.0	synth with cache (only 1: destruct n; only 1: intuition; only 1: intro m; only 1: auto).	0.572961091995	178
Coq.Bool.DecBool.ifdec_left	40	0.2.0.1.19	synth with cache (only 1: intros h1 h2; only 1: intros; only 1: destruct H; only 1: auto; only 1: contradiction).	7.70594191551	17277
Coq.Bool.DecBool.ifdec_right	40	1.9.1.0.0	synth with cache (only 1: intros A B C H **; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	4.11627411842	4625
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.11.10	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.191891908646	495
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.0.3.4	synth with cache (only 1: intros b; only 1: intro z; only 1: destruct b; only 1: auto; only 1: auto).	0.199544906616	165
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0214130878448	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0275709629059	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0209290981293	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	synth with cache (only 1: discriminate).	0.0096709728241	3
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00693798065186	1
Coq.Bool.Bool.eq_true_false_abs	40	1.1.13.5.1	synth with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.720509052277	1829
Coq.Bool.Bool.not_true_is_false	40	2.7.4.4	synth with cache (only 1: intro z; only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.64243721962	1298
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.011773109436	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.8.2	synth with cache (only 1: intro H; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.484858989716	668
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0210161209106	3
Coq.Bool.Bool.le_implb	40	0.0.1.6	synth with cache (only 1: intros; only 1: destruct b1; only 1: intuition; only 1: intuition).	0.265367984772	198
Coq.Bool.Bool.compare_spec	40	2.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0230298042297	7
Coq.Bool.Bool.eqb_subst	40	1	synth with cache (only 1: destr_bool).	0.0125710964203	2
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.011018037796	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.0096161365509	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0224781036377	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0976829528809	6
Coq.Bool.Bool.negb_orb	40	0	synth with cache (only 1: destr_bool).	0.0146400928497	1
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.00990915298462	1
Coq.Bool.Bool.negb_involutive	40	1.1.0.1	synth with cache (only 1: intro n; only 1: induction n; only 1: intuition; only 1: intuition).	0.0135219097137	7
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.008465051651	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.00979399681091	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.0108580589294	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.00847291946411	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.00824594497681	1
Coq.Bool.Bool.if_negb	40	0	synth with cache (only 1: destr_bool).	0.00833797454834	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.015398979187	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0162599086761	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0282890796661	8
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.030501127243	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).	0.0197579860687	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0.0.0	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0238509178162	6
Coq.Bool.Bool.orb_true_intro	40	1.0.0.0.0.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.0793371200562	51
Coq.Bool.Bool.orb_false_intro	40	1.1.3.0	synth with cache (only 1: intros; only 1: destruct b1; only 1: trivial; only 1: trivial).	0.0224869251251	9
Coq.Bool.Bool.orb_false_elim	40	0.0.3.0.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: auto).	0.0454668998718	34
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.00987410545349	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0078809261322	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00825905799866	1
Coq.Bool.Bool.orb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00917482376099	1
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00920796394348	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00819897651672	1
Coq.Bool.Bool.orb_negb_l	40	0	synth with cache (only 1: destr_bool).	0.0083110332489	1
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.00912308692932	1
Coq.Bool.Bool.orb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0145781040192	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0300891399384	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.033301115036	5
Coq.Bool.Bool.andb_true_eq	40	0.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.126111984253	68
Coq.Bool.Bool.andb_false_intro1	40	0	synth with cache (only 1: destr_bool).	0.0103559494019	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.014123916626	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.00847196578979	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00815606117249	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.00822401046753	1
Coq.Bool.Bool.andb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0083339214325	1
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00829291343689	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0533440113068	14
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00874400138855	1
Coq.Bool.Bool.andb_negb_l	40	0	synth with cache (only 1: destr_bool).	0.00806498527527	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.00958895683289	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0369250774384	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0157752037048	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0145390033722	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0145399570465	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0140960216522	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.0115258693695	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.00980091094971	1
Coq.Bool.Bool.implb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0257368087769	5
Coq.Bool.Bool.implb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0322239398956	5
Coq.Bool.Bool.implb_orb	40	0	synth with cache (only 1: destr_bool).	0.0126800537109	1
Coq.Bool.Bool.implb_negb_orb	40	0	synth with cache (only 1: destr_bool).	0.0101089477539	1
Coq.Bool.Bool.implb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00860095024109	1
Coq.Bool.Bool.implb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00818204879761	1
Coq.Bool.Bool.implb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00977802276611	1
Coq.Bool.Bool.implb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00860500335693	1
Coq.Bool.Bool.implb_same	40	0	synth with cache (only 1: destr_bool).	0.00997090339661	1
Coq.Bool.Bool.implb_contrapositive	40	0	synth with cache (only 1: destr_bool).	0.00986409187317	1
Coq.Bool.Bool.implb_negb	40	0	synth with cache (only 1: destr_bool).	0.0102488994598	1
Coq.Bool.Bool.implb_curry	40	0	synth with cache (only 1: destr_bool).	0.013237953186	1
Coq.Bool.Bool.implb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0165610313416	1
Coq.Bool.Bool.implb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.014221906662	1
Coq.Bool.Bool.implb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0147528648376	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0115630626678	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0101599693298	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00863003730774	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.0076949596405	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.00942707061768	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.00948596000671	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.0130898952484	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.0126140117645	1
Coq.Bool.Bool.xorb_move_l_r_1	40	6.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0232281684875	12
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0160510540009	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0155460834503	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0160038471222	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.0117449760437	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0	synth with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0215220451355	6
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.0111110210419	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0341229438782	5
Coq.Bool.Bool.eq_true_iff_eq	40	2.2.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0329570770264	22
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0127079486847	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0130078792572	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0164079666138	5
Coq.Bool.Bool.absurd_eq_true	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0109918117523	3
Coq.Bool.Bool.trans_eq_bool	40	0	synth with cache (only 1: destr_bool).	0.0147190093994	1
Coq.Bool.Bool.Is_true_eq_true	40	1.1	synth with cache (only 1: destr_bool; only 1: intuition).	0.0118589401245	4
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.00938200950623	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0123560428619	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.00771188735962	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0155777931213	3
Coq.Bool.Bool.orb_prop_elim	40	2.0.4.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: auto; only 1: simpl; only 1: auto).	0.386854171753	382
Coq.Bool.Bool.orb_prop_intro	40	0.0.0.0.0.2	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.0315210819244	25
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0173258781433	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0215780735016	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0189819335938	3
Coq.Bool.Bool.eq_bool_prop_elim	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0199799537659	5
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0147280693054	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0112900733948	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.01203083992	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0139558315277	3
Coq.Bool.Bool.andb_if	40	0.0	synth with cache (only 1: intro n; only 1: destr_bool).	0.0127680301666	2
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.00948596000671	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.0105412006378	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.00732898712158	1
Coq.Bool.Bool.reflect_iff	40	1.0.0.15.0.12	synth with cache (only 1: induction 1 as [| m _]; only 1: intuition; only 1: split; only 1: destr_bool; only 1: intuition; only 1: discriminate).	8.08359313011	16787
Coq.Bool.Bool.iff_reflect	40	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0269598960876	15
Coq.Bool.Bool.reflect_dec	40	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0179119110107	5
Coq.Bool.Bool.eqb_spec	40	1.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0197861194611	6
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	2.5.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).	0.019702911377	10
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	13.0.0.0.0.1.1.0	synth with cache (only 1: simple induction x; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	37.5958271027	26001
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	1.1.1.0.0.2.0.16.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: intuition; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: intros H; only 1: auto with datatypes; only 1: intros H; only 1: auto).	9.42786693573	14506
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	6.0.0.0.2.0.0.0.0.1.0	synth with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes; only 1: now intuition subst).	22.6515519619	11128
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	0.0.0.0.3.0.2.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).	15.8033499718	7474
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	3.0.2	synth with cache (only 1: intros H H0 H1 [| ]; only 1: auto with datatypes; only 1: auto with datatypes).	0.133102893829	66
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	3.50497913361	1537
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40	0.0.1.1.0.0.7.1.0.7	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: tauto; only 1: simpl; only 1: tauto).	11.710299015	5259
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.2.0.5.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	1.76570010185	772
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.0.1.2.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.115608215332	17
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	2.71399784088	742
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0370259284973	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	1.1.3.0	synth with cache (only 1: simple induction y; only 1: eauto with datatypes; only 1: intros; only 1: eauto with datatypes).	0.315696954727	26
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	0.0.0.0.1.0	synth with cache (only 1: induction l as [| y l IHl]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	0.0467388629913	7
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.7	synth with cache (only 1: intros [x y]; only 1: auto).	0.0185289382935	9
Coq.Lists.Streams.Streams.tl_nth_tl	40	1.0.0.0.0.7.10	synth with cache (only 1: intro; only 1: induction n; only 1: intro x; only 1: case x; only 1: trivial; only 1: simpl; only 1: trivial).	8.38617801666	8628
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	7.3.14	synth with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto).	2.26234602928	4050
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	8.12.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.405127048492	632
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.122043848038	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.116933107376	4
Coq.Lists.Streams.Map.ForAll_map	40	0.7.7.0.5.9.9.15	synth with cache (only 1: intros h1 h2; only 1: split; only 1: intros [? ?]; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: assumption; only 1: intros [? ?]; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: assumption).	36.2225148678	37190
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	4.1.0.1.7	synth with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: intros m hypind; only 1: trivial).	1.96765184402	1254
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0353419780731	7
Coq.Lists.List.Facts.nil_cons	40	21	synth with cache (only 1: discriminate).	0.0870449542999	208
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.13.0.1.1	synth with cache (only 1: destruct l as [| x xs]; only 1: intro m; only 1: discriminate; only 1: red; only 1: easy).	2.08951401711	1643
Coq.Lists.List.Facts.length_zero_iff_nil	40	2.9.0	synth with cache (only 1: destruct l; only 1: intuition; only 1: easy).	1.01529288292	470
Coq.Lists.List.Facts.hd_error_nil	40	2	synth with cache (only 1: reflexivity).	0.0177798271179	3
Coq.Lists.List.Facts.hd_error_cons	40	0	synth with cache (only 1: easy).	0.0151259899139	1
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	0	synth with cache (only 1: split).	0.0162951946259	1
Coq.Lists.List.Facts.app_nil_r	40
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0407259464264	7
Coq.Lists.List.Facts.app_assoc	40
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0437951087952	6
Coq.Lists.List.Facts.app_comm_cons	40	0.0	synth with cache (only 1: simpl; only 1: split).	0.0223009586334	2
Coq.Lists.List.Facts.app_eq_nil	40
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.elt_eq_unit	40
Coq.Lists.List.Facts.app_eq_app	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_inj_tail_iff	40
Coq.Lists.List.Facts.app_length	40	0.1.0.12.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: split; only 1: simpl; only 1: now Morphisms.f_equiv).	0.85829615593	599
Coq.Lists.List.Facts.last_length	40	1.1.0.0.0.1	synth with cache (only 1: intro l; only 1: induction l; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: auto).	0.0480778217316	9
Coq.Lists.List.Facts.app_inv_head_iff	40	5.0.10.5.0	synth with cache (only 1: intros n m p; only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	25.5298719406	22519
Coq.Lists.List.Facts.app_inv_head	40	0.0.1.5.1.1	synth with cache (only 1: induction l as [| ? l IHl]; only 1: Bool.destr_bool; only 1: intros; only 1: apply IHl; only 1: inversion H; only 1: auto).	1.20446705818	681
Coq.Lists.List.Facts.app_inv_tail	40	0.16.20.3	synth with cache (only 1: intro l; only 1: intros H; only 1: fix even_specT 1; only 1: auto).	38.8767719269	69089
Coq.Lists.List.Facts.app_inv_tail_iff	40	0.1.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: split; only 1: now rewrite !app_nil_r; only 1: now rewrite !app_nil_r; only 1: split; only 1: change (a :: l) with ([a] ++ l); only 1: rewrite !app_assoc; only 1: now intros [? ?]%app_inj_tail_iff%IHl; only 1: intros H; only 1: subst; only 1: auto).	4.45337295532	2693
Coq.Lists.List.Facts.in_eq	40	9.2	synth with cache (only 1: intros y Ryx; only 1: CRelationClasses.simpl_crelation).	0.126463890076	103
Coq.Lists.List.Facts.in_cons	40	0.0.3	synth with cache (only 1: intros l; only 1: simpl; only 1: auto).	0.038635969162	17
Coq.Lists.List.Facts.not_in_cons	40	0.3.3.2.4	synth with cache (only 1: simpl in *; only 1: induction l; only 1: intuition; only 1: simpl; only 1: intuition Nat.order).	1.00096106529	484
Coq.Lists.List.Facts.in_nil	40	0.0	synth with cache (only 1: intro n; only 1: firstorder).	0.0171802043915	2
Coq.Lists.List.Facts.in_app_or	40	23.1.2	synth with cache (only 1: induction l as [| ? l IHl]; only 1: auto; only 1: firstorder).	28.5541861057	21113
Coq.Lists.List.Facts.in_or_app	40	0.0.0.0.0.0	synth with cache (only 1: intros l m a; only 1: induction l; only 1: cbn; only 1: tauto; only 1: cbn; only 1: tauto).	0.0597679615021	6
Coq.Lists.List.Facts.in_app_iff	40	0.0.0.0.0.0	synth with cache (only 1: intros l m a; only 1: induction l; only 1: cbn; only 1: tauto; only 1: cbn; only 1: tauto).	0.0994970798492	6
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_elt	40	1.5.1.7.6.0	synth with cache (only 1: intros x l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.1919491291	1609
Coq.Lists.List.Facts.in_elt_inv	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0175330638885	1
Coq.Lists.List.Facts.in_dec	40	15.0.1.4.2	synth with cache (only 1: intros n m; only 1: intros; only 1: induction l as [| a tail]; only 1: now right; only 1: firstorder).	5.89916610718	5013
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	1.0.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: right; only 1: auto).	0.0252530574799	4
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.app_nth2_plus	40	0.1.3.0	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: auto; only 1: simpl; only 1: apply IHl).	0.287835121155	57
Coq.Lists.List.Elts.nth_middle	40	0.0.0.1.3.3	synth with cache (only 1: intro l; only 1: intros d H; only 1: induction l as [| ? ? IHl]; only 1: auto; only 1: simpl; only 1: auto).	0.914358854294	350
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_ext	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40	0.0.2.4.4.0.1	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: inversion 1; only 1: intros [| n] d d'; only 1: reflexivity; only 1: apply IHl; only 1: now apply Nat.succ_lt_mono).	11.3731720448	6268
Coq.Lists.List.Elts.last_last	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.removelast_last	40
Coq.Lists.List.Elts.remove_cons	40
Coq.Lists.List.Elts.remove_app	40
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.notin_remove	40
Coq.Lists.List.Elts.in_remove	40
Coq.Lists.List.Elts.in_in_remove	40
Coq.Lists.List.Elts.remove_remove_comm	40
Coq.Lists.List.Elts.remove_remove_eq	40
Coq.Lists.List.Elts.remove_length_le	40
Coq.Lists.List.Elts.remove_length_lt	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	1	synth with cache (only 1: auto).	0.0153911113739	2
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	0.0.2.5	synth with cache (only 1: simpl; only 1: destruct (eq_dec x y); only 1: intuition apply Nat.lt_0_succ; only 1: intuition apply Nat.lt_0_succ).	0.0934691429138	32
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0306510925293	3
Coq.Lists.List.Elts.count_occ_app	40
Coq.Lists.List.Elts.count_occ_elt_eq	40	1.0.0.1.0.0.1.47	synth with cache (only 1: destruct 1; only 1: induction l1 as [| h l1 IHl1]; only 1: cbn; only 1: destruct (eq_dec x x); only 1: reflexivity; only 1: now exfalso; only 1: cbn; only 1: now destruct (eq_dec h x); [ rewrite IHl1 |  ]).	3.44300484657	5907
Coq.Lists.List.Elts.count_occ_elt_neq	40	1.0.0.2	synth with cache (only 1: rewrite ?count_occ_app; only 1: cbn; only 1: intros Hnin; only 1: now destruct (eq_dec x y)).	0.0896990299225	22
Coq.Lists.List.Elts.count_occ_bound	40
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	1.4.2.0.1.0.13	synth with cache (only 1: induction l as [| a l IHl]; only 1: intro n; only 1: auto; only 1: simpl; only 1: intro n; only 1: rewrite IHl; only 1: auto).	8.29635906219	5377
Coq.Lists.List.ListOps.rev_involutive	40	0.13.0.0.4.1.0.3.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: destruct l as [| a0 l]; only 1: apply rev_app_distr; only 1: simpl; only 1: rewrite <- IHl by assumption; only 1: apply rev_app_distr).	32.388780117	33889
Coq.Lists.List.ListOps.rev_eq_app	40
Coq.Lists.List.ListOps.rev_list_ind	40	17.3.1	synth with cache (only 1: induction l as [| ? l IHl]; only 1: easy; only 1: auto).	2.72465991974	3327
Coq.Lists.List.ListOps.rev_ind	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40	1.0.0.0.0.0.0.2.14	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: rewrite Nat.add_succ_r, Nat.add_0_r; only 1: auto).	36.1234970093	29239
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.concat_nil	40	1	synth with cache (only 1: reflexivity).	0.0135049819946	2
Coq.Lists.List.ListOps.concat_cons	40	1.0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: simpl; only 1: intro l; only 1: trivial; only 1: intros; only 1: firstorder).	0.0456171035767	9
Coq.Lists.List.ListOps.concat_app	40	0.5.1.0.0.1.0.2.2	synth with cache (only 1: intro l; only 1: induction l; only 1: intros l2; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite <- app_assoc; only 1: f_equal; only 1: firstorder).	10.1991128922	6107
Coq.Lists.List.ListOps.in_concat	40	1.31	synth with cache (only 1: fix Even_Odd_double 1; only 1: easy).	21.2288780212	30295
Coq.Lists.List.ListOps.list_eq_dec	40	22	synth with cache (only 1: decide equality).	4.05203700066	4886
Coq.Lists.List.ListOps.count_occ_rev	40
Coq.Lists.List.Map.map_cons	40	0	synth with cache (only 1: reflexivity).	0.0141570568085	1
Coq.Lists.List.Map.in_map	40
Coq.Lists.List.Map.in_map_iff	40	0.1.1.1.3.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: split; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: intro n; only 1: firstorder  (subst; auto)).	1.24369692802	744
Coq.Lists.List.Map.map_length	40	1.0.1.0.0.0	synth with cache (only 1: firstorder  (subst; auto); only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto).	0.0406379699707	8
Coq.Lists.List.Map.map_nth	40	0.0.0.1.0.0.0.1.0.10.4	synth with cache (only 1: intros l d; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intro l; only 1: induction l; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: simpl; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	35.2186439037	32627
Coq.Lists.List.Map.nth_error_map	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	5.0.3.1.0	synth with cache (only 1: intros x y; only 1: induction x as [| a l IHl]; only 1: reflexivity; only 1: cbn; only 1: now f_equal).	1.26130890846	757
Coq.Lists.List.Map.map_last	40	0.0.3.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: firstorder; only 1: rewrite IHl; only 1: auto).	0.0539829730988	10
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	2.0	synth with cache (only 1: intro l; only 1: now destruct l).	0.0321731567383	12
Coq.Lists.List.Map.map_eq_cons	40
Coq.Lists.List.Map.map_eq_app	40
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.FlatMap.flat_map_concat_map	40	0.5.0.0.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.479220867157	153
Coq.Lists.List.FlatMap.flat_map_app	40
Coq.Lists.List.FlatMap.in_flat_map	40
Coq.Lists.List.concat_map	40
Coq.Lists.List.remove_concat	40
Coq.Lists.List.map_id	40	2.1.0.0.0.3.3	synth with cache (only 1: firstorder  (subst; auto); only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.76977205276	1100
Coq.Lists.List.map_map	40	0.0.0.1.0.11.3	synth with cache (only 1: intros a b c ? ? ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	6.04562401772	4594
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.15	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	16.3754999638	15157
Coq.Lists.List.map_ext	40	0.0.1	synth with cache (only 1: intros n IH a b Ha H; only 1: apply map_ext_in; only 1: auto).	0.0316331386566	13
Coq.Lists.List.flat_map_ext	40	0.1.3.0.6.0.0.10.2	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: destruct l; only 1: auto; only 1: auto; only 1: auto).	12.3260121346	16995
Coq.Lists.List.nth_nth_nth_map	40
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	1.4.1.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: intros l a; only 1: f_equal; only 1: simpl; only 1: intros; only 1: apply IHl).	1.51078987122	840
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.1.1.0.0.0.1.4.2	synth with cache (only 1: intro k; only 1: intros x l1; only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: reflexivity; only 1: intros d n; only 1: simpl; only 1: f_equal; only 1: firstorder).	4.20451402664	2871
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40	5.0.3.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite IHl; only 1: now destruct (f a)).	10.2346379757	5453
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	1.0.0.0.0.0.0.0.0.1.5	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros l2; only 1: solve [ auto ]; only 1: simpl; only 1: intros; only 1: case (f a); only 1: rewrite IHl; only 1: solve [ auto ]; only 1: solve [ auto ]).	4.92126488686	1852
Coq.Lists.List.Bool.filter_In	40	0.11.6	synth with cache (only 1: intro y; only 1: fix odd_spec 1; only 1: eauto with bool).	11.8178749084	6427
Coq.Lists.List.Bool.filter_app	40	2.1.0.1.15.0.1.8	synth with cache (only 1: induction l; only 1: reflexivity; only 1: cbn; only 1: case (f a); only 1: rewrite IHl; only 1: cbn; only 1: auto; only 1: auto).	12.1124739647	10695
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40	8.2.0.4.0.0.0.1	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct (f a) eqn:Ha; only 1: injection 1; only 1: intuition congruence; only 1: firstorder  (subst; auto)).	14.9987010956	9491
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40	4.19.3	synth with cache (only 1: cbn; only 1: fix odd_specT 1; only 1: firstorder  (subst; auto)).	6.52286720276	5461
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.120143175125	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_ext_in	40	0.2.1.8.0.0.0.0.10	synth with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto; only 1: auto).	12.6096220016	13439
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext	40	0.7.1	synth with cache (only 1: Bool.destr_bool; only 1: apply filter_ext_in; only 1: auto).	0.123235940933	57
Coq.Lists.List.Filtering.remove_alt	40
Coq.Lists.List.Filtering.count_occ_alt	40	0.2.1.1.0.0.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: cbn; only 1: destruct eq_dec as [->| Hneq]; only 1: simpl; only 1: auto; only 1: intuition).	2.27889204025	844
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| [? ?] l IHl]; only 1: easy; only 1: intros [? ?]; only 1: cbn; only 1: now intros [[=]| ?%IHl]; destruct (split l); [ left | right ]).	0.0499830245972	6
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.197687864304	9
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40	2.4.1.2.0.0.0.1.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct l' as [| a0 l']; only 1: auto; only 1: simpl; only 1: auto).	18.7005310059	9953
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	4.2.0.9	synth with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: trivial; only 1: firstorder  (subst; auto)).	1.13672399521	1136
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	5.0.12.4	synth with cache (only 1: induction l; only 1: red; only 1: auto; only 1: left).	0.578263998032	574
Coq.Lists.List.length_order.lel_trans	40
Coq.Lists.List.length_order.lel_cons_cons	40	16.22.13	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: now apply Nat.succ_le_mono; only 1: now apply Nat.succ_lt_mono).	7.46333408356	9939
Coq.Lists.List.length_order.lel_cons	40	1.5.6.12.12.7	synth with cache (only 1: intros H; only 1: induction l; only 1: right; only 1: easy; only 1: right; only 1: assumption).	7.80212497711	12301
Coq.Lists.List.length_order.lel_tail	40	0	synth with cache (only 1: now intros ?%Nat.succ_le_mono).	0.0153520107269	1
Coq.Lists.List.length_order.lel_nil	40	4.0.25	synth with cache (only 1: intros [| ] ?; only 1: reflexivity; only 1: inversion H).	4.35907077789	5914
Coq.Lists.List.SetIncl.incl_nil_l	40	15.0	synth with cache (only 1: intros H; only 1: firstorder).	0.655630111694	641
Coq.Lists.List.SetIncl.incl_l_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: solve [ auto ]).	0.0140280723572	2
Coq.Lists.List.SetIncl.incl_tl	40	1.0.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: cbn; only 1: eauto).	0.024560213089	4
Coq.Lists.List.SetIncl.incl_tran	40	0.1.1	synth with cache (only 1: intros l; only 1: intro l1; only 1: auto).	0.225322961807	49
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.0155510902405	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0156059265137	1
Coq.Lists.List.SetIncl.incl_cons	40	1.1.4.8	synth with cache (only 1: intro n; only 1: intros [| x l] H; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	2.05388998985	1239
Coq.Lists.List.SetIncl.incl_cons_inv	40	1	synth with cache (only 1: auto with datatypes).	0.0158169269562	2
Coq.Lists.List.SetIncl.incl_app	40	2.0.1.5.4	synth with cache (only 1: intros l m a; only 1: induction l; only 1: intros H; only 1: auto; only 1: firstorder  (subst; auto)).	4.35033512115	1686
Coq.Lists.List.SetIncl.incl_app_app	40	1.4.2	synth with cache (only 1: intros l; only 1: intros l' H; only 1: auto).	1.31827092171	68
Coq.Lists.List.SetIncl.incl_app_inv	40	9.4.0	synth with cache (only 1: unfold incl; only 1: intro l; only 1: auto using in_app_or, in_or_app).	1.58208703995	1045
Coq.Lists.List.SetIncl.incl_filter	40
Coq.Lists.List.SetIncl.remove_incl	40
Coq.Lists.List.incl_map	40
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.25	synth with cache (only 1: destruct n; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.461795091629	696
Coq.Lists.List.Cutting.firstn_cons	40	0	synth with cache (only 1: now simpl).	0.015615940094	1
Coq.Lists.List.Cutting.firstn_all	40	0.0.1.1.4	synth with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: auto).	0.203569173813	93
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0	synth with cache (only 1: now simpl).	0.0151221752167	1
Coq.Lists.List.Cutting.firstn_le_length	40
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40	1.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: induction n as [| k iHk]; only 1: intros x y; only 1: cbn; only 1: reflexivity; only 1: cbn; only 1: intros [| x l] H; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: f_equal; only 1: apply iHk).	8.26327681541	4604
Coq.Lists.List.Cutting.firstn_app_2	40	2.0.0.0.0.0.0.3	synth with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: intros; only 1: now simpl; only 1: simpl; only 1: intros; only 1: f_equal; only 1: firstorder).	2.42718887329	1044
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: cbn; only 1: auto).	0.0967810153961	5
Coq.Lists.List.Cutting.skipn_nil	40	0.0.16	synth with cache (only 1: intros [| n]; only 1: now simpl; only 1: now simpl).	0.291655063629	346
Coq.Lists.List.Cutting.skipn_cons	40	0.3	synth with cache (only 1: simpl; only 1: now simpl).	0.0859689712524	5
Coq.Lists.List.Cutting.skipn_all	40	1.0.0.0.2.1	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.0409190654755	10
Coq.Lists.List.Cutting.skipn_all2	40	0.0.0.0.2.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro l; only 1: now destruct l; only 1: simpl; only 1: intros [| a l] H; only 1: f_equal; only 1: apply iHk; only 1: now apply Nat.succ_le_mono).	0.177691936493	41
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40
Coq.Lists.List.Cutting.skipn_length	40	2.0.0.0.0.0.3.0	synth with cache (only 1: induction n; only 1: now intro l; induction l; only 1: intro l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: exact (IHn l)).	7.21892404556	2535
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: reflexivity; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.071084022522	9
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.removelast_firstn_len	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.CuttingMap.firstn_map	40
Coq.Lists.List.CuttingMap.skipn_map	40	0.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: intros []; only 1: simpl; only 1: f_equal; only 1: repeat split; only 1: intros []; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial).	4.88759207726	1850
Coq.Lists.List.Combining.combine_nil	40	1	synth with cache (only 1: now intros []).	0.016028881073	2
Coq.Lists.List.Combining.combine_firstn_l	40
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.0.2.0.0.0.6.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: now rewrite ?firstn_nil; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: simpl; only 1: auto; only 1: simpl; only 1: specialize IHl with l'; only 1: rewrite <- IHl; only 1: reflexivity).	18.2837200165	10803
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40	4.36.0.1.8.7.70.176	synth with cache (only 1: revert a; only 1: intro z; only 1: induction l1 as [| h l1 IHl1]; only 1: simpl; only 1: left; only 1: cbn; only 1: right; only 1: auto).	31.6292898655	137057
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40
Coq.Lists.List.Add.Add_length	40	0.0.1.1.0.11	synth with cache (only 1: rewrite <- Nat.add_0_r  at 1; only 1: induction 1 as [l| x ? ? ? IHAdd]; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: auto).	2.00554919243	1153
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	0.0	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0215308666229	2
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0456740856171	4
Coq.Lists.List.ReDun.NoDup_rev	40
Coq.Lists.List.ReDun.NoDup_filter	40
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.nodup_incl	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.ReDun.NoDup_incl_NoDup	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.cons_seq	40	0.0.0	synth with cache (only 1: intros a n; only 1: simpl; only 1: reflexivity).	0.0262331962585	3
Coq.Lists.List.NatSeq.seq_length	40	2.0.0.0.0.2.6	synth with cache (only 1: intro l; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: intro l; only 1: simpl; only 1: auto).	1.79212617874	1067
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.NatSeq.seq_S	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.6.2.0	synth with cache (only 1: split; only 1: intro l; only 1: easy; only 1: inversion_clear 1).	0.0555779933929	65
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	0.0.0.1.1.4	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: intros H; only 1: firstorder).	0.192784070969	58
Coq.Lists.List.Exists_Forall.One_predicate.Exists_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_fold_right	40	2.0.0.0.0.0.0.1.2.1	synth with cache (only 1: induction l; only 1: simpl; only 1: abstract now rewrite Exists_nil; only 1: simpl; only 1: rewrite <- IHl; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intuition).	4.55070900917	2277
Coq.Lists.List.Exists_Forall.One_predicate.incl_Exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.0.2.7	synth with cache (only 1: intro n; only 1: intro l; only 1: inversion 1; only 1: auto).	0.438101053238	149
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv_tail	40	0.0.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: trivial).	0.0279140472412	3
Coq.Lists.List.Exists_Forall.One_predicate.Forall_nil_iff	40	0.0.1.0.0	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: constructor).	0.0343248844147	6
Coq.Lists.List.Exists_Forall.One_predicate.Forall_cons_iff	40	0.0.0.0.0.1	synth with cache (only 1: intros x l; only 1: split; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: auto).	0.0435547828674	7
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_app	40	0.5.1.0.0.0.0.0.0.1.0	synth with cache (only 1: induction l1; only 1: easy; only 1: simpl; only 1: split; only 1: intros HE; only 1: inversion_clear HE; only 1: intuition; only 1: intros HE; only 1: intuition; only 1: inversion H; only 1: intuition).	20.966766119	11243
Coq.Lists.List.Exists_Forall.One_predicate.Forall_elt	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_fold_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	0.0774989128113	9
Coq.Lists.List.Exists_Forall.One_predicate.incl_Forall	40
Coq.Lists.List.Exists_Forall.map_ext_Forall	40
Coq.Lists.List.Exists_Forall.Exists_impl	40
Coq.Lists.List.Exists_Forall.Exists_or	40
Coq.Lists.List.Exists_Forall.Exists_or_inv	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.0.0.10.0	synth with cache (only 1: intros P Q H l H0; only 1: apply Forall_forall; only 1: induction H0 as [x l H0| x l H0 IHExists]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.571525096893	494
Coq.Lists.List.Exists_Forall.Forall_and	40
Coq.Lists.List.Exists_Forall.Forall_and_inv	40
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.162446975708	10
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.incl_Forall_in_iff	40
Coq.Lists.List.Exists_map	40
Coq.Lists.List.Exists_concat	40
Coq.Lists.List.Exists_flat_map	40
Coq.Lists.List.Forall_map	40
Coq.Lists.List.Forall_concat	40
Coq.Lists.List.Forall_flat_map	40
Coq.Lists.List.exists_Forall	40	0.0.4.2.0.1.1.2.0.3.9	synth with cache (only 1: intros m; only 1: induction l as [| a l IHl]; only 1: intros HE; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: inversion H; only 1: constructor; only 1: subst; only 1: inversion H; only 1: firstorder; only 1: firstorder).	23.2720229626	31780
Coq.Lists.List.Forall_image	40
Coq.Lists.List.concat_nil_Forall	40
Coq.Lists.List.in_flat_map_Exists	40
Coq.Lists.List.notin_flat_map_Forall	40
Coq.Lists.List.Forall2.Forall2_refl	40	3	synth with cache (only 1: constructor).	0.0192317962646	4
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	0.2.1.14.1.5	synth with cache (only 1: revert n; only 1: intro l; only 1: induction l as [| ? ? H]; only 1: easy; only 1: simpl; only 1: now f_equal).	1.4959461689	1572
Coq.Lists.List.Repeat.repeat_spec	40	3.2.0.0.2.1.33	synth with cache (only 1: induction n; only 1: CRelationClasses.simpl_crelation; only 1: simpl; only 1: destruct 1; only 1: subst; only 1: auto; only 1: auto).	1.24038100243	2261
Coq.Lists.List.Repeat.repeat_cons	40	1.0.1.0.15	synth with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: auto).	0.796663045883	695
Coq.Lists.List.Repeat.repeat_app	40	1.5.4.0	synth with cache (only 1: induction n as [| n IHn]; only 1: auto; only 1: simpl; only 1: now f_equal).	0.702945947647	365
Coq.Lists.List.Repeat.repeat_eq_app	40
Coq.Lists.List.Repeat.repeat_eq_cons	40
Coq.Lists.List.Repeat.repeat_eq_elt	40
Coq.Lists.List.Repeat.Forall_eq_repeat	40
Coq.Lists.List.Repeat.count_occ_repeat_eq	40
Coq.Lists.List.Repeat.count_occ_repeat_neq	40
Coq.Lists.List.Repeat.count_occ_unique	40
Coq.Lists.List.Repeat.count_occ_repeat_excl	40
Coq.Lists.List.Repeat.count_occ_sgt	40
Coq.Lists.List.Repeat.nth_repeat	40
Coq.Lists.List.Repeat.nth_error_repeat	40
Coq.Lists.List.repeat_to_concat	40	10.7.3.2.44	synth with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	6.42883300781	8784
Coq.Lists.List.list_sum_app	40
Coq.Lists.List.list_max_app	40
Coq.Lists.List.list_max_le	40
Coq.Lists.List.list_max_lt	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.0.1	synth with cache (only 1: repeat red; only 1: intros; only 1: auto).	0.067929983139	5
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	2.0.1.1.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl in *; only 1: intuition; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	2.74037504196	118
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	10.0.0.5.2.1.2.24	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: easy; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).	26.1480519772	18553
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.1.3.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	0.086165189743	8
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0239508152008	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	1.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').	0.0515220165253	7
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.0323188304901	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.2.0.0.0.0.0	synth with cache (only 1: intros a l H; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.0763490200043	13
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.1.1	synth with cache (only 1: constructor; only 1: inversion 1; only 1: induction 1).	0.0589430332184	26
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.0.0.0.0.2.3	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.848281860352	379
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40	1.12	synth with cache (only 1: fix Odd_alt_Odd 1; only 1: solve [ auto ]).	0.888242006302	482
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.0.0.11	synth with cache (only 1: destruct l; only 1: inversion 1; only 1: constructor; only 1: invlist InA).	0.196280956268	142
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.0.0.8.0.0.1	synth with cache (only 1: split; only 1: induction 1; only 1: easy; only 1: auto; only 1: induction 1; only 1: firstorder using Sorted_inv; only 1: auto).	2.16878914833	1318
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	8.3.3.0.0.1.7	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: intros l' Hnd Hlen Hincl; only 1: invlist InA; only 1: intro l'; only 1: intuition; only 1: rewrite <- H; only 1: auto).	39.5226800442	10711
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.1.1.2.0.0.3	synth with cache (only 1: induction l as [| a l IHl]; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros b [<-| Hbl]; only 1: constructor; only 1: auto; only 1: auto).	1.21214294434	435
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.10.2	synth with cache (only 1: compute; only 1: firstorder; only 1: invlist InA; only 1: auto).	1.3004989624	319
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	2.2.0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: split; only 1: firstorder; only 1: firstorder  (subst; auto)).	0.0861928462982	8
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	2.1.0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: split; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.181174993515	7
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	1.0.10.0	synth with cache (only 1: constructor; only 1: intuition; only 1: inv; only 1: constructor).	0.187496900558	134
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.13	synth with cache (only 1: intros H; only 1: rewrite !InA_cons; only 1: tauto).	0.786014795303	207
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0909659862518	4
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.4	synth with cache (only 1: intros E; only 1: rewrite InA_app_iff; only 1: tauto).	0.0346500873566	7
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	0.0.0.0.0.0.0.18.3.2	synth with cache (only 1: intros s1; only 1: intros s2 x; only 1: intros y Hy; only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	15.4358329773	11493
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	8.0.1.1.0	synth with cache (only 1: intros l; only 1: intros x a0 **; only 1: induction l as [| a l IHl]; only 1: constructor; only 1: intuition).	3.66497397423	1682
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.1.0.1.0.0	synth with cache (only 1: intros l; only 1: induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0673031806946	9
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	1.0.0.0.1.1.0	synth with cache (only 1: intros l; only 1: destruct l; only 1: intros x a **; only 1: eauto; only 1: constructor; only 1: inv; only 1: eauto).	0.084942817688	11
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.0.1.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0500349998474	6
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.0.0.0.0	synth with cache (only 1: intros x y ?; only 1: rewrite <- (app_nil_r (rev x)), <- (app_nil_r (rev y)); only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.0551340579987	5
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	3.2	synth with cache (only 1: decide equality; only 1: decide equality).	0.343229055405	122
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0205731391907	2
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0155379772186	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0356380939484	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	synth with cache (only 1: auto).	0.0145769119263	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0168130397797	2
Coq.NArith.BinNat.N.two_succ	40	0	synth with cache (only 1: reflexivity).	0.009840965271	1
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0086350440979	1
Coq.NArith.BinNat.N.pos_pred_spec	40	1.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intuition PeanoNat.Nat.Private_Tac.order).	0.0307641029358	8
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.6	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0220730304718	10
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.2.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition PeanoNat.Nat.Private_Tac.order; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	13.528845787	10830
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	1.67941808701	946
Coq.NArith.BinNat.N.pred_succ	40	0.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0229330062866	4
Coq.NArith.BinNat.N.pred_sub	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0213990211487	3
Coq.NArith.BinNat.N.succ_0_discr	40	1	synth with cache (only 1: now destruct n).	0.042552947998	17
Coq.NArith.BinNat.N.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0148899555206	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.0158340930939	1
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0151190757751	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	5.5.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	2.73274707794	1728
Coq.NArith.BinNat.N.ltb_lt	40	2.3.1.0.4.2.0.1	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: fix even_spec 1; only 1: destruct m; only 1: now split; only 1: now split; only 1: fix even_spec 1; only 1: destr_bool).	21.5926499367	17191
Coq.NArith.BinNat.N.leb_le	40	4.3.0.3.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: rewrite even_spec; only 1: now split).	6.58319211006	4290
Coq.NArith.BinNat.N.compare_eq_iff	40	2.11.3	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	10.2658650875	6461
Coq.NArith.BinNat.N.compare_lt_iff	40	1.0	synth with cache (only 1: unfold ltb, lt; only 1: apply iff_refl).	0.0180959701538	3
Coq.NArith.BinNat.N.compare_le_iff	40	0.2.1.1	synth with cache (only 1: revert m; only 1: intro m; only 1: unfold leb, le; only 1: apply iff_refl).	0.476500034332	92
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.040965795517	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.123032808304	3
Coq.NArith.BinNat.N.succ_double_spec	40	2.2.7	synth with cache (only 1: rewrite add_comm; only 1: simpl; only 1: now destruct n as [| [p| p| ]]).	3.61304688454	552
Coq.NArith.BinNat.N.double_add	40	0.1.0.1.1.15	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: now nzsimpl; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: trivial).	10.5488650799	5243
Coq.NArith.BinNat.N.succ_double_add	40	0.1.0.0.1.0.1.3	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.8251850605	542
Coq.NArith.BinNat.N.double_mul	40	0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0405080318451	9
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0272119045258	5
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.0132720470428	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40	3.22.12	synth with cache (only 1: revert m; only 1: fix odd_specT 1; only 1: assumption).	23.8857831955	24319
Coq.NArith.BinNat.N.double_lt_mono	40	16.0.0.1.4	synth with cache (only 1: nzinduct n m; only 1: intros H; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: now destruct n, m).	11.1383068562	7321
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0444660186768	9
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.2.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: order; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.546037912369	194
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0450069904327	9
Coq.NArith.BinNat.N.compare_0_r	40	0.0.14.12	synth with cache (only 1: intros H; only 1: apply PeanoNat.Nat.le_succ_l in H; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r).	3.46370005608	3190
Coq.NArith.BinNat.N.pow_0_r	40	0	synth with cache (only 1: reflexivity).	0.013298034668	1
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	10.0	synth with cache (only 1: intro H; only 1: now destruct n).	0.39590215683	209
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40	6.0.1.0.1.0.0.30	synth with cache (only 1: cases ltac:(n); only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m; only 1: fix odd_spec 1; only 1: intro n; only 1: trivial).	29.297675848	45636
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.5.0	synth with cache (only 1: unfold div, modulo; only 1: intros _; only 1: generalize (div_eucl_spec a b); only 1: now destruct div_eucl).	0.0419600009918	15
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0191931724548	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| p], b as [| q]; only 1: rewrite <- ggcd_gcd; only 1: simpl; only 1: order; only 1: simpl; only 1: apply lt_le_incl, lt_0_1; only 1: easy; only 1: simpl; only 1: discriminate).	0.0834929943085	16
Coq.NArith.BinNat.N.testbit_even_0	40	2.121	synth with cache (only 1: revert a; only 1: now intro n; induction n).	30.4172379971	51784
Coq.NArith.BinNat.N.testbit_odd_0	40	0	synth with cache (only 1: now destruct a).	0.0128979682922	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	1.0.13	synth with cache (only 1: intro H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: now destruct a).	7.97717094421	4763
Coq.NArith.BinNat.N.testbit_neg_r	40	0.0.21.0	synth with cache (only 1: intros H; only 1: induction n as [| n IHn]; only 1: now destruct a; only 1: easy).	1.08425283432	1054
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.020446062088	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.4.0.1	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: intro H1; only 1: false_hyp H ltac:(H1)).	0.0304880142212	9
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0109119415283	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0153720378876	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.9.2.1.0.11	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now nzsimpl).	9.90287613869	7090
Coq.NArith.BinNat.N.iter_swap_gen	40
Coq.NArith.BinNat.N.iter_swap	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).	0.0442128181458	11
Coq.NArith.BinNat.N.iter_succ	40	5.2.0.2.4.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.iter_succ).	8.67872309685	7278
Coq.NArith.BinNat.N.iter_succ_r	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: destruct n; only 1: intros; only 1: now rewrite Pos.iter_succ, Pos.iter_swap; only 1: intros; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).	0.0960831642151	13
Coq.NArith.BinNat.N.iter_add	40
Coq.NArith.BinNat.N.iter_ind	40
Coq.NArith.BinNat.N.iter_invariant	40	0.1.0.0	synth with cache (only 1: intros; only 1: apply Pos.iter_ind; only 1: auto; only 1: auto).	0.076954126358	5
Coq.NArith.Ndec.Peqb_complete	40	2.9.58	synth with cache (only 1: fix odd_specT 1; only 1: intros; only 1: auto).	3.07125496864	10118
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0290791988373	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0294389724731	1
Coq.NArith.Ndec.Neqb_complete	40
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	2.1.4.6	synth with cache (only 1: intros m H; only 1: apply eq_true_iff_eq; only 1: eqb2eq; only 1: easy').	1.90683913231	1311
Coq.NArith.Ndec.Ndiv2_eq	40	2.0.11	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now subst).	0.187906980515	104
Coq.NArith.Ndec.Ndiv2_neq	40	0.8.0.0	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: intros <-; only 1: now apply H).	0.627702951431	203
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	0.2.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: intro LE; only 1: N.order).	0.0506851673126	5
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	1.0.8.0.2.0.0.0.0.1	synth with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intro H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: destruct 1; only 1: rewrite !N2Nat.inj_succ_double; only 1: split).	8.24338698387	6438
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	1.1.5	synth with cache (only 1: elim (sumbool_of_bool (Nleb (N.succ_double a) (N.succ_double b))); only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false; only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.182411193848	58
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40	0.0.0.3.9.21	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: auto; only 1: intros; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	6.96400403976	10125
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0641191005707	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40	8.58.132	synth with cache (only 1: revert a; only 1: fix even_spec 1; only 1: easy).	22.1993100643	59741
Coq.NArith.Ndist.Nplength_infty	40	2.0.0.0	synth with cache (only 1: intros a; only 1: induction a as [| p]; only 1: now try N.order'; only 1: now try N.order').	0.0396139621735	17
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	14.0.0.3.1.55.1	synth with cache (only 1: intro n; only 1: destruct n as [| [| n]]; only 1: simpl; only 1: split; only 1: split; only 1: simpl; only 1: Nat.solve_min).	33.4029998779	87412
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.1.1.0.19	synth with cache (only 1: simpl; only 1: simple induction d; only 1: trivial; only 1: intros; only 1: trivial).	3.04593300819	2910
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.1.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0276679992676	7
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0186681747437	3
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.1	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0196781158447	4
Coq.NArith.Ndist.ni_le_refl	40	3.0.0.0.1.0.0.4	synth with cache (only 1: red; only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: intros; only 1: intuition).	0.592436075211	521
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40	2.13	synth with cache (only 1: fix even_specT 1; only 1: trivial).	0.832292795181	1027
Coq.NArith.Ndist.ni_le_min_2	40	0.2.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0365951061249	14
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40	5.17.4	synth with cache (only 1: intros x y H; only 1: inversion H; only 1: auto with arith).	2.79901194572	3914
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40	4.4.18	synth with cache (only 1: intros n; only 1: fix even_specT 1; only 1: assumption).	12.9505009651	13502
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40	2.9.1.0.3.1	synth with cache (only 1: intros a n; only 1: Nat.cases ltac:(n); only 1: simpl; only 1: now destruct a; only 1: fix even_spec 1; only 1: trivial).	13.8681828976	8269
Coq.NArith.Ndigits.Ntestbit_Nbit	40	6.11.0	synth with cache (only 1: intro p; only 1: fix odd_spec 1; only 1: trivial).	1.97235298157	2165
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.0.1.3.0.0.0	synth with cache (only 1: intro a; only 1: destruct a; only 1: intros a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.5738530159	248
Coq.NArith.Ndigits.Nshiftr_nat_S	40	3.0	synth with cache (only 1: intros n m; only 1: now N.nzsimpl).	0.0477120876312	5
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0173320770264	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	4.0	synth with cache (only 1: intros; only 1: reflexivity).	0.108038902283	33
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0175831317902	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40	3.4.3.1.0.0.0.0.7	synth with cache (only 1: intros a n; only 1: induction n as [| n IHn]; only 1: unfold N.shiftl_nat; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: simpl; only 1: now simpl).	19.3645069599	14803
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.0.0.1.0.0.1.0.0.5	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: reflexivity; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	3.59282112122	2207
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).	0.394851207733	104
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.1.0.0.0.0.1.2.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	0.5813601017	273
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.0.0.3.2.2.5	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: split).	1.60198283195	1497
Coq.NArith.Ndigits.Ndouble_bit0	40	11.2	synth with cache (only 1: intros m; only 1: now destruct m).	0.553123950958	344
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.1	synth with cache (only 1: intros n; only 1: now destruct n).	0.0690901279449	3
Coq.NArith.Ndigits.Ndiv2_double	40	1.1.0.0.1.1.0	synth with cache (only 1: intros a; only 1: intros H; only 1: destruct a as [| p]; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: now destruct p).	0.243733882904	85
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.0.1.1.2.6.2.1	synth with cache (only 1: intros; only 1: destruct n; only 1: now N.nzsimpl; only 1: destruct p; only 1: reflexivity; only 1: vm_compute in H; only 1: discriminate; only 1: reflexivity).	6.99885487556	4192
Coq.NArith.Ndigits.Ndiv2_correct	40	6.0.0.0.4.6	synth with cache (only 1: intros n m; only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).	22.877892971	14982
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40	23.34.5	synth with cache (only 1: intros a n; only 1: fix odd_specT 1; only 1: now N.nzsimpl).	35.4073650837	67807
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.4	synth with cache (only 1: destr_bool; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.109959125519	68
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros a a' H H0; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	12.8270680904	7320
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: reflexivity; only 1: trivial; only 1: destruct a' as [| p0]; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.73273086548	1228
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	12.21.6.6.14	synth with cache (only 1: intros n; only 1: intros; only 1: destruct n; only 1: easy'; only 1: now exists p).	12.503349781	22772
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40	2.1.3	synth with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: auto).	0.0770359039307	19
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.0.0.0.0.0.0.4.0	synth with cache (only 1: destruct a as [| p]; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	0.806293964386	471
Coq.NArith.NArith.TestOrder.test	40	1	synth with cache (only 1: N.order).	0.0281758308411	11
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	4.2.1.0.0.0.4	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: now rewrite ?Ha).	1.91730093956	1466
Coq.NArith.Nnat.N2Nat.inj_0	40	5	synth with cache (only 1: now subst).	0.0149710178375	6
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_div	40
Coq.NArith.Nnat.N2Nat.inj_mod	40
Coq.NArith.Nnat.N2Nat.inj_pow	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0329711437225	5
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	0.0857889652252	8
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	synth with cache (only 1: nat2N).	0.0400400161743	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0344610214233	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0	synth with cache (only 1: nat2N).	0.0339288711548	1
Coq.NArith.Nnat.Nat2N.inj_add	40	2.0.2.26	synth with cache (only 1: induction n; only 1: simpl; only 1: now subst; only 1: nat2N).	1.66816401482	820
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	synth with cache (only 1: nat2N).	0.0358219146729	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0357239246368	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0323350429535	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_div	40	0	synth with cache (only 1: nat2N).	0.110519886017	1
Coq.NArith.Nnat.Nat2N.inj_mod	40	0	synth with cache (only 1: nat2N).	0.0353281497955	1
Coq.NArith.Nnat.Nat2N.inj_pow	40	0	synth with cache (only 1: nat2N).	0.0350868701935	1
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0352129936218	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0344300270081	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	0.14.2	synth with cache (only 1: destruct x; only 1: apply Nat.eqb_eq; only 1: destr_bool).	1.63700914383	816
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).	0.0231599807739	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').	0.0323131084442	3
Coq.Strings.Ascii.ascii_N_embedding	40	1.6	synth with cache (only 1: fix even_spec 1; only 1: easy).	0.547423124313	86
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40	3.47	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	5.12826085091	8421
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.compare_antisym	40
Coq.Strings.Ascii.compare_eq_iff	40
Coq.Strings.Ascii.leb_antisym	40
Coq.Strings.Ascii.leb_total	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40	4.1.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.420351028442	122
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).	0.0258178710938	1
Coq.Strings.String.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').	0.0404770374298	3
Coq.Strings.String.compare_antisym	40
Coq.Strings.String.compare_eq_iff	40
Coq.Strings.String.leb_antisym	40
Coq.Strings.String.leb_total	40	0.0.0.5.0.0.0.2.3.1.26.0	synth with cache (only 1: apply orb_true_iff; only 1: apply eq_true_iff_eq; only 1: revert s2; only 1: intro q; only 1: t_eqb; only 1: apply orb_true_iff; only 1: unfold leb; only 1: rewrite Ascii.compare_antisym; only 1: destruct compare; only 1: intuition; only 1: intuition; only 1: intuition).	29.659954071	8447
Coq.Strings.String.get_correct	40	4.2.14	synth with cache (only 1: fix odd_spec 1; only 1: intros Hneq; only 1: auto).	7.26348996162	7754
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40	9.4.1	synth with cache (only 1: intros s1; only 1: fix even_spec 1; only 1: auto).	3.93407011032	2520
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.3.0.0.35.64	synth with cache (only 1: compute; only 1: elim s; only 1: reflexivity; only 1: intros; only 1: f_equal; only 1: easy).	1.49274802208	6820
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40	0.0.1.226	synth with cache (only 1: induction x as [| x IHx]; only 1: reflexivity; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	17.1676750183	35345
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	8	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.122690916061	16
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	13	synth with cache (only 1: trivial).	0.208753824234	105
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	16	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.209324121475	123
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.nsatz.NsatzTactic.nsatz1.psos_r1b	40
Coq.nsatz.NsatzTactic.nsatz1.psos_r1	40	0.1.2.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: let rec norm := gen_rewrite in norm; only 1: rewrite H; only 1: cring).	0.391937971115	22
Coq.nsatz.NsatzTactic.nsatz1.nsatzR_diff	40
Coq.nsatz.NsatzTactic.nsatz1.P0Z_correct	40	2	synth with cache (only 1: trivial).	0.174003124237	35
Coq.nsatz.NsatzTactic.nsatz1.Rext	40
Coq.nsatz.NsatzTactic.nsatz1.Rset	40	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).	0.0572988986969	7
Coq.nsatz.NsatzTactic.nsatz1.Rtheory	40
Coq.nsatz.NsatzTactic.nsatz1.PolZadd_correct	40
Coq.nsatz.NsatzTactic.nsatz1.PolZmul_correct	40
Coq.nsatz.NsatzTactic.nsatz1.R_power_theory	40
Coq.nsatz.NsatzTactic.nsatz1.norm_correct	40
Coq.nsatz.NsatzTactic.nsatz1.PolZeq_correct	40
Coq.nsatz.NsatzTactic.nsatz1.mult_l_correct	40
Coq.nsatz.NsatzTactic.nsatz1.compute_list_correct	40
Coq.nsatz.NsatzTactic.nsatz1.check_correct	40
Coq.nsatz.NsatzTactic.Qri	40
Coq.nsatz.NsatzTactic.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.0208389759064	1
Coq.nsatz.NsatzTactic.Qcri	40	0.1.5.6.0.0.21	synth with cache (only 1: unfold Qeq; only 1: intro; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	19.2888529301	4125
Coq.nsatz.NsatzTactic.Qdi	40
Coq.nsatz.NsatzTactic.Z_one_zero	40	0	synth with cache (only 1: discriminate).	0.0237348079681	1
Coq.nsatz.NsatzTactic.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.031543970108	2
Coq.nsatz.NsatzTactic.Zdi	40
Coq.nsatz.Nsatz.Rsth	40	0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.122368812561	8
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	1	synth with cache (only 1: exact R1_neq_R0).	0.062952041626	11
Coq.nsatz.Nsatz.Rcri	40
Coq.nsatz.Nsatz.Rdi	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	69	synth with cache (only 1: constructor).	0.51643204689	2440
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40	2.11.11.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: pose proof (sin2_bound x); only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).	30.2863469124	16954
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	19.37	synth with cache (only 1: intro; only 1: lra).	30.4927620888	17327
Coq.Reals.Ratan.pos_opp_lt	40	0.0	synth with cache (only 1: intros eps Heps; only 1: lra).	0.0493140220642	2
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.tan_atan	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_eq0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.atan_tan	40
Coq.Reals.Ratan.atan_inv	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.7.9	synth with cache (only 1: intros H0 eps H1; only 1: apply pow_lt; only 1: auto).	17.1334109306	6477
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.Ratan.sin_atan	40
Coq.Reals.Ratan.cos_atan	40
Coq.Reals.Ratan.asin_atan	40
Coq.Reals.Ratan.asin_0	40
Coq.Reals.Ratan.asin_1	40
Coq.Reals.Ratan.asin_inv_sqrt2	40
Coq.Reals.Ratan.asin_opp	40
Coq.Reals.Ratan.asin_bound	40
Coq.Reals.Ratan.asin_bound_lt	40
Coq.Reals.Ratan.sin_asin	40
Coq.Reals.Ratan.asin_sin	40
Coq.Reals.Ratan.cos_asin	40
Coq.Reals.Ratan.tan_asin	40
Coq.Reals.Ratan.derivable_pt_asin	40
Coq.Reals.Ratan.derive_pt_asin	40
Coq.Reals.Ratan.acos_atan	40
Coq.Reals.Ratan.acos_asin	40	3.1.0.7	synth with cache (only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: intros x; only 1: intros [a1 a2]; only 1: shelve).	7.81504511833	1435
Coq.Reals.Ratan.asin_acos	40
Coq.Reals.Ratan.acos_0	40
Coq.Reals.Ratan.acos_1	40	4.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold acos; only 1: repeat case Rle_dec; only 1: lra; only 1: intros x; only 1: intro; only 1: reflexivity; only 1: intros; only 1: pose proof sqrt2_neq_0 as SH; only 1: lra).	2.46519804001	546
Coq.Reals.Ratan.acos_opp	40
Coq.Reals.Ratan.acos_inv_sqrt2	40
Coq.Reals.Ratan.acos_bound	40
Coq.Reals.Ratan.acos_bound_lt	40
Coq.Reals.Ratan.cos_acos	40
Coq.Reals.Ratan.acos_cos	40
Coq.Reals.Ratan.sin_acos	40
Coq.Reals.Ratan.tan_acos	40
Coq.Reals.Ratan.derivable_pt_acos	40
Coq.Reals.Ratan.derive_pt_acos	40
Coq.Reals.Ratan.sin_lt_x	40
Coq.Reals.Ratan.sin_gt_x	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40	6.2.0	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: inversion 1; only 1: firstorder  (subst; auto)).	0.726254940033	219
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	1.1.0.2	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: easy; only 1: intro; only 1: reflexivity).	0.315934181213	81
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.1.4.0.0.0.4	synth with cache (only 1: symmetry; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: destruct l; only 1: now auto; only 1: auto).	2.40540599823	1065
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.0.0.0.0.6	synth with cache (only 1: intros; only 1: induction l; only 1: cbn; only 1: auto; only 1: cbn; only 1: auto).	2.4230029583	1070
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0.0.0.0	synth with cache (only 1: intros ? ?; only 1: intros a1; only 1: f_equal; only 1: auto).	0.0510909557343	4
Coq.Reals.RList.RList_P22	40	0.6.1.0.0	synth with cache (only 1: intro l; only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: now simpl; only 1: reflexivity).	0.641160011292	230
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40	1.21	synth with cache (only 1: fix gcd_greatest 1; only 1: easy).	22.956635952	15572
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.131991863251	13
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	0.3.0.0.0.0.2	synth with cache (only 1: intro; only 1: unfold sigma; only 1: rewrite Nat.sub_diag; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.326899051666	113
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.3.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro H1; only 1: auto with real).	0.0543191432953	9
Coq.Reals.Rbasic_fun.Rmin_left	40	0.4.0.2.1.4	synth with cache (only 1: unfold Rle; only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intuition N.Private_Tac.order; only 1: intuition).	4.82683682442	1660
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0457229614258	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0552158355713	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	0.2.0.0.3.6	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: auto with real; only 1: intro; only 1: assumption).	22.2516179085	9507
Coq.Reals.Rbasic_fun.Rmin_glb	40	1.0.0.2.6	synth with cache (only 1: intros r1 r2 H H0; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: intuition).	17.0702159405	1471
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intro; only 1: assumption).	0.0592868328094	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.2.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.136431932449	24
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0625500679016	7
Coq.Reals.Rbasic_fun.Rmax_left	40	1.0.0.0.1.0.0.1.2.6.1.3	synth with cache (only 1: intros r1 r2 H; only 1: elim H; only 1: unfold Rmax; only 1: rewrite Rlt_def; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real; only 1: intro; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: assumption; only 1: auto with real).	14.0390510559	7096
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0452740192413	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0573580265045	7
Coq.Reals.Rbasic_fun.RmaxRmult	40	2.0.0.2.2.0.0.9	synth with cache (only 1: unfold IZR, IPR; only 1: intros x y; only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real).	12.2776520252	6095
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.0603709220886	8
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0563499927521	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0.0.0.12	synth with cache (only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	23.7673749924	11116
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intros E1; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	0.669690132141	136
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	0.0.0.1.0.0.0.7.1	synth with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: ring; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real; only 1: assumption).	2.21417117119	1086
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40	0.1.0.1.1.0.0.1.3.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intro; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intro; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: reflexivity).	1.5644800663	842
Coq.Reals.Rbasic_fun.Ropp_Rmin	40	1.2.0.3.2.0.0.3.3.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intro H1; only 1: apply Rmax_case_strong; only 1: auto with real; only 1: reflexivity).	16.3382928371	7950
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.3.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.21932792664	186
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	8	synth with cache (only 1: auto with *).	0.168314933777	71
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	2.0.0.3.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: auto with real; only 1: auto).	0.127166986465	29
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.0.7.20.5	synth with cache (only 1: intros p H; only 1: induction p; only 1: easy; only 1: simpl; only 1: auto with real).	14.668656826	8912
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.8.15	synth with cache (only 1: intros x; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	18.9533319473	7816
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.886600017548	190
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0.0.1	synth with cache (only 1: intros y H8; only 1: intros x; only 1: split).	0.0850229263306	13
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40	1.22	synth with cache (only 1: intros c c_encad; only 1: shelve).	10.3472111225	4196
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40	12.7	synth with cache (only 1: intros xxh; only 1: shelve).	5.14237308502	2119
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	10	synth with cache (only 1: intuition congruence).	0.470630884171	198
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	0.2.3.6	synth with cache (only 1: intros m n p; only 1: destruct (lt_eq_lt_dec n m); only 1: intuition; only 1: now left).	3.21799182892	563
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.1.0	synth with cache (only 1: intro m; only 1: simpl; only 1: now Nat.nzsimpl).	0.187805891037	4
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.2	synth with cache (only 1: intros a; only 1: auto with real).	0.0345129966736	4
Coq.Reals.Rfunctions.pow_1	40	6.0	synth with cache (only 1: intros; only 1: ring).	0.0409739017487	8
Coq.Reals.Rfunctions.pow_add	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0752220153809	8
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0.0.0	synth with cache (only 1: intro; only 1: simpl; only 1: intros; only 1: auto with real).	0.0644149780273	11
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.0.1.4	synth with cache (only 1: intros m' p; only 1: intro; only 1: repeat rewrite S_INR; only 1: ring).	0.475105047226	83
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	0.0.2.0.0.0.0.3.21	synth with cache (only 1: intro n; only 1: Nat.cases ltac:(n); only 1: intro; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: intros a Ha; only 1: simpl; only 1: auto with real).	15.0390639305	11360
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	1.27157092094	348
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.1.0.0.2.2.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 1 with (1 * 1); only 1: auto with real; only 1: auto with real).	1.84736084938	614
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	1.2.0.2.0.0.20	synth with cache (only 1: unfold IZR, IPR; only 1: simple induction n; only 1: reflexivity; only 1: intros v w; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: auto with real).	21.9782919884	12625
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).	0.0504500865936	3
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	15.6.2.3.0.7	synth with cache (only 1: intros; only 1: induction n; only 1: now Z.nzsimpl; only 1: cbn; only 1: red; only 1: Z.order_pos).	11.3002479076	9868
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	4.3.0	synth with cache (only 1: unfold IZR at 1; only 1: intros q; only 1: trivial).	0.0863189697266	28
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	2.4.0	synth with cache (only 1: intro; only 1: simpl; only 1: ring).	0.0932590961456	12
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0999548435211	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40	0.0.0.0.0.0.0.12.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: apply Rmult_le_pos; only 1: apply HrecN; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply H; only 1: apply le_n).	23.5110340118	14942
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40	5.28	synth with cache (only 1: fix Even_Odd_double 1; only 1: auto with real).	1.69078302383	1887
Coq.Reals.Rprod.le_n_2n	40	11.2.1.0	synth with cache (only 1: simpl; only 1: intro m; only 1: Nat.nzsimpl; only 1: intuition).	2.97248697281	1088
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.0.1.0.2.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: Nat.order'; only 1: simpl; only 1: apply Nat.lt_lt_add_r; only 1: assumption).	0.200047016144	15
Coq.Reals.Rprod.C_maj	40	2.10.1.4	synth with cache (only 1: simpl; only 1: intro RS'; only 1: fix le_div2 1; only 1: trivial).	10.2269999981	3431
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	2.0	synth with cache (only 1: intros; only 1: apply Nat.div2_double).	0.045028924942	4
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).	0.0455000400543	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40
Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40	2.0.3.9.10.2	synth with cache (only 1: intros x y H; only 1: destruct H; only 1: destruct (total_order_T x y); only 1: intuition; only 1: exfalso; only 1: auto).	13.4234731197	5174
Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40
Coq.Reals.ClassicalConstructiveReals.Rring	40
Coq.Reals.ClassicalConstructiveReals.RringExt	40
Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40
Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40
Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40
Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40
Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40
Coq.Reals.ClassicalConstructiveReals.plus_IQR	40
Coq.Reals.ClassicalConstructiveReals.mult_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_lt	40
Coq.Reals.ClassicalConstructiveReals.lt_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40
Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40
Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40
Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40
Coq.Reals.ClassicalConstructiveReals.RabsLUB	40
Coq.Reals.ClassicalConstructiveReals.Rcomplete	40
Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40
Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_neq_0	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.exp_ineq1_le	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_neq_0	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_pow	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_nonzero	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_Rlog	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_Rpower	40	0.2.1.5.0.0	synth with cache (only 1: intros; only 1: apply exp_inv; only 1: unfold Rpower; only 1: repeat rewrite exp_ln || rewrite exp_Ropp; only 1: trivial; only 1: apply exp_pos).	1.33208012581	401
Coq.Reals.Rpower.Rlog_pow	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.2	synth with cache (only 1: intros a b Ha Hb; only 1: field; only 1: auto).	0.122818231583	15
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	5.4.6	synth with cache (only 1: intros r r1 r2; only 1: intros; only 1: firstorder).	16.1760489941	5395
Coq.Reals.Rpower.D_in_ext	40	0.3.0.5.1.0.0.2	synth with cache (only 1: intros; only 1: generalize H, H0; only 1: unfold D_in; only 1: intro; only 1: elim H1; only 1: intro; only 1: unfold limit1_in; only 1: assumption).	10.1887331009	3751
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.RIneq.Rle_refl	40	4.9	synth with cache (only 1: right; only 1: now try rewrite H).	0.242667198181	283
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0418829917908	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0553719997406	4
Coq.Reals.RIneq.Rlt_not_eq	40	5.0.0.0.2.16	synth with cache (only 1: intros z z0; only 1: intros LE EQ; only 1: subst; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	3.29917097092	3423
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40
Coq.Reals.RIneq.Rlt_le	40	2.3.1	synth with cache (only 1: intros p q H; only 1: left; only 1: auto with real).	0.0665538311005	26
Coq.Reals.RIneq.Rgt_ge	40	0	synth with cache (only 1: firstorder).	0.0211310386658	1
Coq.Reals.RIneq.Rle_ge	40	2.8.0.0.0.5	synth with cache (only 1: induction 1 as [| x y z]; only 1: red; only 1: tauto; only 1: generalize (total_order_T r1 r2); only 1: right; only 1: auto).	6.07983088493	5529
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0511620044708	5
Coq.Reals.RIneq.Rlt_gt	40	1.0.0	synth with cache (only 1: intros; only 1: red; only 1: trivial).	0.0377490520477	4
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.021507024765	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0528631210327	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0390689373016	3
Coq.Reals.RIneq.Rnot_lt_le	40	8.3.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros; only 1: intuition).	1.93678712845	1084
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.106600046158	24
Coq.Reals.RIneq.Rnot_gt_ge	40	14.3.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: intuition auto; N.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	7.65072989464	5789
Coq.Reals.RIneq.Rnot_lt_ge	40	1.0.0.0.0.0	synth with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.0577390193939	7
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0493569374084	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0461950302124	5
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0602149963379	4
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.5.0	synth with cache (only 1: intros r1 r2; only 1: intros r H; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.229984998703	73
Coq.Reals.RIneq.Rle_not_gt	40	0.0.1.2.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto using Rnot_lt_le with rorders).	0.160085916519	44
Coq.Reals.RIneq.Rge_not_gt	40	0.0.0.1.1.0	synth with cache (only 1: do 2 intro; only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0543649196625	8
Coq.Reals.RIneq.Req_le	40	0.0	synth with cache (only 1: destruct 1; only 1: auto with rorders).	0.0276491641998	2
Coq.Reals.RIneq.Req_ge	40	0.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0381760597229	4
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0384860038757	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.034010887146	3
Coq.Reals.RIneq.Rgt_asym	40	0.0.2.0.2.0	synth with cache (only 1: do 2 intro; only 1: intro abs; only 1: red; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0574088096619	10
Coq.Reals.RIneq.Rle_antisym	40	0.6.0.0.0.3	synth with cache (only 1: intros * []; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3; only 1: auto with real).	1.1053071022	508
Coq.Reals.RIneq.Rge_antisym	40	9.0	synth with cache (only 1: intros r1 r2; only 1: intuition).	0.126746892929	66
Coq.Reals.RIneq.Rle_le_eq	40	1.3.3	synth with cache (only 1: intros n m; only 1: unfold Rle; only 1: intuition).	0.545072078705	115
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0284268856049	1
Coq.Reals.RIneq.Rlt_eq_compat	40	12.0	synth with cache (only 1: intros; only 1: intuition congruence).	0.308124065399	176
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.2.0	synth with cache (only 1: intros x x' y y'; only 1: intros H1 H2 H3; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0572910308838	14
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0838799476624	30
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0417029857635	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.11311507225	3
Coq.Reals.RIneq.Rgt_dec	40
Coq.Reals.RIneq.Rge_dec	40	1.0.10	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.878736972809	433
Coq.Reals.RIneq.Rlt_le_dec	40
Coq.Reals.RIneq.Rgt_ge_dec	40	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0573101043701	4
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0639371871948	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.123518943787	33
Coq.Reals.RIneq.Rlt_or_le	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.055004119873	4
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rle_lt_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.061863899231	14
Coq.Reals.RIneq.Rle_or_lt	40	0.0.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.133422136307	33
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.148473978043	37
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	1.1.13.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	7.74498200417	2659
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.3.0.0.2	synth with cache (only 1: intros a0; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	1.02550315857	58
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.1.0	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	0.551236867905	21
Coq.Reals.RIneq.Rplus_opp_l	40	0.3.0.0.1	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.32163596153	16
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.4.0.0	synth with cache (only 1: intros x y H; only 1: intros; only 1: subst; only 1: auto with real).	0.105219125748	21
Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.4.0.1	synth with cache (only 1: intros x y H; only 1: intros; only 1: subst; only 1: auto with real).	0.120751857758	33
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.10.0.0.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	1.0924050808	429
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40	1.3.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_mult_comm, CReal_inv_l; only 1: reflexivity).	8.65303897858	211
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	1.60424780846	43
Coq.Reals.RIneq.Rinv_r_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	1.58872103691	43
Coq.Reals.RIneq.Rmult_0_r	40	4.1.1.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: field).	0.151360988617	34
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.036828994751	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.3.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.92067193985	65
Coq.Reals.RIneq.Rmult_1_r	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.539798021317	18
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0286078453064	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	4.1	synth with cache (only 1: intros r r1 r2; only 1: congruence).	0.0617210865021	16
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0	synth with cache (only 1: intros x y H; only 1: auto with real).	0.0354039669037	2
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0247950553894	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	2.1.1.1	synth with cache (only 1: intros a b; only 1: split; only 1: auto with real; only 1: auto with real).	0.133529901505	40
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	2.0	synth with cache (only 1: intros n m p; only 1: auto with real).	0.0834760665894	19
Coq.Reals.RIneq.Rmult_plus_distr_r	40	5.2.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: ring).	0.757225036621	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0.1	synth with cache (only 1: intros r r1 r2; only 1: auto with real).	0.0279381275177	3
Coq.Reals.RIneq.Ropp_0	40	2	synth with cache (only 1: ring).	0.855086088181	29
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.3.1.5	synth with cache (only 1: intros w; only 1: intros; only 1: rewrite H; only 1: auto with real).	0.445732116699	207
Coq.Reals.RIneq.Ropp_involutive	40	1.1	synth with cache (only 1: intro n; only 1: ring).	0.0448789596558	11
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	1.12	synth with cache (only 1: intros l x; only 1: ring).	4.18811321259	643
Coq.Reals.RIneq.Ropp_mult_distr_l	40	7.1	synth with cache (only 1: intros; only 1: ring).	0.128675937653	26
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0417840480804	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0422279834747	3
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0411088466644	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.041393995285	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.112365961075	22
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0381689071655	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.5.0	synth with cache (only 1: intro; only 1: intros; only 1: ring).	0.0535311698914	8
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0477728843689	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.2.1	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: ring).	0.471012115479	93
Coq.Reals.RIneq.Rminus_eq_0	40	0	synth with cache (only 1: ring).	0.029855966568	1
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0400350093842	2
Coq.Reals.RIneq.Rminus_eq_contra	40	3.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0533349514008	6
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0458688735962	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0492360591888	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	5.1.0	synth with cache (only 1: intros n m p; only 1: symmetry; only 1: ring).	0.0818431377411	18
Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0590679645538	2
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.17.3	synth with cache (only 1: intros a Ha; only 1: field; only 1: trivial).	10.0774857998	4642
Coq.Reals.RIneq.Rinv_mult_distr	40	0.2.11	synth with cache (only 1: intros Eqf Lef x y; only 1: field; only 1: auto).	2.02252101898	878
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0504789352417	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: apply H; only 1: auto with real).	0.0682408809662	7
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.126162052155	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.325482845306	54
Coq.Reals.RIneq.Rinv_mult_simpl	40	0.10.0.3.8	synth with cache (only 1: intros x; only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: field; only 1: trivial).	9.72714805603	4810
Coq.Reals.RIneq.Rplus_gt_compat_l	40	4.3.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.108156919479	17
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	1.3.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0495829582214	11
Coq.Reals.RIneq.Rplus_le_compat_l	40	0.2.0.0.3	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2; only 1: auto with real; only 1: auto with real).	0.246825933456	35
Coq.Reals.RIneq.Rplus_ge_compat_l	40	2.7.0.1.13.1	synth with cache (only 1: intros; only 1: red; only 1: elim H; only 1: intro; only 1: auto with real; only 1: eauto with real).	18.5225200653	11251
Coq.Reals.RIneq.Rplus_le_compat_r	40	1.3.0.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.348608970642	103
Coq.Reals.RIneq.Rplus_ge_compat_r	40	1.3.0.2	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0487871170044	10
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0458550453186	5
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40	0.7.0.0.0.9	synth with cache (only 1: firstorder; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real; only 1: rewrite H; only 1: auto with real).	13.3947649002	6038
Coq.Reals.RIneq.Rplus_gt_ge_compat	40
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.2.0.13.6	synth with cache (only 1: intros r1 r2; only 1: unfold Rgt; only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	9.81973910332	5301
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.0.5	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	0.278874874115	83
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	1	synth with cache (only 1: intuition).	0.0756809711456	22
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.7	synth with cache (only 1: intros a b Hab; only 1: eauto with rorders).	0.0943830013275	45
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.08487200737	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	6.1.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.619143009186	52
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.4.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.170423030853	31
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.0	synth with cache (only 1: unfold Rge; only 1: auto using Rnot_lt_le with real).	0.0388300418854	2
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: auto with real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	0.120322942734	17
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: auto with real; only 1: auto with real).	0.0875990390778	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0452098846436	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0623171329498	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0630631446838	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0349318981171	3
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0619769096375	3
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.042692899704	4
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0428311824799	4
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40	6.3.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).	11.2384719849	597
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1.0.7	synth with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.428108930588	188
Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.0.8	synth with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.456580877304	201
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40	4.5.3.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: auto with real).	24.5929560661	8657
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40	19.3.1.1	synth with cache (only 1: intros r r1 r2 H H0; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: eauto using Rmult_le_compat_l with rorders).	26.3685529232	19455
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	4.7.10	synth with cache (only 1: intros a b c ? ? ?; only 1: intros Hab; only 1: intuition).	4.19661188126	2793
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.0.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.083123922348	7
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.3.1.7.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	2.12313103676	1193
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	1.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0928289890289	14
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0520460605621	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40
Coq.Reals.RIneq.Rge_minus	40	0.0.0.0.2.0.4	synth with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r; only 1: auto with real).	1.29492092133	403
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.11.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: red; only 1: auto with real; only 1: auto with real; only 1: ring).	18.6127250195	9655
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring).	0.0767159461975	8
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0398440361023	4
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0496611595154	5
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	2.93164205551	815
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.4.0.0	synth with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.119035005569	35
Coq.Reals.RIneq.Rlt_plus_1	40	3.9	synth with cache (only 1: intros p; only 1: apply Rlt_n_Sn).	2.73237395287	1368
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	0.3.1.3.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: reflexivity).	0.962279081345	279
Coq.Reals.RIneq.S_O_plus_INR	40	0.1.12.1.0	synth with cache (only 1: intros m; only 1: simpl; only 1: destruct m; only 1: auto with real; only 1: auto with real).	3.0368039608	810
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	4.0.17.0.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: destruct n; only 1: auto with real; only 1: intuition).	34.3087370396	18049
Coq.Reals.RIneq.INR_not_0	40	1.1.2.8.0	synth with cache (only 1: intros; only 1: induction n; only 1: intro; only 1: auto with real; only 1: auto with real).	4.77237892151	2171
Coq.Reals.RIneq.not_0_INR	40	3.1.0.2.2.1.0.4	synth with cache (only 1: intro n; only 1: Nat.cases ltac:(n); only 1: now destruct 1; only 1: intros; only 1: simpl; only 1: destruct n; only 1: exact R1_neq_R0; only 1: auto with real).	16.125109911	4622
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.IZR_NEG	40	0	synth with cache (only 1: auto with real).	0.0329558849335	1
Coq.Reals.RIneq.IZR_POS_xO	40	1.3.10.0	synth with cache (only 1: induction p as [p| p| ]; only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.23187589645	553
Coq.Reals.RIneq.IZR_POS_xI	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	0.2.2.0.1.4.4	synth with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: unfold IZR, IPR; only 1: ring).	1.22798609734	512
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40	3.0.15	synth with cache (only 1: fix OddT_EvenT_rect 1; only 1: intros; only 1: auto).	3.02614712715	2292
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.0.0.1.0	synth with cache (only 1: red; only 1: intros z1 z2 H; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	0.0675630569458	7
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.550180912018	128
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.Ropp_div_den	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: auto with real).	0.0622959136963	4
Coq.Reals.RIneq.double	40	5.5	synth with cache (only 1: intros a; only 1: ring).	0.270453929901	119
Coq.Reals.RIneq.double_var	40	9.2	synth with cache (only 1: intros; only 1: field).	4.17248082161	198
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.176986932755	38
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	5.1.0.2.5	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intros x y H H0; only 1: intros; only 1: apply Rmult_lt_0_compat with (1 := H1); only 1: auto with real).	20.3059110641	9554
Coq.Reals.RIneq.Rdiv_plus_distr	40	6.6.0.2	synth with cache (only 1: intros x n; only 1: unfold Rdiv; only 1: intro p; only 1: ring).	1.13191604614	876
Coq.Reals.RIneq.Rdiv_minus_distr	40
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0597379207611	4
Coq.Reals.RIneq.pos_half_prf	40	0	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.0233559608459	1
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_eq_natpow_inv	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_invneg_le_pow	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_le_one	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	0.23.58	synth with cache (only 1: intro n; only 1: fix odd_specT 1; only 1: eauto).	25.9675650597	44636
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	45.28	synth with cache (only 1: simpl; only 1: eauto with *).	8.29905891418	7765
Coq.Reals.ClassicalDedekindReals.DRealAbstr_aux	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealQlimExp2	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_cauchy	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_max_prec_1	40	2.1.0.1.9	synth with cache (only 1: intros a b; only 1: destruct b as [| b| b]; only 1: trivial; only 1: easy; only 1: easy).	1.67988991737	648
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_bound	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_bound	40	0.0.45	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros n; only 1: auto).	26.0446341038	21847
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40	16.16	synth with cache (only 1: fix even_specT 1; only 1: eauto with bool).	27.4441928864	12540
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse'	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse''	40	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: intros x q n H; only 1: unfold DRealAbstr, proj1_sig in H; only 1: match type of H with | context [ if ?a then _ else _ ] => destruct a as [H'| H'] end; only 1: discriminate; only 1: destruct (Z_le_gt_dec n 0) as [Hdec| Hdec]; only 1: specialize (H' (Z.to_nat (- n))); only 1: rewrite (Z2Nat.id (- n) _), Z.opp_involutive in H'; only 1: pose proof (Qpower_0_lt 2 n); only 1: lra; only 1: specialize (H' (Z.to_nat 0)); only 1: cbn in H'; only 1: pose proof (cauchy x n 0%Z n _ _) as Hxbnd; only 1: apply Qabs_Qlt_condition in Hxbnd; only 1: pose proof (Qpower_1_le 2 n _ _); only 1: lra).	11.3837680817	3505
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	10.3	synth with cache (only 1: intros a b Hb; only 1: intuition).	1.39847803116	535
Coq.Reals.ArithProp.le_minusni_n	40	19.1	synth with cache (only 1: intros; only 1: intuition).	2.09830188751	1648
Coq.Reals.ArithProp.lt_minus_O_lt	40	19	synth with cache (only 1: intuition).	4.30356407166	2018
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	2.7	synth with cache (only 1: intros n H; only 1: auto with arith).	0.699059963226	140
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40	2.12	synth with cache (only 1: intros f1; only 1: eauto with real).	0.497548818588	334
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.1.0.2.2	synth with cache (only 1: intro; only 1: apply Rinv_0_lt_compat; only 1: apply Rplus_le_lt_0_compat; only 1: apply pos_INR; only 1: apply Rlt_0_1).	1.01131010056	180
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	8.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl).	0.0897200107574	11
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0575749874115	2
Coq.Reals.Ranalysis2.quadruple_var	40	7.1	synth with cache (only 1: intro; only 1: field).	0.0674240589142	10
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: assumption).	0.0448019504547	11
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	0.8.1	synth with cache (only 1: intros f D l x0 H H0; only 1: intro; only 1: auto).	0.223079919815	108
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	1.8.7.14.2	synth with cache (only 1: intros H1; only 1: intro H; only 1: destruct H as [alp [Halp H]]; only 1: apply H; only 1: assumption).	3.31375908852	7094
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	17.14	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: firstorder).	2.97740101814	5307
Coq.Reals.Rtopology.open_set_P2	40	23.15.3	synth with cache (only 1: intros; only 1: intro A; only 1: firstorder).	12.5502231121	19354
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.9.0.4.30	synth with cache (only 1: intros h1 h2; only 1: absurd (1 <= 0); only 1: auto with real; only 1: exfalso; only 1: contradiction).	1.34676098824	1569
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40	2.0.13.12.9	synth with cache (only 1: intros LE p Hp1 Hp2; only 1: intro; only 1: simpl; only 1: intros HF; only 1: firstorder).	35.9962818623	34443
Coq.Reals.Rtopology.open_set_P6	40	9.3.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H0; only 1: firstorder).	2.60925412178	1642
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40	7.5.10.1	synth with cache (only 1: intros delta H6; only 1: intro LS'; only 1: fix OddT_EvenT_rect 1; only 1: assumption).	4.82740998268	4682
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	15.0.15.4	synth with cache (only 1: unfold included; only 1: intros m Hm; only 1: intros; only 1: firstorder).	8.59893918037	11586
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40
Coq.Reals.Rseries.Un_growing_shift	40	0.11.2	synth with cache (only 1: intros; only 1: intro; only 1: now Nat.nzsimpl).	0.668663024902	395
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.Cauchy.ConstructiveExtra.Pos_pred_double_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_id	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.constructive_indefinite_ground_description_Z	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qlt_trans_swap_hyp	40	0.0.0.0.0	synth with cache (only 1: intros x y z ? ?; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.0527310371399	5
Coq.Reals.Cauchy.ConstructiveRcomplete.Qle_trans_swap_hyp	40	0.0.1.0.6	synth with cache (only 1: intros n m p; only 1: intros H H'; only 1: eapply Qle_trans; only 1: eauto; only 1: intuition subst; auto with qarith).	2.00106787682	786
Coq.Reals.Cauchy.ConstructiveRcomplete.Qpower_2powneg_le_inv	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pospow_lin_le_2pow	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self'	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cm_mono	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cauchy	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rup_pos	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_upper_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_seq	40	8.0.2	synth with cache (only 1: intros; only 1: unfold CReal_abs, CReal_abs_seq, CReal_abs_scale; only 1: split).	0.501106977463	235
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_diff	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_RQ_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos2Z_pos_is_pos	40	0.5	synth with cache (only 1: intros; only 1: now destruct p).	0.0902490615845	19
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Qgt_condition	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_seq_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_le_iff_lt	40	0.0.1.1	synth with cache (only 1: intros; only 1: split; only 1: apply Z.nle_gt; only 1: apply Z.lt_nge).	0.100158929825	6
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_lt_iff_le	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: split; only 1: apply Z.nlt_ge; only 1: apply Z.le_ngt).	0.0915200710297	4
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtDisjunctEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerAddExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerRemSubExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerFac	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_red_scale	40	1.0	synth with cache (only 1: intros a n H H'; only 1: auto).	0.0326719284058	3
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_scale_sep0_limit	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).	16.4171161652	316
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	0.0.0.1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros r; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold inject_Q, CReal_mult, CReal_mult_seq, CReal_mult_scale; only 1: do 2 rewrite CReal_red_seq; only 1: do 1 rewrite CReal_red_scale; only 1: change (Qbound_ltabs_ZExp2 1) with 1%Z; only 1: do 1 simplify_seq_idx; only 1: simplify_Qabs; only 1: pose proof (cauchy r n (n - 2)%Z n _ _) as Hrbnd; only 1: apply Qabs_Qlt_condition in Hrbnd; only 1: apply Qabs_Qle_condition; only 1: lra).	20.2604739666	2937
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBoundSpec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBound_lt_scale	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0409469604492	6
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0436058044434	3
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40	0.5.2.3.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply (CReal_mult_lt_compat_l x) in abs; only 1: apply H0; only 1: rewrite <- (CReal_mult_comm x), <- (CReal_mult_comm x); only 1: assumption; only 1: exact H).	24.5192840099	1082
Coq.Reals.Cauchy.PosExtra.Pos_pow_1_r	40	0.3.0.2.4.1	synth with cache (only 1: unfold Pos.pow; only 1: intros; only 1: apply Pos.iter_invariant; only 1: intros m H; only 1: now rewrite ?Pos.square_xO; only 1: trivial).	0.840902090073	597
Coq.Reals.Cauchy.PosExtra.Pos_le_multiple	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_le_mono_r	40
Coq.Reals.Cauchy.QExtra.Pos_log2floor_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Pos_log2ceil_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_le_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_leabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_1	40	13	synth with cache (only 1: reflexivity).	0.203910112381	60
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_2	40	0	synth with cache (only 1: reflexivity).	0.0216040611267	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_3	40	0	synth with cache (only 1: reflexivity).	0.0222220420837	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_4	40	0	synth with cache (only 1: reflexivity).	0.0874111652374	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_inv	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_opp	40
Coq.Reals.Cauchy.QExtra.Qlowbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qopp_mult_mone	40	0.0	synth with cache (only 1: intro n; only 1: reflexivity).	0.0289041996002	2
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qabs_involutive	40	3.1.14	synth with cache (only 1: fix odd_spec 1; only 1: intros; only 1: trivial).	3.28858709335	2368
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLt_RQ_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLe_0R_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40	1.6.0	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; N.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	2.36022901535	67
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.26	synth with cache (only 1: intro l; only 1: fix OddT_EvenT_rect 1; only 1: intro l'; only 1: auto).	3.42300486565	4413
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig'	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40	0.3.18	synth with cache (only 1: intro p; only 1: fix OddT_EvenT_rect 1; only 1: trivial).	14.5472490788	7255
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.5	synth with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0531158447266	39
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	9.2.6	synth with cache (only 1: intros n1 n2 H; only 1: destruct H as [p H]; only 1: now try split).	1.47635316849	1457
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40	1.12.12.0.14	synth with cache (only 1: intros p n; only 1: intros; only 1: revert H; only 1: intros <-; only 1: assumption).	35.1655659676	27268
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40	3.24.3.3.9	synth with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: assumption; only 1: pose proof (CRealLe_not_lt y x) as [_ Hyx']; only 1: apply H).	28.8214251995	38696
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40	1.1.7.0.0	synth with cache (only 1: intros x y z Hxley Hylez contra; only 1: apply Hylez; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	0.520454883575	478
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	1.0.9.1.7.0	synth with cache (only 1: intros x y z Hxeqy Hxlez; only 1: intro contra; only 1: apply Hxlez; only 1: apply (CRealLt_morph x y Hxeqy z z); only 1: apply CRealEq_refl; only 1: assumption).	13.1187579632	3884
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	0.1.0.0.0.1.0.0.0.0.3	synth with cache (only 1: intros x; only 1: intros q Hq; only 1: split; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_0_lt; lra); only 1: lra; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_0_lt; lra); only 1: lra).	1.92314195633	1192
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40	2.0.0.18	synth with cache (only 1: intros z; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	18.0459418297	4611
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_cauchy	40	0.5.19	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	9.64166283607	4788
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_red_seq	40	8.0	synth with cache (only 1: intros; only 1: trivial).	0.0254259109497	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.0820891857147	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z Hlt; only 1: apply CRealLt_above in Hlt; only 1: destruct Hlt as [n Hapart]; only 1: exists n; only 1: unfold CReal_plus, CReal_plus_seq in Hapart |- *; only 1: do 2 rewrite CReal_red_seq; only 1: do 2 rewrite Qred_correct; only 1: specialize (Hapart (n - 1)%Z _); only 1: lra).	0.126936197281	9
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40	3.1.4.19	synth with cache (only 1: fix Even_Odd_double 1; only 1: intros a b c; only 1: intro LE; only 1: eauto).	20.2006080151	12125
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	0.0.0.5.0	synth with cache (only 1: intros x y z Hlt contra; only 1: rewrite (CReal_plus_comm y), (CReal_plus_comm z) in Hlt; only 1: apply Hlt; only 1: apply CReal_plus_lt_compat_l; only 1: exact contra).	0.214398145676	19
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	1.2.3	synth with cache (only 1: intros x y z Hle Hlt; only 1: apply CReal_plus_lt_reg_l in Hlt; only 1: contradiction).	0.373009204865	45
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 3 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.0972349643707	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	0.0501470565796	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40	116	synth with cache (only 1: now f_equiv).	13.2119641304	22414
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40	1.0.0	synth with cache (only 1: fix le_div2 1; only 1: intros x; only 1: trivial).	0.0238180160522	4
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	3	synth with cache (only 1: reflexivity).	0.0141689777374	4
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40	0.1.7.3.12	synth with cache (only 1: intros q Hqgt0; only 1: intros [n nmaj]; only 1: cbn in nmaj; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_0_lt; lra); only 1: lra).	8.20779705048	5889
Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	0.1.0.0.2	synth with cache (only 1: intros x y Hxy; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_0_lt; lra); only 1: lra).	0.140513181686	62
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	3.0.2.12.2	synth with cache (only 1: intros; only 1: intro; only 1: intros; only 1: unfold opp_fct, limit1_in, limit_in, dist; only 1: auto with real).	0.912401914597	1003
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	0.0.0.1.6.0.0	synth with cache (only 1: unfold continuity_pt, opp_fct; only 1: intros; only 1: intro; only 1: intro; only 1: intros; only 1: generalize (H x y H0); only 1: auto with real).	0.742132902145	336
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	2.0	synth with cache (only 1: intros; only 1: auto).	0.0331339836121	4
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40	6.0.4.0.0.0.1.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: auto; only 1: unfold limit1_in in H; only 1: auto).	6.6851849556	3375
Coq.Reals.Ranalysis1.continuity_mult	40	0.0.0.13.0	synth with cache (only 1: unfold continuity; only 1: intros n m p H1 H2; only 1: apply continuity_pt_mult; only 1: auto; only 1: auto).	12.1039128304	6441
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	0.0.0.3.3.0.0.3.2	synth with cache (only 1: intros; only 1: intro; only 1: intro; only 1: simpl; only 1: intros; only 1: apply limit_inv; only 1: apply H; only 1: auto; only 1: auto).	31.5116448402	14278
Coq.Reals.Ranalysis1.continuity_div	40	1.2.1.3.0.0.14.0	synth with cache (only 1: intros; only 1: intro; only 1: rewrite (div_eq_inv f1 f2); only 1: apply continuity_pt_mult; only 1: auto with real; only 1: apply continuity_pt_inv; only 1: auto with real; only 1: auto with real).	13.7578451633	9269
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.11469912529	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0578470230103	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	29.0.7	synth with cache (only 1: intros n v; only 1: intro; only 1: eauto).	11.0671160221	13178
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_xeq	40	3.2	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition congruence).	0.122143030167	38
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_mirr	40
Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_opp_rev; only 1: apply derivable_pt_lim_opp; only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: exact H).	3.39800882339	1515
Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_rev; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).	0.12113904953	9
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_mirr	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.6.0	synth with cache (only 1: intro; only 1: intro H; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.150090932846	64
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0534560680389	5
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_opp_rev	40
Coq.Reals.Ranalysis1.derive_pt_mirr	40
Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	1.0.27	synth with cache (only 1: intros x n; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	17.8856110573	10280
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.2.12	synth with cache (only 1: intros H'1; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	3.56182003021	1701
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0566921234131	5
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	0.3.2.1.2.0.2.3.22	synth with cache (only 1: intros a a' p H; only 1: inversion H; only 1: elim H; only 1: clear H0; only 1: intros; only 1: clear H; only 1: simpl in *; only 1: apply derive_pt_eq_0; only 1: assumption).	29.1712641716	27371
Coq.Reals.Ranalysis1.pr_nu_xeq	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	9.0.0.4.0.0.1.4.2.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists x; only 1: elim H; only 1: unfold is_upper_bound; only 1: intro; only 1: unfold is_upper_bound in H0; only 1: intros; only 1: firstorder).	27.3797869682	19503
Coq.Reals.SeqProp.Wn_decreasing	40	3.3.0.14.0.19	synth with cache (only 1: intro; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: intros H; only 1: unfold has_ub in H; only 1: fix le_div2 1; only 1: auto).	25.6222770214	25228
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	4.10.7	synth with cache (only 1: intro k; only 1: fix gcd_divide 1; only 1: tauto).	11.5018877983	6027
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0251970291138	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40	0.4.1.2	synth with cache (only 1: intros P n v; only 1: intros HE; only 1: fix ind_0_1_SS 1; only 1: assumption).	0.201888084412	112
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40	0.4.1.2	synth with cache (only 1: intros P n v; only 1: intros HE; only 1: fix ind_0_1_SS 1; only 1: assumption).	1.80257701874	580
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40	0.0.0.0.1.5.1.1.0	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI; only 1: rewrite cos_PI2; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	5.84513401985	1652
Coq.Reals.Rtrigo_calc.tan_2PI	40	15.24.7	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI; only 1: apply Rmult_0_l).	16.5217628479	14080
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.120700836182	17
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0560290813446	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	0.0.0.0.1.12.2.27	synth with cache (only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: prove_sup; only 1: now apply (IZR_le 0 2); only 1: auto with real; only 1: apply sqrt_positivity; only 1: now apply (IZR_le 0 2)).	3.62262701988	3862
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.114118099213	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	1.0.0.0.0.2	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.124256849289	12
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: change 2 with (INR 2); only 1: apply lt_0_INR; only 1: Nat.order'; only 1: apply PI_RGT_0).	0.0757961273193	5
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	0.0.0.0.3.14.0.0.1	synth with cache (only 1: generalize PI2_RGT_0; only 1: intro; only 1: unfold Rdiv; only 1: pose proof PI_4 as t; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: Lra.lra).	35.5808939934	18626
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40	0.0.0	synth with cache (only 1: intros f x1 x2 H1 H2 Heq; only 1: subst; only 1: apply pr_nu).	0.0593709945679	3
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	1.6584789753	357
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.42	synth with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	2.18415188789	2523
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.42	synth with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.543776988983	1040
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.1	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0699880123138	6
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.0.2	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.176187992096	21
Coq.Reals.Ranalysis4.derive_pt_cosh	40
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.964004039764	89
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0784978866577	8
Coq.Reals.DiscrR.IZR_eq	40	4.0	synth with cache (only 1: intros x y H; only 1: now f_equal).	0.0709328651428	6
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40	8.2.12.0	synth with cache (only 1: intros x y; only 1: elim archimed with x; only 1: intros; only 1: ring_Rsqr).	4.37827301025	2955
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0508570671082	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.14	synth with cache (only 1: intros a Ha; only 1: ring_Rsqr).	0.619240999222	433
Coq.Reals.R_sqr.Rsqr_1	40	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0343661308289	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	8.0	synth with cache (only 1: intros; only 1: auto with real).	0.154328107834	28
Coq.Reals.R_sqr.Rsqr_div	40	0.0.4.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: assumption).	0.11163187027	8
Coq.Reals.R_sqr.Rsqr_eq_0	40	4.2.4.0	synth with cache (only 1: unfold Rsqr; only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with real).	1.33755493164	571
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0446360111237	2
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0592179298401	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	3.6.12	synth with cache (only 1: intros a b c; only 1: unfold Rsqr; only 1: auto with real).	27.0968270302	14250
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40
Coq.Reals.R_sqr.Rsqr_bounds_le	40
Coq.Reals.R_sqr.Rsqr_bounds_lt	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.0.0.1.5.2.2.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: intros; only 1: ring_Rsqr; only 1: intros; only 1: ring_Rsqr; only 1: trivial).	11.4803879261	4796
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	17.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).	24.8625330925	10006
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.2.3.0.11	synth with cache (only 1: intros Lt0; only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: trivial).	12.5639679432	6564
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.2.0.0.2	synth with cache (only 1: intro; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).	0.0838079452515	9
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.3.0	synth with cache (only 1: intro X1; only 1: intros; only 1: apply derivable_pt_id).	0.0726180076599	14
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	9.4	synth with cache (only 1: intros f g a x a0 q cf eps ep; only 1: intuition).	0.743276119232	265
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	0.0.0.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).	0.102189064026	5
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	0.0.0.0.0.0.5.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: apply g_wf; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition).	11.7700469494	1516
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	1.1.0	synth with cache (only 1: unfold Rdiv; only 1: intros; only 1: lra).	0.105182886124	16
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	4.1.2.1.3.15.0	synth with cache (only 1: intro n; only 1: apply Rlt_le; only 1: apply Rinv_0_lt_compat; only 1: simpl; only 1: apply lt_0_INR; only 1: Nat.nzsimpl'; only 1: apply le_n_S, Peano.le_0_n).	25.654957056	23362
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0496940612793	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0506041049957	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0484049320221	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0517671108246	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 H; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.223643064499	18
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.1.1	synth with cache (only 1: intros a b c; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.362837076187	19
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0597040653229	6
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0553369522095	4
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0565550327301	4
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.2.15.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.761693954468	631
Coq.Reals.Rlimit.eps2	40	6.1.0	synth with cache (only 1: intro; only 1: symmetry; only 1: field).	0.084282875061	19
Coq.Reals.Rlimit.eps4	40	0.0	synth with cache (only 1: intros n; only 1: field).	0.0577890872955	2
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.1	synth with cache (only 1: intros; only 1: lra).	0.0361368656158	3
Coq.Reals.Rlimit.Rlt_eps4_eps	40	1.5	synth with cache (only 1: intro; only 1: lra).	0.146400928497	59
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	1.0.9.2.3.1	synth with cache (only 1: unfold limit1_in; only 1: intros A t; only 1: intros Az RS; only 1: intros a1; only 1: intros H1 n H2; only 1: firstorder).	26.1103928089	11364
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0814290046692	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0622971057892	4
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.16.0.2	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	8.89790296555	4709
Coq.Reals.R_sqrt.pow2_sqrt	40	0.1.1.13	synth with cache (only 1: simpl; only 1: rewrite Rmult_1_r; only 1: intros; only 1: apply (sqrt_sqrt x H)).	3.15881204605	1668
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0626010894775	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.1.0.0.4	synth with cache (only 1: intros a b; only 1: intro; only 1: intro; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	3.01003289223	949
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.3.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.0860908031464	7
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.1.0.0.0.3	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply (sqrt_positivity x H); only 1: apply sqrt_pos).	4.10184907913	1074
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_neg_0	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.inv_sqrt	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).	0.442338943481	67
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.14898109436	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0648090839386	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40	0.0.20.2	synth with cache (only 1: red; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	12.346380949	5132
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40	4.0.0.11.0.0.0.8.0	synth with cache (only 1: intros; only 1: symmetry in  |- *; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite double; only 1: rewrite <- (sin2_cos2 x); only 1: unfold Rsqr; only 1: rewrite cos_plus; only 1: ring).	28.5369398594	14366
Coq.Reals.Rtrigo1.cos_2a_sin	40
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).	0.131196975708	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: ring_Rsqr).	0.120129823685	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.11.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	1.73119497299	560
Coq.Reals.Rtrigo1.PI2_RGT_0	40
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	1.0.0.0.0.12	synth with cache (only 1: rewrite <- Ropp_0; only 1: apply Ropp_lt_gt_contravar; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	8.86861300468	3512
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.1.0.0.1	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: destruct pi2_int; only 1: lra).	0.069452047348	7
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	5.65618801117	1234
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.sin_inj	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.cos_inj	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	1.4.0.0	synth with cache (only 1: simpl; only 1: intro m; only 1: intro p; only 1: trivial).	0.0680391788483	23
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	0	synth with cache (only 1: auto with zarith).	0.0222289562225	1
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.4.0.3.0.0.2	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite Rplus_assoc; only 1: rewrite HrecN; only 1: ring).	2.26375198364	1090
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	1.08305692673	325
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.Rtrigo_facts.sin2_bound	40
Coq.Reals.Rtrigo_facts.cos2_bound	40	0.4.0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- Rsqr_1; only 1: apply Rsqr_bounds_le; only 1: rewrite <- sin_shift; only 1: apply SIN_bound).	0.0886859893799	9
Coq.Reals.Rtrigo_facts.cos_sin	40
Coq.Reals.Rtrigo_facts.cos_sin_opp	40
Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40
Coq.Reals.Rtrigo_facts.sin_cos	40
Coq.Reals.Rtrigo_facts.sin_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40
Coq.Reals.Rtrigo_facts.tan_sin	40
Coq.Reals.Rtrigo_facts.tan_sin_opp	40
Coq.Reals.Rtrigo_facts.tan_cos	40
Coq.Reals.Rtrigo_facts.tan_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_tan	40
Coq.Reals.Rtrigo_facts.cos_tan	40
Coq.Reals.Rtrigo_facts.sin_pi_minus	40	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0966000556946	5
Coq.Reals.Rtrigo_facts.sin_pi_plus	40	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0968279838562	5
Coq.Reals.Rtrigo_facts.cos_pi_minus	40
Coq.Reals.Rtrigo_facts.cos_pi_plus	40	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.147894144058	5
Coq.Reals.Rtrigo_facts.tan_pi_minus	40
Coq.Reals.Rtrigo_facts.tan_pi_plus	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0622131824493	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40
Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40
Coq.Reals.Abstract.ConstructiveSum.sum_const	40
Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40	8.17.5	synth with cache (only 1: fix gcd_greatest 1; only 1: intros Base Step n; only 1: trivial).	7.05539679527	9887
Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40
Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40
Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40
Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40
Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40
Coq.Reals.Abstract.ConstructiveSum.sum_opp	40
Coq.Reals.Abstract.ConstructiveSum.sum_scale	40
Coq.Reals.Abstract.ConstructiveSum.sum_plus	40
Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40
Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40	7.3.0.7	synth with cache (only 1: fix gcd_greatest 1; only 1: induction n; only 1: reflexivity; only 1: auto).	2.00659608841	1804
Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40
Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40
Coq.Reals.Abstract.ConstructiveSum.splitSum	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	0.0.1	synth with cache (only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: assumption).	0.0315229892731	4
Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40	7.10	synth with cache (only 1: fix gcd_greatest 1; only 1: auto with sets).	12.3989830017	4824
Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40	0.0.0	synth with cache (only 1: split; only 1: apply CRmorph_rat; only 1: apply CRmorph_rat).	0.0312449932098	3
Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40	1.22	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	2.72764110565	3657
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40	10.5	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	1.28287315369	849
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40
Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40
Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40
Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40	1.0.0.6.1	synth with cache (only 1: intros; only 1: apply CRmult_morph; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	1.33375096321	252
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40	0.0.2.0.0.0.1	synth with cache (only 1: intros R x y exy z t ezt; only 1: unfold CRmin; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite exy, ezt; only 1: reflexivity; only 1: reflexivity).	0.38281917572	83
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.0.0.0.0.0.0	synth with cache (only 1: intros R x y H z t H0; only 1: unfold CRmax; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	0.130317926407	7
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros R p q r H; only 1: unfold CRmin, CRmax; only 1: setoid_replace (r * q - r * p) with (r * (q - p)); only 1: rewrite CRabs_mult; only 1: rewrite (CRabs_right r); only 1: rewrite <- CRmult_assoc; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: do 2 rewrite <- CRmult_plus_distr_l; only 1: reflexivity; only 1: reflexivity; only 1: exact H; only 1: unfold CRminus; only 1: rewrite CRmult_plus_distr_l, CRopp_mult_distr_r; only 1: reflexivity).	17.428645134	4080
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40	2.1	synth with cache (only 1: fix gcd_greatest 1; only 1: destr_bool).	0.0448429584503	21
Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	6.0.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: destruct H; only 1: assumption).	0.303714036942	215
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40	6.0.11.2.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: assumption).	3.05384588242	4247
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40	0.4.0.4.2	synth with cache (only 1: split; only 1: red; only 1: apply CRmorph_rat; only 1: red; only 1: apply CRmorph_rat).	0.6134288311	390
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.0	synth with cache (only 1: intros a n Hn; only 1: apply CRmorph_rat).	0.0243670940399	2
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40
Coq.Reals.Abstract.ConstructivePower.CRpow_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40
Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40
Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40
Coq.Reals.Abstract.ConstructivePower.CR_double	40
Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40
Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40
Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40	6.11.16.0.13	synth with cache (only 1: intros; only 1: destruct (CRltLinear R); only 1: intuition; only 1: red; only 1: eauto).	27.6790850163	9464
Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: constructor 1; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	0.0691449642181	27
Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	2.2.0.3.2	synth with cache (only 1: intros * []; only 1: destruct (CRltLinear R); only 1: split; only 1: assumption; only 1: assumption).	0.612630844116	362
Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40
Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40	2.4.1.2.7.0.6.4.5.12	synth with cache (only 1: intro n; only 1: split; only 1: now f_equiv; only 1: now Z.nzsimpl'; only 1: intro H0; only 1: intros q; only 1: intros n' Hn'; only 1: intro; only 1: rewrite <- H; only 1: trivial).	29.5572900772	25028
Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	1.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).	0.134580850601	23
Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	5.4.5.4.0.4.0	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: split; only 1: destruct (CRisRing R); only 1: apply Radd_assoc; only 1: destruct (CRisRing R); only 1: apply Radd_assoc).	9.30673003197	8071
Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40	0.4.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: destruct (CRisRing R); only 1: apply Radd_comm).	0.114260911942	25
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	0	synth with cache (only 1: apply (CRisRingExt R)).	0.0235319137573	1
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	4.4.0.1.1.2.7.2.3	synth with cache (only 1: intros; only 1: intro He; only 1: intros n (m, H); only 1: intro abs; only 1: apply (CRisRingExt R); only 1: destruct (CRltLinear R), p; only 1: split; only 1: assumption; only 1: assumption).	18.8790009022	13140
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40	2.2.0.1.1.0.9.0.4	synth with cache (only 1: intros; only 1: CRelationClasses.reduce; only 1: apply (CRisRingExt R); only 1: assumption; only 1: destruct H, H0; only 1: destruct (CRltLinear R); only 1: split; only 1: assumption; only 1: assumption).	17.5807089806	8814
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros H0 H1; only 1: intros; only 1: destruct H; only 1: apply H0; only 1: split; only 1: intro abs; only 1: contradiction; only 1: intro abs; only 1: contradiction).	0.0821890830994	9
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40	0.0.2.0.0.0.0.2.0.0.3	synth with cache (only 1: split; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: apply CRplus_morph; only 1: reflexivity; only 1: reflexivity; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: apply CRplus_morph; only 1: reflexivity; only 1: reflexivity).	4.8571228981	2423
Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	3.1.1.0	synth with cache (only 1: intros; only 1: apply CReq_sym; only 1: apply CReq_sym; only 1: apply CRisRing).	0.147472143173	36
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40	6.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply CRisRing).	0.206995010376	43
Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	0.17	synth with cache (only 1: intros m Hm; only 1: apply CRisRing).	1.3564350605	1087
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	1.1.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: transitivity (r2 * r1 + r3 * r1); only 1: apply Rdistr_l; only 1: destruct (CRisRingExt R); only 1: apply CReq_refl).	0.920782089233	82
Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40	1.14.0.0	synth with cache (only 1: intros; only 1: rewrite <- (CRplus_opp_r x); only 1: apply CRplus_lt_compat_r; only 1: exact H).	6.63129615784	692
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).	0.0873758792877	25
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40
Coq.Reals.Abstract.ConstructiveReals.CRfloor	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40
Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40
Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.0.0	synth with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1, CRle_refl).	0.0351281166077	3
Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40
Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40	111	synth with cache (only 1: eauto).	21.4466359615	49420
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40
Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40
Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40
Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	0.3.0	synth with cache (only 1: split; only 1: auto with real; only 1: auto with real).	0.0973041057587	6
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.4.2.1.0.0.0.14.0	synth with cache (only 1: intro; only 1: generalize (Rlt_irrefl 0); only 1: intro; only 1: generalize (Rlt_irrefl 0); only 1: case n; only 1: auto with real; only 1: intros; only 1: apply pow_nonzero; only 1: discrR).	13.7957420349	3229
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.0.0.4.0.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: cbn; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	2.30666804314	688
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.Array.PArray.default_copy	40
Coq.Array.PArray.default_make	40
Coq.Array.PArray.get_set_same_default	40
Coq.Array.PArray.get_not_default_lt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	4.0	synth with cache (only 1: intros; only 1: intuition).	0.0376539230347	6
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0	synth with cache (only 1: constructor).	0.0228328704834	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).	0.0409140586853	6
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: auto).	0.0233879089355	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	2.0.0.5.2	synth with cache (only 1: intros; only 1: induction m; only 1: auto; only 1: simpl; only 1: auto).	0.329090118408	162
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0501780509949	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	0.2.15.4.1.1	synth with cache (only 1: intros m x; only 1: case m; only 1: intros m1 m2; only 1: fix even_spec 1; only 1: intros; only 1: auto).	11.6682400703	14210
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	24.39	synth with cache (only 1: intros e1 e2 EQ; only 1: now apply N.lt_irrefl with 0%N).	13.0842220783	6070
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	2.1.3	synth with cache (only 1: fix odd_specT 1; only 1: intros H; only 1: auto).	0.24696803093	88
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	5.26.1.5.2	synth with cache (only 1: intros m; only 1: intros nf; only 1: intros; only 1: red; only 1: auto using Proofs.find_1, find_2).	6.90037894249	13113
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	1.0.0.41	synth with cache (only 1: intros n m p; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	4.84804987907	8636
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	0.1.0.0.1.0.6.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: simpl; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	3.78606295586	2289
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.1.3.0	synth with cache (only 1: split; only 1: auto; only 1: intro n; only 1: intuition).	0.0800170898438	17
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	3.0	synth with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).	0.0737438201904	13
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	1.0.15.9	synth with cache (only 1: intro p; only 1: fix even_specT 1; only 1: intros; only 1: auto with zarith).	12.0924339294	10755
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	4.2.1.7.14	synth with cache (only 1: intros p q q'; only 1: induction 1; only 1: auto; only 1: now constructor; only 1: auto).	23.8027250767	22781
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40	0.2.12.0.3.8.35.0	synth with cache (only 1: induction 1; only 1: eauto with ordered_type; only 1: firstorder  (subst; auto); only 1: exists x; only 1: auto; only 1: firstorder  (subst; auto); only 1: exists x; only 1: auto).	37.0982890129	64699
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.1.4.2.2.13	synth with cache (only 1: intro l; only 1: intros f' Hlc; only 1: intro Dec; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	3.59307098389	4448
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	1.3	synth with cache (only 1: intuition; only 1: intuition_in).	0.103595018387	6
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	1	synth with cache (only 1: inversion 1).	0.0268249511719	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.2.4	synth with cache (only 1: intro p; only 1: intros sorted hyp; only 1: intuition_in).	0.0712161064148	23
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	0.0.9.26.14	synth with cache (only 1: intros ? ? H H0 H1 H2 **; only 1: inversion_clear 1; only 1: L.MX.order; only 1: auto; only 1: auto).	37.3588130474	19830
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	3.0.0.1.7.14	synth with cache (only 1: intros; only 1: inversion 1; only 1: L.MX.order; only 1: apply H; only 1: auto; only 1: auto).	13.3766131401	2570
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	1.0	synth with cache (only 1: intros; only 1: eauto with ordered_type).	0.0385880470276	3
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0316820144653	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0297651290894	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0294160842896	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.0340030193329	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0451819896698	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0351948738098	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	1	synth with cache (only 1: eauto with ordered_type).	0.0230250358582	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	9.6.23	synth with cache (only 1: intro a; only 1: intro H; only 1: easy).	3.38290715218	3473
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	1.0.0	synth with cache (only 1: fix even_specT 1; only 1: intros w2 H; only 1: auto).	0.0424189567566	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	0.0.0.2.0.0	synth with cache (only 1: intros m x; only 1: functional induction find x m; only 1: easy'; only 1: auto; only 1: auto; only 1: auto).	0.0718147754669	8
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	1.0.0.0.10.2.2.0	synth with cache (only 1: unfold gt_tree in *; only 1: intros m x; only 1: intros y0 z D H0 H1; only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	5.79941892624	4486
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.0	synth with cache (only 1: unfold create; only 1: intuition_in).	0.0912611484528	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40	2.45	synth with cache (only 1: fix OddT_EvenT_rect 1; only 1: eauto).	5.40652608871	12763
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40	0.0.38	synth with cache (only 1: fix OddT_EvenT_rect 1; only 1: intros; only 1: auto).	9.62112402916	15621
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.0.0.0.2.0.10	synth with cache (only 1: intros m x y e e'; only 1: intuition; only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	2.7508919239	1591
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	17.4.65	synth with cache (only 1: repeat red; only 1: simpl; only 1: now intro l; induction l).	35.8211650848	27104
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	0.2.1.2.15	synth with cache (only 1: intros l x e r; only 1: simpl; only 1: intros sorted belong1; only 1: inversion_clear 1; only 1: constructor 1).	19.2063059807	6018
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	5.16	synth with cache (only 1: fix even_spec 1; only 1: intuition_in).	9.98440790176	6889
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	1.0.0.0.3	synth with cache (only 1: induction m; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.129097938538	24
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	8.1.0.2.0.0.2	synth with cache (only 1: intros m x; only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: intuition_in).	3.85657501221	2077
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0929961204529	7
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	0.3.6.10	synth with cache (only 1: intros P; only 1: intro H; only 1: intuition; only 1: inversion H0).	1.55413389206	849
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	7.15	synth with cache (only 1: fix odd_spec 1; only 1: tauto).	1.08682394028	1117
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	3.18.0.14.0.10.0	synth with cache (only 1: intros m x; only 1: red; only 1: simpl; only 1: intros s1; only 1: induction m; only 1: intros a Ha; only 1: auto using find_1, add_1 with ordered_type).	38.4739339352	51872
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	1.9.4.0.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: intros; only 1: CRelationClasses.simpl_crelation; only 1: eauto using add_2, add_3).	3.06584811211	2382
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	2.12.6.7	synth with cache (only 1: intros l IN f; only 1: intros; only 1: apply L.find_2; only 1: auto).	2.19319200516	3684
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	0.5.5.49	synth with cache (only 1: intros a b **; only 1: compute; only 1: rewrite <- elements_mapsto; only 1: intuition).	26.8945329189	40521
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	0.0.0.0.0.0.21.0.0.1	synth with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros [y H]; only 1: unfold Raw.elements; only 1: simpl in *; only 1: apply PX.Sort_NoDupA; only 1: apply elements_aux_sort; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	2.10887503624	3558
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	5.17.0.0.5	synth with cache (only 1: intros f' Hlc; only 1: intros m; only 1: unfold Equivb, Equiv, Raw.Proofs.Equivb, In; only 1: fix odd_spec 1; only 1: auto).	6.97972297668	5059
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	0.3.23	synth with cache (only 1: fix even_specT 1; only 1: intros l; only 1: auto).	12.9155480862	12010
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	6.0.6.0.27	synth with cache (only 1: intro l; only 1: destruct l as [| x l]; only 1: simpl; only 1: trivial; only 1: reflexivity).	1.95804381371	4616
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0364379882812	2
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.2.1.0.1	synth with cache (only 1: split; only 1: destruct m2; only 1: intros H'; only 1: intuition; only 1: now Z.swap_greater).	0.0905110836029	9
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	3.2.35	synth with cache (only 1: intros P1; only 1: fix OddT_EvenT_rect 1; only 1: auto).	37.4026739597	28462
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	7	synth with cache (only 1: intuition).	0.115365982056	62
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	3	synth with cache (only 1: intuition).	0.0530591011047	19
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	11	synth with cache (only 1: intuition).	0.330814123154	246
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.023933172226	2
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.4	synth with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0835289955139	25
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	6	synth with cache (only 1: intuition).	0.142046928406	71
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	0	synth with cache (only 1: intuition).	0.0574510097504	1
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	39	synth with cache (only 1: intuition).	3.9559700489	7070
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	10.5.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intros; only 1: intuition).	2.2332201004	2017
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	8.62.3.14.63	synth with cache (only 1: constructor; only 1: intuition; only 1: auto; only 1: intros l1 l2; only 1: eauto).	27.6101980209	70188
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	13.4.0.7	synth with cache (only 1: intros x x'; only 1: unfold Empty; only 1: intros; only 1: firstorder).	2.46452689171	3273
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	18.1.8.0	synth with cache (only 1: unfold Equal; only 1: repeat red; only 1: intros; only 1: firstorder).	13.7716631889	12386
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	3	synth with cache (only 1: congruence).	0.0328249931335	21
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.14	synth with cache (only 1: intros l1 l2 l1' l2' H H0; only 1: auto).	0.468830108643	366
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	31	synth with cache (only 1: firstorder).	3.10039401054	4644
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	0.1.21.16	synth with cache (only 1: intros; only 1: intro; only 1: do 2 rewrite union_iff; only 1: intuition).	14.1531438828	23025
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.0.2.28.14	synth with cache (only 1: intros a b H; only 1: red; only 1: intro y0; only 1: intros; only 1: eauto with set).	16.8552341461	30537
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	7.0.2.1.26	synth with cache (only 1: intros l2 l' H; only 1: intuition; only 1: intro a; only 1: do 2 rewrite diff_iff; only 1: firstorder).	10.4477820396	14976
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	2.3.0.25	synth with cache (only 1: intros a b q r ? ?; only 1: do 2 (rewrite filter_iff; auto); only 1: intros; only 1: intuition).	16.4390830994	17476
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.1.1.5	synth with cache (only 1: intro i; only 1: inversion 1; only 1: destruct H; only 1: now subst).	0.358996868134	169
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	1.19	synth with cache (only 1: intros a Ha; only 1: now split).	0.618702888489	1021
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.0.2	synth with cache (only 1: intros n m; only 1: intro H; only 1: now rewrite <- ?BinInt.Z.pred_le_mono).	0.0511310100555	22
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	25.2	synth with cache (only 1: intros; only 1: firstorder).	3.4758939743	3602
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	6.0	synth with cache (only 1: intros; only 1: trivial).	0.043035030365	17
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0	synth with cache (only 1: trivial).	0.0181758403778	1
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.6.0	synth with cache (only 1: intros n; only 1: simpl; only 1: trivial).	0.0688769817352	32
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	30	synth with cache (only 1: discriminate).	0.271039962769	566
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	10.1	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.556721925735	349
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	1.10	synth with cache (only 1: fix odd_spec 1; only 1: assumption).	0.0865120887756	62
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	21.2	synth with cache (only 1: intros x0 y; only 1: now BinInt.Z.nzsimpl).	0.653000831604	1239
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	2.8	synth with cache (only 1: fix odd_spec 1; only 1: destr_bool).	0.551769971848	296
Coq.FSets.FSetPositive.PositiveSet.subset_1	40	0.1.1.15	synth with cache (only 1: fix odd_spec 1; only 1: intro H; only 1: intros; only 1: auto).	10.7484080791	8625
Coq.FSets.FSetPositive.PositiveSet.subset_2	40	6.0.3	synth with cache (only 1: intro a; only 1: fix even_specT 1; only 1: trivial).	0.54681801796	240
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	6.10	synth with cache (only 1: fix odd_spec 1; only 1: eauto).	8.0223441124	6284
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.20.13.7	synth with cache (only 1: intro b1; only 1: intro n; only 1: fix odd_specT 1; only 1: easy).	32.8240718842	44269
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	1.8.0.5.4.11	synth with cache (only 1: intro H; only 1: intros; only 1: left; only 1: repeat red; only 1: fix gcd_divide 1; only 1: auto).	7.73830318451	8464
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	4.1.1.0.11.10.11	synth with cache (only 1: intros a b c Hb Hc; only 1: intro H; only 1: subst; only 1: destruct c; only 1: trivial; only 1: reflexivity; only 1: reflexivity || destruct H).	32.2076978683	46549
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	11	synth with cache (only 1: destr_bool).	0.199851989746	129
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	1.0.1.0.1.6	synth with cache (only 1: intros; only 1: case u; only 1: intuition; only 1: easy'; only 1: intuition; only 1: now subst).	2.04195284843	1114
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	13.3.0.3	synth with cache (only 1: split; only 1: intuition; only 1: destr_bool; only 1: destr_bool).	1.47844696045	1208
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	2.4.0.0.0.0.0.0.1.0.1	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: intro m; only 1: destruct m; only 1: now split; only 1: case is_empty; only 1: now split; only 1: now split; only 1: simpl; only 1: fix odd_spec 1; only 1: intuition discriminate).	11.579212904	4950
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	9.5.7.25.1.6.9	synth with cache (only 1: intro q; only 1: destruct q; only 1: simpl; only 1: constructor; only 1: constructor; only 1: simpl; only 1: constructor).	5.22709012032	20532
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0292069911957	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.56.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	2.12632918358	7529
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0315549373627	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0360631942749	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	6.0.0.0.0.0.0.6.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: intuition).	2.51647686958	3418
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.1.1	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: clear IHl IHr; only 1: trivial).	0.0560269355774	21
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40	6.36	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	8.64310598373	14192
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40	3.5.36	synth with cache (only 1: intros P l; only 1: fix Even_alt_Even 1; only 1: firstorder  (subst; auto)).	11.6152951717	18273
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.0306329727173	3
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.1.4.12	synth with cache (only 1: intros x; only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	4.16913509369	1765
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	1.1.22	synth with cache (only 1: intros a b H; only 1: rewrite remove_spec; only 1: tauto).	1.39855194092	2279
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.1	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).	0.164528131485	67
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	7.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).	0.236567974091	103
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	5.10.4	synth with cache (only 1: intros s s'; only 1: fix Odd_alt_Odd 1; only 1: trivial).	4.79096698761	3946
Coq.FSets.FSetPositive.PositiveSet.inter_1	40	1.4.17.2.3.3.3	synth with cache (only 1: intros s' s''; only 1: destruct s'; only 1: intros a Hin; only 1: trivial; only 1: fix even_specT 1; only 1: simpl; only 1: intuition congruence).	22.0294458866	33533
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0370869636536	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.10	synth with cache (only 1: intros A A_wd A0 AS; only 1: rewrite inter_spec; only 1: tauto).	0.986253976822	718
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.03817486763	3
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	3.4.0.1	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: intros n m; only 1: tauto).	0.343147039413	163
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	0.1.5	synth with cache (only 1: fix even_spec 1; only 1: intro l'; only 1: now subst).	0.0444960594177	18
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	0.6.5.12	synth with cache (only 1: intros Ha Eq; only 1: intro; only 1: fix even_spec 1; only 1: tauto).	4.78002810478	3888
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.3.0.0.0	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: intros m Hm; only 1: auto).	0.0674519538879	13
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	0.1.3.2.0.16.4	synth with cache (only 1: intros a; only 1: intros [| l' o' r']; only 1: intro m; only 1: now split; only 1: fix odd_spec 1; only 1: intro H; only 1: trivial).	36.1983749866	15126
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	3.0.0.33	synth with cache (only 1: intros x x' EQ; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: intuition).	30.5101370811	35353
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	3.0.0.16.17	synth with cache (only 1: intros x; only 1: intro H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: intuition congruence).	10.5663881302	21725
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0310080051422	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40	0.21.13.6	synth with cache (only 1: intros a H1; only 1: revert a; only 1: fix sqrtrem_spec 1; only 1: eauto).	13.6780259609	24685
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40	3.1.13.3.7.4	synth with cache (only 1: intros n; only 1: intro H'; only 1: unfold In; only 1: fix even_specT 1; only 1: intro; only 1: auto).	34.2560400963	31611
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.0540618896484	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.63	synth with cache (only 1: fix even_spec 1; only 1: easy).	4.37649321556	17047
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0552749633789	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	2.0.0.0.2.7.2	synth with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto).	0.952050924301	604
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: intro H; only 1: destruct o; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	12.2561819553	4633
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	1.0.0.0.2.0	synth with cache (only 1: induction i; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.178791046143	44
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	0.1.28	synth with cache (only 1: fix even_spec 1; only 1: intros x y H; only 1: intuition).	16.0337109566	7698
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40	0.6.23.0	synth with cache (only 1: unfold In, MapsTo; only 1: intros s2; only 1: fix even_specT 1; only 1: eauto).	7.65027403831	10757
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	3.2	synth with cache (only 1: intros L H; only 1: congruence).	0.0276079177856	7
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	4	synth with cache (only 1: auto).	0.0508978366852	21
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	2	synth with cache (only 1: auto).	0.0438408851624	17
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.97577786446	4453
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.057755947113	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	1.7.0.4.0.1	synth with cache (only 1: intros z n; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.961647987366	1203
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	13.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.678158998489	486
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	1.0.0	synth with cache (only 1: intros s1; only 1: intros s2; only 1: intuition).	0.0394220352173	4
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	1.0.6.1	synth with cache (only 1: split; only 1: destruct 1; only 1: apply (empty_1 H); only 1: intuition).	0.474509000778	220
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.1	synth with cache (only 1: intros; only 1: intuition).	0.0573689937592	18
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.0.14.0.0.1.2.1	synth with cache (only 1: split; only 1: intros; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: firstorder; only 1: apply add_2; only 1: auto; only 1: auto).	7.45215511322	7662
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.4	synth with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.140622854233	38
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.3.0.0.1.1.6.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_2; only 1: auto; only 1: auto).	4.62055802345	4443
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.0.3	synth with cache (only 1: intros A n p; only 1: intros; only 1: auto with map).	0.04523396492	16
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	0.0.0.0.0.0.8.10.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_2; only 1: auto).	3.7930328846	3635
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	3.3.3.32	synth with cache (only 1: intuition; only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition; only 1: auto with map).	11.3063211441	20173
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.130325078964	37
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).	0.106028079987	11
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	2.0	synth with cache (only 1: intros z Base Step; only 1: auto).	0.0581710338593	22
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	1.9.4	synth with cache (only 1: intros a b; only 1: intros m w le; only 1: auto with map).	0.381248950958	477
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	10.1	synth with cache (only 1: intros a b q ? ? ?; only 1: congruence).	0.401329040527	300
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	2.4	synth with cache (only 1: intros n; only 1: auto).	0.0911331176758	35
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.1.1.3.0.0	synth with cache (only 1: unfold Equal; only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	0.654088020325	248
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40	2.10	synth with cache (only 1: fix OddT_EvenT_rect 1; only 1: eauto).	0.876883983612	514
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40	1.0.10.0.1.2.0.1.0.7.1	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, elements_mapsto_iff; only 1: rewrite <- elements_mapsto_iff, of_list_1; only 1: rewrite <- find_mapsto_iff, elements_mapsto_iff; only 1: intuition; only 1: unfold eq_key; only 1: apply elements_3w).	8.96922087669	9012
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	3.0.1.0.0.19	synth with cache (only 1: intros Hnd; only 1: intros; only 1: apply fold_rec; only 1: eauto; only 1: intros k e a m' m'' H ? ? ?; only 1: intuition).	6.23619198799	7980
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	7.0.31	synth with cache (only 1: intro; only 1: rewrite cardinal_1, elements_Empty; only 1: apply length_zero_iff_nil).	4.43375611305	6167
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	0.1.1.14	synth with cache (only 1: intros a; only 1: rewrite <- cardinal_Empty; only 1: intros; only 1: auto).	2.59452986717	2719
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	0.0.0.0.0.0.0.10.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: dintuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	4.31819915771	3123
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	13.3.6.2.1.8.0.4	synth with cache (only 1: intros n m; only 1: split; only 1: compute; only 1: intros l1 l1' l2 l2' H H'; only 1: eauto; only 1: compute; only 1: intro y0; only 1: firstorder).	23.1517980099	34115
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	18.9	synth with cache (only 1: intros x y H; only 1: firstorder).	3.28571295738	4245
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	17.4	synth with cache (only 1: intros Az RS; only 1: firstorder  (subst; auto)).	8.80660295486	5805
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40	0.0.0.1.11.0	synth with cache (only 1: intros m m' k e; only 1: rewrite mem_in_iff; only 1: apply filter_iff; only 1: intros ? ? Hk _ _ _; only 1: rewrite Hk; only 1: auto).	0.87614607811	567
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.5	synth with cache (only 1: intros n m p; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.707683086395	375
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	7.30	synth with cache (only 1: intro p; only 1: inversion 1).	0.800200939178	1202
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.7	synth with cache (only 1: unfold Empty, empty; only 1: intuition).	0.0196149349213	9
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	3.16	synth with cache (only 1: fix odd_spec 1; only 1: auto).	8.22260093689	1546
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	0.0.18.23	synth with cache (only 1: intros l2; only 1: fix odd_spec 1; only 1: intros H; only 1: eauto with bool).	27.9384901524	14824
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40	0.2.7.0.0	synth with cache (only 1: intros m Hm x; only 1: generalize Hm; only 1: fix odd_specT 1; only 1: generalize Hm; only 1: trivial).	1.20796895027	762
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	0.0.5	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: auto using eqke_equiv).	0.134726047516	55
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	0.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	5.3650598526	1586
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.2.2.0.1.0.0.0.1.0	synth with cache (only 1: intros m Hm x y; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: intro H2; only 1: inversion_clear 1; only 1: auto; only 1: auto).	7.22692894936	2497
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	1.0.0.0.0	synth with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros p l inlist; only 1: auto).	0.0411198139191	6
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0159208774567	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intuition).	0.0305778980255	4
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	1.33	synth with cache (only 1: fix even_spec 1; only 1: intuition).	34.7668881416	34005
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	17.2999560833	6550
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	28	synth with cache (only 1: inversion_clear 1).	0.0970571041107	390
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	4.6	synth with cache (only 1: fix odd_specT 1; only 1: firstorder).	0.300758123398	205
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	7.1	synth with cache (only 1: fix even_specT 1; only 1: auto).	0.063050031662	42
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	6.0	synth with cache (only 1: intros m; only 1: auto).	0.0222289562225	8
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0218720436096	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.20	synth with cache (only 1: intros (e, abs); only 1: auto).	0.212231874466	455
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	6.0	synth with cache (only 1: intros m; only 1: reflexivity).	0.0228490829468	8
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.2.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: auto with fset; only 1: intros; only 1: auto with fset).	0.0364220142365	9
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	4.2.0.0	synth with cache (only 1: intros until s; only 1: intros; only 1: generalize (union_inter_cardinal s s'); only 1: solve_proper).	0.0788309574127	26
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.0.7.0.4.1.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intros; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	4.15356993675	4371
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	2.2.19.2.9.19.12	synth with cache (only 1: constructor; only 1: intuition; only 1: intro H2; only 1: destruct 1; only 1: red; only 1: repeat red; only 1: auto with set).	31.3356389999	47525
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.0.0.0.3.0.0.5.0.0.0.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	12.4590349197	7249
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.119210004807	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40	5.0.5.3.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: intro n; only 1: do 2 rewrite mem_iff; only 1: auto).	14.9366760254	4790
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	4.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition).	0.714110136032	118
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0239670276642	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	4.1.1	synth with cache (only 1: apply mem_1; only 1: apply add_1; only 1: auto).	0.0415861606598	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.121256113052	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0290801525116	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.122651100159	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	4	synth with cache (only 1: intuition).	0.0402600765228	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.0.10	synth with cache (only 1: intro H; only 1: rewrite <- not_mem_iff; only 1: auto with fset).	2.61290788651	644
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.7.2	synth with cache (only 1: rewrite mem_iff; only 1: intuition; only 1: congruence).	0.60297703743	208
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0	synth with cache (only 1: auto with set).	0.0225448608398	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	5.1.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0543599128723	13
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0336539745331	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	1	synth with cache (only 1: auto with set).	0.0208139419556	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	4.0	synth with cache (only 1: intros; only 1: auto with set).	0.0429208278656	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	2.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0799548625946	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	0.7.41	synth with cache (only 1: fix even_specT 1; only 1: intros; only 1: auto).	18.5011229515	44662
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	1.1	synth with cache (only 1: intros; only 1: auto with set).	0.0343008041382	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0212600231171	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	2.8	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.550421953201	128
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	2.0.0.6	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	0.762188196182	168
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0	synth with cache (only 1: auto with set).	0.0204389095306	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0650141239166	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.0214610099792	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0286128520966	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0227980613708	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0222280025482	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0231029987335	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0911691188812	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0204000473022	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.021420955658	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0219140052795	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0845129489899	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0224049091339	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.023411989212	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0229001045227	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0238599777222	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0235669612885	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0209939479828	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0197451114655	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.222076892853	14
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.4	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.526628017426	77
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0202379226685	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0214920043945	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.054594039917	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0200588703156	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0250561237335	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.0207281112671	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0241601467133	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0207450389862	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0283770561218	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.1.1.1.3.4.0	synth with cache (only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	4.09251594543	1641
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	2.2.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.20741891861	994
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	synth with cache (only 1: auto with set fset).	0.0217518806458	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0672550201416	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0671529769897	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	3.4.8.0.20	synth with cache (only 1: intros m Hm; only 1: rewrite <- not_mem_iff; only 1: revert m; only 1: intros a Ha; only 1: intuition).	19.5326328278	18909
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	14.9	synth with cache (only 1: intro l; only 1: intuition).	1.39438796043	1549
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0	synth with cache (only 1: solve_proper).	0.0323009490967	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	2.3.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: red; only 1: intuition).	0.273514032364	66
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0259971618652	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: unfold Add, MP.Add; only 1: red; only 1: intros; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	5.12717604637	1284
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	0.0.5.2.0.0.1.0	synth with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: do 2 (rewrite filter_iff; auto); only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: tauto; only 1: auto).	4.67535090446	1644
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	1.0.4.7	synth with cache (only 1: intro n; only 1: intros m H; only 1: f_equal; only 1: intuition).	0.349597930908	182
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	4.3.0.1	synth with cache (only 1: intros l; only 1: intros; only 1: simpl; only 1: eauto with set).	0.242377996445	148
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	2.26.8	synth with cache (only 1: intros a n; only 1: fix odd_specT 1; only 1: intuition).	9.82123494148	16360
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.1.0.1.1.0.0.2.6	synth with cache (only 1: intros ? ?; only 1: unfold subset; only 1: case (M.equal s s'); only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	3.40139198303	3506
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	1.1.1.0.1.11.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: case (M.choose s); only 1: intros A l; only 1: destruct l; only 1: intros; only 1: discriminate H; only 1: auto; only 1: auto).	4.88185286522	6011
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.0.1	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.058559179306	17
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	4.0	synth with cache (only 1: intro H; only 1: auto with ordered_type).	0.0251760482788	14
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.3.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.928704023361	230
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	3.35719895363	919
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.10693693161	18
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0348150730133	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.0.0.3.1.5.1	synth with cache (only 1: intros s x y; only 1: case (M.add x s); only 1: case (M.add x s); only 1: case (M.is_empty s); only 1: unfold add; only 1: case (M.add x s); only 1: firstorder; only 1: unfold add; only 1: case (M.add x s); only 1: firstorder).	14.9994959831	6664
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.0.0.1.0	synth with cache (only 1: intros s x y; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0501329898834	8
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0300679206848	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.1.2.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).	0.571950912476	67
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0322701931	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0318310260773	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0.3.1.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: firstorder; only 1: case (M.elements s); only 1: intros; only 1: case (M.elements s); only 1: firstorder; only 1: case (M.inter s s'); only 1: firstorder).	5.49277281761	1243
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0316932201385	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.1.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.104012966156	20
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0188190937042	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	4.33.0.4	synth with cache (only 1: intros; only 1: intros x l; only 1: destruct 2; only 1: intuition).	27.9008991718	28487
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.105509996414	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0508069992065	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	7	synth with cache (only 1: solve_proper).	0.22218298912	66
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	6.38.1.3.24.0	synth with cache (only 1: split; only 1: fix odd_specT 1; only 1: intros H3; only 1: auto; only 1: compute; only 1: intuition).	16.7115459442	54910
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	4.2.9.19.15	synth with cache (only 1: split; only 1: fix odd_specT 1; only 1: auto; only 1: intros n; only 1: intuition).	15.6375191212	27583
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.7	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.320307016373	63
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	1	synth with cache (only 1: intuition).	0.0211660861969	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	3	synth with cache (only 1: fsetdec).	0.0483510494232	4
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	21.5.0.4	synth with cache (only 1: intros n0 H2 H3; only 1: split; only 1: fsetdec; only 1: fsetdec).	7.74170804024	6430
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0298929214478	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0482170581818	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	2.2.9	synth with cache (only 1: constructor; only 1: auto; only 1: intuition).	0.160977125168	110
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0453379154205	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0586988925934	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0.0	synth with cache (only 1: intros; only 1: fsetdec).	0.060909986496	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.3.2	synth with cache (only 1: revert s2; only 1: intros; only 1: fsetdec).	0.0643539428711	8
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0728740692139	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.048485994339	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0609991550446	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.2.1	synth with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.185163021088	14
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0575459003448	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0495021343231	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	2	synth with cache (only 1: intuition fsetdec).	0.0806879997253	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.146703958511	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.0982811450958	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	1.0.0.1.0.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.remove_iff; only 1: rewrite H; only 1: intuition; only 1: do 2 rewrite F.remove_iff; only 1: rewrite H; only 1: intuition).	0.106793165207	9
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.121750116348	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.127911090851	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0797879695892	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.235924005508	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0838949680328	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0731420516968	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.10403418541	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.101937055588	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.148160934448	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.0946969985962	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.155861854553	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.268002986908	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.232195138931	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0394060611725	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0438740253448	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0592970848083	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0610020160675	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0609059333801	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0769050121307	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0709908008575	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	2.2.0.0.0.0	synth with cache (only 1: generalize (F.mem_iff (union s s') x), (F.mem_iff s x), (F.mem_iff s' x), (F.union_iff s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem x s'); only 1: intuition; only 1: intuition).	0.807223081589	60
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0787091255188	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0747430324554	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0936589241028	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0982930660248	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.127008914948	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.175746917725	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.186312198639	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.159430027008	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.131152153015	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0519630908966	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0498998165131	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.040109872818	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.039088010788	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0566580295563	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.060396194458	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0760588645935	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0442688465118	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.106173038483	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0962278842926	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.155471086502	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.138636112213	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	4.7.6.2	synth with cache (only 1: generalize (F.mem_iff s x); only 1: split; only 1: fsetdec; only 1: fsetdec).	13.5404720306	5600
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.0.3	synth with cache (only 1: intro; only 1: expAdd; only 1: fsetdec).	0.154319047928	6
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.218364953995	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.355020999908	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.306071996689	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.259030103683	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	1.0.3.6.0.0.1.16	synth with cache (only 1: intros a b q r Hr EQ; only 1: intuition; only 1: apply fold_rec; only 1: intro x; only 1: trivial; only 1: intros s Hsame; only 1: intros; only 1: intuition).	10.8604829311	12200
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	2.1.0.0.0.4.2	synth with cache (only 1: intros op Hop; only 1: intros x y Hxy Hyz Hy; only 1: apply fold_rec_bis; only 1: intros; only 1: eauto; only 1: intuition; only 1: fsetdec).	3.33826112747	881
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.0.6.1	synth with cache (only 1: intros i s; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.30401802063	731
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0343170166016	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	1.0.0.4.0.4.3.3.16	synth with cache (only 1: intros c; only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_equal; only 1: intuition; only 1: intuition; only 1: constructor; only 1: rewrite H; only 1: auto with set).	28.1890420914	25095
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0	synth with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0249769687653	2
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	0.0.0.2.3	synth with cache (only 1: intros; only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.111928939819	37
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.1.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with fset; only 1: expAdd; only 1: fsetdec).	0.240603923798	46
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	1	synth with cache (only 1: auto with set fset).	0.0599348545074	23
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	6.18	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	24.3277359009	8979
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0323860645294	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0336859226227	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.0	synth with cache (only 1: intros s' s x **; only 1: tauto).	0.418819904327	2
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0	synth with cache (only 1: intros s' s x **; only 1: tauto).	0.587798833847	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.1	synth with cache (only 1: split; only 1: split; only 1: auto).	0.029886007309	4
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0.6.10.13.11	synth with cache (only 1: intro H1; only 1: intros Heq; only 1: intros LT EQ; only 1: intros f Hf H0; only 1: fsetdec).	31.7794129848	36722
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	6.1	synth with cache (only 1: intro p; only 1: intuition).	0.0256519317627	9
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	3.17.0	synth with cache (only 1: intros l1; only 1: intro H; only 1: fsetdec).	3.01320981979	3333
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	16.11.7	synth with cache (only 1: intro m; only 1: intros; only 1: fsetdec).	9.50704312325	18296
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.34.12	synth with cache (only 1: intros s1; only 1: intros H; only 1: fsetdec).	17.1261279583	24508
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	7.2.4	synth with cache (only 1: intro r; only 1: intros ? ? IH p1 p2; only 1: fsetdec).	2.02533316612	477
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.129499912262	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	2.21	synth with cache (only 1: intro n; only 1: fsetdec).	5.40889501572	3357
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0.0	synth with cache (only 1: red; only 1: fsetdec).	0.17572593689	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.261842012405	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	1.0.2	synth with cache (only 1: unfold Subset; only 1: intros a b c Hc Ha Hb; only 1: intuition).	0.0789527893066	23
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.8.1	synth with cache (only 1: intros s; only 1: intros l2; only 1: fsetdec).	0.128177881241	50
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0.7	synth with cache (only 1: intros l1; only 1: fsetdec).	0.103399991989	16
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0618898868561	1
Coq.FSets.FMapList.Raw.Elt.empty_1	40	3.18	synth with cache (only 1: repeat red; only 1: inversion 1).	0.194053888321	240
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	2	synth with cache (only 1: constructor).	0.0159480571747	3
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	6.18	synth with cache (only 1: fix odd_specT 1; only 1: intuition).	26.3337769508	2019
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	10.1	synth with cache (only 1: fix even_specT 1; only 1: assumption).	0.326409101486	143
Coq.FSets.FMapList.Raw.Elt.mem_1	40	0.5.14.1	synth with cache (only 1: intros m; only 1: fix even_specT 1; only 1: intro n; only 1: eauto with ordered_type).	34.696297884	1669
Coq.FSets.FMapList.Raw.Elt.mem_2	40	0.0.0.7.0.0.9	synth with cache (only 1: unfold PX.eqk, PX.ltk; only 1: intros m Hm x; only 1: generalize Hm; only 1: fix odd_specT 1; only 1: clear Hm; only 1: intros sorted belong1; only 1: intuition).	11.4692218304	9917
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	1.0	synth with cache (only 1: intros m; only 1: auto with ordered_type).	0.0240790843964	3
Coq.FSets.FMapList.Raw.Elt.elements_2	40	6.0	synth with cache (only 1: intros m x; only 1: auto).	0.0258390903473	8
Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.0.1.0.0.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: inversion_clear 1; only 1: destruct a as (x', e'); only 1: constructor; only 1: auto; only 1: auto).	0.067850112915	9
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40	1.3.0.0.2.14	synth with cache (only 1: intros l d; only 1: induction l as [| x xs Hl]; only 1: intuition; only 1: intro n; only 1: simpl; only 1: intuition).	16.7204668522	9796
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.0.1.2.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intuition; only 1: simpl; only 1: inversion_clear H; only 1: intuition).	0.291291952133	49
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	8.1.0.0.0.0.0.1	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion_clear Hm; only 1: eauto with ordered_type).	8.93457317352	3689
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.0.0.1.0.1.1.1	synth with cache (only 1: induction m; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.849815130234	246
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0870521068573	13
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40	3.19	synth with cache (only 1: fix even_specT 1; only 1: auto).	2.10435009003	2990
Coq.FSets.FMapList.Make.Elt.mem_2	40	3.21	synth with cache (only 1: fix even_specT 1; only 1: auto).	1.46391582489	2234
Coq.FSets.FMapList.Make.Elt.empty_1	40	0.23	synth with cache (only 1: intros H; only 1: inversion_clear 1).	0.350374937057	643
Coq.FSets.FMapList.Make.Elt.is_empty_1	40	8.11	synth with cache (only 1: fix even_specT 1; only 1: assumption).	1.44262003899	1919
Coq.FSets.FMapList.Make.Elt.is_empty_2	40	6.2	synth with cache (only 1: fix even_specT 1; only 1: assumption).	0.0606501102448	29
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0.0	synth with cache (only 1: intros m; only 1: intuition).	0.0250089168549	2
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0223779678345	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	4.5	synth with cache (only 1: intros [y H]; only 1: auto).	0.0651948451996	62
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	5.0	synth with cache (only 1: intros m; only 1: constructor 1).	0.0220789909363	7
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40	1.30	synth with cache (only 1: fix odd_spec 1; only 1: auto).	10.3825318813	5945
Coq.FSets.FMapList.Make.Elt.equal_2	40	0.5.32.1.0	synth with cache (only 1: intros m m'; only 1: intro n; only 1: fix even_specT 1; only 1: intros He%even_specT; only 1: eauto with bool).	21.9042780399	27191
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	1.4	synth with cache (only 1: fix odd_spec 1; only 1: assumption).	0.237452983856	86
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40	2.6.21	synth with cache (only 1: intro p; only 1: fix OddT_EvenT_rect 1; only 1: auto).	2.9704041481	4164
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	2.17.22.11.0	synth with cache (only 1: intro x; only 1: intro z; only 1: apply Acc_rect; only 1: split; only 1: auto).	12.7582478523	51597
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.7	synth with cache (only 1: split; only 1: auto with sets).	0.022255897522	12
Coq.Wellfounded.Well_Ordering.WellOrdering.le_WO_inv	40
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.1.2.2.8	synth with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.559751987457	656
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfSimple_Lexicographic_Product.wf_slexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.15	synth with cache (only 1: left; only 1: assumption).	0.215466976166	206
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.4.16	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.904140949249	1576
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.1.1	synth with cache (only 1: red; only 1: intros y H2; only 1: auto with sets).	0.0168170928955	5
Coq.Numbers.DecimalR.of_IQmake_to_decimal	40
Coq.Numbers.DecimalR.of_to	40
Coq.Numbers.DecimalR.to_of	40
Coq.Numbers.DecimalR.to_decimal_inj	40
Coq.Numbers.DecimalR.to_decimal_surj	40
Coq.Numbers.DecimalR.of_decimal_dnorm	40
Coq.Numbers.DecimalR.of_inj	40
Coq.Numbers.DecimalR.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !to_of, H; only 1: intros E; only 1: rewrite <- DecimalQ.of_decimal_dnorm, E; only 1: apply DecimalQ.of_decimal_dnorm).	0.11998796463	15
Coq.Numbers.DecimalFacts.of_list_to_list	40
Coq.Numbers.DecimalFacts.to_list_of_list	40
Coq.Numbers.DecimalFacts.to_list_inj	40
Coq.Numbers.DecimalFacts.of_list_inj	40
Coq.Numbers.DecimalFacts.nb_digits_spec	40
Coq.Numbers.DecimalFacts.nzhead_spec	40
Coq.Numbers.DecimalFacts.unorm_spec	40
Coq.Numbers.DecimalFacts.revapp_spec	40
Coq.Numbers.DecimalFacts.rev_spec	40
Coq.Numbers.DecimalFacts.app_spec	40
Coq.Numbers.DecimalFacts.nztail_spec	40
Coq.Numbers.DecimalFacts.del_head_spec_0	40	10	synth with cache (only 1: auto).	0.0294740200043	21
Coq.Numbers.DecimalFacts.del_head_spec_small	40
Coq.Numbers.DecimalFacts.del_head_spec_large	40
Coq.Numbers.DecimalFacts.nb_digits_0	40
Coq.Numbers.DecimalFacts.nb_digits_n0	40	0.27.3.6.1.0	synth with cache (only 1: rewrite nb_digits_spec, <- (of_list_to_list d); only 1: intros H; only 1: pose proof H as H'; only 1: intro H1; only 1: rewrite H1 in H; only 1: Nat.auto').	5.58604693413	7609
Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40	0.0.1.2.3.0.2.1.3	synth with cache (only 1: nzinduct n; only 1: trivial; only 1: intro n; only 1: Nat.nzsimpl; only 1: split; only 1: symmetry; only 1: simpl; only 1: auto; only 1: now injection 1).	11.717995882	2650
Coq.Numbers.DecimalFacts.length_lnzhead	40
Coq.Numbers.DecimalFacts.nb_digits_nzhead	40
Coq.Numbers.DecimalFacts.unorm_nzhead	40
Coq.Numbers.DecimalFacts.nb_digits_unorm	40
Coq.Numbers.DecimalFacts.nb_digits_rev	40
Coq.Numbers.DecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.DecimalFacts.unorm_D0	40	10	synth with cache (only 1: reflexivity).	0.0426099300385	40
Coq.Numbers.DecimalFacts.app_nil_l	40	0	synth with cache (only 1: now simpl).	0.0229020118713	1
Coq.Numbers.DecimalFacts.app_nil_r	40
Coq.Numbers.DecimalFacts.abs_app_int	40
Coq.Numbers.DecimalFacts.abs_norm	40
Coq.Numbers.DecimalFacts.iter_D0_nzhead	40
Coq.Numbers.DecimalFacts.iter_D0_unorm	40
Coq.Numbers.DecimalFacts.nzhead_app_l	40
Coq.Numbers.DecimalFacts.nzhead_app_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.DecimalFacts.unorm_app_zero	40
Coq.Numbers.DecimalFacts.app_int_nil_r	40
Coq.Numbers.DecimalFacts.unorm_app_l	40
Coq.Numbers.DecimalFacts.unorm_app_r	40
Coq.Numbers.DecimalFacts.norm_app_int	40
Coq.Numbers.DecimalFacts.del_head_nb_digits	40
Coq.Numbers.DecimalFacts.del_tail_nb_digits	40
Coq.Numbers.DecimalFacts.del_head_app	40
Coq.Numbers.DecimalFacts.del_tail_app	40
Coq.Numbers.DecimalFacts.del_tail_app_int	40
Coq.Numbers.DecimalFacts.app_del_tail_head	40
Coq.Numbers.DecimalFacts.app_int_del_tail_head	40
Coq.Numbers.DecimalFacts.del_head_app_int_exact	40
Coq.Numbers.DecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.nzhead_D0	40	4	synth with cache (only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	0.024374961853	5
Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	0	synth with cache (only 1: now induction n; simpl; [  | rewrite IHn ]).	0.0227971076965	1
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0	synth with cache (only 1: now induction n).	0.0221879482269	1
Coq.Numbers.DecimalFacts.del_head_nonnil	40
Coq.Numbers.DecimalFacts.del_tail_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_involutive	40
Coq.Numbers.DecimalFacts.nztail_involutive	40
Coq.Numbers.DecimalFacts.unorm_involutive	40	0	synth with cache (only 1: now induction d).	0.0372560024261	1
Coq.Numbers.DecimalFacts.norm_involutive	40	2.1.29.12	synth with cache (only 1: revert d; only 1: fix odd_specT 1; only 1: intros; only 1: trivial).	4.66237401962	7246
Coq.Numbers.DecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.DecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40
Coq.Numbers.DecimalFacts.unorm_app_unorm	40
Coq.Numbers.DecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalFacts.unorm_app_l_nil	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0	synth with cache (only 1: now destruct n).	0.0224230289459	1
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	0.4.0.8.10	synth with cache (only 1: simpl; only 1: case (uint_eq_dec d Nil); only 1: intros; only 1: easy; only 1: now case d; [ idtac | intros u _.. ]).	3.62377500534	2901
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: trivial; only 1: simpl; only 1: split; only 1: reflexivity || ring; only 1: split; only 1: simpl; only 1: trivial; only 1: easy; only 1: reflexivity || ring; only 1: split; only 1: simpl; only 1: reflexivity || ring; only 1: easy).	17.9917891026	8590
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: firstorder).	0.0353660583496	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	7.0	synth with cache (only 1: simpl; only 1: trivial).	0.0251491069794	9
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0414798259735	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	6.1	synth with cache (only 1: simpl in *; only 1: reflexivity).	0.10896897316	27
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	0.2.3.0.8	synth with cache (only 1: Nat.cases ltac:(n); only 1: easy; only 1: simpl; only 1: fix odd_spec 1; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	0.72638297081	279
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	4	synth with cache (only 1: now induction d).	0.0766110420227	21
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.0278799533844	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	6	synth with cache (only 1: apply Unsigned.of_inj).	0.574470043182	153
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	1	synth with cache (only 1: now simpl).	0.0222358703613	2
Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40	6	synth with cache (only 1: now induction d).	0.0770609378815	22
Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNat.Signed.of_to	40
Coq.Numbers.HexadecimalNat.Signed.to_of	40
Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40	2.13.0.2.3.3.0.5.0	synth with cache (only 1: case d; only 1: intros q; only 1: clear d; only 1: simpl; only 1: revert q; only 1: intro d; only 1: now induction d; only 1: fix even_spec 1; only 1: auto).	28.8599250317	30157
Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	3.1.1.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: symmetry; only 1: split).	0.0401899814606	13
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	4.4.1.0.6.0	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: intro n; only 1: intros a m; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	6.50271487236	2059
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	3.5.13	synth with cache (only 1: intros H0; only 1: fix odd_specT 1; only 1: easy || apply leS).	4.04133892059	2518
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	8.9.10.10	synth with cache (only 1: intros w1; only 1: intros f Hf H0; only 1: fix OddT_EvenT_rect 1; only 1: auto).	35.6061911583	31645
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40	0.3.45.4	synth with cache (only 1: intro n; only 1: fix OddT_EvenT_rect 1; only 1: unfold Symmetric, Z.eq; only 1: easy).	31.7492470741	38761
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.0.14.0	synth with cache (only 1: unfold Reflexive, Z.eq; only 1: induction n; only 1: simpl; only 1: now rewrite add_succ_r, add_succ_l).	2.22654700279	988
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.183727025986	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	2.7.331	synth with cache (only 1: compute; only 1: nzsimpl; only 1: now nzsimpl).	10.410410881	59009
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.101659059525	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now apply add_cancel_l).	0.030730009079	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	2.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: now nzsimpl).	0.164521217346	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.5.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: intros n; only 1: now nzsimpl).	0.270983934402	9
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	1.0.0.3.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intros n IH; only 1: unfold snd; only 1: simpl in *; only 1: nzsimpl; only 1: now f_equiv).	0.383034944534	10
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	synth with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.175967216492	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.3.0.0	synth with cache (only 1: intro n; only 1: unfold Transitive, Z.eq; only 1: intros; only 1: simpl in *; only 1: now nzsimpl).	0.3448138237	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.5.0	synth with cache (only 1: unfold Reflexive, Z.eq; only 1: intros; only 1: simpl; only 1: now nzsimpl).	0.192723035812	9
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.5.62	synth with cache (only 1: intro q; only 1: apply PeanoNat.Nat.le_ngt; only 1: now nzsimpl).	25.2619099617	63620
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	2.0.7.11	synth with cache (only 1: intro; only 1: fix Even_alt_Even 1; only 1: unfold Z.zero, Z.succ, Z.eq in *; only 1: assumption).	9.97589802742	7845
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	10.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	2.29723286629	319
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0306620597839	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.12436413765	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.030189037323	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0297548770905	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.5.18	synth with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	33.5220499039	14498
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.70	synth with cache (only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	20.5644109249	24085
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.5.2.13	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	36.2016129494	12875
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.2.1.14	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	12.5414950848	4546
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.9.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	2.84818196297	751
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.3.1.4.0.0	synth with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	17.6524069309	7800
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.12.0	synth with cache (only 1: intros n m; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.662837982178	320
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.290205001831	53
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	0.0.0.0.0.4.0.6	synth with cache (only 1: intro a; only 1: rewrite <- (mul_0_r a); only 1: rewrite nlt_ge; only 1: destruct (le_gt_cases a 0); only 1: now apply mul_le_mono_nonpos_l; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: order).	1.39050412178	1840
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	8.60815095901	2851
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	3.95486307144	1222
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0323419570923	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	0.0.0.2.0.0.0.0.22	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: order_pos; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order_pos; only 1: order').	3.05530190468	2437
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.4	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.0968840122223	21
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.7.6	synth with cache (only 1: intros x; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: f_equiv).	6.98428916931	3822
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	5.10.9	synth with cache (only 1: simpl_relation; only 1: rewrite H; only 1: trivial).	6.67688202858	3061
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.0.0.0.2.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	21.4551911354	8322
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.167267084122	46
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.131244897842	35
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.2075278759	35
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0927119255066	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	4.2.5	synth with cache (only 1: intros x; only 1: bitwise; only 1: split).	1.06800508499	547
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.033674955368	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	3.22.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	4.1036169529	4839
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	12.6.0.1	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	9.85528898239	4979
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0550849437714	19
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.03502202034	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.16.0	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	5.73967504501	2689
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.17	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	4.85529994965	2220
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	0.1.0.13.18.0	synth with cache (only 1: intros x x' Hx; only 1: rewrite <- succ_inj_wd; only 1: generalize (CRelationClasses.partial_order_equivalence x x'); only 1: compute; only 1: rewrite Hx in *; only 1: intuition).	29.0998408794	21894
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40	0.0.20.11.0.8	synth with cache (only 1: intros m; only 1: bitwise; only 1: apply andb_false_iff; only 1: right; only 1: apply negb_false_iff; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	33.1934058666	38079
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	0.0.0.0.0.0.0.8.1.10	synth with cache (only 1: intro n; only 1: intros a; only 1: symmetry; only 1: bitwise; only 1: f_equal; only 1: unfold lnot; only 1: rewrite <- (opp_involutive a)  at 2; only 1: rewrite bits_opp, negb_involutive; only 1: trivial; only 1: trivial).	38.3286559582	28380
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.3.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0506730079651	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.3.0.1.0	synth with cache (only 1: intros a; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0612668991089	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0318140983582	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.3.0	synth with cache (only 1: intro n; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.042160987854	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.2.1.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.451440095901	152
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: intros n m; only 1: destruct_max m; only 1: easy; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_l, <- Hp, opp_involutive; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite Hp, mul_opp_l).	9.93403911591	6640
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0649120807648	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.4.2.0.1.0.2.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	32.737185955	19467
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	2.1194961071	1043
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.0.1.6.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	4.18800997734	1885
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	synth with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.112173080444	23
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	1.0.1.7.0	synth with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	1.68999385834	720
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.8.0.3	synth with cache (only 1: intros a; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).	1.3650560379	965
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.140326023102	20
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl'; only 1: apply divide_refl; only 1: trivial).	0.0480978488922	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0367588996887	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0353970527649	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.10.1.0.5.2	synth with cache (only 1: intros a b **; only 1: apply lcm_unique; only 1: intuition; only 1: trivial; only 1: f_equiv; only 1: trivial using divide_refl).	31.9982869625	18176
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.040580034256	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.0.2.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	3.0292289257	1593
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	3.0.0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	1.10974001884	432
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.0.0.1.0.1.5.0.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: apply divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).	8.34443306923	3944
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.8.0.0	synth with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	1.2266740799	261
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: order; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: order).	0.102275848389	19
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	1.20360994339	433
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.3.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	8.27225279808	3529
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.53507184982	931
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	1.0.1.5.1.0.1.6.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	8.57517504692	5417
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	0.11.8.0.7.7.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: apply min_r; only 1: now rewrite <- sub_le_mono_l; only 1: rewrite max_l by trivial; only 1: apply min_l; only 1: now rewrite <- sub_le_mono_l).	37.5688068867	16442
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.9.1.0.0.8.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	12.5539150238	8740
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	9.19105100632	4741
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	1.0.0.4.1.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	9.4039888382	4718
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.2.0.0.1.1.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	16.6679041386	8855
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40	0.5.6.0.5.5.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: apply max_l; only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: apply max_r; only 1: now apply mul_le_mono_nonpos_l).	27.5938909054	15739
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	9.49609208107	3785
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	7.86355304718	2819
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.0.16.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: intuition order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	1.62574791908	1145
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.2	synth with cache (only 1: intro H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.153430223465	14
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	7.12.21	synth with cache (only 1: intro a; only 1: apply le_succ_l; only 1: now rewrite succ_pred).	3.28416609764	6079
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.5.0.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.142359972	9
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	0.1.9.3.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	7.82339692116	4628
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	1.4.8	synth with cache (only 1: intro LS'; only 1: rewrite nle_gt; only 1: apply lt_pred_l).	1.11455178261	1080
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	4.11.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).	11.9949250221	5328
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.2.3	synth with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: assumption).	0.37233710289	134
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.0.0.0.5.4	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	1.40420293808	1002
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: symmetry; only 1: symmetry; only 1: apply le_succ_l).	0.0490608215332	12
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.3.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0876231193542	15
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.3.2.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	0.55276799202	140
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.3.7.2	synth with cache (only 1: intros n1 n2; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	3.3054330349	1572
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	3.2.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.0288701057434	8
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0411169528961	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0397810935974	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	2.18.0.0.10	synth with cache (only 1: intros m H; only 1: rewrite abs_neq; only 1: auto with relations; only 1: rewrite <- (opp_nonneg_nonpos m); only 1: auto).	16.3972420692	22710
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	6.7.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.237712860107	221
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	0.2.6.18.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).	9.47042107582	5699
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	0.20.8.0.1.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: apply eq_opp_r; only 1: reflexivity).	5.51629400253	8374
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.0.0.0.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	1.25455999374	1060
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros P n **; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0378041267395	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto with relations; only 1: auto with relations).	0.0233750343323	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.054172039032	8
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).	0.269807815552	45
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.4.0.0.5	synth with cache (only 1: intros a b n ? ? ?; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	3.33188986778	2496
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0498490333557	5
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	16.0.3.3	synth with cache (only 1: intros a b ?; only 1: symmetry; only 1: rewrite (div_mod a b)  at 1 by order; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	26.3706259727	11170
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	3.34123778343	1735
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0282270908356	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.4.1.0.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	6.34049916267	4305
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0311591625214	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.0.3.5.0.1.0.4.0	synth with cache (only 1: intros a b **; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: auto; only 1: right; only 1: apply mod_neg_bound; only 1: order).	22.3001871109	16064
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a b ?; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.152870178223	29
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.166713953018	32
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.0.0.0.0.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.340990066528	144
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0291211605072	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0283980369568	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.1.0.1.0.0.2.3.0	synth with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	16.1217448711	7353
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	6.0.2.0.0.0.2.1.4	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: now nzsimpl).	9.0713429451	4954
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.0.0	synth with cache (only 1: intros a b ? ?; only 1: apply mod_le; only 1: order; only 1: trivial).	0.0742878913879	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	2.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.512084960938	71
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.33896112442	83
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.0.3	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: trivial).	0.237529993057	64
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0738279819489	11
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0387299060822	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.1	synth with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: order).	0.052435874939	16
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.1.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	0.0371191501617	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0473930835724	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	16.8252849579	6562
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.0.5.1.0.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	5.66680598259	2602
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.0.0	synth with cache (only 1: intros a b c **; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0648369789124	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.0.25.0	synth with cache (only 1: intros a b c **; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	19.3245720863	14169
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.2.4.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	1.88886189461	400
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	4.0.1.0	synth with cache (only 1: intros a b c **; only 1: pose proof (add_mul_mod_distr_l a b c 0) as E; only 1: rewrite ?add_0_r in E; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.mul_mod_distr_l).	0.241436958313	26
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.562258005142	93
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.0.0.2	synth with cache (only 1: intros a b c **; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.625118017197	105
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.0.1.2	synth with cache (only 1: intros a b c **; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.717576026917	147
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.5.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	1.62147212029	602
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.0.1.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.181644916534	17
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mul_mod_distr_l	40	0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros a b c d ? ? [? ?]; only 1: assert (0 <= a * c) by (apply mul_nonneg_nonneg; order); only 1: assert (0 <= a * c + d) by (apply add_nonneg_nonneg; order); only 1: rewrite (mul_comm c a), mod_mul_r, Private_NZDiv.add_mod, Private_NZDiv.mod_mul, Private_NZDiv.div_add_l; only 1: now rewrite ?add_0_l, Private_NZDiv.div_small, add_0_r, ?(Private_NZDiv.mod_small d c), (add_comm d); only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order).	2.45203399658	457
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mul_mod_distr_r	40	0.0	synth with cache (only 1: intros a b c d ? ? ?; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.add_mul_mod_distr_l).	0.0372109413147	2
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0667810440063	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	1.9.8	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	25.8664381504	8526
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0308549404144	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.0.2.0.0.0.2.15.1.2	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: split; only 1: nzsimpl; only 1: intro m; only 1: rewrite sub_succ_l; only 1: now nzsimpl'; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	29.2490751743	12388
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.3.2	synth with cache (only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.0851111412	244
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.1.7	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	10.5324800014	2679
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	7.0.0.0.0.4	synth with cache (only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros H; only 1: now f_equiv).	2.3544280529	1000
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1	synth with cache (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.110533952713	48
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0366239547729	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.1.2.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	0.0635230541229	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.1.6	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.377785921097	88
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0	synth with cache (only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0235080718994	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	1.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).	0.0338101387024	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	5.0.10.1.5	synth with cache (only 1: nzinduct p; only 1: now nzsimpl; only 1: intro H; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	36.9886219501	25665
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	2.23	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	0.699275970459	501
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.2	synth with cache (only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0341420173645	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.4.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.6144759655	166
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.4	synth with cache (only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.50471496582	89
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	0.0.5.14	synth with cache (only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	24.2471539974	8130
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	5.0.0.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.611391067505	149
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0228409767151	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	0.0.3.0.0.1.1.1.4.2	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	6.11524319649	2046
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	1.12	synth with cache (only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	0.901446819305	305
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	0.1.5.4.6.4	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_move_l; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	11.7540459633	5034
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.12	synth with cache (only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.627852916718	175
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	17.0.7.1	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite (div_mod a b)  at 1 by order; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	37.7348790169	19453
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.144096851349	41
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0	synth with cache (only 1: intros a b ?; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.406857013702	110
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).	0.225389957428	71
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.141486883163	31
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.969805002213	455
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0305850505829	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0297448635101	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	2.0.0.3.11.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: rewrite abs_pos; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm).	15.6528880596	12715
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.325778007507	111
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.1.0.0.1.5	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	3.11997795105	1525
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	2.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.547731876373	73
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.2.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.435607910156	107
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	7.0.1.4.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	3.09943795204	1342
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0491139888763	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.4.0.0.0.0.3	synth with cache (only 1: intros a b ? ?; only 1: intros Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	1.4542350769	567
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: auto).	0.324834823608	86
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0470559597015	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	16.6855399609	6484
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.1.0.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.390805006027	102
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.0.0.0.0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).	14.7807130814	4115
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	2.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: apply add_cancel_l; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.mul_mod_distr_l).	0.0997550487518	15
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.782508850098	150
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.0.2.2	synth with cache (only 1: intros a b c; only 1: symmetry; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.513890028	96
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	2.1.3.6.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite (div_mod a n)  at 1 by order; only 1: rewrite (div_mod a n)  at 1 by order; only 1: rewrite <- add_assoc, add_comm, mul_comm; only 1: rewrite mod_add by trivial; only 1: reflexivity).	18.5596449375	8489
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.3.2	synth with cache (only 1: intros a b c; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).	1.00234103203	234
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	1.1.5.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	1.46259093285	520
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.210051059723	18
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.103353023529	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	1	synth with cache (only 1: BinInt.Z.order).	0.0216190814972	11
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	2	synth with cache (only 1: firstorder).	0.0506329536438	3
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	2.6.8	synth with cache (only 1: destruct x; only 1: fix odd_spec 1; only 1: auto).	18.3863298893	1170
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	2.3.12	synth with cache (only 1: intros x; only 1: fix even_specT 1; only 1: intuition congruence).	1.43765616417	1109
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	15.4.3	synth with cache (only 1: intro p; only 1: intro q; only 1: ring).	25.4467301369	8724
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	2.4.0	synth with cache (only 1: fix even_specT 1; only 1: intros H l; only 1: auto).	0.051460981369	23
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	1.6.4.27.8	synth with cache (only 1: intros; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: eapply Z.Private_Tac.lt_irrefl; only 1: right; only 1: now Nat.nzsimpl').	16.2684049606	11427
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	8.16.0	synth with cache (only 1: intros; only 1: destruct x; only 1: split).	1.49802088737	1471
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.0.3.0	synth with cache (only 1: intro; only 1: destruct x; only 1: simpl; only 1: auto).	0.0472660064697	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	1	synth with cache (only 1: reflexivity).	0.111409902573	18
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.1.1	synth with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0419640541077	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: induction n as [| n IHn]; only 1: destruct x; only 1: simpl in *; only 1: auto; only 1: intro l; only 1: simpl; only 1: trivial).	0.0708160400391	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	1.0.0.0.0.3	synth with cache (only 1: intros; only 1: induction n as [| n IHn]; only 1: split; only 1: simpl; only 1: rewrite <- ?IHn; only 1: auto).	0.116608858109	19
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0559840202332	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0433769226074	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl in *; only 1: now try rewrite H).	0.0434069633484	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0431189537048	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	3.26.1.10	synth with cache (only 1: intros H H0 H1; only 1: intro m; only 1: fix le_div2 1; only 1: tauto).	7.24296498299	16192
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.10.0.8	synth with cache (only 1: simpl; only 1: intros a m H; only 1: rewrite H; only 1: now constructor).	3.05213189125	1554
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.1.1	synth with cache (only 1: split; only 1: now intros ->; only 1: now intros ->).	0.137682914734	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	1.1.4.16	synth with cache (only 1: destruct x; only 1: fix le_div2 1; only 1: simpl in *; only 1: auto).	10.1350860596	7420
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	4.0	synth with cache (only 1: intros; only 1: auto).	0.0327429771423	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	1.3.11	synth with cache (only 1: intro z; only 1: destruct z; only 1: auto).	1.10916996002	728
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	2.1	synth with cache (only 1: intros; only 1: now destruct x).	1.03394699097	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	0.0.1.0	synth with cache (only 1: intros l1 l2; only 1: induction l1; only 1: simpl in *; only 1: auto).	0.066232919693	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40	3.9	synth with cache (only 1: fix Even_Odd_double 1; only 1: intuition).	0.866818904877	487
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	synth with cache (only 1: auto with zarith).	0.0245809555054	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	14	synth with cache (only 1: auto with zarith).	0.274692058563	172
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	2	synth with cache (only 1: constructor).	0.02747797966	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0	synth with cache (only 1: auto).	0.0233318805695	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	5	synth with cache (only 1: trivial).	0.0261831283569	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	3.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0554118156433	12
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	1.1.1	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: reflexivity).	0.0611197948456	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	7.0.2.0	synth with cache (only 1: intros; only 1: unfold add31; only 1: repeat rewrite phi_phi_inv; only 1: split).	5.31743502617	1056
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0330100059509	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0326330661774	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.0365259647369	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0769128799438	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0338079929352	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0739040374756	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	2.0.1.3	synth with cache (only 1: fix even_specT 1; only 1: intro H; only 1: intro n; only 1: auto with zarith).	0.692363977432	63
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	4	synth with cache (only 1: auto with zarith).	0.08793592453	18
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	37.23	synth with cache (only 1: Z.swap_greater; only 1: Z.order_pos).	3.6778011322	3403
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40	67.46	synth with cache (only 1: intros EQ; only 1: now rewrite Zmod_0_r + apply Z_mod_lt).	26.9563879967	37360
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0457599163055	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0470950603485	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.0.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0627269744873	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	0.0.3.0.0.0.9.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize digits_ne_1; only 1: intros; only 1: split; only 1: discriminate; only 1: apply Z.pow_gt_1; only 1: lia; only 1: auto with zarith).	5.63936114311	4308
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.1.0.1.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.079442024231	15
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0	synth with cache (only 1: auto).	0.0248491764069	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	1.14	synth with cache (only 1: fix even_specT 1; only 1: auto).	1.93187308311	1004
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	0.4.0.0	synth with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.0525629520416	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	2.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.0573661327362	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40	0.3.5.4.0.11.0	synth with cache (only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: unfold add, to_Z; only 1: generalize wB_pos, (Z_mod_lt x wB wB_pos), (Z_mod_lt y wB wB_pos); only 1: intros; only 1: apply Z.mul_mod; only 1: lia).	25.8313889503	17512
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	7.0.0	synth with cache (only 1: intros; only 1: unfold sub, to_Z; only 1: auto).	0.126056909561	15
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Uint63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Uint63.pow2_pos	40
Coq.Numbers.Cyclic.Int63.Uint63.pow2_nz	40	0.0	synth with cache (only 1: intros h; only 1: Z.order_nz).	0.0403559207916	2
Coq.Numbers.Cyclic.Int63.Uint63.wB_diff_0	40	2	synth with cache (only 1: now apply Z_lt_neq).	0.0277478694916	3
Coq.Numbers.Cyclic.Int63.Uint63.wB_pos	40	11.5	synth with cache (only 1: apply Z.gt_lt; only 1: now try split).	0.261511087418	237
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_0	40	1	synth with cache (only 1: trivial).	0.0215649604797	2
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_1	40	7	synth with cache (only 1: auto).	0.0211880207062	8
Coq.Numbers.Cyclic.Int63.Uint63.can_inj	40
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Uint63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Uint63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.eqb_false_complete	40	0.7.0	synth with cache (only 1: intros n m ?; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0428869724274	10
Coq.Numbers.Cyclic.Int63.Uint63.eqb_false_correct	40	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0400462150574	3
Coq.Numbers.Cyclic.Int63.Uint63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Uint63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Uint63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Uint63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Uint63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Uint63.eqbP	40
Coq.Numbers.Cyclic.Int63.Uint63.ltbP	40
Coq.Numbers.Cyclic.Int63.Uint63.lebP	40
Coq.Numbers.Cyclic.Int63.Uint63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.is_zero_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.oppc_spec	40	0	synth with cache (only 1: apply subc_spec).	0.0211689472198	1
Coq.Numbers.Cyclic.Int63.Uint63.opp_spec	40	0	synth with cache (only 1: apply sub_spec).	0.0567669868469	1
Coq.Numbers.Cyclic.Int63.Uint63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Uint63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0235750675201	1
Coq.Numbers.Cyclic.Int63.Uint63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Uint63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Uint63.eqmE	40
Coq.Numbers.Cyclic.Int63.Uint63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Uint63.int_eqm	40	0.7.5	synth with cache (only 1: symmetry; only 1: subst; only 1: trivial).	0.226171016693	137
Coq.Numbers.Cyclic.Int63.Uint63.eqmI	40
Coq.Numbers.Cyclic.Int63.Uint63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Uint63.add_comm	40
Coq.Numbers.Cyclic.Int63.Uint63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Uint63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Uint63.add_cancel_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0617680549622	7
Coq.Numbers.Cyclic.Int63.Uint63.lsr0	40
Coq.Numbers.Cyclic.Int63.Uint63.lsr_0_r	40	4.7.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.bitwise; only 1: Z.nzsimpl; only 1: trivial).	1.2057659626	523
Coq.Numbers.Cyclic.Int63.Uint63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Uint63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Uint63.lsl0	40
Coq.Numbers.Cyclic.Int63.Uint63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Uint63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Uint63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_split	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_1	40	0.0.0.0.0.0.2.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: simpl; only 1: case eqbP; only 1: simpl b2i; only 1: intros h; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.142091989517	53
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_M	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_half	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Uint63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Uint63.lor_le	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_0	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Uint63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Uint63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.is_even_0	40	2	synth with cache (only 1: split).	0.0213739871979	3
Coq.Numbers.Cyclic.Int63.Uint63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Uint63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_test_false	40	3.0.12.5.1.1	synth with cache (only 1: intros H; only 1: intros; only 1: change 2 with (1 + 1); only 1: apply Zdiv_lt_upper_bound; only 1: auto with zarith; only 1: auto with zarith).	1.9837179184	1632
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Uint63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Uint63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Uint63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Uint63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.is_int	40
Coq.Numbers.Cyclic.Int63.Uint63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.Z_oddE	40	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.034453868866	3
Coq.Numbers.Cyclic.Int63.Uint63.Z_evenE	40	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0323750972748	2
Coq.Numbers.Cyclic.Int63.Uint63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Uint63.bitE	40
Coq.Numbers.Cyclic.Int63.Uint63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Uint63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Uint63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Uint63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Uint63.landC	40
Coq.Numbers.Cyclic.Int63.Uint63.landA	40
Coq.Numbers.Cyclic.Int63.Uint63.land0	40
Coq.Numbers.Cyclic.Int63.Uint63.land0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.0459408760071	6
Coq.Numbers.Cyclic.Int63.Uint63.lorC	40
Coq.Numbers.Cyclic.Int63.Uint63.lorA	40
Coq.Numbers.Cyclic.Int63.Uint63.lor0	40
Coq.Numbers.Cyclic.Int63.Uint63.lor0_r	40	2.3.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: assert (F1 : 1 >= 0) by discriminate; only 1: apply orb_false_r).	0.0539848804474	10
Coq.Numbers.Cyclic.Int63.Uint63.lxorC	40
Coq.Numbers.Cyclic.Int63.Uint63.lxorA	40
Coq.Numbers.Cyclic.Int63.Uint63.lxor0	40
Coq.Numbers.Cyclic.Int63.Uint63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Uint63.opp_to_Z_opp	40
Coq.Numbers.Cyclic.Int63.Uint63.Deprecated.Z_lt_div2	40	2.2.0.0.0	synth with cache (only 1: elim_div; only 1: intros a b [h [hb| ]]; only 1: Z.order_nz; only 1: lia; only 1: lia).	0.0952928066254	9
Coq.Numbers.Cyclic.Int63.Uint63.Deprecated.negbE	40	6.4.1.0.4	synth with cache (only 1: destruct a, b; only 1: auto; only 1: auto; only 1: trivial; only 1: destr_bool).	1.9880771637	1628
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	5.1	synth with cache (only 1: intros; only 1: auto).	0.0285789966583	13
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	10.6457908154	3254
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_0	40	0	synth with cache (only 1: reflexivity).	0.0213298797607	1
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_min	40	0	synth with cache (only 1: auto with zarith).	0.0327999591827	1
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_max	40	0	synth with cache (only 1: auto with zarith).	0.0456838607788	1
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Sint63.of_to_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_mod_Uint63to_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.cmod_mod	40
Coq.Numbers.Cyclic.Int63.Sint63.cmod_small	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_cmodwB	40
Coq.Numbers.Cyclic.Int63.Sint63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.of_Z_cmod	40
Coq.Numbers.Cyclic.Int63.Sint63.is_int	40
Coq.Numbers.Cyclic.Int63.Sint63.of_pos_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.add_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.sub_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.mul_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.succ_spec	40	0	synth with cache (only 1: apply Uint63.add_spec).	0.0225660800934	1
Coq.Numbers.Cyclic.Int63.Sint63.pred_spec	40	1.3.0.3.22.42	synth with cache (only 1: bitwise as m Hm; only 1: generalize (Uint63.of_to_Z x); only 1: intros H; only 1: destruct (Uint63.to_Z_bounded x) as [hx hx']; only 1: f_equal; only 1: apply Uint63.sub_spec).	13.1868870258	7651
Coq.Numbers.Cyclic.Int63.Sint63.opp_spec	40	1.2	synth with cache (only 1: unfold opp; only 1: apply Uint63.sub_spec).	0.298010826111	60
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_add	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_sub	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_mul	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_succ	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_pred	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_opp	40
Coq.Numbers.Cyclic.Int63.Sint63.add_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.sub_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.mul_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.succ_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.pred_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.opp_of_Z	40	3.1.3.23.3	synth with cache (only 1: apply Uint63.to_Z_inj; only 1: rewrite Uint63.opp_spec; only 1: rewrite <- of_Z_spec; only 1: unfold to_Z; only 1: ring).	24.026706934	11056
Coq.Numbers.Cyclic.Int63.Sint63.eqbP	40
Coq.Numbers.Cyclic.Int63.Sint63.ltbP	40	1.0.26	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply Uint63.ltb_spec).	3.25536704063	4008
Coq.Numbers.Cyclic.Int63.Sint63.lebP	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Uint63.leb_spec).	0.105317115784	11
Coq.Numbers.Cyclic.Int63.Sint63.abs_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_abs	40
Coq.Numbers.Cyclic.Int63.Sint63.abs_min_int	40	8.0	synth with cache (only 1: apply bit_ext; only 1: trivial).	0.0445899963379	20
Coq.Numbers.Cyclic.Int63.Sint63.abs_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.asr_0	40
Coq.Numbers.Cyclic.Int63.Sint63.asr_0_r	40
Coq.Numbers.Cyclic.Int63.Sint63.asr_neg_r	40
Coq.Numbers.Cyclic.Int63.Sint63.asr_1	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	2	synth with cache (only 1: firstorder).	0.0538220405579	3
Coq.Numbers.Cyclic.Int63.Ring63.Uint63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.1	synth with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	0.0523340702057	17
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.2.0.8.1	synth with cache (only 1: zify; only 1: intros H; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.950371980667	699
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	28	synth with cache (only 1: apply N.eqb_eq).	2.16947221756	2384
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	1.0	synth with cache (only 1: unfold base; only 1: auto with zarith).	0.0292019844055	3
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	1.30	synth with cache (only 1: fix odd_spec 1; only 1: now Z.nzsimpl').	16.4301600456	3777
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	1.0	synth with cache (only 1: zify; only 1: auto with zarith).	0.0458121299744	3
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	18	synth with cache (only 1: trivial).	0.126275062561	145
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	9.0.3	synth with cache (only 1: intros; only 1: zify; only 1: auto).	1.10125303268	492
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	5	synth with cache (only 1: reflexivity).	0.0210819244385	6
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	3	synth with cache (only 1: reflexivity).	0.0229480266571	4
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.019593000412	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal'	40
Coq.Numbers.HexadecimalQ.of_to	40
Coq.Numbers.HexadecimalQ.dnorm_spec_i	40
Coq.Numbers.HexadecimalQ.dnorm_spec_f	40
Coq.Numbers.HexadecimalQ.dnorm_spec_e	40
Coq.Numbers.HexadecimalQ.dnorm_involutive	40
Coq.Numbers.HexadecimalQ.IZ_to_Z_IZ_of_Z	40	1.0.5.1.3	synth with cache (only 1: destruct z; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.766304016113	276
Coq.Numbers.HexadecimalQ.dnorm_i_exact	40
Coq.Numbers.HexadecimalQ.dnorm_i_exact'	40
Coq.Numbers.HexadecimalQ.to_of	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalQ.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalQ.of_inj	40
Coq.Numbers.HexadecimalQ.of_iff	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	14.6.8	synth with cache (only 1: intro m; only 1: rewrite nlt_ge; only 1: apply le_0_l).	30.5592591763	20616
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	2.0.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0214219093323	5
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.0.2.4.1	synth with cache (only 1: intro n; only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.743895053864	374
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0344889163971	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.0.3.0.0.0.2	synth with cache (only 1: intro n; only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.880918979645	447
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	8.0.4.2.0.0.0.0.0.0.0.1	synth with cache (only 1: intro n; only 1: induct n; only 1: intros m H; only 1: rewrite pred_0; only 1: assumption; only 1: intros n IH m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: apply le_succ_diag_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).	32.5447340012	27717
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	1.0.3.1	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.237916946411	73
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.1.0.0.11.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	3.33581399918	3016
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	0.4.2.0.0.6.0.1	synth with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros H; only 1: rewrite pred_succ; only 1: apply le_le_succ_r).	9.87719106674	8293
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.1.0.0.0.2.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	2.06923294067	1047
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.5.0.7	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	3.52251601219	2019
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	1.4.2.1.2	synth with cache (only 1: intros n IH; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: now nzsimpl').	4.34667801857	3825
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	0.060173034668	19
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	0.0418350696564	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: auto').	0.0718288421631	23
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0223619937897	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0230178833008	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.1.0.2.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_succ_0; only 1: now nzsimpl).	0.765901088715	426
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.1.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.175490140915	65
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.022782087326	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0186359882355	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	1.0.0.2.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).	0.7994389534	251
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.172390937805	44
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.0288589000702	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.481202125549	125
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	4.4.0.0.1.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: order; only 1: auto; only 1: intros Hab; only 1: apply Private_NZDiv.div_str_pos; only 1: auto').	11.0031740665	7805
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.8.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.768652915955	290
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0577411651611	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.034569978714	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.16.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	12.2834739685	10156
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	1.0.17.1.0.6.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	24.7408771515	21302
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	6.0.0.1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite (mul_comm c)).	18.6223340034	7056
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.121155977249	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.1.1.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.0348799228668	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.0940699577332	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.5.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.041543006897	14
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.118369102478	37
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0352280139923	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.0.1.0.3.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H).	0.556041955948	237
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.5.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.086611032486	34
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0366749763489	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.0.1.0.3.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H).	0.617118120193	261
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	1.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.150629997253	18
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.1.0.0.2	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	0.61958193779	205
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	0.791476964951	323
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.145135164261	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.0.0.2	synth with cache (only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.0399820804596	9
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	3.0.0.1.4.7	synth with cache (only 1: intro x; only 1: intro m; only 1: intro H; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: firstorder).	2.58372092247	2576
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	1.11.28.4	synth with cache (only 1: intro a; only 1: unfold def_mul; only 1: apply succ_inj_wd; only 1: now rewrite recursion_0).	6.61685013771	10564
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	0.29.25	synth with cache (only 1: intro l; only 1: unfold ltb; only 1: now rewrite recursion_0).	39.8123641014	19911
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.1.3.1.0.12	synth with cache (only 1: intros a0; only 1: unfold even; only 1: rewrite recursion_succ; only 1: destr_bool; only 1: split; only 1: f_equiv').	1.47651982307	1650
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.2.0.17.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: order; only 1: apply le_0_l; only 1: assumption).	15.513767004	8394
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.0531899929047	15
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.1.0.0	synth with cache (only 1: intros x x' EQ; only 1: destruct (le_gt_cases x 0); only 1: now f_equiv; only 1: now f_equiv).	0.0509140491486	18
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	2.38427209854	797
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	3.3.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0782179832458	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	1.2.0.0.11	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: apply lt_1_2; only 1: apply Private_NZDiv.div_small; only 1: order').	0.664752960205	550
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.4	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.114080905914	18
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0630750656128	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	2.0.1.1.11.15	synth with cache (only 1: intros m IH; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: rewrite pow_succ_r', <- div_div by order_nz; only 1: apply eq_true_iff_eq; only 1: now nzsimpl).	29.6116728783	12123
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0197629928589	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	3.4.10.3.3.5.9	synth with cache (only 1: constructor; only 1: firstorder; only 1: now try order'; only 1: intros x x' EQ; only 1: red; only 1: intros a; only 1: eauto).	37.778949976	42213
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	2.0.2.0.5.7.4	synth with cache (only 1: repeat red; only 1: intros n m H1 H2; only 1: apply eq_true_iff_eq; only 1: rewrite 2!testbit_true; only 1: f_equiv; only 1: f_equiv; only 1: now f_equiv).	39.3739831448	12711
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.0.17	synth with cache (only 1: intro p; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	3.45247006416	2351
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0365889072418	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.179332017899	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.4	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.594327926636	196
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0598998069763	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.071907043457	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.069895029068	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0300741195679	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).	0.126267910004	31
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0309798717499	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	4.0.0.21	synth with cache (only 1: intros x y; only 1: intros a; only 1: bitwise; only 1: intuition).	35.3605098724	11473
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.11.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now destruct (even n), (even m)).	0.624612808228	478
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	3.1.0.8	synth with cache (only 1: intro m; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	2.43930196762	1345
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.4.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.066174030304	22
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0310781002045	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	1.1.2.0.18.4	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hy; only 1: setoid_rewrite Hx; only 1: auto with *).	15.9262499809	6754
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.0.0.1.0.0.0.0.0.0.1.4.0	synth with cache (only 1: intros; only 1: apply testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: assumption; only 1: order_nz).	7.60742998123	3540
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0340120792389	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	2.0.3.2.0	synth with cache (only 1: intros a n; only 1: unfold lnot; only 1: rewrite !ones_equiv; only 1: bitwise; only 1: now destruct a.[m]).	1.44190001488	576
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.4.5	synth with cache (only 1: intros a n H; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	2.68271112442	1318
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.0.0.0.3.0.0.2	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.379340171814	356
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	1.2.5	synth with cache (only 1: intros EQ; only 1: apply sqrt_square; only 1: apply le_0_l).	0.12806892395	42
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.1.0.0.1.6.5	synth with cache (only 1: intros z n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.03101396561	3971
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	1.0.2.0.0.0.0.1	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: nzsimpl; only 1: now nzsimpl).	0.703967094421	252
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	7.7.0.0.1.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intro H; only 1: now nzsimpl).	18.7354810238	11835
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	synth with cache (only 1: cases n; only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0554168224335	8
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.47435307503	576
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.3.5	synth with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	6.41094994545	2382
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	2.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	0.529100894928	82
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.2.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.441300868988	68
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.284334897995	22
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0417850017548	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	6.0.5.2	synth with cache (only 1: intro n; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	1.23370599747	460
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	2.6469271183	842
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	1.6.2.3.0.5	synth with cache (only 1: intros a b; only 1: intros H; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').	5.16546797752	4493
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.0.0.0.0.0.0.6.0.3.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: now rewrite <- H).	30.5627470016	8587
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.3.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: auto'; only 1: order').	0.0536949634552	11
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.0.0.2.0.0.1	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.649469137192	248
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.1.0.2.0.3.2.11	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: assert (b ^ c <= a ^ c) by (apply Private_NZPow.pow_le_mono_l; try split; order); only 1: order; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	29.8344640732	25569
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.0.0.0.2.0.1	synth with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.045786857605	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.0.2.0.0.1.0.0.6	synth with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	15.7880609035	7755
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	0.1.1.0.0.0.4.4.0.4	synth with cache (only 1: intros; only 1: split; only 1: apply Private_NZPow.pow_le_mono_r; only 1: apply neq_0_lt_0; only 1: order'; only 1: intro LE; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	39.6808810234	14927
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r).	2.16238903999	751
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r).	1.0985121727	319
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.0.0.6.1.0.0.0.0.6.0.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	27.3794720173	15667
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.2.0.0.1.0.0.2.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	12.2310059071	5770
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l).	0.926101922989	256
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	2.0.0.1.2.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	4.03614902496	1799
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	1.0.0.6.1.0.0.5.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).	8.92622303963	5258
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	5.1	synth with cache (only 1: intros; only 1: auto).	0.209747076035	8
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	36.9279868603	483
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0884909629822	15
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	0.1.0.0.9.1.0.6.19	synth with cache (only 1: compute; only 1: intros a b c Ha Hb Hc; only 1: f_equiv; only 1: order; only 1: f_equiv; only 1: order; only 1: f_equiv; only 1: order; only 1: order).	30.1063430309	19600
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	1.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.0442500114441	17
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	4.0.11	synth with cache (only 1: intro a; only 1: unfold lcm; only 1: now nzsimpl).	3.35643696785	2587
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0626158714294	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.9.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	1.85098099709	976
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.8.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	1.43402290344	703
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.2.3.5	synth with cache (only 1: intro H; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_l).	0.947565078735	736
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	4.0.5.0	synth with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	1.9376938343	773
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	0.2.0.0.0.1.0.0.1.0.0.3.0.3	synth with cache (only 1: intros n m; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	24.5738811493	15830
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.HexadecimalZ.of_to	40
Coq.Numbers.HexadecimalZ.to_of	40
Coq.Numbers.HexadecimalZ.to_int_inj	40
Coq.Numbers.HexadecimalZ.to_int_surj	40
Coq.Numbers.HexadecimalZ.of_int_norm	40
Coq.Numbers.HexadecimalZ.of_inj	40	0.5.2.2	synth with cache (only 1: intros [=H]; only 1: rewrite <- !HexadecimalPos.Unsigned.to_of; only 1: rewrite H; only 1: now f_equal).	1.30558013916	580
Coq.Numbers.HexadecimalZ.of_iff	40
Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40
Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40
Coq.Numbers.HexadecimalZ.double_norm	40
Coq.Numbers.HexadecimalZ.of_hex_int_double	40
Coq.Numbers.HexadecimalZ.double_to_hex_int	40
Coq.Numbers.HexadecimalZ.nztail_to_hex_uint_pow16	40
Coq.Numbers.HexadecimalN.Unsigned.of_to	40
Coq.Numbers.HexadecimalN.Unsigned.to_of	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.0305240154266	1
Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- !HexadecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0421259403229	3
Coq.Numbers.HexadecimalN.Unsigned.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- HexadecimalPos.Unsigned.of_uint_norm, E; only 1: apply HexadecimalPos.Unsigned.of_uint_norm).	0.0786511898041	13
Coq.Numbers.HexadecimalN.Signed.of_to	40
Coq.Numbers.HexadecimalN.Signed.to_of	40
Coq.Numbers.HexadecimalN.Signed.to_int_inj	40
Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalN.Signed.of_int_norm	40
Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalFacts.of_list_to_list	40
Coq.Numbers.HexadecimalFacts.to_list_of_list	40
Coq.Numbers.HexadecimalFacts.to_list_inj	40
Coq.Numbers.HexadecimalFacts.of_list_inj	40
Coq.Numbers.HexadecimalFacts.nb_digits_spec	40	0.2.50.31.80	synth with cache (only 1: bitwise as m; only 1: Morphisms.f_equiv; only 1: Nat.bitwise; only 1: f_equal; only 1: now induction u; [ idtac | simpl; rewrite IHu.. ]).	38.4949991703	98183
Coq.Numbers.HexadecimalFacts.nzhead_spec	40
Coq.Numbers.HexadecimalFacts.unorm_spec	40
Coq.Numbers.HexadecimalFacts.revapp_spec	40
Coq.Numbers.HexadecimalFacts.rev_spec	40
Coq.Numbers.HexadecimalFacts.app_spec	40
Coq.Numbers.HexadecimalFacts.nztail_spec	40
Coq.Numbers.HexadecimalFacts.del_head_spec_0	40	0	synth with cache (only 1: trivial).	0.0226981639862	1
Coq.Numbers.HexadecimalFacts.del_head_spec_small	40
Coq.Numbers.HexadecimalFacts.del_head_spec_large	40
Coq.Numbers.HexadecimalFacts.nb_digits_0	40
Coq.Numbers.HexadecimalFacts.nb_digits_n0	40
Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40
Coq.Numbers.HexadecimalFacts.length_lnzhead	40	2.3.27	synth with cache (only 1: revert l; only 1: fix le_div2 1; only 1: now f_equal).	10.8289291859	14118
Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_nzhead	40	0.23.15	synth with cache (only 1: intuition; only 1: symmetry; only 1: now induction u; [ idtac | simpl; rewrite IHu | .. ]).	2.47292208672	5451
Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40
Coq.Numbers.HexadecimalFacts.nb_digits_rev	40
Coq.Numbers.HexadecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.HexadecimalFacts.unorm_D0	40	5.0.0.1	synth with cache (only 1: case (uint_eq_dec (nzhead u) Nil); only 1: unfold unorm; only 1: now simpl; only 1: trivial).	0.136698007584	32
Coq.Numbers.HexadecimalFacts.app_nil_l	40	0	synth with cache (only 1: now simpl).	0.0221519470215	1
Coq.Numbers.HexadecimalFacts.app_nil_r	40
Coq.Numbers.HexadecimalFacts.abs_app_int	40
Coq.Numbers.HexadecimalFacts.abs_norm	40
Coq.Numbers.HexadecimalFacts.iter_D0_nzhead	40
Coq.Numbers.HexadecimalFacts.iter_D0_unorm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_l	40
Coq.Numbers.HexadecimalFacts.nzhead_app_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intro Hl; only 1: apply to_list_inj; only 1: revert Hl; only 1: rewrite !nb_digits_spec, !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: rewrite <- List.app_comm_cons; only 1: now case h; [ idtac | simpl; rewrite List.app_length; intro Hl; exfalso; revert Hl; apply Nat.le_ngt; rewrite Nat.add_comm; apply Nat.le_add_r.. ]).	0.13382101059	9
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_zero	40
Coq.Numbers.HexadecimalFacts.app_int_nil_r	40
Coq.Numbers.HexadecimalFacts.unorm_app_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_r	40
Coq.Numbers.HexadecimalFacts.norm_app_int	40
Coq.Numbers.HexadecimalFacts.del_head_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_tail_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_head_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int	40
Coq.Numbers.HexadecimalFacts.app_del_tail_head	40
Coq.Numbers.HexadecimalFacts.app_int_del_tail_head	40
Coq.Numbers.HexadecimalFacts.del_head_app_int_exact	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp	40
Coq.Numbers.HexadecimalFacts.nzhead_rev	40
Coq.Numbers.HexadecimalFacts.rev_rev	40
Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_D0	40	0	synth with cache (only 1: reflexivity).	0.0212938785553	1
Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	3.0.4.0.30	synth with cache (only 1: nzinduct n; only 1: set (f := fix aux d_rev := match d_rev with | D0 d_rev => let (r, n) := aux d_rev in (r, S n) | _ => (d_rev, 0) end); only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: intro n; only 1: intuition).	5.85548210144	5352
Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40
Coq.Numbers.HexadecimalFacts.unorm_0	40
Coq.Numbers.HexadecimalFacts.unorm_nonnil	40
Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40	0	synth with cache (only 1: now induction n).	0.023236989975	1
Coq.Numbers.HexadecimalFacts.del_head_nonnil	40
Coq.Numbers.HexadecimalFacts.del_tail_nonnil	40
Coq.Numbers.HexadecimalFacts.nzhead_involutive	40
Coq.Numbers.HexadecimalFacts.nztail_involutive	40
Coq.Numbers.HexadecimalFacts.unorm_involutive	40	0	synth with cache (only 1: now induction d).	0.0293729305267	1
Coq.Numbers.HexadecimalFacts.norm_involutive	40
Coq.Numbers.HexadecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.HexadecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.HexadecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40
Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.DecimalZ.of_uint_iter_D0	40
Coq.Numbers.DecimalZ.of_int_iter_D0	40
Coq.Numbers.DecimalZ.nztail_to_uint_pow10	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.0.8.1	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).	0.698660135269	158
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	2.0.2.0.0.0.4.1.1.2.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order'; only 1: rewrite two_succ; only 1: apply lt_succ_r; only 1: rewrite <- succ_le_mono; only 1: now apply le_le_succ_r).	17.4613530636	6335
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.2.0	synth with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0383520126343	8
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.1.1.0.0.0.2	synth with cache (only 1: intro n; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.390856981277	194
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.1.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: symmetry; only 1: now rewrite ?Hx; only 1: order; only 1: order).	0.0297031402588	7
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.1.23.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: nzsimpl'; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn by now apply lt_succ_r, mul_nonneg_nonneg; only 1: now rewrite pred_succ, sqrt_square).	4.34524011612	4465
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.568209171295	210
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.1.0.0.7.8	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order).	0.611223936081	491
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	0.150800943375	49
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.4.1.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	3.40805792809	2082
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	5.1.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.852811098099	535
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.2.0.0.0	synth with cache (only 1: intros a ?; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.118121147156	44
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.1.0.0.9.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: split; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	22.4233100414	15249
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.0.0.0.1.2.0.0	synth with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.470895051956	101
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0783488750458	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0727961063385	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0247240066528	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.26811003685	41
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.132091999054	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.31990504265	670
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.5.0.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.61988902092	1717
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.0.1.5.6.3	synth with cache (only 1: intros z Base Step; only 1: intro n; only 1: nzinduct n; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	11.3828661442	5325
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.144649028778	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0349638462067	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	23.0.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	1.37345004082	1715
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.21.2.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: left; only 1: rewrite lt_succ_r; only 1: apply le_refl).	3.95448517799	4667
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	2.1.7.3.28.0.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: setoid_rewrite H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: rewrite <- H  at 2; only 1: now right).	24.3445370197	48225
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	12.0.1.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	2.3960249424	1049
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0636150836945	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	5.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.0279297828674	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0.3.0	synth with cache (only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now rewrite H2 in H1).	0.111386060715	61
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0	synth with cache (only 1: order).	0.0125079154968	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0	synth with cache (only 1: order).	0.0127449035645	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0	synth with cache (only 1: order).	0.0127260684967	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0	synth with cache (only 1: order).	0.0140810012817	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0	synth with cache (only 1: order).	0.011990070343	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (lt_irrefl x); only 1: transitivity y; only 1: auto; only 1: auto).	0.284703969955	33
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.1.3	synth with cache (only 1: intros; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0896420478821	55
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	0.2.0.4.0.0.2.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n m; only 1: intro H; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r; only 1: intro n; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: tauto).	5.73759293556	3364
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.4.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0549399852753	26
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: nzinduct m n; only 1: split; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro H; only 1: false_hyp H nle_succ_diag_l; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	30.5744929314	19022
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	4.2.1.6.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	16.3698208332	8726
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.2.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0260329246521	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.033940076828	12
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0307919979095	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	0.1.13.6.0	synth with cache (only 1: intros n m; only 1: rewrite one_succ; only 1: rewrite <- le_succ_l; only 1: intros LE EQ; only 1: order).	11.6810660362	12756
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.120115995407	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0940990447998	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.0.1	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.376119852066	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.5.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.10936498642	15
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	1	synth with cache (only 1: intuition order).	0.347107172012	91
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0180270671844	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0692880153656	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	3.0.2.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	0.304445028305	59
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0513029098511	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0484991073608	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0556089878082	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.3.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intro H; only 1: intuition order).	0.368879079819	57
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.1.0.0.1.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: rewrite lt_succ_r; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	1.35951685905	652
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	1.1.17.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).	7.19969415665	8711
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	7.1.8.7.7	synth with cache (only 1: intros x y EQ WF; only 1: intuition; only 1: induction n; only 1: auto; only 1: eauto).	2.96016812325	1829
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	28.16	synth with cache (only 1: simpl; only 1: now Nat.nzsimpl).	0.499835968018	1463
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	3.0	synth with cache (only 1: intros a; only 1: now Nat.nzsimpl').	0.0285348892212	5
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	0.5.1.0.0	synth with cache (only 1: intro n; only 1: Nat.cases n; only 1: now unfold ofnat; only 1: Bool.destr_bool; only 1: now rewrite Nat.pred_succ).	1.11419820786	283
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.0.2.1.3.2	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite lt_succ_r; only 1: Nat.cases ltac:(n); only 1: reflexivity; only 1: fix le_div2 1; only 1: auto).	1.62095713615	520
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	1.1.16	synth with cache (only 1: fix le_div2 1; only 1: intro; only 1: auto).	6.12459802628	4410
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	3.2.5.8	synth with cache (only 1: intros n; only 1: fix odd_spec 1; only 1: intro m; only 1: auto).	19.8332178593	7619
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.143095970154	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	0.4.0.6	synth with cache (only 1: unfold divide; only 1: intro n; only 1: exists n; only 1: now nzsimpl').	0.715265035629	420
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.13.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	1.99309301376	1225
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.8.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	4.83346390724	3291
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.0.17.4	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	2.11646413803	1304
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.17.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.508996009827	483
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	4.0.0.1.0.1.0.19	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	3.53858709335	3356
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0299391746521	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.0510921478271	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0391628742218	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0288898944855	6
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	0.9.0.2.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	15.3395521641	8799
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.0.0.0.0.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.0330710411072	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.182907104492	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	3.26037192345	713
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.5.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.165033102036	20
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0660710334778	17
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.4.0.0	synth with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.035670042038	9
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	8.0.4.4.5.0	synth with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: apply even_spec in Hm; only 1: now destruct (even n), (even m)).	15.5631251335	10106
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	1.4.11.3.0.0	synth with cache (only 1: intros; only 1: apply odd_add_even; only 1: nzsimpl'; only 1: exists m; only 1: nzsimpl'; only 1: now nzsimpl).	35.5827140808	15620
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.181655168533	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.16224694252	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.1.1.0.0.1.0.4.4	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	4.05265593529	1557
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	0.1.1.0.0.1.0.5.6	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	12.8904118538	5829
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0366878509521	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0378739833832	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.0798618793488	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.132121086121	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.2.0.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0716669559479	8
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0366339683533	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.2.0.7.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	9.67208313942	2782
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.1.1.1.4.27	synth with cache (only 1: rewrite one_succ; only 1: apply log2_unique' with 0; only 1: order; only 1: split; only 1: order; only 1: order_pos; only 1: now nzsimpl).	2.07674098015	1347
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.0.2.1.1.0.1.0	synth with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: order_pos; only 1: split; only 1: order; only 1: nzsimpl; only 1: order'; only 1: now nzsimpl).	0.646535873413	206
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.1.12.0	synth with cache (only 1: intros a Ha; only 1: assert (Ha' : 0 < a) by order'; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.602318048477	467
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.2.2.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	0.262406110764	67
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: order_pos; only 1: order).	0.349299192429	151
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0156750679016	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.0.0.3	synth with cache (only 1: intros x x0; only 1: firstorder; only 1: intuition; only 1: intuition).	0.0677750110626	63
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	6.0	synth with cache (only 1: intros; only 1: simpl_relation).	0.0213029384613	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.6	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).	0.0338540077209	22
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.3.0.0.0.4.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: revert m; only 1: intros; only 1: now f_equiv).	0.684218883514	452
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	5.165391922	1999
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.5.0.4	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	5.21848607063	2143
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.0.0.6.0.0	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	2.81486201286	1015
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0334391593933	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0294940471649	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	3.9.5	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	11.2738809586	9129
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0348861217499	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	8.5.7.2.9.0	synth with cache (only 1: intros n m H1 H2; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: now apply mul_lt_mono_nonneg).	14.877300024	14165
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).	0.0330619812012	7
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.HexadecimalR.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalR.of_to	40
Coq.Numbers.HexadecimalR.to_of	40
Coq.Numbers.HexadecimalR.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalR.to_hexadecimal_surj	40	0.2.1.0	synth with cache (only 1: exists (QArith_base.of_hexadecimal d); only 1: unfold of_hexadecimal; only 1: simpl; only 1: apply HexadecimalQ.to_of).	0.608570098877	71
Coq.Numbers.HexadecimalR.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalR.of_inj	40	0.0.1	synth with cache (only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !HexadecimalQ.to_of, H).	0.0927019119263	4
Coq.Numbers.HexadecimalR.of_iff	40
Coq.Numbers.HexadecimalString.uint_of_char_spec	40
Coq.Numbers.HexadecimalString.NilEmpty.usu	40
Coq.Numbers.HexadecimalString.NilEmpty.sus	40
Coq.Numbers.HexadecimalString.NilEmpty.isi	40
Coq.Numbers.HexadecimalString.NilEmpty.sis	40
Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.HexadecimalString.NilZero.sus	40
Coq.Numbers.HexadecimalString.NilZero.usu	40
Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	2.2	synth with cache (only 1: simpl; only 1: auto).	0.0271902084351	6
Coq.Numbers.HexadecimalString.NilZero.usu_gen	40
Coq.Numbers.HexadecimalString.NilZero.isi	40
Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0275828838348	2
Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.0175161361694	1
Coq.Numbers.HexadecimalString.NilZero.sis	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal	40
Coq.Numbers.DecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal'	40
Coq.Numbers.DecimalQ.of_to	40
Coq.Numbers.DecimalQ.dnorm_spec_i	40
Coq.Numbers.DecimalQ.dnorm_spec_f	40
Coq.Numbers.DecimalQ.dnorm_spec_e	40
Coq.Numbers.DecimalQ.dnorm_involutive	40
Coq.Numbers.DecimalQ.IZ_to_Z_IZ_of_Z	40	1.0.5.1.2	synth with cache (only 1: destruct z; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.654300928116	244
Coq.Numbers.DecimalQ.dnorm_i_exact	40
Coq.Numbers.DecimalQ.dnorm_i_exact'	40
Coq.Numbers.DecimalQ.to_of	40
Coq.Numbers.DecimalQ.to_decimal_inj	40
Coq.Numbers.DecimalQ.to_decimal_surj	40
Coq.Numbers.DecimalQ.of_decimal_dnorm	40
Coq.Numbers.DecimalQ.of_inj	40
Coq.Numbers.DecimalQ.of_iff	40
Coq.Numbers.NaryFunctions.napply_except_last	40	1.1.5	synth with cache (only 1: simpl; only 1: intros H; only 1: auto).	0.027263879776	10
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40	0.1	synth with cache (only 1: simpl; only 1: now destruct n).	0.0600030422211	3
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_to	40
Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40	5	synth with cache (only 1: now case d).	0.0359740257263	6
Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: firstorder).	0.0376009941101	3
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	7.0	synth with cache (only 1: simpl; only 1: trivial).	0.0267400741577	9
Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0417990684509	3
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40
Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40
Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40
Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40
Coq.Numbers.HexadecimalPos.Signed.of_to	40
Coq.Numbers.HexadecimalPos.Signed.to_of	40
Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40
Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40
Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	1.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0154509544373	3
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	14.0	synth with cache (only 1: firstorder; only 1: intuition).	0.153518915176	260
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0143179893494	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.0152449607849	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.1.2.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.54391002655	237
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.1.0	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition).	0.0369498729706	4
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	0.9.22	synth with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: auto).	1.66906404495	2588
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	4	synth with cache (only 1: intuition).	0.188381910324	64
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	2.0.12.13	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: intro p; only 1: intuition).	1.94037103653	3056
Coq.Structures.OrdersEx.Ascii_as_OT.lt_compat	40	0	synth with cache (only 1: <Coq.Strings.Ascii.t_eqb>).	0.0276529788971	1
Coq.Structures.OrdersEx.Ascii_as_OT.lt_strorder	40
Coq.Structures.OrdersEx.Ascii_as_OT.compare_spec	40
Coq.Structures.OrdersEx.String_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0817651748657	3
Coq.Structures.OrdersEx.String_as_OT.compare_spec	40
Coq.Structures.OrdersEx.String_as_OT.lt_strorder	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	1	synth with cache (only 1: Nat.order).	0.104634046555	18
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	12	synth with cache (only 1: intuition Nat.order).	0.623693943024	491
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.0.0	synth with cache (only 1: intros n m p; only 1: intros; only 1: now transitivity m).	0.0838360786438	3
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.0202059745789	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	30.9	synth with cache (only 1: intros l' x H; only 1: Pos.Private_Tac.order).	10.588269949	17068
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	14.0	synth with cache (only 1: intros n; only 1: easy).	0.23136806488	278
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	6.8.2.26	synth with cache (only 1: intro n; only 1: firstorder; only 1: intuition; only 1: intuition).	9.33703708649	16579
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	13.17	synth with cache (only 1: fix gcd_divide 1; only 1: auto with sets).	8.296241045	13019
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	4.24	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	3.68192601204	4701
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	4.21.3.0	synth with cache (only 1: intro n; only 1: induction n; only 1: fix even_spec 1; only 1: auto).	9.34173989296	10267
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	6.0.1.23.2	synth with cache (only 1: intro n; only 1: induction n; only 1: trivial; only 1: auto; only 1: auto).	3.84029698372	7456
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	2.1.9.8	synth with cache (only 1: intros H; only 1: fix sqrtrem_spec 1; only 1: intro; only 1: easy).	4.87514901161	7036
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0259020328522	1
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40	1.20	synth with cache (only 1: rewrite <- (ascii_N_embedding a); only 1: apply N.compare_antisym).	2.79799389839	2890
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	29.4.0.5.1	synth with cache (only 1: intros; only 1: red; only 1: inversion H; only 1: auto with bool; only 1: Nat.order_pos).	14.4798481464	22239
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40	1.7.7.0.17	synth with cache (only 1: intros l; only 1: intros n m p; only 1: revert m; only 1: fix OddT_EvenT_rect 1; only 1: auto).	6.04129385948	8602
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	3.0	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity).	0.0271329879761	13
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.0.1	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0709319114685	16
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	11.2.25	synth with cache (only 1: intros l1 l2; only 1: intros (p, H); only 1: firstorder).	19.6107439995	27347
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	0.31.2.1.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros x' x'' Hx' Hx''; only 1: eauto).	25.4252109528	65387
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	2.3.5.15	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: intuition).	0.71010684967	610
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	3.0.0.9	synth with cache (only 1: split; only 1: intro EQ; only 1: auto; only 1: auto).	0.565446853638	275
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.01802110672	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	synth with cache (only 1: order).	0.0177319049835	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.0182011127472	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	1.4.12	synth with cache (only 1: intro y0; only 1: intros; only 1: order).	3.53271698952	3284
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.14	synth with cache (only 1: intro H; only 1: order).	0.30300784111	166
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	1	synth with cache (only 1: order).	0.0170788764954	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.0175790786743	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0206279754639	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	synth with cache (only 1: order).	0.0162539482117	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.0180938243866	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.0170261859894	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0172300338745	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0172419548035	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.0181620121002	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.0.1.1.0.0.0.0.4.0	synth with cache (only 1: intros x y H; only 1: destruct (eq_dec x y); only 1: exfalso; only 1: order; only 1: case (compare x y); only 1: intros H'; only 1: intuition; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	8.64923405647	6806
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.966155052185	413
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.047670841217	3
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	3.0.1.0.0.1.14	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: auto with ordered_type).	2.41481089592	2026
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	3.0.1.0.1.0.0.5.6	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: intros x y H; only 1: auto with ordered_type; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: rewrite H; only 1: auto).	16.5039360523	7536
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	0.4.4	synth with cache (only 1: intros l; only 1: intros x y H; only 1: now rewrite H).	0.18738079071	98
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.0.0.0.0.0.3.3	synth with cache (only 1: intros l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.446293830872	224
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	0.0.0.0.1.6	synth with cache (only 1: intros l; only 1: apply InA_InfA; only 1: split; only 1: exact eq_refl; only 1: exact eq_sym; only 1: exact eq_trans).	0.139051914215	72
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	7	synth with cache (only 1: firstorder).	0.0454630851746	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	1.1.0	synth with cache (only 1: intro l; only 1: intros n x y; only 1: auto).	0.0397419929504	18
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.0161719322205	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0	synth with cache (only 1: intuition).	0.0184199810028	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.014955997467	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0243279933929	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	1.5.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros l1 l2 Heq; only 1: intuition).	0.0820519924164	27
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.11.1.5	synth with cache (only 1: intro l; only 1: unfold eqk, eqke; only 1: intros x y; only 1: order).	1.20502710342	1308
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.0188488960266	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0227301120758	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	2.1.16.0.1.0.57	synth with cache (only 1: constructor; only 1: auto with ordered_type; only 1: intros x; only 1: auto with ordered_type; only 1: intros Heq; only 1: unfold eqk, eqke; only 1: eauto with ordered_type).	4.87330794334	8934
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.10125207901	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	1.7.26.11.1.4	synth with cache (only 1: unfold eqke, ltk; only 1: constructor; only 1: intros n d; only 1: order; only 1: compute; only 1: eauto with ordered_type).	7.19528102875	15666
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0206139087677	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0171070098877	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0176470279694	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.3.2.21	synth with cache (only 1: intros A l; only 1: rewrite InA_alt; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).	13.4022929668	6414
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	0.2.2.2.0.5.0.2	synth with cache (only 1: intros l; only 1: intros [y H]; only 1: induction l as [| a l IHl]; only 1: auto; only 1: intros x a0 **; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	6.62711811066	3917
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	4.3.0.1.3.5	synth with cache (only 1: unfold eqke, ltk; only 1: induction l; only 1: auto with ordered_type; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	7.10043215752	3666
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.4.2.4.1.0.6	synth with cache (only 1: unfold eqke, ltk; only 1: intros l k e H H0; only 1: eapply Sort_Inf_In; only 1: inversion H; only 1: eauto with ordered_type; only 1: inversion H; only 1: auto; only 1: eauto with *).	8.10623288155	4079
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	3.3.5.13	synth with cache (only 1: induction 1; only 1: inversion H; only 1: firstorder; only 1: firstorder).	17.774381876	8077
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	27	synth with cache (only 1: abstract now inversion 1).	4.89803099632	2733
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.1.2.0.5	synth with cache (only 1: intro l; only 1: unfold eqke; only 1: inversion_clear 1 as [| ? ? H0 H1]; only 1: intuition; only 1: intuition).	0.76237988472	240
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0423610210419	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.2.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	5.70644783974	5055
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	1.0.0.2.0.0.1.2.0.1.2.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	30.7444710732	14202
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	2.1.0.0.2.1.0.2.0.1.2.0.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy).	33.970402956	19636
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.0	synth with cache (only 1: autorewrite with order; only 1: easy).	0.0154910087585	2
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	1.0.28	synth with cache (only 1: intro y0; only 1: compute; only 1: iorder).	17.4684448242	6316
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	7.3	synth with cache (only 1: intro H; only 1: order).	0.157887935638	134
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	5.12	synth with cache (only 1: unfold not; only 1: iorder).	0.910924911499	916
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.0177819728851	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.310820102692	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.0	synth with cache (only 1: intros x y; only 1: iorder).	0.0213429927826	2
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	6.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.101270198822	19
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.024337053299	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.0.2.3.0	synth with cache (only 1: intro H; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	0.0339350700378	10
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0218789577484	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0209121704102	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	4.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.48475790024	7
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.0133759975433	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	synth with cache (only 1: order).	0.0159320831299	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.0162580013275	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	1.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0228672027588	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	3.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0256180763245	6
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.013111114502	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	synth with cache (only 1: order).	0.120088815689	70
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.0131719112396	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	synth with cache (only 1: order).	0.0150001049042	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0.0	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0348899364471	3
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0133528709412	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.0130481719971	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.0129868984222	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.0143549442291	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	14.4.4.3	synth with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	27.4564538002	32183
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.7.11	synth with cache (only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: unfold lt; only 1: auto with *).	36.8324460983	26998
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0150299072266	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.0.0.1.23.9	synth with cache (only 1: apply CompOpp_inj; only 1: CRelationClasses.simpl_crelation; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: apply compare_eq_iff; only 1: reflexivity).	0.595602989197	1389
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0175168514252	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0221049785614	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.1.2.6	synth with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1; only 1: constructor; only 1: trivial; only 1: trivial).	4.08826184273	1954
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.1.0.5.0.5	synth with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: trivial).	2.89463591576	1193
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.9	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.680025100708	225
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.2.3.4.0.10	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	6.7396531105	6156
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.2.27.10	synth with cache (only 1: apply eq_true_iff_eq; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	7.44649004936	10012
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	2.5.0	synth with cache (only 1: intros l x y H H'; only 1: destruct H; only 1: auto).	0.0694298744202	20
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	7.0.0.0.1	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: eauto with *).	0.799404859543	415
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.0.2.1.1.3.0.1.0.3	synth with cache (only 1: induction l; only 1: intros l'; only 1: intros H H0 H1; only 1: constructor; only 1: intros HF; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	8.38300704956	5215
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	4.2	synth with cache (only 1: intros n m p; only 1: now intros ->).	0.0593800544739	25
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.6	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: intuition).	0.0412631034851	18
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.3.0.5	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: intuition).	0.121232032776	95
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0	synth with cache (only 1: solve_proper).	0.0316860675812	1
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	2.4.0	synth with cache (only 1: unfold eqk, ltk; only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha, Hb).	0.468113899231	9
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	2.0	synth with cache (only 1: intros x y H y0 y1 e; only 1: intuition).	0.0262379646301	4
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0357890129089	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0294818878174	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.0.4.0.0.0.0.16	synth with cache (only 1: intros H; only 1: apply SortA_InfA_InA; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: inversion H; only 1: eauto; only 1: inversion H; only 1: eauto).	16.960226059	10084
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	synth with cache (only 1: firstorder).	0.0167989730835	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	2	synth with cache (only 1: tauto).	0.0181670188904	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	1	synth with cache (only 1: split).	0.0164330005646	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.1.0	synth with cache (only 1: intro H; only 1: inversion H; only 1: trivial).	0.0260891914368	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	synth with cache (only 1: now destruct 1).	0.0176301002502	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	synth with cache (only 1: reflexivity).	0.0150640010834	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	3	synth with cache (only 1: trivial).	0.0163090229034	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	6.2	synth with cache (only 1: intro H; only 1: auto).	0.0216400623322	10
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	3.0.0.0.2	synth with cache (only 1: do 2 rewrite InA_alt; only 1: intros (y, H); only 1: exists y; only 1: intuition; only 1: eauto).	0.12176990509	19
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.6.7.0.14	synth with cache (only 1: intros H0; only 1: induction 1; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).	5.51235389709	4832
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	2.0.0	synth with cache (only 1: unfold In, MapsTo; only 1: setoid_rewrite InA_alt; only 1: firstorder).	0.0368449687958	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	synth with cache (only 1: now intros <-).	0.0268330574036	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.0.18.8	synth with cache (only 1: firstorder  auto with crelations; only 1: inversion H; only 1: firstorder; only 1: eauto).	31.5042769909	4648
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.0.12.1	synth with cache (only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder  auto with crelations; only 1: eauto).	1.23571300507	721
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	3.0.21.5.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	20.6123049259	32760
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	9.1	synth with cache (only 1: intros x y H; only 1: firstorder).	0.0613570213318	56
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	4.0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: auto).	0.0164930820465	7
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.00927495956421	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0166068077087	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.0.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros (EQ, LE); only 1: simpl; only 1: intuition).	0.0272419452667	5
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	1.16	synth with cache (only 1: intros; only 1: eauto).	0.706007003784	453
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.0.2.11.0.3.5	synth with cache (only 1: split; only 1: auto; only 1: auto; only 1: intro H; only 1: unfold eqk, eqke; only 1: intuition; only 1: eauto).	3.0412940979	3247
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0263900756836	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	2.0.3.19.7	synth with cache (only 1: intros x y H; only 1: elim H; only 1: unfold eqke; only 1: intuition; only 1: intuition).	28.9316430092	13433
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	1.3.1.9	synth with cache (only 1: intro l; only 1: intros; only 1: rewrite <- H; only 1: eauto).	0.651638031006	485
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	1.3.2.6	synth with cache (only 1: intros x H; only 1: inversion 1; only 1: firstorder; only 1: intuition).	0.826418161392	628
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.0.0.3.1	synth with cache (only 1: unfold eqk, eqke; only 1: intros l x y H H'; only 1: invlist InA; only 1: intuition; only 1: intuition).	0.215183019638	59
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	25	synth with cache (only 1: intuition).	0.103942155838	306
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.1	synth with cache (only 1: unfold eq; only 1: decide equality).	0.0811131000519	3
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	26.8655278683	10895
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0390391349792	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	1.21868801117	673
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	0.2.0.2.16.0.8	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: intuition order; only 1: order; only 1: intuition; only 1: order; only 1: order).	13.0943598747	7943
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	1.2.1.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.454419136047	200
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.020544052124	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	8	synth with cache (only 1: solve_max).	0.125777006149	36
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	synth with cache (only 1: solve_max).	0.0290520191193	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	0.12.0.9.0.0	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: right; only 1: order; only 1: left; only 1: order).	40.0014870167	20141
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	33.0356478691	12502
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0635418891907	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0351758003235	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0428938865662	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.0.1.4	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.128072977066	31
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.3.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.128410100937	26
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.0211539268494	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0655379295349	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0363278388977	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0744431018829	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	5.46760392189	2597
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	0.0.0.0.0.1.12	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	17.449808836	10553
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.0.0.3.3.218	synth with cache (only 1: symmetry; only 1: apply min_unicity; only 1: right; only 1: split; only 1: order; only 1: order).	7.13546895981	53207
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.1.0.0.9.8	synth with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).	0.712129831314	653
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0208539962769	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	6	synth with cache (only 1: solve_min).	0.0766081809998	34
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	synth with cache (only 1: solve_min).	0.0281569957733	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.1.6	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.460337877274	165
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.1.1.0.0.1.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	6.52498912811	3170
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	1.56625390053	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.1.0.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.037535905838	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.0210161209106	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.1.0.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0333459377289	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.6.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.136038064957	33
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0217549800873	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.082484960556	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0341658592224	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.0.4.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: apply min_glb_iff; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: solve_min).	0.0639619827271	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.3	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0358009338379	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.7	synth with cache (only 1: apply min_l; only 1: solve_max).	0.0776410102844	28
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.17674899101	939
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.1.0.1.0.0.0.1.0.1.0.0.1.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	28.9538199902	19825
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.0.12	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	3.78299808502	3263
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.21	synth with cache (only 1: apply max_mono; only 1: eauto with *).	0.80797290802	914
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	2.4.1.2.10	synth with cache (only 1: intros x y z; only 1: apply max_case_strong; only 1: intros; only 1: destruct H; only 1: auto with sets).	19.093558073	13976
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0253529548645	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0255279541016	9
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.8.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	0.376101016998	217
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.025887966156	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.0.7	synth with cache (only 1: intro b1; only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0851969718933	65
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	1.1	synth with cache (only 1: unfold eq, lt; only 1: decide equality).	0.045490026474	26
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0395250320435	5
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0386810302734	5
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: trivial).	0.0178520679474	1
Coq.ZArith.Znat.positive_N_nat	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.0200231075287	3
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0488710403442	9
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: trivial; only 1: trivial).	0.0391728878021	6
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	0	synth with cache (only 1: now destruct n).	0.018098115921	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.1.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.487309932709	163
Coq.ZArith.Znat.N2Z.id	40	0.0.0.1.1	synth with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: trivial).	0.0516090393066	7
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.1.0.1.0.0.15	synth with cache (only 1: destruct n, m; only 1: intros; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	4.26229596138	3624
Coq.ZArith.Znat.N2Z.inj_iff	40	2.1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: now subst).	36.8621349335	14091
Coq.ZArith.Znat.N2Z.is_nonneg	40	1	synth with cache (only 1: now destruct n).	0.0324201583862	11
Coq.ZArith.Znat.N2Z.inj_0	40	7	synth with cache (only 1: split).	0.0183200836182	8
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0179131031036	1
Coq.ZArith.Znat.N2Z.inj_compare	40	3.0.0.1.4.1	synth with cache (only 1: destruct n, m; only 1: split; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.912084102631	426
Coq.ZArith.Znat.N2Z.inj_le	40
Coq.ZArith.Znat.N2Z.inj_lt	40	1.10	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now rewrite inj_compare).	4.10110998154	1117
Coq.ZArith.Znat.N2Z.inj_ge	40	0.1.0.1.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: easy; only 1: intros H; only 1: easy; only 1: now destruct n, m).	1.06814885139	438
Coq.ZArith.Znat.N2Z.inj_gt	40	3.2.2.3.3	synth with cache (only 1: destruct n, m; only 1: intuition; only 1: now destruct p; only 1: now destruct p; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	5.99398708344	2864
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	2	synth with cache (only 1: now destruct n, m).	0.0191330909729	3
Coq.ZArith.Znat.N2Z.inj_mul	40
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0350210666656	6
Coq.ZArith.Znat.N2Z.inj_pred_max	40	29.0.3.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	5.50046110153	6602
Coq.ZArith.Znat.N2Z.inj_pred	40	3.6.9	synth with cache (only 1: intro H; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [p| p| ]]).	4.56309294701	1744
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.2.1.3.1	synth with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.394894838333	206
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0290989875793	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0696921348572	10
Coq.ZArith.Znat.Z2N.id	40	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0476179122925	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	4.8.0.0.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: intuition; only 1: now subst).	6.56550383568	4416
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: now N.nzsimpl).	0.0380160808563	2
Coq.ZArith.Znat.Z2N.inj_pos	40	1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now N.nzsimpl).	0.062894821167	7
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0216019153595	2
Coq.ZArith.Znat.Z2N.inj_add	40	0.0.0.1.2.2.1.1.0.7	synth with cache (only 1: destruct n as [| p| p]; only 1: intros; only 1: now N.nzsimpl; only 1: simpl; only 1: intro Hn; only 1: destruct m as [| m| m]; only 1: trivial; only 1: trivial; only 1: easy || now destruct Hm; only 1: easy || now destruct y).	8.38550400734	4210
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	1.44841599464	322
Coq.ZArith.Znat.Z2N.inj_succ	40	0.0.1.1.3.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros Hn; only 1: simpl; only 1: f_equal; only 1: now destruct p; only 1: easy).	1.13085484505	366
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.1.1.1.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.105695962906	43
Coq.ZArith.Znat.Z2N.inj_compare	40	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: now destruct 1 || now destruct 2).	1.25329399109	370
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40	0.12.0	synth with cache (only 1: intros Hn Hm; only 1: unfold N.ltb, N.lt; only 1: now rewrite <- N2Z.inj_compare, !id).	1.21267294884	614
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	1	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.020210981369	2
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0381858348846	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	0.0.6.1.0.2.0.0.0.2.3.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a], n; only 1: simpl; only 1: split; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now destruct Hn).	22.7429559231	17407
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.042946100235	5
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	1.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0328040122986	6
Coq.ZArith.Znat.Zabs2N.id_abs	40	6	synth with cache (only 1: now destruct n).	0.0399570465088	7
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0184681415558	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	synth with cache (only 1: trivial).	0.0165679454803	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0532119274139	7
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.019896030426	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	2	synth with cache (only 1: now destruct n).	0.0212540626526	3
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.4.0.0.2.0	synth with cache (only 1: unfold Z.succ; only 1: destruct n as [| n| n]; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct n; only 1: now destruct 1 || intros _).	0.988656044006	317
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	0.130270957947	10
Coq.ZArith.Znat.Zabs2N.inj_mul	40
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.1.1.1.3.0.5	synth with cache (only 1: destruct n; only 1: easy; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: easy).	2.1668920517	739
Coq.ZArith.Znat.Zabs2N.inj_compare	40	0.1.0.0.0.0.0.0.0.2.2	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear).	3.05923485756	1251
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.032233953476	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0335648059845	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.rem (Z.pos p) (Z.pos q)) = (N.pos p mod N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_rem; only 1: now apply Z.rem_nonneg; only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	6.61006498337	3073
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0231990814209	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0155498981476	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	6.10.1.1.1.3	synth with cache (only 1: revert n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: now rewrite Pos.add_1_r).	32.5640740395	10517
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	4.4.9.25	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).	1.54320311546	1439
Coq.ZArith.Znat.Nat2Z.id	40	0.0.0.0.0.1.3	synth with cache (only 1: Nat.cases ltac:(n); only 1: simpl; only 1: Nat.order_nz; only 1: intro n; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.300181150436	46
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).	0.0411620140076	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Nat2Z.inj_div	40
Coq.ZArith.Znat.Nat2Z.inj_mod	40
Coq.ZArith.Znat.Nat2Z.inj_pow	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.5.5.6.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: intros; only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	30.8097560406	23200
Coq.ZArith.Znat.Z2Nat.inj	40	8.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: auto).	0.310468912125	142
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.042181968689	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	5	synth with cache (only 1: trivial).	0.0164639949799	6
Coq.ZArith.Znat.Z2Nat.inj_pos	40	1	synth with cache (only 1: trivial).	0.0166308879852	2
Coq.ZArith.Znat.Z2Nat.inj_neg	40	1	synth with cache (only 1: reflexivity).	0.0189990997314	2
Coq.ZArith.Znat.Z2Nat.inj_add	40	0.0.0.0.1.1.1.0.0.0.0.1.7	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n], m as [| m| m]; only 1: now Z.nzsimpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros _; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || intros _; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _).	8.4462211132	3690
Coq.ZArith.Znat.Z2Nat.inj_mul	40	0.0.0.0.1.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	19.4980251789	6799
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Z2Nat.inj_div	40
Coq.ZArith.Znat.Z2Nat.inj_mod	40
Coq.ZArith.Znat.Z2Nat.inj_pow	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0180490016937	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0287938117981	2
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	2.98738098145	1703
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.2	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0375320911407	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	5	synth with cache (only 1: split).	0.0165820121765	6
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0162930488586	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0160369873047	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40	2.0.0.0.1.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	20.3253850937	7845
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0373249053955	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0358939170837	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.036346912384	5
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	1.0.0.0.1.3.1.0.0	synth with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).	4.26490187645	1922
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	6.76676702499	3458
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0292370319366	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	11.6946921349	4596
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40	1.0.0.0.3.22	synth with cache (only 1: intros n Hn; only 1: case Z.compare_spec; only 1: unfold Z.le, Z.max; only 1: intuition; only 1: intuition; only 1: intuition Z.order).	3.70710206032	4572
Coq.ZArith.Zcompare.Zlt_compare	40	1.1.0.4.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: intro H1; only 1: trivial; only 1: Z.order).	0.312778949738	147
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0344710350037	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0366280078888	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	14	synth with cache (only 1: now destruct a).	0.287333965302	175
Coq.ZArith.Zquot.Zrem_0_l	40	2	synth with cache (only 1: now destruct a).	0.0223190784454	3
Coq.ZArith.Zquot.Zquot_0_l	40	1	synth with cache (only 1: now destruct a).	0.0214011669159	2
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	29.2744309902	8791
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.3.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	1.57281708717	109
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.231529951096	18
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.107486963272	24
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.0975978374481	24
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0556321144104	5
Coq.ZArith.Zquot.Z_quot_pos	40	3.0.0.0.0.1.25.1.0	synth with cache (only 1: destruct b; only 1: now destruct a; only 1: induction a as [a IHa| a IHa| ]; only 1: trivial; only 1: intros; only 1: now apply Z.quot_pos; only 1: now destruct 1 || now destruct 2; only 1: intros; only 1: now destruct Hn || easy).	25.7297010422	21113
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.1.1.3.0	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.mod_divide; only 1: rewrite Z.rem_divide; only 1: intuition; only 1: trivial; only 1: trivial).	0.727282047272	190
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.19.0.0	synth with cache (only 1: intros n bv; only 1: induction bv as [| h n bv]; only 1: constructor; only 1: auto with arith).	0.903302907944	1383
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	3.5	synth with cache (only 1: intros m Hm; only 1: exact 0%Z).	0.0350189208984	18
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	2.4.7	synth with cache (only 1: fix OddT_EvenT_rect 1; only 1: intros b f; only 1: intuition).	0.779750823975	783
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0313999652863	2
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	8.0	synth with cache (only 1: simpl; only 1: trivial).	0.0436308383942	12
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	4.0.1.0	synth with cache (only 1: unfold Bcons; only 1: intros; only 1: simpl; only 1: trivial).	0.140751123428	24
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	0.2.6.0.3.0.29	synth with cache (only 1: intro n; only 1: Z.swap_greater; only 1: destruct n as [| p| p]; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: trivial).	9.2433719635	10081
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0	synth with cache (only 1: auto).	0.0235540866852	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	0.0.0.0.0.5	synth with cache (only 1: intro n; only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: now try Z.order').	0.557506084442	176
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	0.1.16.18	synth with cache (only 1: intros m Hm; only 1: fix le_div2 1; only 1: intro q; only 1: trivial).	6.72699713707	6521
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.9	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.105015039444	34
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40	6.11.8	synth with cache (only 1: revert q; only 1: fix Even_Odd_double 1; only 1: eauto using Pos.Private_Tac.eq_trans, Pos.Private_Tac.eq_sym).	2.95446491241	3503
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.3.1.10.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	1.45453906059	2469
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	synth with cache (only 1: now destruct n).	0.017471075058	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	synth with cache (only 1: now destruct n).	0.0158369541168	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.17.38	synth with cache (only 1: revert n; only 1: induction n; only 1: apply add_0_r; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	2.33748698235	3586
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	1.0.0.14	synth with cache (only 1: destruct m; only 1: now destruct n; only 1: now destruct n; only 1: now destruct n).	0.167663097382	157
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.4	synth with cache (only 1: simpl; only 1: trivial).	0.017776966095	6
Coq.ZArith.BinInt.Z.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0126800537109	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0144031047821	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0169239044189	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.1.0.1.0.6.0.0.0.0.8.3.3.0	synth with cache (only 1: apply opp_inj; only 1: apply opp_inj; only 1: apply opp_inj; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).	38.4635977745	34678
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0198030471802	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.0147669315338	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0177569389343	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	10.3.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	15.9246909618	7051
Coq.ZArith.BinInt.Z.ltb_lt	40	12.2.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destr_bool).	2.19820690155	1466
Coq.ZArith.BinInt.Z.leb_le	40	10.0.2.5	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: now destruct (N.even n)).	6.9462659359	4254
Coq.ZArith.BinInt.Z.gtb_gt	40	6.3.0.3.3	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: rewrite even_spec; only 1: easy).	3.47411704063	1995
Coq.ZArith.BinInt.Z.geb_ge	40	6.2.4	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	0.749413013458	304
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.0	synth with cache (only 1: unfold ltb, lt; only 1: apply iff_refl).	0.0188729763031	2
Coq.ZArith.BinInt.Z.compare_le_iff	40	1	synth with cache (only 1: reflexivity).	0.127009868622	33
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.1.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).	0.199932098389	57
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	6.0	synth with cache (only 1: unfold le, max; only 1: now destruct n).	0.15231013298	23
Coq.ZArith.BinInt.Z.abs_neq	40	0.0.0.1.3.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: trivial).	0.719693899155	224
Coq.ZArith.BinInt.Z.sgn_null	40	0.4.0	synth with cache (only 1: intros; only 1: now rewrite Pos.sub_xI_xI || now rewrite Pos.sub_xO_xO || now rewrite Pos.sub_xO_xI || now rewrite Pos.sub_xI_xO || subst; only 1: reflexivity).	0.0250771045685	7
Coq.ZArith.BinInt.Z.sgn_pos	40	0.0.0.2.6.0	synth with cache (only 1: destruct n; only 1: intros q; only 1: now subst; only 1: trivial; only 1: intros H; only 1: destr_eq H).	0.62310385704	321
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.021625995636	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: now destruct n).	0.0154340267181	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	1.0	synth with cache (only 1: simpl; only 1: now rewrite <- ?add_le_mono_l).	0.0207641124725	3
Coq.ZArith.BinInt.Z.square_spec	40	1.0.2.1.0.1.0.0.9	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	2.1074590683	959
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	synth with cache (only 1: now destruct n).	0.0186860561371	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	1.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: intros; only 1: now split).	0.0344388484955	8
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	4.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0189719200134	6
Coq.ZArith.BinInt.Z.succ_double_spec	40	4	synth with cache (only 1: now destruct n).	1.18594312668	176
Coq.ZArith.BinInt.Z.pred_double_spec	40	5.0	synth with cache (only 1: simpl; only 1: now destruct n).	0.277584075928	19
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	1.96	synth with cache (only 1: fix even_spec 1; only 1: now repeat split).	30.9252150059	56426
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.10592007637	17
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	11.0.0.9.0.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m).	7.05795502663	5888
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.1.1.0.0.1.0.0.0.6	synth with cache (only 1: intros; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: easy; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).	18.0298068523	11021
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.0.0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0439531803131	7
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	synth with cache (only 1: now nzsimpl').	0.051864862442	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	3	synth with cache (only 1: now destruct n).	0.206609964371	42
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.0	synth with cache (only 1: intro Hn; only 1: now destruct n).	0.0249099731445	2
Coq.ZArith.BinInt.Z.testbit_odd_0	40	1.6.2.1.2.31	synth with cache (only 1: destruct a as [| a| a]; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	13.269135952	8041
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	synth with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.017040014267	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.mod_bound_pos_le	40	0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: split; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: order; only 1: apply Private_NZDiv.mod_le; only 1: order; only 1: trivial).	1.42387294769	393
Coq.ZArith.BinInt.Z.gt_lt_iff	40	0.4.0	synth with cache (only 1: unfold gtb, gt; only 1: unfold ltb, lt; only 1: now rewrite N.compare_antisym, CompOpp_iff).	0.255123853683	72
Coq.ZArith.BinInt.Z.gt_lt	40	0.0.13.1.0	synth with cache (only 1: intro H; only 1: apply le_succ_l; only 1: destruct (le_gt_cases n m); only 1: now apply le_succ_l; only 1: now apply le_succ_l).	1.26282215118	698
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.013974905014	1
Coq.ZArith.BinInt.Z.ge_le_iff	40	1.0	synth with cache (only 1: unfold geb, ge; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0286450386047	3
Coq.ZArith.BinInt.Z.ge_le	40	4.2.0	synth with cache (only 1: unfold le, min; only 1: rewrite compare_gt_iff; only 1: intuition).	0.168704032898	52
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0138618946075	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40	1.3.0.8.11.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite Pos.leb_le, <- Pos.compare_le_iff; only 1: rewrite compare_gt_iff; only 1: unfold geb, ge; only 1: unfold ltb, lt; only 1: now destruct compare).	6.7554359436	3496
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40	1.4.0.8.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: unfold geb, ge; only 1: unfold ltb, lt; only 1: now destruct compare).	35.3923377991	11655
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	2	synth with cache (only 1: apply add_cancel_l).	0.220030069351	24
Coq.ZArith.BinInt.Z.mul_reg_l	40	0	synth with cache (only 1: apply mul_cancel_l).	0.0178060531616	1
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.2	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0258250236511	4
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	1.0.0	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).	0.12598490715	4
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.3.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	1.05747485161	360
Coq.ZArith.BinInt.Pos2Z.id	40	0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0464220046997	7
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.0181720256805	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0318839550018	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	9	synth with cache (only 1: now destruct p).	0.0253939628601	10
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	30	synth with cache (only 1: easy).	0.464998960495	906
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.0143451690674	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	5	synth with cache (only 1: trivial).	0.14292216301	6
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0228719711304	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	2	synth with cache (only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.0231301784515	3
Coq.ZArith.BinInt.Pos2Z.inj_add	40	2.1.1	synth with cache (only 1: revert q; only 1: intros q; only 1: reflexivity).	0.340175151825	78
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	6	synth with cache (only 1: now destruct p).	0.0975739955902	35
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.059947013855	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	1.0.3.25.0.9	synth with cache (only 1: destruct q; only 1: now apply Pos.iter_swap_gen; only 1: revert q; only 1: intros H; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).	12.3744881153	9330
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0534770488739	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0251090526581	2
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: reflexivity).	0.0155251026154	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.0171999931335	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	synth with cache (only 1: reflexivity).	0.0160620212555	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	3.1.2.0	synth with cache (only 1: revert q; only 1: simpl; only 1: intros a; only 1: trivial).	0.401201963425	115
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	1.1	synth with cache (only 1: simpl; only 1: trivial).	0.020740032196	4
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.0.0.0	synth with cache (only 1: generalize (Pos.ggcd_gcd p q); only 1: simpl; only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: congruence).	0.0373439788818	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.5.1.1.0.4	synth with cache (only 1: destruct n; only 1: intro Hn; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: now destruct 1 || intros _).	0.742017030716	587
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.0176019668579	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0316779613495	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1).	0.0189759731293	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.037761926651	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	2	synth with cache (only 1: easy).	0.0320329666138	11
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	3	synth with cache (only 1: now destruct p).	0.0414710044861	11
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0174520015717	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0231471061707	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	1	synth with cache (only 1: now f_equal).	0.0248789787292	2
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.0164768695831	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	3.3	synth with cache (only 1: unfold Pos.le; only 1: easy').	0.0361449718475	8
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0	synth with cache (only 1: easy).	0.0144720077515	1
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.0182108879089	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0240769386292	2
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0171530246735	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.018247127533	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.025486946106	3
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.0150430202484	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.0156378746033	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	2.2.3	synth with cache (only 1: revert q; only 1: intro n; only 1: trivial).	0.294810056686	56
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0155029296875	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.017963886261	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.1.0.0.1.2.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: apply negb_sym; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.623540878296	253
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.0196199417114	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: reflexivity).	0.0174000263214	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0	synth with cache (only 1: now destruct x).	0.0260860919952	1
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0236768722534	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	2.0.3.1.0.0.0.4	synth with cache (only 1: intros Hab; only 1: destruct x; only 1: apply Pos2Nat.inj; only 1: simpl; only 1: Z.order'; only 1: simpl; only 1: now destruct p; only 1: easy).	1.76893997192	1166
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	1.0.0.0.0.5.10.3.10.14	synth with cache (only 1: unfold Z.lt; only 1: symmetry; only 1: destruct x; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: easy; only 1: reflexivity; only 1: reflexivity; only 1: easy).	10.7775030136	17172
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.3.0.1.0.1.0.1	synth with cache (only 1: destruct y; only 1: easy || now destruct y; only 1: destruct x; only 1: easy || now destruct y; only 1: simpl; only 1: intros H; only 1: congruence; only 1: easy || now destruct y; only 1: easy || now destruct y).	2.84378504753	1145
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.0.2	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: simpl; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0780010223389	15
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.107132911682	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.101979970932	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0643420219421	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.250398159027	75
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	3.1	synth with cache (only 1: intros x y H; only 1: now f_equal).	0.0236639976501	6
Coq.ZArith.BinInt.ZL0	40	2	synth with cache (only 1: auto).	0.0178480148315	3
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	5	synth with cache (only 1: now Z.nzsimpl').	0.405030965805	41
Coq.ZArith.BinInt.Z_eq_mult	40
Coq.ZArith.Zcomplements.floor_gt0	40	0	synth with cache (only 1: easy).	0.0201969146729	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	7	synth with cache (only 1: now destruct n).	0.0850710868835	8
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	1.0	synth with cache (only 1: unfold Zlength; only 1: split).	0.0240299701691	3
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.48	synth with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	27.8202660084	21289
Coq.ZArith.Zeven.Zodd_even_bool	40	0.0.0.2.1.0.0.0.2.1.0.1.6	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: split; only 1: simpl; only 1: destruct n as [| n| n]; only 1: now split; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct n as [| n| n]; only 1: now split; only 1: trivial; only 1: trivial).	4.19784092903	3219
Coq.ZArith.Zeven.Zeven_odd_bool	40	39	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	2.63080406189	6313
Coq.ZArith.Zeven.Zeven_odd_dec	40	6.8.5.0.0.31.51	synth with cache (only 1: left; only 1: nzinduct n; only 1: simpl; only 1: auto; only 1: fix even_spec 1; only 1: intros; only 1: now Z.nzsimpl).	5.62993717194	11173
Coq.ZArith.Zeven.Zeven_dec	40	1.0.0.7.1.1.0.0.7.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto).	9.67492008209	10538
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.24	synth with cache (only 1: destruct n; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	5.61763000488	3450
Coq.ZArith.Zeven.Zeven_not_Zodd	40	0.5.3.0.0.22.8	synth with cache (only 1: intros H; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	2.12163519859	3609
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0484931468964	5
Coq.ZArith.Zeven.Zeven_Sn	40	26	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.900202035904	727
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40	0.4.0.0.0.0.0.2.4.8	synth with cache (only 1: destruct n as [| p| p]; only 1: easy || now destruct y; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: now destruct p; only 1: intros H; only 1: tauto; only 1: simpl; only 1: now destruct p).	11.5066459179	10218
Coq.ZArith.Zeven.Zeven_div2	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0255479812622	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.1.0.1.0	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: now try Z.order'; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now try Z.order'; only 1: trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: now destruct 1 || intros _; only 1: intros a; only 1: simpl; only 1: easy).	21.6309509277	5521
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	9.20	synth with cache (only 1: simpl; only 1: now destruct n as [| [| | ]| [| | ]]).	3.36872410774	798
Coq.ZArith.Zeven.Zeven_quot2	40	2.1.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.459688186646	15
Coq.ZArith.Zeven.Zodd_quot2	40	0.4.0	synth with cache (only 1: boolify_even_odd; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.266811132431	16
Coq.ZArith.Zeven.Zodd_quot2_neg	40	3.0.0.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite Hn'; only 1: now destruct n).	0.322951078415	34
Coq.ZArith.Zeven.Zquot2_opp	40	0.0.1.5.1.0.0.0.5.2.1.29	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto with relations; only 1: reflexivity; only 1: reflexivity).	15.034403801	14742
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	2.0.1	synth with cache (only 1: intros H; only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.0837290287018	11
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: exists (Z.div2 n); only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	7.59708809853	1849
Coq.ZArith.Zeven.Zeven_2p	40
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	5.1.0.0.1.37	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: now destruct p).	9.87323594093	4517
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.0.0.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0968661308289	14
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0675919055939	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0661940574646	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0196208953857	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.018128156662	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	synth with cache (only 1: apply Z.divide_abs_l).	0.0167238712311	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.0.5.13	synth with cache (only 1: intros x y H; only 1: rewrite Z.mod_divide; only 1: intro H0; only 1: assumption; only 1: trivial).	6.2163131237	4993
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	14.0	synth with cache (only 1: intro H; only 1: Z.order).	2.47408604622	1510
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.1.0.0.0.3.1	synth with cache (only 1: split; only 1: exists 1; only 1: Z.nzsimpl; only 1: Z.order; only 1: exists 0; only 1: now Z.nzsimpl; only 1: trivial).	0.772843122482	278
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.2.0.1.14.11	synth with cache (only 1: intros n; only 1: split; only 1: exists n; only 1: now Z.nzsimpl'; only 1: easy; only 1: trivial).	1.8284881115	1658
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.4	synth with cache (only 1: split; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0307378768921	8
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0633101463318	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0951509475708	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0446608066559	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.1.0.15.5.15	synth with cache (only 1: intros a b; only 1: simple induction 1; only 1: split; only 1: auto with zarith; only 1: intuition; only 1: intuition).	12.948390007	11903
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.1.0.5	synth with cache (only 1: split; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl'; only 1: trivial).	0.373741149902	138
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	45	synth with cache (only 1: now destruct 1).	0.707193136215	1317
Coq.ZArith.Znumtheory.not_prime_1	40
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	1.6.19	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: easy).	10.0336091518	8671
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq_full	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.0	synth with cache (only 1: intros Hb; only 1: now destruct (Z.eq_dec b 0) as [->| ?]; [ destruct a | apply Z.div_mod ]).	0.0264928340912	2
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	5	synth with cache (only 1: Bool.destr_bool).	0.560953140259	129
Coq.ZArith.Zdiv.Zmod_0_r	40	0.1.1.0.0	synth with cache (only 1: intros a; only 1: destruct a; only 1: auto; only 1: auto; only 1: reflexivity).	0.0356659889221	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	3.0	synth with cache (only 1: intros; only 1: auto).	0.0199949741364	5
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0.0	synth with cache (only 1: intros a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.036789894104	8
Coq.ZArith.Zdiv.Zmod_1_r	40	0.8.2	synth with cache (only 1: intro n; only 1: Z.nzsimpl; only 1: Z.order_nz).	0.540798902512	413
Coq.ZArith.Zdiv.Zdiv_1_r	40	5.2	synth with cache (only 1: intro n; only 1: now Z.nzsimpl').	0.108768939972	43
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.0.5.6	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: Z.order; only 1: trivial).	1.77799010277	1105
Coq.ZArith.Zdiv.Z_div_nonneg_nonneg	40
Coq.ZArith.Zdiv.Z_mod_nonneg_nonneg	40
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0322089195251	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.4	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0943441390991	41
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.0795729160309	13
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	0.0.26.2	synth with cache (only 1: intros n m p; only 1: unfold Z.sub, Z.succ, Z.pred; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	9.89099097252	10382
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0335011482239	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0941481590271	19
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	6	synth with cache (only 1: split).	0.0300710201263	16
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.6	synth with cache (only 1: intros n m Hm; only 1: now rewrite <- ?Z.add_le_mono_l).	0.0509879589081	23
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	14.2.4.22	synth with cache (only 1: intros n m; only 1: unfold eqm; only 1: intros; only 1: Z.order).	28.4278659821	38448
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	5.2.26	synth with cache (only 1: intro m; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	33.030684948	21363
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.4.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.163138151169	33
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	2.0.3.0	synth with cache (only 1: intros a b c **; only 1: zero_or_not c; only 1: now Z.nzsimpl; only 1: now apply Z.mod_add).	0.513084888458	72
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.3	synth with cache (only 1: intros a b ?; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: easy).	0.0710470676422	32
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.2.5.0.1	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: intros EQ; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).	1.55363512039	700
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.6.3.6	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros H; only 1: now zero_or_not b; [ intros; subst | apply Z.mod_opp_l_z ]).	2.69348597527	2621
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.5	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0513849258423	22
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	1	synth with cache (only 1: congruence).	0.0282170772552	11
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	10.3.0.26.7.2.0	synth with cache (only 1: intros a n Hn; only 1: Z.destruct_max n; only 1: intros Hab; only 1: Z.swap_greater; only 1: auto; only 1: intros EQ; only 1: auto with relations).	24.4733979702	47738
Coq.ZArith.Zabs.Zabs_intro	40	18.3	synth with cache (only 1: intros n m p; only 1: now destruct m).	1.85001897812	2684
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0179669857025	2
Coq.ZArith.Int.Z_as_Int.i2z_0	40	2	synth with cache (only 1: trivial).	0.018326997757	3
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.0179069042206	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	synth with cache (only 1: reflexivity).	0.0187358856201	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0154850482941	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	10	synth with cache (only 1: reflexivity).	0.775331020355	74
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	5	synth with cache (only 1: trivial).	0.212929964066	34
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	9	synth with cache (only 1: trivial).	0.0354008674622	10
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.0159170627594	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.034373998642	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: reflexivity).	0.0195841789246	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0157659053802	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0158460140228	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: reflexivity).	0.0159909725189	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	synth with cache (only 1: trivial).	0.0159628391266	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	83	synth with cache (only 1: apply Pos2Nat.inj_iter).	7.1287150383	7519
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.2.0.0.0.2	synth with cache (only 1: destruct n as [| n| n]; only 1: now destruct 1 || intros _; only 1: trivial; only 1: now destruct 1 || intros _; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1 || intros _).	0.0917160511017	25
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	1.0.7	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy).	0.0461127758026	24
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	2	synth with cache (only 1: trivial).	0.0175151824951	3
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	0.1.0.2.0.0.0.1.2	synth with cache (only 1: destruct n; only 1: now destruct 1 || intros _; only 1: reflexivity; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial; only 1: trivial; only 1: now destruct 1 || intros _).	4.01620006561	1723
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	6.0.0.0.26.30.15	synth with cache (only 1: simpl; only 1: N.nzsimpl'; only 1: revert p; only 1: unfold Z.pow_pos; only 1: intros; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial; only 1: now destruct Hn || easy).	27.7996890545	25276
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	0.0.5.122	synth with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).	36.50507617	42876
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0.1	synth with cache (only 1: apply Zeven_div2; only 1: split).	0.0774309635162	18
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	2.0.2.0.0.5.7.0.0.0	synth with cache (only 1: Nat.induct n; only 1: simpl; only 1: trivial; only 1: intros [| n]; only 1: destruct 1; only 1: simpl; only 1: auto; only 1: intros H; only 1: simpl; only 1: now f_equal).	15.5147380829	8045
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0181400775909	1
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	0.1.6.0.1.0.34.0	synth with cache (only 1: Z.swap_greater; only 1: destruct x; only 1: now destruct 1 || intros _; only 1: split; only 1: now destruct 1 || intros _; only 1: easy; only 1: simpl; only 1: now destruct 1 || trivial).	8.34299707413	11838
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40
Coq.ZArith.auxiliary.Zle_left	40	1	synth with cache (only 1: apply Z.le_0_sub).	0.0202298164368	2
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0198440551758	1
Coq.ZArith.auxiliary.Zlt_left_rev	40
Coq.ZArith.auxiliary.Zlt_left_lt	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0206780433655	2
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0979700088501	34
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.228541135788	65
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0427339076996	2
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0392160415649	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.3.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).	0.0368499755859	6
Coq.ZArith.Zmax.Zpos_max_1	40	1.0.0.34.10	synth with cache (only 1: bitwise as m ?; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial).	4.31865596771	4548
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	2.0.3.8	synth with cache (only 1: destruct p; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: now Z.nzsimpl').	0.83225607872	226
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	3.2.5.35	synth with cache (only 1: destruct a; only 1: auto; only 1: trivial; only 1: reflexivity).	6.89674687386	7701
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	1.0.0.1.2.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: intro r; only 1: auto; only 1: left; only 1: auto; only 1: tauto).	1.02168512344	356
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	10	synth with cache (only 1: intuition Z.order).	0.465358018875	144
Coq.ZArith.Zorder.Zlt_not_le	40	1	synth with cache (only 1: intuition Z.order).	0.0183470249176	2
Coq.ZArith.Zorder.Zle_not_gt	40	2.5	synth with cache (only 1: unfold Z.le, Z.max; only 1: easy').	0.134114027023	41
Coq.ZArith.Zorder.Zgt_not_le	40	8	synth with cache (only 1: auto).	0.0309748649597	16
Coq.ZArith.Zorder.Znot_ge_lt	40	0.10	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.109719991684	36
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0297000408173	4
Coq.ZArith.Zorder.Znot_gt_le	40	0	synth with cache (only 1: trivial).	0.016538143158	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0641369819641	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	2.1.1	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.175628185272	29
Coq.ZArith.Zorder.Zgt_irrefl	40	4	synth with cache (only 1: now Z.nzsimpl').	0.049830198288	21
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0494999885559	3
Coq.ZArith.Zorder.Zle_gt_trans	40	8.0	synth with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.141032218933	25
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0388941764832	2
Coq.ZArith.Zorder.Zge_trans	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.047621011734	3
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0360770225525	2
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.6	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.080216884613	34
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.0165932178497	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0147428512573	1
Coq.ZArith.Zorder.Zgt_succ	40	1.3	synth with cache (only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.0201561450958	6
Coq.ZArith.Zorder.Znot_le_succ	40	1.18	synth with cache (only 1: apply Z.lt_nge; only 1: apply Z.lt_succ_diag_r).	0.322851896286	482
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.014946937561	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0157010555267	1
Coq.ZArith.Zorder.Zgt_succ_le	40	9.1.22.0	synth with cache (only 1: Z.swap_greater; only 1: revert m; only 1: fix even_specT 1; only 1: intuition).	17.4152519703	13275
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0153150558472	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0302639007568	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0179629325867	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	2.1.3.1.1.1.4	synth with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: apply Z.le_succ_l; only 1: easy; only 1: now destruct 1; only 1: now destruct 1; only 1: intros H; only 1: easy).	3.38648796082	2340
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0845880508423	91
Coq.ZArith.Zorder.Zle_neg_pos	40	1.1	synth with cache (only 1: intros a; only 1: easy).	0.0301887989044	4
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0.2.3.0	synth with cache (only 1: intros n; only 1: symmetry; only 1: rewrite Z.compare_sub; only 1: simpl; only 1: trivial).	0.0344378948212	10
Coq.ZArith.Zorder.Zle_0_pos	40	0	synth with cache (only 1: easy).	0.0229210853577	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0.1	synth with cache (only 1: intros a; only 1: reflexivity).	0.0211591720581	3
Coq.ZArith.Zorder.Zle_0_nat	40	2.3.8.2.1	synth with cache (only 1: intros n; only 1: Nat.induct ltac:(n); only 1: easy; only 1: intros Hn Hm; only 1: easy).	1.50238800049	1145
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	1	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0183839797974	2
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0172429084778	1
Coq.ZArith.Zorder.Zplus_le_reg_l	40	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.0173480510712	1
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.018975019455	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	3	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0206849575043	4
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	3	synth with cache (only 1: apply Z.add_lt_mono_r).	0.020840883255	4
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0377628803253	3
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0348238945007	2
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0780420303345	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0332970619202	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0183019638062	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.016273021698	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0456049442291	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	7.0.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.493880987167	103
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	2.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0547080039978	5
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	4.0	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0335249900818	13
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0307059288025	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0169739723206	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0320210456848	3
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0176630020142	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0481269359589	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0485589504242	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	14	synth with cache (only 1: now destruct n, m).	2.78315496445	653
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	1.0.0.11.0	synth with cache (only 1: Z.swap_greater; only 1: destruct n as [| p| p]; only 1: easy || now destruct y; only 1: apply Z.mul_le_mono_pos_r; only 1: easy).	0.567633152008	356
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	2.1.4.1.0.3.3.0.1.1.19.7	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: easy; only 1: now Z.nzsimpl; only 1: discriminate; only 1: trivial; only 1: split; only 1: simpl; only 1: trivial; only 1: trivial; only 1: now Z.nzsimpl; only 1: trivial).	34.4217209816	28999
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0287020206451	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0485827922821	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0152401924133	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40	0.0.0.0.3.1.6	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: unfold Z.geb, Z.leb; only 1: unfold Z.le, Z.ge; only 1: destruct (n ?= m); only 1: discriminate; only 1: trivial; only 1: discriminate).	1.52946901321	620
Coq.ZArith.Zbool.Zgt_cases	40	2.6.2.0.0.0.5.7	synth with cache (only 1: unfold Z.le, Z.max; only 1: intuition; only 1: unfold Z.gtb, Z.gt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: trivial).	11.7634699345	6906
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	3.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: apply Z.leb_le).	0.0254118442535	5
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	24	synth with cache (only 1: now Z.nzsimpl).	0.761591911316	524
Coq.ZArith.Zbool.Zone_min_pos	40	3.1.7	synth with cache (only 1: intros; only 1: unfold Z.geb, Z.leb; only 1: now destruct n as [| [| | ]| [| | ]]).	0.562988996506	225
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.0.9.1	synth with cache (only 1: unfold Z.leb, Z.le; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.640073060989	288
Coq.ZArith.Zbool.Zge_is_le_bool	40	8.2.15	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	20.1209750175	13043
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	1.1.2.2.9	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro q; only 1: rewrite even_spec; only 1: now split).	1.72318792343	1144
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	0.0.0.20.0	synth with cache (only 1: unfold Z.gtb, Z.gt; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	12.4373159409	8800
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0319390296936	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	0.0.0.0.1.0	synth with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: congruence; only 1: congruence; only 1: congruence).	0.061537027359	7
Coq.ZArith.Zbool.Zeq_bool_neq	40	0.0.3.0.6.0.1	synth with cache (only 1: unfold Zeq_bool; only 1: intro H1; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: discriminate; only 1: discriminate; only 1: discriminate).	1.48302102089	955
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0.1	synth with cache (only 1: intro r; only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0402541160583	6
Coq.ZArith.ZArith_dec.Zcompare_rect	40	3.0.3.0.10.3.1.2	synth with cache (only 1: intro r; only 1: generalize (Z.compare_eq n m); only 1: generalize (Z.compare_eq n m); only 1: intro H; only 1: destruct (n ?= m); only 1: auto; only 1: intuition; only 1: intuition).	2.94379401207	2410
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0391640663147	5
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	0.0.0.0.17	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.659535884857	547
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	4.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.47213602066	202
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	1.1.0.0.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: constructor; only 1: trivial).	0.0439400672913	13
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.7	synth with cache (only 1: fix gcd_divide 1; only 1: intros a ?; only 1: trivial).	1.37438988686	151
Coq.ZArith.ZArith_dec.Z_dec'	40	1.0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros x y; only 1: case (Z_lt_ge_dec x y); only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: generalize (Z.ge_le _ _ H); only 1: intro H0; only 1: case (Z_le_lt_eq_dec y x H0); only 1: intro H1; only 1: left; only 1: right; only 1: assumption; only 1: intro; only 1: right; only 1: symmetry; only 1: assumption).	18.8904411793	11172
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.0	synth with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0433201789856	4
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0152299404144	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.3.1.0	synth with cache (only 1: destruct b as [| p| p]; only 1: Z.order; only 1: easy || now destruct y; only 1: easy).	0.0563311576843	8
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl').	0.0664100646973	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.3.0	synth with cache (only 1: change 2 with (1 + 1); only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0268201828003	8
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	4.4	synth with cache (only 1: Z.nzsimpl'; only 1: now Z.nzsimpl).	1.37050914764	75
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	10	synth with cache (only 1: now Z.nzsimpl).	0.088054895401	24
Coq.omega.OmegaLemmas.Zred_factor6	40	1.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.199901103973	6
Coq.omega.OmegaLemmas.new_var	40	0.10.65	synth with cache (only 1: intros n; only 1: exists n; only 1: reflexivity).	11.7548470497	31515
Coq.omega.OmegaLemmas.OMEGA1	40	1.1.12	synth with cache (only 1: intro; only 1: intros; only 1: Z.order).	0.162675857544	115
Coq.omega.OmegaLemmas.OMEGA2	40	18.9	synth with cache (only 1: intros; only 1: Z.order_pos).	4.77369904518	1136
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.1	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0955488681793	4
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0507459640503	4
Coq.omega.OmegaLemmas.OMEGA16	40
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.19811296463	2
Coq.omega.OmegaLemmas.OMEGA18	40	20.2.27.36	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: auto).	9.62234783173	15062
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.081661939621	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.2.0.2	synth with cache (only 1: intros ->; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0450432300568	18
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).	0.0635211467743	8
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.4.4.0	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: destruct r using Acc_inv_dep; only 1: auto).	0.2377409935	103
Coq.Program.Wf.Well_founded.Fix_F_inv	40	0.10.8.0.4	synth with cache (only 1: intros; only 1: destruct r using Acc_inv_dep; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	10.475153923	9804
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.046924829483	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0228769779205	2
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.9.6.1	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	1.78259110451	1216
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	3.0.0	synth with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).	0.0398190021515	6
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	0.1.0.3.6	synth with cache (only 1: intros n P IH0 IHS; only 1: intro H; only 1: destruct H; only 1: destruct e; only 1: auto).	0.364811897278	312
Coq.Program.Equality.JMeq_eq_refl	40	2	synth with cache (only 1: apply UIP_refl).	0.0109870433807	3
Coq.Program.Equality.UIP_refl_refl	40	4	synth with cache (only 1: apply UIP).	0.0748519897461	61
Coq.Program.Equality.inj_pairT2_refl	40	19	synth with cache (only 1: apply UIP_refl).	0.0731329917908	165
Coq.Program.Equality.solution_left	40	0.0.7	synth with cache (only 1: intros y H; only 1: destruct 1; only 1: exact y).	0.0194652080536	10
Coq.Program.Equality.solution_right	40	1.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0172748565674	4
Coq.Program.Equality.deletion	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.0125150680542	3
Coq.Program.Equality.simplification_heq	40	5.10.13	synth with cache (only 1: intros; only 1: subst; only 1: auto).	0.324085950851	651
Coq.Program.Equality.simplification_existT2	40	0.0.0.6.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.15863609314	85
Coq.Program.Equality.simplification_existT1	40	0.1.0.121.16	synth with cache (only 1: intro H; only 1: inversion 1; only 1: apply H; only 1: assumption; only 1: assumption).	39.1836409569	258141
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0184359550476	3
Coq.Program.Combinators.compose_id_left	40	0.0	synth with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.0165839195251	2
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0185618400574	2
Coq.Program.Combinators.compose_assoc	40	1.0.1	synth with cache (only 1: intros A B f g H x; only 1: intro a; only 1: reflexivity).	0.0193650722504	5
Coq.Program.Combinators.flip_flip	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0137178897858	2
Coq.Program.Combinators.curry_uncurry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0160541534424	2
Coq.Program.Combinators.uncurry_curry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0732769966125	6
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	2.0.25.1	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: intros; only 1: auto).	12.685614109	11406
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.2.1.1.0.0.0.0.1.2.0.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: intros; only 1: destruct H; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto; only 1: apply IHstack).	7.79166102409	5793
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	7.2.7.6	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: auto; only 1: auto).	1.10150384903	1311
Coq.Sorting.Permutation.Permutation.Permutation_refl'	40	2.6.2.1.0.3.0	synth with cache (only 1: intros l2; only 1: intro l; only 1: intros H; only 1: subst; only 1: induction l as [| ? l IHl]; only 1: firstorder  (subst; auto); only 1: now repeat constructor).	2.69165205956	2175
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	10.6.3.3	synth with cache (only 1: intro l1; only 1: intro l; only 1: intro l'; only 1: eauto).	29.5320191383	22960
Coq.Sorting.Permutation.Permutation_morph_transp	40
Coq.Sorting.Permutation.Permutation_cons	40	6	synth with cache (only 1: simpl_relation).	0.500408887863	54
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	2.0.0.4.0.0.1	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto); only 1: cbn; only 1: intuition; only 1: auto).	4.45394301414	2133
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	0.0.0.2.0.4	synth with cache (only 1: intro l1; only 1: intros l l' Hperm; only 1: induction l1; only 1: trivial; only 1: simpl; only 1: auto).	0.410493135452	160
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_rot	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_swap_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_middle	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40	36.0.0.12	synth with cache (only 1: induction 1 as [| x l X N IH]; only 1: constructor; only 1: trivial; only 1: eauto using Permutation_in).	33.2016868591	39473
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	4.0	synth with cache (only 1: intros ? ?; only 1: auto).	0.0221040248871	6
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_elt	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	0.0.0.0.0.0.0.2.13	synth with cache (only 1: intros f Hf; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	1.08616614342	719
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Exists	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_m	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_elt_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_repeat	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_count_occ	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_image	40
Coq.Sorting.Permutation.Permutation_map.Permutation_elt_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_flat_map	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.Permutation.Permutation_list_sum	40
Coq.Sorting.Permutation.Permutation_list_max	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_sym	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_equiv	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_cons	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_Permutation_transp	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_ind_transp	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	1.9	synth with cache (only 1: intros x y; only 1: auto with datatypes).	0.196076154709	94
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	3.2	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0695269107819	7
Coq.Sorting.PermutSetoid.Permut.permut_trans	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	2.0.7.0	synth with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: auto with datatypes).	1.10454320908	451
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	0.0.17.1.0.0	synth with cache (only 1: intros; only 1: replace (a :: l) with ([ ] ++ a :: l); only 1: apply permut_add_inside_eq; only 1: reflexivity; only 1: trivial; only 1: trivial).	24.622068882	10861
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	8.8.0.0.2	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).	12.4119939804	5372
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.0.0.0.0.1.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	0.120367050171	9
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	1.1.0.0.0.1.0.1	synth with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: revert H; only 1: lia).	2.66170406342	534
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	27.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	4.34382104874	6993
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	3.2.14.2.1	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intro; only 1: rewrite multiplicity_InA; only 1: trivial).	37.3969948292	8424
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.0.5.0	synth with cache (only 1: intro l'; only 1: intros x l; only 1: inversion 1; only 1: auto).	0.0413661003113	13
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.2.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0343551635742	5
Coq.Sorting.Sorted.defs.Sorted_rect	40	4.26.0	synth with cache (only 1: intros Q H H' l; only 1: fix OddT_EvenT_rect 1; only 1: auto).	24.3831648827	31571
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.2.0.0	synth with cache (only 1: intros l x; only 1: intros Hr; only 1: inversion_clear Hr; only 1: eauto).	0.0356419086456	6
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0.0	synth with cache (only 1: intros P ? ? l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0373818874359	4
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	6	synth with cache (only 1: constructor).	0.0251548290253	7
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.0318100452423	2
Coq.Sorting.Heap.defs.invert_heap	40	0.2.50	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto with datatypes).	3.10895609856	3504
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.2.0.0.0.0.1.0.0.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	1.51098513603	512
Coq.Sorting.Heap.defs.low_trans	40
Coq.Sorting.Heap.defs.Equivalence_instance_0	40
Coq.Sorting.Heap.defs.Proper_instance_0	40	2.2.1.1.1.8.4	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: simpl; only 1: auto with datatypes).	1.92134404182	1213
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	2.7	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.154415845871	76
Coq.Sorting.Heap.defs.list_to_heap	40	2.1.2	synth with cache (only 1: fix merge 1; only 1: intros; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.0549018383026	16
Coq.Sorting.Heap.defs.heap_to_list	40	3.13	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.702439069748	562
Coq.Sorting.Heap.defs.treesort	40	9.2	synth with cache (only 1: fix merge 1; only 1: auto with *).	0.232837915421	129
Coq.Sorting.CPermutation.CPermutation.CPermutation_Permutation	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_split	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl	40	5.10.12	synth with cache (only 1: intro l'; only 1: rewrite <- app_nil_r  at 1; only 1: easy).	2.50557589531	3377
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl'	40	3.0.6.26	synth with cache (only 1: intro l; only 1: intro l'; only 1: induction 1; only 1: now rewrite <- (app_nil_l l)  at 1; rewrite <- (app_nil_r l)  at 2).	12.1082630157	19479
Coq.Sorting.CPermutation.CPermutation.CPermutation_sym	40	3.0.0	synth with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: split).	0.048898935318	18
Coq.Sorting.CPermutation.CPermutation.CPermutation_trans	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app	40	1.3	synth with cache (only 1: intros; only 1: eauto using Add_head, Add_app).	0.0931220054626	33
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_comm	40	0.0.0.0.0.1.2	synth with cache (only 1: intros l1 l2; only 1: destruct l2 as [| b]; only 1: simpl; only 1: rewrite app_nil_r; only 1: trivial; only 1: replace (l1 ++ b :: l2) with ((l1 ++ [b]) ++ l2) by now rewrite <- app_assoc, <- app_comm_cons; only 1: now rewrite <- app_assoc).	0.0521740913391	10
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_rot	40	0.0	synth with cache (only 1: intros l1 l2 l3; only 1: now rewrite (app_assoc l2)).	0.0222728252411	2
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_cons_append	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_morph_cons	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_swap	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutation.CPermutation_rev	40
Coq.Sorting.CPermutation.CPermutation_in	40
Coq.Sorting.CPermutation.CPermutation_in'	40
Coq.Sorting.CPermutation.CPermutation_map	40
Coq.Sorting.CPermutation.CPermutation_map_inv	40
Coq.Sorting.CPermutation.CPermutation_image	40
Coq.Sorting.CPermutation.CPermutation_Forall	40
Coq.Sorting.CPermutation.CPermutation_Exists	40
Coq.Sorting.CPermutation.CPermutation_Forall2	40
Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40	2	synth with cache (only 1: now intros ->).	0.0782179832458	3
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0416450500488	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0342929363251	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0761020183563	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0604751110077	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	0.0.0.1.10.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: case Pos.compare_spec; only 1: intros n; only 1: now split; only 1: easy'; only 1: easy').	0.954715013504	503
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	0.1.1.13.3	synth with cache (only 1: destruct p; only 1: destr_bool; only 1: easy'; only 1: intuition; only 1: easy').	1.18584489822	843
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.0614120960236	9
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.0.11	synth with cache (only 1: intros p; only 1: inversion 1; only 1: trivial).	0.29420208931	236
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40	0.42.2	synth with cache (only 1: intros v p; only 1: fix odd_spec 1; only 1: solve [ auto ]).	29.5890901089	22326
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40	1.24.4	synth with cache (only 1: intro j; only 1: fix OddT_EvenT_rect 1; only 1: firstorder  (subst; auto)).	20.7455689907	15443
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40	3.0.36	synth with cache (only 1: fix odd_spec 1; only 1: intros EQ; only 1: auto).	1.22627496719	3347
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0278360843658	2
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.Init.Wf.Well_founded.Acc_inv	40	1.6.1	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).	0.0772681236267	55
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0209541320801	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0210738182068	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0170159339905	6
Coq.Init.Peano.pred_Sn	40	3.0.1.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: trivial; only 1: simpl; only 1: split).	0.0257699489594	11
Coq.Init.Peano.not_eq_S	40	2.3.0	synth with cache (only 1: red; only 1: intro A; only 1: auto).	0.0500690937042	39
Coq.Init.Peano.O_S	40	6.2	synth with cache (only 1: intro n; only 1: discriminate).	0.0265049934387	21
Coq.Init.Peano.n_Sn	40	5.0.0.5.1	synth with cache (only 1: intro n; only 1: unfold not; only 1: induction n; only 1: discriminate; only 1: auto).	0.479629039764	624
Coq.Init.Peano.plus_n_O	40	0.2.0.0.1	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0422451496124	15
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0232808589935	6
Coq.Init.Peano.plus_n_Sm	40	1.0.1.7	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.298928022385	163
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0209250450134	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0207412242889	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.2.2.1	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.0160598754883	9
Coq.Init.Peano.le_n_S	40	1.1.0.0.1	synth with cache (only 1: induction 1 as [| m _]; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.0358490943909	28
Coq.Init.Peano.nat_case	40	1.2.5.3	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.163597822189	262
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.0.0.0.1.0.0.0.2.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	9.63357496262	5556
Coq.Init.Peano.min_r	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	12.6790089607	8368
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	0.1.1.1.1.0.1	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	1.1821231842	758
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	1.112.3	synth with cache (only 1: destruct 1; only 1: subst; only 1: repeat split).	10.041435957	99546
Coq.Init.Datatypes.eq_true_ind_r	40	0.32	synth with cache (only 1: destruct 2; only 1: assumption).	0.42479300499	1771
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0117280483246	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0120861530304	3
Coq.Init.Datatypes.surjective_pairing	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0119960308075	2
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0.0	synth with cache (only 1: destruct H; only 1: simpl; only 1: reflexivity).	0.0185518264771	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.1.1.1.0.1.1.1.0.5.2	synth with cache (only 1: intro H; only 1: destruct c, c'; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H).	20.0420620441	36996
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00248789787292	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.0.0.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0110490322113	41
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00484418869019	12
Coq.Init.Logic.and_iff_compat_l	40	2.0.0.0.2.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.104886054993	766
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0722830295563	285
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.564116954803	2239
Coq.Init.Logic.imp_iff_compat_l	40	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.154281139374	866
Coq.Init.Logic.imp_iff_compat_r	40	2.1.2.0.2.1.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.361559152603	1298
Coq.Init.Logic.not_iff_compat	40	1.1.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00838088989258	6
Coq.Init.Logic.neg_false	40	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.30281496048	1212
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.107043027878	92
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.406656980515	650
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.00785779953003	3
Coq.Init.Logic.iff_to_and	40	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).	0.163072109222	198
Coq.Init.Logic.universal_quantification.inst	40	5.3	synth with cache (only 1: intro H1; only 1: auto).	0.00969481468201	11
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.00770306587219	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).	0.132741928101	326
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.3	synth with cache (only 1: destruct 1; only 1: split).	0.00855207443237	6
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0111088752747	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00927495956421	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00970101356506	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	29.1	synth with cache (only 1: destruct 2; only 1: auto).	0.43217587471	1516
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.1.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.0113818645477	8
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0104830265045	3
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0107009410858	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0107691287994	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.1.0	synth with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0171210765839	4
Coq.Init.Logic.rew_opp_r	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0117239952087	2
Coq.Init.Logic.rew_opp_l	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0113019943237	2
Coq.Init.Logic.f_equal2	40	1.2.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 2; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.0178060531616	8
Coq.Init.Logic.f_equal3	40	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0158891677856	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0193939208984	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0253591537476	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0117528438568	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0123841762543	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.012589931488	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.012815952301	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0132281780243	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0156939029694	3
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0145199298859	2
Coq.Init.Logic.map_subst_map	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0134000778198	2
Coq.Init.Logic.rew_swap	40	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).	0.0157270431519	2
Coq.Init.Logic.rew_compose	40	2.0	synth with cache (only 1: destruct H2; only 1: reflexivity).	0.0155639648438	4
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	synth with cache (only 1: reflexivity).	0.0097119808197	1
Coq.Init.Logic.eq_trans_map_distr	40	1.5.5.1	synth with cache (only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.312661170959	317
Coq.Init.Logic.eq_sym_map_distr	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0154972076416	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.0	synth with cache (only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.0167858600616	4
Coq.Init.Logic.eq_trans_rew_distr	40	0.2	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0176739692688	4
Coq.Init.Logic.rew_const	40	0.2	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0139648914337	4
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.4.8.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: split; only 1: trivial).	0.332031011581	716
Coq.Init.Logic.inhabited_covariant	40	0.0.4	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).	0.01979804039	22
Coq.Init.Logic.eq_stepl	40	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0233318805695	16
Coq.Init.Logic.iff_stepl	40	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0188300609589	4
Coq.Init.Logic.ex_eta	40
Coq.Init.Logic.ex2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0161471366882	3
Coq.Init.Logic.ex.eq_ex_intro_uncurried	40
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.eq_ex_eta	40	0.0.5.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).	0.0330429077148	13
Coq.Init.Logic.ex.eq_ex_uncurried_iff	40
Coq.Init.Logic.ex.rew_ex	40	0.0.11.0	synth with cache (only 1: destruct H; only 1: apply eq_ex_uncurried; only 1: exists eq_refl; only 1: reflexivity).	0.196964979172	188
Coq.Init.Logic.ex2.eq_ex_intro2_uncurried	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.0.2.1.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0890970230103	29
Coq.Init.Logic.ex2.eq_ex2_uncurried_iff	40	3.0.1.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_ex_intro2_uncurried).	1.52953696251	1366
Coq.Init.Logic.ex2.eq_ex2_eta	40	0.1	synth with cache (only 1: destruct p, u; only 1: reflexivity).	0.0265998840332	12
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0236299037933	2
Coq.Init.Specif.sigT_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0129909515381	2
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.013167142868	2
Coq.Init.Specif.sigT2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0148239135742	2
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0147578716278	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.11.5	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.249773025513	592
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.84.48	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	3.95315217972	43964
Coq.Init.Specif.ProdSigT.sigT_prod_sigT	40	1.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0124499797821	3
Coq.Init.Specif.ProdSigT.prod_sigT_prod	40
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0246820449829	5
Coq.Init.Specif.sigT.eq_sigT_uncurried	40	0.1.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0386190414429	7
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0219159126282	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.5.2	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0373070240021	12
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.28.0	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).	1.10695910454	1707
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.12.14.0.23	synth with cache (only 1: intro; only 1: destruct p', q'; only 1: destruct H; only 1: destruct r, q, p; only 1: reflexivity).	13.9401788712	26167
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	10.6.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_existT_uncurried).	3.79323387146	4373
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0226049423218	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0328650474548	5
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.1.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0482778549194	7
Coq.Init.Specif.sig.eq_exist_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0283589363098	4
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	11.7.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	5.71268296242	6387
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.024670124054	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0310859680176	4
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0532028675079	6
Coq.Init.Specif.sigT2.eq_existT2_curried	40	0.0.0	synth with cache (only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0267670154572	3
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	1.2.7.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	3.73041200638	2459
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0298931598663	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.1.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0381860733032	5
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0532538890839	6
Coq.Init.Specif.sig2.eq_exist2_curried	40	0.0.0	synth with cache (only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0311810970306	3
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	3.4.8.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	8.61278700829	6331
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0711798667908	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0183749198914	3
Coq.funind.Recdef.le_lt_SS	40	27	synth with cache (only 1: intuition).	1.14769101143	1128
Coq.funind.Recdef.Splus_lt	40	62.23	synth with cache (only 1: apply le_S_n; only 1: intuition).	5.77395009995	9483
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.0.0.16.2.0.17.0.1	synth with cache (only 1: split; only 1: red; only 1: intro H1; only 1: apply Z.lt_irrefl; only 1: intro n; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	6.97190499306	9097
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0440900325775	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40	3.1.0.4.16	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro m; only 1: rewrite even_spec; only 1: easy).	17.0654678345	13835
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	0.5.13.2.0	synth with cache (only 1: split; only 1: now rewrite !Qred_correct; only 1: revert q; only 1: intros m Hm; only 1: now rewrite !Qred_correct).	3.74295091629	3404
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_positive_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_decomp_positive	40
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_0_r	40	0.0.0	synth with cache (only 1: intros n; only 1: simpl; only 1: reflexivity).	0.0322008132935	3
Coq.QArith.Qpower.Qpower_1_r	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0242919921875	2
Coq.QArith.Qpower.Qpower_not_0	40
Coq.QArith.Qpower.Qpower_0_le	40
Coq.QArith.Qpower.Qpower_0_lt	40
Coq.QArith.Qpower.Qpower_1_lt_pos	40
Coq.QArith.Qpower.Qpower_1_lt	40
Coq.QArith.Qpower.Qpower_1_le_pos	40
Coq.QArith.Qpower.Qpower_1_le	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus	40
Coq.QArith.Qpower.Qpower_minus_pos	40
Coq.QArith.Qpower.Qpower_minus_neg	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Qpower_decomp_pos	40
Coq.QArith.Qpower.Qpower_decomp_neg_pos	40
Coq.QArith.Qpower.Qpower_decomp_neg_neg	40
Coq.QArith.Qpower.Qpower_lt_compat_l	40
Coq.QArith.Qpower.Qpower_le_compat_l	40
Coq.QArith.Qpower.Qpower_lt_compat_l_inv	40
Coq.QArith.Qpower.Qpower_le_compat_l_inv	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qarchimedean_power2_pos	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.0.6	synth with cache (only 1: split; only 1: intros; only 1: now destruct n).	0.0452990531921	11
Coq.QArith.Qfield.Examples.ex1	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.100925922394	5
Coq.QArith.Qfield.Examples.ex2	40	0.1.0.2.7.9	synth with cache (only 1: intro z_ne_0; only 1: intro a; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	6.09729909897	2923
Coq.QArith.Qfield.Examples.ex3	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0425930023193	2
Coq.QArith.Qfield.Examples.ex4	40	1	synth with cache (only 1: split).	0.0175909996033	2
Coq.QArith.Qfield.Examples.ex5	40	1.0	synth with cache (only 1: unfold Qeq; only 1: now Z.nzsimpl').	0.120961904526	3
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0255789756775	1
Coq.QArith.Qfield.Examples.ex7	40	1	synth with cache (only 1: exact Qplus_opp_r).	0.051647901535	13
Coq.QArith.Qfield.Examples.ex8	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0341949462891	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0325150489807	2
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.1	synth with cache (only 1: intros (x1, x2); only 1: intro n; only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: ring).	0.0665810108185	7
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0422060489655	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	4.1	synth with cache (only 1: intro n; only 1: easy').	0.146026134491	30
Coq.QArith.Qcanon.Qcgt_alt	40	1.0.0.0.0.0.2	synth with cache (only 1: simpl; only 1: unfold Qccompare; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.133869886398	32
Coq.QArith.Qcanon.Qcle_alt	40	1.0	synth with cache (only 1: intros; only 1: reflexivity).	0.030562877655	3
Coq.QArith.Qcanon.Qcge_alt	40	1.2.7.0	synth with cache (only 1: intros n m; only 1: simpl; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.722033977509	276
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	3	synth with cache (only 1: now Z.nzsimpl).	0.0532829761505	4
Coq.QArith.Qcanon.Qcplus_assoc	40	5.0.25.21	synth with cache (only 1: intros a b; only 1: fix le_div2 1; only 1: intros m; only 1: trivial).	39.9845230579	45530
Coq.QArith.Qcanon.Qcplus_0_l	40	1.0.4.7.9.1	synth with cache (only 1: intros; only 1: destruct x; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	4.1258687973	3489
Coq.QArith.Qcanon.Qcplus_0_r	40	0.0.1.23.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: auto with zarith).	35.2171649933	24143
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40
Coq.QArith.Qcanon.Qcmult_assoc	40	0.1.0.3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	0.102486848831	10
Coq.QArith.Qcanon.Qcmult_0_l	40	4.0	synth with cache (only 1: intro H; only 1: auto with qarith).	0.0533490180969	6
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.0773739814758	10
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	1.2.3.0.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.71755886078	835
Coq.QArith.Qcanon.Qcmult_comm	40	13.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	2.1665058136	671
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	0.8.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).	2.73700094223	1300
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	1.7.2.4.0.8.0	synth with cache (only 1: intros; only 1: destruct y; only 1: qc; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).	17.3992378712	9363
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	4.8.0.29.0.0	synth with cache (only 1: intros l' H; only 1: qc; only 1: Z.nzsimpl'; only 1: apply Qmult_inv_r; only 1: unfold Qeq, Qplus; only 1: auto).	36.0235650539	33251
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.2.30.0.0	synth with cache (only 1: intros; only 1: qc; only 1: Z.nzsimpl'; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	14.3646919727	13401
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	1.2.20	synth with cache (only 1: red; only 1: intros; only 1: auto with *).	0.913790941238	1604
Coq.QArith.Qcanon.Qcle_antisym	40	21.0	synth with cache (only 1: intros x y; only 1: CRelationClasses.simpl_crelation).	1.9690220356	1531
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	16.9	synth with cache (only 1: intros b1 b2; only 1: congruence).	1.43459415436	2106
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.0.1.1.36	synth with cache (only 1: intro i; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: auto).	34.9141020775	35358
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	5.0.2.0.0.0.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: eapply Qle_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: apply Qle_refl).	1.49302983284	1143
Coq.QArith.Qcanon.Qcnot_lt_le	40	6.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.244575977325	21
Coq.QArith.Qcanon.Qcnot_le_lt	40	2.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: Z.order).	0.0437669754028	19
Coq.QArith.Qcanon.Qclt_not_le	40	0.6.11	synth with cache (only 1: intros x0 y; only 1: unfold Qcle, Qclt; only 1: apply Z.nle_gt).	3.40445399284	2864
Coq.QArith.Qcanon.Qcle_not_lt	40	10.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.616100788116	309
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40	9.0.26	synth with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: eauto).	12.4517228603	13507
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	4.0.10.0.0.1.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: apply Qmult_le_r).	15.5044600964	5967
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.0.0.0.2.1.11	synth with cache (only 1: intro; only 1: Nat.cases n; only 1: intro H; only 1: qc; only 1: now elim H; only 1: simpl; only 1: intros n IH; only 1: auto with qarith).	1.98724412918	1623
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.1.3.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.0497310161591	10
Coq.QArith.Qreals.IZR_nz	40	0	synth with cache (only 1: auto with real).	0.0267050266266	1
Coq.QArith.Qreals.eqR_Qeq	40	0.6.2	synth with cache (only 1: intros a; only 1: fix even_specT 1; only 1: assumption).	0.445325136185	107
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40	4.1.3.9	synth with cache (only 1: intros a; only 1: fix even_specT 1; only 1: intros; only 1: auto).	4.21740007401	3201
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.Qden_cancel	40
Coq.QArith.QArith_base.Qnum_cancel	40
Coq.QArith.QArith_base.inject_Z_injective	40	1.0.0.0.0	synth with cache (only 1: split; only 1: unfold Qeq; only 1: apply Z.mul_cancel_r, not_eq_sym, Z.lt_neq, Pos2Z.is_pos; only 1: intros EQ; only 1: now rewrite EQ).	0.0333261489868	6
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0431900024414	11
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	2.0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.140975952148	13
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	4	synth with cache (only 1: constructor).	0.00968503952026	5
Coq.QArith.QArith_base.Qeq_sym	40	10	synth with cache (only 1: intuition).	0.168741941452	64
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40
Coq.QArith.QArith_base.Qeq_eq_bool	40
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	synth with cache (only 1: apply Zle_is_le_bool).	0.0140538215637	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.1	synth with cache (only 1: intro HF; only 1: intuition).	0.0152821540833	3
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	synth with cache (only 1: apply Zeq_is_eq_bool; only 1: trivial).	0.0151109695435	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.6.34	synth with cache (only 1: intros n; only 1: destruct n; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	3.04784321785	5477
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.4	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.0537281036377	10
Coq.QArith.QArith_base.Qmake_Qdiv	40	12.8.6	synth with cache (only 1: bitwise as m ?; only 1: simpl; only 1: now Z.nzsimpl).	1.20330095291	1061
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0	synth with cache (only 1: now Z.nzsimpl').	0.105940103531	1
Coq.QArith.QArith_base.Qplus_assoc	40	4.21	synth with cache (only 1: fix Even_Odd_double 1; only 1: trivial).	20.6951160431	7723
Coq.QArith.QArith_base.Qplus_0_l	40	3.4.38	synth with cache (only 1: fix OddT_EvenT_rect 1; only 1: intros l'; only 1: now subst).	6.14256978035	8159
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.2.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl'; only 1: rewrite ?Pos.mul_1_r; only 1: auto with relations).	0.0898118019104	8
Coq.QArith.QArith_base.Qplus_comm	40	3.0.1.19.3	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	3.45983290672	2843
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.6.2	synth with cache (only 1: intros a0; only 1: unfold Qeq; only 1: simpl in *; only 1: ring).	0.157777070999	105
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0330970287323	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40
Coq.QArith.QArith_base.Qmult_0_l	40	7.0.0	synth with cache (only 1: red; only 1: intros; only 1: trivial).	0.027899980545	10
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.1.1	synth with cache (only 1: red; only 1: simpl; only 1: intros Hn; only 1: now Z.nzsimpl).	0.178393125534	30
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.2.0.0.2	synth with cache (only 1: intro q; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.491672992706	172
Coq.QArith.QArith_base.Qmult_comm	40	0.1.0.0.9.0	synth with cache (only 1: intros (x1, x2); only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.45216298103	792
Coq.QArith.QArith_base.Qmult_plus_distr_r	40
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.103356122971	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	0.0.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: unfold Qeq, Qmult; only 1: f_equal).	0.0218160152435	3
Coq.QArith.QArith_base.inject_Z_opp	40	0	synth with cache (only 1: now destruct x).	0.0114259719849	1
Coq.QArith.QArith_base.Qinv_involutive	40	0.7.1	synth with cache (only 1: red; only 1: fix Even_Odd_double 1; only 1: trivial).	0.110206842422	63
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qinv_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl in *; only 1: trivial).	0.0205709934235	5
Coq.QArith.QArith_base.Qinv_neg	40	0.0	synth with cache (only 1: intros a b; only 1: reflexivity).	0.0169639587402	2
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qreduce_l	40
Coq.QArith.QArith_base.Qreduce_r	40	0.0.0.0	synth with cache (only 1: intros a b z; only 1: unfold Qeq, Qnum, Qden; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0973579883575	4
Coq.QArith.QArith_base.Qreduce_num_l	40	0.0.1.0	synth with cache (only 1: intros x; only 1: red; only 1: simpl; only 1: congruence).	0.0236139297485	5
Coq.QArith.QArith_base.Qreduce_num_r	40	0.0.0.0	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qnum, Qden; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0295760631561	4
Coq.QArith.QArith_base.Qreduce_den_l	40	0.0.1	synth with cache (only 1: intros; only 1: unfold Qeq, Qnum, Qden; only 1: ring).	0.188938140869	19
Coq.QArith.QArith_base.Qreduce_den_r	40	0.0.0	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qnum, Qden; only 1: ring).	0.0233860015869	3
Coq.QArith.QArith_base.Qreduce_den_inject_Z_l	40
Coq.QArith.QArith_base.Qreduce_den_inject_Z_r	40	0.0.0	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qnum, Qden, inject_Z; only 1: ring).	0.0266189575195	3
Coq.QArith.QArith_base.Qreduce_zero	40	0.0.1	synth with cache (only 1: intros n; only 1: compute; only 1: trivial).	0.0208449363708	4
Coq.QArith.QArith_base.Qmult_inject_Z_l	40	1.0.1.0	synth with cache (only 1: intros a b z; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.0365488529205	14
Coq.QArith.QArith_base.Qmult_inject_Z_r	40	5.0.0.0	synth with cache (only 1: intros a b z; only 1: unfold Qeq; only 1: cbn; only 1: now rewrite Pos.mul_1_r).	0.116407871246	14
Coq.QArith.QArith_base.Qmult_frac_l	40	1.1.1.6.0.0.0.1.4	synth with cache (only 1: assert (H : (1 + 1)%Z = 2%Z) by now Z.nzsimpl'; only 1: intros a b; only 1: intro n; only 1: unfold Qeq, Qmult; only 1: simpl; only 1: induction a as [a IHa| a IHa| ]; only 1: ring; only 1: trivial; only 1: ring).	7.485268116	4702
Coq.QArith.QArith_base.Qmult_frac_r	40	2.0.0.0	synth with cache (only 1: intros a b c; only 1: unfold Qeq, Qnum, Qden; only 1: cbn; only 1: ring).	0.0363080501556	12
Coq.QArith.QArith_base.Qle_refl	40	6.2	synth with cache (only 1: red; only 1: reflexivity).	0.0171370506287	10
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	10	synth with cache (only 1: apply Z.lt_irrefl).	0.0291721820831	32
Coq.QArith.QArith_base.Qlt_not_eq	40	1.7.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intuition; only 1: Z.order').	0.206231832504	56
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_leneq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	15.5.36	synth with cache (only 1: destruct y; only 1: destruct x; only 1: congruence).	15.2938210964	22226
Coq.QArith.QArith_base.Qgt_lt	40	5.0	synth with cache (only 1: intros (x1, x2); only 1: trivial).	0.015349149704	7
Coq.QArith.QArith_base.Qlt_gt	40	0.0	synth with cache (only 1: intros p q H; only 1: assumption).	0.0140030384064	2
Coq.QArith.QArith_base.Qge_le	40	0.0	synth with cache (only 1: intros p q H; only 1: assumption).	0.0141689777374	2
Coq.QArith.QArith_base.Qle_ge	40	0.0	synth with cache (only 1: intros p q H; only 1: assumption).	0.0130989551544	2
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	26.6	synth with cache (only 1: intro; only 1: now apply Z.ge_le).	1.73621296883	1164
Coq.QArith.QArith_base.Qnot_le_lt	40	7.1.20	synth with cache (only 1: intuition; only 1: rewrite Qlt_alt; only 1: Z.order).	31.3787839413	3150
Coq.QArith.QArith_base.Qlt_not_le	40	9.0.7.14	synth with cache (only 1: intuition; only 1: contradict H; only 1: apply Z.nlt_ge; only 1: auto).	3.4945268631	4160
Coq.QArith.QArith_base.Qle_not_lt	40	1	synth with cache (only 1: apply Z.nlt_ge).	0.0112760066986	2
Coq.QArith.QArith_base.Qle_lt_or_eq	40	1.1.0	synth with cache (only 1: assert (R : forall n, 0%Z = n <-> n = 0%Z) by (intros; split; apply Z.eq_sym); only 1: intros n m; only 1: apply Z.lt_eq_cases).	0.0707559585571	29
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qopp_lt_compat	40	0.9.6	synth with cache (only 1: intro n; only 1: fix odd_specT 1; only 1: trivial).	7.06161022186	3741
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	5.93097400665	1442
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	7.99669599533	1559
Coq.QArith.QArith_base.Qplus_lt_compat	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	0.228241920471	41
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qmult_lt_0_compat	40
Coq.QArith.QArith_base.Qmult_le_1_compat	40
Coq.QArith.QArith_base.Qmult_lt_1_compat	40
Coq.QArith.QArith_base.Qmult_lt_compat_nonneg	40
Coq.QArith.QArith_base.Qmult_le_lt_compat_pos	40
Coq.QArith.QArith_base.Qmult_le_compat_nonneg	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0225489139557	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.0.0.0.1.3.1	synth with cache (only 1: intros n m p; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	1.33622813225	352
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.1.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	1.14551115036	256
Coq.QArith.Qround.Qfloor_Z	40	4.1.1.0	synth with cache (only 1: destr_bool; only 1: symmetry; only 1: symmetry; only 1: apply Z.div_1_r).	0.0476999282837	14
Coq.QArith.Qround.Qceiling_Z	40	3.12.0.0.3	synth with cache (only 1: intros n; only 1: nzinduct n; only 1: trivial; only 1: fix even_spec 1; only 1: now Z.nzsimpl').	18.7330050468	7362
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	4	synth with cache (only 1: eauto with qarith).	0.0547611713409	23
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.1.2.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.947023868561	310
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0678579807281	9
Coq.QArith.Qabs.Qabs_nonneg	40	2.0.0.13.3.11	synth with cache (only 1: intro q; only 1: destruct q; only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').	18.5133888721	11190
Coq.QArith.Qabs.Zabs_Qabs	40	1.0.0	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qnum, Qden; only 1: auto).	0.0284378528595	4
Coq.QArith.Qabs.Qabs_opp	40	0.0.1.7.1.1.5	synth with cache (only 1: simpl; only 1: intros [[| n| n] d]; only 1: intuition try easy; only 1: repeat split; only 1: red; only 1: simpl; only 1: reflexivity).	13.7140550613	8437
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40	11.0.8	synth with cache (only 1: unfold Qeq in *; only 1: intros (n, d); only 1: now destruct n).	21.3568279743	2506
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	1.32	synth with cache (only 1: fix even_specT 1; only 1: easy).	6.26771402359	9166
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_Qlt_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qlt_condition	40
Coq.QArith.Qabs.Qabs_ge	40
Coq.QArith.Qabs.Qabs_gt	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: reflexivity).	0.00967502593994	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00745797157288	1
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0106389522552	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	3.3.3.2.9	synth with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: red; only 1: auto).	0.842303037643	1004
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.0120720863342	1
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0121212005615	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.00960111618042	1
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	1	synth with cache (only 1: firstorder).	0.0131020545959	2
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	2	synth with cache (only 1: simpl_crelation).	0.0164120197296	3
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.0197849273682	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	3.1.1.1	synth with cache (only 1: intro; only 1: hnf; only 1: intros; only 1: firstorder).	0.108664035797	17
Coq.Classes.CMorphisms.iff_impl_subrelation	40	2.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).	0.0980310440063	5
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0108780860901	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0117011070251	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.010320186615	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	4.3.3.2	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: intros x y H'; only 1: simpl_crelation; only 1: firstorder).	0.880635023117	464
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	5.1.1	synth with cache (only 1: red; only 1: reduce; only 1: firstorder).	0.0670750141144	12
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	2	synth with cache (only 1: firstorder).	0.0255219936371	3
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	1.3.2.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: transitivity x0; only 1: assumption; only 1: assumption).	0.774061918259	389
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	7.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	0.872625112534	411
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	8.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	0.870769023895	358
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	3.3	synth with cache (only 1: intros A B []; only 1: firstorder).	0.172253131866	31
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	1.6	synth with cache (only 1: intros; only 1: firstorder).	0.850610971451	130
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.020740032196	4
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	1.2	synth with cache (only 1: intros R ? ? ? n; only 1: firstorder).	0.0385789871216	23
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	3	synth with cache (only 1: simpl_crelation).	0.0204839706421	4
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	6	synth with cache (only 1: firstorder).	0.013375043869	7
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.0.0	synth with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).	0.0332140922546	3
Coq.Classes.CMorphisms.GenericInstances.flip1	40	1.0	synth with cache (only 1: reduce; only 1: auto).	0.0203471183777	3
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0143711566925	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	2.1	synth with cache (only 1: hnf; only 1: simpl_crelation).	0.0286529064178	18
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0111620426178	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0111558437347	1
Coq.Classes.CMorphisms.proper_proper	40	6.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0230488777161	9
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	5	synth with cache (only 1: firstorder).	0.0131630897522	6
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0118458271027	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1	synth with cache (only 1: simpl_crelation).	0.0243949890137	2
Coq.Classes.CMorphisms.proper_sym_flip_2	40	1.0.1.7.1	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros; only 1: intros x x' Hxx'; only 1: auto).	4.67443299294	806
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	0.12.0.2.14.5	synth with cache (only 1: intros C decide H P H0; only 1: split; only 1: apply H0; only 1: auto; only 1: apply H0; only 1: auto).	36.2785358429	28909
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.029266834259	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0402100086212	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40	0.3.9.3.0.0.2	synth with cache (only 1: apply proper_sym_impl_iff; only 1: red; only 1: now symmetry; only 1: reduce; only 1: setoid_rewrite  <- H; only 1: reduce in H; only 1: apply H0).	32.6972119808	29973
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	4.5.0.0.0	synth with cache (only 1: intros A R H x x0 y X; only 1: simpl_crelation; only 1: transitivity x0; only 1: auto; only 1: auto).	11.4796822071	7011
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_crelation).	0.01646900177	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0136439800262	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0139238834381	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.289088964462	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: auto).	0.0112998485565	1
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0131549835205	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.0	synth with cache (only 1: hnf; only 1: firstorder).	0.013335943222	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	8	synth with cache (only 1: firstorder).	0.0450079441071	34
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	3	synth with cache (only 1: firstorder).	0.0222668647766	4
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0	synth with cache (only 1: firstorder).	0.0248160362244	1
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0	synth with cache (only 1: firstorder).	0.113394021988	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0	synth with cache (only 1: firstorder).	0.0429821014404	1
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0120937824249	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.013729095459	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1.0.1.0.2	synth with cache (only 1: constructor; only 1: intro H1; only 1: trivial; only 1: intro H1; only 1: trivial).	0.0195319652557	9
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0117111206055	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.014221906662	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	2	synth with cache (only 1: firstorder).	0.0140361785889	3
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0269551277161	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0582978725433	3
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	3.0.0.0.3	synth with cache (only 1: intros R H x x0 y H0 H1; only 1: intros; only 1: transitivity y; only 1: intuition; only 1: auto).	0.437418937683	263
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	1	synth with cache (only 1: simpl_relation).	0.0148658752441	2
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0125648975372	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.014132976532	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.27006316185	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	24.21.54	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: destruct y; only 1: now destruct x).	5.63124012947	10303
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	3	synth with cache (only 1: reflexivity).	0.010274887085	4
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.012179851532	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0166280269623	4
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	8	synth with cache (only 1: firstorder).	0.0446760654449	46
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0246741771698	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0	synth with cache (only 1: firstorder).	0.0257160663605	1
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0	synth with cache (only 1: firstorder).	0.108295917511	1
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0	synth with cache (only 1: firstorder).	0.0394639968872	1
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0132260322571	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0111010074615	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	2.1.0.1.0.2.8.2	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: constructor; only 1: intro H1; only 1: trivial; only 1: intro H1; only 1: trivial; only 1: firstorder).	2.60967588425	4961
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0277972221375	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0240578651428	4
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.434658050537	7
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	3	synth with cache (only 1: firstorder).	0.0136520862579	4
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0275819301605	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.0913701057434	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.0	synth with cache (only 1: intro z; only 1: firstorder).	0.0225059986115	2
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: repeat split).	0.00799608230591	1
Coq.Classes.Morphisms.Proper.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0047299861908	1
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00470805168152	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00456714630127	1
Coq.Classes.Morphisms.Proper.reflexive_reflexive_proxy	40	0	synth with cache (only 1: firstorder).	0.00446701049805	1
Coq.Classes.Morphisms.rewrite_relation_pointwise	40	0	synth with cache (only 1: firstorder).	0.00700807571411	1
Coq.Classes.Morphisms.rewrite_relation_eq_dom	40	0	synth with cache (only 1: split).	0.00559401512146	1
Coq.Classes.Morphisms.eq_rewrite_relation	40	0	synth with cache (only 1: split).	0.00597190856934	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	13.0.4.0	synth with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	0.409826993942	733
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	1.2	synth with cache (only 1: reduce; only 1: firstorder).	0.00929093360901	5
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0112321376801	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	1.0.0	synth with cache (only 1: unfold subrelation in *; only 1: intros x y H0; only 1: assumption).	0.0116140842438	4
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.00613212585449	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.2.3.0	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).	0.105357885361	10
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	2	synth with cache (only 1: firstorder).	0.00779604911804	3
Coq.Classes.Morphisms.Relations.forall_subrelation	40	1	synth with cache (only 1: firstorder).	0.0104248523712	2
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.00870490074158	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.0.0.0	synth with cache (only 1: hnf; only 1: intros x y H0; only 1: red in H0; only 1: firstorder).	0.0108609199524	4
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0.0.44	synth with cache (only 1: compute; only 1: intros RA R mR x y H x0 y0 H0; only 1: auto).	10.2159991264	13625
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	4.0.2	synth with cache (only 1: reduce; only 1: red in H0; only 1: firstorder).	0.0322589874268	9
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.032283782959	16
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.674342870712	405
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	3.0	synth with cache (only 1: intros R H x x0 y H0 H1; only 1: firstorder).	0.536358118057	304
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	0.8	synth with cache (only 1: intros; only 1: firstorder).	0.886042833328	418
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.289351940155	145
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.802543878555	121
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	2.5.0	synth with cache (only 1: hnf; only 1: intuition; only 1: firstorder).	0.0328850746155	22
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	7.0	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: firstorder).	0.013375043869	9
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0109570026398	5
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	7.0.0.4.0.0.13	synth with cache (only 1: split; only 1: reduce; only 1: apply H0; only 1: firstorder; only 1: reduce; only 1: apply H0; only 1: firstorder).	23.438683033	7391
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.10	synth with cache (only 1: apply H; only 1: auto).	0.0310821533203	33
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	2.1.0.0.0.0	synth with cache (only 1: split; only 1: reduce; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.0363430976868	9
Coq.Classes.Morphisms.GenericInstances.flip1	40	3	synth with cache (only 1: apply H).	0.00618290901184	4
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00577616691589	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0100719928741	2
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: simpl_relation).	0.00716710090637	1
Coq.Classes.Morphisms.proper_proper	40	2.0.4.0	synth with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).	0.135385036469	60
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	1.0.7	synth with cache (only 1: reduce in H; only 1: setoid_rewrite H; only 1: apply H0).	0.0728929042816	24
Coq.Classes.Morphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.00612998008728	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.0	synth with cache (only 1: intros R H x y H0 x0 y0 H1 H2; only 1: simpl_relation).	0.0129101276398	2
Coq.Classes.Morphisms.proper_sym_flip_2	40	6.3.1.4.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold respectful; only 1: intros x x' Hxx'; only 1: unfold flip in *; only 1: firstorder).	3.52866506577	2353
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.0.0.1.8.3.10.0.3	synth with cache (only 1: intros C decide H P H0; only 1: intros x x' Hxx'; only 1: red in H0; only 1: red in H0; only 1: split; only 1: apply H0; only 1: auto; only 1: apply H0; only 1: auto).	23.3775320053	18945
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	0.0.4.0.0.3.6.1	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: split; only 1: apply H; only 1: auto; only 1: auto; only 1: apply H; only 1: auto; only 1: auto).	4.30251693726	2544
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	5	synth with cache (only 1: firstorder).	0.0171129703522	6
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0148491859436	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.038144826889	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.0151479244232	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.4.6	synth with cache (only 1: split; only 1: reflexivity; only 1: CRelationClasses.simpl_crelation).	0.080139875412	58
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0265529155731	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.276386976242	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: firstorder; only 1: firstorder).	0.0838508605957	4
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.4	synth with cache (only 1: unfold relation_equivalence in *; only 1: firstorder).	0.100331068039	27
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.0168969631195	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.0180571079254	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0	synth with cache (only 1: firstorder).	0.0171790122986	1
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.0166718959808	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0	synth with cache (only 1: firstorder).	0.0169899463654	1
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	2.3.14.9	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: compute in *; only 1: eauto).	3.07941007614	2851
Coq.Classes.DecidableClass.Decidable_sound	40	0.37.2.20	synth with cache (only 1: intro m; only 1: intros; only 1: apply H; only 1: assumption).	14.537250042	65670
Coq.Classes.DecidableClass.Decidable_complete	40	2.5.14.8.24.10.11	synth with cache (only 1: intro x; only 1: intros n m; only 1: case n; only 1: intro; only 1: intros [? ?]; only 1: simpl; only 1: auto).	35.7325880527	163132
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_not_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	4.60	synth with cache (only 1: destruct x; only 1: now destruct y).	1.48072695732	3773
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	4	synth with cache (only 1: apply _).	0.0158679485321	5
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.015988111496	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0151600837708	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	6.8.14	synth with cache (only 1: intro x; only 1: intros A B f g <- H; only 1: auto).	5.49998307228	7691
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	8.1	synth with cache (only 1: intros R R' EQ a a' Ha WF; only 1: firstorder).	0.550909042358	155
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.0608818531036	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	2.3	synth with cache (only 1: repeat red; only 1: firstorder).	0.214596986771	35
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.1.2.0	synth with cache (only 1: do 2 red; only 1: induction l; only 1: firstorder; only 1: auto).	0.0299849510193	7
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.0	synth with cache (only 1: do 2 red; only 1: now symmetry).	0.0259470939636	2
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	4.0	synth with cache (only 1: intro; only 1: simpl_relation).	0.0404801368713	14
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.016804933548	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	synth with cache (only 1: trivial).	0.0168931484222	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40	30.1.2.0.17	synth with cache (only 1: simpl; only 1: unfold to_nat; only 1: simpl; only 1: f_equal; only 1: exact (inj_mul 2 p)).	10.8551189899	6517
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: f_equal; only 1: auto).	0.0396671295166	7
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	0.18.7.0.0	synth with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_cont_spec; only 1: revert q; only 1: fix odd_spec 1; only 1: now destruct compare || now destruct p).	38.8231079578	22308
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40	4.7.0.6.0.0.0	synth with cache (only 1: induction p as [| p IHp] using peano_ind; only 1: trivial; only 1: rewrite inj_succ; only 1: simpl; only 1: rewrite iter_succ; only 1: rewrite ?IHp; only 1: auto).	3.44533491135	3293
Coq.PArith.Pnat.Pos2Nat.inj_pow	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	1.0.0.0.8.0.2.1.10	synth with cache (only 1: simpl; only 1: destruct n; only 1: trivial; only 1: simpl Pos.of_nat; only 1: induction n; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: now rewrite IHn).	3.20291996002	3273
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_0	40	0	synth with cache (only 1: trivial).	0.0145099163055	1
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0305159091949	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Nat2Pos.inj_pow	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	3.1.0.0.0.21	synth with cache (only 1: Nat.induct ltac:(n); only 1: trivial; only 1: intros n IH; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).	1.10059285164	853
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	1.0.0.2.0.1.1	synth with cache (only 1: revert m; only 1: intro q; only 1: split; only 1: apply Pos2Nat.inj; only 1: intro H; only 1: f_equal; only 1: assumption).	2.28092694283	967
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.1	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0281980037689	5
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	1.0.22	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: trivial).	24.0450940132	16867
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	5.0.0.0	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl').	0.0609059333801	9
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	6.2.12	synth with cache (only 1: fix gcd_divide 1; only 1: intro m; only 1: trivial).	7.56250500679	7329
Coq.PArith.BinPos.Pos.eq_dec	40	2	synth with cache (only 1: decide equality).	0.206605911255	47
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.3	synth with cache (only 1: cbn; only 1: reflexivity).	0.0202469825745	5
Coq.PArith.BinPos.Pos.succ_discr	40	6.5.19.4.77	synth with cache (only 1: destruct p; only 1: discriminate; only 1: discriminate; only 1: intro H1; only 1: discriminate).	5.9545109272	24765
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.0138139724731	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	6.0.0.0.0.8.0.4.0.17	synth with cache (only 1: destruct p; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: auto with relations; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	9.92840886116	10805
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0238771438599	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	synth with cache (only 1: now destruct p).	0.0322461128235	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.03236079216	1
Coq.PArith.BinPos.Pos.pred_succ	40	1.0.0.0.0.0.0.0.0.0.47	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: now f_equal).	1.42327284813	2060
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	3.1.0.0.0.2.2	synth with cache (only 1: intro H; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	1.03364396095	431
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.0.0.2.15.2.0.3	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p; only 1: f_equal; only 1: apply pred_double_succ; only 1: now f_equal; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	25.7169468403	20014
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.0150220394135	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0151979923248	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40	3.7.0	synth with cache (only 1: revert q; only 1: fix even_specT 1; only 1: now f_equal).	1.59165287018	934
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.3.1.0.1.3.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).	3.04622507095	1397
Coq.PArith.BinPos.Pos.add_cancel_l	40	0.4.6.6.0	synth with cache (only 1: split; only 1: revert q; only 1: fix even_specT 1; only 1: now f_equal; only 1: congruence).	18.2330169678	10690
Coq.PArith.BinPos.Pos.add_carry_reg_r	40	4.8.6.1	synth with cache (only 1: revert p q; only 1: intros H; only 1: fix odd_specT 1; only 1: auto).	28.6912169456	18935
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	4.0.0.0.0.0	synth with cache (only 1: revert q; only 1: intro q; only 1: revert q; only 1: intro q; only 1: revert q; only 1: split).	0.135769128799	34
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	synth with cache (only 1: revert P a f; only 1: trivial).	0.021744966507	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: now destruct p).	0.015300989151	1
Coq.PArith.BinPos.Pos.mul_1_r	40	0.2.1.4.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	0.492735147476	323
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.1.0.4.0.11	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	35.8317189217	19249
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.276921033859	83
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.2.1.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.306262016296	108
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.1.2.1.1.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p as [p| p| ]; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H; only 1: now f_equal; only 1: intros H; only 1: intros; only 1: now f_equal).	2.55425214767	1417
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.0334920883179	1
Coq.PArith.BinPos.Pos.square_xO	40	4.0.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0255088806152	7
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	1.4.0.4.0.1.0.6	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite IHp; only 1: Bool.destr_bool).	2.26730918884	2695
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_succ_r	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_ind	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	0.6.3.0.0.0.3.28	synth with cache (only 1: apply succ_inj; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: auto).	17.3317170143	23758
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	4.0.13.3	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro q; only 1: trivial).	32.7696149349	22805
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0425720214844	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	0.0.0.0.0.0.1.6.1.0.0	synth with cache (only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: intros r H; only 1: apply add_cancel_l in H; only 1: now f_equal).	7.40016698837	4054
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	7.0.4.6	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro n; only 1: easy).	2.9189081192	1933
Coq.PArith.BinPos.Pos.leb_le	40	0.0.0.4.1.4.10.0	synth with cache (only 1: symmetry; only 1: revert q; only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: split; only 1: congruence; only 1: congruence).	37.6860649586	25194
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	0.6.13.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: revert q; only 1: fix odd_spec 1; only 1: trivial).	11.0114650726	6393
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0594480037689	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: easy').	0.0623979568481	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: now split).	0.0660259723663	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0703268051147	7
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.5.0.0	synth with cache (only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: rewrite compare_cont_spec; only 1: now destruct (compare_cont Eq p q)).	0.0541610717773	20
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0139670372009	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	1.0.2.5.1.2	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	2.8601000309	2030
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.0.4.2.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.305413007736	143
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	1.1.2.2.1.2	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.602550983429	489
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0604259967804	5
Coq.PArith.BinPos.Pos.compare_le_iff	40	1.0.0.0.1	synth with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: now split).	0.0616128444672	7
Coq.PArith.BinPos.Pos.gt_lt_iff	40	4.0	synth with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.322649002075	74
Coq.PArith.BinPos.Pos.gt_lt	40	0.8.3.0	synth with cache (only 1: unfold gt, le, compare; only 1: intros H; only 1: rewrite Nat.compare_antisym, CompOpp_iff in H; only 1: now apply compare_lt_iff).	2.51617503166	1415
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0136620998383	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	0.1.2	synth with cache (only 1: unfold leb, le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0307109355927	6
Coq.PArith.BinPos.Pos.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0263888835907	2
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0159530639648	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40	2.6.7	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	6.64639306068	2351
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	4	synth with cache (only 1: now destruct p).	0.0299890041351	5
Coq.PArith.BinPos.Pos.nlt_1_r	40	6	synth with cache (only 1: now destruct p).	0.0745069980621	27
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	synth with cache (only 1: now destruct p).	0.0479481220245	27
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0242719650269	2
Coq.PArith.BinPos.Pos.lt_nle	40	0.5	synth with cache (only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.541468858719	94
Coq.PArith.BinPos.Pos.lt_le_incl	40	2.4	synth with cache (only 1: unfold lt, le; only 1: now do 2 destruct compare).	0.158771038055	35
Coq.PArith.BinPos.Pos.lt_lt_succ	40	0.35.6	synth with cache (only 1: revert m; only 1: fix even_specT 1; only 1: auto).	30.9620118141	31552
Coq.PArith.BinPos.Pos.succ_lt_mono	40	0.1.4.5	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	1.0162088871	449
Coq.PArith.BinPos.Pos.succ_le_mono	40	1.6.10.0.4.6	synth with cache (only 1: revert m; only 1: intro q; only 1: unfold lt, le; only 1: revert q; only 1: intro H; only 1: now rewrite compare_succ_succ).	26.4052419662	16382
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40	0.10.6.5	synth with cache (only 1: intros A P; only 1: intros HP HIS; only 1: fix OddT_EvenT_rect 1; only 1: assumption).	1.65050983429	2016
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	3.3.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).	0.0543849468231	22
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0188429355621	2
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.5.22	synth with cache (only 1: intros EQ; only 1: intros; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	35.7614929676	15567
Coq.PArith.BinPos.Pos.le_trans	40	0.0.1.0.7.0.0.3.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).	7.38998794556	5300
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.2.1.2.2.0.4.2	synth with cache (only 1: revert q r; only 1: intros n m; only 1: unfold le; only 1: induction p using peano_ind; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	3.92031383514	2429
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.0.4	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.202931165695	45
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.172945976257	42
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0244598388672	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0253028869629	7
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0189218521118	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1	synth with cache (only 1: now destruct p).	0.0154180526733	2
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0152080059052	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.0.3.0.14	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: apply sub_mask_pos_iff in Hr; only 1: exists r; only 1: trivial).	6.26478385925	4839
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0305640697479	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0328800678253	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.1	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.0579979419708	4
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0865149497986	20
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.0.0.0.0.0.2.1.6.0.0	synth with cache (only 1: unfold le, min; only 1: intros x y; only 1: rewrite compare_gt_iff; only 1: intros H; only 1: apply le_nlt in H; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	6.49937605858	5770
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.133527994156	8
Coq.PArith.BinPos.Pos.min_1_l	40	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.11400604248	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0405411720276	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.0.0.4.0	synth with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).	0.129584789276	48
Coq.PArith.BinPos.Pos.add_max_distr_l	40	0.12.0.0	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros a a' Ha; only 1: now apply add_le_mono_l).	2.37413907051	1377
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0.4.0.2.2.4.1	synth with cache (only 1: destruct (min_spec n m); only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l; only 1: rewrite 3!(add_comm _ p); only 1: intuition; only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	6.16028094292	3846
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	2.8.0.0	synth with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros H'; only 1: now apply mul_le_mono_l).	0.508399963379	296
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.5	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0280249118805	8
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.2	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.031350851059	6
Coq.PArith.BinPos.Pos.iter_op_succ	40	2.2.1.2.0.3.11	synth with cache (only 1: intro q; only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial; only 1: auto).	8.32895994186	9908
Coq.PArith.BinPos.Pos.of_nat_succ	40	1.2.0.0.5	synth with cache (only 1: Nat.induct ltac:(n); only 1: split; only 1: simpl; only 1: intros a Ha; only 1: now f_equal).	0.327847957611	161
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	4.5.0.20	synth with cache (only 1: nzinduct n; only 1: trivial; only 1: fix Even_Odd_double 1; only 1: easy).	17.6000461578	24984
Coq.PArith.BinPos.Pos.succ_of_nat	40	2.0.0.10.0.0.1.1	synth with cache (only 1: Nat.cases ltac:(n); only 1: easy'; only 1: intros; only 1: simpl; only 1: induction n as [| n IHn]; only 1: f_equal; only 1: f_equal; only 1: auto using add_1_r).	27.7282299995	21746
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40	12.11	synth with cache (only 1: rewrite Nat.mul_comm; only 1: apply Nat.divide_mul_l).	5.0893638134	4227
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	6.30.17.0	synth with cache (only 1: intros q r; only 1: revert q; only 1: fix le_div2 1; only 1: auto).	28.4786069393	36732
Coq.PArith.BinPos.Pos.gcd_divide_r	40	4.0.3.10	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: intro q; only 1: auto).	5.52862596512	5893
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	8.42	synth with cache (only 1: fix odd_spec 1; only 1: auto).	2.91438817978	6982
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0	synth with cache (only 1: unfold Pos.gt; only 1: apply iff_refl).	0.0248169898987	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	2.33	synth with cache (only 1: fix Even_Odd_double 1; only 1: easy).	3.32083296776	2925
Coq.Arith.Le.le_elim_rel_stt	40	2.4.8.10.1	synth with cache (only 1: intros Base Step n; only 1: intro RS'; only 1: fix OddT_EvenT_rect 1; only 1: intros; only 1: auto).	10.7346198559	12893
Coq.Arith.Even.even_or_odd_stt	40
Coq.Arith.Even.even_odd_dec_stt	40	0.0.0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0375299453735	5
Coq.Arith.Even.not_even_and_odd_stt	40	20.2.2.2.2.12.0	synth with cache (only 1: induction n as [| n IHn]; only 1: fix Even_alt_Even 1; only 1: inversion_clear 1 as [| ? H0]; only 1: auto with arith; only 1: inversion_clear 1 as [| ? H0]; only 1: inversion_clear 1; only 1: tauto).	19.7252399921	49759
Coq.Arith.Even.even_plus_split_stt	40
Coq.Arith.Even.odd_plus_split_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.180391073227	1
Coq.Arith.Even.even_even_plus_stt	40	3	synth with cache (only 1: parity_binop_dep).	0.0687229633331	4
Coq.Arith.Even.odd_plus_l_stt	40	3	synth with cache (only 1: parity_binop_dep).	0.0690569877625	4
Coq.Arith.Even.odd_plus_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0697770118713	1
Coq.Arith.Even.odd_even_plus_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0692100524902	1
Coq.Arith.Even.even_plus_aux_stt	40	0.0.0	synth with cache (only 1: split; only 1: parity_binop_dep; only 1: parity_binop_dep).	0.179052829742	3
Coq.Arith.Even.even_plus_even_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0682229995728	1
Coq.Arith.Even.even_plus_even_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0712280273438	1
Coq.Arith.Even.even_plus_odd_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.06924700737	1
Coq.Arith.Even.even_plus_odd_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.068904876709	1
Coq.Arith.Even.odd_plus_even_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.118495941162	1
Coq.Arith.Even.odd_plus_even_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.067654132843	1
Coq.Arith.Even.odd_plus_odd_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0675718784332	1
Coq.Arith.Even.odd_plus_odd_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0718519687653	1
Coq.Arith.Even.even_mult_aux_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.152390956879	1
Coq.Arith.Even.even_mult_l_stt	40	7	synth with cache (only 1: parity_binop_dep).	0.0536959171295	11
Coq.Arith.Even.even_mult_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0452508926392	1
Coq.Arith.Even.even_mult_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0672860145569	1
Coq.Arith.Even.even_mult_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0724129676819	1
Coq.Arith.Even.odd_mult_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0689179897308	1
Coq.Arith.Even.odd_mult_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0451829433441	1
Coq.Arith.Even.odd_mult_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0474219322205	1
Coq.Arith.Between.Between.bet_eq	40	5.0.0.1.13	synth with cache (only 1: intro RS'; only 1: intro m; only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).	1.40299701691	1480
Coq.Arith.Between.Between.between_le	40	2.3.4.2	synth with cache (only 1: intros n m; only 1: induction 1; only 1: Nat.Private_Tac.order; only 1: auto).	1.38249397278	555
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40
Coq.Arith.Between.Between.exists_le_S	40	8.14	synth with cache (only 1: fix le_div2 1; only 1: trivial).	4.51540613174	4657
Coq.Arith.Between.Between.exists_S_le	40	2.5.4	synth with cache (only 1: intro n; only 1: fix even_specT 1; only 1: auto).	1.30492687225	802
Coq.Arith.Between.Between.in_int_intro	40	5.0.0.1.1	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: destruct r as [| r]; only 1: auto; only 1: auto).	0.335335016251	153
Coq.Arith.Between.Between.in_int_lt	40	9.2	synth with cache (only 1: intros n m p (q, Hq); only 1: Nat.Private_Tac.order).	0.414408922195	323
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	1.0	synth with cache (only 1: intros p q r []; only 1: auto).	0.0246520042419	3
Coq.Arith.Between.Between.in_int_Sp_q	40	3.3.3.5	synth with cache (only 1: intros n m p; only 1: revert m; only 1: fix OddT_EvenT_rect 1; only 1: tauto).	3.71137309074	2624
Coq.Arith.Between.Between.between_in_int	40	9.0.8.0.7.1	synth with cache (only 1: intros n m p; only 1: induction n as [| n IHn]; only 1: fix OddT_EvenT_rect 1; only 1: auto with relations; only 1: fix OddT_EvenT_rect 1; only 1: auto).	8.83801603317	14367
Coq.Arith.Between.Between.in_int_between	40	0.4.1.1.1.5.0.0	synth with cache (only 1: intro k; only 1: Nat.induct k; only 1: fix OddT_EvenT_rect 1; only 1: intros n; only 1: auto; only 1: intros Base Step n; only 1: fix OddT_EvenT_rect 1; only 1: auto).	4.15248703957	3152
Coq.Arith.Between.Between.exists_in_int	40
Coq.Arith.Between.Between.in_int_exists	40	14.20	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	7.42403292656	8782
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	2.3.43.20.17	synth with cache (only 1: intros * []; only 1: Nat.le_elim H; only 1: now Nat.nzsimpl; only 1: destruct H; only 1: assumption).	5.92058897018	31952
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.odd_even_lem_stt	40
Coq.Arith.Arith_prebase.minus_plus_simpl_l_reverse_stt	40	12.0.0.1	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: Morphisms.f_equiv).	2.82580184937	706
Coq.Arith.Arith_prebase.mult_O_le_stt	40
Coq.Arith.Div2.ind_0_1_SS_stt	40
Coq.Arith.Div2.even_div2_stt	40
Coq.Arith.Div2.odd_div2_stt	40
Coq.Arith.Div2.div2_even_stt	40	1.12.29	synth with cache (only 1: revert n; only 1: fix even_specT 1; only 1: auto).	3.92901206017	9847
Coq.Arith.Div2.div2_odd_stt	40
Coq.Arith.Div2.even_odd_div2_stt	40	6.0.1	synth with cache (only 1: revert n; only 1: fix Even_Odd_double 1; only 1: auto).	0.179162979126	86
Coq.Arith.Div2.even_odd_double_stt	40	2.2.0.0.0	synth with cache (only 1: revert n; only 1: fix Even_Odd_double 1; only 1: intros n; only 1: destruct (Even_Odd_double n) as ((Ev, Ev'), (Od, Od')); only 1: auto).	0.129805088043	52
Coq.Arith.Div2.even_2n_stt	40
Coq.Arith.Div2.odd_S2n_stt	40	0.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0229408740997	3
Coq.Arith.Div2.div2_double_stt	40	2	synth with cache (only 1: apply Nat.div2_double).	0.186095952988	58
Coq.Arith.Div2.div2_double_plus_one_stt	40	1.12	synth with cache (only 1: rewrite Nat.div2_succ_double; only 1: Nat.order).	1.85024905205	1181
Coq.Arith.Plus.plus_is_one_stt	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: apply Nat.nlt_0_r; only 1: auto; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto; only 1: now apply Nat.succ_le_mono; only 1: intros a; only 1: apply (H (S (f a))); only 1: apply Nat.lt_succ_diag_r).	9.41067409515	6428
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	0.0.0.0.1.0.2.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall n (a : A), f a < n -> P a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: apply Nat.nlt_0_r; only 1: auto; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto; only 1: now apply Nat.succ_le_mono; only 1: intros a; only 1: apply (H (S (f a))); only 1: apply Nat.lt_succ_diag_r).	30.2066290379	21007
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.390446901321	139
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0136361122131	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rect1	40
Coq.Arith.Wf_nat.lt_wf_rect	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0143320560455	1
Coq.Arith.Wf_nat.lt_wf_rec1	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0145411491394	1
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0145630836487	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0147039890289	1
Coq.Arith.Wf_nat.gt_wf_rect	40	0.0.0.0	synth with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto).	0.0271229743958	4
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact lt_wf_rect).	0.0132310390472	1
Coq.Arith.Wf_nat.lt_wf_double_rect	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto).	0.0467851161957	7
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto).	0.046914100647	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	14.1.9.0.35	synth with cache (only 1: nzinduct n; only 1: Nat.order'; only 1: fix even_spec 1; only 1: intro m; only 1: easy).	34.2562031746	22973
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	25.0.0.10	synth with cache (only 1: induction n; only 1: now left; only 1: right; only 1: Nat.auto').	3.54940390587	4296
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	0.0.0.1.0.0.1.4.0.24.0.17.12	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: apply Nat.le_0_l; only 1: destruct m; only 1: right; only 1: apply Nat.lt_0_succ; only 1: elim (IHn m); only 1: intros H; only 1: left; only 1: now apply le_n_S; only 1: intros H; only 1: right; only 1: now apply Nat.succ_le_mono in H).	15.3007979393	23557
Coq.Arith.Compare_dec.le_ge_dec	40
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: apply Nat.le_0_l; only 1: destruct m as [| m]; only 1: right; only 1: apply Nat.lt_0_succ; only 1: elim (IHn m); only 1: intros H; only 1: left; only 1: now apply Nat.succ_le_mono in H; only 1: intros H; only 1: right; only 1: now apply Nat.succ_lt_mono in H).	1.23240017891	593
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	0.1.10.19	synth with cache (only 1: revert n m; only 1: intro m; only 1: intro H; only 1: apply le_dec).	18.2082970142	16674
Coq.Arith.Compare_dec.ge_dec	40	1	synth with cache (only 1: apply le_dec).	0.0150580406189	2
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	2	synth with cache (only 1: apply Nat.lt_decidable).	0.0147700309753	3
Coq.Arith.Compare_dec.dec_ge	40	1	synth with cache (only 1: apply Nat.le_decidable).	0.0148720741272	2
Coq.Arith.Compare_dec.not_eq	40
Coq.Arith.Compare_dec.not_le	40	4	synth with cache (only 1: intuition Nat.order).	0.13841509819	58
Coq.Arith.Compare_dec.not_gt	40	8	synth with cache (only 1: intuition Nat.order).	0.235747098923	62
Coq.Arith.Compare_dec.not_ge	40	12	synth with cache (only 1: Nat.order).	0.224721908569	154
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.0188579559326	2
Coq.Arith.Compare_dec.nat_compare_lt	40	5.8.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	13.9017288685	6837
Coq.Arith.Compare_dec.nat_compare_gt	40	3.9.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	5.31137990952	2644
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	2.0.1.0.1.1.1.0.1.1	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: constructor; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).	7.05234479904	3717
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	synth with cache (only 1: apply Nat.compare_lt_iff).	0.0198230743408	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	2	synth with cache (only 1: apply Nat.compare_gt_iff).	0.0178711414337	3
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	8.4.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	13.8157892227	5695
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	synth with cache (only 1: apply Nat.leb_le).	0.0168340206146	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0.7.1	synth with cache (only 1: revert m; only 1: intros a Ha; only 1: rewrite Nat.leb_nle; only 1: Nat.order).	0.633329153061	282
Coq.Arith.Compare_dec.leb_complete_conv	40	1	synth with cache (only 1: apply leb_iff_conv).	0.0202689170837	2
Coq.Arith.Compare_dec.leb_compare	40	9.3.2	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	12.5531241894	6665
Coq.Arith.EqNat.eq_nat_refl	40	2.0.18	synth with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: now rewrite <- ?Nat.succ_le_mono).	0.96172118187	595
Coq.Arith.EqNat.eq_nat_is_eq	40	0.0.6.10	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	7.22370195389	3833
Coq.Arith.EqNat.eq_eq_nat	40	0.0	synth with cache (only 1: intros <-; only 1: apply eq_nat_refl).	0.0214350223541	2
Coq.Arith.EqNat.eq_nat_eq	40	1.1.0.1.0	synth with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: apply eq_nat_is_eq).	0.747658014297	138
Coq.Arith.EqNat.eq_nat_elim	40	1.0.6	synth with cache (only 1: intros Base Step n; only 1: fix OddT_EvenT_rect 1; only 1: contradiction || auto).	0.12933588028	106
Coq.Arith.EqNat.eq_nat_decide	40	2.0.0.4.1.0.1.0.0.1.0.2.2	synth with cache (only 1: intros; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m as [| m]; only 1: now left; only 1: simpl; only 1: auto; only 1: intro m; only 1: simpl; only 1: destruct m as [| m]; only 1: now right; only 1: auto).	31.5009272099	24310
Coq.Arith.Cantor.cancel_of_to	40
Coq.Arith.Cantor.to_nat_inj	40
Coq.Arith.Cantor.cancel_to_of	40
Coq.Arith.Cantor.of_nat_inj	40
Coq.Arith.Cantor.to_nat_spec	40
Coq.Arith.Cantor.to_nat_spec2	40
Coq.Arith.Cantor.to_nat_non_decreasing	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.012274980545	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	1.1.8.3.22.0	synth with cache (only 1: intros A B f r H; only 1: unfold Basics.flip, respectful; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	34.8634581566	57153
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0196580886841	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0122191905975	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.00978207588196	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0101170539856	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0240240097046	5
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0266199111938	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0238769054413	5
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0235950946808	6
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0178370475769	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	1	synth with cache (only 1: split).	0.0128769874573	2
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	15.4492428303	9418
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.0.0.1.0.0.0.1.1.0.2	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	16.6370270252	8902
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.0.0.1.0.0.0.0.1.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	22.4622859955	15716
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	31.1473560333	23602
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	4	synth with cache (only 1: inversion 1).	0.0295190811157	21
Coq.Arith.PeanoNat.Nat.pow_0_r	40	1	synth with cache (only 1: split).	0.0121440887451	2
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	7.0	synth with cache (only 1: simpl; only 1: now nzsimpl).	0.0476341247559	14
Coq.Arith.PeanoNat.Nat.square_spec	40	0	synth with cache (only 1: now nzsimpl').	0.0189170837402	1
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_0	40	0.8.134	synth with cache (only 1: compute; only 1: exists 0; only 1: reflexivity).	5.05058193207	12701
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.3.35.19.16	synth with cache (only 1: inversion 1; only 1: apply (neq_succ_0 0); only 1: induction x; only 1: auto; only 1: easy).	14.5362768173	50433
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_1	40	1.115	synth with cache (only 1: exists 0; only 1: now nzsimpl).	22.093061924	16624
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.div_mod_eq	40	0.0.0.0.0.0.4.0	synth with cache (only 1: destruct y as [| y]; only 1: reflexivity; only 1: unfold div, modulo; only 1: generalize (divmod_spec x y 0 y (le_n y)); only 1: destruct divmod as (q, u); only 1: intros (U, V); only 1: simpl in *; only 1: now rewrite mul_0_r, sub_diag, !add_0_r in U).	0.619657039642	231
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0174689292908	3
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.2	synth with cache (only 1: inversion 1; only 1: now apply pred_0).	0.0535459518433	34
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	1.9	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	0.385135173798	143
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0	synth with cache (only 1: apply gcd_divide).	0.0130801200867	1
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	12	synth with cache (only 1: apply le_0_l).	0.102454900742	64
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.0471708774567	11
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.0.1.0.2.2.6	synth with cache (only 1: destruct n; only 1: fix le_div2 1; only 1: trivial; only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	1.39882993698	1386
Coq.Arith.PeanoNat.Nat.double_twice	40	1.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0737059116364	3
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.0.8.1	synth with cache (only 1: destr_bool; only 1: nzinduct n; only 1: trivial; only 1: intros; only 1: intuition).	0.43865609169	269
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40	0.3.21.2.2.37.2	synth with cache (only 1: simpl; only 1: apply eq_true_iff_eq; only 1: split; only 1: rewrite odd_spec; only 1: fix odd_spec 1; only 1: easy; only 1: discriminate).	21.2184090614	36136
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	3.5.3.4	synth with cache (only 1: intros x y; only 1: unfold testbit, odd; only 1: fix even_spec 1; only 1: trivial).	5.162307024	3884
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	5.0.0.7	synth with cache (only 1: intros p n m; only 1: unfold odd; only 1: fix even_spec 1; only 1: easy).	5.41050601006	2771
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0214619636536	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	0.5.6.0.2	synth with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: solve_max; only 1: rewrite max_le_iff; only 1: auto).	3.10910606384	2571
Coq.Arith.PeanoNat.Nat.div2_spec	40	2	synth with cache (only 1: trivial).	0.0130910873413	3
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0142221450806	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.Nat.Even_Odd_dec	40
Coq.Arith.PeanoNat.Nat.Even_add_split	40
Coq.Arith.PeanoNat.Nat.Odd_add_split	40
Coq.Arith.PeanoNat.Nat.Even_Even_add	40	0.0.0.7	synth with cache (only 1: rewrite add_comm; only 1: intros (m', Hm) (n', Hn); only 1: exists (n' + m'); only 1: now rewrite mul_add_distr_l, Hn, Hm).	0.962688922882	300
Coq.Arith.PeanoNat.Nat.Odd_add_l	40	0.0.0.6	synth with cache (only 1: rewrite add_comm; only 1: intros (m', Hm) (n', Hn); only 1: exists (n' + m'); only 1: now rewrite mul_add_distr_l, Hn, Hm, add_assoc).	0.455308914185	95
Coq.Arith.PeanoNat.Nat.Odd_add_r	40	0.0.0.0.0.0.1	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.21960401535	45
Coq.Arith.PeanoNat.Nat.Odd_Odd_add	40	0.0.0.0.0.1.3	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, even_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	1.90825414658	445
Coq.Arith.PeanoNat.Nat.Even_add_aux	40
Coq.Arith.PeanoNat.Nat.Even_add_Even_inv_r	40	0.0.0.0.0.1	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, even_add; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.162698984146	47
Coq.Arith.PeanoNat.Nat.Even_add_Even_inv_l	40	0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?even_spec, even_add; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0617008209229	6
Coq.Arith.PeanoNat.Nat.Even_add_Odd_inv_r	40
Coq.Arith.PeanoNat.Nat.Even_add_Odd_inv_l	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, even_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.065906047821	7
Coq.Arith.PeanoNat.Nat.Odd_add_Even_inv_l	40	0.0.0.0.0.0.2	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.11785697937	9
Coq.Arith.PeanoNat.Nat.Odd_add_Even_inv_r	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0732519626617	7
Coq.Arith.PeanoNat.Nat.Odd_add_Odd_inv_l	40	0.0.0.0.0.0.1	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.090222120285	8
Coq.Arith.PeanoNat.Nat.Odd_add_Odd_inv_r	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.067920923233	7
Coq.Arith.PeanoNat.Nat.Even_mul_aux	40
Coq.Arith.PeanoNat.Nat.Even_mul_l	40	0.0.0	synth with cache (only 1: intros (n', Hn); only 1: exists (n' * m); only 1: now rewrite Hn, mul_assoc).	0.0273759365082	3
Coq.Arith.PeanoNat.Nat.Even_mul_r	40	0.0.0.0.0.1	synth with cache (only 1: rewrite <- ?even_spec, even_mul; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.130975008011	28
Coq.Arith.PeanoNat.Nat.Even_mul_inv_r	40
Coq.Arith.PeanoNat.Nat.Even_mul_inv_l	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, even_mul; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0640668869019	7
Coq.Arith.PeanoNat.Nat.Odd_mul	40
Coq.Arith.PeanoNat.Nat.Odd_mul_inv_l	40
Coq.Arith.PeanoNat.Nat.Odd_mul_inv_r	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?odd_spec, odd_mul; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0524859428406	7
Coq.Arith.PeanoNat.Nat.Even_div2	40
Coq.Arith.PeanoNat.Nat.Odd_div2	40
Coq.Arith.PeanoNat.Nat.div2_Even	40
Coq.Arith.PeanoNat.Nat.div2_Odd	40
Coq.Arith.PeanoNat.Nat.Even_Odd_div2	40
Coq.Arith.PeanoNat.Nat.Even_Odd_double	40
Coq.Arith.PeanoNat.Nat.Even_alt_Even	40	11.5	synth with cache (only 1: fix odd_spec 1; only 1: auto).	1.80703806877	1826
Coq.Arith.PeanoNat.Nat.Odd_alt_Odd	40	3.7.1	synth with cache (only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	1.14655900002	945
Coq.Arith.PeanoNat.Nat.Odd_Even_ind	40
Coq.Arith.PeanoNat.Nat.Even_Odd_ind	40	0.16.5	synth with cache (only 1: intros Base Step n; only 1: fix even_spec 1; only 1: auto).	2.28304696083	3428
Coq.Arith.PeanoNat.Nat.Odd_Even_sind	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros HSE H0 HSO n HO%Odd_alt_Odd; only 1: apply Odd_alt_Even_alt_ind with Q; only 1: intros m HSE'%Even_alt_Even; only 1: auto; only 1: assumption; only 1: intros m HSO'%Odd_alt_Odd; only 1: auto; only 1: assumption).	0.0556380748749	8
Coq.Arith.PeanoNat.Nat.Even_Odd_sind	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros HSE H0 HSO n HE%Even_alt_Even; only 1: apply Even_alt_Odd_alt_ind with P; only 1: intros m HSE'%Even_alt_Even; only 1: auto; only 1: assumption; only 1: intros m HSO'%Odd_alt_Odd; only 1: auto; only 1: assumption).	0.0556008815765	8
Coq.Arith.PeanoNat.Nat.EvenT_0	40	0.2	synth with cache (only 1: exists 0; only 1: now nzsimpl).	0.0368428230286	4
Coq.Arith.PeanoNat.Nat.EvenT_2	40	0.0.0.0.0	synth with cache (only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: simpl; only 1: now rewrite plus_n_Sm).	0.0431308746338	5
Coq.Arith.PeanoNat.Nat.OddT_1	40	0.0	synth with cache (only 1: exists 0; only 1: reflexivity).	0.0195541381836	2
Coq.Arith.PeanoNat.Nat.OddT_2	40	0.0.0.0.0	synth with cache (only 1: intros [m H]; only 1: exists (S m); only 1: rewrite H; only 1: simpl; only 1: now rewrite <- (plus_n_Sm m)).	0.042072057724	5
Coq.Arith.PeanoNat.Nat.EvenT_S_OddT	40
Coq.Arith.PeanoNat.Nat.OddT_S_EvenT	40	0.0.0.1	synth with cache (only 1: intros [m H]; only 1: exists m; only 1: apply succ_inj; only 1: now rewrite add_1_r in H).	0.0487389564514	14
Coq.Arith.PeanoNat.Nat.even_EvenT	40
Coq.Arith.PeanoNat.Nat.odd_OddT	40	6.0.0	synth with cache (only 1: unfold odd; only 1: fix even_specT 1; only 1: assumption).	0.106827974319	44
Coq.Arith.PeanoNat.Nat.EvenT_Even	40	0.1.0.1.0	synth with cache (only 1: intros [m H]; only 1: exists m; only 1: rewrite H; only 1: cbn; only 1: reflexivity).	0.21760892868	57
Coq.Arith.PeanoNat.Nat.OddT_Odd	40	1.0.6.0	synth with cache (only 1: intros [m H]; only 1: exists m; only 1: rewrite H; only 1: reflexivity).	5.70249390602	300
Coq.Arith.PeanoNat.Nat.Even_EvenT	40
Coq.Arith.PeanoNat.Nat.Odd_OddT	40
Coq.Arith.PeanoNat.Nat.EvenT_even	40
Coq.Arith.PeanoNat.Nat.OddT_odd	40	3.18	synth with cache (only 1: intros [p ->]; only 1: apply testbit_odd_0).	17.9131600857	10636
Coq.Arith.PeanoNat.Nat.EvenT_OddT_dec	40
Coq.Arith.PeanoNat.Nat.OddT_EvenT_rect	40	0.31.3	synth with cache (only 1: intros Base Step n; only 1: fix even_specT 1; only 1: auto).	3.1048810482	5445
Coq.Arith.PeanoNat.Nat.EvenT_OddT_rect	40	6.0.1	synth with cache (only 1: intros HQP HQ0 HPQ; only 1: fix OddT_EvenT_rect 1; only 1: auto).	0.0423219203949	16
Coq.Arith.PeanoNat.TestOrder.test	40	7.0	synth with cache (only 1: intros x y; only 1: Nat.order).	0.0263941287994	9
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_0_eq_stt	40	9.16.2.0	synth with cache (only 1: Nat.cases ltac:(n); only 1: auto; only 1: intro H; only 1: intuition).	21.8189778328	20240
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	1.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0130310058594	3
Coq.Logic.JMeq.JMeq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0169489383698	3
Coq.Logic.JMeq.JMeq_eq	40
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0168311595917	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0175039768219	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0197770595551	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0190780162811	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0215899944305	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.1.1	synth with cache (only 1: intros A B x y H; only 1: destruct H; only 1: auto).	0.0202901363373	5
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.016154050827	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0173439979553	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.12.2	synth with cache (only 1: destruct 1; only 1: intro; only 1: dependent rewrite H; only 1: trivial).	1.40799808502	1436
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.12.6.2	synth with cache (only 1: intro m; only 1: intro n; only 1: induction n; only 1: trivial).	1.23606300354	2768
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	0.12.3.6.1.0.1.11	synth with cache (only 1: split; only 1: simpl; only 1: reflexivity; only 1: intro n; only 1: induction n; only 1: simpl in *; only 1: subst; only 1: reflexivity).	24.0068340302	64140
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0235669612885	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	37.0	synth with cache (only 1: intros; only 1: tauto).	0.776350975037	1706
Coq.Logic.Classical_Prop.not_imply_elim	40	12.4	synth with cache (only 1: intros; only 1: tauto).	0.405180931091	609
Coq.Logic.Classical_Prop.not_imply_elim2	40	0	synth with cache (only 1: auto using PeanoNat.Nat.Private_Tac.eq_sym).	0.0142478942871	1
Coq.Logic.Classical_Prop.imply_to_or	40	12.0.4	synth with cache (only 1: intros Ext A Ha; only 1: intuition; only 1: tauto).	0.947110891342	1059
Coq.Logic.Classical_Prop.imply_to_and	40	5.1.1	synth with cache (only 1: intros; only 1: apply NNPP; only 1: tauto).	0.0980749130249	42
Coq.Logic.Classical_Prop.or_to_imply	40	0	synth with cache (only 1: tauto).	0.0175759792328	1
Coq.Logic.Classical_Prop.not_and_or	40	0.12	synth with cache (only 1: intros n m; only 1: tauto).	0.47997713089	253
Coq.Logic.Classical_Prop.or_not_and	40	2	synth with cache (only 1: tauto).	0.188585042953	58
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0201981067657	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0203320980072	1
Coq.Logic.Classical_Prop.imply_and_or	40	0.0.4.1	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: auto; only 1: auto).	0.0262341499329	9
Coq.Logic.Classical_Prop.imply_and_or2	40	0	synth with cache (only 1: tauto).	0.0241529941559	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.22.13	synth with cache (only 1: intro m; only 1: destruct m; only 1: eauto).	0.86346411705	2329
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	1.49	synth with cache (only 1: red; only 1: eauto).	0.294932126999	1334
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	1.1.0.0.0.1.0.0.0.6.0.0	synth with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: exact p2b; only 1: exact b2p; only 1: exact B; only 1: exact h; only 1: cbn; only 1: auto; only 1: auto; only 1: auto).	3.77240991592	3163
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.26.3	synth with cache (only 1: intro n; only 1: subst; only 1: auto).	0.6760430336	1744
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40	0.33.42	synth with cache (only 1: intros P notall; only 1: fix OddT_EvenT_rect 1; only 1: firstorder).	26.6199660301	77099
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.46	synth with cache (only 1: subst; only 1: reflexivity).	0.426330089569	1407
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_conform	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_conform_alt	40	0.0.0.0	synth with cache (only 1: revert start b; only 1: refine (fix loop start b := match P_dec start with | left yes => exist _ start _ | right no => let (n, r) := loop (S start) (inv_before_witness start b no) in exist _ n _ end); only 1: apply (Rstop yes); only 1: apply (Rnext no r)).	0.0388011932373	4
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.rel_ls_post	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.rel_ls_lower_bound	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.constructive_indefinite_ground_description_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_rel	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_from_0_rel	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.constructive_indefinite_ground_description_nat_direct	40	0.0.0.0	synth with cache (only 1: intro e; only 1: destruct (linear_search_from_0_conform e) as [found r]; only 1: exists found; only 1: apply (rel_ls_post r)).	0.0426089763641	4
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest_direct	40	0.0.0.0.0.0.0	synth with cache (only 1: intro e; only 1: destruct (linear_search_from_0_conform e) as [found r]; only 1: exists found; only 1: split; only 1: apply (rel_ls_post r); only 1: intros k pk; only 1: apply (rel_ls_lower_bound r pk), Nat.le_0_l).	0.0617978572845	7
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	48.42	synth with cache (only 1: intros q; only 1: eauto with bool).	17.7388880253	59091
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.0.0.4.3.2.0.2.13.2.2.2	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: auto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	8.23453712463	13966
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0383589267731	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	9.5.16.25.7	synth with cache (only 1: intro x; only 1: red; only 1: intro H; only 1: red in H; only 1: eauto).	29.0234210491	106820
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.5.0.4.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.233514070511	206
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	14.2	synth with cache (only 1: intros; only 1: apply H).	0.930173873901	930
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	10.2.8	synth with cache (only 1: intros; only 1: intro x; only 1: apply H).	2.62651896477	2255
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	14.1138291359	9720
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0270779132843	7
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	3.0.0.1	synth with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	0.089802980423	26
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.6.0.0.0.0	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	0.655585050583	354
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	4.16.11.23	synth with cache (only 1: destruct a, b; only 1: simpl in *; only 1: destruct e; only 1: reflexivity).	1.65810799599	4961
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	6.6.0.59.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: trivial; only 1: trivial).	5.79501700401	45128
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	9.15.0.11.1	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: trivial).	2.16533398628	8962
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	0.6.1.1.18.6.2.23.51	synth with cache (only 1: red; only 1: intro x; only 1: intro H; only 1: exists x; only 1: split; only 1: assumption; only 1: destruct H as [m' [H _]]; only 1: fix OddT_EvenT_rect 1; only 1: assumption).	17.9913570881	44536
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	1.3.17.4	synth with cache (only 1: red; only 1: intro A; only 1: intro p; only 1: eauto).	4.30044913292	7240
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	20.7.3.2.1.0	synth with cache (only 1: unfold not; only 1: intros P notall; only 1: intro all; only 1: apply NNPP; only 1: apply NNPP; only 1: eauto).	38.4128038883	81805
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.0.0.10.6	synth with cache (only 1: intros; only 1: destruct H as [m H]; only 1: intro K; only 1: apply H; only 1: trivial).	1.63657093048	2404
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.1	synth with cache (only 1: intros U P x y p q H; only 1: rewrite (M.proof_irrelevance _ q (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0453760623932	16
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	10.802054882	6424
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0237319469452	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0475881099701	41
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	synth with cache (only 1: intros A B f g H x; only 1: rewrite H; only 1: auto).	0.0193510055542	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0225129127502	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0194661617279	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	2.10.0.0	synth with cache (only 1: apply (fun P k => forall_eq_rect _ P k _ H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.335529088974	357
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	synth with cache (only 1: reflexivity).	0.0131368637085	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	synth with cache (only 1: reflexivity).	0.010803937912	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0204899311066	4
Coq.Logic.HLevels.false_hprop	40	2.1.2	synth with cache (only 1: intro H1; only 1: intro n; only 1: elim H1).	0.0178771018982	8
Coq.Logic.HLevels.true_hprop	40	4.3.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: reflexivity || destruct H).	0.0194280147552	10
Coq.Logic.HLevels.not_hprop	40	0.0.1.0.0	synth with cache (only 1: intros p q; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).	0.0231189727783	6
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	1.5.2.7.9.1	synth with cache (only 1: intros A B f g <- H; only 1: destruct H; only 1: simpl; only 1: intro H'; only 1: rewrite eq_trans_refl_l; only 1: trivial).	5.92121601105	12769
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40	0.1.24.8	synth with cache (only 1: intros n m H; only 1: fix even_spec 1; only 1: intros; only 1: auto).	33.4047420025	9863
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.3.0.3.3	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0800051689148	118
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.0120189189911	2
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.82.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).	16.5839271545	91580
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	2.28.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.910338878632	2944
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	7.36.0	synth with cache (only 1: intros C decide H P H0; only 1: inversion 1; only 1: apply eq_dep_intro).	4.06425094604	14312
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	2.11	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.303072929382	295
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.13.0.0.11.13	synth with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	2.95584487915	8038
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0161488056183	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0206279754639	14
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.11.0.0.10.0	synth with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.13303089142	1988
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	0.1.6.10.1.4.6.5.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).	6.98937106133	17043
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.2.1	synth with cache (only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.117990970612	19
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.1.5	synth with cache (only 1: dependent rewrite H; only 1: destruct H; only 1: split).	0.152784109116	74
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	45.1.0.6	synth with cache (only 1: intros r s; only 1: destruct 1; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	7.17699289322	22365
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	3.7.20.50.1.7	synth with cache (only 1: red; only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: destruct h2; only 1: apply eq_dep_intro).	24.8886458874	133265
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	10.6.1	synth with cache (only 1: intros p2; only 1: intro eq_rect_eq; only 1: auto).	0.30114197731	767
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	0.8.0.0.5.4	synth with cache (only 1: red; only 1: intro; only 1: intro eq_dep_eq; only 1: intros p2; only 1: rewrite H; only 1: apply eq_dep_eq).	1.90309405327	4781
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	3.21.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	1.22628808022	2150
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0378239154816	25
Coq.Logic.EqdepFacts.f_eq_dep	40	1.5.1	synth with cache (only 1: intros * H; only 1: destruct H; only 1: reflexivity).	0.0228991508484	10
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.012001991272	2
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.0109169483185	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.0161809921265	9
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0381507873535	34
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	0.21.21	synth with cache (only 1: intro p; only 1: destruct p; only 1: assumption).	1.59422206879	3366
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	15.2.8.4.2.0	synth with cache (only 1: unfold not; only 1: intro m; only 1: intros; only 1: destruct H; only 1: trivial; only 1: contradiction).	14.5476958752	53173
Coq.Logic.Decidable.dec_True	40	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).	0.0166609287262	3
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.0146110057831	2
Coq.Logic.Decidable.dec_or	40	2.10.1.7	synth with cache (only 1: intro x; only 1: intro; only 1: unfold decidable; only 1: tauto).	2.3200109005	4709
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0325689315796	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0201599597931	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0240211486816	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.102406024933	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0175940990448	2
Coq.Logic.Decidable.not_or	40	1	synth with cache (only 1: tauto).	0.0368950366974	28
Coq.Logic.Decidable.not_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0231530666351	2
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0279228687286	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0202260017395	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0585210323334	2
Coq.Logic.Decidable.not_true_iff	40	17	synth with cache (only 1: tauto).	0.133822917938	373
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.0125679969788	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0195269584656	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0249660015106	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0273258686066	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0272581577301	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0350089073181	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0278930664062	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0295391082764	2
Coq.Logic.Decidable.not_or_iff	40	8.0	synth with cache (only 1: intros A P; only 1: tauto).	0.0383570194244	22
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.0187540054321	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.034569978714	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0346269607544	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.031182050705	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	0	synth with cache (only 1: discriminate).	0.0240888595581	1
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	17	synth with cache (only 1: trivial).	0.109412908554	126
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0220720767975	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	59.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: firstorder).	15.4055650234	13362
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	4.5.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite ring_morphism0; only 1: Esimpl).	0.988337039948	238
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.06340312958	43
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.0830869674683	10
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0223650932312	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0217380523682	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0202949047089	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0196130275726	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0257790088654	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	34	synth with cache (only 1: auto).	3.06729412079	2618
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	7	synth with cache (only 1: eauto).	0.0617568492889	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	15	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	14.3005280495	232
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	27	synth with cache (only 1: eauto).	4.78367304802	1107
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	3.2.3.2.3.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	27.3399560452	816
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.845154047012	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.879123926163	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	1.09972214699	9
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	1.18182492256	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.746990919113	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	10.8096158504	20
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: now destruct 1).	8.17298913002	12
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	3.1	synth with cache (only 1: intros; only 1: now destruct 1).	3.96126699448	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0232429504395	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0241270065308	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.024943113327	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	1.2.1.5.0	synth with cache (only 1: intro x; only 1: induction x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.774330854416	378
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.104449033737	8
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	19.36.3.4	synth with cache (only 1: intros x H; only 1: unfold equality; only 1: rewrite <- (Rmult_comm x); only 1: split).	32.350787878	22701
Coq.setoid_ring.Rings_R.R_one_zero	40	1	synth with cache (only 1: exact R1_neq_R0).	0.0463309288025	11
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	5	synth with cache (only 1: reflexivity).	0.0182640552521	6
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0	synth with cache (only 1: now rewrite ?H, ?IHp).	0.0246529579163	1
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	8	synth with cache (only 1: easy).	0.0267210006714	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	9	synth with cache (only 1: intuition).	0.0315499305725	10
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	7.6.20	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	1.38659191132	1157
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.17	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: congruence).	0.444060087204	201
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	5.4	synth with cache (only 1: intros a b c d ? ?; only 1: firstorder).	0.156620979309	54
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	2.0.10	synth with cache (only 1: intros z Hz; only 1: intro H; only 1: firstorder).	0.248173952103	202
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	1.3	synth with cache (only 1: intros; only 1: apply H).	0.0273938179016	6
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	2	synth with cache (only 1: firstorder).	0.100368976593	23
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	9	synth with cache (only 1: firstorder).	0.0374720096588	11
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.0190789699554	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0191488265991	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	19	synth with cache (only 1: firstorder).	0.236310005188	186
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	22	synth with cache (only 1: CRelationClasses.simpl_crelation).	1.00152397156	623
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	4.27	synth with cache (only 1: intro H1; only 1: firstorder).	0.834114074707	1102
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	8.1.19	synth with cache (only 1: intros z Hz; only 1: intro H; only 1: firstorder).	1.53797793388	1316
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	21.3.3	synth with cache (only 1: intros n m H; only 1: intuition; only 1: firstorder).	1.66741108894	1985
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	26.13	synth with cache (only 1: intros; only 1: firstorder).	1.80916976929	1727
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	20.18	synth with cache (only 1: intros; only 1: firstorder).	1.42830014229	1440
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	25.10	synth with cache (only 1: intros x y H; only 1: firstorder).	2.11878585815	1887
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	17	synth with cache (only 1: intuition).	0.230094194412	180
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	15	synth with cache (only 1: firstorder).	0.104295969009	91
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	5.2	synth with cache (only 1: elim ARth; only 1: firstorder).	0.0728089809418	18
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.02476978302	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.0268528461456	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0119171142578	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0108201503754	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0116100311279	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.2	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0369110107422	4
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0157449245453	1
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.5.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0297648906708	8
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0	synth with cache (only 1: exact (SRadd_ext SReqe)).	0.0130388736725	1
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	1	synth with cache (only 1: exact (SRmul_ext SReqe)).	0.013710975647	2
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0134389400482	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0120840072632	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0134308338165	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0162229537964	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).	3.62051796913	686
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	4.4.0.1.2	synth with cache (only 1: intros w; only 1: induction w as [| a w IHw]; only 1: simpl; only 1: norm; only 1: let rec rrefl := gen_reflexivity Rsth in rrefl).	0.752876996994	455
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0209481716156	3
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0198788642883	3
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	58	synth with cache (only 1: now rewrite ?IHp, ?IHpe, ?Pms_ok, ?Ring_polynom.Pmul_ok).	5.76928305626	1725
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	5.0.28.46	synth with cache (only 1: intros q; only 1: fix Even_alt_Even 1; only 1: intros; only 1: auto).	26.7391200066	11283
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0196239948273	1
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	10	synth with cache (only 1: firstorder).	0.0881118774414	25
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	18.10	synth with cache (only 1: intro b1; only 1: firstorder  (subst; auto)).	2.30481100082	1707
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	19	synth with cache (only 1: firstorder).	8.56653189659	437
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	19.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	7.97526097298	3830
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	17.2	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	2.76882100105	901
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	36.4.36	synth with cache (only 1: elim ARth; only 1: simpl; only 1: firstorder).	14.6452150345	10490
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	55	synth with cache (only 1: firstorder).	5.84870004654	3907
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40	0.1.0.35.2.0.6	synth with cache (only 1: induction P as [| p P IHP| P2 IHP1 p P3 IHP2]; only 1: easy; only 1: simpl; only 1: f_equiv; only 1: rewrite Pos.add_comm; only 1: apply jump_add; only 1: easy).	39.826184988	23081
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P as [| | P2 IHP1 p P3 IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	17.5293269157	2673
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	0.0.0.1.0.1.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).	19.2151010036	1159
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	synth with cache (only 1: reflexivity).	0.0173840522766	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	14.14.1	synth with cache (only 1: intros x; only 1: intros Base Step n; only 1: firstorder).	5.22027301788	3379
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.1.0.2	synth with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0484580993652	7
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	0.5.6.9	synth with cache (only 1: intros a b n; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	2.00404906273	1072
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	1.0.0.9.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.624633073807	195
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40	53	synth with cache (only 1: firstorder).	26.3459019661	1549
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	0.1.5.11.2.4.1	synth with cache (only 1: unfold Qeq, Qplus; only 1: red; only 1: intuition; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	4.33160805702	1597
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.0220799446106	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	4	synth with cache (only 1: simpl_relation).	0.124590873718	20
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0814580917358	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	4.5.3.4.5	synth with cache (only 1: red; only 1: induction s as [| c l IHl x r IHr]; only 1: constructor; only 1: simpl; only 1: intuition_in).	4.05099415779	2996
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0446119308472	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.781012058258	587
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0161600112915	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.021075963974	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0506269931793	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.0.1.0.0.1.0.0.1.1.0	synth with cache (only 1: induct s x; only 1: ok; only 1: descolor; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: descolor; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: descolor; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	1.94739699364	395
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0220189094543	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	7	synth with cache (only 1: ok).	0.114446878433	21
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	2.0.9	synth with cache (only 1: split; only 1: now simpl; only 1: auto).	0.0926928520203	70
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.2.2.98	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: easy).	5.33551287651	9721
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0253520011902	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	7.35.2	synth with cache (only 1: intros; only 1: elim H; only 1: now simpl).	6.02234220505	8514
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40	2.24.6	synth with cache (only 1: revert acc; only 1: fix even_specT 1; only 1: trivial).	7.34228897095	7450
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.2.1.1.0.0.1	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: apply fold_add_spec; only 1: rewrite fold_add_spec; only 1: tauto).	1.48359203339	383
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0716841220856	9
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.1.2.0.3.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: destruct t as [| [| ] l x r]; only 1: invrb; only 1: intros; only 1: invrb; only 1: intuition_in).	0.655421972275	365
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0661239624023	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.10.0.0.0	synth with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.46759080887	844
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.8.0.8.0.3.0	synth with cache (only 1: destruct s; only 1: right; only 1: assumption; only 1: intuition; only 1: descolor; only 1: auto; only 1: ok).	7.91891908646	9507
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	5.0	synth with cache (only 1: intros; only 1: auto).	0.0430021286011	7
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	13	synth with cache (only 1: now rewrite ?Ha).	0.138688802719	104
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	4.5.1.0	synth with cache (only 1: intros [| x acc]; only 1: easy; only 1: simpl; only 1: auto).	1.74446392059	795
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.9.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	1.00374412537	545
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.2.0	synth with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0548570156097	13
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip; only 1: intros HE; only 1: auto_tc).	0.0679099559784	10
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0646800994873	9
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.1.0.0.0.2	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.291199922562	99
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0857360363007	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	3	synth with cache (only 1: solve_proper).	0.132359027863	46
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.1.4	synth with cache (only 1: split; only 1: now try Nat.order'; only 1: congruence).	0.0817968845367	48
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	2.0	synth with cache (only 1: intro n; only 1: trivial).	0.0219080448151	4
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	31	synth with cache (only 1: discriminate).	0.0783770084381	483
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	0.0.1.1.0.3	synth with cache (only 1: fix odd_spec 1; only 1: intro n; only 1: rewrite odd_spec; only 1: split; only 1: trivial; only 1: trivial).	0.41038608551	214
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	5.4	synth with cache (only 1: intros def_n0; only 1: now BinNat.N.nzsimpl').	0.122596025467	65
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	0.3.8	synth with cache (only 1: fix even_spec 1; only 1: intro H; only 1: destr_bool).	0.962554931641	465
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	0.7.27.55	synth with cache (only 1: intros l2; only 1: fix odd_spec 1; only 1: intros H; only 1: trivial).	13.6109931469	34454
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	2.11	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	1.49855184555	984
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	11	synth with cache (only 1: destr_bool).	0.226444959641	68
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	1.0.0.0.1.5	synth with cache (only 1: intros; only 1: case u; only 1: intuition; only 1: easy'; only 1: intuition; only 1: now subst).	1.0613629818	476
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.1.1.0.2.19	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	5.67032003403	5135
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	1.0.2.8	synth with cache (only 1: intro m; only 1: fix odd_spec 1; only 1: intro q; only 1: auto).	3.14337587357	1583
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40	4.13.8	synth with cache (only 1: intros H; only 1: fix even_specT 1; only 1: trivial).	3.33487391472	2485
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	11.14.30.4.5.8	synth with cache (only 1: intros H; only 1: reflexivity || destruct H; only 1: simpl; only 1: constructor; only 1: constructor; only 1: constructor).	19.3764519691	51976
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0342359542847	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	28.30.1.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	3.85115504265	13180
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0325779914856	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0326900482178	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	1.0.14	synth with cache (only 1: fix even_spec 1; only 1: symmetry; only 1: auto).	0.410223007202	349
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40	2.2.0.17.16	synth with cache (only 1: intros H0; only 1: fix odd_spec 1; only 1: unfold compare, equal; only 1: intro n; only 1: eauto with bool).	3.1213760376	5267
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	0.18.2	synth with cache (only 1: intro; only 1: fix odd_spec 1; only 1: trivial).	3.08457803726	4041
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	1.9.6.12	synth with cache (only 1: repeat red; only 1: intros f H l; only 1: fix Even_Odd_double 1; only 1: auto).	29.3428421021	13052
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	2.3.8.0.0.0	synth with cache (only 1: unfold In; only 1: intros s s' x; only 1: revert x s s'; only 1: intros n m; only 1: fix odd_spec 1; only 1: intuition).	19.0369648933	9690
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	6.3.16.7	synth with cache (only 1: destruct s; only 1: intuition discriminate; only 1: fix even_spec 1; only 1: intuition congruence).	6.90578508377	9394
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	6.8.4.1	synth with cache (only 1: intro f; only 1: intros s1; only 1: fix odd_spec 1; only 1: intuition congruence).	2.53541111946	2234
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	6.0.3	synth with cache (only 1: intros x y Hin; only 1: rewrite partition_filter; only 1: reflexivity).	0.27311205864	196
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	7.14.0	synth with cache (only 1: unfold In; only 1: fix even_spec 1; only 1: auto).	11.9065330029	10227
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40	8.4.4.2.0	synth with cache (only 1: unfold In; only 1: intros ? H; only 1: intros n'; only 1: fix odd_specT 1; only 1: auto).	10.402723074	7121
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	1.1.15	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: assumption).	0.239337921143	217
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40	5.23.37	synth with cache (only 1: compute; only 1: fix odd_specT 1; only 1: assumption).	13.1192429066	28116
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0289640426636	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	1.0.2	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).	0.061989068985	6
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0310029983521	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	0.2.0	synth with cache (only 1: rewrite union_spec; only 1: intros; only 1: auto).	0.0340850353241	5
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.029571056366	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	3.0.0	synth with cache (only 1: rewrite inter_spec; only 1: intros; only 1: intuition).	0.0884890556335	25
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.1.3.21	synth with cache (only 1: intros H; only 1: intros E; only 1: rewrite inter_spec; only 1: auto).	0.473723888397	414
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1.1	synth with cache (only 1: intuition; only 1: rewrite diff_spec; only 1: auto).	0.0348260402679	5
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.1.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0446860790253	5
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0499210357666	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.0.0	synth with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0326550006866	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	4.2	synth with cache (only 1: symmetry; only 1: intuition).	0.0441219806671	13
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	16	synth with cache (only 1: intuition).	0.293682098389	211
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.0.0.1.13	synth with cache (only 1: split; only 1: intuition; only 1: intros; only 1: apply -> subset_spec; only 1: auto).	1.57322692871	1010
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0	synth with cache (only 1: intuition).	0.0273489952087	1
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0.0.0.0.5	synth with cache (only 1: split; only 1: rewrite singleton_spec; only 1: auto with relations; only 1: rewrite singleton_spec; only 1: auto with relations).	0.110096931458	34
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	0.4.2.20.1.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: apply -> Forall_forall; only 1: intuition; only 1: simpl; only 1: intuition).	30.7654550076	27216
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	1.2.1	synth with cache (only 1: intros E; only 1: rewrite remove_spec; only 1: intuition).	0.058002948761	14
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0382740497589	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0385842323303	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	5	synth with cache (only 1: intuition).	0.0254728794098	6
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.0.7.2	synth with cache (only 1: intuition; only 1: apply BinPos.Pos.eqb_eq; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	6.612596035	2788
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	0.0.0.0.0.0.1.1	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.65461397171	284
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	14.0.5	synth with cache (only 1: intros x x'; only 1: intros; only 1: firstorder).	1.23514103889	1105
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	17.7	synth with cache (only 1: repeat red; only 1: firstorder).	8.21154308319	5667
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.0.1.7.0.0.1	synth with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: intros P; only 1: rewrite mem_iff; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition).	10.281208992	678
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	4.2	synth with cache (only 1: intros x x' Hx; only 1: firstorder).	0.0353119373322	17
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0642349720001	4
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0609879493713	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.058837890625	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0592970848083	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	6	synth with cache (only 1: intuition).	0.0198309421539	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0	synth with cache (only 1: intuition).	0.019816160202	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	0.3	synth with cache (only 1: intros m'; only 1: fsetdec).	0.06849193573	14
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0273070335388	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	1.5.4.4	synth with cache (only 1: intros n'; only 1: intros; only 1: intros H3; only 1: intuition).	0.314742803574	261
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.2.3	synth with cache (only 1: intros H0; only 1: intros; only 1: fsetdec).	0.0519289970398	8
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0818939208984	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0286731719971	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.04474401474	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	12.37	synth with cache (only 1: intros HP HIS; only 1: fsetdec).	2.23987793922	5258
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.6	synth with cache (only 1: intros; only 1: fsetdec).	0.0632300376892	8
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0496578216553	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0363519191742	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.2.2.2.0	synth with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.977402925491	187
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0448579788208	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0711748600006	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.0586769580841	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.10887503624	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.0732970237732	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.107949018478	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.0903849601746	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.0946249961853	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	19.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	4.87620902061	3751
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	1.0	synth with cache (only 1: intros; only 1: fsetdec).	0.183192014694	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0644950866699	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0837359428406	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0766618251801	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0779528617859	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.106037139893	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.0795481204987	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.117405891418	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.191251039505	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.170083045959	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: fsetdec).	0.0358891487122	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0329859256744	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0489768981934	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0477221012115	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0504951477051	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0578210353851	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0567359924316	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0	synth with cache (only 1: fsetdec).	0.0457088947296	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0816798210144	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0547621250153	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0737998485565	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0709459781647	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.110741853714	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.128284931183	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.137820005417	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.118369102478	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.0936598777771	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0423099994659	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0631289482117	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0337588787079	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.03262591362	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0446619987488	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0478000640869	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0596289634705	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0392980575562	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0773379802704	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0921430587769	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.111824035645	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.0960669517517	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	1.9.0.18	synth with cache (only 1: constructor; only 1: intuition; only 1: fsetdec; only 1: fsetdec).	0.791007995605	694
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.0.0	synth with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.0965180397034	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.0.3	synth with cache (only 1: intros g_eq; only 1: expAdd; only 1: fsetdec).	0.327404975891	18
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.185070991516	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	1.5	synth with cache (only 1: fix le_div2 1; only 1: auto).	0.184535980225	77
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	1.1.1.1.1.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: set (l := rev (elements s)); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_spec2w, NoDupA_rev with *); only 1: auto with sets; only 1: auto with relations).	0.210525035858	132
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	0.8.3.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: eauto with *; only 1: auto with set).	13.4625630379	7254
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0289340019226	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0.1	synth with cache (only 1: rewrite cardinal_spec; only 1: Nat.order_nz; only 1: auto with set).	0.0477890968323	13
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.0393438339233	7
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	1.0.1.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto).	0.0708630084991	32
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0	synth with cache (only 1: auto with set).	0.0177440643311	1
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0306959152222	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0281858444214	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0	synth with cache (only 1: intuition_in).	0.0194380283356	1
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	1.1.1.0.16	synth with cache (only 1: right; only 1: now auto; only 1: now auto; only 1: now auto; only 1: intuition_in).	0.533276796341	377
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0559389591217	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0483388900757	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.200925111771	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	4.1.0	synth with cache (only 1: intros; only 1: apply <- mem_spec; only 1: auto with *).	0.0411880016327	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0305371284485	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	3.0.19	synth with cache (only 1: apply eq_true_iff_eq; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	1.24401497841	493
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.145401954651	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).	0.0540540218353	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.146754980087	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: auto with set).	0.023549079895	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	3.2.0.2	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	2.93657398224	468
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	2.3.0.5	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	3.27078509331	561
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	3	synth with cache (only 1: auto with set).	0.0235619544983	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0454909801483	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	7.0	synth with cache (only 1: intros; only 1: intuition).	0.348393917084	84
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1.1.0	synth with cache (only 1: apply subset_1; only 1: intros E; only 1: intuition).	0.0317180156708	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0465290546417	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	4.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0468969345093	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	1.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	0.054741859436	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0270562171936	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	3.4.6.0.1	synth with cache (only 1: intros; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	8.56074714661	1809
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0	synth with cache (only 1: auto with set relations).	0.0239989757538	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0641300678253	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	1.1	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.0564298629761	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.0235860347748	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0337851047516	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0255479812622	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0262370109558	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0248329639435	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	1	synth with cache (only 1: auto with set relations).	0.0388898849487	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0221390724182	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: auto with set).	0.0231928825378	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0225639343262	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0886268615723	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0236630439758	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0271439552307	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0248429775238	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0241830348969	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0235450267792	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0230579376221	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.023097038269	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0.0	synth with cache (only 1: intros; only 1: auto with set).	0.0305960178375	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0223259925842	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0215549468994	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0624010562897	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0298569202423	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0278480052948	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0.0	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.137850999832	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0236260890961	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0229139328003	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.039803981781	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	1.2.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).	6.25619792938	1576
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	synth with cache (only 1: auto with set).	0.0217001438141	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	2.0.0.1.0	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	0.205634117126	47
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	2.0.0.0.0.0.0.30	synth with cache (only 1: inversion 1; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: intuition).	32.075450182	32784
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.9.1.11	synth with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- not_mem_iff; only 1: auto with set).	3.7616109848	2963
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	1.0.0.0.1.1.2.0.0.0.6	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	3.07855701447	1890
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.0905940532684	21
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	16	synth with cache (only 1: solve_proper).	0.351830005646	111
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	10.0	synth with cache (only 1: intros; only 1: auto with set).	0.100180864334	79
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0290138721466	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.1.7	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	23.6483271122	7521
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	9.2.0.0.0.3	synth with cache (only 1: intro H; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: auto with set).	1.30424904823	1168
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.10.3.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	0.543501853943	369
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0496170520782	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.0	synth with cache (only 1: intros s' s x **; only 1: tauto).	0.485939979553	2
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0	synth with cache (only 1: intros s' s x **; only 1: tauto).	0.685877084732	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	2	synth with cache (only 1: intuition).	0.0239670276642	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	1.28.6	synth with cache (only 1: intros n; only 1: intros P ? ? l; only 1: fsetdec).	38.0288190842	32602
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	synth with cache (only 1: fsetdec).	0.229239940643	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.4	synth with cache (only 1: intros; only 1: intuition).	0.0265440940857	6
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1.14	synth with cache (only 1: intros m Hm; only 1: fsetdec).	0.85848402977	772
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	1.2.13	synth with cache (only 1: intros y H; only 1: red; only 1: fsetdec).	0.977288007736	993
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	18.17	synth with cache (only 1: intros a b c; only 1: fsetdec).	6.22261691093	7215
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0.4	synth with cache (only 1: intros n0 H2 H3; only 1: fsetdec).	0.150568962097	15
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.135663032532	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	5.8	synth with cache (only 1: intros a b; only 1: fsetdec).	0.548347949982	262
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	1.11.4	synth with cache (only 1: intros s1; only 1: intro; only 1: fsetdec).	2.28258299828	1564
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0.5	synth with cache (only 1: intros b s2' Rec n m s1; only 1: fsetdec).	0.405348062515	52
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	3.2.5	synth with cache (only 1: intros H i j ? E; only 1: rewrite singleton_spec; only 1: intuition).	0.371526956558	109
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	19.3	synth with cache (only 1: intros a b c d ? ? ?; only 1: fsetdec).	1.47126793861	1864
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.2	synth with cache (only 1: intros l1; only 1: fsetdec).	0.183754205704	46
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	9.10	synth with cache (only 1: intros P z H H0 x; only 1: fsetdec).	2.98287582397	2187
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	13.2.8.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	10.3539409637	11645
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	7.3.1.1	synth with cache (only 1: fix even_spec 1; only 1: intro q; only 1: rewrite even_spec; only 1: intuition).	1.34052610397	1172
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40	5.3	synth with cache (only 1: fix gcd_greatest 1; only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0928428173065	48
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	3.0.0.4	synth with cache (only 1: split; only 1: intro; only 1: intuition_in; only 1: intuition).	0.24592089653	40
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	4	synth with cache (only 1: intuition_in).	0.0687789916992	38
Coq.MSets.MSetGenTree.Props.lt_leaf	40	4.0.0	synth with cache (only 1: intuition_in; only 1: red; only 1: easy).	0.0469620227814	14
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0236549377441	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.2.2.9.1.7.4	synth with cache (only 1: intros Base Step n; only 1: intros HF i d Hl; only 1: repeat red; only 1: intros x y; only 1: intros H; only 1: intuition_in; only 1: MX.order).	11.0888679028	10277
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.3.3	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.124623060226	33
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	1.1.2.1.9	synth with cache (only 1: intros l' x H; only 1: contradict H; only 1: intros H1; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.679533004761	1016
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.0.1.3	synth with cache (only 1: intros Base Step n; only 1: intro H; only 1: intros; only 1: eauto).	0.0333139896393	8
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0252001285553	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	synth with cache (only 1: eauto).	0.0158679485321	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	2.1.3.1.6.0.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: elim_compare x y; only 1: order; only 1: eauto; only 1: order).	14.045178175	9562
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	2.0.0.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0399980545044	9
Coq.MSets.MSetGenTree.Props.empty_spec	40	3.71	synth with cache (only 1: intros H; only 1: auto).	0.439772844315	3530
Coq.MSets.MSetGenTree.Props.empty_ok	40	4	synth with cache (only 1: auto with bool).	0.0134618282318	5
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	6.0.0	synth with cache (only 1: fix even_spec 1; only 1: intro m; only 1: trivial).	0.0385799407959	22
Coq.MSets.MSetGenTree.Props.mem_spec	40	6.29	synth with cache (only 1: fix odd_specT 1; only 1: trivial).	10.7526111603	14899
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40	1.0.0.0.12.3.1.18	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: inversion 1; only 1: destruct l as [| x xs]; only 1: simpl; only 1: inversion 1; only 1: now auto; only 1: simpl; only 1: eauto).	33.9452960491	45689
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40	0.5.0.7	synth with cache (only 1: fix even_specT 1; only 1: induction s as [| c l IHl y r IHr]; only 1: intuition_in; only 1: auto).	0.730704069138	677
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40	1.23	synth with cache (only 1: fix odd_specT 1; only 1: auto).	8.34535002708	5498
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	2.5.1.0.0.1.1.8	synth with cache (only 1: intro m; only 1: destruct 1; only 1: fix odd_spec 1; only 1: unfold Subset; only 1: intuition; only 1: unfold Subset; only 1: fix even_spec 1; only 1: trivial).	28.765280962	9552
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40	1.0.17.8	synth with cache (only 1: intro; only 1: fix Even_alt_Even 1; only 1: intro q; only 1: trivial).	29.3622500896	32273
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40	1.0.0.5.4.2.1.0.0.3	synth with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: simpl; only 1: intros; only 1: f_equal; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: simpl; only 1: unfold elements; only 1: now rewrite elements_node, app_assoc_reverse).	22.3254959583	16597
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	2.10.8.38.7.30	synth with cache (only 1: intro l; only 1: destruct l; only 1: constructor; only 1: reflexivity; only 1: simpl in *; only 1: auto).	20.0672140121	60644
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	8.13	synth with cache (only 1: fix even_spec 1; only 1: trivial).	7.91421198845	6742
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	2.5.0.21.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hy; only 1: rewrite Hx; only 1: auto with *).	8.54871511459	9389
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	1	synth with cache (only 1: firstorder).	0.0512459278107	30
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	3.12.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: fix le_div2 1; only 1: auto).	1.85326504707	1964
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	15	synth with cache (only 1: firstorder).	0.846827030182	954
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	3.10	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha).	2.0376098156	460
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	17.23	synth with cache (only 1: intro l; only 1: firstorder).	9.50909399986	16088
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	0.14.8	synth with cache (only 1: intros l1 l2 Heq; only 1: intros H; only 1: now intros -> ->).	14.9295260906	12156
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite elements_iff; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply elements_iff).	0.0683929920197	12
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	synth with cache (only 1: compute; only 1: eauto).	0.0235290527344	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	10	synth with cache (only 1: firstorder  (subst; auto)).	0.261287927628	87
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.4.0.1.0.4.10	synth with cache (only 1: intro n; only 1: split; only 1: unfold Same_set, Included, mkEns, In; only 1: Dec.fsetdec; only 1: unfold Same_set, Included, mkEns, In; only 1: inversion 1; only 1: eauto with set relations).	3.051664114	2627
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	3.0.0.0.1.0.0.3.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intros (Hb, Ha); only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with *).	5.99129796028	3066
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	1.3.9.10	synth with cache (only 1: intros l; only 1: simpl_relation; only 1: rewrite <- H; only 1: tauto).	19.9933590889	2144
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	12.9	synth with cache (only 1: fix even_spec 1; only 1: auto).	11.2604811192	8764
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	6.9	synth with cache (only 1: fix even_spec 1; only 1: auto).	1.22434282303	882
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.0.0.0.0.0.0.0.0.0.1.4	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	2.23132109642	956
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	1.1	synth with cache (only 1: intros; only 1: intuition).	0.0268919467926	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.0.0.0.1.6	synth with cache (only 1: unfold singleton; only 1: constructors; only 1: intros; only 1: inv; only 1: auto; only 1: auto).	22.1063759327	288
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).	0.0262360572815	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.0.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0403470993042	10
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	1.1	synth with cache (only 1: intros; only 1: intuition).	0.345710992813	109
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	3.1.1.0.0	synth with cache (only 1: induction s; only 1: intros; only 1: intuition; only 1: intros; only 1: auto).	0.0834650993347	13
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: constructors).	0.0231330394745	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	0.0.0.1.1.0.3.1	synth with cache (only 1: destruct s; only 1: unfold Empty; only 1: intros; only 1: intro; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).	1.42047405243	675
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: auto).	0.027055978775	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	34.3250629902	5494
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	3.14	synth with cache (only 1: fix even_spec 1; only 1: firstorder using Sorted_inv).	8.38191199303	2553
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	4.4	synth with cache (only 1: revert H; only 1: trivial).	0.0250351428986	14
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	7.10	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	2.66077208519	2075
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	4.15	synth with cache (only 1: fix Odd_alt_Odd 1; only 1: intuition).	2.22168397903	784
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.14	synth with cache (only 1: fix Odd_alt_Odd 1; only 1: auto).	8.84035992622	3416
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	10	synth with cache (only 1: split).	0.0186719894409	21
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.3.5.12	synth with cache (only 1: intros x H; only 1: unfold singleton; only 1: rewrite InA_cons, InA_nil; only 1: tauto).	2.80779004097	2587
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	0.0.0.0.0.0.0.13.0	synth with cache (only 1: induction2; only 1: eauto; only 1: apply Hrec'; only 1: auto; only 1: auto; only 1: auto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	18.988517046	6791
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0868899822235	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	3.7	synth with cache (only 1: fix even_spec 1; only 1: intuition).	1.99519896507	627
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	0.6	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	0.778131008148	226
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	2	synth with cache (only 1: auto).	0.0156829357147	3
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	4.24	synth with cache (only 1: intro x; only 1: inversion 1).	0.395665168762	441
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	11.1.0.0	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: easy).	4.00030398369	2342
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	3.0	synth with cache (only 1: intros; only 1: intuition).	0.0232861042023	5
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	1.1.0.0	synth with cache (only 1: intro l; only 1: intro H; only 1: inv; only 1: auto).	0.0312922000885	6
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	3.1.3	synth with cache (only 1: intros m H; only 1: inv; only 1: intuition).	0.0465569496155	26
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	0.0.2.0.1.0.7.1	synth with cache (only 1: intros l; only 1: intro n; only 1: induction l as [| a l IH]; only 1: intros; only 1: discriminate; only 1: inversion_clear 1; only 1: rewrite InA_cons; only 1: auto).	8.54468989372	4536
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.0.0.0.0.0.7	synth with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: simpl; only 1: inversion 1).	0.424302101135	207
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	1.0	synth with cache (only 1: intro s; only 1: auto).	0.0222101211548	3
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	4.1.0	synth with cache (only 1: intros n H; only 1: inv; only 1: intuition).	0.0308830738068	8
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	12	synth with cache (only 1: solve_proper).	0.702929019928	386
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	6.5.13.0.1.6.14	synth with cache (only 1: intro l; only 1: intro m; only 1: destruct l; only 1: revert m; only 1: fix OddT_EvenT_rect 1; only 1: intros; only 1: auto).	34.9398181438	43020
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40	0.2.33.5.6	synth with cache (only 1: intros b s2'; only 1: intro E; only 1: fix odd_specT 1; only 1: intros Hn; only 1: eauto with bool).	22.2527880669	36750
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0528879165649	1
Coq.Floats.FloatLemmas.Z_frexp_spec	40
Coq.Floats.FloatLemmas.Z_ldexp_spec	40
Coq.Relations.Relation_Operators.Simple_Lexicographic_Product.slexprod_lexprod	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.8.0	synth with cache (only 1: red; only 1: induction 1 as [| m _]; only 1: auto with sets; only 1: auto with sets).	0.0459871292114	53
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.2.2.0.0.0.15	synth with cache (only 1: induction 1 as [? ?| ]; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	1.06959080696	1242
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.0.8.1.5	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y; only 1: auto; only 1: constructor).	0.221600055695	279
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	0.0.8.1.6	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: constructor).	0.261581897736	630
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.4.0.3	synth with cache (only 1: induction 1 as [x y H| x y z H H0 IH0]; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.318077087402	350
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.2.0.0.4	synth with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.662297010422	456
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.0.1.0.0.2.2.0.0.4	synth with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	8.48647284508	6575
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.4.0.0.3.1.1	synth with cache (only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.350131034851	445
Coq.ssr.ssreflect.master_key	40	13	synth with cache (only 1: tauto).	0.0212500095367	60
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.2.27	synth with cache (only 1: unfold not; only 1: unlock; only 1: discriminate).	0.724651098251	1603
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.0137708187103	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.16	synth with cache (only 1: destruct 1; only 1: auto).	0.224598884583	330
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.0127539634705	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.0117688179016	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2.1.1	synth with cache (only 1: red; only 1: intros h1 h2; only 1: intuition).	0.120637178421	7
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0129659175873	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.0124011039734	1
Coq.ssr.ssrbool.is_true_true	40	17	synth with cache (only 1: reflexivity).	0.0269348621368	126
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: discriminate).	0.00872898101807	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.0113899707794	2
Coq.ssr.ssrbool.negbT	40	0.2.2	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0169348716736	7
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.01176404953	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.0120689868927	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.0113530158997	1
Coq.ssr.ssrbool.negbK	40	3.21	synth with cache (only 1: intro x; only 1: Bool.destr_bool).	0.167332172394	312
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.00985193252563	1
Coq.ssr.ssrbool.negb_inj	40	0.33	synth with cache (only 1: intro p; only 1: Bool.destr_bool).	0.250835895538	585
Coq.ssr.ssrbool.negbLR	40	4	synth with cache (only 1: Bool.destr_bool).	0.0160899162292	5
Coq.ssr.ssrbool.negbRL	40	5	synth with cache (only 1: Bool.destr_bool).	0.0167319774628	6
Coq.ssr.ssrbool.contra	40	0.0.16	synth with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.318536043167	319
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.106332063675	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0153980255127	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0154180526733	1
Coq.ssr.ssrbool.contraT	40	2.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0428960323334	23
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.0134150981903	1
Coq.ssr.ssrbool.contraFT	40	1.9	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0979800224304	34
Coq.ssr.ssrbool.contraFN	40	1.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.125900030136	61
Coq.ssr.ssrbool.contraTF	40	2.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0651400089264	23
Coq.ssr.ssrbool.contraNF	40	2.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.102380990982	36
Coq.ssr.ssrbool.contraFF	40	1.2.18	synth with cache (only 1: destruct c; only 1: by case : b  => // ->; only 1: by move /contra =>notb_notc /negbT).	0.534913063049	469
Coq.ssr.ssrbool.contra_not	40	3.6	synth with cache (only 1: intro; only 1: auto).	0.026388168335	25
Coq.ssr.ssrbool.contraPnot	40	0	synth with cache (only 1: by auto).	0.0104939937592	1
Coq.ssr.ssrbool.contraTnot	40	2.5	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0301959514618	9
Coq.ssr.ssrbool.contraNnot	40	0	synth with cache (only 1: by case : b ; auto).	0.0119669437408	1
Coq.ssr.ssrbool.contraPT	40	0.11.12	synth with cache (only 1: Bool.destr_bool; only 1: red; only 1: intuition).	2.20723009109	2469
Coq.ssr.ssrbool.contra_notT	40	1.11.13	synth with cache (only 1: Bool.destr_bool; only 1: red; only 1: intuition).	2.47239589691	2271
Coq.ssr.ssrbool.contra_notN	40	1	synth with cache (only 1: by case : b  => //= /(_ isT) HP /(_ HP)).	0.0190389156342	2
Coq.ssr.ssrbool.contraPN	40	2.1.1.1.0	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: by case : b  => //= /(_ isT) nP /nP).	0.0351889133453	11
Coq.ssr.ssrbool.contraFnot	40	1.0.0.0.0.0.2	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: by case : b ; auto).	0.0441069602966	11
Coq.ssr.ssrbool.contraPF	40	1	synth with cache (only 1: by case : b  => //=; move /(_ isT) =>HP /HP).	0.0204870700836	2
Coq.ssr.ssrbool.contra_notF	40	0	synth with cache (only 1: by case : b  => // /(_ isT)).	0.0159759521484	1
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.012946844101	1
Coq.ssr.ssrbool.BoolIf.ifT	40	2	synth with cache (only 1: by case : b ).	0.0170421600342	3
Coq.ssr.ssrbool.BoolIf.ifF	40	1	synth with cache (only 1: by case : b ).	0.0144379138947	2
Coq.ssr.ssrbool.BoolIf.ifN	40	2	synth with cache (only 1: by case : b ).	0.0151901245117	3
Coq.ssr.ssrbool.BoolIf.if_same	40	1	synth with cache (only 1: by case  def_b: b ; constructor).	0.0114071369171	2
Coq.ssr.ssrbool.BoolIf.if_neg	40	0	synth with cache (only 1: by case b).	0.0114281177521	1
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.011402130127	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.0109100341797	1
Coq.ssr.ssrbool.BoolIf.ifE	40	10	synth with cache (only 1: trivial).	0.0255258083344	21
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0159618854523	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0152821540833	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.0107140541077	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	1.1.43	synth with cache (only 1: intros [?| ?]; only 1: by case Hb; auto; only 1: by case Hb; auto).	1.19964694977	1291
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	0.25	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).	0.675635099411	433
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.23	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).	0.596570968628	371
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	0.29	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case Hb => [? _ H ?|? H _]; case : H ).	0.59884595871	593
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.30	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.412052869797	483
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40	16	synth with cache (only 1: by case : Pb ; constructor; auto).	0.071968793869	108
Coq.ssr.ssrbool.Reflect.rwP	40	14	synth with cache (only 1: by case : Pb ; constructor; auto).	0.0615530014038	75
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	14.12.3.17	synth with cache (only 1: intro H; only 1: intro p; only 1: destruct H; only 1: intuition).	0.852280855179	3174
Coq.ssr.ssrbool.impliesPn	40	0.24.1.23	synth with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: destruct H; only 1: tauto).	2.20816087723	4747
Coq.ssr.ssrbool.unlessL	40	10.31.3	synth with cache (only 1: split; only 1: intros r s; only 1: auto).	1.15146708488	4759
Coq.ssr.ssrbool.unlessR	40	0.45.9	synth with cache (only 1: split; only 1: intros H ?; only 1: intuition).	0.614449977875	2738
Coq.ssr.ssrbool.unless_sym	40	2.1.5.2.70.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	2.09448695183	10692
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.14	synth with cache (only 1: red; only 1: by move  =>b b' ->).	0.0567009449005	94
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	0.36.1.0.0.1.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	4.93893098831	21495
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0148239135742	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.017345905304	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0192239284515	1
Coq.ssr.ssrbool.pair_andP	40	5	synth with cache (only 1: intuition).	0.0294001102448	19
Coq.ssr.ssrbool.ReflectConnectives.idP	40	2.1.7	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).	0.0626068115234	58
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.0103719234467	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0107290744781	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.0126140117645	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0104310512543	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.0111417770386	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0172548294067	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.01740193367	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.012011051178	1
Coq.ssr.ssrbool.ReflectCombinators.negPP	40
Coq.ssr.ssrbool.ReflectCombinators.andPP	40
Coq.ssr.ssrbool.ReflectCombinators.orPP	40
Coq.ssr.ssrbool.ReflectCombinators.implyPP	40
Coq.ssr.ssrbool.andTb	40	5	synth with cache (only 1: constructor).	0.0118651390076	6
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.00945496559143	1
Coq.ssr.ssrbool.andbT	40	1.2.5.16	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: intuition; only 1: repeat split).	0.250993967056	463
Coq.ssr.ssrbool.andbF	40	4.13	synth with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.131872177124	155
Coq.ssr.ssrbool.andbb	40	0	synth with cache (only 1: by case).	0.0100131034851	1
Coq.ssr.ssrbool.andbC	40	0.23	synth with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.186463117599	280
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.0102279186249	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.0129868984222	1
Coq.ssr.ssrbool.andbAC	40	0	synth with cache (only 1: by do 3!case).	0.0151798725128	1
Coq.ssr.ssrbool.andbACA	40	0.43	synth with cache (only 1: intro x; only 1: Bool.destr_bool).	0.514081001282	990
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: Bool.destr_bool).	0.0101881027222	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.00944495201111	1
Coq.ssr.ssrbool.orbT	40	1	synth with cache (only 1: Bool.destr_bool).	0.0119230747223	2
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.0100200176239	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.0101490020752	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.0461540222168	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.0151319503784	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.0157458782196	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.0151960849762	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.0218858718872	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.0123088359833	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.0125150680542	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.0126218795776	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.0128660202026	1
Coq.ssr.ssrbool.andb_orl	40	3	synth with cache (only 1: by do 3!case).	0.0196549892426	4
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by case).	0.0107021331787	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.0158050060272	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.01593708992	1
Coq.ssr.ssrbool.andb_idl	40	9.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.438411951065	253
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0169470310211	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0187029838562	1
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0233569145203	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0160751342773	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.01597905159	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0231099128723	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0240681171417	1
Coq.ssr.ssrbool.negb_and	40	1	synth with cache (only 1: Bool.destr_bool).	0.0141031742096	2
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0472409725189	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0136470794678	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0141258239746	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.013946056366	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0140080451965	1
Coq.ssr.ssrbool.implybT	40	1	synth with cache (only 1: by case : b ).	0.0112729072571	2
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.0107951164246	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.0110869407654	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.011757850647	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.0103049278259	1
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0128350257874	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0128998756409	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0129292011261	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.014456987381	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.014683008194	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.016165971756	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0178110599518	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0230038166046	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.00951790809631	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.0106320381165	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.0121059417725	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.0122549533844	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.0156018733978	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.016007900238	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.015851020813	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0228509902954	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.0158579349518	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.016273021698	1
Coq.ssr.ssrbool.addKb	40	3	synth with cache (only 1: by do 2!case).	0.0173428058624	4
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.0117638111115	1
Coq.ssr.ssrbool.addIb	40	0	synth with cache (only 1: by do 3!case).	0.0174770355225	1
Coq.ssr.ssrbool.addbI	40	0	synth with cache (only 1: by do 3!case).	0.0172328948975	1
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.0110960006714	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.0127651691437	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0144770145416	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0283670425415	1
Coq.ssr.ssrbool.addbP	40	1.0.0.0.11	synth with cache (only 1: destruct a, b; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.21738409996	128
Coq.ssr.ssrbool.subrelUl	40	7.0.0.7.31	synth with cache (only 1: intro x; only 1: intro m; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	0.883813142776	1935
Coq.ssr.ssrbool.subrelUr	40	9.16.18.34	synth with cache (only 1: intro x; only 1: Bool.destr_bool; only 1: red; only 1: intuition).	9.44151306152	24557
Coq.ssr.ssrbool.sub_refl	40	3.19	synth with cache (only 1: red; only 1: auto).	0.122172832489	276
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.0135788917542	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	3	synth with cache (only 1: by rewrite -mem_topred).	0.0140399932861	4
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	10	synth with cache (only 1: intuition).	0.0222868919373	22
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0	synth with cache (only 1: by [  ]).	0.0128748416901	1
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.0121009349823	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	1	synth with cache (only 1: reflexivity).	0.0105381011963	2
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.8	synth with cache (only 1: intro; only 1: by [  ]).	0.0237309932709	10
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0133910179138	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.0149240493774	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	6	synth with cache (only 1: auto).	0.0203020572662	7
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0178079605103	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0152599811554	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0138490200043	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0159299373627	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0170619487762	2
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.0145180225372	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.0144488811493	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.014858007431	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0187480449677	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0192739963531	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.015725851059	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0186281204224	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0156500339508	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	2	synth with cache (only 1: by move  =>? ?; auto).	0.0224928855896	3
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0202748775482	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.016618013382	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0180759429932	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0181970596313	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0226809978485	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.022469997406	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.14	synth with cache (only 1: intro n; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.153639793396	91
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0232439041138	1
Coq.ssr.ssrbool.LocalGlobal.in_on1P	40
Coq.ssr.ssrbool.LocalGlobal.in_on1lP	40	0.0	synth with cache (only 1: split => allf x; have  := allf x; rewrite inE => Q1f ; first  by case /andP ; only 1: by move  =>? ?; apply : Q1f ; apply /andP ).	0.0442860126495	2
Coq.ssr.ssrbool.LocalGlobal.in_on2P	40
Coq.ssr.ssrbool.LocalGlobal.on1W_in	40	4	synth with cache (only 1: by move  =>? ?; auto).	0.0196840763092	5
Coq.ssr.ssrbool.LocalGlobal.on1lW_in	40	0	synth with cache (only 1: by move  =>D1f ? /D1f).	0.0172619819641	1
Coq.ssr.ssrbool.LocalGlobal.on2W_in	40	5	synth with cache (only 1: by move  =>? ?; auto).	0.0204010009766	6
Coq.ssr.ssrbool.LocalGlobal.in_on1W	40	7	synth with cache (only 1: by move  =>? ?).	0.0186400413513	8
Coq.ssr.ssrbool.LocalGlobal.in_on1lW	40	1	synth with cache (only 1: by move  =>allf ? ? ?; apply : allf ).	0.017068862915	2
Coq.ssr.ssrbool.LocalGlobal.in_on2W	40	0	synth with cache (only 1: by move  =>D1f ? ? ? ? ? ?; apply : D1f ).	0.0168759822845	1
Coq.ssr.ssrbool.LocalGlobal.on1S	40	46	synth with cache (only 1: by move  =>fK injf' x; apply : injf' ).	1.03800702095	1104
Coq.ssr.ssrbool.LocalGlobal.on1lS	40	0	synth with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.0172908306122	1
Coq.ssr.ssrbool.LocalGlobal.on2S	40	10.42	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.30764603615	1501
Coq.ssr.ssrbool.LocalGlobal.on1S_in	40	9.26	synth with cache (only 1: intro n; only 1: by move  =>? ?; auto).	0.967190027237	703
Coq.ssr.ssrbool.LocalGlobal.on1lS_in	40	0	synth with cache (only 1: by move  =>fD fD1 ? ?; apply /fD1/fD ).	0.0225131511688	1
Coq.ssr.ssrbool.LocalGlobal.on2S_in	40	9.37	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.58494710922	1225
Coq.ssr.ssrbool.LocalGlobal.in_on1S	40	1	synth with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.0194861888885	2
Coq.ssr.ssrbool.LocalGlobal.in_on1lS	40	0	synth with cache (only 1: by move  =>fD2 fD1 ?; apply : fD1 ).	0.0198969841003	1
Coq.ssr.ssrbool.LocalGlobal.in_on2S	40	4	synth with cache (only 1: by move  =>fD fD1 ? ?; apply /fD1/fD ).	0.0241570472717	5
Coq.ssr.ssrbool.in_sig.in1_sig	40	56.29	synth with cache (only 1: intro H; only 1: case  =>// undecP).	4.6545290947	12359
Coq.ssr.ssrbool.in_sig.in2_sig	40
Coq.ssr.ssrbool.in_sig.in3_sig	40
Coq.ssr.ssrbool.sub_in2	40	5.1.2	synth with cache (only 1: intros; only 1: intro; only 1: auto).	0.034040927887	33
Coq.ssr.ssrbool.sub_in3	40	14.2.12	synth with cache (only 1: Bool.destr_bool; only 1: intro p; only 1: auto).	0.901865959167	1112
Coq.ssr.ssrbool.sub_in12	40	1.40	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.05033898354	1003
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0147349834442	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	5	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0174858570099	6
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0136330127716	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.01646900177	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono1W_in	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0156779289246	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	10.10.12.21.6.38	synth with cache (only 1: intro; only 1: move  =>mf mg x y; only 1: rewrite H; only 1: trivial; only 1: by [  ]; only 1: by [  ]).	23.4254179001	44327
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).	0.0312139987946	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym	40	0	synth with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0140540599823	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym	40	1	synth with cache (only 1: by move  =>fR y x; apply : fR ).	0.014683008194	2
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in	40	0	synth with cache (only 1: by move  =>hf x y hx hy axy; rewrite hf).	0.0168440341949	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in	40	0	synth with cache (only 1: by move  =>mf x y hx hy; rewrite -mf ?mem_g // !fgK ?mem_g).	0.0171041488647	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in11	40	0	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0161259174347	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in11	40	0	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0154778957367	1
Coq.ssr.ssrbool.CancelOn.onW_can	40	1	synth with cache (only 1: by move  =>? ?).	0.0151338577271	2
Coq.ssr.ssrbool.CancelOn.onW_can_in	40	1	synth with cache (only 1: by move  =>hf x hx ax; rewrite hf).	0.0163948535919	2
Coq.ssr.ssrbool.CancelOn.in_onW_can	40	0	synth with cache (only 1: by move  =>fgK x xrD xaD; apply : fgK ).	0.0156610012054	1
Coq.ssr.ssrbool.CancelOn.onS_can	40	34.33.25	synth with cache (only 1: Bool.destr_bool; only 1: intro m; only 1: auto).	2.87916707993	10457
Coq.ssr.ssrbool.CancelOn.onS_can_in	40	1	synth with cache (only 1: by move  =>fD fD1 ? ?; apply /fD1/fD ).	0.0200209617615	2
Coq.ssr.ssrbool.CancelOn.in_onS_can	40	2	synth with cache (only 1: by move  =>fD2 fD1 ?; apply : fD1 ).	0.017639875412	3
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1	synth with cache (only 1: auto).	0.00949311256409	2
Coq.ssr.ssrfun.unitE	40	2.4.18	synth with cache (only 1: intros H; only 1: destruct H; only 1: Bool.destr_bool).	0.231930017471	514
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	2	synth with cache (only 1: split).	0.0102169513702	3
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.5	synth with cache (only 1: intros; only 1: by [  ]).	0.0173559188843	7
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	2.38.23.8.33	synth with cache (only 1: intros H; only 1: red; only 1: intros n m; only 1: rewrite H; only 1: trivial).	12.5453560352	72899
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	6.0	synth with cache (only 1: intros H ?; only 1: trivial).	0.0142230987549	8
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	5.6.9.5.6.6.143.39	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro p; only 1: destruct H; only 1: assumption; only 1: intro p; only 1: destruct H; only 1: assumption).	28.3237698078	234915
Coq.ssr.ssrfun.Sig.svalP	40	2	synth with cache (only 1: apply proj2_sig).	0.0126671791077	3
Coq.ssr.ssrfun.Sig.s2valP	40
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.0119171142578	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0165979862213	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0200390815735	1
Coq.ssr.ssrfun.Injections.can_pcan	40	0.47.1.8.10	synth with cache (only 1: intros; only 1: red; only 1: intro n; only 1: rewrite H; only 1: constructor).	6.52822089195	38425
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.0142300128937	2
Coq.ssr.ssrfun.Injections.canLR	40	7.16.2	synth with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).	0.333271026611	957
Coq.ssr.ssrfun.Injections.canRL	40	10.2	synth with cache (only 1: destruct 2; only 1: auto).	0.0761480331421	130
Coq.ssr.ssrfun.Some_inj	40	0.2.12.5	synth with cache (only 1: intro x; only 1: inversion 1; only 1: destruct H; only 1: reflexivity).	0.564595937729	732
Coq.ssr.ssrfun.of_voidK	40	0.1	synth with cache (only 1: intro p; only 1: destruct p).	0.0145130157471	3
Coq.ssr.ssrfun.esymK	40	0.12.12.2	synth with cache (only 1: red; only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.449083805084	1174
Coq.ssr.ssrfun.etrans_id	40	1.9	synth with cache (only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.0306780338287	34
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	28	synth with cache (only 1: by move  =>eq_fg x).	0.0966999530792	390
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	1.53	synth with cache (only 1: red; only 1: auto).	0.579501152039	1987
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	24.10.10	synth with cache (only 1: intros Hfst Hsnd; only 1: intros H ?; only 1: auto).	0.99158000946	3042
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	2.22.131	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	38.1090769768	217882
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.01486992836	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	1	synth with cache (only 1: auto).	0.0129129886627	2
Coq.ssr.ssrunder.Under_rel.over_rel	40	1	synth with cache (only 1: now trivial).	0.0131549835205	2
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: now trivial).	0.0143549442291	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: now unfold Over_rel).	0.0127189159393	1
Coq.Sets.Uniset.defs.le_refl	40	0	synth with cache (only 1: destr_bool).	0.0125081539154	1
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0216791629791	4
Coq.Sets.Uniset.defs.seq_refl	40	4	synth with cache (only 1: auto).	0.0115039348602	5
Coq.Sets.Uniset.defs.seq_trans	40	1.0.2.0.7.5	synth with cache (only 1: destruct x; only 1: intro; only 1: unfold seq; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.08845305443	1295
Coq.Sets.Uniset.defs.seq_sym	40	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0205059051514	4
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0210590362549	3
Coq.Sets.Uniset.defs.union_empty_right	40	18.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	2.62175989151	3409
Coq.Sets.Uniset.defs.union_comm	40	13.1.4.2	synth with cache (only 1: unfold seq; only 1: simpl; only 1: destruct y; only 1: intuition).	8.09972810745	10138
Coq.Sets.Uniset.defs.union_ass	40	0.0.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: auto with bool).	0.14279294014	18
Coq.Sets.Uniset.defs.seq_left	40	1.0.3.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.604000091553	264
Coq.Sets.Uniset.defs.seq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0487539768219	9
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	2.1.1.2.1.0.0.0.0.0.1	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	31.0959768295	17451
Coq.Sets.Multiset.multiset_defs.meq_refl	40	0	synth with cache (only 1: firstorder).	0.0154819488525	1
Coq.Sets.Multiset.multiset_defs.meq_trans	40	9.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).	2.18854403496	218
Coq.Sets.Multiset.multiset_defs.meq_sym	40	5.0.0.0.0	synth with cache (only 1: destruct y; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: now f_equal).	0.0399627685547	11
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0242390632629	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0293469429016	4
Coq.Sets.Multiset.multiset_defs.munion_comm	40
Coq.Sets.Multiset.multiset_defs.munion_ass	40
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.2.3.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: destruct z; only 1: auto).	0.105793952942	34
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: reflexivity).	0.0589480400085	9
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	8.1.1.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto).	2.61282396317	1296
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	15	synth with cache (only 1: auto with sets).	0.045912027359	91
Coq.Sets.Integers.Integers_sect.le_antisym	40	1.2	synth with cache (only 1: red; only 1: Nat.order).	0.030622959137	11
Coq.Sets.Integers.Integers_sect.le_trans	40	4	synth with cache (only 1: exact Nat.le_trans).	0.0148210525513	5
Coq.Sets.Integers.Integers_sect.le_Order	40	2.0.2.0.2.0.0	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: Nat.order; only 1: red; only 1: Nat.order).	0.944045066833	487
Coq.Sets.Integers.Integers_sect.triv_nat	40	7.13	synth with cache (only 1: intro H; only 1: split).	0.584226131439	578
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.6.1.0	synth with cache (only 1: intros; only 1: intro p; only 1: red; only 1: auto).	0.0404770374298	37
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'0; only 1: auto  10 with sets).	0.280841112137	67
Coq.Sets.Relations_1_facts.contains_is_preorder	40	1.1.3	synth with cache (only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).	0.0364940166473	27
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.017972946167	3
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0184597969055	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	3.0.1.0.0	synth with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: intros; only 1: auto with sets).	0.0505120754242	20
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1.2	synth with cache (only 1: intros U R H'; only 1: auto  10 with sets).	0.0144519805908	5
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.0117008686066	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.0.5.1.3.3.1.1.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: intro T; only 1: intros x y H'; only 1: elim H'; only 1: generalize Rstar_contains_R; only 1: auto with sets; only 1: intros; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	24.1151058674	34213
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.1.0.0.0.2.1.0.0.0.3.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	3.6921980381	3540
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.7.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	29.9520218372	19522
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0533900260925	17
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0252480506897	5
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40	0.0.16.0.19	synth with cache (only 1: intro H'1; only 1: intros x A H'; only 1: exists A; only 1: assumption; only 1: auto with sets).	22.9250469208	43945
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	2.1.2.1.3.0.1.1	synth with cache (only 1: intro H'5; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: destruct 1; only 1: intuition).	2.6744120121	2227
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	0.0.0.0.5.1.2.2	synth with cache (only 1: intros H'6 H'7; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros x H'; only 1: elim H'0; only 1: intros; only 1: exists x; only 1: auto with sets).	1.5699839592	1144
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	12.6.2	synth with cache (only 1: intro n; only 1: intros H'7 H'8; only 1: contradiction).	0.73210310936	1746
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	5.0.1.61.28	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: trivial).	2.83487582207	26862
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.8	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.160700082779	37
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.0129129886627	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	4	synth with cache (only 1: intuition).	0.0122530460358	5
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	0.0.3.0.0.0.0.0.0.7	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).	19.3775448799	3902
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	1.5.1.6.2.7.0	synth with cache (only 1: intro X; only 1: split; only 1: red; only 1: split; only 1: auto with sets; only 1: simpl; only 1: auto with sets).	7.59129500389	8847
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0283510684967	11
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.0145471096039	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.0142300128937	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.131546974182	20
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.030079126358	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	0.4.3.2.0.1	synth with cache (only 1: red; only 1: intros A x y H'; only 1: red; only 1: red; only 1: intro; only 1: auto with sets).	1.72309398651	1116
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	1.1.0.2.0	synth with cache (only 1: unfold Subtract at 1; only 1: unfold Setminus at 1; only 1: intros A x y H'; only 1: elim H'; only 1: auto with sets).	0.0367538928986	9
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	8.1.6.1.3.0	synth with cache (only 1: intro X; only 1: intro H'; only 1: intros; only 1: apply NNPP; only 1: red; only 1: intuition).	6.76158094406	5816
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	1.14.12	synth with cache (only 1: intros x H; only 1: fix Even_Odd_double 1; only 1: auto  7 using Inhabited_Setminus with sets).	8.80268621445	11764
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	1.10.0	synth with cache (only 1: intro X; only 1: destruct 1; only 1: auto with sets).	0.384713888168	386
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.5.2	synth with cache (only 1: intros U R; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	0.496473073959	327
Coq.Sets.Relations_3_facts.coherent_symmetric	40	0.2.3.0.2.0.1.1.0.0.0	synth with cache (only 1: intros U R; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: red; only 1: intros z1 H'5; only 1: elim H'5; only 1: intros H'8 H'10; only 1: clear H'5; only 1: exists z1; only 1: auto with sets).	24.4240550995	20671
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.040256023407	7
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.5.1.0.0	synth with cache (only 1: intros A B x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.770145893097	175
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	0.0.0.0.0.0.0.1.1.2.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	6.65751409531	3385
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.569227933884	229
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	24.9	synth with cache (only 1: intro n; only 1: auto  6 with sets).	1.3618221283	2923
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0113770961761	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.11	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.219113826752	116
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0116610527039	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0120949745178	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	13.8	synth with cache (only 1: intros a b; only 1: auto  10 with sets).	1.34422492981	1043
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0153238773346	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	3	synth with cache (only 1: auto  9 with sets).	0.0237770080566	4
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	1.1.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	3.60472583771	2916
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	20.5312139988	14669
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.0.1.0.0.1.0.4.5	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	1.03644394875	820
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.3.3.0.0.0.0.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	27.7680900097	20136
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	2.0.1.5	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.46240901947	229
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	1.1.0.0.0.0.0.4.2.1.1.3	synth with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	4.8668820858	4444
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	1.0.2.1.1	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.111246824265	69
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.120317220688	52
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.0	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.0447678565979	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	6.0	synth with cache (only 1: intros A a b H' H'0; only 1: auto with sets).	0.0227980613708	8
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0165309906006	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0189030170441	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.0.2.2.1.0.3	synth with cache (only 1: unfold Setminus at 1; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: tauto; only 1: auto with sets).	1.19067811966	1216
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0450630187988	12
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).	0.757202148438	401
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	1.18.1.18.0.0.4	synth with cache (only 1: red; only 1: intros A B []; only 1: split; only 1: intro x; only 1: auto; only 1: intro x; only 1: auto).	23.7550158501	87319
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	7.1.0	synth with cache (only 1: intro A; only 1: unfold not; only 1: destruct 1).	0.0515880584717	70
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0	synth with cache (only 1: destruct 1).	0.0125298500061	1
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	1.8.3	synth with cache (only 1: intros n P IH0 IHS; only 1: constructor; only 1: auto with sets).	0.952702999115	1199
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0168499946594	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.12.4.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	1.29532313347	2652
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	1.16.1.6.1.0.13	synth with cache (only 1: intro n; only 1: red; only 1: destruct 1; only 1: intro m; only 1: elim (Noone_in_empty x); only 1: destruct m; only 1: auto with sets).	27.1545739174	96907
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	0.22.4.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	27.0518670082	84401
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.4.2.0	synth with cache (only 1: intros A x; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.506828069687	442
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0201320648193	6
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.5.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Noone_in_empty with sets).	0.0226240158081	8
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto using Noone_in_empty with sets; only 1: auto using Noone_in_empty with sets).	0.213469028473	95
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	1.9.0.0.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	2.16882801056	1699
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.026211977005	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	1.1.1.0.0.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.418910980225	157
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0172510147095	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0187911987305	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	2.6.6	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.350249052048	553
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.0.1	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0267670154572	4
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	0.0.1.33.3	synth with cache (only 1: Bool.destr_bool; only 1: generalize Inclusion_is_transitive; only 1: rewrite <- (Empty_set_zero' U x); only 1: intro H'2; only 1: auto with sets).	2.02043509483	6368
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	0.14.5.13	synth with cache (only 1: intro H'4; only 1: intro H'0; only 1: fix OddT_EvenT_rect 1; only 1: auto with sets).	8.45336103439	13071
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.0.2.11.12	synth with cache (only 1: intro H'3; only 1: inversion 1; only 1: trivial with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	3.29589605331	4668
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.0.1.0	synth with cache (only 1: induction 1; only 1: auto; only 1: exists x; only 1: auto using Noone_in_empty with sets).	0.0239851474762	9