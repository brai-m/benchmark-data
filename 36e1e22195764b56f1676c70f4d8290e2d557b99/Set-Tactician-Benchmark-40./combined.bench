
Coq.micromega.OrderedRing.rplus_morph_Proper	40	9.1	search with cache (only 1: intros A B H; only 1: firstorder  (subst; auto)).	0.287872076035	139
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	9.1	search with cache (only 1: intros A B H; only 1: firstorder  (subst; auto)).	0.276617050171	95
Coq.micromega.OrderedRing.ropp_morph_Proper	40	5	search with cache (only 1: firstorder  (subst; auto)).	0.043879032135	11
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	3.0.10	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: intuition).	0.593920946121	1145
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0290920734406	3
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.14	search with cache (only 1: intros; only 1: ring).	0.0559990406036	91
Coq.micromega.OrderedRing.Rplus_comm	40	0.2.2	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0344920158386	7
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0285699367523	3
Coq.micromega.OrderedRing.Rtimes_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0336289405823	6
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0	search with cache (only 1: intuition Z.Private_Tac.order).	0.0111138820648	1
Coq.micromega.Ztac.elim_concl_eq	40	14.1.13.0	search with cache (only 1: intros x y z; only 1: destruct (Z.max_spec x y); only 1: intuition; only 1: intuition Z.Private_Tac.order).	6.11749696732	6329
Coq.micromega.Ztac.elim_concl_le	40	7.0	search with cache (only 1: intros x y H; only 1: Z.order).	0.0105710029602	9
Coq.micromega.Ztac.elim_concl_lt	40	11.5	search with cache (only 1: intros a H; only 1: Z.order).	1.49802303314	3181
Coq.micromega.Ztac.Zlt_le_add_1	40	0.1.2.3.1	search with cache (only 1: intros n; only 1: intros; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l; only 1: auto).	0.276337146759	117
Coq.micromega.Ztac.add_le	40	2.0	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.00849294662476	4
Coq.micromega.Ztac.mul_le	40
Coq.micromega.ZifyInst.PropAnd	40	10	search with cache (only 1: firstorder).	0.0288610458374	21
Coq.micromega.ZifyInst.PropOr	40	1.0.2.1	search with cache (only 1: constructor; only 1: intros x; only 1: intros ? ? ? [Hl Hr]; only 1: intuition).	0.0717470645905	11
Coq.micromega.ZifyInst.PropArrow	40	4.11	search with cache (only 1: constructor; only 1: tauto).	0.213305950165	118
Coq.micromega.ZifyInst.PropIff	40	0.0.3	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.088317155838	6
Coq.micromega.ZifyInst.PropNot	40	0.0.4	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0310568809509	7
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0178470611572	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0171849727631	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0172908306122	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0170578956604	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0174210071564	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	0.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0400409698486	5
Coq.micromega.ZCoeff.ring_ops_wd	40	6.11	search with cache (only 1: destruct (SORsetoid sor) as (_, Equivalence_Symmetric, _); only 1: firstorder).	0.886796951294	452
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	1.5.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.0323150157928	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: left; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: red; only 1: auto with real).	0.0236179828644	24
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	5.4.5.1	search with cache (only 1: intros; only 1: rewrite <- (Rmult_0_l x); only 1: rewrite <- (Rmult_comm x); only 1: auto with real).	1.75240111351	1683
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	12	search with cache (only 1: intuition Z.Private_Tac.order).	0.309433937073	174
Coq.micromega.ZMicromega.lt_le_iff	40	6.13	search with cache (only 1: intros n; only 1: apply Z.lt_le_pred).	1.7542309761	737
Coq.micromega.ZMicromega.le_0_iff	40
Coq.micromega.ZMicromega.le_neg	40	4.4.1.7.1	search with cache (only 1: intros; only 1: rewrite ?Z.opp_pos_neg; only 1: intuition; only 1: Z.order; only 1: Z.order).	2.30455708504	2063
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: constructor; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	24.3392081261	16387
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0	search with cache (only 1: reflexivity).	0.026379108429	1
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.10.7.4	search with cache (only 1: intros; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct x; only 1: now split; only 1: simpl; only 1: easy'; only 1: easy').	1.45088100433	1867
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.25.0	search with cache (only 1: destr_bool; only 1: destruct x; only 1: intuition; only 1: intuition; only 1: discriminate || simpl; only 1: intuition; only 1: discriminate || simpl).	21.905823946	26713
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	8.5.6.4.1.3.2.21.5	search with cache (only 1: intro; only 1: induction p; only 1: simpl; only 1: destruct c; only 1: trivial; only 1: discriminate; only 1: easy; only 1: now destruct Hn || easy; only 1: discriminate).	18.5790579319	32046
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.3.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: auto).	0.035609960556	6
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40	8.10.0.9.0.2.0.0	search with cache (only 1: intros; only 1: unfold agree_env; only 1: intros; only 1: apply H; only 1: eapply Pos.le_trans; only 1: apply Pos.add_le_mono_r; only 1: eauto; only 1: now rewrite Pos.add_1_r).	15.0302050114	25388
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0606570243835	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	1.3	search with cache (only 1: intros n; only 1: now destruct n).	0.0160388946533	6
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	1.0.0.1.0.0.0.0.0.0.0.0.1.3.0.0.0	search with cache (only 1: intros; only 1: unfold Z.geb, Z.leb; only 1: rewrite Nat2Z.inj_compare; only 1: apply eq_true_iff_eq; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite IHn; only 1: intuition).	14.0918300152	22468
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	5.0.0.0.7.0.0.2	search with cache (only 1: intros; only 1: split; only 1: compute; only 1: destruct x; only 1: intuition congruence; only 1: now split; only 1: now split; only 1: now destruct x).	4.47147512436	2907
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40	10.0	search with cache (only 1: rewrite <- !jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.417540073395	604
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	3.0.4	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0248310565948	21
Coq.micromega.Env.nth_pred_double	40	1.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0147309303284	4
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0562460422516	4
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	1	search with cache (only 1: destr_bool).	0.00738787651062	2
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	2.0	search with cache (only 1: simpl; only 1: now constructor).	0.00597500801086	4
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	4.0	search with cache (only 1: simpl; only 1: now apply PeanoNat.Nat.eqb_eq).	0.00819897651672	6
Coq.micromega.Tauto.is_cnf_tt_inv	40
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	1.0.0.2	search with cache (only 1: destruct f; only 1: auto; only 1: simpl; only 1: auto).	0.0104460716248	7
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40	2.16	search with cache (only 1: fix odd_spec 1; only 1: congruence).	0.196175813675	369
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.1.0.0.1.17.9.8.0	search with cache (only 1: unfold cnf_ff; only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: destr_bool; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: simpl; only 1: reflexivity).	3.13618588448	8551
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	2.0.22.5	search with cache (only 1: split; only 1: destruct 1; only 1: reflexivity; only 1: tauto).	11.5314779282	14092
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0108850002289	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	1.4.1.5	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	3.15833520889	2090
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0270869731903	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	0.0.2.0.6.0.1.0.0.1.10.16	search with cache (only 1: split; only 1: destruct x; only 1: simpl; only 1: auto with zarith; only 1: auto with zarith; only 1: simpl; only 1: auto with zarith; only 1: destruct x; only 1: auto with zarith; only 1: simpl; only 1: auto with zarith; only 1: auto with zarith).	4.37153601646	11961
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	1	search with cache (only 1: exact (Radd_ext Reqe)).	0.0107758045197	11
Coq.micromega.EnvRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00697183609009	2
Coq.micromega.EnvRing.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00723600387573	3
Coq.micromega.EnvRing.rsub_ext_Proper	40	3.6	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0370569229126	24
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40	19	search with cache (only 1: firstorder).	0.296351909637	241
Coq.micromega.EnvRing.Pphi1	40	11	search with cache (only 1: firstorder).	0.0644860267639	63
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40	1.0.11.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.725932121277	1001
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	2.1.0.0.1.0.0.1.1.2.1.1.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: rsimpl; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	37.6450371742	13213
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	5.2.0.1.0.0.0.5.1.1.1.2	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	11.0858418941	8339
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.2	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0106749534607	6
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.7	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0841360092163	62
Coq.micromega.EnvRing.mkZmon_ok	40
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0230929851532	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.0250639915466	2
Coq.micromega.RingMicromega.ropp_morph_Proper	40	1	search with cache (only 1: exact (SORopp_wd sor)).	0.0245468616486	2
Coq.micromega.RingMicromega.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0231800079346	1
Coq.micromega.RingMicromega.rlt_morph_Proper	40	1	search with cache (only 1: exact (SORlt_wd sor)).	0.0252220630646	2
Coq.micromega.RingMicromega.rminus_morph_Proper	40	1.1.1.0.1	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0601279735565	9
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40	0.2.1.2.0.2.27.19	search with cache (only 1: intro; only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: auto; only 1: intros l2; only 1: simpl; only 1: f_equal; only 1: auto).	2.57307314873	7573
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	3.2.0.1.1.12	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: red; only 1: intuition).	0.104511976242	632
Coq.micromega.Refl.make_impl_map	40	4.4.2	search with cache (only 1: induction l; only 1: reflexivity; only 1: firstorder  (subst; auto)).	0.533452987671	861
Coq.micromega.Refl.make_conj_cons	40	5.2.2.3	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: now constructor).	1.34589886665	2809
Coq.micromega.Refl.make_conj_impl	40	0.2.2.0.0.1.0.5.2	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: intuition; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl in *; only 1: tauto).	7.93469595909	16664
Coq.micromega.Refl.make_conj_in	40	1.1.5.1.0.13	search with cache (only 1: intros f g l H; only 1: induction l as [| a l IH]; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	15.8460929394	48410
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40	6.2	search with cache (only 1: intros; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.0135900974274	10
Coq.micromega.QMicromega.QNpower	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0121610164642	6
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0.1.0.2.0.0.1.0.0.1.0.1.0.2.4	search with cache (only 1: constructor; only 1: intros; only 1: apply Rplus_0_l; only 1: exact Rplus_comm; only 1: intros; only 1: ring; only 1: auto with real; only 1: exact Rmult_comm; only 1: symmetry; only 1: apply Rmult_assoc; only 1: intros; only 1: ring; only 1: reflexivity; only 1: intros; only 1: ring_Rsqr).	8.44808006287	8103
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	3.0	search with cache (only 1: intros; only 1: field).	0.0222809314728	5
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40	0.0.2.0.0.0.0.0.0.0.1.0.0.0.0.2.1.0.0.0	search with cache (only 1: unfold Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qnum, Qden; only 1: intros; only 1: set (X1 := IZR x1) in *; only 1: pose proof (IZR_nz x2) as X2nz; only 1: set (X2 := IZR (Z.pos x2)) in *; only 1: set (Y1 := IZR y1) in *; only 1: pose proof (IZR_nz y2) as Y2nz; only 1: set (Y2 := IZR (Z.pos y2)) in *; only 1: assert (X1 * Y2 = Y1 * X2); only 1: unfold X1, X2, Y1, Y2; only 1: do 2 rewrite <- mult_IZR; only 1: f_equal; only 1: auto; only 1: clear H; only 1: field_simplify_eq; only 1: rewrite H0; only 1: ring; only 1: auto).	6.65564203262	8710
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40	0.0.1.0.0.0.1.0.0.0.0.3.1.0.0.1.1	search with cache (only 1: intros; only 1: case n; only 1: simpl; only 1: compute; only 1: apply Rinv_1; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	19.3201987743	31099
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0170028209686	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	1.4.3.0.3.2.5	search with cache (only 1: induction p; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: now destruct p; only 1: trivial).	4.37645888329	6050
Coq.rtauto.Bintree.map_app	40	1.2.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	0.157433986664	165
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0205070972443	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.1.8.0.0.1.3.11	search with cache (only 1: induction l; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: auto).	9.45189809799	23079
Coq.rtauto.Bintree.Lget_app_Some	40	1.1.8.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: now discriminate; only 1: simpl; only 1: induction i; only 1: auto; only 1: auto).	1.91792416573	2872
Coq.rtauto.Bintree.Tget_Tempty	40	6.2	search with cache (only 1: intros; only 1: now induction p).	0.0263278484344	13
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	16	search with cache (only 1: now intros []).	0.0750710964203	193
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.5.10.2.0.4	search with cache (only 1: unfold not; only 1: intro i; only 1: intros; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	1.78993701935	2817
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40	0.16	search with cache (only 1: fix sqrtrem_spec 1; only 1: assumption).	0.168198108673	533
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	1.2.8	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.202927827835	562
Coq.rtauto.Rtauto.compose1	40	9.7.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros; only 1: firstorder  (subst; auto)).	19.4854898453	48042
Coq.rtauto.Rtauto.compose2	40	9.0.0.1.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros A H; only 1: firstorder).	2.33600306511	4310
Coq.rtauto.Rtauto.compose3	40	0.1.6.0.0.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: intros x y; only 1: apply IHF; only 1: auto).	2.24504303932	3603
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	9.2.1.0.0	search with cache (only 1: intros x y H; only 1: setoid_replace x with x - y + y; only 1: setoid_rewrite H; only 1: cring; only 1: cring).	3.61014795303	688
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	3.2.1.0	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: auto).	0.0379328727722	16
Coq.nsatz.Nsatz.Rext	40	0.0.0.10	search with cache (only 1: apply mk_reqe; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.240097045898	65
Coq.nsatz.Nsatz.Rset	40	1.0	search with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.0240638256073	3
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	0.0.0.0.1.0.0.1	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.0460441112518	16
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	4.3.0	search with cache (only 1: intro abs; only 1: generalize Rlt_0_1; only 1: Lra.lra).	0.0487282276154	13
Coq.nsatz.Nsatz.Rcri	40	27.0.0.8	search with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: auto with real).	6.99600100517	14029
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	0.1	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0372130870819	3
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	3.1.0	search with cache (only 1: intro EQ; only 1: revert EQ; only 1: discriminate).	0.0337119102478	7
Coq.nsatz.Nsatz.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.03355884552	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0477678775787	1
Coq.omega.OmegaLemmas.Zred_factor1	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0163869857788	12
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	1.1.0.8	search with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro n; only 1: now Z.nzsimpl).	0.359044075012	86
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.00860190391541	1
Coq.omega.OmegaLemmas.new_var	40
Coq.omega.OmegaLemmas.OMEGA1	40	1	search with cache (only 1: Z.order).	0.00998616218567	2
Coq.omega.OmegaLemmas.OMEGA2	40
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40
Coq.omega.OmegaLemmas.OMEGA6	40	4.9.8.13.11	search with cache (only 1: intros Hx Hxy; only 1: destruct x; only 1: now subst; only 1: easy || now destruct y; only 1: easy).	20.1527290344	7665
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	1.3.1.15	search with cache (only 1: destruct x; only 1: reflexivity; only 1: easy || now destruct y; only 1: now destruct 1 || trivial).	2.73303484917	322
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0120828151703	4
Coq.omega.OmegaLemmas.OMEGA12	40	0.1	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.00954985618591	3
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0705659389496	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0149049758911	5
Coq.omega.OmegaLemmas.OMEGA16	40	1.1	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0281870365143	4
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0326211452484	2
Coq.omega.OmegaLemmas.OMEGA18	40	6.5.1	search with cache (only 1: intros H1 H2 H3; only 1: subst; only 1: now Z.nzsimpl).	0.317358016968	270
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.1.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0360720157623	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	4.25.0.20	search with cache (only 1: destruct x; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y).	5.31138396263	6074
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.1.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.027116060257	7
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.1.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0266530513763	7
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.3.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0351319313049	6
Coq.btauto.Algebra.Decidable_complete	40	0.0.0.17	search with cache (only 1: simpl; only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.204835176468	377
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0398859977722	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0.3	search with cache (only 1: unfold not; only 1: intros P [wit spec] Hd; only 1: simpl in *; only 1: intuition congruence).	0.0480620861053	19
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0.0.0.0.2.0.0.0.0.1.0.0.0.1.0.0.0.1.0.0.0.0.0	search with cache (only 1: revert q; only 1: induction p; only 1: destruct q; only 1: simpl; only 1: rewrite ?IHp; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct q; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: rewrite ?IHp; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct q; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	1.2070441246	1913
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40	17.0.4.43.0	search with cache (only 1: induction p; only 1: destruct b; only 1: now split; only 1: intuition congruence; only 1: easy').	16.8875389099	34461
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	19.19.4	search with cache (only 1: intro; only 1: intros n; only 1: easy').	24.8189921379	24379
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	2.1.2	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0111360549927	8
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	4.0.1.0.7.1.0.8.0	search with cache (only 1: intros A n def; only 1: intros; only 1: induction n using Pos.peano_rect; only 1: reflexivity; only 1: unfold make_last; only 1: rewrite list_nth_succ; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: auto).	26.122136116	58422
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	0.15	search with cache (only 1: fix le_div2 1; only 1: auto).	0.0156500339508	108
Coq.funind.Recdef.Splus_lt	40	25	search with cache (only 1: auto with arith).	0.578541994095	1042
Coq.funind.Recdef.SSplus_lt	40	24.0	search with cache (only 1: apply Nat.lt_succ_r; only 1: intuition).	2.36194801331	4628
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0241401195526	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	4	search with cache (only 1: assumption).	0.0057680606842	5
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0062689781189	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40	0.2.0.3.0.1.3.3.3	search with cache (only 1: intros; only 1: induction P; only 1: pose proof (ring_morphism_eq c 0) as Hh; only 1: Esimpl; only 1: Esimpl; only 1: Esimpl; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	27.2764210701	3525
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	0.3.0.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite ring_morphism0; only 1: rewrite ring_morphism1; only 1: rsimpl).	0.407655954361	14
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	2.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	0.567839860916	41
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.29	search with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.405956029892	972
Coq.setoid_ring.Ring.bool_eq_ok	40	7	search with cache (only 1: destr_bool).	0.00852608680725	8
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	8	search with cache (only 1: exact (Radd_ext Reqe)).	0.0319061279297	32
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00641489028931	2
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	4	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0114650726318	5
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	6	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0326979160309	12
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.0136330127716	1
Coq.setoid_ring.Field_theory.rsub_0_l	40
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.1.0.0	search with cache (only 1: red; only 1: red; only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0668029785156	24
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0385761260986	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40
Coq.setoid_ring.Field_theory.PEpow_0_r	40
Coq.setoid_ring.Field_theory.PEpow_1_r	40	1.2.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.0188639163971	6
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40	0.0.0.1.4	search with cache (only 1: destruct a as [| p], b as [| q]; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.173543214798	10
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	0.3	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.0195550918579	5
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00687289237976	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00624299049377	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00612092018127	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	7.5.2.5	search with cache (only 1: split; only 1: congruence; only 1: auto; only 1: congruence).	0.437101840973	592
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	1.6.1	search with cache (only 1: intros x y z; only 1: subst; only 1: reflexivity).	0.0518729686737	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	1.1.0.0.2	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).	0.0165691375732	16
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40
Coq.setoid_ring.Rings_R.R_one_zero	40	1	search with cache (only 1: exact R1_neq_R0).	0.0198979377747	18
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.00602602958679	1
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	6.7	search with cache (only 1: split; only 1: now try N.order').	0.0327389240265	117
Coq.setoid_ring.Ring_theory.IDmorph	40	5	search with cache (only 1: now try N.order').	0.0164039134979	6
Coq.setoid_ring.Ring_theory.Eqsth	40	3	search with cache (only 1: auto with *).	0.00547003746033	4
Coq.setoid_ring.Ring_theory.Eq_s_ext	40
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.102550983429	4
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	29.9	search with cache (only 1: intros; only 1: firstorder).	3.4434299469	14646
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	28.11	search with cache (only 1: intros; only 1: firstorder).	2.74368906021	11491
Coq.setoid_ring.Ring_theory.SRopp_ext	40	2.7	search with cache (only 1: intros x y z; only 1: trivial).	0.0150170326233	30
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.3.4.5	search with cache (only 1: constructor; only 1: exact (SRadd_ext SReqe); only 1: exact (SRmul_ext SReqe); only 1: intros x y H; only 1: exact H).	0.150448083878	224
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40
Coq.setoid_ring.Ring_theory.SRopp_add	40	2	search with cache (only 1: reflexivity).	0.00691223144531	3
Coq.setoid_ring.Ring_theory.SRsub_def	40	1	search with cache (only 1: reflexivity).	0.00681114196777	2
Coq.setoid_ring.Ring_theory.SRIDmorph	40
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	24.10	search with cache (only 1: intros; only 1: firstorder).	1.35590219498	4360
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	22.8	search with cache (only 1: intros; only 1: firstorder).	0.889208078384	1541
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	35.12	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	1.08574008942	3114
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	27.10	search with cache (only 1: intros; only 1: firstorder).	0.502688884735	962
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	1	search with cache (only 1: mrewrite).	0.014680147171	2
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0155758857727	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00656485557556	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0074520111084	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00671815872192	1
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	6	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0240120887756	11
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.00855398178101	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.3.2.1.1.1.8	search with cache (only 1: intros [| ] [| ]; only 1: trivial; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	1.49394702911	2155
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00757598876953	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00738096237183	1
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00717687606812	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00768494606018	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00764393806458	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.00967192649841	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	1.4.2	search with cache (only 1: induction x; only 1: norm; only 1: norm).	0.0194301605225	14
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00705099105835	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00715708732605	1
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00762104988098	1
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.00892782211304	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	14.2.2.6	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	7.23275613785	1693
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	0.0.12	search with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	0.480352163315	76
Coq.setoid_ring.Cring.cring_div_theory	40	3.2.1.0.1.1.2.1	search with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: subst; only 1: rewrite Z.mul_comm; only 1: intuition).	0.975520849228	1010
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00586485862732	1
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00768709182739	2
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00828695297241	3
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	3.10	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.162916898727	161
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	1.5	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.207884073257	29
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	6.2	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.215096950531	55
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	3.1.0.0.0.1.0.0.4.1.0.2.1	search with cache (only 1: revert l; only 1: induction P; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: Esimpl).	21.894865036	15819
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40	1.0.1.0.1.0.0.1.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change_no_check x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: now rewrite ?(rpow_pow_N pow_th)).	10.4911160469	813
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.0128769874573	1
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40	21.7	search with cache (only 1: intros A B H; only 1: firstorder).	5.74454903603	4985
Coq.setoid_ring.Ncring.ring_add_0_r	40
Coq.setoid_ring.Ncring.ring_add_assoc1	40	0.9.33.0	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).	12.840569973	6572
Coq.setoid_ring.Ncring.ring_add_assoc2	40
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.1.0	search with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: trivial).	0.00983691215515	4
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.00940895080566	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00439500808716	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	2	search with cache (only 1: by case : {}k {}).	0.00473999977112	3
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.10.7	search with cache (only 1: destr_bool; only 1: subst; only 1: tauto).	0.111554145813	243
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.00605082511902	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.0047709941864	1
Coq.ssr.ssreflect.iffLRn	40	3	search with cache (only 1: intuition).	0.0125789642334	4
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.00506496429443	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	1	search with cache (only 1: Bool.destr_bool).	0.00815391540527	2
Coq.ssr.ssrbool.is_true_true	40
Coq.ssr.ssrbool.not_false_is_true	40	0	search with cache (only 1: by case).	0.107716083527	1
Coq.ssr.ssrbool.is_true_locked_true	40
Coq.ssr.ssrbool.negbT	40	3	search with cache (only 1: Bool.destr_bool).	0.00474500656128	4
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00434398651123	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.0041868686676	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.00391697883606	1
Coq.ssr.ssrbool.negbK	40	2	search with cache (only 1: by case).	0.00511193275452	3
Coq.ssr.ssrbool.negbNE	40	5	search with cache (only 1: by case : {}b {}).	0.0100178718567	6
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	15	search with cache (only 1: Bool.destr_bool).	0.141741037369	91
Coq.ssr.ssrbool.negbRL	40	8	search with cache (only 1: Bool.destr_bool).	0.0123319625854	9
Coq.ssr.ssrbool.contra	40
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0850300788879	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.00739407539368	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.00694704055786	1
Coq.ssr.ssrbool.contraT	40
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.00739192962646	2
Coq.ssr.ssrbool.contraFT	40
Coq.ssr.ssrbool.contraFN	40
Coq.ssr.ssrbool.contraTF	40
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.00692105293274	1
Coq.ssr.ssrbool.ifT	40	7	search with cache (only 1: by case : {}b {}).	0.0110850334167	8
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move {+}->).	0.0721619129181	2
Coq.ssr.ssrbool.ifN	40	3	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0104808807373	4
Coq.ssr.ssrbool.if_same	40	3	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0726001262665	4
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case b).	0.330993175507	2
Coq.ssr.ssrbool.fun_if	40	2	search with cache (only 1: by case b).	0.050215959549	3
Coq.ssr.ssrbool.if_arg	40	1	search with cache (only 1: by case b).	0.00647902488708	2
Coq.ssr.ssrbool.ifE	40	3	search with cache (only 1: trivial).	0.0748951435089	4
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.138221025467	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.00839900970459	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.202396154404	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.6	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.014683008194	8
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	7	search with cache (only 1: by case).	0.0758481025696	8
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0111110210419	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0131750106812	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0143389701843	1
Coq.ssr.ssrbool.pair_andP	40	1	search with cache (only 1: tauto).	0.00995397567749	2
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00508189201355	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00470399856567	1
Coq.ssr.ssrbool.negP	40	1	search with cache (only 1: by case b1; constructor).	0.00852513313293	2
Coq.ssr.ssrbool.negPn	40	1	search with cache (only 1: by case b1; constructor).	0.00556588172913	2
Coq.ssr.ssrbool.negPf	40	17	search with cache (only 1: by case b1; constructor).	0.545583963394	126
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	2	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0103740692139	3
Coq.ssr.ssrbool.norP	40	1	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0155739784241	2
Coq.ssr.ssrbool.implyP	40	1	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.00704002380371	2
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by unlock).	0.00571703910828	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.00500202178955	1
Coq.ssr.ssrbool.andbT	40	6	search with cache (only 1: by case).	0.00940990447998	7
Coq.ssr.ssrbool.andbF	40	2	search with cache (only 1: by case).	0.0084822177887	3
Coq.ssr.ssrbool.andbb	40	1	search with cache (only 1: by case).	0.00672197341919	2
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.00660991668701	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.118366956711	1
Coq.ssr.ssrbool.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00896501541138	1
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00942397117615	1
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: Bool.destr_bool).	0.00618600845337	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by case).	0.00543618202209	1
Coq.ssr.ssrbool.orbT	40
Coq.ssr.ssrbool.orbF	40	1	search with cache (only 1: by case).	0.00665497779846	2
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00604510307312	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00665783882141	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by case).	0.00593280792236	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00908708572388	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00916004180908	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0138459205627	1
Coq.ssr.ssrbool.andbN	40	1	search with cache (only 1: Bool.destr_bool).	0.136435985565	2
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.00538897514343	1
Coq.ssr.ssrbool.orbN	40	3	search with cache (only 1: Bool.destr_bool).	0.00600481033325	4
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.00581693649292	1
Coq.ssr.ssrbool.andb_orl	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0111010074615	2
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00927495956421	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00956797599792	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00913596153259	1
Coq.ssr.ssrbool.andb_idl	40	9.1	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0586469173431	50
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00963091850281	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.287958145142	1
Coq.ssr.ssrbool.andb_id2r	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.219200134277	2
Coq.ssr.ssrbool.orb_idl	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0096549987793	2
Coq.ssr.ssrbool.orb_idr	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00976204872131	2
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.142693996429	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.277351140976	1
Coq.ssr.ssrbool.negb_and	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0110189914703	2
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00904393196106	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00923299789429	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00879597663879	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00908422470093	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00916695594788	1
Coq.ssr.ssrbool.implybT	40	5	search with cache (only 1: by case : {}b {}).	0.00969314575195	6
Coq.ssr.ssrbool.implybF	40	3	search with cache (only 1: by case : {}b {}).	0.00795197486877	4
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {} =>// {+}->).	0.00681400299072	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.00603294372559	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.00767517089844	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00871419906616	1
Coq.ssr.ssrbool.implybE	40	2	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0119109153748	3
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00891780853271	1
Coq.ssr.ssrbool.implybN	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.011234998703	2
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00893497467041	1
Coq.ssr.ssrbool.implyb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.141647100449	1
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0119068622589	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.32902097702	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00664615631104	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00713896751404	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.00804305076599	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00734114646912	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0100140571594	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0111210346222	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0113489627838	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0167980194092	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0115110874176	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0119788646698	1
Coq.ssr.ssrbool.addKb	40	9	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0173139572144	10
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00888299942017	1
Coq.ssr.ssrbool.addIb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0142920017242	2
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0121150016785	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: trivial).	0.0065598487854	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.00833511352539	2
Coq.ssr.ssrbool.addbN	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0102579593658	2
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0093948841095	1
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40	7	search with cache (only 1: by [  ]).	0.00867700576782	8
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.00772786140442	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	5	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.00940704345703	6
Coq.ssr.ssrbool.unfold_in	40	2	search with cache (only 1: Bool.destr_bool).	0.00684785842896	3
Coq.ssr.ssrbool.simpl_predE	40	1	search with cache (only 1: by [  ]).	0.00677585601807	2
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.00741600990295	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by rewrite -mem_topred).	0.00923705101013	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	1	search with cache (only 1: auto).	0.125648975372	2
Coq.ssr.ssrbool.in1W	40
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0561430454254	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.080188035965	1
Coq.ssr.ssrbool.in1T	40
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0170450210571	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0199029445648	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0188338756561	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.191072940826	2
Coq.ssr.ssrbool.sub_in111	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.413749217987	2
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.423753976822	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.203129053116	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0816149711609	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0177540779114	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0211300849915	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0446588993073	2
Coq.ssr.ssrbool.subon1	40	4	search with cache (only 1: by move  {}=>? ?; auto).	0.955970048904	5
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	0.794965028763	1
Coq.ssr.ssrbool.subon2	40	3	search with cache (only 1: by move  {}=>? ?; auto).	0.690773010254	4
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	1.17910385132	1
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.107620954514	1
Coq.ssr.ssrbool.canRL_on	40	1	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.35053396225	2
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	1	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.083046913147	2
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0866189002991	1
Coq.ssr.ssrbool.onT_bij	40	1	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0145859718323	2
Coq.ssr.ssrbool.sub_in_bij	40
Coq.ssr.ssrbool.subon_bij	40	2	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.0460760593414	3
Coq.ssr.ssrbool.sub_in2	40
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	0.011127948761	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.00801301002502	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	1	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.380313158035	2
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	1	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.109287977219	2
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.98091506958	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: firstorder).	0.00576996803284	1
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40
Coq.ssr.ssrfun.fsym	40
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	1	search with cache (only 1: by [  ]).	0.00290012359619	2
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.245861053467	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.130223989487	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.00541114807129	1
Coq.ssr.ssrfun.all_sig	40	3	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.360181093216	4
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	0.575299978256	2
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.340361118317	1
Coq.ssr.ssrfun.canLR	40
Coq.ssr.ssrfun.canRL	40
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	4	search with cache (only 1: by [  ]).	0.0485739707947	5
Coq.ssr.ssrfun.inj_can_sym	40
Coq.ssr.ssrfun.inj_comp	40
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	1.1	search with cache (only 1: intros A C h1 h2; only 1: auto).	0.00351214408875	4
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: auto).	0.00360298156738	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.00348806381226	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00298881530762	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00372004508972	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	17.6	search with cache (only 1: intros m n v1; only 1: congruence).	0.457489013672	1081
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.4	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.00957798957825	7
Coq.Vectors.VectorSpec.const_nth	40	0.0.1.9.5	search with cache (only 1: generalize dependent n; only 1: intros n v; only 1: induction v; only 1: now simpl; only 1: now simpl).	0.454925060272	288
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	2.1	search with cache (only 1: intros; only 1: trivial).	0.0394699573517	78
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	8.16.0.0.0.1.0	search with cache (only 1: intros m n; only 1: generalize eq_refl; only 1: generalize n at - 1; only 1: induction (S n) as [| n0 IHn0]; only 1: discriminate; only 1: fix le_div2 1; only 1: auto).	15.3354899883	36139
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0135769844055	9
Coq.Vectors.VectorSpec.uncons_cons	40	2	search with cache (only 1: now f_equal).	0.00656294822693	3
Coq.Vectors.VectorSpec.append_comm_cons	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00617599487305	2
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	2.10.6	search with cache (only 1: intros x y z; only 1: fix even_spec 1; only 1: auto).	16.9537029266	16910
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	4.21.18.6	search with cache (only 1: intros m n p; only 1: intros; only 1: rewrite <- H; only 1: trivial).	5.2240588665	15533
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.00554800033569	1
Coq.Setoids.Setoid.Seq_sym	40	2.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: firstorder).	0.0073401927948	5
Coq.Setoids.Setoid.Seq_trans	40	2.1.1.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.00775480270386	11
Coq.Setoids.Setoid.gen_st	40	2	search with cache (only 1: simpl_relation).	0.00685906410217	3
Coq.Bool.IfProp.Iftrue_inv	40
Coq.Bool.IfProp.Iffalse_inv	40	0.1.0.1.4	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: assumption; only 1: auto with bool).	0.0212218761444	85
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: trivial).	0.0119109153748	11
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.3	search with cache (only 1: destruct 1; only 1: left; only 1: auto; only 1: right; only 1: assumption).	0.129672050476	180
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	1.0.6	search with cache (only 1: induction n; only 1: easy; only 1: easy).	0.0453240871429	24
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0224130153656	3
Coq.Bool.Zerob.zerob_false_intro	40	2.0.1.9	search with cache (only 1: intros n; only 1: induction n as [| n H]; only 1: now try Nat.order'; only 1: trivial).	0.408789873123	392
Coq.Bool.Zerob.zerob_false_elim	40	2.6.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: discriminate).	0.168901920319	110
Coq.Bool.DecBool.ifdec_left	40
Coq.Bool.DecBool.ifdec_right	40	0.9.2.1.0.0	search with cache (only 1: intros; only 1: case H; only 1: intro; only 1: apply False_rec; only 1: auto; only 1: auto).	0.589834928513	3009
Coq.Bool.Sumbool.sumbool_of_bool	40	5.5.1.5	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0399940013885	365
Coq.Bool.Sumbool.bool_eq_rec	40	3.3.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00774598121643	9
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00695610046387	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40
Coq.Bool.Sumbool.sumbool_not	40
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	search with cache (only 1: discriminate).	0.0030620098114	3
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00364804267883	1
Coq.Bool.Bool.eq_true_false_abs	40	5.5.2.7	search with cache (only 1: intro H1; only 1: elim H1; only 1: discriminate; only 1: discriminate).	0.0336167812347	404
Coq.Bool.Bool.not_true_is_false	40
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00465393066406	3
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0072009563446	5
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00719499588013	3
Coq.Bool.Bool.leb_implb	40	1.1.1.1.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0382568836212	103
Coq.Bool.Bool.eqb_subst	40	1	search with cache (only 1: destr_bool).	0.0133321285248	33
Coq.Bool.Bool.eqb_reflx	40	1	search with cache (only 1: destr_bool).	0.00381803512573	2
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00519394874573	1
Coq.Bool.Bool.eqb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.00785493850708	9
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0106530189514	5
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.00534200668335	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00534009933472	1
Coq.Bool.Bool.negb_involutive	40	2	search with cache (only 1: destr_bool).	0.00395107269287	3
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00385713577271	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00500202178955	1
Coq.Bool.Bool.no_fixpoint_negb	40	1	search with cache (only 1: destr_bool).	0.00432109832764	2
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00396203994751	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00393295288086	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00405693054199	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00584292411804	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00620818138123	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0116879940033	5
Coq.Bool.Bool.orb_false_iff	40	1.1.1.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0930888652802	29
Coq.Bool.Bool.orb_true_elim	40	2.2.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.00894594192505	9
Coq.Bool.Bool.orb_prop	40	2.2.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.00844287872314	10
Coq.Bool.Bool.orb_true_intro	40	0.1.0	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: assumption).	0.00448608398438	4
Coq.Bool.Bool.orb_false_intro	40	1	search with cache (only 1: destr_bool).	0.00556802749634	2
Coq.Bool.Bool.orb_false_elim	40	1.3.0	search with cache (only 1: intros; only 1: destr_bool; only 1: intuition).	0.0112540721893	13
Coq.Bool.Bool.orb_diag	40	0	search with cache (only 1: destr_bool).	0.0042839050293	1
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.00413489341736	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00419402122498	1
Coq.Bool.Bool.orb_false_r	40	0	search with cache (only 1: destr_bool).	0.00421595573425	1
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0042519569397	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0043568611145	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.00596499443054	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.00735306739807	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.010901927948	6
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0133509635925	5
Coq.Bool.Bool.andb_true_eq	40	1.2	search with cache (only 1: destr_bool; only 1: repeat split).	0.0468897819519	124
Coq.Bool.Bool.andb_false_intro1	40	1.1.0	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.00435209274292	5
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00466918945312	3
Coq.Bool.Bool.andb_false_r	40	3.1.1	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: intuition).	0.00682306289673	8
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.0042679309845	1
Coq.Bool.Bool.andb_diag	40	2.0	search with cache (only 1: intros; only 1: destr_bool).	0.0057098865509	4
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.00425696372986	2
Coq.Bool.Bool.andb_true_l	40	1	search with cache (only 1: destr_bool).	0.0040271282196	2
Coq.Bool.Bool.andb_false_elim	40	4.1.1.8.0.2	search with cache (only 1: intro z; only 1: intros; only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).	0.193928956985	385
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00430798530579	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.00537610054016	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.00684714317322	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00713777542114	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00778794288635	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0274698734283	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00684595108032	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00542092323303	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00549507141113	1
Coq.Bool.Bool.xorb_false_r	40	4.1	search with cache (only 1: intros; only 1: destr_bool).	0.00583291053772	7
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00407695770264	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00415706634521	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00357389450073	1
Coq.Bool.Bool.xorb_nilpotent	40	1	search with cache (only 1: destr_bool).	0.00420308113098	2
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.00581502914429	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.00821685791016	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00554203987122	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.00747084617615	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0079460144043	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.00798392295837	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.00802111625671	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.00560808181763	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00591802597046	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00593519210815	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0160701274872	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00896692276001	3
Coq.Bool.Bool.eq_true_negb_classical	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.00737309455872	4
Coq.Bool.Bool.eq_true_not_negb	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00572419166565	3
Coq.Bool.Bool.absurd_eq_bool	40	4.4.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00944089889526	27
Coq.Bool.Bool.absurd_eq_true	40	4.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00551795959473	6
Coq.Bool.Bool.trans_eq_bool	40	1	search with cache (only 1: destr_bool).	0.00877690315247	2
Coq.Bool.Bool.Is_true_eq_true	40	4.4	search with cache (only 1: destr_bool; only 1: intuition).	0.00865912437439	17
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00429105758667	1
Coq.Bool.Bool.Is_true_eq_right	40	0	search with cache (only 1: destr_bool).	0.00425481796265	1
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.0035080909729	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00753617286682	3
Coq.Bool.Bool.orb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: auto with bool; only 1: auto with bool; only 1: auto with bool; only 1: auto with bool).	0.087767124176	5
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00655198097229	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00777196884155	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.00826716423035	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.2	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00945091247559	5
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto).	0.00761485099792	3
Coq.Bool.Bool.negb_prop_elim	40	1.0	search with cache (only 1: unfold not; only 1: destr_bool).	0.00455594062805	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00555109977722	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00564408302307	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00498199462891	3
Coq.Bool.Bool.andb_if	40	1	search with cache (only 1: destr_bool).	0.0055820941925	2
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00439810752869	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.00487208366394	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.00548386573792	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40
Coq.Bool.Bool.reflect_dec	40
Coq.Bool.Bool.eqb_spec	40	5.5.5.6.4	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.13626408577	638
Coq.Bool.BoolEq.beq_eq_true	40	0.10.0	search with cache (only 1: intros; only 1: subst; only 1: destr_bool).	0.0322949886322	100
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40	8.0.0.0.0.0.2.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: simpl; only 1: unfold not; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: firstorder  (subst; auto)).	29.4926581383	36663
Coq.Lists.ListSet.set_mem_correct1	40	0.0.0.0.7.3.0	search with cache (only 1: simple induction x; only 1: easy; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	3.63281583786	3324
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40	5.1.2.4.0.1.0.1.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: apply in_nil; only 1: simpl; only 1: unfold not; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: intuition).	15.0176789761	25694
Coq.Lists.ListSet.set_mem_complete2	40	1.0.1.4.0.0.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intuition; only 1: now subst; only 1: unfold not; only 1: auto with datatypes).	3.00831413269	5189
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.3.1.0.0.15.0.0.1.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intuition; only 1: elim (Aeq_dec b a0); only 1: left; only 1: now subst; only 1: simpl; only 1: auto).	24.2827479839	52565
Coq.Lists.ListSet.set_add_intro	40	2	search with cache (only 1: intuition).	0.0617988109589	40
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	1.0.0.0.0.1.0.0.0.1.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: tauto).	0.476986885071	465
Coq.Lists.ListSet.set_add_not_empty	40	4.3.5.2.0.1.1	search with cache (only 1: simple induction x; only 1: easy; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: discriminate).	5.27137899399	5620
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40	0.0.0.0.0.3.0.0.1.1.0.0.0	search with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: unfold not; only 1: intuition; only 1: congruence; only 1: congruence; only 1: simpl; only 1: intuition; only 1: now subst).	37.3949410915	27462
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	8.0.2.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).	0.72900891304	900
Coq.Lists.ListSet.set_union_intro	40	0.0.1	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.300281047821	104
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40
Coq.Lists.ListSet.set_union_emptyR	40	1.1.1.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.0961110591888	69
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	1.0.0.1.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	1.0492579937	10
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40
Coq.Lists.Streams.tl_nth_tl	40
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	0.1.1	search with cache (only 1: coinduction ltac:(Eq_trans); only 1: auto; only 1: auto).	0.00600004196167	5
Coq.Lists.Streams.Str_nth_tl_map	40	1.1.0.0.0.0.1	search with cache (only 1: simple induction n; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto).	0.00809693336487	19
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.0.8	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: apply IHn).	0.180131912231	480
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	2.0.1.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.00805115699768	12
Coq.Lists.Streams.Str_nth_zipWith	40	0.1.0.2.0.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0984570980072	55
Coq.Lists.List.nil_cons	40	12	search with cache (only 1: destr_bool).	0.188860177994	91
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40	2.6	search with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.264559984207	130
Coq.Lists.List.hd_error_some_nil	40	2.1.0.3	search with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: discriminate; only 1: firstorder  discriminate).	0.0252809524536	21
Coq.Lists.List.length_zero_iff_nil	40
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.0113661289215	1
Coq.Lists.List.hd_error_cons	40	1.2.2	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0135378837585	8
Coq.Lists.List.in_eq	40	4.1	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.0168581008911	16
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0125091075897	2
Coq.Lists.List.not_in_cons	40	16.4	search with cache (only 1: red; only 1: firstorder).	0.22313785553	454
Coq.Lists.List.in_nil	40	0.0	search with cache (only 1: simpl; only 1: tauto).	0.0128090381622	2
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0114488601685	1
Coq.Lists.List.in_dec	40	16.5.7.4	search with cache (only 1: unfold not; only 1: induction l; only 1: auto; only 1: firstorder  discriminate).	3.54504299164	8459
Coq.Lists.List.app_cons_not_nil	40	2.4.2.10.6.9.2	search with cache (only 1: unfold not; only 1: intro H1; only 1: intros a H; only 1: elim H1; only 1: firstorder  discriminate; only 1: intros; only 1: firstorder  discriminate).	11.0015559196	27489
Coq.Lists.List.app_nil_l	40	0.0.0	search with cache (only 1: induction l as [| a tail]; only 1: reflexivity; only 1: reflexivity).	0.0140678882599	3
Coq.Lists.List.app_nil_r	40
Coq.Lists.List.app_nil_end	40	1.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0174779891968	8
Coq.Lists.List.app_assoc	40	2.9.2.1.1.11	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: auto).	2.31873583794	7654
Coq.Lists.List.app_assoc_reverse	40	1.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.028459072113	14
Coq.Lists.List.app_comm_cons	40	0.1.0	search with cache (only 1: intros l m n; only 1: simpl; only 1: f_equal).	0.0147769451141	4
Coq.Lists.List.app_eq_nil	40	0.0.1.8	search with cache (only 1: intros [| a] b; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate).	0.139482975006	233
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	2.9.7.0.5.0	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	1.69957995415	2897
Coq.Lists.List.in_app_or	40	2.0.3.1.11	search with cache (only 1: intros l m n; only 1: induction l; only 1: auto; only 1: simpl; only 1: intuition).	2.11803889275	3091
Coq.Lists.List.in_or_app	40	3.1.7.6.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: intros n IH; only 1: simpl; only 1: tauto).	4.22734498978	12013
Coq.Lists.List.in_app_iff	40	0.3.0.6.0.0.2	search with cache (only 1: intros; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros n m; only 1: intuition).	3.755671978	6814
Coq.Lists.List.app_inv_head	40	1.6.1.1.18.1.1.0	search with cache (only 1: destruct l as [| x l]; only 1: symmetry; only 1: auto; only 1: CRelationClasses.simpl_crelation; only 1: induction l; only 1: auto; only 1: inversion H1; only 1: auto).	19.1775770187	66286
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0136711597443	2
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40	7.0.6.5.6.0.0.0.0.3	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: intros [| ] ?; only 1: trivial; only 1: inversion_clear H; only 1: induction n as [| n hn]; only 1: trivial; only 1: simpl; only 1: auto with arith).	15.1642670631	40209
Coq.Lists.List.nth_indep	40	1.0.0.0.2.0.1	search with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: intros [| n]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.295295953751	348
Coq.Lists.List.app_nth1	40	2.1.0.1.3.1.2	search with cache (only 1: unfold lt; only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: induction n as [| n hn]; only 1: auto with arith; only 1: auto with arith).	5.6295170784	8562
Coq.Lists.List.app_nth2	40
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.0.0.0.3.0.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.164866924286	117
Coq.Lists.List.nth_error_app2	40
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	0.0.0.0.3.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0355021953583	31
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	10.2	search with cache (only 1: simpl; only 1: auto).	0.0295658111572	94
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0181138515472	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40	6.21	search with cache (only 1: fix odd_spec 1; only 1: auto).	13.2889242172	22736
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	1.0.1.3.0	search with cache (only 1: simpl; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0255868434906	27
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0	search with cache (only 1: auto).	0.0127241611481	1
Coq.Lists.List.concat_cons	40	1.0.0.0.0	search with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0201261043549	6
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0	search with cache (only 1: trivial).	0.0126521587372	1
Coq.Lists.List.in_map	40	6.0.1.1.2.0.5.1.0.0.1	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: intros; only 1: elim H; only 1: simpl; only 1: left; only 1: subst; only 1: trivial; only 1: simpl; only 1: auto).	22.4480910301	52250
Coq.Lists.List.in_map_iff	40	2.4.4.4	search with cache (only 1: intros; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	1.19063615799	1503
Coq.Lists.List.map_length	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0192840099335	6
Coq.Lists.List.map_nth	40	0.0.0.0.2.0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: revert n; only 1: induction l; only 1: intros; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.49391293526	2457
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: intros l2; only 1: simpl; only 1: rewrite IH; only 1: reflexivity).	0.0227880477905	9
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	1.0.1	search with cache (only 1: destruct l as [| x l]; only 1: auto; only 1: discriminate).	0.0176298618317	5
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	6.0.3.1	search with cache (only 1: intros l1; only 1: induction l; only 1: reflexivity; only 1: CRelationClasses.simpl_crelation).	0.39731502533	538
Coq.Lists.List.concat_map	40	1.0.6.1.1.0.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	1.150578022	1660
Coq.Lists.List.map_id	40	1.5.0.0.0.3	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.357731103897	573
Coq.Lists.List.map_map	40	0.2.0.0.8	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.406228065491	503
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40	0.7.5.4	search with cache (only 1: intros f Hf; only 1: intros a n; only 1: fix even_spec 1; only 1: auto).	12.1963911057	14834
Coq.Lists.List.map_ext	40	0.7.3	search with cache (only 1: intros A x P H y H0; only 1: apply map_ext_in; only 1: auto).	0.591375112534	885
Coq.Lists.List.fold_left_app	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0189909934998	6
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.1.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0260009765625	9
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40	2.8	search with cache (only 1: fix odd_spec 1; only 1: firstorder  (subst; auto)).	0.235095024109	100
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40	2.12	search with cache (only 1: fix odd_spec 1; only 1: intuition).	7.91515898705	2142
Coq.Lists.List.forallb_app	40	2.2.0.1.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: case (f a); only 1: solve [ auto ]; only 1: destr_bool).	1.52062511444	1650
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	1.1.0.0.5.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: solve [ auto ]; only 1: solve [ auto ]).	1.21151518822	1594
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40	5.1.13.10.0	search with cache (only 1: simpl; only 1: case (f a); only 1: fix even_spec 1; only 1: solve [ auto ]; only 1: easy).	6.36029005051	9812
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0174131393433	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40	0.0.1.0.0	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	0.0333681106567	6
Coq.Lists.List.filter_ext	40	0.1.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.0153632164001	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.5.4.0.8.1.0.0.0.4.4	search with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: induction l; only 1: RelationClasses.simpl_relation; only 1: simpl; only 1: RelationClasses.simpl_relation; only 1: destruct (split l); only 1: auto).	37.574092865	63847
Coq.Lists.List.split_length_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0285251140594	9
Coq.Lists.List.split_combine	40	0.3.1.2.9.1.0.1.2	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: rewrite IHl; only 1: auto).	5.9631550312	17915
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40	0.4.0.8.4.0.0.2.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct l'; only 1: simpl; only 1: contradiction; only 1: firstorder  (subst; auto); only 1: simpl; only 1: injection H; only 1: auto).	25.9618477821	62242
Coq.Lists.List.combine_length	40	1.0.1.0.0.0.0.0.0	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.144100189209	169
Coq.Lists.List.combine_nth	40	0.0.0.0.2.1.0.1.0.0.0.0.5.0	search with cache (only 1: induction l, l'; only 1: intros; only 1: destruct n; only 1: auto; only 1: auto; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: discriminate; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	9.72285604477	16454
Coq.Lists.List.in_prod_aux	40	2.1.0	search with cache (only 1: induction l; only 1: auto; only 1: firstorder  (subst; auto)).	0.026526927948	11
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	0.13	search with cache (only 1: repeat red; only 1: auto).	0.0683929920197	90
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40	0.2.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0299170017242	5
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0144929885864	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.014711856842	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	1	search with cache (only 1: auto).	0.012913942337	2
Coq.Lists.List.incl_tl	40	0.12	search with cache (only 1: right; only 1: auto).	0.0692348480225	135
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto).	0.0151958465576	1
Coq.Lists.List.incl_appl	40	6.1	search with cache (only 1: intros l m a; only 1: auto using in_app_or, in_or_app).	0.0283172130585	17
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.016350030899	1
Coq.Lists.List.incl_cons	40	4.2.3	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.150177955627	62
Coq.Lists.List.incl_app	40
Coq.Lists.List.firstn_nil	40	0.0.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0169169902802	6
Coq.Lists.List.firstn_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0140018463135	2
Coq.Lists.List.firstn_all	40	4.0.1.7	search with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: now rewrite IH).	0.0901401042938	172
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.0130090713501	1
Coq.Lists.List.firstn_le_length	40	0.0.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0315291881561	7
Coq.Lists.List.firstn_length_le	40	3.0.3.0.3.3.0.2.3.3	search with cache (only 1: induction l; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: split; only 1: simpl; only 1: auto with arith).	13.6477398872	30810
Coq.Lists.List.firstn_app	40	0.2.0.0.3.0.4	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	2.77653002739	2565
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.0137829780579	1
Coq.Lists.List.skipn_nil	40	0.0.0.1	search with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0181949138641	5
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.014240026474	1
Coq.Lists.List.skipn_none	40	0.0.5	search with cache (only 1: induction l as [| v l IHl]; only 1: auto; only 1: auto).	0.0276989936829	14
Coq.Lists.List.skipn_all2	40	5.0.0.0.2.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: auto with arith).	2.01597690582	1318
Coq.Lists.List.firstn_skipn	40	3.0.0.0.0.0.0.5	search with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	3.25880002975	4230
Coq.Lists.List.firstn_length	40
Coq.Lists.List.skipn_length	40	0.1.0.2.0.0.0.0.2.5	search with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	2.42567205429	3438
Coq.Lists.List.skipn_all	40	4	search with cache (only 1: now induction l).	0.0163021087646	5
Coq.Lists.List.skipn_app	40	0.0.0.3.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.396279811859	413
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	2	search with cache (only 1: now induction l).	0.0171530246735	3
Coq.Lists.List.combine_firstn_l	40	1.2.0.2.0.0.0.0.3	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	3.04844999313	4565
Coq.Lists.List.combine_firstn_r	40	1.0.0.0.0.0.0.7.0.0	search with cache (only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: now rewrite ?firstn_nil; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	2.16901302338	3628
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40
Coq.Lists.List.Add_length	40
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0174829959869	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.1.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0446150302887	5
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	0.0	search with cache (only 1: intuition; only 1: inversion_clear H).	0.0355200767517	2
Coq.Lists.List.Exists_cons	40
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.0.0.2.1.1.0.2.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.62458014488	3233
Coq.Lists.List.Forall_inv	40	0.1.5.8	search with cache (only 1: intros l; only 1: intro Pdec; only 1: inversion 1; only 1: auto).	0.252870798111	446
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	1.3.1	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.0228931903839	8
Coq.Lists.List.Exists_impl	40	0.0.5.3.4.5	search with cache (only 1: intro Pdec; only 1: intros f g H l; only 1: induction l as [| a l' Hrec]; only 1: constructor 1; only 1: auto; only 1: now apply Exists_cons_tl).	1.07581996918	3706
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40	0.4.2.2.0.0.4.1.0.1.1.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	27.3933742046	22928
Coq.Lists.List.Forall_impl	40	0.0.0.0.3.15.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	2.73492097855	8279
Coq.Lists.List.Forall2_refl	40	3	search with cache (only 1: constructor).	0.0149641036987	4
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	0.2.0.0.3.3	search with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.208911895752	165
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	0.2.0.12	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	0.0899078845978	143
Coq.Lists.List.repeat_spec	40	0.0.2.0.4.3.16	search with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	6.79046797752	17944
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	1.2	search with cache (only 1: repeat intro; only 1: eauto).	0.00923919677734	5
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	0.1.0.1.0	search with cache (only 1: induction l; only 1: intuition; only 1: intuition; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	0.193208932877	76
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	1.0.0.0.1.4	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: eauto).	0.325703859329	274
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.2.9.3.34	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	1.76100182533	1938
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0155749320984	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.00817894935608	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.0.2.0.1.1.2.0.0	search with cache (only 1: split; only 1: induction 1 as [| a l [| ]]; only 1: auto; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: induction 1 as [| a l [| ]]; only 1: auto; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel).	0.813844919205	1133
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.4.0	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.327093839645	182
Coq.Lists.SetoidList.InA_nil	40	2.0	search with cache (only 1: intuition; only 1: easy).	0.0315339565277	4
Coq.Lists.SetoidList.InA_alt	40	0.0.0.0.2.0.0.1.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	1.10337686539	504
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	10	search with cache (only 1: inversion 1).	0.0491840839386	60
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.0.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: induction 1; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto).	0.0218260288239	7
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	1.5.0	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.112376928329	9
Coq.Lists.SetoidList.In_InA	40	1.7.1	search with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: firstorder).	0.291647911072	102
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.0.1.3.2	search with cache (only 1: split; only 1: intuition; only 1: invlist InA; only 1: auto; only 1: auto).	0.0654509067535	33
Coq.Lists.SetoidList.InA_double_head	40	3.2	search with cache (only 1: rewrite 2!InA_cons; only 1: tauto).	0.454575061798	7
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0714569091797	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.8	search with cache (only 1: constructor; only 1: intuition; only 1: invlist InA; only 1: auto).	0.171304941177	53
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.0	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0514049530029	3
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.1	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0737547874451	4
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.3	search with cache (only 1: red; only 1: intros; only 1: rewrite InA_app_iff; only 1: tauto).	0.0259249210358	7
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	1.3.2.1.10.0.3.15	search with cache (only 1: simple induction l; only 1: intros x; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: inv; only 1: auto).	24.3656101227	9763
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	2.0.3.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: simpl; only 1: constructor; only 1: auto).	0.174462080002	48
Coq.Lists.SetoidList.InA_InfA	40	2.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: eauto).	0.0245780944824	6
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	1.5.0.0.3.7	search with cache (only 1: intros; only 1: induction l1; only 1: intuition; only 1: simpl; only 1: inv; only 1: now constructor).	0.834578990936	885
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	1.1.2.16	search with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto).	2.08463478088	2685
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.2.0.2.1.8	search with cache (only 1: repeat red; only 1: induction 1; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	2.99388694763	1244
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.103521108627	4
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.1.5.0.0.2	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.164271831512	266
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40	2.20	search with cache (only 1: fix odd_spec 1; only 1: intuition).	22.9561698437	9277
Coq.NArith.BinNat.N.eq_dec	40	4.0	search with cache (only 1: decide equality; only 1: decide equality).	0.195843935013	11
Coq.NArith.BinNat.N.discr	40	1.25.25.3.17	search with cache (only 1: induction n; only 1: auto; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	13.2220008373	65496
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.159124851227	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.012060880661	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0200181007385	5
Coq.NArith.BinNat.N.bi_induction	40	5.20.0	search with cache (only 1: intros A A_wd A0 AS; only 1: fix even_spec 1; only 1: auto).	1.3652510643	3420
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	2	search with cache (only 1: trivial).	0.012895822525	3
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0122470855713	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.0122909545898	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: trivial).	0.0123820304871	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	0.0173389911652	5
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: auto).	0.0156729221344	4
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.1.1.0.2.0.5	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: trivial).	2.73953104019	2639
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.8.1.1.3	search with cache (only 1: destruct p; only 1: auto; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite ?Pos.add_carry_spec, ?IHp; only 1: trivial).	8.94493103027	12298
Coq.NArith.BinNat.N.pred_succ	40	2.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0286819934845	16
Coq.NArith.BinNat.N.pred_sub	40	0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	0.01717710495	4
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0262999534607	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.014664888382	3
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.014750957489	4
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0136878490448	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	5.11.7	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intuition).	4.95407605171	3941
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	1	search with cache (only 1: now split).	0.0137569904327	2
Coq.NArith.BinNat.N.compare_le_iff	40	5.3	search with cache (only 1: revert m; only 1: now destruct n).	0.174085855484	86
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.527390003204	69
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	0	search with cache (only 1: reflexivity).	0.0137059688568	1
Coq.NArith.BinNat.N.succ_double_spec	40	2	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0896801948547	3
Coq.NArith.BinNat.N.double_add	40	0.1.0.1.0.1.0.5	search with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	4.66674804688	1286
Coq.NArith.BinNat.N.succ_double_add	40	1	search with cache (only 1: now destruct n, m).	0.996307134628	43
Coq.NArith.BinNat.N.double_mul	40	0.0.0.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	2.93435811996	346
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	22	search with cache (only 1: now destruct n).	1.57165193558	704
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0146200656891	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	2.1.1.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: auto).	0.538264989853	102
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	3.1.1.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: trivial).	0.19299197197	305
Coq.NArith.BinNat.N.succ_double_le_mono	40
Coq.NArith.BinNat.N.compare_0_r	40	0.0.5	search with cache (only 1: rewrite compare_lt_iff; only 1: apply le_ngt; only 1: apply le_0_l).	0.0325388908386	8
Coq.NArith.BinNat.N.pow_0_r	40	1	search with cache (only 1: trivial).	0.0138790607452	2
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	2.3	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0249190330505	18
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	5.0.14	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	0.457143068314	576
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.2.0	search with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.019800901413	6
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.1	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.015016078949	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.5.1.0.2.1.17	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	10.2666130066	8462
Coq.NArith.BinNat.N.gcd_divide_r	40	1.0.4.4.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (_, H); only 1: exists bb; only 1: simpl; only 1: now rewrite mul_comm).	5.08671998978	3416
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	1	search with cache (only 1: apply le_0_l).	0.0150830745697	2
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	17	search with cache (only 1: now destruct a).	0.0872709751129	127
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.022469997406	5
Coq.NArith.BinNat.N.testbit_neg_r	40	0.0.6.0.14	search with cache (only 1: induct n; only 1: now destruct a; only 1: induction n; only 1: now destruct a; only 1: now destruct a).	3.04049491882	1920
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40	6.3.5.11	search with cache (only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: revert a m; only 1: fix odd_spec 1; only 1: now destruct (PeanoNat.Nat.odd n)).	14.1117758751	6635
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.014436006546	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.5	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0265579223633	7
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.015645980835	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.1	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0274069309235	4
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0177919864655	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.5.1.0.3	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: trivial).	0.37460398674	260
Coq.NArith.Ndec.Peqb_complete	40	8	search with cache (only 1: apply Pos.eqb_eq).	0.0355670452118	9
Coq.NArith.Ndec.Peqb_Pcompare	40	0.3	search with cache (only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0403769016266	5
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0396859645844	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0396020412445	1
Coq.NArith.Ndec.Neqb_complete	40	6	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0539860725403	14
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	4.2.15.4	search with cache (only 1: eqb2eq; only 1: intros; only 1: intros <-; only 1: intuition).	6.05813002586	4059
Coq.NArith.Ndec.Ndiv2_eq	40	0.2.25.6	search with cache (only 1: intros; only 1: eqb2eq; only 1: subst; only 1: reflexivity).	0.877851963043	1769
Coq.NArith.Ndec.Ndiv2_neq	40	1.0.1.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0415630340576	6
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	1.0.1.2	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.185449838638	34
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	15	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0663311481476	112
Coq.NArith.Ndec.Nleb_antisym	40	3.0.0	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order').	0.066596031189	34
Coq.NArith.Ndec.Nleb_trans	40	0.0.0.0	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order').	0.0576131343842	4
Coq.NArith.Ndec.Nleb_ltb_trans	40	2.0.4	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.12637591362	34
Coq.NArith.Ndec.Nltb_leb_trans	40	2.0.7.2	search with cache (only 1: rewrite !Nleb_Nle; only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.857778072357	443
Coq.NArith.Ndec.Nltb_trans	40	2.0.7	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.730145931244	133
Coq.NArith.Ndec.Nltb_leb_weak	40	1.0.15	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	1.260160923	1188
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	2.2.0.6.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	0.686607122421	708
Coq.NArith.Ndec.Nltb_double_mono	40	1.0.0.6.1.0.7.0.4	search with cache (only 1: eqb2eq; only 1: unfold Nleb; only 1: intro H'; only 1: rewrite !N2Nat.inj_double; only 1: intro; only 1: apply H'; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	17.5781111717	11086
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	3.0	search with cache (only 1: unfold Nleb; only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0481941699982	5
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40	12.13.5.1.10.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: destruct a as [| p], b as [| q]; only 1: N.order; only 1: easy; only 1: N.solve_min; only 1: N.solve_min).	35.4479961395	47302
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.295300960541	42
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	5.0.8	search with cache (only 1: induction a as [| p]; only 1: auto; only 1: discriminate).	0.237838029861	258
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.1	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0178110599518	5
Coq.NArith.Ndist.ni_min_O_r	40
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).	0.0182430744171	3
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.0	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).	0.0172939300537	3
Coq.NArith.Ndist.ni_le_refl	40	0.0.0.0.1.0.0.4.14.1.6.4	search with cache (only 1: intros n; only 1: destruct n; only 1: reflexivity; only 1: repeat red; only 1: elim n; only 1: trivial; only 1: intros; only 1: simpl; only 1: inversion H; only 1: rewrite H1; only 1: rewrite H1; only 1: reflexivity).	2.20616292953	8340
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.1.3.1.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0310227870941	33
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	1.0.5.1.0	search with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.228180170059	320
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.2.0.1	search with cache (only 1: simpl; only 1: intro; only 1: intros; only 1: Nat2N.nat2N).	0.0287659168243	7
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.011950969696	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	search with cache (only 1: simpl; only 1: auto with *).	0.0137720108032	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0118119716644	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	2.0.0.1.5.0.1.0.7.0.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	11.0459330082	25556
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	9.1	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).	0.685960054398	927
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	1.0.0.0.0.0.0.0.1	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: apply N.pos_land_spec).	0.163661003113	302
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	1.0.1.0.0.0.0.0.0.1	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).	0.948666095734	1419
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	5.4.21	search with cache (only 1: intros [| n]; only 1: reflexivity; only 1: now destruct n).	0.942625999451	2825
Coq.NArith.Ndigits.Ndouble_bit0	40	0.1.0	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.015655040741	4
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.1.5.1	search with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: easy).	0.0208158493042	31
Coq.NArith.Ndigits.Ndiv2_double	40
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40
Coq.NArith.Ndigits.Ndiv2_correct	40	0.2.0.1.2.0.1.2.0.0.2.0.1.1	search with cache (only 1: intros; only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: trivial).	9.69649791718	19618
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40	2.13	search with cache (only 1: fix odd_spec 1; only 1: trivial).	0.353594064713	359
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.2.1.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: easy).	0.02068400383	7
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.2.0.0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	2.07376599312	3566
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	1.0.0.0.0.1.0.1.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	3.55622410774	4122
Coq.NArith.Ndigits.Nless_def_3	40	0.0.3.1.2.0.3.0.0.1.7	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: easy; only 1: trivial).	3.05142402649	7365
Coq.NArith.Ndigits.Nless_def_4	40	0.0.1.0.1.0.3.0.0.8.8	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: reflexivity).	3.50888800621	9445
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.0.16.15.14	search with cache (only 1: intro H; only 1: destruct H; only 1: now try rewrite H; only 1: exists p; only 1: trivial).	1.59557294846	7690
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40	3.5.13.15.3	search with cache (only 1: intro; only 1: generalize eq_refl; only 1: revert n; only 1: fix le_div2 1; only 1: auto).	4.71730399132	12565
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.0.0.0.8.3.0.1.1.7.3.6	search with cache (only 1: apply Vector.rectS; only 1: simpl; only 1: induction a as [| p]; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	15.3480389118	19144
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.2.0.0.1.4.1.0.0.1	search with cache (only 1: destruct a; only 1: reflexivity; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: reflexivity).	1.66981196404	2536
Coq.NArith.NArith.test	40	2	search with cache (only 1: N.order).	0.00960206985474	7
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.5.0.0.0.1.1	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: rewrite <- (id a), <- (id a'); only 1: intros; only 1: now f_equal).	0.697148799896	489
Coq.NArith.Nnat.N2Nat.inj_double	40	0.0.0.4.5.16.4.25.7	search with cache (only 1: Nat.nzsimpl; only 1: destruct a as [| p]; only 1: now f_equal; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: now rewrite Nat.add_0_r).	20.6335098743	21226
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40	2.25.20.1.0.1.12	search with cache (only 1: destruct a; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: fix sqrtrem_spec 1; only 1: trivial).	20.6221079826	51703
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0381298065186	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	3.0.0.2	search with cache (only 1: simpl; only 1: destruct n; only 1: trivial; only 1: now destruct n).	0.0208599567413	9
Coq.NArith.Nnat.Nat2N.inj_pred	40	2.0.0.0	search with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: nat2N).	0.0545070171356	17
Coq.NArith.Nnat.Nat2N.inj_add	40	0	search with cache (only 1: nat2N).	0.0354030132294	1
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	search with cache (only 1: nat2N).	0.0358021259308	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0358738899231	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0329809188843	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	1	search with cache (only 1: nat2N).	0.0355021953583	2
Coq.NArith.Nnat.Nat2N.inj_max	40	1	search with cache (only 1: nat2N).	0.0361089706421	2
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	0.0964961051941	9
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	15.1.0	search with cache (only 1: destruct x; only 1: simpl; only 1: destr_bool).	0.616657018661	459
Coq.Strings.Ascii.eqb_sym	40	2.0.12	search with cache (only 1: destruct x; only 1: simpl; only 1: destr_bool).	1.91115999222	836
Coq.Strings.Ascii.eqb_eq	40	0.6.9.13	search with cache (only 1: destruct n, m; only 1: simpl; only 1: do 8 (case Bool.eqb_spec; [ intros -> | constructor; now intros [=] ]); only 1: intuition).	32.3430168629	11628
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, N.eqb_eq).	0.0196168422699	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Pos.eqb_eq, Exx', Eyy').	0.022176027298	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	0.12925696373	10
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0.10.0.10.4.1	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: revert H; only 1: t_eqb; only 1: revert H; only 1: t_eqb).	14.9976010323	14339
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	1	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0268821716309	11
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinNat.N.eqb_eq, Exx', Eyy').	0.0155210494995	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	1.0.0.3	search with cache (only 1: induction s as [| ? ? IHs]; only 1: auto; only 1: cbn; only 1: apply f_equal, IHs).	0.0114920139313	8
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	1.13.1.4	search with cache (only 1: do 256 try destruct x as [| x]; only 1: now f_equal; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	4.56685400009	3574
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0138721466064	2
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0187799930573	2
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0207748413086	2
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	30	search with cache (only 1: constructor).	0.0537519454956	451
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.0960009098053	3
Coq.Reals.Ratan.pos_half_prf	40	0.0	search with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.00992107391357	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40	2.13.2.0	search with cache (only 1: unfold Un_decreasing; only 1: intros P H0 HS; only 1: fix le_div2 1; only 1: trivial).	2.39435315132	4576
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40	0.3.2.1.1.1.2.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: rewrite Rmult_1_r; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: ring; only 1: reflexivity).	2.54712510109	2394
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	13.0.1	search with cache (only 1: intros; only 1: unfold Rdiv; only 1: lra).	3.18532800674	1420
Coq.Reals.Ratan.pos_opp_lt	40	10.3	search with cache (only 1: intros y H; only 1: lra).	0.0894911289215	211
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	12.20	search with cache (only 1: intros n H4; only 1: apply pow_lt).	15.1796450615	24958
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.6.3	search with cache (only 1: intros [| a l] H; only 1: easy; only 1: auto).	0.182466030121	148
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40	14.6	search with cache (only 1: fix even_equiv 1; only 1: intuition Nat.order).	1.05772995949	3676
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40	1.7	search with cache (only 1: fix odd_equiv 1; only 1: tauto).	0.0747129917145	86
Coq.Reals.RList.RList_P10	40	2.30	search with cache (only 1: fix even_odd_double 1; only 1: auto).	1.11937999725	3422
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	5.2.4.0.5	search with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto with arith).	0.825813055038	1624
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	2.2.0.5.1	search with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: auto).	0.872318029404	2413
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	7.1.8	search with cache (only 1: intros; only 1: f_equal; only 1: trivial).	0.0588641166687	236
Coq.Reals.RList.RList_P22	40	0.1.10.1.3.2	search with cache (only 1: intro n; only 1: case n; only 1: intros; only 1: easy; only 1: intros; only 1: reflexivity).	2.06419205666	4481
Coq.Reals.RList.RList_P23	40	3.0.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: apply INR_eq; only 1: auto).	0.0243170261383	15
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40	9.1.0.4.0.4	search with cache (only 1: intros n; only 1: intros; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	16.4132769108	20386
Coq.Reals.RList.RList_P28	40	0.3.7.0.5.0	search with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	0.323470830917	619
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.1.0.1.0	search with cache (only 1: intro; only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.0287790298462	25
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.1	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.151525020599	58
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.0.3.3	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: now rewrite Nat.add_0_r).	0.0171759128571	30
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	1.0.2.0.1.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: case (Rle_dec r1 r2); only 1: tauto; only 1: intuition eauto  4 with real).	0.153226852417	24
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.0.2.1.0.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: tauto; only 1: tauto).	0.0718500614166	27
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40
Coq.Reals.Rbasic_fun.Rmin_left	40
Coq.Reals.Rbasic_fun.Rmin_right	40	1.0.2.0.4.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: replace y with - x + x + y by ring; only 1: auto with real).	1.79636001587	244
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0125160217285	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.1.0.0.0.0.2.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.140633106232	99
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	0.0.2.2.0	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: assumption; only 1: assumption).	0.0181109905243	9
Coq.Reals.Rbasic_fun.Rmin_glb	40
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	4.0.2.0.3.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.89048409462	1518
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.2.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.013710975647	7
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: right; only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto with real).	0.0152590274811	9
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.0.1.1.0.2	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: intros H1 H2; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: auto).	0.59712100029	329
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.1.2.0.1.0.1	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: intros H1 H2; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	0.384472846985	497
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0136971473694	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	1.0.1.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0410811901093	48
Coq.Reals.Rbasic_fun.Rcase_abs	40	1.1.10.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: eauto; only 1: auto with zarith real).	0.57054400444	468
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	0.4.0.4.6	search with cache (only 1: intros a b; only 1: rewrite Rabs_right; only 1: auto with real; only 1: apply Rle_ge; only 1: auto).	9.39247322083	4164
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.1.0.0.1.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: destruct (total_order_T r1 r2) as [[H| ]| H]; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H); only 1: left; only 1: assumption; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H)).	0.549799919128	465
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0.0.2.2	search with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: auto).	0.0255739688873	37
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	1.0	search with cache (only 1: intros n m; only 1: intuition).	0.019345998764	3
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	5.0.1.2.6	search with cache (only 1: intros n; only 1: elim n; only 1: Lia.lia; only 1: simpl; only 1: auto with real).	1.63597202301	2379
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0104520320892	3
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	3.0.9.6	search with cache (only 1: intros; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: Nat.order).	8.58629798889	3281
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	2	search with cache (only 1: auto).	0.00624990463257	3
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.1	search with cache (only 1: simpl; only 1: easy).	0.00755214691162	3
Coq.Reals.Rfunctions.pow_1	40	3.0.2	search with cache (only 1: simpl; only 1: intro; only 1: auto with real).	0.0167400836945	17
Coq.Reals.Rfunctions.pow_add	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0236060619354	10
Coq.Reals.Rfunctions.Rpow_mult_distr	40	6.11.11	search with cache (only 1: intros xn cau; only 1: fix odd_equiv 1; only 1: auto with real).	16.3253750801	15703
Coq.Reals.Rfunctions.pow_nonzero	40	4.5.2.6.8.0	search with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: exact R1_neq_R0; only 1: simpl; only 1: auto with real).	19.5232329369	24224
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40	4.16.2	search with cache (only 1: intro; only 1: fix even_equiv 1; only 1: auto with real).	23.8545768261	37853
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	2.0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: simpl; only 1: induction n; only 1: field; only 1: simpl; only 1: apply Rmult_eq_compat_l; only 1: auto with real).	0.0345990657806	13
Coq.Reals.Rfunctions.tech_pow_Rplus	40	3.9.0.6	search with cache (only 1: intros n m; only 1: intro; only 1: repeat rewrite S_INR; only 1: ring).	20.2936849594	15866
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	3.0.8.0.0.2.0.1.0	search with cache (only 1: intro n; only 1: case n; only 1: intro; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto with real).	14.8108639717	6439
Coq.Reals.Rfunctions.Rinv_pow	40	0.0.0.2.1.12.2.8.0.0.0	search with cache (only 1: intro; only 1: simple induction n; only 1: simpl; only 1: auto with real; only 1: intro; only 1: unfold pow; only 1: intros; only 1: rewrite Rinv_mult_distr; only 1: auto with real; only 1: auto with real; only 1: auto with real).	14.6416130066	35483
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.1.2.0.0.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	0.876749038696	888
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.2.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: easy; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: rewrite Rmult_1_l; only 1: simpl; only 1: auto with real; only 1: ring).	1.9979391098	1728
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	3.1	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0222809314728	12
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40	3.0.0.0.0.18	search with cache (only 1: intros H; only 1: induction n; only 1: simpl; only 1: Z.order'; only 1: simpl; only 1: auto with *).	20.3343958855	29113
Coq.Reals.Rfunctions.powerRZ_O	40	0.1	search with cache (only 1: intro; only 1: easy).	0.00822401046753	3
Coq.Reals.Rfunctions.powerRZ_1	40	1.8	search with cache (only 1: simpl; only 1: auto with real).	0.0726838111877	53
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	3.0.2.3.0.0.4.0.2	search with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: intro; only 1: auto with real; only 1: simpl; only 1: intro; only 1: auto with real).	3.68727111816	6685
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0205240249634	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	8.0.1.0.2	search with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	1.64842891693	1851
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40	1.12.0.1.1.0.12.1	search with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: right; only 1: reflexivity; only 1: simpl; only 1: fix ind_0_1_SS 1; only 1: auto with arith real).	20.6257100105	45602
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0113890171051	9
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.0.0.0.5.0	search with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.689029216766	487
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	0.3	search with cache (only 1: intros; only 1: apply Nat.div2_double).	0.00835490226746	5
Coq.Reals.Exp_prop.div2_S_double	40	0.1.0	search with cache (only 1: intro; only 1: rewrite Nat.div2_succ_double; only 1: reflexivity).	0.00867605209351	4
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	1.8.2.4	search with cache (only 1: destruct (exist_exp (-1)) as (?, e); only 1: intros; only 1: field; only 1: now split).	0.746266841888	1050
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	1.0.7.0.0.2.0.2	search with cache (only 1: unfold D_in; only 1: unfold limit1_in; only 1: unfold Rminus; only 1: unfold limit_in; only 1: simpl; only 1: intro x; only 1: intros; only 1: firstorder).	4.93342995644	9436
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	0.2.2.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0107939243317	8
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	0.15.3	search with cache (only 1: intro n; only 1: red; only 1: now right).	0.222393035889	750
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.00690603256226	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	1.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.00861096382141	6
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.2.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0216789245605	27
Coq.Reals.RIneq.Rdichotomy	40	2.3.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0187890529633	11
Coq.Reals.RIneq.Rlt_le	40
Coq.Reals.RIneq.Rgt_ge	40	0.0.9.0.0	search with cache (only 1: intro; only 1: intro; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	3.73104906082	337
Coq.Reals.RIneq.Rle_ge	40	0.0.6.0.5.1.0.2	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: inversion_clear H; only 1: tauto; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	39.3697659969	7499
Coq.Reals.RIneq.Rge_le	40	0.0.1.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0211050510406	8
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.00646185874939	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.00565004348755	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.1	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0129489898682	5
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.2.0	search with cache (only 1: intros r1 r2; only 1: intro abs; only 1: apply Rnot_le_lt; only 1: auto with real).	0.00845098495483	6
Coq.Reals.RIneq.Rnot_lt_le	40	5.0.1.0	search with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: now intuition).	0.0680739879608	15
Coq.Reals.RIneq.Rnot_gt_le	40	1.0.3.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0180671215057	10
Coq.Reals.RIneq.Rnot_gt_ge	40	1.0.3.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0525629520416	10
Coq.Reals.RIneq.Rnot_lt_ge	40	0.5.2.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.109084844589	178
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0109648704529	11
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	2	search with cache (only 1: auto with real).	0.0540099143982	58
Coq.Reals.RIneq.Rle_not_lt	40
Coq.Reals.RIneq.Rge_not_lt	40
Coq.Reals.RIneq.Rle_not_gt	40
Coq.Reals.RIneq.Rge_not_gt	40	0.2.0	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.0128769874573	16
Coq.Reals.RIneq.Req_le	40	0.0.3.3	search with cache (only 1: intro; only 1: intro; only 1: red; only 1: tauto).	0.00962901115417	10
Coq.Reals.RIneq.Req_ge	40	0.0.3	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.00943684577942	6
Coq.Reals.RIneq.Req_le_sym	40	1.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0097029209137	3
Coq.Reals.RIneq.Req_ge_sym	40	1.1.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0104598999023	5
Coq.Reals.RIneq.Rgt_asym	40	0.1.2.0.1	search with cache (only 1: red; only 1: intros A C h1 h2; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).	0.00874280929565	9
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40
Coq.Reals.RIneq.Rle_le_eq	40	0.1.1.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.153362989426	35
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0135819911957	1
Coq.Reals.RIneq.Rlt_eq_compat	40	0.4.10.9	search with cache (only 1: intro; only 1: intros A x y z H1 H2; only 1: subst; only 1: auto).	1.29041481018	2471
Coq.Reals.RIneq.Rgt_eq_compat	40	1.0.6.8	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: auto with rorders).	0.95692896843	1027
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.1	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0336780548096	30
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	1.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.131193161011	5
Coq.Reals.RIneq.Rgt_dec	40	0.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0315730571747	4
Coq.Reals.RIneq.Rge_dec	40	0.0.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.044331073761	3
Coq.Reals.RIneq.Rlt_le_dec	40	0.3.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.328068971634	68
Coq.Reals.RIneq.Rgt_ge_dec	40	1.3.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0366089344025	22
Coq.Reals.RIneq.Rle_lt_dec	40	1.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0405030250549	5
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.2.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.12028002739	75
Coq.Reals.RIneq.Rlt_or_le	40	0.21.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	9.80496096611	4700
Coq.Reals.RIneq.Rgt_or_ge	40	5.5.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.564872026443	821
Coq.Reals.RIneq.Rle_or_lt	40	3.0.2.1.1	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with real; only 1: eauto with real).	0.26887178421	168
Coq.Reals.RIneq.Rge_or_gt	40	0.2.0.2.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.0760469436646	67
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.7.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.173621177673	26
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	8	search with cache (only 1: intuition).	0.0232911109924	29
Coq.Reals.RIneq.Rplus_opp_l	40
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.1.1.3	search with cache (only 1: intro; only 1: intros x y H; only 1: destruct H; only 1: reflexivity).	0.161353826523	97
Coq.Reals.RIneq.Rplus_eq_compat_r	40	6.0.7.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: now subst).	2.78450393677	1918
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	1.2.1.2.0	search with cache (only 1: intros x y H; only 1: replace y with - x + x + y by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0941798686981	94
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	1.14454507828	41
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0189168453217	4
Coq.Reals.RIneq.Rmult_0_r	40	2.0	search with cache (only 1: intro; only 1: ring).	0.772018909454	22
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0134971141815	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.1.2	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	0.0664248466492	41
Coq.Reals.RIneq.Rmult_1_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0124900341034	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40	8	search with cache (only 1: auto with real).	0.179472923279	109
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.0.9.1	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: reflexivity).	1.06946897507	762
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.00839686393738	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.00670599937439	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	4.0	search with cache (only 1: intros; only 1: intuition).	0.0187470912933	6
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0146191120148	3
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	search with cache (only 1: auto with real).	0.00708889961243	1
Coq.Reals.RIneq.Ropp_0	40	4	search with cache (only 1: ring).	1.23983311653	29
Coq.Reals.RIneq.Ropp_eq_0_compat	40
Coq.Reals.RIneq.Ropp_involutive	40
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	1.1	search with cache (only 1: intros; only 1: ring).	0.448173999786	17
Coq.Reals.RIneq.Ropp_mult_distr_l	40	4.0	search with cache (only 1: intros; only 1: ring).	2.36380195618	21
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	1.0	search with cache (only 1: intros; only 1: ring).	1.4656560421	18
Coq.Reals.RIneq.Rmult_opp_opp	40	1.0	search with cache (only 1: intros; only 1: ring).	3.65004706383	25
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0145659446716	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0137460231781	2
Coq.Reals.RIneq.Rminus_0_r	40	5.1	search with cache (only 1: intros; only 1: ring).	0.015321969986	8
Coq.Reals.RIneq.Rminus_0_l	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0133838653564	3
Coq.Reals.RIneq.Ropp_minus_distr	40	5.4	search with cache (only 1: intros; only 1: ring).	1.49822497368	75
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0134370326996	2
Coq.Reals.RIneq.Rminus_diag_eq	40	3.0.2.1	search with cache (only 1: intro; only 1: intros; only 1: rewrite H; only 1: ring).	0.0234911441803	16
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	2.2	search with cache (only 1: intros; only 1: ring).	1.33591604233	14
Coq.Reals.RIneq.Rminus_eq_contra	40	2.4.0	search with cache (only 1: red; only 1: intros; only 1: auto with real).	0.0425109863281	26
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.2.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.012748003006	17
Coq.Reals.RIneq.Rminus_not_eq_right	40	1.0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: apply Rminus_diag_eq; only 1: auto).	0.00893688201904	6
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	search with cache (only 1: intros; only 1: ring).	1.75882911682	18
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40
Coq.Reals.RIneq.Rinv_mult_distr	40	1.1.3.0.0	search with cache (only 1: intros; only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto; only 1: auto).	0.513426065445	64
Coq.Reals.RIneq.Ropp_inv_permute	40
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0197269916534	3
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.1.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.0257740020752	6
Coq.Reals.RIneq.Rinv_r_simpl_m	40
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	5.3.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0769300460815	70
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	1.2.2	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0249898433685	12
Coq.Reals.RIneq.Rplus_le_compat_l	40
Coq.Reals.RIneq.Rplus_ge_compat_l	40	4.0.8.3.3	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition).	2.38425898552	895
Coq.Reals.RIneq.Rplus_le_compat_r	40	1.0.3.2.2.1.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: left; only 1: auto with real; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	5.6085600853	2688
Coq.Reals.RIneq.Rplus_ge_compat_r	40	4.6.5.2	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r2 r); only 1: rewrite (Rplus_comm r1 r); only 1: auto with real).	1.62086105347	641
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.1.1.1	search with cache (only 1: do 3 intro; only 1: do 3 intro; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0150740146637	8
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.1	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0221838951111	6
Coq.Reals.RIneq.Rplus_ge_gt_compat	40
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.0.1	search with cache (only 1: intros n m p q; only 1: generalize (Rlt_le_dec m q); only 1: intuition).	0.0491621494293	74
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	1.1.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.00857400894165	5
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0227417945862	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	0	search with cache (only 1: eauto using Rlt_trans with rorders).	0.00779318809509	1
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.0.0.2.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.09547996521	8
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	1.3.0.0.1	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.526510000229	14
Coq.Reals.RIneq.Ropp_le_contravar	40	1.2.2	search with cache (only 1: intro; only 1: intro; only 1: auto with real).	0.0238502025604	11
Coq.Reals.RIneq.Ropp_ge_contravar	40	1.3	search with cache (only 1: intros; only 1: auto with real).	0.415447950363	17
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.06085896492	54
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0310671329498	33
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0103039741516	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.3.4	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.71603512764	113
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0110938549042	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.1.2	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0132567882538	7
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1	search with cache (only 1: eauto using Rlt_trans with rorders).	0.017245054245	16
Coq.Reals.RIneq.Rmult_gt_compat_l	40	8.2	search with cache (only 1: intros x y z; only 1: auto with *).	0.0735938549042	116
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	9.3	search with cache (only 1: intros x y z; only 1: auto with *).	1.84992289543	1602
Coq.Reals.RIneq.Rmult_ge_compat_r	40	9.3	search with cache (only 1: intros x y z; only 1: auto with *).	1.39268803596	1192
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.2.0	search with cache (only 1: intros; only 1: replace r with - - r; only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.0207068920135	9
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	1.0.0.1.1	search with cache (only 1: intros; only 1: red; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0280420780182	8
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.1.0.1.4.0	search with cache (only 1: intros; only 1: elim H; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.768882036209	396
Coq.Reals.RIneq.Rge_minus	40	0.1.0.0.0.4.1.5.7	search with cache (only 1: destruct 1; only 1: apply Rle_ge; only 1: unfold Rle; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r; only 1: red; only 1: auto with real).	25.7808270454	18501
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.1.4.0.0.2.2.0	search with cache (only 1: intros; only 1: unfold Rgt in H; only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: unfold Rgt; only 1: auto with real; only 1: auto with real; only 1: ring).	3.92872786522	4070
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.2.0.0.0.1.0.0.1.0.0	search with cache (only 1: destruct 1; only 1: left; only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	1.80541992188	1799
Coq.Reals.RIneq.Rminus_ge	40	0.0.0.0.0.0.1.1.9.1.0	search with cache (only 1: destruct 1; only 1: red; only 1: left; only 1: replace r2 with 0 + r2; only 1: replace r1 with r1 - r2 + r2; only 1: apply Rplus_gt_compat_r; only 1: assumption; only 1: ring; only 1: auto with real; only 1: red; only 1: auto with real).	4.87155199051	5071
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0080418586731	4
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.2	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.224812030792	34
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with r * / r; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.82236790657	554
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	4.0	search with cache (only 1: intro; only 1: apply Rlt_n_Sn).	0.0133979320526	18
Coq.Reals.RIneq.tech_Rgt_minus	40	0.1.3.0.0.3.1.5	search with cache (only 1: intros x y z; only 1: unfold Rminus, CReal_minus; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with - 0; only 1: auto with real; only 1: ring).	17.4130539894	13531
Coq.Reals.RIneq.S_INR	40	0.1.6.1.2	search with cache (only 1: simpl; only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: reflexivity).	0.275829076767	294
Coq.Reals.RIneq.S_O_plus_INR	40	1.2.1.0.2.1	search with cache (only 1: simpl; only 1: intro; only 1: case n; only 1: simpl; only 1: auto with real; only 1: auto with real).	0.369887113571	287
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40	18	search with cache (only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).	0.440484046936	644
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	8.0.0.5.0.0.2.2	search with cache (only 1: intros [| p| n]; only 1: exists 0%nat; only 1: reflexivity; only 1: exists (Pos.to_nat p); only 1: rewrite positive_nat_Z; only 1: trivial; only 1: exists (Pos.to_nat n); only 1: now destruct n).	6.69795298576	14344
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	2.3.1.0.6	search with cache (only 1: red; only 1: intros; only 1: case H; only 1: apply eq_IZR; only 1: auto).	2.31866002083	781
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.1.13.1	search with cache (only 1: intros; only 1: replace 0 with 0 * r2; only 1: auto with real; only 1: auto with real).	6.60627102852	3974
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	9.20.8	search with cache (only 1: intros n; only 1: change_no_check 2%Z with (1 + 1)%Z; only 1: ring).	9.41579699516	4151
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: apply Rmult_le_compat_r; only 1: auto with real; only 1: left; only 1: auto with real; only 1: auto with real).	0.05499792099	36
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	1.0.2.6	search with cache (only 1: intros x y; only 1: intros; only 1: unfold Rdiv; only 1: ring).	0.430240869522	408
Coq.Reals.RIneq.Req_EM_T	40	0.0.3.11	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.7990860939	652
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40	0.0.3.2.3.3.3.3.0	search with cache (only 1: intro n; only 1: intros m IH; only 1: pattern m, n; only 1: apply le_elim_rel; only 1: intros; only 1: rewrite <- minus_n_O; only 1: trivial; only 1: auto with real; only 1: trivial).	2.93010902405	8585
Coq.Reals.ArithProp.lt_minus_O_lt	40	1.1.4	search with cache (only 1: intros n m Hn; only 1: apply Nat.lt_add_lt_sub_r; only 1: now Nat.nzsimpl).	0.0672760009766	34
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	0.0	search with cache (only 1: intros m IH; only 1: auto with arith).	0.019299030304	2
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.00967907905579	2
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	0.0	search with cache (only 1: intros x x' y y'; only 1: reflexivity).	0.00957703590393	2
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.0	search with cache (only 1: intro; only 1: field).	0.0252830982208	3
Coq.Reals.Ranalysis2.quadruple_var	40	4.0.1	search with cache (only 1: intro esp; only 1: rewrite <- double; only 1: field).	0.121581077576	21
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	3.0.0.0	search with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: assumption).	0.015702009201	13
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	0.6.3	search with cache (only 1: unfold included; only 1: intros A P h x; only 1: auto).	0.240571022034	713
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	4.3.1.4.1.12.3.0	search with cache (only 1: intros; only 1: intro; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: apply H1; only 1: apply H1).	1.50332188606	10603
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.0.11	search with cache (only 1: unfold open_set, interior; only 1: intros; only 1: elim H).	0.0145170688629	61
Coq.Reals.Rtopology.open_set_P5	40	34.1.11.3	search with cache (only 1: intros p q; only 1: red; only 1: unfold included; only 1: eauto).	0.600901126862	3021
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40	1.12.10.1.4	search with cache (only 1: intros []; only 1: simpl; only 1: red; only 1: intros A P (x, (Hp, Huniq)); only 1: eauto).	3.22260093689	15067
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40	4.0.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_mult; only 1: do 2 rewrite Rrepr_mult; only 1: ring).	1.03348493576	9
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	9.1.0	search with cache (only 1: unfold EUn; only 1: intro; only 1: now exists n).	0.197889089584	384
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40
Coq.Reals.Rseries.Un_growing_shift	40	0.3.6.12	search with cache (only 1: intros; only 1: intros m; only 1: simpl; only 1: auto with arith).	0.165950059891	597
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	1.2.2	search with cache (only 1: intros f X x; only 1: unfold opp_fct; only 1: auto with real).	0.0497210025787	26
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	0.5	search with cache (only 1: intros; only 1: reflexivity).	0.0409159660339	17
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40	11.2.1.0.0.1	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: auto).	8.16185879707	13167
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40	0.0.1.3.2.0.0.0.0.0.0.0.1.0.0.1	search with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	8.17917490005	15414
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.1.0.1.1.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.716891050339	63
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0397288799286	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.0.0	search with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0394279956818	5
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0396678447723	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.9.1	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.153675079346	184
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_comp	40	0.0.5.1.0.0.1.0.8.1.0	search with cache (only 1: unfold derivable_pt; only 1: intros f1 f2 x X X0; only 1: apply derive_pt_eq_0; only 1: elim X; only 1: intros; only 1: elim X0; only 1: elim X0; only 1: intros; only 1: apply derivable_pt_lim_comp; only 1: assumption; only 1: assumption).	13.2414550781	21122
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.1	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0508317947388	25
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	0.5.2.12	search with cache (only 1: symmetry; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr1) as H3; only 1: assumption).	10.3278019428	20704
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	1.1.0.1.0.0.0.5.0.2.2.1	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	8.81736087799	23989
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40	0.0.0.0.0.0.0.1.0.3.0.0.0.0.4.0	search with cache (only 1: intros; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: unfold R_dist; only 1: intros; only 1: elim (H eps H0); only 1: intros; only 1: exists x; only 1: intros; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with Un n - Un m; only 1: apply H1; only 1: assumption; only 1: assumption; only 1: ring).	3.1104619503	6857
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.00949597358704	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40	4.5.6	search with cache (only 1: intros a Ha; only 1: fix le_div2 1; only 1: trivial).	0.672116041183	1233
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	5.0.1.3.0	search with cache (only 1: replace (PI / 6) with PI / 2 - PI / 3 by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	3.44302892685	943
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.0126569271088	5
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0282640457153	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.0115168094635	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40	1.0.0.1.0.0.0.5.5.2.0	search with cache (only 1: apply Rmult_eq_reg_l with (2 * cos (PI / 6)); only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite cos_PI6; only 1: field; only 1: apply Rmult_integral_contrapositive_currified; only 1: discrR; only 1: cut (0 < cos (PI / 6)); only 1: auto with real; only 1: apply cos_gt_0; only 1: apply (Rlt_trans (- (PI / 2)) 0 (PI / 6) _PI2_RLT_0 PI6_RGT_0); only 1: apply PI6_RLT_PI2).	17.7499029636	17477
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40	0.0.2.0.25	search with cache (only 1: rewrite sin_2a; only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite cos_PI6; only 1: rewrite cos_PI3; only 1: field).	5.71884894371	2808
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40	0.0.2.0.1.0.0.6.0.2.0.0	search with cache (only 1: rewrite double; only 1: unfold tan; only 1: rewrite sin_plus; only 1: rewrite sin_PI3; only 1: rewrite cos_plus; only 1: rewrite sin_PI3; only 1: rewrite cos_PI3; only 1: replace (sqrt 3 / 2 * (sqrt 3 / 2)) with sqrt 3 * sqrt 3 / 4 by field; only 1: rewrite sqrt_def; only 1: field; only 1: left; only 1: prove_sup0).	18.6750688553	14376
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.2.5.6.3.0.0.0.0	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite cos_PI4; only 1: rewrite sin_cos_PI4; only 1: rewrite cos_PI4; only 1: unfold Rminus, Rdiv; only 1: ring).	29.4210691452	13937
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.6.2.0	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite neg_cos; only 1: rewrite neg_sin; only 1: rewrite cos_sin; only 1: replace (PI / 2 + PI / 4) with - (PI / 4) + PI by field; only 1: rewrite neg_sin, sin_neg; only 1: ring).	2.62028813362	1020
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.0.0.3	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0397479534149	43
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.1	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.0406081676483	47
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0201020240784	2
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.4	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.302298069	48
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.0551571846008	10
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0466639995575	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0461871623993	5
Coq.Reals.Ranalysis4.derivable_sinh	40	1.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0527141094208	6
Coq.Reals.Ranalysis4.derive_pt_exp	40	0.7.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.213549137115	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.1	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.122826099396	28
Coq.Reals.Ranalysis4.derive_pt_sinh	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.162920951843	41
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0220408439636	18
Coq.Reals.DiscrR.IZR_eq	40	3.0	search with cache (only 1: intros z1 z2 H; only 1: congruence).	0.0162558555603	5
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40
Coq.Reals.ConstructiveReals.CReq_sym	40
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	2.7.1.0.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.860561847687	341
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40	13.9.1.4.8	search with cache (only 1: intros; only 1: intro abs; only 1: apply lt_CR_of_Q in abs; only 1: contradict H; only 1: auto with qarith).	9.95854592323	15073
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	15	search with cache (only 1: Tactics.program_simpl).	0.0321929454803	175
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	0.0.2.0.1.0.0.0.0.0	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply CReal_mult_comm).	0.380840063095	476
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	search with cache (only 1: apply CReal_isRingExt).	0.668009996414	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	1.0.0.2	search with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.0303149223328	10
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0172340869904	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	1.0	search with cache (only 1: intros; only 1: ring).	0.117648124695	23
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	4.24	search with cache (only 1: intros [xn cau] q maj p; only 1: intuition).	2.06040406227	2741
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	14	search with cache (only 1: assumption).	0.0511479377747	82
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.2.7.0	search with cache (only 1: intros; only 1: apply CReal_isRingExt; only 1: reflexivity; only 1: exact H).	6.64761209488	328
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0131509304047	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	2.11.0	search with cache (only 1: intro; only 1: unfold Rsqr; only 1: ring).	0.648473024368	724
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40	2.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	0.042417049408	5
Coq.Reals.R_sqr.Rsqr_minus	40	0.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	0.0197501182556	3
Coq.Reals.R_sqr.Rsqr_neg_minus	40	1.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0169970989227	3
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0148119926453	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.00883793830872	3
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	2.4.1	search with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: trivial).	0.0233500003815	21
Coq.Reals.R_sqr.Rsqr_minus_plus	40	4.4	search with cache (only 1: intros x n; only 1: ring_Rsqr).	0.108559131622	19
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0177669525146	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	1.0.1.4.0	search with cache (only 1: intro; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: ring_Rsqr).	0.199075937271	74
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.1.1	search with cache (only 1: intro f; only 1: intros; only 1: apply derivable_pt_id).	0.0294108390808	5
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	3.2.3	search with cache (only 1: intros y z H; only 1: unfold Rdiv; only 1: lra).	0.146537065506	129
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: auto using Rle_antisym).	0.0181021690369	5
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity).	0.0184710025787	4
Coq.Reals.Rminmax.Rmin_l	40	1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: intros; only 1: auto using Rle_antisym).	0.0195999145508	6
Coq.Reals.Rminmax.Rmin_r	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros; only 1: auto using Rle_antisym; only 1: reflexivity).	0.0192310810089	6
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.023444890976	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0230920314789	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40	0.0.0.1.1.0.0.1.5	search with cache (only 1: intros n m le; only 1: apply max_min_antimonotone; only 1: do 3 red; only 1: intros; only 1: unfold Rminus, ConstructiveCauchyReals.CReal_minus; only 1: apply Rplus_le_compat_l; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: auto).	27.7353138924	15536
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.1.2.1.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.112366914749	46
Coq.Reals.Rlimit.eps4	40	11.0	search with cache (only 1: intro; only 1: field).	0.602010011673	308
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0380208492279	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0379531383514	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	39.4.1	search with cache (only 1: intros; only 1: intros a b; only 1: firstorder).	1.65687799454	9923
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	1.0.0.3.0	search with cache (only 1: unfold limit1_in; only 1: intros r1 r2 P H1 H2; only 1: unfold limit_in; only 1: simpl; only 1: firstorder).	0.420243024826	38
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	2.0.1.0.2	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.0664041042328	68
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40	0.5.1.6.2	search with cache (only 1: intros l H1; only 1: intuition subst; try ring; auto with real; only 1: apply sqrt_sqrt; only 1: unfold Rle; only 1: auto with real).	1.53498911858	1419
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0153911113739	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.010871887207	4
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.9.1.0	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.832889080048	659
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0150427818298	9
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	3.0.10.1	search with cache (only 1: intros; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	1.41201615334	1272
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	1.1.0.0.0.1.1.1	search with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	1.08541893959	633
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	46	search with cache (only 1: firstorder).	5.4943549633	24371
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.0.1.1.2	search with cache (only 1: intro p; only 1: intros; only 1: inversion H; only 1: reflexivity; only 1: now Nat.nzsimpl).	0.208870887756	46
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.143981218338	8
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0187380313873	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	0.12.1.0.0.0.1.0.14	search with cache (only 1: pose proof (Alt_PI_ineq 0) as H; only 1: prove_sup0; only 1: apply Rmult_lt_reg_l with (/ 4); only 1: apply Rinv_0_lt_compat; only 1: prove_sup0; only 1: rewrite Rmult_0_r; only 1: clear H; only 1: destruct pi2_int; only 1: lra).	31.1618759632	59528
Coq.Reals.Rtrigo1.PI_4	40	0.1.2.25	search with cache (only 1: unfold PI; only 1: assert (lo1 : 0 <= 7 / 8) by lra; only 1: destruct pi2_int; only 1: lra).	12.1434350014	15325
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.0547261238098	18
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	1.2.0.0	search with cache (only 1: intros; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	0.0307059288025	7
Coq.Reals.Rtrigo1.cos_2a_cos	40	1.6.2.5.3.1.0	search with cache (only 1: intros; only 1: rewrite double; only 1: rewrite double; only 1: rewrite <- (sin2_cos2 x); only 1: rewrite cos_plus; only 1: unfold Rsqr; only 1: ring).	4.55705094337	5642
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.4.1.1.1.0.1.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite Rmult_assoc; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: rewrite Ropp_plus_distr; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	16.3828580379	17049
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.347139835358	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.0137839317322	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	0.0.0.8.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.832056999207	516
Coq.Reals.Rtrigo1.cos_shift	40	0.0.0.5.0.1.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_neg; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	1.22986698151	704
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.11.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	1.88117408752	1534
Coq.Reals.Rtrigo1.PI2_RGT_0	40	4.0.3.5.4.3	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: now apply Rinv_0_lt_compat, Rlt_0_2).	39.3283319473	57656
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	2.0.0.3.1.0.0.0.1.1.4.0	search with cache (only 1: unfold Rdiv; only 1: prove_sup; only 1: pose proof (Alt_PI_ineq 0) as H; only 1: apply Rmult_lt_reg_l with (/ 4); only 1: apply Rinv_0_lt_compat; only 1: prove_sup0; only 1: rewrite Rmult_0_r; only 1: clear H; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	6.84597802162	10657
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.0.0	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.0154280662537	3
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0123989582062	2
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with (p - q) / 2 - (p + q) / 2 by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.0604028701782	9
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: pattern q at 3; only 1: replace q with (p + q) / 2 - (p - q) / 2; only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	6.23524689674	2611
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40	5.2.1	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: auto with arith real).	0.113780975342	72
Coq.Reals.PartSum.tech5	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0341730117798	2
Coq.Reals.PartSum.tech6	40	9.2.3	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: assumption).	1.61272287369	2125
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	4.0	search with cache (only 1: intros; only 1: trivial).	0.0567688941956	34
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	1.2.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.125597000122	10
Coq.Reals.PartSum.sum_decomposition	40	2.10.1	search with cache (only 1: intro; only 1: fix ind_0_1_SS 1; only 1: auto with real).	0.498913049698	853
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	1.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	1.20117998123	1107
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	4.5.0.1.0	search with cache (only 1: destruct a; only 1: intros; only 1: reflexivity; only 1: constructor; only 1: constructor).	1.29131007195	1183
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	7.10.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: red; only 1: intuition).	1.74603104591	3888
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	3.3.3.1.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	0.693470001221	621
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	5.1.1.1.1.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z); only 1: apply CRealEq_refl; only 1: assumption).	0.504333972931	307
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	13	search with cache (only 1: auto).	0.0412130355835	75
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	2.0.6.6.9	search with cache (only 1: intros a; only 1: destruct a; only 1: intros [n nmaj]; only 1: simpl; only 1: reflexivity).	18.7552139759	8931
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	10	search with cache (only 1: auto).	0.0297560691833	21
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	1.0.13.18.0	search with cache (only 1: intros; only 1: rewrite <- (Nat.mul_1_l n); only 1: rewrite Nat.mul_assoc; only 1: apply Nat.mul_le_mono_r; only 1: Nat.order_pos).	3.63573908806	5253
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.2.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	0.597885131836	65
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.1.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	0.800796031952	522
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	0	search with cache (only 1: apply CReal_plus_0_l).	0.0290148258209	1
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	0.0.0.0.0.0.0.0.0.0.7.7	search with cache (only 1: intros x y; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	10.692481041	14772
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	1	search with cache (only 1: reflexivity).	0.0277450084686	2
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	0.0.0.0.0.0.0.0.7.2	search with cache (only 1: intros; only 1: split; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate).	1.35194396973	1179
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0393619537354	5
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.1	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0814499855042	59
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	1.11.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	0.172554969788	279
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.7.0	search with cache (only 1: intro x; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.369627952576	185
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	10.0	search with cache (only 1: intros a b; only 1: intuition).	0.101220846176	177
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40	0.2.0.8.2.3.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: split; only 1: rewrite cos_PI2; only 1: ring; only 1: rewrite cos_PI2; only 1: ring).	15.4927239418	15625
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.7.12.5.1	search with cache (only 1: intro; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply pow_lt; only 1: now apply (IZR_lt 0 2)).	7.28804397583	12839
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0.0	search with cache (only 1: intros m x; only 1: auto).	0.0353829860687	2
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	2.0	search with cache (only 1: unfold empty, Empty; only 1: auto).	0.0334777832031	4
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	1.5.0	search with cache (only 1: intros; only 1: compute; only 1: auto).	0.0457179546356	14
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0.0.0	search with cache (only 1: unfold create; only 1: intros; only 1: intuition).	0.0385987758636	3
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40	1.0.0.0.1.0.0.1.0.0.1.0.0.1	search with cache (only 1: intros m1 m2; only 1: functional induction merge m1 m2; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	6.77452301979	6088
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.0.0.3	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0416100025177	8
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0403220653534	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	0.0.3.7	search with cache (only 1: red; only 1: simpl; only 1: unfold Raw.empty, Proofs.Empty; only 1: intuition_in).	0.389756917953	96
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40	1.3.7.1.10.12	search with cache (only 1: intros a e; only 1: intros m; only 1: intros x y H; only 1: red; only 1: simpl; only 1: eauto using add_2, add_3).	31.312525034	51326
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40	4.0.4.7.6	search with cache (only 1: intros m x y e; only 1: apply find_1; only 1: induction m; only 1: auto; only 1: auto).	1.96771812439	2191
Coq.FSets.FMapFullAVL.IntMake.find_2	40
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40
Coq.FSets.FMapFullAVL.IntMake.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	0.8.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0542900562286	48
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0339629650116	1
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.0668790340424	15
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0392260551453	3
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.0381610393524	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	0.0.0.16.16.11	search with cache (only 1: induction m; only 1: inversion 1; only 1: inversion 1; only 1: auto; only 1: auto; only 1: auto).	13.3400611877	34343
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.1.1.0	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.247503042221	8
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	4.1.0	search with cache (only 1: intros; only 1: intuition; only 1: intuition_in).	0.0581741333008	8
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	2.5	search with cache (only 1: intros x y z; only 1: intuition_in).	0.0442299842834	32
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	7.1	search with cache (only 1: intros; only 1: inversion 1).	0.0121788978577	10
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	2.16.0.1	search with cache (only 1: unfold lt_tree; only 1: intros; only 1: intuition_in; only 1: eauto with ordered_type).	1.42878389359	1037
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.2	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0870680809021	13
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in).	0.0116748809814	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.00965309143066	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0	search with cache (only 1: intuition_in).	0.0107338428497	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0101490020752	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	8.0	search with cache (only 1: unfold lt_tree in *; only 1: eauto with ordered_type).	0.0335741043091	26
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	2.1.1.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: generalize (H _ H0); only 1: generalize (H _ H0); only 1: order).	0.0871210098267	28
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	2.0	search with cache (only 1: unfold gt_tree in *; only 1: eauto with ordered_type).	0.029088973999	19
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	1	search with cache (only 1: eauto with ordered_type).	0.00801801681519	2
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	5.2.1.10.4	search with cache (only 1: intuition; only 1: intro H'; only 1: destruct m as [| r x e l h]; only 1: intuition_in; only 1: intuition_in).	21.3401229382	23413
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.2.7.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	0.70027089119	1357
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	0.0.0.3.3.1	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: easy; only 1: auto; only 1: auto; only 1: auto).	0.201289892197	253
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	1.10.4.7	search with cache (only 1: intros m x y; only 1: intuition_in; only 1: compute; only 1: eauto with ordered_type).	5.63060188293	10787
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	8.2.5.1	search with cache (only 1: intros; only 1: compute; only 1: intuition; only 1: intuition_in).	9.145154953	2333
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.1.0.1	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0307190418243	7
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40	3.31.2.30	search with cache (only 1: unfold IfEq; only 1: simpl; only 1: intros a; only 1: now destruct a).	4.99630093575	10217
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	1.1.2.3	search with cache (only 1: intros A B H; only 1: simpl; only 1: inversion 1; only 1: reflexivity).	0.246026992798	153
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	0.2.0.3.0.6.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.17795300484	1674
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	1.2.7.3	search with cache (only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: intuition_in).	1.4793920517	1244
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0359799861908	9
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	20	search with cache (only 1: inversion_clear 1).	0.349151849747	279
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40	1.4.17.8	search with cache (only 1: intros m Hm x y e; only 1: red; only 1: simpl; only 1: eauto using add_2, add_3).	13.2829611301	25062
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40	0.0.15.1.8.1	search with cache (only 1: intros m x; only 1: induction m; only 1: intros; only 1: apply find_1; only 1: auto; only 1: auto).	3.37588214874	5556
Coq.FSets.FMapAVL.IntMake.find_2	40	1.12.10	search with cache (only 1: intros m Hm x e; only 1: apply find_2; only 1: auto).	1.86954402924	3826
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	0.0.0.11.5	search with cache (only 1: induction m; only 1: intros m x; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.9358959198	2266
Coq.FSets.FMapAVL.IntMake.elements_3	40
Coq.FSets.FMapAVL.IntMake.elements_3w	40	0.12.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.250507116318	188
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.00913190841675	1
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.0.0.0.1.0.1.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.030054807663	15
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.2.0.2.1	search with cache (only 1: destruct e2; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0234401226044	27
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	2.0	search with cache (only 1: intros; only 1: P.intuition_in).	0.0173900127411	14
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.0088849067688	2
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	0	search with cache (only 1: intuition).	0.0246338844299	1
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	0	search with cache (only 1: intuition).	0.0220150947571	1
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	1	search with cache (only 1: intuition).	0.0241620540619	7
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	1	search with cache (only 1: intuition).	0.023933172226	8
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	1	search with cache (only 1: intuition).	0.0199410915375	21
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	4.5.1	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.139147043228	130
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	4	search with cache (only 1: intuition).	0.0419521331787	22
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	0	search with cache (only 1: intuition).	0.0251889228821	1
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	1	search with cache (only 1: intuition).	0.0531649589539	13
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	3	search with cache (only 1: intuition).	0.0186431407928	14
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40	1.1.0.1.0.0.0.3	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	4.28753900528	1296
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	14	search with cache (only 1: firstorder).	0.13053393364	470
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	4.7.0.1	search with cache (only 1: repeat red; only 1: intros; only 1: generalize dependent y; only 1: firstorder).	0.607764005661	647
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	12	search with cache (only 1: firstorder).	0.0236740112305	46
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.0	search with cache (only 1: red; only 1: auto).	0.0120630264282	3
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	6.1	search with cache (only 1: unfold Subset; only 1: firstorder).	0.0595660209656	71
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	3.1.0.5.4	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.536986112595	292
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.2.1.1.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: destruct 1; only 1: auto).	0.0358688831329	10
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	3.1.2.1	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.10519695282	76
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	2.1.2.0.0	search with cache (only 1: red; only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.0321221351624	12
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.1.2.0.0	search with cache (only 1: red; only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: firstorder).	0.027116060257	8
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.0.0.2.3.0.0.3.0.4	search with cache (only 1: intros A B H; only 1: intro; only 1: red; only 1: intro; only 1: intro; only 1: repeat rewrite filter_iff; only 1: intros [? ?]; only 1: auto; only 1: auto; only 1: auto).	5.14940214157	7157
Coq.FSets.FSetPositive.PositiveSet.In_1	40	4.6.11	search with cache (only 1: intros; only 1: red; only 1: <Coq.Strings.String.t_eqb>).	1.35517501831	2442
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	2.13	search with cache (only 1: intros n; only 1: now destruct n).	0.340357065201	197
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	3.1.0.7	search with cache (only 1: intros x y H; only 1: generalize dependent y; only 1: unfold eq, Equal; only 1: firstorder).	0.535109996796	583
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.3	search with cache (only 1: intros; only 1: <Coq.Strings.Ascii.t_eqb>).	0.0109522342682	5
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	1.0	search with cache (only 1: unfold In; only 1: trivial).	0.0107669830322	3
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	2.0	search with cache (only 1: intros; only 1: trivial).	0.0104429721832	4
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	11.12	search with cache (only 1: intro H; only 1: easy).	0.0487670898438	355
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	5.12.2.5.4.14	search with cache (only 1: intros s2; only 1: case s2; only 1: now split; only 1: simpl; only 1: fix odd_spec 1; only 1: intuition).	12.935918808	18511
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	1.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.0172789096832	4
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	9.16.11	search with cache (only 1: intros A B H; only 1: unfold Empty, In; only 1: easy).	0.61087012291	1494
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	6.14	search with cache (only 1: fix even_spec 1; only 1: intuition).	1.6923058033	1852
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.2.2.2.4.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.40526509285	417
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.2.1.3.3.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.255646944046	139
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	1.2.1.2.1.1.1.1.2.1.2	search with cache (only 1: intros n m; only 1: destruct n, m; only 1: now split; only 1: easy'; only 1: now split; only 1: easy'; only 1: easy'; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	17.53368783	25710
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: now split; only 1: now split).	0.0550761222839	18
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40	2.2.2.3	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0347549915314	120
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0144510269165	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0131280422211	4
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0140399932861	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0138189792633	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0140640735626	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	2.1.0.28	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: unfold compare_fun; only 1: ct; only 1: trivial).	3.48989391327	11832
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.2.0	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.0215590000153	5
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0200350284576	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	2.3.5.3.4.1	search with cache (only 1: intros s x y; only 1: generalize dependent y; only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	1.7683339119	3119
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.2.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0208570957184	5
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0200729370117	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.15.2	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	1.12074899673	2296
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0213840007782	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.1.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0234341621399	5
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0212688446045	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0193099975586	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.12.1.2	search with cache (only 1: intros s f; only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.967751979828	2329
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40	0.1.1.0.0.0.1.0.0.1.0.0.0.3.1.0.2	search with cache (only 1: induction i; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: destruct j; only 1: simpl; only 1: rewrite (IHi j~1); only 1: auto; only 1: simpl; only 1: rewrite (IHi j~0); only 1: auto; only 1: simpl; only 1: rewrite <- (IHi 1); only 1: auto; only 1: simpl; only 1: auto).	14.0977129936	25015
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	1.0.1.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.0335919857025	10
Coq.FSets.FMapPositive.PositiveMap.gempty	40	0.0.0.30	search with cache (only 1: induction i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.515202045441	969
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.0316691398621	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.0.0.0	search with cache (only 1: induction i; only 1: trivial; only 1: trivial; only 1: simpl; only 1: reflexivity).	0.03297996521	5
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40	0.2.1.0.0.1.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	35.9501209259	58722
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.1.0.0.0.0.0	search with cache (only 1: induction i; only 1: auto; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: auto).	0.0367829799652	8
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	10.5	search with cache (only 1: compute; only 1: congruence).	0.347412824631	223
Coq.FSets.FMapPositive.PositiveMap.find_1	40	0	search with cache (only 1: auto).	0.0257470607758	1
Coq.FSets.FMapPositive.PositiveMap.find_2	40	1.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0260188579559	3
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	1.1	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.0276441574097	4
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.1.0.1.0.0.2.0.1.1	search with cache (only 1: destruct m; only 1: intro; only 1: unfold MapsTo; only 1: rewrite gso; only 1: auto; only 1: auto; only 1: intro; only 1: unfold MapsTo; only 1: rewrite gso; only 1: auto; only 1: auto).	1.2008869648	2376
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.62026405334	14678
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0205891132355	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	1.0.3.2	search with cache (only 1: intros; only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.0167589187622	18
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0157539844513	3
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	20.3	search with cache (only 1: intros; only 1: intuition).	0.941313028336	835
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.8.0.1	search with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	0.460849046707	211
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	0.2	search with cache (only 1: intros; only 1: intuition).	0.020131111145	13
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.5.15.4.0.0	search with cache (only 1: intros; only 1: intuition; only 1: destruct (eq_dec x y); only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	11.1646618843	22877
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40	0.0.3.0.2.0.0.2.0.2.0.1	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	9.37479615211	16384
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	1.1.2.1	search with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0181360244751	13
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40	2.1.0.0.5.0.0.0.0.0	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_1; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_2; only 1: auto).	1.28317403793	2611
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40	0.3.16.13.0.0.1.13.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: symmetry; only 1: rewrite empty_mapsto_iff in H; only 1: easy; only 1: discriminate).	35.4310441017	73071
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	0.0	search with cache (only 1: intros; only 1: auto with map).	0.0105080604553	2
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	0.3.0.2.1.0.10.2.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).	9.76341319084	13851
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40	0.8.0.2	search with cache (only 1: intros; only 1: apply mem_1; only 1: exists e; only 1: auto with map).	0.395770072937	259
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0402328968048	17
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto).	0.0453310012817	23
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	8	search with cache (only 1: split).	0.0379481315613	18
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.0575098991394	29
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.1	search with cache (only 1: unfold Equal; only 1: auto).	0.0102241039276	3
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	9.0.0.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: now f_equiv).	0.648400068283	568
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.0.0.0.2.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0456111431122	31
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	0.1.2.1.1.3.4.14.2.4.9.1	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: tauto; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	6.3364109993	27975
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	10.1.1.10.8	search with cache (only 1: dintuition; only 1: compute; only 1: intuition; only 1: eapply H; only 1: eauto).	4.97611618042	4800
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40	11.10.10	search with cache (only 1: red; only 1: intros x; only 1: firstorder).	11.2635228634	10148
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.1.0.0.0.16.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.864153862	1343
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40	1.3.0.1.5.0.1	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_Empty; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).	11.8280379772	13900
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	0.14	search with cache (only 1: red; only 1: inversion_clear 1).	0.442368030548	119
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	0.4	search with cache (only 1: unfold Empty, empty; only 1: eauto).	0.0135209560394	6
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	2.6.1.0.0.4.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros m; only 1: case m; only 1: intuition; only 1: invlist InA; only 1: intuition).	14.4568600655	17079
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	1.3.0.1.1.0.0.0.2	search with cache (only 1: intros m Hm x y e; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: inversion_clear Hm; only 1: auto).	20.10861516	19200
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.0	search with cache (only 1: unfold PX.eqke; only 1: intuition).	0.0164999961853	2
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0131468772888	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: auto).	0.0161600112915	3
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40	0.0.0.0.1.0.1.0.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	34.1708750725	35574
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	0.0.0.0.16	search with cache (only 1: red; only 1: unfold Raw.Empty, Raw.empty; only 1: intros a e; only 1: intro abs; only 1: inversion abs).	0.0783460140228	266
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	1.0	search with cache (only 1: intros m; only 1: auto).	0.0164449214935	3
Coq.FSets.FMapWeakList.Make.elements_2	40	1.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0157330036163	3
Coq.FSets.FMapWeakList.Make.elements_3w	40	0.2.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.0190370082855	5
Coq.FSets.FMapWeakList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0153069496155	1
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40	2.11.2.6	search with cache (only 1: intros P Q H xs H0; only 1: intros m; only 1: fix gcd_divide 1; only 1: auto).	1.26996898651	3135
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.00908303260803	4
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1	search with cache (only 1: compute; only 1: auto with extcore).	0.00831294059753	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	15.0	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	4.21488595009	1444
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.5.9.1	search with cache (only 1: red; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: Dec.fsetdec).	0.930293083191	978
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.1	search with cache (only 1: unfold Subset, Empty, impl; only 1: firstorder).	0.0106101036072	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.4.8	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.587985038757	376
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.6.0.0.0.0.1.6.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: split; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	6.22690916061	6892
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	1.7.1.0.1.1.2.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: constructor; only 1: intuition; only 1: destruct 1; only 1: apply H; only 1: auto; only 1: inversion 1; only 1: firstorder).	24.2328338623	11431
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff s x), (FM.mem_iff s y), (FM.In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0538949966431	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	3.10	search with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition).	0.266604185104	228
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	4.1	search with cache (only 1: intros; only 1: auto with set).	0.0225820541382	18
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0	search with cache (only 1: auto with set).	0.00897693634033	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.109742164612	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.110029935837	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.112111091614	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.00639200210571	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.0132009983063	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.107633113861	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	0	search with cache (only 1: auto with set).	0.0937080383301	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40	1.2.1.2.1.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: rewrite (equal_2 H); only 1: auto with set).	0.791711091995	413
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	1.2.5	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0484571456909	35
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	1.2.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0113611221313	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	2.8.6	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.0864150524139	211
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1	search with cache (only 1: auto with set).	0.00653100013733	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	1	search with cache (only 1: auto with set).	0.01038813591	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.00757789611816	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	0	search with cache (only 1: auto with set).	0.00784492492676	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0	search with cache (only 1: auto with set).	0.00708103179932	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	1.7	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	0.141626834869	24
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	2.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0276918411255	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	1.10	search with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: intuition).	0.267388105392	106
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.00679683685303	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	4.2.1	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.951313972473	482
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	1.14	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	0.31788110733	523
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: auto with set).	0.00693202018738	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0117180347443	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.00785207748413	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00784301757812	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.00667095184326	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.00665807723999	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.00665020942688	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.00653100013733	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	1	search with cache (only 1: auto with set).	0.00674390792847	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0515601634979	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: auto with set).	0.00750994682312	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.00828909873962	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0076539516449	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.00770902633667	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00668811798096	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	0	search with cache (only 1: auto with set).	0.00672483444214	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00681185722351	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.00696897506714	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40	0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.287422895432	22
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00650882720947	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	1	search with cache (only 1: auto with set).	0.00664281845093	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0749061107635	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.00662112236023	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.00811100006104	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.00672388076782	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.00668287277222	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00670003890991	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	0.0.0.2.3.0.0.7	search with cache (only 1: destr_bool; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: rewrite FM.mem_iff; only 1: destruct (mem x s'); only 1: intuition; only 1: intuition; only 1: intuition).	6.93518400192	2468
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0104389190674	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	1.0.4.0.0.0.6.5	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.668720006943	1030
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.0.0.0.0.7.3	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.297459840775	475
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.00785207748413	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.3.0.0.1.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.130747795105	142
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.1.1.3.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with set fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	0.161989927292	211
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	23.3.8.8	search with cache (only 1: intro; only 1: intro; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).	12.4071218967	15473
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.0.0.5.2.1.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.203364133835	415
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	5	search with cache (only 1: auto with set fset).	0.016970872879	27
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40	0.13.0.13.0.1.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: fix odd_spec 1; only 1: auto; only 1: fix odd_spec 1; only 1: auto).	2.06129980087	3596
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	9	search with cache (only 1: auto with set).	0.10058093071	17
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0971808433533	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.0.0.1.1.0.2	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	3.26167201996	735
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	0.3.1.0.5.3	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros a; only 1: auto with set).	0.166855096817	322
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40	0.2.0.1.0.2.2.0.0.2.0.8.0	search with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: clear H; only 1: rewrite filter_iff; only 1: destruct (f x); only 1: auto; only 1: intuition; only 1: auto).	2.40465784073	4979
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.0.0.2	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros; only 1: f_equal; only 1: auto).	0.0108048915863	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	25.10.2	search with cache (only 1: intros; only 1: simpl; only 1: eauto).	0.607528924942	2687
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	2.0.0.0.16.1	search with cache (only 1: unfold equal; only 1: intros s x; only 1: case M.equal; only 1: auto; only 1: intuition; only 1: easy).	0.61741900444	1704
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.1.0.6.5	search with cache (only 1: unfold subset; only 1: intros s s'; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.2310090065	282
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	3.4.2.3.0.1.10	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	36.5259299278	79589
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.16.0	search with cache (only 1: intros; only 1: generalize H; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.145111083984	612
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.0.5.6	search with cache (only 1: case M.empty; only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0630989074707	200
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	9.0	search with cache (only 1: intros; only 1: auto with *).	0.104734182358	127
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.2.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.00979495048523	7
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.1.5	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0438580513	86
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.0	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.00913691520691	4
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: firstorder).	0.0181229114532	11
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.1	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0123229026794	22
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.00908279418945	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.1.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.00920605659485	5
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.00917506217957	4
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.6.1	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0461990833282	96
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.00924301147461	4
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	search with cache (only 1: decide equality).	0.0076699256897	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	1.2.0.2.20.3	search with cache (only 1: intros s x; only 1: unfold filter; only 1: intros; only 1: destruct M.filter as (x0, Hiff); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	19.517357111	53951
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.36519908905	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	1.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: easy).	0.0163390636444	8
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0123991966248	6
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	13	search with cache (only 1: solve_proper).	0.226488113403	213
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	15.15.4	search with cache (only 1: intuition; only 1: red; only 1: eauto with set).	0.939452886581	4187
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.1.5.0	search with cache (only 1: firstorder; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.105329036713	34
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.0.0.3.0	search with cache (only 1: red; only 1: intros; only 1: split; only 1: intuition; only 1: intuition).	0.0100991725922	8
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	2	search with cache (only 1: fsetdec).	0.0986261367798	22
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	1	search with cache (only 1: fsetdec).	0.117342948914	38
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0124859809875	1
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0250580310822	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0242578983307	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0195939540863	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.014310836792	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	2	search with cache (only 1: fsetdec).	0.0436279773712	3
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0259771347046	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	1	search with cache (only 1: fsetdec).	0.0403530597687	2
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0213010311127	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: auto).	0.00562000274658	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.1.0	search with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.0670781135559	6
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0309989452362	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0347380638123	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	2	search with cache (only 1: fsetdec).	0.0374231338501	3
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	1	search with cache (only 1: fsetdec).	0.100028991699	2
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	5	search with cache (only 1: fsetdec).	0.290027856827	141
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	1	search with cache (only 1: fsetdec).	0.0709199905396	2
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	1	search with cache (only 1: fsetdec).	0.0850749015808	2
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	1	search with cache (only 1: fsetdec).	0.0715620517731	2
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0443720817566	1
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.160905838013	2
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	0	search with cache (only 1: fsetdec).	0.0434381961823	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0388391017914	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0748999118805	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0547280311584	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.0802359580994	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0645799636841	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	2	search with cache (only 1: fsetdec).	0.0912930965424	3
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	1	search with cache (only 1: fsetdec).	0.171831130981	2
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	2	search with cache (only 1: fsetdec).	0.151397943497	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0170538425446	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0190258026123	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.032105922699	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0310859680176	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0291259288788	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0656759738922	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0375759601593	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	5	search with cache (only 1: fsetdec).	0.19047999382	24
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.047465801239	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0366988182068	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0712919235229	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0508680343628	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0779168605804	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.114067077637	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.106352090836	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	4	search with cache (only 1: fsetdec).	0.102666139603	5
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	2	search with cache (only 1: fsetdec).	0.075553894043	3
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0273940563202	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0448079109192	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.017107963562	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0171210765839	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0306708812714	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0322232246399	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0402359962463	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0195288658142	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0852708816528	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	1	search with cache (only 1: fsetdec).	0.0517840385437	2
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.0954520702362	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0928170681	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.5	search with cache (only 1: expAdd; only 1: fsetdec).	0.0942459106445	7
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.136073112488	4
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	2.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.216668844223	6
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.184538125992	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	2.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.199069976807	7
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	0.0.0.0.2.1	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.0343089103699	26
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40	8.0.0.5.0.1	search with cache (only 1: intros; only 1: apply (fold_rec (P:=fun s _ => P s) (f:=fun _ _ => tt) (i:=tt) (s:=s)); only 1: firstorder; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: firstorder).	27.8562629223	1180
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.11.2.1.9	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: trivial; only 1: auto with *; only 1: auto with *).	0.503993034363	1030
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	1.0.0.0.0.16.5.1	search with cache (only 1: intros; only 1: apply fold_1; only 1: constructor; only 1: congruence; only 1: red; only 1: now symmetry; only 1: congruence; only 1: auto with *).	1.96224689484	4873
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40	0.0.0.0.0.4.2.3.0.5	search with cache (only 1: intros i s; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: clear H3; only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *).	22.1589441299	6437
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.5.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.154417037964	24
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.8	search with cache (only 1: apply cardinal_1; only 1: fsetdec).	0.0185339450836	10
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	11	search with cache (only 1: intuition).	0.103964090347	197
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto; only 1: auto with fset).	0.0258059501648	10
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.2.20	search with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	1.66459393501	4321
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0	search with cache (only 1: auto with set fset).	0.00745677947998	1
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0103809833527	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0105731487274	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: tauto).	0.471035003662	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.197020053864	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0272970199585	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	1	search with cache (only 1: fsetdec).	0.168694972992	11
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0847787857056	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	1	search with cache (only 1: fsetdec).	0.307070970535	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0732491016388	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	3.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.0788969993591	5
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	6	search with cache (only 1: fsetdec).	0.181821107864	32
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	3	search with cache (only 1: fsetdec).	0.608133077621	39
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.157645940781	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	4	search with cache (only 1: fsetdec).	0.257508039474	31
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	1	search with cache (only 1: fsetdec).	0.620417118073	33
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.299789905548	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	4.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0344870090485	7
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	12	search with cache (only 1: fsetdec).	0.18529009819	155
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	1	search with cache (only 1: fsetdec).	0.079549074173	2
Coq.FSets.FMapList.Raw.empty_1	40	5.18	search with cache (only 1: red; only 1: inversion_clear 1).	0.200570821762	480
Coq.FSets.FMapList.Raw.empty_sorted	40	2	search with cache (only 1: constructor).	0.00710105895996	3
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	3.7.2.6.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros; only 1: intro abs; only 1: inversion abs; only 1: inversion_clear 1).	25.6836881638	34519
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.1.0.1.0.0.1.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: inversion_clear Hm; only 1: auto).	5.68470597267	3825
Coq.FSets.FMapList.Raw.elements_1	40	0.0	search with cache (only 1: unfold PX.eqke; only 1: intuition).	0.0134048461914	2
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00999879837036	1
Coq.FSets.FMapList.Raw.elements_3	40	0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: auto).	0.0140898227692	3
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.1.1.0.0.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).	0.524337768555	325
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros m x f; only 1: induction m; only 1: intros (e, abs); only 1: inversion abs; only 1: simpl; only 1: destruct a as (x', e); only 1: intros hyp; only 1: inversion hyp; only 1: clear hyp; only 1: inversion H; only 1: subst; only 1: rename x0 into e'; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: rename x0 into e'; only 1: destruct IHm as (e'', hyp); only 1: exists e'; only 1: auto; only 1: exists e''; only 1: constructor 2; only 1: auto).	30.9763062	47566
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.0.2.2.0.2	search with cache (only 1: intros; only 1: induction m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.533234834671	717
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.160755872726	11
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.10.0.3.7.4.0	search with cache (only 1: intros m x y e; only 1: compute; only 1: intros H'; only 1: induction 1; only 1: intuition; only 1: eauto with *; only 1: intuition).	13.9037640095	17130
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	0.1.1.1.11	search with cache (only 1: intros m x f; only 1: absurd (X.eq x x); only 1: intuition; only 1: easy; only 1: reflexivity).	0.11532998085	212
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0116550922394	1
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.012521982193	2
Coq.FSets.FMapList.Make.elements_3	40	0.4.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.0199790000916	7
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0120069980621	1
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	0.5	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.0638699531555	52
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40	4.10	search with cache (only 1: fix gcd_divide 1; only 1: auto with datatypes).	1.30977702141	1655
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	4.6.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.236700057983	302
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	3.4.0	search with cache (only 1: red; only 1: intros y H2; only 1: auto with sets).	0.00679898262024	10
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	1.0.14.8.4	search with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: now rewrite ?IHd).	3.13292193413	7156
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.0.6	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy).	1.11244797707	899
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.13	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	9.10217809677	12759
Coq.Numbers.DecimalFacts.unorm_invol	40	1	search with cache (only 1: now induction d).	0.18616604805	99
Coq.Numbers.DecimalFacts.norm_invol	40	0.0.15	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	0.0686588287354	127
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	10	search with cache (only 1: now induction d).	0.132576942444	21
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	1.2.2.7	search with cache (only 1: revert q; only 1: destruct n; only 1: trivial; only 1: trivial).	0.185771942139	264
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	35	search with cache (only 1: now induction d).	12.5545520782	8596
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	2	search with cache (only 1: apply of_lu_double_gen).	0.00728487968445	3
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	7	search with cache (only 1: now induction d).	0.0123698711395	8
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0	search with cache (only 1: auto).	0.00640606880188	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: auto).	0.00616908073425	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	2.1.1.0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: unfold Pos.to_uint; only 1: generalize (of_to p); only 1: generalize (of_to p); only 1: now rewrite E).	0.0217990875244	20
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	19.1	search with cache (only 1: generalize (to_of d); only 1: now induction d).	12.2952129841	19183
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	1.0.4.1.0.1.8.1.8	search with cache (only 1: simpl norm; only 1: destruct (Pos.of_uint d) eqn:E; only 1: rewrite <- Unsigned.to_of; only 1: intros; only 1: destruct H; only 1: now rewrite E; only 1: rewrite <- Unsigned.to_of; only 1: exists p; only 1: now rewrite E).	11.3441131115	28948
Coq.Numbers.DecimalPos.Signed.of_int_norm	40	0.0.0.0.0.0.0.0.0.0.0.0.6.0.0	search with cache (only 1: unfold norm; only 1: destruct d; only 1: now induction d; only 1: destruct (nzhead d) eqn:E; only 1: auto; only 1: now induction d; only 1: now induction d; only 1: now induction d; only 1: now induction d; only 1: now induction d; only 1: now induction d; only 1: now induction d; only 1: now induction d; only 1: now induction d; only 1: now induction d).	4.05740118027	4538
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	1	search with cache (only 1: reflexivity).	0.00551104545593	2
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.1.0.0.0	search with cache (only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: rewrite Unsigned.to_of; only 1: simpl; only 1: f_equal).	0.0105669498444	6
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40	6.12.1	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: now destruct (nzhead d) eqn:H).	4.52968907356	2729
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	1	search with cache (only 1: now induction d).	0.029219865799	2
Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.8.5	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.45229101181	187
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	1.0.0.0	search with cache (only 1: exists (N.of_uint d); only 1: unfold N.to_int; only 1: rewrite Unsigned.to_of; only 1: reflexivity).	0.0278749465942	5
Coq.Numbers.DecimalN.Signed.of_int_norm	40	3.3.7	search with cache (only 1: destruct d; only 1: now induction d; only 1: now induction d).	2.18027091026	1557
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	1.3	search with cache (only 1: intros a b; only 1: trivial).	0.0114347934723	15
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.13.13.5	search with cache (only 1: intro n; only 1: unfold Symmetric, Z.eq; only 1: simpl in *; only 1: now nzsimpl').	2.96258592606	2304
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	1.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.292667865753	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.0.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: simpl in *; only 1: now nzsimpl).	0.04647397995	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	1.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.106492042542	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl).	0.0439109802246	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.199701070786	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.1.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.251101016998	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	5.0.3	search with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl').	0.521906137466	159
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.109373092651	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.2.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: intro m; only 1: simpl; only 1: now nzsimpl).	0.23347401619	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.0.1	search with cache (only 1: intro n; only 1: unfold Z.sub, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.172413825989	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.0.1	search with cache (only 1: intros; only 1: apply le_ngt; only 1: now apply eq_le_incl).	0.0111591815948	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	0.4.0	search with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	0.0207679271698	16
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0111119747162	4
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0108149051666	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0113110542297	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0108239650726	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.5.3	search with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	0.455409049988	185
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	1.12.0	search with cache (only 1: intros n m p; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	2.18639993668	502
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	0.2.0.1	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: apply lt_sub_lt_add_r; only 1: now nzsimpl).	0.111781835556	30
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.0.8.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite even_spec, odd_spec; only 1: now rewrite <- even_spec, even_succ, odd_spec).	0.888180017471	546
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0340600013733	21
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	0.0.5.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	0.380001783371	156
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.1.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0550301074982	17
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.1.5.0.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace P 0 with -1 in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	5.6276550293	4827
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.0.0.0.0.0.1.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.489413976669	209
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.1	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0100409984589	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	1.0.1.0.0.0.0.11.12.6	search with cache (only 1: intros a; only 1: apply Private_NZDiv.div_small; only 1: destr_bool; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply le_refl; only 1: order').	4.58625292778	4041
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.5.6.3.5	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	10.0350878239	1707
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	3.1.0	search with cache (only 1: intros; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	0.0744588375092	14
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	5.5.7.0.0.0.0.0.7.1	search with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: rewrite H  at 1; only 1: now try order').	19.8068459034	45218
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.2.1.2.0.1.4.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: now try order'; only 1: now apply lt_sub_0; only 1: order).	7.56397509575	3466
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	0.0.1.3.4.0.0.0.22.0	search with cache (only 1: intros; only 1: assert (Hn : 0 <= n); only 1: transitivity (log2 a); only 1: apply log2_nonneg; only 1: order'; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: left; only 1: intuition; only 1: apply log2_lt_cancel; only 1: now rewrite log2_pow2).	8.19801592827	10483
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	1.1.3.13.10.1	search with cache (only 1: intros x x' Hx; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: now f_equiv; only 1: order'; only 1: order').	10.2866210938	14634
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0335190296173	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0332798957825	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.040078163147	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.00985813140869	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0102269649506	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.17.12.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite testbit_eqb; only 1: apply xorb_false_r; only 1: order || apply lt_0_1).	1.99056601524	1652
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	1.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0132400989532	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	2.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0369000434875	55
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0106289386749	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.0108680725098	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	1.2.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.175450086594	48
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	1.2.2	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.171415090561	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	3.10.2.8.6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite testbit_eqb by order; only 1: apply eq_true_iff_eq; only 1: rewrite <- testbit_spec' by trivial; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	24.7654409409	13269
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	8.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.093945980072	45
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	6.1.4	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.278844833374	176
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: apply xorb_comm; only 1: trivial; only 1: trivial).	0.012195110321	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: apply xorb_comm; only 1: trivial; only 1: trivial).	0.0217378139496	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.7.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.137116909027	16
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	1.11.5	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.504222869873	363
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	0.0.1.0.1.0.0.0.0.7.0	search with cache (only 1: intros a b Hb; only 1: rewrite <- !negb_even; only 1: apply lt_ind with (4 := Hb); only 1: solve_proper; only 1: now nzsimpl; only 1: clear b Hb; only 1: intros b Hb IH; only 1: nzsimpl; only 1: rewrite even_mul; only 1: now destruct (even a); only 1: order).	31.2273330688	10385
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.4.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.0354399681091	25
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	2.0.0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: apply gcd_divide_iff; only 1: rewrite H; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	1.35299301147	1127
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	1.8.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: intros; only 1: rewrite H; only 1: apply gcd_divide_iff; only 1: intros; only 1: rewrite H; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	6.11378407478	4929
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	3.1.2.1.5.0.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_1_l, le_0_1).	4.28177785873	3446
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.4.2.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: trivial; only 1: apply gcd_divide_r).	0.549806833267	415
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.4	search with cache (only 1: intros n Hn; only 1: apply abs_nonneg).	0.0195558071136	16
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.21.0	search with cache (only 1: intros; only 1: unfold lcm; only 1: nzsimpl; only 1: apply abs_eq; only 1: order || apply lt_0_1).	0.876317024231	1468
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0145108699799	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_refl).	0.0159771442413	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0156037807465	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	11.10.1.0.3.2	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply abs_nonneg; only 1: order; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	5.53674602509	9131
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.4.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0403778553009	23
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	2.3.0.0.1.0.0.1.0.1	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	7.17807912827	5288
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.1.1.1.8.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	4.92854905128	3190
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.11.0.0.0.5.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono).	7.94045591354	5871
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?pred_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?pred_le_mono; only 1: now apply add_le_mono_r).	2.73513412476	1286
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_r).	2.56835699081	958
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.1.0.0.1.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	3.16227293015	1657
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	1.29928779602	436
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.5.2	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0593149662018	10
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.2.3	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0446319580078	8
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.6.1	search with cache (only 1: intro; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.255760192871	78
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	6.2.17.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred m); only 1: now rewrite le_succ_l).	13.1231729984	11849
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.5.1.2.0	search with cache (only 1: intro; only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.363520145416	300
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.2.2.1	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: order).	0.0438799858093	30
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	1.4.1.0.1	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: order).	0.45830488205	279
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	1.2.1.2.7.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: split; only 1: rewrite lt_succ_r; only 1: now apply lt_pred_le; only 1: rewrite lt_succ_r; only 1: now apply lt_pred_le).	17.1168439388	15707
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.4.3.0	search with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: rewrite <- le_succ_l; only 1: reflexivity).	0.259749889374	248
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0382878780365	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.0.0.0.2.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply le_succ_l).	0.0468189716339	47
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	1.1.4.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.200768947601	64
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.11.5	search with cache (only 1: intro; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.533061981201	545
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.1.1.9	search with cache (only 1: unfold sgn; only 1: intro n; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	1.86929607391	619
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0178689956665	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.2.0.5.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.266320943832	123
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	3.0.2	search with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.0257368087769	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.4.1.4	search with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: now right).	1.38096880913	509
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	0.5.8.0.1.2.1	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: apply eq_opp_r; only 1: auto with relations).	2.38338303566	2512
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	2.0.0.0.0.0.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: apply abs_eq; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: now rewrite opp_nonneg_nonpos).	0.0338950157166	10
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	1.1.14.4	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	1.71671199799	1886
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0239140987396	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.3	search with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).	0.20107293129	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.3.1.1.0.0.1.0	search with cache (only 1: intros; only 1: destruct_sgn x; only 1: rewrite sgn_pos; only 1: auto with relations; only 1: apply lt_0_1; only 1: now apply sgn_null; only 1: rewrite sgn_neg; only 1: auto with relations; only 1: apply opp_neg_pos, lt_0_1).	0.733747959137	613
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.113801002502	51
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.0.2.2.0.0.2	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	4.02744197845	3412
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.1.0.1	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0131778717041	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.1.0.0.0.1.0.1.3	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	1.86479496956	1206
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.1	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0133068561554	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0516581535339	27
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	4.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: auto using mod_small).	0.0374720096588	24
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	12.2.0.0.1.8.0.0	search with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply Private_NZDiv.div_small; only 1: intuition; only 1: order; only 1: rewrite <- div_opp_opp by trivial; only 1: apply Private_NZDiv.div_small; only 1: now nzsimpl).	13.5165119171	22911
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.1.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.0525209903717	38
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0139799118042	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0137760639191	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	3.1.0.1.0.2.2.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition order; only 1: right; only 1: intuition order; only 1: now nzsimpl).	4.24288702011	3643
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.0128109455109	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.1.0.0.1.0	search with cache (only 1: intros; only 1: apply div_le_lower_bound; only 1: auto; only 1: auto; only 1: nzsimpl; only 1: auto).	0.232810974121	53
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.5.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: apply div_str_pos; only 1: auto).	0.0697221755981	58
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).	0.724280118942	209
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	14.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	10.6852989197	3642
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	1.2.4.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	1.17779994011	535
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0181879997253	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.3.2.2.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.899627923965	310
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.587697982788	81
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.1.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	11.1066300869	9281
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.3.10.0.3.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	31.1063768864	10704
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.8.7.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now nzsimpl; only 1: auto with relations; only 1: auto with relations).	27.6088819504	12756
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.4.3.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto with relations).	2.27284312248	610
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0406000614166	10
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.4.2	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.369054079056	46
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	1.0.1.0.0.7.2.2.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro m; only 1: nzsimpl; only 1: split; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	20.9404430389	5619
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	3.3.1.2.0.3	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro m; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	5.09230995178	1340
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.3.0.0.0.0.2.0.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: rewrite <- add_opp_r; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- 2!add_opp_r; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	13.6557910442	4134
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: intuition; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H).	0.556049823761	353
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	2.0.1.0.1.0	search with cache (only 1: intros n m; only 1: intuition; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	0.0914590358734	29
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0762310028076	20
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.1.1.2.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_assoc).	0.0419080257416	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	3.4.2.0.2.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	3.49864006042	1108
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.0.1.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.13228392601	49
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	2.2.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.095871925354	18
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	3.6.0.4	search with cache (only 1: intro m; only 1: intros; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_cancel_r).	5.22729086876	2515
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	2.5.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0696330070496	10
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.0.2.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0234830379486	7
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	4.5	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.383877038956	83
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	7.3.0	search with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	0.749310970306	223
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	3.3.0.3.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro p; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	2.42751097679	887
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	2.9.0.0.0.4.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	35.4546480179	9219
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.11.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.586927175522	613
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.5.7	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_small; only 1: intuition).	1.09313583374	1664
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	4.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: auto using mod_small).	0.0192270278931	23
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0301420688629	29
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0911900997162	52
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0081479549408	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00813388824463	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.7.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.328980922699	351
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	1.0.0.0.2.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0670790672302	56
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.0	search with cache (only 1: intros; only 1: auto using div_pos).	0.233319997787	61
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.1.0.5	search with cache (only 1: pose proof lt_0_1 as H; only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.124895095825	126
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	5.5.4.2.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	1.79848003387	1878
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.2.2.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: rewrite add_cancel_l; only 1: intuition order).	0.152555942535	90
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	1.0.1.0.1.1	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.060017824173	25
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.1.0.1.3.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.254753828049	175
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.211196184158	80
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.1.0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	9.24341893196	8436
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.2.8.0.3.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	6.68496012688	3422
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.7.4.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto with relations).	17.9840710163	5927
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	1.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.140823841095	57
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	2	search with cache (only 1: BinInt.Z.order).	0.024594783783	11
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	6.1	search with cache (only 1: intros; only 1: firstorder).	0.0284929275513	18
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40	0.2.1.0	search with cache (only 1: intros x y; only 1: intros Heq; only 1: subst; only 1: discriminate || simpl).	0.00982904434204	7
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	0.4.9	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.0270709991455	106
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0097770690918	2
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0	search with cache (only 1: reflexivity).	0.00620293617249	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40	9.0.0.10.0.5	search with cache (only 1: intros; only 1: simpl; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	18.3465180397	47791
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.1.4	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.0129280090332	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0.0.0.0.0.0	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0123109817505	6
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.6.0.0.0.0.1	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	1.64573192596	2245
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0147330760956	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0895030498505	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0114569664001	2
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0124809741974	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40	4.6.3	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.509449005127	399
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	6.1.6	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: trivial).	0.149550914764	226
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.00947308540344	4
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40	2.0.1.0.7.3.0.0.10.0	search with cache (only 1: intros; only 1: red; only 1: replace k with (k - size + size)%nat by lia; only 1: induction (k - size)%nat; only 1: rewrite nshiftl_size; only 1: rewrite nshiftl_size; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity).	30.1665267944	7479
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40	4.12.0.0.0.0.3.0	search with cache (only 1: red; only 1: intros m n; only 1: generalize eq_refl; only 1: generalize n at - 1; only 1: induction (S n) as [| n0 IHn0]; only 1: discriminate; only 1: fix le_div2 1; only 1: auto).	20.3023028374	28873
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0	search with cache (only 1: auto).	0.00734901428223	1
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0107362270355	2
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	1.8	search with cache (only 1: destruct x; only 1: auto).	4.03966283798	28
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.012748003006	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.00791192054749	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.00698494911194	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: auto with zarith).	0.0250759124756	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: trivial).	0.00714588165283	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.00686621665955	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0145390033722	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	1.0	search with cache (only 1: intros x y; only 1: auto).	0.00873899459839	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40	3.8.0.0	search with cache (only 1: intros; only 1: unfold add31c, add31, interp_carry; only 1: rewrite phi_phi_inv; only 1: auto).	1.13706588745	603
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	5.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.284481048584	101
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.00838303565979	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	1.1.0.1	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.236886978149	17
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	4.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.214047908783	16
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	2.2	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.25999712944	104
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	0.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.213781118393	99
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	2.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.00941801071167	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	3.3.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	1.58006095886	438
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	1.1.3.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: rewrite <- (phi_inv_phi x); only 1: rewrite H; only 1: auto).	0.545565843582	238
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	1.0.0.0.0.0.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0291209220886	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.0.0.2.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: intuition; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0324418544769	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.0149819850922	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	1.1.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.0611069202423	26
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: easy').	0.0127351284027	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.0164659023285	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	3.2.0.0	search with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.0318760871887	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	12.9.14.0.0	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite Zminus_mod_idemp_r; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	8.36680603027	13056
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	2.3.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0480370521545	25
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	0.19.0.2.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: auto using Z.lt_gt with zarith).	14.7510681152	13978
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	search with cache (only 1: auto).	0.0285060405731	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.1.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	8.05512690544	2564
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.0103440284729	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	2.3	search with cache (only 1: intuition; only 1: destr_eq H).	0.116631984711	7
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	4	search with cache (only 1: now apply Z.mul_pos_pos).	0.016382932663	5
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: auto).	0.00732803344727	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: reflexivity).	0.00727891921997	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.3.1.0	search with cache (only 1: intros x y; only 1: intros Heq; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0116741657257	8
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0111320018768	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	2	search with cache (only 1: apply subc_spec).	0.00708508491516	3
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0	search with cache (only 1: apply sub_spec).	0.00637412071228	1
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.00782585144043	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.0.6	search with cache (only 1: destruct 1; only 1: unfold eqm; only 1: reflexivity).	0.0100791454315	9
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.1	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0169188976288	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	2.0.1	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.0393249988556	6
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: trivial).	0.00576996803284	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.0.0.1.2	search with cache (only 1: destruct a, b; only 1: auto; only 1: trivial; only 1: trivial; only 1: auto).	0.0116469860077	8
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.00964307785034	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.00857496261597	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	0.12.4.1.0.2	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	13.1408641338	10823
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	4.1.0.0.1	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: unfold bit; only 1: apply andb_false_r).	0.106336116791	81
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	1.2.6.1.0.2	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lor_spec, orb_comm; only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	1.35957407951	900
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0262520313263	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.14.0.0	search with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.767457008362	400
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	16.5	search with cache (only 1: intros; only 1: now apply Z.eqb_eq).	0.501227855682	526
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	1.1.2.0	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.0407538414001	29
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	1.0.0.0.0.2.13	search with cache (only 1: zify; only 1: simpl; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: split; only 1: Z.order'; only 1: apply gt_wB_1).	1.04284501076	840
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	4.0	search with cache (only 1: zify; only 1: constructor).	0.772578001022	101
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	4	search with cache (only 1: tauto).	0.0292890071869	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.0.1.1.0.0	search with cache (only 1: intro n; only 1: zify; only 1: rewrite Zmod_small; only 1: simpl; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.0513660907745	8
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	2.0.0	search with cache (only 1: intro n; only 1: zify; only 1: reflexivity).	0.0464198589325	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	search with cache (only 1: reflexivity).	0.0224280357361	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.0219268798828	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0216128826141	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	8	search with cache (only 1: parity_binop).	0.208729982376	80
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	13	search with cache (only 1: parity_binop).	0.552071809769	1027
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	3.12.1	search with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.474263191223	954
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	1.1.7.1	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.436965942383	897
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	1.1.1	search with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.006756067276	6
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	1.4.4.1.5.7	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	3.95063686371	3671
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	2.5.0.0.1.0.5.1.0.4	search with cache (only 1: setoid_rewrite one_succ; only 1: intros n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: rewrite lt_succ_r; only 1: now apply eq_le_incl).	21.6468770504	19011
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.2.6	search with cache (only 1: intro n; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.462594985962	354
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	6.4.0.0.0.10.9.1	search with cache (only 1: intro; only 1: cases n; only 1: rewrite pred_0; only 1: now apply eq_le_incl; only 1: intro; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: now nzsimpl').	18.146078825	22715
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.2.4.1.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.957755088806	1027
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	6.0.0.0.1.1.8.0	search with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: order; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_le_incl; only 1: now apply le_succ_l).	9.40837287903	9563
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.2.0.0.1.7.5.3	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: order'; only 1: intros n m H; only 1: apply le_succ_l; only 1: rewrite pred_succ; only 1: order).	5.07730913162	6626
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.1.8.2	search with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.244828939438	397
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.0.1.0.0.0.3	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: cases n; only 1: rewrite pred_0; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: now apply le_succ_l).	0.521488904953	661
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	2.0.8.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.266915082932	515
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	4.2.2.0.4.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: nzsimpl; only 1: order).	0.62287902832	1520
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	3.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: auto').	0.0100910663605	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	3.0.0.2	search with cache (only 1: intros; only 1: apply mod_small; only 1: intuition; only 1: auto').	0.0546720027924	72
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.5.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.010892868042	13
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.5.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.00887799263	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.0.3.6.1.2.6	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: apply (neq_succ_0 0); only 1: now rewrite <- one_succ; only 1: nzsimpl; only 1: order).	1.04375219345	1638
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.0.1.7.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	0.344223976135	543
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0059130191803	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.00578904151917	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	8.0.0.4	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	0.154305934906	414
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.5.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: apply div_str_pos; only 1: intuition).	0.06849193573	54
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	2.9.3.6.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: auto').	0.818868875504	1045
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.6.4.2.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	1.79434204102	1915
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	1.1.0.0.0.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: symmetry; only 1: symmetry; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0919108390808	73
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.0.0.14.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.18578004837	366
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.0.0.14.7.1.1	search with cache (only 1: intro H; only 1: intro z; only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	1.38993310928	4076
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.5.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto').	0.0140490531921	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	1.0.0.18.1	search with cache (only 1: intros n m p H; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	11.0928399563	6600
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	2.1.5.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: assumption).	0.25474691391	131
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.3.11.0.6.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	1.58271694183	2652
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.00732493400574	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.2.8.3	search with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.0620160102844	220
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	2.0.0.2.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: f_equiv').	0.0158128738403	10
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	5.11.3	search with cache (only 1: intro y; only 1: unfold def_mul; only 1: now rewrite recursion_0).	0.283739805222	467
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	21.14	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.432607889175	874
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.3.0.18.7.1	search with cache (only 1: intros; only 1: unfold even; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	5.80485010147	7428
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.2.2.0.0.0.1.0.0.3	search with cache (only 1: intros; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: auto; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	4.39792895317	3377
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	6	search with cache (only 1: solve_proper).	0.206658840179	86
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	3.0.1.0.0.1.0.0	search with cache (only 1: destr_bool; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.863488197327	624
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.2	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0212960243225	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	1.0.26.8.2	search with cache (only 1: intros a; only 1: apply Private_NZDiv.div_small; only 1: destr_bool; only 1: apply lt_1_2; only 1: order').	19.192994833	14136
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.1.6.2.6	search with cache (only 1: intro; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	4.32472705841	531
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	1.0.0.0.0.3.22.3	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: now try order'; only 1: order'; only 1: order_nz).	15.5697009563	17548
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0291440486908	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0114550590515	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.2.0	search with cache (only 1: intros a0; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.041356086731	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.4.6.1	search with cache (only 1: intros a0; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.755266189575	430
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.266685962677	90
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.104796886444	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0604429244995	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0704090595245	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	0.1.3.0.0.1.5.11	search with cache (only 1: intros a Ha; only 1: intuition; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).	27.7783811092	21642
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0219709873199	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0222289562225	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	13.0.3	search with cache (only 1: intro H; only 1: bitwise; only 1: intuition).	0.732708930969	777
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: destr_bool).	0.0233051776886	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	1.4.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0292181968689	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0228900909424	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	4.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0235359668732	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.6.1.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.11626291275	38
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.1.1.0.0.1.0.1.0.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	3.09598398209	2105
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.5.4.0.0.3.1.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	16.2524290085	9787
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	2.0.3.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.0725588798523	47
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.1.0.0.4	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.490598917007	505
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.1.0.0.10.0	search with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: now apply eq_le_incl; only 1: apply le_0_l; only 1: now rewrite add_0_r).	0.417340040207	364
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	0.0.0.0.0.3.0.0.1.0.0.0	search with cache (only 1: intros n m; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.84823203087	2395
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	8.2.0.3.0.3.0	search with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: now nzsimpl').	14.187114954	13020
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	2.1.0.2.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.617331981659	406
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	5.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	2.88296294212	2990
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	12.2	search with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	3.38782119751	1154
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	9.1.0.1	search with cache (only 1: intros; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	7.39252400398	1572
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.1.0.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0279071331024	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	7.0.3.0	search with cache (only 1: intros; only 1: nzsimpl; only 1: now nzsimpl'; only 1: apply le_0_l).	0.539801836014	215
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.2.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	5.45668721199	2426
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.1.0.4.0.0.0.2.0.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: order; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order'; only 1: now rewrite <- H).	21.8193981647	13533
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	0.5.11.0.7	search with cache (only 1: intro H; only 1: intros a b Ha Hb; only 1: apply pow_le_mono_r; only 1: auto'; only 1: trivial).	8.18477916718	8722
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	0.1.3.4.7.5.2	search with cache (only 1: split; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: eauto; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	14.58314991	15740
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	3.0.0.1.3.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	11.6695141792	2443
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	8.40434789658	962
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.1.0.0.1.0.0.1.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?succ_le_mono).	10.8391389847	3916
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	1.64311289787	278
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	7.0	search with cache (only 1: intros; only 1: reflexivity).	0.00531411170959	9
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40	0.0.0.0.0.0.0.0.1.1	search with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	10.179336071	109
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	0.1.7.4.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	6.08100700378	311
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	0.0.0.0.10.7.10.0	search with cache (only 1: intros a b H; only 1: rewrite mul_comm; only 1: symmetry; only 1: rewrite mul_comm; only 1: rewrite divide_div_mul_exact; only 1: easy; only 1: easy; only 1: apply gcd_divide_l).	22.8143339157	32385
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	7.4	search with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.710594177246	281
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.2.8	search with cache (only 1: intro H; only 1: unfold lcm; only 1: now nzsimpl).	0.263090848923	164
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0252499580383	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	1.12.0.3.10.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply le_0_l; only 1: intros; only 1: intuition; only 1: trivial using divide_1_l, le_0_1).	2.29087305069	2566
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1).	0.0251128673553	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	3.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.430639028549	215
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.4.0.2.8.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_refl, le_0_l; only 1: trivial using divide_refl, le_0_l).	6.94823288918	5108
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	4.0.0.3.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	1.08085584641	347
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	3.0.3.4	search with cache (only 1: intro E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	0.091588973999	176
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40	13.0.0.0	search with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: now induction d).	1.47929000854	1514
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	4.0.0.1.0	search with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: now nzsimpl; only 1: now nzsimpl).	0.0496098995209	10
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	3.1.4.8	search with cache (only 1: rewrite one_succ; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn by now apply lt_succ_r, mul_nonneg_nonneg; only 1: now rewrite pred_succ, sqrt_square).	4.62726688385	2298
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	2.1.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0778801441193	52
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.1.0.13.4.5	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: order).	4.39479708672	3990
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	2.1.0.0.1	search with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: order).	0.014505147934	9
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.21.3	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	35.0598530769	15124
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	1.0.1.1.0.1.12.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm).	12.8130199909	8632
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.1.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0371828079224	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0381610393524	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0168809890747	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.4.0	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.307519197464	102
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0473990440369	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.1	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0542011260986	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	2.5	search with cache (only 1: intros; only 1: now nzsimpl').	0.0242850780487	11
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	12.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.461817979813	379
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	1.0.0.4	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0246651172638	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	11.2.0.0.13	search with cache (only 1: firstorder; only 1: apply lt_eq_cases; only 1: now left; only 1: order; only 1: order).	3.07431101799	8008
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0206480026245	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0232880115509	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0208430290222	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0231871604919	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	5.1	search with cache (only 1: intros; only 1: order).	0.0229361057281	23
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	1	search with cache (only 1: order).	0.0118038654327	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.5.4	search with cache (only 1: intros; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.158532142639	197
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	4.0.4	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: now rewrite lt_succ_r).	0.156808137894	145
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	2.0.3.0	search with cache (only 1: intro n; only 1: intro p; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl).	0.0305478572845	15
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	7.1.7.1.0.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: split; only 1: rewrite lt_succ_r; only 1: apply le_succ_l; only 1: rewrite lt_succ_r; only 1: apply le_succ_l).	8.7163310051	10053
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	9.1.6.1.1.0	search with cache (only 1: intro n; only 1: intro m; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	12.8058969975	14287
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.0.4	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0189950466156	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.1.7.1.1	search with cache (only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.146207094193	135
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.1.2.0.11	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0975799560547	174
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.7.1	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	1.305768013	695
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.1.2.0	search with cache (only 1: intros; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0473341941833	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	9.9.16.0	search with cache (only 1: intros; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	7.77976989746	8345
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.2.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.036493062973	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	1.1.0.2	search with cache (only 1: intros n m; only 1: split; only 1: order; only 1: order).	0.0362358093262	22
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0151450634003	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	2.0.2.3.3	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.59234213829	753
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.1.1.1.2.1	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: split; only 1: order; only 1: order; only 1: intuition order).	0.430513143539	378
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.0.0.1	search with cache (only 1: intros n m; only 1: split; only 1: order; only 1: order).	0.0138959884644	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0153121948242	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.1.0.0.0.2	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.14116692543	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.2.12.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	1.36015200615	1591
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	2.1.3	search with cache (only 1: intros n H; only 1: rewrite lt_succ_r; only 1: intuition order).	0.21742105484	127
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40	9.12.9	search with cache (only 1: simpl_relation; only 1: compute; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	25.5246241093	4338
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	36.24	search with cache (only 1: simpl; only 1: firstorder).	0.539020061493	1944
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	27.1	search with cache (only 1: intros; only 1: reflexivity).	14.7527649403	10537
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	6.1.13.9	search with cache (only 1: PeanoNat.Nat.induct ltac:(n); only 1: apply PeanoNat.Nat.lt_succ_diag_r; only 1: intros; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	16.3762938976	15955
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	3.0.0.0.0.10.4.1.4	search with cache (only 1: induction n; only 1: simpl; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	4.87603902817	5776
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.3	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0468502044678	5
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.0.3.10.1	search with cache (only 1: intro n; only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl'; only 1: apply lt_le_incl, lt_0_1).	2.45444917679	564
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	2.12.5.0.10	search with cache (only 1: unfold divide; only 1: intro n; only 1: destruct 1; only 1: rewrite mul_0_l in H || rewrite mul_0_r in H; only 1: now nzsimpl).	28.6839039326	18041
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	0.3.16.1.2.7.5	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: order; only 1: intros; only 1: intuition; only 1: exists 0; only 1: now nzsimpl).	4.31295013428	7397
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.00696682929993	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	3.0.0.0.7.0.10.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	17.8947331905	16765
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0150611400604	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.00702095031738	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	3.1.2.0.0.16.8.0	search with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: generalize (gcd_divide_l n m); only 1: exists 0; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	19.3754060268	18737
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.3.0.0.2.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.0617179870605	89
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.1.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.100881814957	7
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	1.0.1.1.0.1.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: intuition; only 1: simpl; only 1: intuition).	7.1896879673	3866
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.3.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.165833950043	59
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.5.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0392708778381	30
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	1.4.0.0.0	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	0.0841460227966	20
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	1.1.1.1.1.1	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	1.25172495842	513
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	1.14.3.2	search with cache (only 1: intros; only 1: apply even_add_even; only 1: exists m; only 1: now nzsimpl).	9.85266494751	3295
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.1.10.0.0.2	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: nzsimpl'; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	4.43388295174	2347
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.0641648769379	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0905129909515	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0329451560974	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.1	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.015909910202	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	2.1.0.0.2	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).	0.065936088562	10
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.1.0.0.0.2	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.416121006012	82
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	2.0.0.1.2	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0829408168793	10
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0347280502319	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.2.11.1.2.4.1.4.26	search with cache (only 1: apply log2_unique; only 1: order_pos; only 1: split; only 1: now nzsimpl; only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: rewrite pow_succ_r by order; only 1: nzsimpl'; only 1: apply lt_succ_diag_r).	10.2445828915	10030
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.1.4.1.2.5.1	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: order_pos; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	3.11764407158	1955
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	1.1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.0216839313507	8
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	2.0.2.9.8.0	search with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare; only 1: order; only 1: order_pos; only 1: order).	34.2824468613	23591
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	1.7.2	search with cache (only 1: unfold log2_up; only 1: apply log2_up_eqn0; only 1: order').	0.825239896774	332
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	0.8.3.8.1	search with cache (only 1: intros a Ha; only 1: rewrite log2_up_eqn; only 1: apply lt_succ_r; only 1: apply log2_nonneg; only 1: trivial).	4.89791321754	3801
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	2	search with cache (only 1: now trivial).	0.010381937027	3
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	3.0	search with cache (only 1: intros; only 1: firstorder).	0.00853800773621	5
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	6.7.4.2.9.2.7	search with cache (only 1: intro A; only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	13.3194270134	26354
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.2.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	0.303092956543	109
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.1.1.1.0.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	0.0518720149994	10
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0300850868225	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0306489467621	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	0.2.0.1.0.1	search with cache (only 1: intros n m p; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: rewrite <- (add_0_l 0); only 1: apply mul_le_mono_pos_l; only 1: assumption).	0.466900110245	24
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0143949985504	7
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	13.2	search with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	0.481476068497	262
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.1	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0171580314636	8
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	1.0	search with cache (only 1: intros; only 1: firstorder).	0.00966501235962	3
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	8.1	search with cache (only 1: intros; only 1: firstorder).	0.0194439888	29
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.0100347995758	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	1	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0184700489044	2
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (P.lt_total x y); only 1: rewrite ?P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.058807849884	50
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	1.0.0.0.3.0	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: generalize (P.lt_total x y); only 1: generalize (P.lt_total x y); only 1: generalize (P.lt_total x y); only 1: intuition).	0.168541908264	22
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	1.0.30	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.86813378334	3153
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	3.2	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: now f_equiv).	0.15616106987	53
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.0.3.9	search with cache (only 1: intros x y H; only 1: transitivity y; only 1: auto; only 1: auto).	0.147850036621	250
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	9.4	search with cache (only 1: unfold lt; only 1: Nat.order).	0.496916055679	576
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.0	search with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0202350616455	2
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.019238948822	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	1.0.0.10.1	search with cache (only 1: intros; only 1: destruct x; only 1: split; only 1: auto with *; only 1: auto with *).	0.249439954758	369
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	39.15.0	search with cache (only 1: intros (x1, x2); only 1: red; only 1: firstorder).	8.75430798531	24803
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.0.0.4.8.3.5.3	search with cache (only 1: induction x; only 1: intros H; only 1: eauto; only 1: intros H; only 1: eauto; only 1: simpl; only 1: intro; only 1: eauto).	0.819931030273	3162
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	search with cache (only 1: decide equality).	0.0275268554688	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.0	search with cache (only 1: intros; only 1: firstorder).	0.00413799285889	2
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.1.4.1.1.0	search with cache (only 1: intros; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	2.82535505295	1516
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	2.5.7.5	search with cache (only 1: intros; only 1: destruct x; only 1: red; only 1: auto).	0.350623846054	979
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	1.0.3.2.4.0	search with cache (only 1: intros (x1, x2); only 1: red; only 1: intros a H; only 1: inversion H; only 1: simpl; only 1: auto).	0.427566051483	750
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.14	search with cache (only 1: apply eqb_eq; only 1: firstorder).	0.896824836731	932
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	1.1.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.270565986633	135
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	3	search with cache (only 1: order).	0.0392730236053	16
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	2	search with cache (only 1: order).	0.0189430713654	3
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	1	search with cache (only 1: order).	0.0161590576172	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0147299766541	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0144500732422	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	1	search with cache (only 1: order).	0.0156228542328	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0151400566101	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0148470401764	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.0144991874695	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.0.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: order; only 1: order).	0.0182008743286	5
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0144789218903	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0145092010498	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0145959854126	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0139729976654	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	3.0.1.0.0.3.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: order).	0.514269113541	1014
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.2.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.573096036911	877
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0419988632202	3
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	6.0.2.0.1.1.2	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	0.970118045807	1598
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40	0.0.4.0.0.0.0.0.0.0.7.11	search with cache (only 1: intros l x y H H'; only 1: eapply SortA_InfA_InA; only 1: split; only 1: exact eq_refl; only 1: exact eq_sym; only 1: exact eq_trans; only 1: split; only 1: exact lt_antirefl; only 1: exact lt_trans; only 1: intuition; only 1: auto with ordered_type; only 1: auto with ordered_type).	9.19986414909	18080
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	2.1.3.6	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition).	0.142658948898	341
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	8.2.30.5	search with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: auto with ordered_type; only 1: auto with ordered_type).	1.15868902206	2783
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.9.5	search with cache (only 1: intros; only 1: induction H; only 1: auto).	0.124011039734	286
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	1.3	search with cache (only 1: intros x y z; only 1: auto).	0.0152609348297	6
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0130290985107	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	3.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0176382064819	5
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0185298919678	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.0132350921631	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.02552318573	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40	0.12.3.14.3.0.1	search with cache (only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: now rewrite <- H; only 1: simpl in *; only 1: subst; only 1: auto).	3.6791510582	5301
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.0207521915436	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	5	search with cache (only 1: eauto with ordered_type).	0.0483689308167	29
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	12.0.3.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: order).	2.35020780563	1764
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	0.7.2.7.0	search with cache (only 1: split; only 1: eauto with ordered_type; only 1: auto with *; only 1: red; only 1: eauto with ordered_type).	0.390748023987	535
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0.0.0	search with cache (only 1: constructor; only 1: constructor; only 1: auto with ordered_type; only 1: auto; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0394999980927	6
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40	0.2.5	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: eauto with ordered_type).	0.258236885071	87
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40	0.0.6.10	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: unfold eqke; only 1: intuition).	11.9879639149	9909
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intros; only 1: auto with ordered_type).	0.017707824707	11
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.0167970657349	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0164570808411	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	0.0.10.30.16.16	search with cache (only 1: unfold ltk, eqk; only 1: intros; only 1: induction H; only 1: induction H; only 1: auto; only 1: auto).	7.09352517128	36949
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40	0.3.0.6.0.14.2.23.5	search with cache (only 1: intros; only 1: generalize dependent l; only 1: intros H'; only 1: compute; only 1: induction 1; only 1: left; only 1: intuition; only 1: eauto with ordered_type; only 1: intuition).	36.3458189964	67171
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.9.6.6	search with cache (only 1: inversion 1; only 1: subst; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	8.78058218956	4545
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	8	search with cache (only 1: abstract now inversion 1).	0.110086917877	54
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.0.0.1.0	search with cache (only 1: unfold eqk, ltk; only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.0392029285431	7
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	1.0.0.0.0	search with cache (only 1: case compare_spec; only 1: easy; only 1: easy; only 1: intro EQ; only 1: easy).	0.0123951435089	6
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: apply compare_eq_iff; only 1: easy).	0.00548815727234	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.11.3.2.2.2	search with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: compute; only 1: iorder).	15.5645890236	6797
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.0	search with cache (only 1: compute; only 1: iorder).	0.00943994522095	20
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	2.6	search with cache (only 1: repeat red; only 1: iorder).	0.0366239547729	51
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	1	search with cache (only 1: iorder).	0.00698399543762	2
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.00859093666077	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	2.1	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0717220306396	15
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	2.0	search with cache (only 1: rewrite compare_lt_iff; only 1: iorder).	0.0724158287048	15
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.011862039566	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0100409984589	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	2.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.8067419529	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	3.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.81884694099	5
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	6.1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.81609010696	13
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.00652885437012	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	1	search with cache (only 1: order).	0.00501203536987	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.00514698028564	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.00576686859131	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	2	search with cache (only 1: order).	0.00579404830933	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	3.0	search with cache (only 1: intro H; only 1: order).	0.157028913498	5
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	2	search with cache (only 1: order).	0.00694799423218	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	1	search with cache (only 1: order).	0.00704312324524	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.00599408149719	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	1	search with cache (only 1: order).	0.00586915016174	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	1	search with cache (only 1: order).	0.005539894104	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	2	search with cache (only 1: order).	0.00582981109619	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	3.3.3.4	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	0.364902019501	450
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	1.0	search with cache (only 1: unfold lt; only 1: auto with *).	0.00801301002502	3
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0	search with cache (only 1: now apply compare_eq_iff).	0.00536799430847	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0	search with cache (only 1: now apply compare_eq_iff).	0.00654006004333	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.00746393203735	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	8	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0287110805511	17
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	4.9.5	search with cache (only 1: case leb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	2.77139401436	2586
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.1.14	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.474680185318	335
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	6.6.6.1.8	search with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: intuition; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	18.399597168	21791
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1.4	search with cache (only 1: intros l n x d H; only 1: subst; only 1: auto).	0.0130989551544	21
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.3.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: constructor; only 1: firstorder).	0.464836835861	375
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.0.27.6.0.0.10	search with cache (only 1: induction l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	10.9740719795	26505
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.37.3	search with cache (only 1: firstorder; only 1: rewrite H; only 1: auto).	4.16130781174	10296
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.3.3	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intros; only 1: auto).	0.0291969776154	45
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	22	search with cache (only 1: eauto with *).	1.93525314331	1539
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	0.20.6.0	search with cache (only 1: unfold eqk, ltk; only 1: repeat red; only 1: fix gcd_divide 1; only 1: firstorder).	20.4360539913	10238
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	4	search with cache (only 1: firstorder).	0.00717401504517	5
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	1.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0191311836243	4
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	6	search with cache (only 1: now intros <-).	0.0228378772736	7
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.00661516189575	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.00551700592041	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0052011013031	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0	search with cache (only 1: firstorder).	0.00633811950684	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	2	search with cache (only 1: now destruct 1).	0.00722479820251	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	search with cache (only 1: reflexivity).	0.00513291358948	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: firstorder).	0.00529813766479	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	search with cache (only 1: firstorder).	0.00786805152893	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.0.0.0.2	search with cache (only 1: do 2 rewrite InA_alt; only 1: intros (y, H); only 1: exists y; only 1: intuition; only 1: firstorder).	0.295597791672	16
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.2	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.018520116806	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.1.2	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: invlist InA).	0.101513147354	21
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	0.0.2.1.2.0.0.2.2.8	search with cache (only 1: rewrite In_alt2; only 1: unfold In, MapsTo; only 1: setoid_rewrite Exists_exists; only 1: setoid_rewrite InA_alt; only 1: firstorder; only 1: subst; only 1: auto; only 1: right; only 1: exists (snd x),x; only 1: auto).	23.8597331047	21150
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	0.10.4.7	search with cache (only 1: repeat red; only 1: intros l n x d H; only 1: fix gcd_divide 1; only 1: auto).	5.92544794083	2976
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	0.10.16.3	search with cache (only 1: repeat red; only 1: intros x y z H; only 1: fix gcd_divide 1; only 1: firstorder).	36.6578109264	35049
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	0.22.1	search with cache (only 1: firstorder; only 1: rewrite <- H; only 1: auto).	1.77153587341	1464
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0167009830475	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	2.3	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.042053937912	7
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.10.10	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.300791978836	408
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.2.7	search with cache (only 1: inversion 1; only 1: firstorder; only 1: auto).	0.103739976883	56
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	13	search with cache (only 1: firstorder).	0.0277848243713	64
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	3.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.00758290290833	5
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0077211856842	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.00564908981323	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0126428604126	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	0.7.0.0.1	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: red; only 1: eauto).	0.178070068359	216
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0189559459686	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.0.7.4.0	search with cache (only 1: unfold eqk, eqke; only 1: intros l; only 1: induction 1; only 1: intuition; only 1: intuition).	0.526251792908	600
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.1.3	search with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0309839248657	7
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40	0.0.6.1.9.3.9	search with cache (only 1: intros A f assoc a0 comma0 l; only 1: red; only 1: induction l; only 1: destruct y; only 1: induction H; only 1: eauto; only 1: eauto).	6.5112888813	4170
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.1.2.5	search with cache (only 1: unfold not; only 1: inversion 1; only 1: contradiction; only 1: auto).	0.171738862991	166
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.2.1.1.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: induction 1; only 1: intuition; only 1: auto).	0.0165431499481	9
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.1.2.6.6	search with cache (only 1: red; only 1: intros n; only 1: intros x y L E; only 1: rewrite E in L; only 1: auto).	0.388812065125	412
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	2.0.1.1.1.0.2.0.0.0.12.0.1	search with cache (only 1: split; only 1: red; only 1: compute; only 1: intros x; only 1: pose proof (compare_sym x x) as H; only 1: destruct (x ?= x); only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: red; only 1: apply compare_trans).	14.1934669018	46509
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	1.6.11.0.1.0	search with cache (only 1: red; only 1: repeat red; only 1: unfold lt, eq; only 1: intros a H; only 1: fix gcd_divide 1; only 1: auto).	33.8582420349	34055
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	29.0	search with cache (only 1: unfold eq; only 1: decide equality).	13.6232151985	12945
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.1.0.0.0.1.0.0.0.1.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	11.323538065	9432
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	1.1.0.0	search with cache (only 1: apply max_r; only 1: rewrite le_lteq; only 1: right; only 1: intuition).	0.00813007354736	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.00881695747375	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	8.0	search with cache (only 1: repeat red; only 1: solve_max).	0.0491819381714	35
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0166189670563	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max; only 1: solve_max).	0.546632051468	334
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	5.7.6	search with cache (only 1: repeat red; only 1: pose proof (max_spec n m) as Hm; only 1: intuition order).	1.69812512398	2155
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0	search with cache (only 1: solve_max).	0.00947594642639	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.00979900360107	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0	search with cache (only 1: solve_max).	0.0095329284668	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.0.1.0	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.0230011940002	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.1.2	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0124390125275	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	1.1.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0732159614563	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.015527009964	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0458829402924	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.0.1.1.0.0.0.1.0.0.0.1.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: intuition; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: right; only 1: split; only 1: auto; only 1: now apply min_r).	25.8775701523	26270
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.2	search with cache (only 1: apply min_l; only 1: order).	0.00501489639282	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	1	search with cache (only 1: solve_min).	0.00852584838867	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.0.0.0.0.7.4	search with cache (only 1: repeat red; only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: order).	0.378336191177	454
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.0110440254211	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.3.5.1.4	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: right; only 1: intuition; only 1: order).	3.94304299355	4672
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	0.0231220722198	11
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.00982689857483	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.00949501991272	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.00955414772034	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.0.1.1	search with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: solve_min).	0.083044052124	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.1.2	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0119960308075	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	2.4.1	search with cache (only 1: destruct (min_spec n m); only 1: solve_min; only 1: solve_min).	0.174072980881	69
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.014643907547	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0828289985657	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.0	search with cache (only 1: apply max_l; only 1: solve_min).	0.00878596305847	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.2	search with cache (only 1: apply min_l; only 1: solve_max).	0.0111289024353	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	1.3.0.3.0.0.1.2.3.0.0.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	8.50596117973	11610
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	0.1.0.1.3.0.0.1.2.0.0.1.2.1.0.0.1	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply max_l; only 1: auto).	12.3553378582	37996
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.2.1.0.4.0.0.2.1.2.0.1.2.1.0.1.2	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	10.2975568771	28230
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.00546908378601	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.8	search with cache (only 1: simpl_relation; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0620799064636	120
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.00586605072021	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.6	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.01313996315	26
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	4.19	search with cache (only 1: intros Pdec l; only 1: congruence).	22.9506790638	23728
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	1.0	search with cache (only 1: unfold eq, lt; only 1: decide equality).	0.0196771621704	17
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	5.4.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.199744939804	544
Coq.ZArith.Znat.N_nat_Z	40	2.1.1.0.1.0.4.0.0.0.5	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.924624919891	2608
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0086030960083	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.00544691085815	1
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: trivial).	0.00544190406799	1
Coq.ZArith.Znat.positive_nat_N	40	2.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0100190639496	13
Coq.ZArith.Znat.Z_N_nat	40	2	search with cache (only 1: now destruct n).	0.0084331035614	3
Coq.ZArith.Znat.Z_nat_N	40	0.1.0.0.0.1.2.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	0.621119976044	563
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.00748085975647	1
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.2.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: N.order_nz; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.194497108459	161
Coq.ZArith.Znat.N2Z.id	40	0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.00818705558777	4
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	3.97464609146	7375
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.7.13	search with cache (only 1: destruct n; only 1: discriminate; only 1: easy).	0.0604050159454	277
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.00559186935425	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00525307655334	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0116860866547	9
Coq.ZArith.Znat.N2Z.inj_le	40	6.0	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.00850486755371	8
Coq.ZArith.Znat.N2Z.inj_lt	40	4.0	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.00835990905762	6
Coq.ZArith.Znat.N2Z.inj_ge	40	6.6	search with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).	0.290017127991	204
Coq.ZArith.Znat.N2Z.inj_gt	40	7.1	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0147609710693	19
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	12	search with cache (only 1: now destruct n, m).	1.7116689682	177
Coq.ZArith.Znat.N2Z.inj_mul	40	4	search with cache (only 1: now destruct n, m).	1.86795306206	151
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.00985407829285	5
Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.00955104827881	3
Coq.ZArith.Znat.N2Z.inj_pred	40	2.8.4	search with cache (only 1: destruct n; only 1: now Morphisms.f_equiv; only 1: now destruct p).	0.605232000351	386
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.2.3.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: trivial; only 1: reflexivity).	0.241031885147	231
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.00965309143066	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0152418613434	10
Coq.ZArith.Znat.Z2N.id	40	3.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0114190578461	7
Coq.ZArith.Znat.Z2N.inj	40	1.0.2.0.1.0.0.0.1.0.0.0.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl).	23.2539179325	22525
Coq.ZArith.Znat.Z2N.inj_iff	40	0.2.1.0.0.1.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: subst; only 1: trivial).	0.60714006424	227
Coq.ZArith.Znat.Z2N.inj_0	40	1	search with cache (only 1: trivial).	0.00665688514709	2
Coq.ZArith.Znat.Z2N.inj_pos	40	1	search with cache (only 1: auto).	0.00616693496704	2
Coq.ZArith.Znat.Z2N.inj_neg	40	1	search with cache (only 1: trivial).	0.00590896606445	2
Coq.ZArith.Znat.Z2N.inj_add	40	9	search with cache (only 1: now destruct n, m).	0.572570085526	77
Coq.ZArith.Znat.Z2N.inj_mul	40	3	search with cache (only 1: now destruct n, m).	0.0182600021362	4
Coq.ZArith.Znat.Z2N.inj_succ	40	0.1.1.1.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0165719985962	10
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.1.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.0150110721588	14
Coq.ZArith.Znat.Z2N.inj_compare	40	2	search with cache (only 1: now destruct n, m).	0.236778974533	259
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40	14.0.7	search with cache (only 1: intros Hn Hm; only 1: unfold N.lt, N.gt; only 1: now rewrite inj_compare).	2.23020601273	3075
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.0.0.1.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.295901060104	140
Coq.ZArith.Znat.Z2N.inj_quot2	40	0.0.0.2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial).	0.0338718891144	14
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0123889446259	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	1	search with cache (only 1: now destruct n).	0.00940895080566	2
Coq.ZArith.Znat.Zabs2N.id_abs	40	5	search with cache (only 1: now destruct n).	0.00757789611816	6
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.00674891471863	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0056209564209	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	search with cache (only 1: auto).	0.00555300712585	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00535893440247	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: N.order_nz; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0122871398926	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.1.1.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	0.040472984314	61
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: trivial).	2.69868302345	2409
Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	2.19283103943	650
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	1.0.1.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now destruct p; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.161295890808	39
Coq.ZArith.Znat.Zabs2N.inj_compare	40	12	search with cache (only 1: now destruct n, m).	0.844973087311	1168
Coq.ZArith.Znat.Zabs2N.inj_le	40	1.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0093719959259	5
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.00887584686279	4
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	3.1.1.0.0.1.3	search with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: f_equal; only 1: now destruct p; only 1: now destruct p).	0.753037929535	978
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	18	search with cache (only 1: now destruct n, m).	5.97828102112	6556
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.00962591171265	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00669717788696	2
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.4.0.2.2	search with cache (only 1: simpl; only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.130874872208	298
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0104370117188	1
Coq.ZArith.Znat.Nat2Z.id	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.0134840011597	5
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	1.0.1.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	0.0104207992554	7
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40	7.1	search with cache (only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	0.120331048965	41
Coq.ZArith.Znat.Nat2Z.inj_gt	40	8.2	search with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	0.189415931702	109
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40
Coq.ZArith.Znat.Z2Nat.inj	40
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.3.7.1.10.4.1.0.1.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: destruct m; only 1: intros; only 1: now f_equal; only 1: intros; only 1: now f_equal; only 1: now destruct n).	23.3176259995	20878
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.0053391456604	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.00674605369568	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	5	search with cache (only 1: reflexivity).	0.00670409202576	6
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	5.0.0.16.9.0.0.0.6	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite Pos.add_1_r; only 1: apply Pos2Nat.inj_succ; only 1: simpl; only 1: now try Nat.order').	33.3996801376	30631
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.00700807571411	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.00872802734375	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.6	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.831348180771	1565
Coq.ZArith.Znat.Zabs2Nat.id	40	0.0.0.1.1	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.0164420604706	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.00532984733582	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.00574207305908	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.00550103187561	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	9.0.16.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: apply Pos2Nat.inj_succ; only 1: now rewrite ?Hx).	34.5616281033	31297
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.00908589363098	4
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.00898909568787	4
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	8.8.0.1.4	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	2.14999604225	2883
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	1.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).	30.768928051	48792
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).	9.17264485359	16420
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).	0.024885892868	11
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	1.0.0.1.0.1.1.1.0.1.1.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	2.47732400894	4500
Coq.ZArith.Wf_Z.Z_lt_rec	40	1.0.0.1.0.1.1.0.1.0.1.1.0.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	2.88880300522	3920
Coq.ZArith.Wf_Z.Z_lt_induction	40	2.1.0.2.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros; only 1: auto with sets).	0.0756959915161	54
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.1.0.0.0.0.0.0.0.2.0.0.0.2	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	5.57729291916	10173
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	0.1.5.0.3.0.0.8	search with cache (only 1: unfold Z.pow_pos; only 1: generalize 1; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.56829690933	2873
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	11.10.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order).	2.5594830513	4458
Coq.ZArith.Zcompare.Zle_compare	40	0.2.3.0.0.7.1.2	search with cache (only 1: intros; only 1: Z.le_elim H; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: Z.order; only 1: subst; only 1: now rewrite Z.compare_refl).	0.663268089294	1277
Coq.ZArith.Zcompare.Zlt_compare	40
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: auto).	0.0100209712982	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.1	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0252480506897	22
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0309901237488	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0315210819244	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	31.5552208424	44029
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	26.0973968506	35508
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.1	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0372471809387	6
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0428380966187	9
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.1.5.10.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.mod_divide; only 1: rewrite Z.rem_divide; only 1: intuition; only 1: trivial; only 1: trivial).	1.90111398697	1117
Coq.ZArith.Zdigits.binary_value	40	11	search with cache (only 1: constructor).	0.0451030731201	90
Coq.ZArith.Zdigits.two_compl_value	40	1	search with cache (only 1: constructor).	0.0190789699554	11
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0194270610809	2
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0.0	search with cache (only 1: intros; only 1: auto).	0.019660949707	2
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	2.1.1.0	search with cache (only 1: simple induction n; only 1: intros; only 1: trivial; only 1: reflexivity).	0.0267131328583	12
Coq.ZArith.Zdigits.Z_div2_value	40	0.7	search with cache (only 1: intro n; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.684880018234	183
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.1	search with cache (only 1: intros; only 1: auto).	0.0192539691925	3
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	3.0.5.6.10	search with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: contradict H; only 1: now destruct p; only 1: now destruct p).	1.46419620514	1376
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	1.0.1.0.0.0.0.1	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: lia).	0.185488939285	145
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.11	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.175544023514	86
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	1	search with cache (only 1: now destruct n).	0.0158920288086	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1	search with cache (only 1: now destruct n).	0.0161190032959	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.0160880088806	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.17	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.448899030685	315
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	37.1706061363	56466
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0163600444794	3
Coq.ZArith.BinInt.Z.two_succ	40	1.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0166211128235	3
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0170819759369	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0157189369202	2
Coq.ZArith.BinInt.Z.opp_succ	40	3.0.0.0.0.0.9	search with cache (only 1: unfold succ; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: now destruct p).	4.75338292122	8185
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0182809829712	2
Coq.ZArith.BinInt.Z.sub_0_r	40	1	search with cache (only 1: now destruct n).	0.0169298648834	2
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0167551040649	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?pos_sub_spec; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?pos_sub_spec; only 1: trivial).	22.3821568489	51510
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.015200138092	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0151669979095	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.0.0.4.4	search with cache (only 1: unfold le, max; only 1: case N.compare_spec; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.13939499855	84
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.0.8.5	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: trivial).	2.27504301071	2536
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	6	search with cache (only 1: now destruct n).	0.0208160877228	7
Coq.ZArith.BinInt.Z.abs_neq	40
Coq.ZArith.BinInt.Z.sgn_null	40	5	search with cache (only 1: now destruct n).	0.0693099498749	80
Coq.ZArith.BinInt.Z.sgn_pos	40	6	search with cache (only 1: now destruct n).	0.0754058361053	7
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0252869129181	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.0174040794373	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0161108970642	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40	2.0.0.0.0.1.0.2.0.0.0.1.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: destruct 1; only 1: subst; only 1: now split; only 1: subst; only 1: now split; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: revert p; only 1: easy).	11.1475040913	11152
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	1	search with cache (only 1: now destruct n).	0.022558927536	2
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0194940567017	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: trivial).	0.0170040130615	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	22	search with cache (only 1: now destruct n).	2.33756089211	381
Coq.ZArith.BinInt.Z.pred_double_spec	40	1	search with cache (only 1: now destruct n).	0.0186769962311	2
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.9.0.0.2.0.20	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite N.mul_comm).	25.3491809368	38486
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.1.2.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite N.mul_comm).	0.0460228919983	20
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.26	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).	39.017649889	22468
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	1.06137490273	1485
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.3.1	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.169847011566	179
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0177989006042	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	4.16	search with cache (only 1: rewrite <- ?negb_true_iff, ?N.negb_even, ?N.odd_spec, ?N.even_spec; only 1: now destruct n as [| [| | ]| [| | ]]).	0.139507055283	218
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.085764169693	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	8	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0240068435669	14
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.4	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0289461612701	6
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0192930698395	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	0.4	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.127989053726	6
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0200879573822	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	0.1.0.0.1.0.0.2.10	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial).	1.11951518059	621
Coq.ZArith.BinInt.Z.add_diag	40	3	search with cache (only 1: now nzsimpl').	0.117295026779	4
Coq.ZArith.BinInt.Z.compare_opp	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?pos_sub_spec; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?pos_sub_spec; only 1: trivial).	15.8165049553	24865
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.5.0.0.0.1.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	1.82354998589	859
Coq.ZArith.BinInt.Pos2Z.id	40	0	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0236010551453	1
Coq.ZArith.BinInt.Pos2Z.inj	40	4	search with cache (only 1: congruence).	0.0369980335236	5
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.2.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: destruct 1; only 1: auto).	0.0291519165039	7
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1	search with cache (only 1: easy).	0.0250809192657	2
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0	search with cache (only 1: easy).	0.0294229984283	1
Coq.ZArith.BinInt.Pos2Z.inj_1	40	4	search with cache (only 1: Z.order).	0.0234711170197	5
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0248420238495	3
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0252170562744	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.1.0.0.11	search with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: reflexivity).	0.212321043015	180
Coq.ZArith.BinInt.Pos2Z.inj_add	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0244419574738	3
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.2.0.0.0.0.0	search with cache (only 1: destruct p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros H; only 1: simpl; only 1: easy').	0.031809091568	9
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	2.1.2.0.0	search with cache (only 1: induction q as [q IHq| q IHq| ]; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0616149902344	47
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0248110294342	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0244538784027	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: auto).	0.0235509872437	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	1.0	search with cache (only 1: revert q; only 1: trivial).	0.0251638889313	3
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	1	search with cache (only 1: trivial).	0.0239429473877	2
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0238888263702	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0235900878906	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: trivial).	0.0237169265747	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.2	search with cache (only 1: simpl; only 1: congruence).	0.0249319076538	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	5	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0449829101562	15
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	3.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0345749855042	7
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: apply inj).	0.0232491493225	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	3.1.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0286312103271	8
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.024729013443	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0	search with cache (only 1: easy).	0.0300800800323	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0246040821075	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0292949676514	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	4	search with cache (only 1: easy).	0.0305550098419	5
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0244858264923	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	10.6.4.0.1	search with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: red; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	14.0488920212	28904
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	3.0	search with cache (only 1: intros; only 1: easy).	0.0306680202484	16
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.0.2.1	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0290749073029	7
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0234749317169	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.023708820343	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.023041009903	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0234949588776	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.0247340202332	3
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0249450206757	3
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0236508846283	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1.0	search with cache (only 1: revert q; only 1: trivial).	0.188345909119	149
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	2.1.0.1.0.0	search with cache (only 1: revert q; only 1: induction p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: easy).	0.126004934311	103
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0237419605255	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.1.0	search with cache (only 1: intro Hn; only 1: apply Z.testbit_Zpos; only 1: auto).	0.0261509418488	4
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.0235180854797	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	4.0.1.1	search with cache (only 1: destruct x; only 1: now rewrite ?Pos.square_xO; only 1: trivial; only 1: now rewrite ?Pos.square_xO).	0.177585840225	10
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0332250595093	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.9.0.4.6.2	search with cache (only 1: destruct x; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now rewrite ?Pos.add_carry_spec, ?IHp).	1.30838799477	1594
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	2.2.0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.377157926559	33
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: destruct y; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy; only 1: easy).	0.370372056961	10
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	1.6.9.1.5	search with cache (only 1: destruct x; only 1: simpl; only 1: easy'; only 1: easy || now destruct y; only 1: easy || now destruct y).	1.30328512192	1665
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	2.2.2.2	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	0.725847005844	190
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.14689707756	5
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.1.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0682640075684	6
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	1.0.2.1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: trivial).	0.0416688919067	23
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	0.053790807724	6
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	3.1.1.0	search with cache (only 1: intros x y z; only 1: symmetry; only 1: symmetry; only 1: now f_equal).	0.0439269542694	15
Coq.ZArith.BinInt.ZL0	40	1	search with cache (only 1: reflexivity).	0.0236871242523	2
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	7	search with cache (only 1: now Z.nzsimpl').	0.152341127396	17
Coq.ZArith.BinInt.Z_eq_mult	40
Coq.ZArith.Zcomplements.floor_gt0	40	0	search with cache (only 1: easy).	0.00777697563171	1
Coq.ZArith.Zcomplements.floor_ok	40	1.6.0.25.2	search with cache (only 1: intros; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	13.7050900459	14232
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	2.9	search with cache (only 1: Z.swap_greater; only 1: now induction n).	0.0587930679321	81
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	1	search with cache (only 1: auto).	0.00606393814087	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	8.8.0	search with cache (only 1: split; only 1: now destruct n as [| [| | ]| [| | ]]; only 1: now destruct n as [| [| | ]| [| | ]]).	0.157293081284	297
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.1.0.0.2.10.0.0.0.1.0.0.2.10.0	search with cache (only 1: split; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	21.8460121155	82774
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.1.0.0.1.0.0.0.1.5	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: destruct p; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: destruct p; only 1: auto; only 1: simpl; only 1: auto; only 1: auto).	1.17130994797	1500
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	7.61169600487	13506
Coq.ZArith.Zeven.Zeven_not_Zodd	40	3.3.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: now destruct p).	0.200227975845	262
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0170419216156	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	0.0.0.1.0.0.2.14.6	search with cache (only 1: boolify_even_odd; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	30.2849638462	86026
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	1	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0258960723877	2
Coq.ZArith.Zeven.Zodd_div2	40	0.0.1.0.0.0.0.1.0.0.1.0.1	search with cache (only 1: boolify_even_odd; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: easy; only 1: simpl; only 1: easy).	21.9554300308	5327
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.0.0.1.3	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: reflexivity; only 1: now Z.nzsimpl).	0.725970983505	98
Coq.ZArith.Zeven.Zeven_quot2	40	0.0	search with cache (only 1: boolify_even_odd; only 1: now destruct n as [| [| | ]| [| | ]]).	0.0205550193787	2
Coq.ZArith.Zeven.Zodd_quot2	40	4.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.470263957977	23
Coq.ZArith.Zeven.Zodd_quot2_neg	40	3.4.1	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.227540016174	50
Coq.ZArith.Zeven.Zquot2_opp	40	1.1.0.0.3.0.1.0.0.7.0.11	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: reflexivity; only 1: Z.bitwise; only 1: trivial; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: trivial).	6.70606994629	10358
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	1.0.20	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	5.19256591797	2134
Coq.ZArith.Zeven.Zodd_ex	40	0.12.1.0.2.0.12.1.0.9	search with cache (only 1: destruct (Z.lt_trichotomy 0 n) as [POS| [NUL| NEG]]; only 1: exists (Z.div2 n); only 1: Z.nzsimpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]; only 1: now subst; only 1: exists (Z.div2 n); only 1: Z.nzsimpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	30.5708539486	20147
Coq.ZArith.Zeven.Zeven_2p	40	2.1.2.3.4.4	search with cache (only 1: induction p; only 1: now Z.nzsimpl; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	1.20667505264	1022
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	0.0.5.1.6	search with cache (only 1: Z.nzsimpl; only 1: induction p; only 1: now Z.nzsimpl; only 1: now destruct p; only 1: now destruct p).	1.54497289658	333
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	4.3.0.3.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	0.598798036575	436
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0292189121246	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0299551486969	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0230610370636	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0230288505554	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0226149559021	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	1.10.9.8	search with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	1.15270090103	2505
Coq.ZArith.Znumtheory.Zis_gcd_1	40
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	1.0.0.0.1	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intros n; only 1: auto with zarith).	0.162652015686	13
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.141201019287	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.09321808815	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0501239299774	17
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.0.0.8.1	search with cache (only 1: induction 1; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	1.23306298256	454
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	4.0.0.1.2	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: trivial).	0.394680976868	93
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.5.2	search with cache (only 1: intros a Ha; only 1: intros (_, H'); only 1: auto).	0.0445599555969	23
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	22.15	search with cache (only 1: induction 1; only 1: discriminate).	3.53088498116	5990
Coq.ZArith.Znumtheory.not_prime_1	40
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0169939994812	4
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.00959491729736	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0973951816559	3
Coq.ZArith.Zdiv.Zdiv_0_r	40
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.5.1.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0335879325867	12
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	1.1.0.1	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0104320049286	7
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0094621181488	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	0.0.2.8.0.0	search with cache (only 1: intros; only 1: replace (a - b) with a + -1 * b; only 1: unfold Z.sub; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto with zarith; only 1: auto with zarith).	1.90345406532	1556
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.2.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.027843952179	25
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.00932788848877	3
Coq.ZArith.Zdiv.eqm_refl	40	0	search with cache (only 1: constructor).	0.00579500198364	1
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.00708484649658	2
Coq.ZArith.Zdiv.eqm_trans	40
Coq.ZArith.Zdiv.eqm_setoid	40	2.0.1.0	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.0105509757996	7
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.10.0	search with cache (only 1: intros; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.384447097778	158
Coq.ZArith.Zdiv.Zeven_mod	40	0.1.0	search with cache (only 1: intros; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0260009765625	4
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.0.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.0223009586334	5
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.2.0.0.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not c; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: Z.order).	0.0206558704376	16
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0181210041046	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.0.2.1.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.145507097244	17
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0213708877563	22
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0118801593781	5
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.00717902183533	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	26.1	search with cache (only 1: intros; only 1: now destruct n).	0.0702929496765	409
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	4	search with cache (only 1: auto with relations).	0.0220799446106	5
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	search with cache (only 1: trivial).	0.0191628932953	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.0188341140747	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	8	search with cache (only 1: reflexivity).	0.0211160182953	9
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0188338756561	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	2.0	search with cache (only 1: Z.bitwise; only 1: trivial).	0.0297439098358	4
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	5.1	search with cache (only 1: Z.bitwise; only 1: split).	0.0315999984741	8
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0190808773041	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.018965959549	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0184690952301	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.0185608863831	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0185039043427	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0183317661285	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: reflexivity).	0.0207109451294	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	2.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct n).	0.0266470909119	6
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	25	search with cache (only 1: apply Pos2Nat.inj_iter).	6.39251184464	7241
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.025444984436	3
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0213000774384	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0218920707703	2
Coq.ZArith.Zpower.two_p_equiv	40	1.0.1.9	search with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).	0.317934989929	89
Coq.ZArith.Zpower.two_power_nat_S	40	0	search with cache (only 1: reflexivity).	0.0203931331635	1
Coq.ZArith.Zpower.shift_nat_plus	40	2.10.0.1.7	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite ?IHn; only 1: reflexivity).	6.14319300652	2654
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	7	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0356619358063	8
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	5	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0552201271057	51
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	6.0.2.2.10.7	search with cache (only 1: symmetry; only 1: destruct x; only 1: simpl; only 1: trivial; only 1: trivial; only 1: now subst).	0.776082992554	1581
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	13	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.550611972809	195
Coq.ZArith.auxiliary.Zle_left	40
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0141470432281	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	7	search with cache (only 1: apply Z.lt_0_sub).	0.0165619850159	8
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0138339996338	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40
Coq.ZArith.auxiliary.Zgt_left	40	0.0.2.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.0398349761963	24
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0293638706207	4
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0294449329376	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	1.6.3.9.1.3.5	search with cache (only 1: unfold Z.le, Z.max; only 1: case Z.compare_spec; only 1: auto; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: congruence; only 1: auto).	12.3197259903	21334
Coq.ZArith.Zmax.Zpos_max_1	40	22	search with cache (only 1: now destruct p).	0.165148973465	330
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	9	search with cache (only 1: now destruct p).	0.0157549381256	13
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	1.4.11.2	search with cache (only 1: simpl; only 1: fix gcd_divide 1; only 1: intros; only 1: auto with zarith).	12.0942239761	8159
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.15	search with cache (only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0969429016113	150
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.00923180580139	1
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: Z.order).	0.0088210105896	1
Coq.ZArith.Zorder.Zle_not_gt	40	0	search with cache (only 1: auto).	0.00614404678345	1
Coq.ZArith.Zorder.Zgt_not_le	40	0	search with cache (only 1: auto).	0.00643396377563	1
Coq.ZArith.Zorder.Znot_ge_lt	40
Coq.ZArith.Zorder.Znot_lt_ge	40	1	search with cache (only 1: auto).	0.159028053284	6
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.00555300712585	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.012218952179	2
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	0.0.0.26	search with cache (only 1: destruct (Z.le_decidable m n); only 1: trivial; only 1: Z.swap_greater; only 1: Z.order).	4.96676492691	3416
Coq.ZArith.Zorder.Zgt_irrefl	40
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.0234739780426	2
Coq.ZArith.Zorder.Zle_gt_trans	40	8.6	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.509863138199	221
Coq.ZArith.Zorder.Zgt_le_trans	40	3.6	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.0296649932861	24
Coq.ZArith.Zorder.Zge_trans	40
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	2.6	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0354058742523	14
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0155341625214	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0795650482178	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.00690317153931	1
Coq.ZArith.Zorder.Zgt_succ	40	0.7	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.00875496864319	9
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.00678300857544	1
Coq.ZArith.Zorder.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.00618410110474	2
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0119650363922	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.00788593292236	1
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0124402046204	3
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	1	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.00811290740967	2
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.17	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0511620044708	145
Coq.ZArith.Zorder.Zle_neg_pos	40	0.1	search with cache (only 1: intros; only 1: easy).	0.0120899677277	3
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0.5.1	search with cache (only 1: intros n; only 1: repeat red; only 1: simpl; only 1: trivial).	0.00931596755981	10
Coq.ZArith.Zorder.Zle_0_pos	40	3.1	search with cache (only 1: intros a b; only 1: discriminate).	0.00766205787659	6
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.00768208503723	1
Coq.ZArith.Zorder.Zle_0_nat	40	6.2.0.0.0.5.1.0	search with cache (only 1: intros; only 1: induction n; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: Z.order'; only 1: trivial).	0.814242839813	1837
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.00738000869751	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0078330039978	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	3	search with cache (only 1: apply Z.add_le_mono_l).	0.0221190452576	4
Coq.ZArith.Zorder.Zplus_le_reg_r	40	3	search with cache (only 1: apply Z.add_le_mono_r).	0.0229070186615	4
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0067880153656	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.00783205032349	2
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0162749290466	3
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0162010192871	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	2.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0221321582794	6
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0134181976318	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	1	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0081090927124	2
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	3	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.00864791870117	4
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.02263879776	5
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	7.2.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.368945837021	64
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	8.2.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.404779911041	76
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	1.2	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.00948095321655	5
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0130250453949	4
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.00798201560974	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0125489234924	3
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00700807571411	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0218319892883	3
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0223939418793	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	1.0.0.1.1.1.1.0.0.1.2.2.12	search with cache (only 1: red; only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	10.6311929226	13307
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	6.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0136430263519	10
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0220501422882	2
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	2	search with cache (only 1: apply Z.le_0_sub).	0.00745606422424	3
Coq.ZArith.Zbool.Zle_cases	40	0.0.2.1.0.7	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: Z.swap_greater; only 1: auto).	0.268430948257	160
Coq.ZArith.Zbool.Zlt_cases	40	2.4.0.1.16.9.5	search with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.swap_greater; only 1: Z.order; only 1: auto; only 1: Z.swap_greater; only 1: Z.order).	4.13301301003	5995
Coq.ZArith.Zbool.Zge_cases	40	2.2.0.1.16.10.7	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.swap_greater; only 1: Z.order; only 1: auto; only 1: Z.swap_greater; only 1: Z.order).	2.83887815475	3477
Coq.ZArith.Zbool.Zgt_cases	40	0.1.2.1.0.13	search with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: Z.swap_greater; only 1: auto).	0.488358020782	306
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.5.3.1.1	search with cache (only 1: unfold Z.leb, Z.le; only 1: intro H'; only 1: intuition; only 1: rewrite H in H'; only 1: discriminate).	0.527446985245	287
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.0190079212189	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.2	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0521421432495	5
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	search with cache (only 1: trivial).	0.0193700790405	3
Coq.ZArith.Zbool.Zone_min_pos	40	0.1.1.0.7.3.3.10.15	search with cache (only 1: symmetry; only 1: apply Z.leb_gt in H; only 1: destruct n; only 1: now destruct Hn || easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: trivial; only 1: now destruct Hn || easy).	2.19334292412	3378
Coq.ZArith.Zbool.Zle_is_le_bool	40
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.0.0.0.0.0.20	search with cache (only 1: split; only 1: rewrite !Z.leb_le; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.add_le_mono_r; only 1: rewrite !Z.leb_le; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.add_le_mono_r).	2.9746530056	3090
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.0259919166565	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	3.1.0.3.2.3	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: trivial; only 1: easy'; only 1: easy).	0.38955616951	719
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0145440101624	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0169928073883	4
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0151679515839	6
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.6.5	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.586542844772	501
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.13.6	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	24.3646230698	25379
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.0.0.6.2	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.541970968246	385
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.0.1.0.1.1.0.0.0.0.2.1	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: right; only 1: auto).	1.45900988579	1571
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0210289955139	3
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: auto).	0.00605988502502	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.18	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0576190948486	331
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.00720000267029	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.00832295417786	3
Coq.Program.Wf.Fix_F_sub_rect	40
Coq.Program.Wf.eq_Fix_F_sub	40	0.2.3.0	search with cache (only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: rewrite F_unfold; only 1: auto).	0.101464986801	20
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40
Coq.Program.Equality.JMeq_eq_refl	40	4	search with cache (only 1: apply UIP).	0.00444006919861	5
Coq.Program.Equality.UIP_refl_refl	40	0	search with cache (only 1: apply UIP).	0.0028350353241	1
Coq.Program.Equality.inj_pairT2_refl	40	2	search with cache (only 1: apply UIP_refl).	0.00371599197388	3
Coq.Program.Equality.solution_left	40
Coq.Program.Equality.solution_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.004065990448	3
Coq.Program.Equality.deletion	40	0.1	search with cache (only 1: intros; only 1: assumption).	0.00348901748657	3
Coq.Program.Equality.simplification_heq	40	7.2.5	search with cache (only 1: intros; only 1: subst; only 1: auto).	0.0331308841705	170
Coq.Program.Equality.simplification_existT2	40	1.4.1.14.18	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: trivial).	0.270807027817	1770
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40
Coq.Program.Combinators.compose_id_left	40	0.1	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.00656199455261	3
Coq.Program.Combinators.compose_id_right	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.00618100166321	3
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00666284561157	2
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00658798217773	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00672388076782	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40	1.0.2.1.3.0.1.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: destruct 1; only 1: apply gt_irrefl; only 1: simpl; only 1: intros a'; only 1: rewrite IHl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto with *; only 1: intuition).	5.78058409691	6744
Coq.Sorting.PermutEq.multiplicity_In_O	40	1.2.8.0.6.1.0.4.4	search with cache (only 1: intros; only 1: induction l as [| x l]; only 1: reflexivity; only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: simpl in *; only 1: tauto; only 1: simpl in *; only 1: auto).	32.5845401287	39980
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.2.2	search with cache (only 1: intros l a; only 1: rewrite multiplicity_In; only 1: eauto with typeclass_instances).	0.0535778999329	22
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	1.1.3.1.5.5.8.0.0.5.9	search with cache (only 1: intros [| n]; only 1: constructor; only 1: auto; only 1: auto; only 1: induction n; only 1: simpl; only 1: fix gcd_divide 1; only 1: eauto using Permutation_NoDup; only 1: constructor; only 1: auto; only 1: auto).	11.5488660336	48175
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.1.1.2.0.2.1.5.0.3.1.0	search with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H as (_, H1); only 1: auto; only 1: simpl; only 1: auto).	2.61420202255	7622
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	7.0.3.5	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: now constructor).	0.461994886398	589
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40
Coq.Sorting.Permutation.Permutation_cons	40	0.5.2	search with cache (only 1: reduce; only 1: subst; only 1: auto).	0.00992512702942	10
Coq.Sorting.Permutation.Permutation_in	40	0.2.1.0.5.1.5	search with cache (only 1: induction l; only 1: firstorder; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: firstorder).	14.967869997	5541
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.2.0.0.8.1	search with cache (only 1: intros; only 1: elim l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with datatypes).	0.526257991791	1100
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.0.0	search with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0311889648438	3
Coq.Sorting.Permutation.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	1.0.0.0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.0323860645294	9
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	14	search with cache (only 1: split).	0.0915060043335	182
Coq.Sorting.PermutSetoid.permut_sym	40	0.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0237851142883	2
Coq.Sorting.PermutSetoid.permut_trans	40	1.6.0.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: trivial).	0.533755779266	405
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	3.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0270910263062	7
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40	0.0.9.1.0.0	search with cache (only 1: intros; only 1: replace (a :: l) with [ ] ++ a :: l; only 1: apply permut_add_inside_eq; only 1: intuition; only 1: trivial; only 1: trivial).	5.11974096298	2151
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	0.0.3.0.4	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.714582920074	172
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.1.0.1.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	2.69128394127	1016
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	0.0.0.0.0.0.1.0.0.0.0.3.0.0	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: apply plus_reg_l with (if eqA_dec a a0 then 1 else 0); only 1: rewrite H; only 1: clear H; only 1: destruct (eqA_dec a a0); only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	31.6616508961	8596
Coq.Sorting.PermutSetoid.if_eqA_else	40	0.8.22.7.0	search with cache (only 1: intros; only 1: set (eqke := fun p p' : A * B => eqA (fst p) (fst p') /\ snd p = snd p'); only 1: destruct (eqA_dec a a'); only 1: congruence; only 1: auto).	36.5277869701	35928
Coq.Sorting.PermutSetoid.if_eqA_refl	40	13.1.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: auto with relations).	0.316427946091	590
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.2.8	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: auto with *).	1.22966623306	551
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	1.1.1.7.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl).	0.873935222626	887
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.4.2	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0169370174408	17
Coq.Sorting.Sorted.Sorted_inv	40	0.2	search with cache (only 1: inversion 1; only 1: auto).	0.0110111236572	4
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.4.1	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0984170436859	19
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.00957584381104	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	4.0.13.1.4.2.0.2.10	search with cache (only 1: intro Pdec; only 1: induction 1; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H; only 1: auto using Sorted, LocallySorted, HdRel; only 1: subst; only 1: induction H0; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel).	37.5357539654	60763
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	0.6	search with cache (only 1: red; only 1: eauto with *).	0.011029958725	8
Coq.Sorting.Heap.leA_Tree_Node	40	1.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.00746202468872	3
Coq.Sorting.Heap.invert_heap	40
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.1.1.0.0.6.3	search with cache (only 1: intros x y H; only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: firstorder; only 1: auto with datatypes).	5.42293405533	1124
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	0.0.10	search with cache (only 1: repeat intro; only 1: simpl; only 1: auto with arith).	0.217620134354	171
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40
Coq.Sorting.Heap.list_to_heap	40	2.1.0	search with cache (only 1: fix merge 1; only 1: intros; only 1: trivial).	0.0112879276276	6
Coq.Sorting.Heap.heap_to_list	40
Coq.Sorting.Heap.treesort	40	1.1.2.0	search with cache (only 1: unfold permutation; only 1: fix merge 1; only 1: intros; only 1: auto with datatypes).	0.0135700702667	17
Coq.Init.Wf.Acc_inv	40	1.9	search with cache (only 1: destruct 1; only 1: assumption).	0.00980806350708	52
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00575184822083	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00609302520752	4
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0047550201416	6
Coq.Init.Peano.pred_Sn	40	1.1	search with cache (only 1: intros; only 1: auto).	0.00510001182556	4
Coq.Init.Peano.not_eq_S	40
Coq.Init.Peano.O_S	40	2.4	search with cache (only 1: intro H; only 1: discriminate).	0.00697803497314	26
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40
Coq.Init.Peano.plus_O_n	40	0	search with cache (only 1: reflexivity).	0.00530600547791	1
Coq.Init.Peano.plus_n_Sm	40	4.2.0.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.034646987915	164
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00711798667908	7
Coq.Init.Peano.mult_n_O	40	0.0.3.2	search with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: auto).	0.00664186477661	9
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	1.0.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00610995292664	7
Coq.Init.Peano.le_n_S	40	2.0.1	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.00768709182739	15
Coq.Init.Peano.nat_case	40	6.6.2	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.076721906662	610
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40
Coq.Init.Peano.min_r	40	0.4.3.0.1.1.1.1.0.0.0.1.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.895562171936	3636
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00467920303345	4
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00473499298096	3
Coq.Init.Datatypes.surjective_pairing	40
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: auto).	0.00695896148682	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	3.1.1.2.3	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0165119171143	136
Coq.Init.Datatypes.CompOpp_inj	40	0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	0.0220708847046	105
Coq.Init.Datatypes.CompOpp_iff	40	0.0.1.0.1.1.1.1.0.5.0.0.1.0.1.1.1.1.0.5.2.4	search with cache (only 1: intros; only 1: split; only 1: destruct c, c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c, c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto; only 1: auto).	12.2777869701	82948
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00279903411865	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	1.1.0.0.1.1.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.0285818576813	300
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.0.1.2.1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.0563929080963	759
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40	3.3.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.00410389900208	10
Coq.Init.Logic.not_iff_compat	40	0.0.0.1	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00372195243835	5
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.1	search with cache (only 1: intros; only 1: assumption).	0.0054759979248	3
Coq.Init.Logic.iff_to_and	40	0.3.0.3.2	search with cache (only 1: split; only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).	0.0185720920563	92
Coq.Init.Logic.inst	40	1	search with cache (only 1: auto).	0.00613498687744	2
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00567102432251	3
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00633192062378	4
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00579905509949	2
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00607109069824	3
Coq.Init.Logic.not_eq_sym	40
Coq.Init.Logic.eq_sind_r	40
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00564408302307	4
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00543689727783	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00664591789246	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.6.3	search with cache (only 1: destruct 1; only 1: destruct H; only 1: trivial).	0.0300641059875	91
Coq.Init.Logic.rew_opp_r	40
Coq.Init.Logic.rew_opp_l	40
Coq.Init.Logic.f_equal2	40
Coq.Init.Logic.f_equal3	40	1.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00890803337097	16
Coq.Init.Logic.f_equal4	40	0.1.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0109848976135	19
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00893712043762	7
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	1.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00609397888184	4
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00620079040527	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00631904602051	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00619292259216	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00603699684143	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00706720352173	5
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.3.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00778603553772	6
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: trivial).	0.00749206542969	2
Coq.Init.Logic.rew_swap	40	1.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00688195228577	6
Coq.Init.Logic.rew_compose	40
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00439596176147	2
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40	0.1	search with cache (only 1: destruct e; only 1: trivial).	0.00498199462891	7
Coq.Init.Logic.eq_trans_sym_distr	40	1.3.4	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.0127949714661	41
Coq.Init.Logic.eq_trans_rew_distr	40	0.2.0	search with cache (only 1: intros; only 1: destruct e, e'; only 1: reflexivity).	0.00568914413452	5
Coq.Init.Logic.rew_const	40	0.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00413799285889	3
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.0	search with cache (only 1: destruct 1; only 1: auto).	0.00469398498535	4
Coq.Init.Logic.inhabited_covariant	40
Coq.Init.Logic.eq_stepl	40	1.2	search with cache (only 1: destruct 1; only 1: auto).	0.00434923171997	5
Coq.Init.Logic.iff_stepl	40	9.9.0.6	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.124347925186	1482
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.4.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: destruct H; only 1: reflexivity).	0.00715804100037	10
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00618696212769	2
Coq.Init.Logic_Type.identity_sym	40	0.4	search with cache (only 1: destruct 1; only 1: trivial).	0.0061731338501	14
Coq.Init.Logic_Type.identity_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00377488136292	4
Coq.Init.Logic_Type.identity_congr	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00346398353577	3
Coq.Init.Logic_Type.not_identity_sym	40
Coq.Init.Logic_Type.identity_ind_r	40
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00514101982117	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00347185134888	3
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40	0.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.00670003890991	3
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00628995895386	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00590109825134	2
Coq.Init.Specif.exists_to_inhabited_sig	40
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00853514671326	5
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00678300857544	4
Coq.Init.Specif.eq_existT_curried_map	40	1.4.1	search with cache (only 1: simpl in *; only 1: destruct p, q; only 1: reflexivity).	0.0147180557251	19
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00722599029541	2
Coq.Init.Specif.eq_exist_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00744581222534	5
Coq.Init.Specif.eq_sig_uncurried	40
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.0.3.1.0.2.1	search with cache (only 1: split; only 1: intro p; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct p; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	0.131615161896	565
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0053539276123	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.0.0.1.4.0.1.0	search with cache (only 1: split; only 1: intro p; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct p; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	0.601547002792	1041
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0072238445282	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.1.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.00972700119019	25
Coq.Init.Specif.eq_sig2_uncurried	40	0.2.2.0.9	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.185240030289	315
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.0.0.0.3.1.1.0	search with cache (only 1: split; only 1: simpl in *; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	0.548825979233	987
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00665807723999	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00310015678406	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	1.1.0.0.0.0.2.0.0.2.0	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.541030883789	621
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0363609790802	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.00771284103394	3
Coq.QArith.Qreduction.Qminus'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.00738120079041	3
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	8.4.0.0.7	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	2.51110100746	3784
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.3.0.0.0.2.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: compute; only 1: auto).	2.00152301788	1089
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	4.5.1.1	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	0.247032880783	297
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.1.0.4	search with cache (only 1: constructor; only 1: intro; only 1: intro; only 1: now destruct n).	0.0322849750519	11
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0204191207886	1
Coq.QArith.Qfield.ex2	40	14.0.1.3.1	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.9307949543	1308
Coq.QArith.Qfield.ex3	40	1.1	search with cache (only 1: intros; only 1: ring).	0.0741648674011	35
Coq.QArith.Qfield.ex4	40	5.7	search with cache (only 1: red; only 1: now Z.nzsimpl').	0.146754980087	80
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0289688110352	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0290970802307	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0305781364441	3
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0303630828857	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0299911499023	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	0.1.0.0.0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.253640174866	13
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0380280017853	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.1.0.3.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.0596990585327	47
Coq.QArith.Qcanon.Qred_involutive	40	3.11.3	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	4.14203906059	3860
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	7	search with cache (only 1: auto with *).	0.00944900512695	14
Coq.QArith.Qcanon.Qcgt_alt	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0144820213318	11
Coq.QArith.Qcanon.Qcle_alt	40	0	search with cache (only 1: reflexivity).	0.00647187232971	1
Coq.QArith.Qcanon.Qcge_alt	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0139610767365	11
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: auto with qarith).	0.00795006752014	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	10.17.7	search with cache (only 1: intros a; only 1: qc; only 1: ring).	6.88382196426	5359
Coq.QArith.Qcanon.Qcplus_0_r	40	19.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.960064888	1031
Coq.QArith.Qcanon.Qcplus_comm	40	4.0.0.4.10.6.0.1	search with cache (only 1: intros (x, y); only 1: intros; only 1: qc; only 1: destruct x; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	6.71476697922	8669
Coq.QArith.Qcanon.Qcopp_involutive	40	4.15.1	search with cache (only 1: intros; only 1: qc; only 1: ring).	1.08188605309	1104
Coq.QArith.Qcanon.Qcplus_opp_r	40	4.2.6.1.19.12	search with cache (only 1: unfold Q2Qc; only 1: intros (x, y); only 1: qc; only 1: red; only 1: simpl; only 1: ring).	21.3190159798	21962
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40	0.5.0.0	search with cache (only 1: intros; only 1: qc; only 1: compute; only 1: reflexivity).	0.0231471061707	9
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40	31.2.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	3.82336211205	4662
Coq.QArith.Qcanon.Qcmult_1_r	40	15.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.422031879425	272
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.5.10.6.0.5	search with cache (only 1: intros (x, y); only 1: intros; only 1: qc; only 1: destruct x; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).	5.46582698822	6084
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	1.9.4.0.3.0	search with cache (only 1: intros; only 1: intuition; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	3.41092395782	1908
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.0.5.2	search with cache (only 1: intros; only 1: red; only 1: unfold Qle; only 1: auto with zarith).	0.0238168239594	35
Coq.QArith.Qcanon.Qcle_antisym	40	2.6.12.5	search with cache (only 1: intros x y z; only 1: destruct (Qeq_dec x y) as [H| H]; only 1: auto; only 1: auto with qarith).	25.8268399239	12345
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	3.8.0.0.0	search with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.nlt_ge; only 1: auto with zarith).	0.572291135788	695
Coq.QArith.Qcanon.Qclt_le_weak	40	2.0.0	search with cache (only 1: unfold Qcle; only 1: intros; only 1: auto with *).	0.00887179374695	5
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.5.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: auto with *; only 1: auto with *).	0.0803239345551	51
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.2.4.0	search with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: auto with *; only 1: auto with *).	0.269204854965	192
Coq.QArith.Qcanon.Qcnot_lt_le	40	1.1.2	search with cache (only 1: intros; only 1: apply Z.nlt_ge; only 1: auto with qarith).	0.0369849205017	76
Coq.QArith.Qcanon.Qcnot_le_lt	40	4.1.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.nle_gt; only 1: auto with qarith).	0.0191869735718	14
Coq.QArith.Qcanon.Qclt_not_le	40	0.6.1	search with cache (only 1: intros; only 1: apply Z.lt_nge; only 1: auto).	0.0223848819733	28
Coq.QArith.Qcanon.Qcle_not_lt	40	0.5.1	search with cache (only 1: intros; only 1: apply Z.nlt_ge; only 1: auto).	0.0156791210175	13
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	2.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.00961804389954	5
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	0.1.6.3.3.4.1	search with cache (only 1: unfold Qcle, Qcminus; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	13.8789498806	12141
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40	10.1.0.2.0.0.5.0.0	search with cache (only 1: intros; only 1: qc; only 1: induction n; only 1: simpl; only 1: constructor; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite IHn).	21.8069729805	21553
Coq.QArith.Qcanon.Qcpower_0	40	6.0.7.2.4.1	search with cache (only 1: intro H; only 1: destruct H; only 1: now destruct 1; only 1: destruct H; only 1: trivial; only 1: trivial).	21.996778965	1859
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40	0.0.0.2.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: constructor; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: auto; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	10.3998999596	7270
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.3.4.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.506232976913	832
Coq.QArith.Qreals.IZR_nz	40	2	search with cache (only 1: auto with real).	0.0797219276428	41
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.1.0.0.2.1.2	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: simpl in *; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	0.986572027206	544
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40	0.0.2.0.0.0.1.0.3.1	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qden, Qnum; only 1: simpl; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: do 3 rewrite mult_IZR; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto).	6.26120305061	3725
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	0.0.4.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: split; only 1: trivial; only 1: trivial).	0.0218830108643	32
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	8	search with cache (only 1: apply iff_refl).	0.0164921283722	39
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	3	search with cache (only 1: easy).	0.00734305381775	4
Coq.QArith.QArith_base.Qeq_sym	40	1.4.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: destruct x; only 1: auto).	0.0116958618164	14
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.0.3	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0173621177673	7
Coq.QArith.QArith_base.Qeq_bool_iff	40	5.8.0.8.4	search with cache (only 1: intuition; only 1: apply Zeq_is_eq_bool; only 1: trivial; only 1: apply Zeq_is_eq_bool; only 1: auto with qarith).	4.75974988937	4415
Coq.QArith.QArith_base.Qeq_bool_eq	40	8	search with cache (only 1: apply Zeq_is_eq_bool).	0.0149381160736	21
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.00574803352356	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	14	search with cache (only 1: apply Zle_is_le_bool).	0.188694000244	75
Coq.QArith.QArith_base.Qnot_eq_sym	40	2	search with cache (only 1: auto with qarith).	0.00682091712952	3
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.00691485404968	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.5	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.0199491977692	8
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.1.0.0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.0252330303192	7
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	3.2.0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: symmetry; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).	0.171269893646	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0.23	search with cache (only 1: rewrite <- Qeq_bool_iff; only 1: intuition).	0.450047016144	417
Coq.QArith.QArith_base.Qplus_assoc	40	0.0.1.1.6.12.6	search with cache (only 1: intros A B H; only 1: inversion H; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: auto).	13.2115900517	1815
Coq.QArith.QArith_base.Qplus_0_l	40	0.0.0.11.7	search with cache (only 1: intros; only 1: destruct x; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	3.19859099388	637
Coq.QArith.QArith_base.Qplus_0_r	40	0.1.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.020388841629	6
Coq.QArith.QArith_base.Qplus_comm	40	0.0.0.0.0.19.3	search with cache (only 1: intros (x1, x2); only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: trivial).	9.20058488846	544
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: ring).	0.43084692955	5
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0179750919342	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.2	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.73731803894	41
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: red; only 1: simpl; only 1: trivial).	0.00820899009705	3
Coq.QArith.QArith_base.Qmult_0_r	40	5.0.0.1	search with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.0286247730255	27
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.2.0.2.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: destruct n; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.617628097534	123
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.039703130722	21
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.0.1	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: trivial).	0.486471891403	96
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0432779788971	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	10	search with cache (only 1: trivial).	0.17632818222	78
Coq.QArith.QArith_base.inject_Z_opp	40	5.3	search with cache (only 1: unfold Qplus, inject_Z; only 1: reflexivity).	0.00852012634277	11
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	0.0.1.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring_simplify; only 1: trivial).	0.0347828865051	7
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0246231555939	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	3.3	search with cache (only 1: red; only 1: now reflexivity).	0.0738370418549	22
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	10.14.16	search with cache (only 1: red; only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	6.14584302902	3624
Coq.QArith.QArith_base.Qlt_not_eq	40	17.2	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	0.257770061493	382
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	4.0.0	search with cache (only 1: red; only 1: unfold Qeq, Qlt, Qcompare; only 1: now apply Z.lt_le_incl).	0.0479619503021	36
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	11.1.6	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: unfold Z.lt; only 1: apply Z.ge_le_iff).	0.487635135651	563
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0060830116272	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.00538992881775	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	12.0.0.0.0.1.1	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: now apply Z.mul_nonneg_nonneg).	6.89457416534	7444
Coq.QArith.QArith_base.Qinv_le_0_compat	40	0.0.0.4.1.6.0.0.0.1.10	search with cache (only 1: intros (x1, x2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: destruct x1; only 1: discriminate; only 1: easy; only 1: easy).	22.4935610294	23721
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.5	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0139698982239	20
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.1.0.0.1	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.351884126663	118
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	4.3.4.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	1.75620985031	1261
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	0.0.0.0.0.0.2.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: case x1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now subst).	0.691712141037	618
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.1.0.1.0.1.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.509547948837	296
Coq.QArith.Qabs.Qabs_nonneg	40	1.1.1.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	0.0108668804169	7
Coq.QArith.Qabs.Zabs_Qabs	40	2.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: auto).	0.00939583778381	6
Coq.QArith.Qabs.Qabs_opp	40	8.0.5.2	search with cache (only 1: red; only 1: intros (n, d); only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	4.16006588936	1790
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	0.735553979874	457
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	0.0.1.1.0.0.1.0.0.2.5	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: red; only 1: auto with zarith; only 1: unfold Qle; only 1: simpl; only 1: auto with *; only 1: red; only 1: red; only 1: simpl; only 1: discriminate).	1.82257294655	3368
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	2	search with cache (only 1: reflexivity).	0.00339198112488	3
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00257086753845	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0029890537262	1
Coq.Classes.CMorphisms.pointwise_pointwise	40
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.00321102142334	1
Coq.Classes.CMorphisms.subrelation_respectful	40	6	search with cache (only 1: firstorder).	0.00917792320251	7
Coq.Classes.CMorphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00335693359375	1
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00349712371826	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	1.3.3	search with cache (only 1: red; only 1: red; only 1: simpl_crelation).	0.0459101200104	11
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00779509544373	1
Coq.Classes.CMorphisms.forall_subrelation	40	0.9.12.2	search with cache (only 1: intro H; only 1: simpl_crelation; only 1: apply H; only 1: auto).	0.640081882477	3247
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00460004806519	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00348210334778	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00404691696167	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00379395484924	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.00569486618042	2
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	0.099271774292	3
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.802083969116	358
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	1.2.1.0	search with cache (only 1: transitivity y; only 1: assumption; only 1: symmetry; only 1: assumption).	0.13934803009	194
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	2.2.1.0	search with cache (only 1: transitivity y; only 1: symmetry; only 1: firstorder; only 1: firstorder).	3.65382003784	211
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.34753203392	24
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00500321388245	1
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.00414705276489	2
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	2.1.7	search with cache (only 1: intros; only 1: reduce; only 1: simpl_crelation).	0.0168190002441	60
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00393795967102	1
Coq.Classes.CMorphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.00575304031372	1
Coq.Classes.CMorphisms.flip1	40	0	search with cache (only 1: simpl_crelation).	0.00688600540161	1
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: simpl_crelation).	0.00672602653503	1
Coq.Classes.CMorphisms.eq_subrelation	40	0.5.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.00485014915466	8
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00369310379028	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00366282463074	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.1.0	search with cache (only 1: intros A x y z H1 H2; only 1: intros; only 1: subst; only 1: firstorder).	0.0070538520813	5
Coq.Classes.CMorphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00438499450684	1
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00412797927856	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.1	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation).	0.0387780666351	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40	0.1.4.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x y H'; only 1: firstorder).	0.476744174957	44
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.1	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.147476911545	40
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.5	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.764200925827	79
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.1.1	search with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.0168128013611	24
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	6	search with cache (only 1: firstorder).	0.00563502311707	7
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00484490394592	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00757193565369	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.256816148758	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.00308299064636	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	2	search with cache (only 1: firstorder).	0.0046238899231	3
Coq.Classes.CRelationClasses.flip_Reflexive	40	1.0	search with cache (only 1: hnf; only 1: firstorder).	0.0042200088501	3
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	3.1	search with cache (only 1: hnf; only 1: firstorder).	0.00864505767822	6
Coq.Classes.CRelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0121729373932	2
Coq.Classes.CRelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0137481689453	1
Coq.Classes.CRelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.021556854248	1
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0230219364166	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	2	search with cache (only 1: firstorder).	0.00472187995911	3
Coq.Classes.CRelationClasses.complement_Symmetric	40	2.1	search with cache (only 1: hnf; only 1: firstorder).	0.0049421787262	5
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1.1.3	search with cache (only 1: split; only 1: auto; only 1: auto).	0.00428700447083	8
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00419902801514	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00527405738831	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	0.0.0.0.1	search with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.00624299049377	6
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.00887799263	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0250239372253	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.4.1	search with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.0138020515442	25
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40	3.2.16	search with cache (only 1: intros A x P H y H0; only 1: compute; only 1: firstorder).	18.1136441231	5800
Coq.Classes.Equivalence.pointwise_reflexive	40	0.1	search with cache (only 1: reduce; only 1: trivial).	0.00750494003296	3
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00781202316284	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0095009803772	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.358289003372	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	0.0.12.29	search with cache (only 1: extensionality y; only 1: destruct y; only 1: auto; only 1: auto).	2.92751002312	1156
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.00596809387207	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00662207603455	1
Coq.Classes.RelationClasses.flip_Reflexive	40	1.0	search with cache (only 1: hnf; only 1: firstorder).	0.00615382194519	3
Coq.Classes.RelationClasses.flip_Antisymmetric	40	2.1	search with cache (only 1: hnf; only 1: firstorder).	0.0122618675232	5
Coq.Classes.RelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0218579769135	2
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0221509933472	1
Coq.Classes.RelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0322871208191	1
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0332889556885	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00888586044312	2
Coq.Classes.RelationClasses.complement_Symmetric	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.00941610336304	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	1.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0243268013	17
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.012552022934	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.2.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	1.41188502312	16
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	0	search with cache (only 1: firstorder).	0.0118680000305	1
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0170550346375	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0487179756165	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0180759429932	1
Coq.Classes.Morphisms.eq_proper_proxy	40	1	search with cache (only 1: reflexivity).	0.0038321018219	2
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00302886962891	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00350499153137	1
Coq.Classes.Morphisms.pointwise_pointwise	40	1.0.6.4.6.8	search with cache (only 1: reduce_goal; only 1: split; only 1: intros; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	0.294647932053	1188
Coq.Classes.Morphisms.subrelation_id_proper	40	2	search with cache (only 1: firstorder).	0.00379109382629	3
Coq.Classes.Morphisms.subrelation_respectful	40	5	search with cache (only 1: firstorder).	0.0100121498108	6
Coq.Classes.Morphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00392889976501	1
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.0042200088501	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.6.2.1.5.9	search with cache (only 1: unfold subrelation; only 1: intro p; only 1: intros; only 1: reduce_goal; only 1: subst; only 1: firstorder).	1.06266403198	576
Coq.Classes.Morphisms.pointwise_subrelation	40	1.0.1.0	search with cache (only 1: unfold subrelation; only 1: unfold subrelation in *; only 1: intros; only 1: firstorder).	0.00482702255249	6
Coq.Classes.Morphisms.forall_subrelation	40	1	search with cache (only 1: firstorder).	0.00864100456238	2
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00438213348389	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00341391563416	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	2	search with cache (only 1: firstorder).	0.00552105903625	3
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	1	search with cache (only 1: firstorder).	0.0790801048279	2
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	5.40418219566	384
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	2.31973385811	385
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	1.1.1.0.0	search with cache (only 1: transitivity y; only 1: transitivity y; only 1: firstorder; only 1: firstorder; only 1: firstorder).	3.17614006996	131
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.079784154892	94
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00571298599243	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	8	search with cache (only 1: firstorder).	0.00605702400208	9
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.1.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.00549602508545	4
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00425601005554	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.00588798522949	1
Coq.Classes.Morphisms.flip1	40	1.0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: firstorder).	0.00841903686523	11
Coq.Classes.Morphisms.flip2	40	1.0.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0046329498291	4
Coq.Classes.Morphisms.eq_subrelation	40	0.3.0.0	search with cache (only 1: unfold subrelation; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0066990852356	7
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0038800239563	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.0038640499115	1
Coq.Classes.Morphisms.proper_proper	40	0.0.0.0.1.0	search with cache (only 1: intros A x y z H1 H2; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.048201084137	7
Coq.Classes.Morphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00457310676575	1
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00454092025757	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	2.0.2	search with cache (only 1: intros; only 1: reduce; only 1: auto).	0.0276811122894	7
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.1.2.0.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx'; only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: intuition).	0.0199449062347	8
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.2.0.0.0.0.0.0	search with cache (only 1: simpl_relation; only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: reduce in H; only 1: firstorder).	0.020653963089	16
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	1	search with cache (only 1: firstorder).	0.0169930458069	2
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0126791000366	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0444397926331	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0119459629059	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	1	search with cache (only 1: firstorder).	0.014014005661	2
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0209767818451	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.675101995468	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0166831016541	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0165491104126	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0140578746796	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0139009952545	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0139329433441	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0140748023987	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0140578746796	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.1.4	search with cache (only 1: reduce; only 1: compute in *; only 1: auto).	0.195363998413	14
Coq.Classes.DecidableClass.Decidable_sound	40
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	6.6.3	search with cache (only 1: intuition; only 1: destr_bool; only 1: destr_bool).	2.17506694794	1561
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	8	search with cache (only 1: apply Nat.leb_le).	0.0436670780182	64
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	6	search with cache (only 1: simpl_relation).	0.00878691673279	7
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.00534510612488	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.00535893440247	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	5.4	search with cache (only 1: intros; only 1: firstorder).	0.260127067566	53
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.563475131989	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.0.0.0.2	search with cache (only 1: repeat red; only 1: induction l; only 1: intros; only 1: firstorder; only 1: firstorder).	0.491876125336	7
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0131239891052	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0128228664398	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.0	search with cache (only 1: intro; only 1: firstorder).	0.0130290985107	2
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0136291980743	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: reflexivity).	0.0117480754852	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40	5.12.9	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.453154087067	679
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.1.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.0188810825348	8
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	3.16.6.5.0	search with cache (only 1: unfold lt, gt; only 1: rewrite compare_sub_mask; only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	36.8843431473	60674
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40	2.20.14.9	search with cache (only 1: induction p using peano_ind; only 1: now subst; only 1: rewrite inj_succ; only 1: now rewrite Nat.pred_succ).	4.81998109818	11771
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0162081718445	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.1.6	search with cache (only 1: intuition; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H).	0.0579481124878	73
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0162980556488	5
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	search with cache (only 1: decide equality).	0.0224981307983	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	search with cache (only 1: trivial).	0.0109610557556	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0111439228058	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.1.3.4	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.394765853882	103
Coq.PArith.BinPos.Pos.double_succ	40	0	search with cache (only 1: reflexivity).	0.0109560489655	1
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0301308631897	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0296671390533	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.1.0.0.1.0.0.2	search with cache (only 1: induction p; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.615822076797	335
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.0131959915161	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0131478309631	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0	search with cache (only 1: trivial).	0.0120820999146	1
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0134999752045	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	search with cache (only 1: trivial).	0.0118799209595	1
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.0.1.2.0.3.3.0.0.8	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: change_no_check p~1 with (p~0 + 1); only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal).	9.80639386177	6766
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	2.0.1.0.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: rewrite 2!(mul_comm r); only 1: congruence).	0.020889043808	8
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0369548797607	1
Coq.PArith.BinPos.Pos.square_xO	40
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	2.6.1.12.1	search with cache (only 1: revert q; only 1: simpl_relation; only 1: revert q; only 1: fix gcd_divide 1; only 1: intuition PeanoNat.Nat.Private_Tac.order).	21.0853888988	56604
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.019464969635	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	8.9.0	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: intuition).	2.35659003258	2734
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	2.1.0.0.5.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	4.14790296555	1912
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.0.3	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.205224990845	37
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.3.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	1.042730093	157
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.3.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.927294015884	136
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.3.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.88227891922	119
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.3.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	1.21315407753	447
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.1.1	search with cache (only 1: unfold compare; only 1: simpl; only 1: trivial).	0.0150220394135	6
Coq.PArith.BinPos.Pos.compare_xI_xI	40	1.1.1	search with cache (only 1: unfold compare; only 1: simpl; only 1: trivial).	0.0153617858887	6
Coq.PArith.BinPos.Pos.compare_xI_xO	40	1.0.2.1.10	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	0.772735834122	535
Coq.PArith.BinPos.Pos.compare_xO_xI	40	1.0.3.3.14	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	1.46751213074	2087
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	1.6.7.2.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	1.89372897148	5421
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.0.0.2	search with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.101006031036	45
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.4	search with cache (only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.0904531478882	32
Coq.PArith.BinPos.Pos.gt_lt_iff	40	10.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.68585896492	509
Coq.PArith.BinPos.Pos.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0203039646149	3
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0128209590912	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	5.2	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0936238765717	28
Coq.PArith.BinPos.Pos.ge_le	40	0.1	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0219509601593	3
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0124700069427	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	5.6.0	search with cache (only 1: apply ge_le_iff; only 1: unfold ge, lt, compare; only 1: now destruct p).	0.819930791855	896
Coq.PArith.BinPos.Pos.nlt_1_r	40	2	search with cache (only 1: now destruct p).	0.0573189258575	33
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0312931537628	19
Coq.PArith.BinPos.Pos.le_nlt	40	5.1	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0952670574188	27
Coq.PArith.BinPos.Pos.lt_nle	40	2.5	search with cache (only 1: unfold lt, gt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.702821016312	138
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.0.6.6	search with cache (only 1: unfold lt, le; only 1: destruct (p ?= q); only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	1.44757294655	568
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	1.0.1.1.4	search with cache (only 1: unfold lt, le; only 1: rewrite compare_gt_iff; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite compare_succ_succ).	0.355977058411	213
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	2.1.0	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.015105009079	6
Coq.PArith.BinPos.Pos.lt_compat	40	6.2	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: now f_equiv).	0.0382947921753	12
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	2.4	search with cache (only 1: apply lt_eq_cases; only 1: auto).	0.180965900421	42
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	7.2.1	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.290581941605	146
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	1.1.1.0.1.1.3.0	search with cache (only 1: unfold lt, gt; only 1: revert p q r; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	2.63651108742	1944
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	1.3.2.1.3.2.2.0	search with cache (only 1: unfold lt; only 1: split; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	6.52941417694	8257
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.6.0	search with cache (only 1: unfold le, ge; only 1: rewrite add_compare_mono_l; only 1: reflexivity).	0.210186004639	29
Coq.PArith.BinPos.Pos.add_le_mono_r	40
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.2.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0161170959473	5
Coq.PArith.BinPos.Pos.mul_le_mono_r	40
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0150518417358	3
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.0.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0184049606323	7
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0143179893494	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40	5.26	search with cache (only 1: fix gcd_divide 1; only 1: now subst).	0.708065986633	1113
Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.0.2.0.3	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: subst; only 1: exists r; only 1: apply sub_mask_add_diag_l).	0.0401980876923	39
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	1.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0185370445251	6
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0185329914093	6
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.1.2	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.0894181728363	90
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.1.0.2.2.0.13	search with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: trivial; only 1: now f_equal; only 1: trivial).	17.944216013	22899
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.1.0.1.1.1.2.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.918435096741	337
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	2.0.0.0.11.0.4.10.2.0.0	search with cache (only 1: unfold le, min; only 1: intros x y; only 1: rewrite compare_gt_iff; only 1: intros H; only 1: case_eq (x ?= y); only 1: now apply compare_eq_iff; only 1: easy'; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	18.2862319946	25430
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	1.1	search with cache (only 1: apply max_l; only 1: apply le_1_l).	0.0334599018097	34
Coq.PArith.BinPos.Pos.min_1_l	40	1.5	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0210199356079	8
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0212469100952	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40
Coq.PArith.BinPos.Pos.add_min_distr_r	40
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	11.0.4	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	2.21382713318	1409
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.10	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.515049934387	318
Coq.PArith.BinPos.Pos.mul_min_distr_r	40
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.1.1.3.0	search with cache (only 1: induction p; only 1: CRelationClasses.simpl_crelation; only 1: congruence; only 1: now symmetry; only 1: now symmetry).	0.359024047852	90
Coq.PArith.BinPos.Pos.of_nat_succ	40	2.13.4	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: auto).	0.440160036087	905
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	6.0.1.2	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros x y z; only 1: auto).	0.193410873413	222
Coq.PArith.BinPos.Pos.divide_xO_xI	40	4.2.0	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	0.0347759723663	24
Coq.PArith.BinPos.Pos.divide_xO_xO	40	4.3.1.6	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.260089874268	367
Coq.PArith.BinPos.Pos.divide_mul_l	40	9.1.3	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial using lt_add_r).	0.306176185608	415
Coq.PArith.BinPos.Pos.divide_mul_r	40	9.1.2	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial using lt_add_r).	1.18975901604	1034
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	0.5	search with cache (only 1: fix sqrtrem_spec 1; only 1: easy).	0.0389609336853	33
Coq.PArith.BinPos.Pos.ggcd_gcd	40	1.17	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.32041311264	270
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	2.17	search with cache (only 1: fix gcd_divide 1; only 1: intuition Private_Tac.order).	2.08970499039	1977
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	9.1	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.0433821678162	101
Coq.PArith.BinPos.Pos.gcd_divide_r	40	7.5.3	search with cache (only 1: unfold ggcd, gcd; only 1: fix sqrtrem_spec 1; only 1: trivial).	3.67559695244	4762
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40	8.7.0	search with cache (only 1: intros a b; only 1: fix sqrtrem_spec 1; only 1: auto).	3.81302189827	3776
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0.0.1.0	search with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0220849514008	7
Coq.PArith.BinPos.Pminus_mask_Gt	40	4.0.3.6.10.4	search with cache (only 1: intros; only 1: contradict H; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	1.85088992119	6260
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.0.0.13.17	search with cache (only 1: intros H; only 1: destruct H; only 1: now intuition; only 1: now intuition; only 1: now intuition).	2.43167805672	1629
Coq.Arith.Le.le_n_0_eq	40	10.19.0.4.2.0	search with cache (only 1: intro H; only 1: Nat.le_elim H; only 1: induction n; only 1: trivial; only 1: now Nat.nzsimpl; only 1: Nat.auto').	4.14521217346	3886
Coq.Arith.Le.le_elim_rel	40	5.4.0.3	search with cache (only 1: intros a Ha; only 1: intros b Hb IH; only 1: fix le_div2 1; only 1: trivial).	1.15813589096	1261
Coq.Arith.Even.even_equiv	40	10.2.5	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: trivial).	2.81631088257	2306
Coq.Arith.Even.odd_equiv	40	19.2.0	search with cache (only 1: fix even_equiv 1; only 1: intros; only 1: trivial).	5.57467794418	7907
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40	1.1.1.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0347499847412	44
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.0769560337067	1
Coq.Arith.Even.even_even_plus	40	1	search with cache (only 1: parity_binop).	0.287302017212	2
Coq.Arith.Even.odd_plus_l	40	1	search with cache (only 1: parity_binop).	0.0405931472778	2
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0413460731506	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0602719783783	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.176940917969	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0395379066467	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0704309940338	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0401298999786	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0450458526611	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0490109920502	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0398540496826	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0406670570374	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.069699048996	1
Coq.Arith.Even.even_mult_aux	40	3	search with cache (only 1: parity_binop).	0.177171945572	55
Coq.Arith.Even.even_mult_l	40	3	search with cache (only 1: parity_binop).	0.026654958725	4
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0267598628998	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0410299301147	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0639359951019	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0400159358978	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0258858203888	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0267198085785	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.00631213188171	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0183959007263	1
Coq.Arith.Minus.minus_diag_reverse	40
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	4.3.11	search with cache (only 1: Nat.induct p; only 1: now Nat.nzsimpl; only 1: auto).	0.712277889252	303
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	6.2.3.2.12	search with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: auto).	1.86766600609	1598
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40	5.0.6	search with cache (only 1: fix le_div2 1; only 1: intros n m LE; only 1: auto with arith).	0.365008115768	669
Coq.Arith.Between.between_restr	40	1.2.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.00972104072571	6
Coq.Arith.Between.exists_le_S	40	0.0.0.2	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.122412204742	36
Coq.Arith.Between.exists_S_le	40	1.4.1	search with cache (only 1: fix le_div2 1; only 1: intros x y z; only 1: auto).	0.118048906326	40
Coq.Arith.Between.in_int_intro	40	14.5	search with cache (only 1: intros a b H; only 1: now PeanoNat.Nat.nzsimpl).	0.371366977692	1392
Coq.Arith.Between.in_int_lt	40
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	1.8	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0496699810028	207
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0066249370575	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	0.2.1.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0109930038452	7
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40	1.11.15	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.979683160782	1100
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40	5.0.11.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: fix even_spec 1; only 1: intro; only 1: trivial).	22.3784811497	13809
Coq.Arith.Div2.ind_0_1_SS	40	3.0.3.0.3.2.4.1.13.8	search with cache (only 1: intros A A_wd A0 AS n; only 1: Nat.induct n; only 1: auto; only 1: assert (D : forall n, A n /\ A (S n)); only 1: Nat.induct ltac:(n); only 1: auto; only 1: intros; only 1: firstorder; only 1: intros; only 1: firstorder).	9.54375696182	46227
Coq.Arith.Div2.lt_div2	40	4.1.13.4.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	1.88948011398	4487
Coq.Arith.Div2.even_div2	40	3.0.10.13.10	search with cache (only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: intros; only 1: trivial).	5.4068710804	14042
Coq.Arith.Div2.odd_div2	40	6.21.8.4.34	search with cache (only 1: simpl; only 1: Nat.induct n; only 1: now try Nat.order'; only 1: fix ind_0_1_SS 1; only 1: now try Nat.order').	9.25807714462	26067
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	17	search with cache (only 1: intuition).	0.943333864212	461
Coq.Arith.Div2.double_S	40	9.1.5.15.4.6.5.4.14.34	search with cache (only 1: Nat.bitwise; only 1: destruct m; only 1: simpl; only 1: unfold Nat.odd; only 1: simpl; only 1: Nat.nzsimpl; only 1: trivial; only 1: simpl; only 1: Nat.nzsimpl; only 1: trivial).	5.4411239624	17131
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40
Coq.Arith.Div2.odd_S2n	40	2.0.2	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.00751805305481	7
Coq.Arith.Div2.div2_double	40
Coq.Arith.Div2.div2_double_plus_one	40	1.3	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: auto with arith).	0.255742073059	35
Coq.Arith.Plus.plus_assoc_reverse	40	7.0.0.0.0.5	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros; only 1: now Nat.nzsimpl; only 1: simpl; only 1: auto).	3.31692910194	1580
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	2	search with cache (only 1: apply Nat.add_le_mono_l).	0.0287358760834	3
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.010694026947	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	12	search with cache (only 1: apply Nat.add_le_mono).	0.0316112041473	72
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	4.12.11.2.10.13	search with cache (only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intro p; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	7.22559499741	7421
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	1.1.5.4.0.2.31	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intros; only 1: Nat.nzsimpl; only 1: split; only 1: auto; only 1: auto).	3.26414704323	4243
Coq.Arith.Lt.lt_le_S	40
Coq.Arith.Lt.lt_n_Sm_le	40	2	search with cache (only 1: apply le_S_n).	0.0149149894714	11
Coq.Arith.Lt.le_lt_n_Sm	40	2	search with cache (only 1: apply Nat.lt_succ_r).	0.00588202476501	3
Coq.Arith.Lt.le_not_lt	40	0	search with cache (only 1: Nat.order).	0.00688290596008	1
Coq.Arith.Lt.lt_not_le	40	0	search with cache (only 1: Nat.order).	0.00671696662903	1
Coq.Arith.Lt.neq_0_lt	40	0	search with cache (only 1: Nat.auto').	0.0120830535889	1
Coq.Arith.Lt.lt_0_neq	40	3.0.3.0	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.00936985015869	10
Coq.Arith.Lt.lt_n_S	40	13	search with cache (only 1: apply Nat.lt_succ_r).	0.0272500514984	75
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00567388534546	1
Coq.Arith.Lt.S_pred	40	3.0.5.4.0.31	search with cache (only 1: Nat.cases n; only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros; only 1: now rewrite <- ?Nat.succ_le_mono).	1.98036408424	1824
Coq.Arith.Lt.S_pred_pos	40
Coq.Arith.Lt.lt_pred	40	0.4.18.7.9	search with cache (only 1: Nat.cases m; only 1: intro H; only 1: inversion H; only 1: intro m; only 1: apply Nat.succ_lt_mono).	1.05033111572	3540
Coq.Arith.Lt.lt_pred_n_n	40	18.0.4	search with cache (only 1: destruct n; only 1: inversion 1; only 1: auto).	0.57146191597	1633
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	3.7542488575	8210
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	10.4154272079	18453
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.17019200325	62
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.009272813797	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0100371837616	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0103099346161	1
Coq.Arith.Wf_nat.gt_wf_rec	40	1	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0100338459015	2
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.1.1	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0664060115814	25
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	4.0.1.1.19.8.3.11	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: constructor; only 1: auto with arith; only 1: auto with arith).	7.51227211952	13043
Coq.Arith.Compare_dec.le_ge_dec	40	2.1.0.0.0.3.1.8	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	0.919687986374	511
Coq.Arith.Compare_dec.le_gt_dec	40	10	search with cache (only 1: exact (le_lt_dec n m)).	0.378957986832	102
Coq.Arith.Compare_dec.le_lt_eq_dec	40	0.0.0.2.11.0.0.3.0.0.3	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: intros; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	15.074090004	19941
Coq.Arith.Compare_dec.le_dec	40	8.6.3	search with cache (only 1: elim (le_lt_dec n m); only 1: auto; only 1: auto with arith).	0.729238986969	702
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	6	search with cache (only 1: apply le_dec).	0.0378742218018	23
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.00628399848938	2
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	2	search with cache (only 1: apply Nat.le_decidable).	0.0076470375061	3
Coq.Arith.Compare_dec.dec_ge	40	13	search with cache (only 1: apply Nat.le_decidable).	0.020229101181	75
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.00695705413818	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0065279006958	1
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00645399093628	1
Coq.Arith.Compare_dec.not_ge	40	13	search with cache (only 1: apply Nat.lt_nge).	0.414977788925	150
Coq.Arith.Compare_dec.not_lt	40	6	search with cache (only 1: apply Nat.le_ngt).	0.0332069396973	25
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	1.0.0.0.2.0.0.1.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto with arith).	0.526948928833	401
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	3	search with cache (only 1: apply Nat.compare_lt_iff).	0.339679956436	44
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	1	search with cache (only 1: apply Nat.compare_gt_iff).	0.00775599479675	2
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00672507286072	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: Nat.order).	0.0147740840912	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.00699210166931	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	4.1.27.4	search with cache (only 1: repeat red; only 1: induction n as [| n IH]; only 1: split; only 1: tauto).	0.278998851776	1962
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.1	search with cache (only 1: intros <-; only 1: apply eq_nat_refl).	0.0445950031281	59
Coq.Arith.EqNat.eq_nat_eq	40	1	search with cache (only 1: apply eq_nat_is_eq).	0.0606489181519	78
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	3.2.3.1.1.0.0.9.0.3	search with cache (only 1: induction n; only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto; only 1: destruct m; only 1: now right; only 1: apply IHn).	17.6025650501	58291
Coq.Arith.EqNat.beq_nat_refl	40	4.3.11.6	search with cache (only 1: induction n; only 1: now try Nat.order'; only 1: simpl; only 1: assumption).	0.156023979187	882
Coq.Arith.EqNat.beq_nat_true	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	0.219524145126	171
Coq.Arith.EqNat.beq_nat_false	40	2.1.0.0.0.0.1.0.5	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: now try Nat.order'; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	1.14970421791	645
Coq.Arith.EqNat.beq_nat_eq	40	1.0.0.0.0.0.0.0.3	search with cache (only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	3.7868039608	2255
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	20.4.1	search with cache (only 1: induction n; only 1: auto with *; only 1: firstorder).	3.2191991806	3552
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	1	search with cache (only 1: constructor).	0.00408697128296	2
Coq.Arith.PeanoNat.Nat.recursion_succ	40	3.2.0.0.0.7	search with cache (only 1: intros z Hz; only 1: intros; only 1: simpl; only 1: induction n; only 1: firstorder; only 1: firstorder).	0.928220033646	1991
Coq.Arith.PeanoNat.Nat.pred_succ	40	2	search with cache (only 1: auto).	0.00424408912659	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.00329804420471	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.00384283065796	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00328588485718	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00396990776062	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00405693054199	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.00425004959106	4
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.00471210479736	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	0.1.1.1.0.4.7.0	search with cache (only 1: revert m; only 1: split; only 1: exact (le_pred (S n) (S m)); only 1: revert m; only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	1.15342497826	3046
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.00790190696716	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.3.0.0.0.1.0.0.1.0	search with cache (only 1: revert m; only 1: simpl_relation; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: destruct (IHn m); only 1: auto).	1.578799963	2558
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40	6.1.0.0.0.0.0.0.1.3.2.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: now split; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: discriminate; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: exact (le_pred (S n) (S m))).	30.4297330379	60727
Coq.Arith.PeanoNat.Nat.compare_antisym	40	2.0.4.0.0.1.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	1.57152891159	6061
Coq.Arith.PeanoNat.Nat.compare_succ	40	4.2.0	search with cache (only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: simpl; only 1: reflexivity).	0.064651966095	92
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.4.0.0.0.0.3.0.0.0	search with cache (only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.95460796356	4560
Coq.Arith.PeanoNat.Nat.max_r	40	1.1.4.1.2.0.1.2.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	7.22295093536	20880
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40	1.4.3.1.1.1.1.2.0.1.1	search with cache (only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	17.2678289413	55801
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	9.4	search with cache (only 1: intro; only 1: now elim H).	0.029452085495	110
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.00432801246643	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0	search with cache (only 1: reflexivity).	0.00435280799866	1
Coq.Arith.PeanoNat.Nat.square_spec	40	1	search with cache (only 1: eauto with *).	0.473693847656	121
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0081090927124	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	2.0.0.1.1.0.0.0.10.0.1.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: simpl in H; only 1: rewrite H; only 1: now nzsimpl; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	32.0124440193	36173
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	4.0	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.0247941017151	42
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.00613784790039	1
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	3.12	search with cache (only 1: inversion 1; only 1: auto with *).	0.137251853943	368
Coq.Arith.PeanoNat.Nat.gcd_divide	40	1.7.5	search with cache (only 1: fix odd_spec 1; only 1: intros x y; only 1: auto).	0.664961099625	548
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.0.0.0.0.2.0.1	search with cache (only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: simpl; only 1: fold (b mod S a); only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	0.078400850296	87
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.00524306297302	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	5.3.5	search with cache (only 1: fix gcd_divide 1; only 1: intros n m; only 1: auto).	1.67143297195	1052
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	8	search with cache (only 1: apply le_0_l).	0.0169179439545	20
Coq.Arith.PeanoNat.Nat.div2_double	40	0.0.15.0.0.3.22	search with cache (only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	17.2774200439	15065
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.00873303413391	7
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	11.13.2.1	search with cache (only 1: induct n; only 1: trivial; only 1: fix le_div2 1; only 1: auto).	14.542536974	14770
Coq.Arith.PeanoNat.Nat.div2_decr	40	3.2.0.0.0	search with cache (only 1: revert n; only 1: intro; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.0154421329498	37
Coq.Arith.PeanoNat.Nat.double_twice	40	1.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.146684885025	54
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.18	search with cache (only 1: fix le_div2 1; only 1: auto).	8.3578209877	645
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	0.9.14.11	search with cache (only 1: nzsimpl; only 1: revert n; only 1: fix le_div2 1; only 1: destr_bool).	8.31590008736	16130
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	1.14	search with cache (only 1: fix odd_spec 1; only 1: destr_bool).	7.35764288902	4430
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	0.0.9.1	search with cache (only 1: intros m; only 1: fix le_div2 1; only 1: intros x y z; only 1: auto).	9.4068300724	671
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	5.0.17.4	search with cache (only 1: intro m; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	17.6492810249	30299
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	3.2.0.1	search with cache (only 1: intros n1 n2 H; only 1: unfold odd; only 1: fix odd_spec 1; only 1: trivial).	0.0730431079865	30
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	0.13.6	search with cache (only 1: intros A x P H y H0; only 1: fix le_div2 1; only 1: auto).	2.54270100594	4228
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.00649189949036	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.4	search with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: destruct (compare_spec a b); only 1: rewrite max_l; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l; only 1: destruct (compare_spec a b); only 1: rewrite max_r; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l).	10.3957738876	23453
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	search with cache (only 1: reflexivity).	0.00458717346191	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	5.0.1	search with cache (only 1: destruct n; only 1: inversion H; only 1: inversion H).	0.00961208343506	11
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	2	search with cache (only 1: Nat.order).	0.00944590568542	20
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	2	search with cache (only 1: apply Nat.succ_lt_mono).	0.00554895401001	3
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00555610656738	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	3	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.00659513473511	4
Coq.Arith.Gt.le_not_gt	40	14	search with cache (only 1: apply Nat.le_ngt).	0.584949016571	350
Coq.Arith.Gt.gt_not_le	40	0.5.2	search with cache (only 1: intro H'; only 1: apply Nat.lt_nge; only 1: trivial).	0.00892090797424	13
Coq.Arith.Gt.le_S_gt	40	0	search with cache (only 1: now rewrite <- ?Nat.succ_le_mono).	0.0050060749054	1
Coq.Arith.Gt.gt_S_le	40	6	search with cache (only 1: apply Nat.lt_succ_r).	0.012090921402	7
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.00537800788879	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.00548005104065	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	8.0.9.7	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: intros n IH; only 1: auto).	2.21994519234	4322
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40	3	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0951991081238	12
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00603413581848	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40
Coq.Logic.JMeq.JMeq_trans	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00413298606873	3
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00419807434082	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00426888465881	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00431203842163	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00469994544983	4
Coq.Logic.JMeq.JMeq_congr	40
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00916790962219	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00478982925415	2
Coq.Logic.JMeq.eq_dep_JMeq	40	2.0	search with cache (only 1: intros * []; only 1: auto).	0.00538301467896	4
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.1.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0091609954834	5
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	15.0	search with cache (only 1: intros; only 1: tauto).	0.0358591079712	212
Coq.Logic.Classical_Prop.not_imply_elim	40	3.1.0.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: destruct (classic P); only 1: auto; only 1: tauto).	0.0320608615875	55
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: auto).	0.030975818634	56
Coq.Logic.Classical_Prop.imply_to_or	40	2.0.2	search with cache (only 1: unfold not; only 1: intros; only 1: tauto).	0.140896081924	87
Coq.Logic.Classical_Prop.imply_to_and	40	2.1.2	search with cache (only 1: unfold not; only 1: intros; only 1: tauto).	0.0279178619385	22
Coq.Logic.Classical_Prop.or_to_imply	40	1	search with cache (only 1: tauto).	0.0149879455566	19
Coq.Logic.Classical_Prop.not_and_or	40	2.2.0.1	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0324790477753	46
Coq.Logic.Classical_Prop.or_not_and	40	1	search with cache (only 1: tauto).	0.0274610519409	19
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.00934100151062	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.0084969997406	1
Coq.Logic.Classical_Prop.imply_and_or	40	0.0.4.1	search with cache (only 1: intros Ext A a; only 1: intros [?| ?]; only 1: auto; only 1: auto).	0.00793719291687	9
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0095739364624	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	1.0.3.0.2.0.0.0.2	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.378435850143	1502
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	19	search with cache (only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).	0.694203853607	1098
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	0.0.0.0.0.8.0.0.0.0.1.0	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: destruct H as [x Hx]; only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: firstorder; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	0.874695062637	1818
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	2.1.0.0.1.0.3	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0774879455566	256
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.1.10	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.346470117569	620
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0.0.1.0.1.3	search with cache (only 1: Record.split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	24.3247880936	54626
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	0.5	search with cache (only 1: intro n; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.78690314293	7
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	4.4.5	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: easy).	0.0727570056915	204
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	11.6.2.0.10.0	search with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: intros; only 1: left; only 1: easy).	9.31257295609	45783
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	1.0.1.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.00632691383362	7
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.00922083854675	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0200350284576	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00344109535217	2
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.00395107269287	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00496792793274	4
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00442600250244	4
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00381588935852	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: reflexivity).	0.00311899185181	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	search with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.00442099571228	4
Coq.Logic.HLevels.false_hprop	40	6.2	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00397181510925	10
Coq.Logic.HLevels.true_hprop	40
Coq.Logic.HLevels.not_hprop	40	0.2.0.4	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality; only 1: contradiction).	0.0061628818512	21
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	1.0.0.0.2.1	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.0149400234222	11
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.2.0.4.3.0	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	0.169284820557	347
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.9	search with cache (only 1: destruct 1; only 1: auto).	0.00896596908569	63
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00248789787292	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0046751499176	7
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.2.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.00632190704346	5
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00378203392029	7
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.4.10.1	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.132511138916	546
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	4.0.8	search with cache (only 1: red; only 1: intros; only 1: auto).	0.111865997314	219
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	0.5.8.3	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: trivial).	0.128873109818	436
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	1.0.7.1.1.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: intros; only 1: rewrite <- eq_rect_eq; only 1: trivial; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.151805877686	768
Coq.Logic.EqdepFacts.f_eq_dep	40	2.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00543904304504	14
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.4.0	search with cache (only 1: intros A x y z H1 H2; only 1: destruct 1; only 1: trivial).	0.00589513778687	7
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	4.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00531697273254	6
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	8.1.0.0.0.1.10	search with cache (only 1: unfold not; only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intro H1; only 1: elim H1).	0.269423007965	2310
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	1.12.7.1.2.10.0	search with cache (only 1: unfold not; only 1: destruct 1; only 1: intro H1; only 1: exact H; only 1: intro H1; only 1: elim H1; only 1: exact H).	0.938881158829	13177
Coq.Logic.Decidable.dec_True	40
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00368189811707	2
Coq.Logic.Decidable.dec_or	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0133709907532	31
Coq.Logic.Decidable.dec_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0139398574829	6
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00605010986328	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00986504554749	2
Coq.Logic.Decidable.dec_iff	40	2.5	search with cache (only 1: unfold decidable; only 1: tauto).	0.0159540176392	12
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00534319877625	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00538611412048	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0105860233307	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0104119777679	2
Coq.Logic.Decidable.imp_simp	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.00915598869324	3
Coq.Logic.Decidable.not_iff	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0903828144073	33
Coq.Logic.Decidable.not_true_iff	40	1.1.5	search with cache (only 1: split; only 1: auto; only 1: auto).	0.00456619262695	10
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00381207466125	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00591897964478	2
Coq.Logic.Decidable.contrapositive	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.00861310958862	3
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0108468532562	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0109028816223	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0107548236847	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0109639167786	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0118908882141	2
Coq.Logic.Decidable.not_or_iff	40	5.0	search with cache (only 1: intros; only 1: tauto).	0.0104629993439	24
Coq.Logic.Decidable.not_and_iff	40	6.0	search with cache (only 1: intros; only 1: tauto).	0.0110900402069	24
Coq.Logic.Decidable.not_imp_iff	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0386831760406	35
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0143399238586	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	2.31	search with cache (only 1: unfold singleton; only 1: auto).	0.107553958893	585
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	1.0.0.0	search with cache (only 1: destruct s; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0425710678101	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.0.0.1	search with cache (only 1: destruct s; only 1: ok; only 1: simpl; only 1: ok).	0.0193438529968	6
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.736608982086	534
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.00982999801636	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.00896406173706	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0278270244598	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	3	search with cache (only 1: eauto with *).	0.273107051849	21
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2	search with cache (only 1: exact (rmatch _ _ _)).	0.00995898246765	3
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0104970932007	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	4	search with cache (only 1: ok).	0.160530090332	43
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.1.9	search with cache (only 1: constructor; only 1: auto; only 1: auto).	0.0223150253296	49
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.0.13.10	search with cache (only 1: intros n; only 1: induction n; only 1: now Nat.nzsimpl'; only 1: now split).	1.1142179966	962
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.1	search with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0396680831909	3
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0106530189514	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	12.4.8.1.6	search with cache (only 1: assert (forall s s', s = s' -> ~ L.lt s s'); only 1: intros; only 1: subst; only 1: apply StrictOrder_Irreflexive; only 1: firstorder  (subst; auto)).	6.9899969101	13061
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.023628950119	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0180931091309	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	3.4.0.8.4	search with cache (only 1: destruct t; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	0.485372066498	1167
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	2.1.2.0.2.2.1.3	search with cache (only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	1.86481499672	6609
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40	0.8	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.0248448848724	18
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	31	search with cache (only 1: inA).	27.449354887	32744
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	1.1.0	search with cache (only 1: intro; only 1: Nat.nzsimpl; only 1: auto).	0.036171913147	5
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.1.1.1.0	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.020544052124	8
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	5.6	search with cache (only 1: unfold filter; only 1: auto_tc).	0.0274078845978	67
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.3.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0140171051025	8
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.1	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0241668224335	30
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0203139781952	8
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0705709457397	89
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0171489715576	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	7	search with cache (only 1: solve_proper).	0.175184011459	61
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	1.2.1.0	search with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.0630190372467	13
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	2	search with cache (only 1: intuition).	0.0340700149536	3
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: trivial).	0.0315089225769	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0	search with cache (only 1: firstorder).	0.0323359966278	1
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	7.0.3.2	search with cache (only 1: intros n; only 1: repeat red; only 1: intro; only 1: now try Z_as_OT.order').	0.164395093918	310
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	1.18.2.2.6.7	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: intros; only 1: now split; only 1: simpl; only 1: fix odd_spec 1; only 1: intuition).	36.4465620518	32410
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.1.0.5.0.0.0.0.8.45.4.34	search with cache (only 1: intro; only 1: intros n; only 1: destruct b; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	7.97349596024	32529
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	1.0.0.1.0	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.0570669174194	7
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40	9.20.8.7	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	2.23031592369	10598
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0354130268097	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0357439517975	4
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0364751815796	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0354659557343	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0353970527649	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.21	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	2.46688485146	5428
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	0.0.24	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: trivial).	0.614524841309	1695
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40	1.23	search with cache (only 1: fix sqrtrem_spec 1; only 1: intuition).	31.6784799099	20209
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.3.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.107065916061	26
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.2.1	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.0326762199402	6
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40
Coq.MSets.MSetFacts.WFactsOn.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0353009700775	2
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	1.1	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0362620353699	4
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.1	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0355780124664	3
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.1	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0353209972382	3
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0413661003113	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.17	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.923295974731	611
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0431480407715	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.5.4	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.906672000885	262
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0462260246277	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0323359966278	5
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	0	search with cache (only 1: intuition).	0.0435380935669	1
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	0	search with cache (only 1: intuition).	0.044163942337	1
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	2	search with cache (only 1: intuition).	0.0490369796753	3
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	2	search with cache (only 1: intuition).	0.0493528842926	3
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	0	search with cache (only 1: intuition).	0.0315511226654	1
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	2.8	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.464653968811	150
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	1.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0394051074982	5
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	0	search with cache (only 1: intuition).	0.125056028366	1
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	4.0	search with cache (only 1: intros; only 1: intuition).	0.0628218650818	6
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	6	search with cache (only 1: intuition).	0.0373950004578	7
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	1.1.0.1.0.0.0.3	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	7.48261880875	1928
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	1.1.0.0.0.5	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	5.14289093018	1577
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	2.8	search with cache (only 1: repeat red; only 1: firstorder).	0.180349826813	76
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40	13.3.3.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: now f_equiv).	19.1974959373	4382
Coq.MSets.MSetFacts.WFactsOn.inter_m	40	15.4.4.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: now f_equiv).	18.7610218525	10900
Coq.MSets.MSetFacts.WFactsOn.diff_m	40	0.1.20.4.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite diff_spec; only 1: rewrite Hs, Hx  at 1; only 1: rewrite diff_spec; only 1: intuition).	31.8364188671	14010
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	4.1.1	search with cache (only 1: repeat red; only 1: intros s s' E; only 1: firstorder).	0.103360891342	34
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	6.2.0	search with cache (only 1: split; only 1: congruence; only 1: firstorder).	0.0482268333435	47
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	3.4	search with cache (only 1: repeat red; only 1: firstorder).	0.0963480472565	26
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: auto).	0.0705959796906	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.076730966568	4
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: auto).	0.101401090622	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	1.1.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0744249820709	5
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.2.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.153688907623	5
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.067088842392	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.1.1.11	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.251763820648	154
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	1	search with cache (only 1: reflexivity).	0.00777196884155	2
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	3	search with cache (only 1: firstorder).	0.0103220939636	4
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	1	search with cache (only 1: fsetdec).	0.0351390838623	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	1	search with cache (only 1: fsetdec).	0.0128128528595	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0257811546326	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	1	search with cache (only 1: fsetdec).	0.0244181156158	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0199379920959	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	1	search with cache (only 1: fsetdec).	0.0153181552887	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	13	search with cache (only 1: fsetdec).	0.0397400856018	60
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0378770828247	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	1	search with cache (only 1: fsetdec).	0.0429520606995	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0225930213928	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0202639102936	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.0.0.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.0887389183044	4
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.031742811203	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	1	search with cache (only 1: fsetdec).	0.0246288776398	2
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	2	search with cache (only 1: fsetdec).	0.0504419803619	3
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	1	search with cache (only 1: fsetdec).	0.0992820262909	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	7	search with cache (only 1: fsetdec).	0.487933158875	238
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.0700089931488	1
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	1	search with cache (only 1: fsetdec).	0.0698308944702	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.073114156723	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0502939224243	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.162671089172	2
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	1	search with cache (only 1: fsetdec).	0.0481278896332	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0383558273315	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	1	search with cache (only 1: fsetdec).	0.072958946228	2
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0549759864807	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.0866680145264	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0622849464417	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	1	search with cache (only 1: fsetdec).	0.0936961174011	2
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.17410993576	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	1	search with cache (only 1: fsetdec).	0.160237073898	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	1	search with cache (only 1: fsetdec).	0.0171568393707	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	1	search with cache (only 1: fsetdec).	0.0199429988861	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	1	search with cache (only 1: fsetdec).	0.0321679115295	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0310699939728	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0294439792633	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	1	search with cache (only 1: fsetdec).	0.0649638175964	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0370969772339	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	0.0.0.0.2	search with cache (only 1: rewrite union_spec; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.155284166336	21
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.049476146698	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0365390777588	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	1	search with cache (only 1: fsetdec).	0.0746622085571	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0515668392181	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0785348415375	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.115741014481	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.108784914017	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	2	search with cache (only 1: fsetdec).	0.0938470363617	3
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	2	search with cache (only 1: fsetdec).	0.0728352069855	3
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.0465750694275	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	1	search with cache (only 1: fsetdec).	0.0269010066986	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	1	search with cache (only 1: fsetdec).	0.0178179740906	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	1	search with cache (only 1: fsetdec).	0.0178940296173	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	1	search with cache (only 1: fsetdec).	0.0313420295715	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0352220535278	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	1	search with cache (only 1: fsetdec).	0.0383329391479	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0199389457703	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	1	search with cache (only 1: fsetdec).	0.0879628658295	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0537760257721	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.0865280628204	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.07275390625	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.146893978119	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	1.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.229812860489	4
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	1.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.199346065521	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	1.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.206511974335	5
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	0.0.0.0.0.2.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.0458180904388	36
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	1.13.10.3	search with cache (only 1: intros; only 1: apply fold_1; only 1: simpl_relation; only 1: auto with *).	3.32193517685	7620
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40	6.1.1.1.1.6.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with relations; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations; only 1: auto with set).	9.27481007576	5941
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.3.2	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.110972881317	83
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.7	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0114011764526	9
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	2.0	search with cache (only 1: symmetry; only 1: auto with set).	0.0104951858521	4
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.2.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: auto).	0.0686960220337	59
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.5.1	search with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	0.461554050446	248
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0	search with cache (only 1: auto with set).	0.00770211219788	1
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.00889301300049	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.00938296318054	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	18	search with cache (only 1: ok).	0.02663397789	145
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	1.0.0.5	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0250120162964	17
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	1.0.0.3.8	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: auto; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.154119968414	146
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0385200977325	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	7.1	search with cache (only 1: intros; only 1: auto with set).	0.0206730365753	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	2	search with cache (only 1: intuition).	0.0284719467163	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.0433030128479	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0417509078979	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.0423209667206	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set relations).	0.00698304176331	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with *).	0.0138490200043	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with *).	0.080237865448	19
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	1	search with cache (only 1: auto with set).	0.00813698768616	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	1.0.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0137991905212	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	10	search with cache (only 1: auto with *).	0.0639901161194	37
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	2	search with cache (only 1: auto with set).	0.00875997543335	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	1	search with cache (only 1: auto with set).	0.0123960971832	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	1	search with cache (only 1: auto with set).	0.00931692123413	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	2	search with cache (only 1: auto with set relations).	0.0090389251709	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	1	search with cache (only 1: auto with set relations).	0.00906300544739	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	1.1.0.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0800380706787	17
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	1.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0359420776367	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	1	search with cache (only 1: auto with set relations).	0.0111100673676	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.4.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite singleton_spec; only 1: auto with relations).	6.367882967	3430
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	1.9	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.0672359466553	69
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1	search with cache (only 1: auto with set).	0.0085461139679	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0152909755707	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	3.2.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0165779590607	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00885510444641	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.00842213630676	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.00757884979248	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.00742483139038	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.00681304931641	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	1	search with cache (only 1: auto with set).	0.00767803192139	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	1.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0555050373077	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: auto with set).	0.0083909034729	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.010204076767	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	1	search with cache (only 1: auto with set).	0.00913310050964	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.00912404060364	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00835990905762	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	0	search with cache (only 1: auto with set).	0.00746893882751	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00810217857361	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set relations).	0.00896692276001	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40	0.8	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.50587105751	45
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00771999359131	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	1	search with cache (only 1: auto with set).	0.00753092765808	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	1.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.118221998215	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0	search with cache (only 1: auto with set).	0.00748300552368	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.00978994369507	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.00706481933594	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.00688099861145	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00708913803101	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	2.0.0.2.0.2.0.3	search with cache (only 1: destr_bool; only 1: rewrite <- mem_spec; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: intuition; only 1: intuition; only 1: intuition).	13.4839119911	3806
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0119531154633	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40	3.0.0.0.14.9	search with cache (only 1: intuition; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).	23.9986391068	40466
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40	0.0.2.0.0.0.2.5	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	0.277256011963	389
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.1.1.0.0.0.3.2	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).	0.452697038651	687
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.00755000114441	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.3.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	0.0466251373291	34
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.0254280567169	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.1.12.10	search with cache (only 1: intro; only 1: intro; only 1: rewrite <- not_mem_iff; only 1: auto with *).	2.23091197014	2103
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.2.11.1.1.3.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with *; only 1: congruence; only 1: auto; only 1: auto).	0.718053102493	1511
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1.1	search with cache (only 1: intros; only 1: auto with set).	0.0122599601746	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	6.1	search with cache (only 1: intros; only 1: auto with set).	0.0607280731201	26
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0112860202789	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	0.0.0.0.3.0.0.0.5	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	5.79634714127	910
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	0.6.3.4.2	search with cache (only 1: intros; only 1: apply <- for_all_spec; only 1: red; only 1: auto with set; only 1: auto).	0.34755897522	398
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40	0.4.0.1.0.0.1.2.0.1.0.15.0	search with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: clear H; only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: intuition; only 1: auto).	14.8133420944	6225
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0108659267426	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.763419866562	2
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.115729093552	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.00898313522339	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	0.0.2.9.6.9	search with cache (only 1: firstorder; only 1: unfold decidable; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: auto; only 1: intuition).	1.55495905876	1484
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.0608930587769	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.056144952774	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.163233041763	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	6	search with cache (only 1: firstorder).	0.00924110412598	7
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0310230255127	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0308449268341	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	4	search with cache (only 1: fsetdec).	0.0839309692383	33
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	3.1	search with cache (only 1: intros x y; only 1: fsetdec).	0.291211128235	33
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.075963973999	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.1.0.4.0	search with cache (only 1: intros x; only 1: split; only 1: intuition; only 1: rewrite add_spec; only 1: intuition).	0.119109869003	25
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.131885051727	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.161893844604	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	8	search with cache (only 1: fsetdec).	0.116600036621	38
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	1	search with cache (only 1: fsetdec).	0.0353429317474	2
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	7.11	search with cache (only 1: intros x; only 1: intuition_in).	2.85474514961	2351
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	6.4.0	search with cache (only 1: intuition; only 1: eapply OrderTac.lt_irrefl; only 1: now elim irreflexivity with x).	0.111455917358	115
Coq.MSets.MSetGenTree.Props.lt_leaf	40	7.2	search with cache (only 1: intros; only 1: inversion 1).	0.0320510864258	58
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.00890111923218	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	8.17.4.2	search with cache (only 1: red; only 1: intros l x y H H'; only 1: intuition_in; only 1: MX.order).	6.94059300423	8557
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	1.0.2	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.0656850337982	19
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	3.4.1.1	search with cache (only 1: red; only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.296495914459	250
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	5.0	search with cache (only 1: intros x y z; only 1: eauto).	0.0110359191895	7
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.00716710090637	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	5.0	search with cache (only 1: intros x y z; only 1: eauto).	0.0110309123993	7
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	9.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	2.34137797356	2665
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0294079780579	20
Coq.MSets.MSetGenTree.Props.empty_spec	40	3	search with cache (only 1: firstorder).	0.00985717773438	4
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	search with cache (only 1: auto).	0.00508594512939	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.1.0.0.0.0.0.3	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	1.95992803574	1333
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40	1.5.14	search with cache (only 1: red; only 1: fix gcd_divide 1; only 1: auto).	2.7920229435	4929
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	1.5	search with cache (only 1: fix gcd_divide 1; only 1: intuition).	0.0174889564514	16
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	22	search with cache (only 1: firstorder).	1.57110500336	3492
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	3.0.4.5	search with cache (only 1: intros; only 1: rewrite elements_node; only 1: unfold elements; only 1: now rewrite !app_assoc_reverse).	1.46248602867	1332
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	0.19.12.6	search with cache (only 1: repeat red; only 1: intros a l H; only 1: fix gcd_divide 1; only 1: auto).	15.5557219982	53973
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	4	search with cache (only 1: firstorder).	0.0572109222412	56
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40	2.13.15.4.3	search with cache (only 1: PeanoNat.Nat.bitwise; only 1: apply eq_true_iff_eq; only 1: revert m; only 1: fix even_spec 1; only 1: intuition).	2.12831497192	4418
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	0.2.10.0	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	2.14689612389	1147
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40	0.29.18	search with cache (only 1: compute in *; only 1: fix gcd_divide 1; only 1: auto).	2.83184599876	4857
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	4	search with cache (only 1: firstorder).	0.0434379577637	43
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	8.0	search with cache (only 1: intros; only 1: firstorder).	0.0276319980621	12
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	1.4.4.0	search with cache (only 1: repeat red; only 1: intros x y z; only 1: fix gcd_divide 1; only 1: trivial).	0.609409093857	429
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	13.3.7.2.4	search with cache (only 1: intros x y z; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro; only 1: rewrite !InA_cons; only 1: firstorder).	32.1134879589	29682
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	1.1.1.0.3	search with cache (only 1: intros x x' l l' E s'' H'; only 1: inversion_clear H'; only 1: auto with *; only 1: auto with *; only 1: auto with *).	2.16454291344	144
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0404200553894	3
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	search with cache (only 1: compute; only 1: auto with extcore).	0.037899017334	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	9.1	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	1.11295795441	207
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	2.0.4.4.10.7	search with cache (only 1: constructor; only 1: red; only 1: unfold In; only 1: compute; only 1: Dec.fsetdec; only 1: auto with *).	2.68186903	2534
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	2.4.2.2	search with cache (only 1: intro; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	1.15373086929	618
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.5.2	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.170807123184	27
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.8.0.0.0.0.4.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: split; only 1: intuition; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	22.1267800331	13168
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.8.0.0.0.0.3.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	20.3822088242	6659
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	13	search with cache (only 1: solve_proper).	0.447525024414	202
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	1.9	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.258389949799	121
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40	3.8	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.452086925507	328
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	1	search with cache (only 1: firstorder).	0.0185480117798	2
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	0.0370850563049	5
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	5	search with cache (only 1: constructor).	0.0138628482819	6
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.8.0	search with cache (only 1: unfold empty; only 1: repeat red; only 1: intuition; only 1: inv).	3.33079099655	89
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	5	search with cache (only 1: firstorder).	0.0435729026794	49
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	1.1	search with cache (only 1: unfold elements; only 1: intuition).	0.0146808624268	4
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	1.1	search with cache (only 1: intros; only 1: auto).	0.0150809288025	4
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40	1.2.2.7.28	search with cache (only 1: inversion 1; only 1: induction s; only 1: easy; only 1: inversion H1; only 1: auto).	20.9438359737	52170
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	3.0.0.0.0.2	search with cache (only 1: unfold Empty; only 1: destruct s; only 1: red; only 1: intros; only 1: inv; only 1: now discriminate).	0.455771207809	307
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.0131981372833	1
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	1	search with cache (only 1: assumption).	0.0122799873352	2
Coq.MSets.MSetList.MakeRaw.mem_spec	40	1.7	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.165941953659	66
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40	0.0.3.13	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	9.57992100716	3922
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.2.0.0.0.0.0.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: simpl; only 1: constructor; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	2.98037195206	1490
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	1	search with cache (only 1: reflexivity).	0.0198972225189	11
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	0.4.0.7.9	search with cache (only 1: intros x Hs; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder; only 1: subst; only 1: intuition).	2.62487006187	2095
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.120228052139	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	2.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: constructor).	0.0181381702423	4
Coq.MSets.MSetList.MakeRaw.empty_spec	40	14.15.12	search with cache (only 1: red; only 1: intros x y; only 1: easy).	2.07303309441	1916
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0.0.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0155889987946	7
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.0.0.0.0.0.1.2.0.7	search with cache (only 1: intro l; only 1: intro H; only 1: induction l as [| x xs]; only 1: constructor; only 1: change_no_check (inf x xs && isok xs = true) in H; only 1: rewrite andb_true_iff, <- inf_iff in H; only 1: destruct H; only 1: constructor; only 1: tauto; only 1: tauto).	5.94904303551	4707
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.0.4	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0274109840393	7
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40	2.12.3.18	search with cache (only 1: intros [| ] ? Heq; only 1: easy; only 1: inversion Heq; only 1: auto).	7.73794293404	12390
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	0.0.3.0.0.3.0	search with cache (only 1: destruct s; only 1: unfold Empty, empty; only 1: intuition; only 1: inv; only 1: unfold Empty, empty; only 1: simpl; only 1: inversion 1).	1.24557304382	481
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	3.3.0.5.0.3	search with cache (only 1: induction s as [| x s IH]; only 1: inversion 1; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: intuition).	16.7744669914	10098
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0142829418182	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.0134770870209	1
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	1	search with cache (only 1: auto with zarith).	0.0213048458099	2
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00492906570435	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.3.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.225754022598	158
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40	0.0.1.2.0.0.3.0.0.0.1.2.0.0.0.0.0.1.0.0.3.2	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: assumption; only 1: induction IHclos_trans1; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: left; only 1: auto; only 1: auto).	4.72852993011	33457
Coq.Relations.Operators_Properties.clos_tn1_trans	40	1.0.1.4.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.0423119068146	292
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40	0.2.0.1.0.0.3.1.1.0.0.0.0.0.0.0.0.0.3.0	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: assumption; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	2.85633993149	16943
Coq.Relations.Operators_Properties.clos_rt1n_step	40
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.2.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.00727105140686	13
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40	0.0.1.0.0.5.0.0.0.1.2.0.1.0.1.0.0.0.0.5.1	search with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: assumption; only 1: left; only 1: left; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).	7.23501396179	35052
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.0.5.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto with sets; only 1: auto with sets).	0.00857496261597	19
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40	0.1.0.0.0.3.1.1.0.1.1.0.0.0.0.3.0	search with cache (only 1: split; only 1: induction 1; only 1: apply clos_rtn1_step; only 1: assumption; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: auto).	3.06333494186	13459
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.5.0.4.0.1.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto with sets; only 1: case H; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).	1.84943389893	7388
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	1.1.4.8.1.0.1.0.3.0	search with cache (only 1: intros x y H; only 1: induction 1; only 1: constructor 1; only 1: intro z; only 1: auto; only 1: intro z; only 1: intros; only 1: eauto; only 1: intro z; only 1: auto).	1.72191500664	9505
Coq.Relations.Relations.inverse_image_of_eq	40	2.5.0.1.5.13.3.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: intros x y H; only 1: destruct 1; only 1: trivial; only 1: intros x y H; only 1: auto).	0.262678146362	2351
Coq.Sets.Uniset.leb_refl	40	6	search with cache (only 1: destr_bool).	0.00495409965515	7
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0044469833374	4
Coq.Sets.Uniset.seq_refl	40	2	search with cache (only 1: auto).	0.00389194488525	3
Coq.Sets.Uniset.seq_trans	40
Coq.Sets.Uniset.seq_sym	40	1.0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: auto).	0.00541996955872	5
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: auto).	0.00437498092651	3
Coq.Sets.Uniset.union_empty_right	40
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	1.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with bool).	0.00992918014526	12
Coq.Sets.Uniset.seq_left	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.00832915306091	10
Coq.Sets.Uniset.seq_right	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: elim H; only 1: auto).	0.124269962311	118
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	2.0.1	search with cache (only 1: intros n m; only 1: induction n; only 1: now symmetry).	0.0449709892273	37
Coq.Sets.Multiset.meq_trans	40	12.1	search with cache (only 1: unfold meq; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).	0.667825937271	1057
Coq.Sets.Multiset.meq_sym	40	1.0.0.0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0173361301422	7
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: reflexivity).	0.0138630867004	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0138781070709	4
Coq.Sets.Multiset.munion_comm	40	2.1.7.3.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: destruct y; only 1: firstorder; only 1: simpl; only 1: firstorder).	5.7638502121	7989
Coq.Sets.Multiset.munion_ass	40	1.0.0.0.1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0442931652069	26
Coq.Sets.Multiset.meq_left	40	0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0211358070374	7
Coq.Sets.Multiset.meq_right	40	0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0200891494751	7
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	1.2.1.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.398010969162	215
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	10	search with cache (only 1: auto with sets arith).	0.0226628780365	34
Coq.Sets.Integers.le_antisym	40	2.0	search with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.0169990062714	12
Coq.Sets.Integers.le_trans	40	5.4.0	search with cache (only 1: red; only 1: intros n m p; only 1: PeanoNat.Nat.Private_Tac.order).	0.0561890602112	114
Coq.Sets.Integers.le_Order	40	3.0.0.0.1.0.0.1.14	search with cache (only 1: split; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).	0.383229017258	967
Coq.Sets.Integers.triv_nat	40	7.15.10	search with cache (only 1: compute; only 1: intro x; only 1: split).	0.816760063171	2136
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	6.0.1	search with cache (only 1: intros; only 1: intros A C h1 h2; only 1: auto).	0.00663495063782	27
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40
Coq.Sets.Relations_1_facts.contains_is_preorder	40	13	search with cache (only 1: auto  10 with sets).	0.00801181793213	80
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.5.0	search with cache (only 1: unfold same_relation at 1; only 1: destruct 1; only 1: auto  10 with sets).	0.0098831653595	14
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	5.0.1.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intros U R H'; only 1: intuition).	0.0140221118927	28
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	1.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0117588043213	3
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1	search with cache (only 1: auto  10 with sets).	0.00324606895447	2
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto  10 with sets).	0.00364303588867	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40
Coq.Sets.Permut.comm_left	40	3.1.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.00364899635315	7
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.0.5.0.19	search with cache (only 1: intros A H'; only 1: intros; only 1: exists x; only 1: auto with sets; only 1: auto with sets).	2.28931593895	6126
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.17.3.1.0.0.2.4.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros; only 1: easy; only 1: auto with sets).	6.4803750515	15371
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	7.0.4	search with cache (only 1: intros A x y H'; only 1: elim H'; only 1: firstorder).	0.387058973312	362
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40	7.6.6.10.9.6	search with cache (only 1: unfold not; only 1: intro H'3; only 1: intros x H'0; only 1: clear H'0; only 1: fix gcd_divide 1; only 1: auto  10 with sets).	19.4277038574	72018
Coq.Sets.Infinite_sets.Image_set_continuous	40	2.29.2	search with cache (only 1: intros X c1 H'; only 1: fix gcd_divide 1; only 1: auto with sets).	6.18438005447	20553
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	3.1.1	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0054178237915	13
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40
Coq.Sets.Powerset.Inclusion_is_transitive	40	2.1.0.0	search with cache (only 1: red; only 1: intro X; only 1: intros x H'; only 1: auto  6 with sets).	0.00543189048767	14
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	1.1	search with cache (only 1: red; only 1: auto  10 with sets).	0.0046660900116	4
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.0.1.0.1.0.0.0.0.2	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).	6.80187416077	893
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	5.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.00791788101196	16
Coq.Sets.Powerset.Union_increases_l	40	1	search with cache (only 1: auto with sets).	0.00439190864563	2
Coq.Sets.Powerset.Union_increases_r	40	1	search with cache (only 1: auto with sets).	0.00408792495728	2
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.2.4.4.3	search with cache (only 1: intro X; only 1: intro A; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	22.3865871429	3880
Coq.Sets.Powerset.Intersection_decreases_r	40	1.0.0.0.1	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.00808811187744	7
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	4.0.0.0.0	search with cache (only 1: intros; only 1: red; only 1: red; only 1: red; only 1: auto with sets).	0.0104839801788	9
Coq.Sets.Classical_sets.Subtract_inv	40	1.1.4	search with cache (only 1: intros x y z H'; only 1: elim H'; only 1: auto with sets).	0.0209460258484	36
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40	7.0.8.4	search with cache (only 1: destruct 1; only 1: split; only 1: auto with sets; only 1: auto  7 using Inhabited_Setminus with sets).	6.34300208092	9557
Coq.Sets.Classical_sets.not_SIncl_empty	40	1.0.3.0.0.0	search with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: auto with sets).	0.0134780406952	10
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.3.2.2.0	search with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	0.124094963074	310
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.2.0.1	search with cache (only 1: intros X Y H'; only 1: red; only 1: destruct 1; only 1: auto with sets).	0.0146188735962	7
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.5.1.0.1	search with cache (only 1: intros A B x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	1.17650699615	454
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	2.0.2.0.1.3.0.1.1.0.1	search with cache (only 1: unfold Included; only 1: unfold Add at 1; only 1: intros X x H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	4.63982510567	13836
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.00845193862915	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.13	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.242281913757	355
Coq.Sets.Powerset_facts.less_than_empty	40	1.0	search with cache (only 1: intros X H'; only 1: auto with sets).	0.00803589820862	3
Coq.Sets.Powerset_facts.Union_commutative	40	1	search with cache (only 1: auto  6 with sets).	0.00920391082764	2
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.00870513916016	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0108299255371	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.422549962997	569
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	3.33962011337	5878
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.1.3.0.0.1.3.0.0.2.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets).	0.57700586319	1045
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.882869005203	2305
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.1.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.0589301586151	5
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.2.2.0.3.2.0.0.1.1.5	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: assumption; only 1: red; only 1: auto with sets).	3.49867010117	6296
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.0.4.3.1.1.6.1	search with cache (only 1: intros X x H'; only 1: apply Singleton_inv; only 1: elim H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: red; only 1: auto with sets).	0.718554973602	2348
Coq.Sets.Powerset_facts.incl_add	40	0.4.0	search with cache (only 1: intros A x; only 1: unfold Add; only 1: auto with sets).	0.0215380191803	7
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	1.0.0.0.0	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.0302691459656	6
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.00487685203552	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.00635695457458	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.00919508934021	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	2.1.1.1.2.1.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: unfold In in *; only 1: auto; only 1: intuition).	0.456475019455	1215
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0129640102386	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.2.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: intuition; only 1: contradict H; only 1: intuition; only 1: intros x H1; only 1: destruct H1).	0.365036964417	533
Coq.Sets.Constructive_sets.Extension	40
Coq.Sets.Constructive_sets.Noone_in_empty	40	0.2.2.0	search with cache (only 1: unfold not; only 1: intro A; only 1: intro H1; only 1: elim H1).	0.0040340423584	8
Coq.Sets.Constructive_sets.Included_Empty	40	0.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.00372195243835	3
Coq.Sets.Constructive_sets.Add_intro1	40
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0040009021759	2
Coq.Sets.Constructive_sets.Inhabited_add	40
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	7.10.3.13.4.3.9.2	search with cache (only 1: red; only 1: intro A; only 1: intro H1; only 1: elim H1; only 1: intros B C H'; only 1: elim H1; only 1: rewrite H'; only 1: destruct 1).	4.63867306709	48484
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	4.0.1	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: trivial).	0.00744009017944	8
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.00420904159546	4
Coq.Sets.Constructive_sets.Union_inv	40	0.0.5.7	search with cache (only 1: destruct 1; only 1: auto with sets; only 1: right; only 1: assumption).	0.0825760364532	412
Coq.Sets.Constructive_sets.Add_inv	40	1.7.1.10.6	search with cache (only 1: intros; only 1: destruct H; only 1: auto using Add_intro2 with sets; only 1: destruct H; only 1: auto using Add_intro2 with sets).	6.97199702263	29392
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.00514602661133	3
Coq.Sets.Constructive_sets.Couple_inv	40	2.0.1.0.0	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial; only 1: auto).	0.00664401054382	11
Coq.Sets.Constructive_sets.Setminus_intro	40	3.1.0.0	search with cache (only 1: red; only 1: red; only 1: intros B C x H'; only 1: auto with sets).	0.00469994544983	12
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros X H'; only 1: trivial).	0.00401997566223	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.1.2.4.1	search with cache (only 1: red; only 1: intro A; only 1: intro H1; only 1: elim H1; only 1: auto with sets).	0.0325980186462	298
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.0.0.7.13	search with cache (only 1: intros x A H'; only 1: elim H'; only 1: auto with sets; only 1: apply NNPP; only 1: auto with sets).	0.359797000885	1820
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	0.10.14	search with cache (only 1: intros; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	0.0820801258087	536
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40	9.10.1.5.6.1.0	search with cache (only 1: intros n; only 1: induction 1; only 1: generalize dependent x; only 1: intros x0 H'0; only 1: induction 1; only 1: elim H'0; only 1: intuition).	34.4317679405	112239
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40	1.1.5.7	search with cache (only 1: intros a Ha; only 1: fix le_div2 1; only 1: intros n m LE; only 1: auto with arith).	2.07449793816	5029
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	3.2.4.1	search with cache (only 1: intros B C H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.10653090477	319