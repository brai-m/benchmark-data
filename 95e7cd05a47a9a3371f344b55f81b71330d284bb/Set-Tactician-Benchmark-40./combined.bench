coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	40	0.009414	3	1	2	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg	40	3.846549	2276	262	3.17.2	synth with cache (only 1: intros H; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.040909	11	4	0.5.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_l	40	0.034170	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_r	40	0.034296	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_l	40	0.035441	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_r	40	0.034581	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsrt	40	0.008777	1	1	0	synth with cache (only 1: exact RTheory).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Req_dec	40	0.252743	51	32	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.474127	355	180	0.0.0.1.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	40	0.028413	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_N_predN	40	0.664872	110	66	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_plus	40	0.159802	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	7.446405	1906	352	2.6.0.6.0	synth with cache (only 1: intro; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply Rinv_0_lt_compat; only 1: apply INR_fact_lt_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	40	21.191190	6853	1997	3.0.15.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.029786	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	40	15.193333	8984	1459	1.2.2.21.0	synth with cache (only 1: intros n1 H'; only 1: unfold Rgt; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2	40	0.499080	155	42	0.0.0.0.8	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	40	1.250107	486	52	13.3	synth with cache (only 1: intros H1 H2; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_1	40	0.012857	2	2	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	1.854435	427	176	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	40	0.477912	174	49	0.3.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps4	40	8.552566	3277	388	23.6	synth with cache (only 1: intros n; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.023211	2	2	0.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.101459	60	11	0.9	synth with cache (only 1: intros a Ha; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.IZN_var	40	0.750847	381	76	0.1.0.8	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.tech_up	40	40.094095	34234	3450
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case	40	40.100357	32890	5074
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.101207	38214	3773
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.eqR_Qeq	40	40.071390	23938	3027
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	40	40.104554	18624	2306
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.012084	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.in_holed_interval_dec	40	40.093189	32868	4123
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	40	5.448041	3065	811	3.0.0.0.0.4.6.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: unfold Rle; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P1	40	40.070813	22366	4498
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.112250	38473	4420
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.035054	7815	1878
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	40	40.136002	50794	5623
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.cont_deriv	40	40.095695	32902	4964
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	40	40.108436	40469	4076
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.035861	7543	1579
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.formule	40	40.027999	8111	1605
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rcomplete.R_complete	40	40.098801	35112	5746
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40	40.057134	17608	4862
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	40.051128	14244	4770
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step1	40	40.052446	15946	2303
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.062368	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.060677	5	4	0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_split	40	40.046986	12231	2183
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	40	40.083465	27815	3877
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step0	40	40.051918	15157	1835
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_split	40	40.060015	19703	2352
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C1	40	40.141795	55165	4983
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	40	2.579588	6320	353	0.35.9	synth with cache (only 1: intros; only 1: exists n; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1b	40	40.029758	8664	1291
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.110759	22210	1815
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	40	0.248020	8	6	1.0.0.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	40	40.064304	21111	3658
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	40	40.147458	56735	5140
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P2	40	0.104557	5	3	1.1.0	synth with cache (only 1: unfold interior; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.061357	18381	4544
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rinv_1	40	4.101879	1916	360	1.2.14.0	synth with cache (only 1: intro; only 1: elim archimed with x; only 1: intros H1 _; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	40	40.045641	13196	4500
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	40	42.289123	32245	726
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	40	40.059216	14951	2229
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.cos_plus_form	40	40.046464	13577	2323
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.050040	14685	4422
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ropp_div	40	0.054383	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_half_prf	40	0.109937	10	9	1	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rsth	40	0.130992	22	13	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT	40	40.109798	35973	3607
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_comp	40	40.050744	13914	3774
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.081657	27240	4518
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	40	40.107252	36663	3191
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp	40	40.039103	10282	3451
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	40	40.047467	6449	1397
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	40	0.071353	31	11	1.3	synth with cache (only 1: intro; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.continuity_sin	40	40.051875	15739	3973
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.CVN_R_cos	40	40.168219	59520	3867
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.E1_cvg	40	40.041896	12689	4006
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.pow_i	40	5.825959	3051	349	1.0.0.1.2.13.6	synth with cache (only 1: intro; only 1: intros [| n]; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_0_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	40	40.035897	9779	3146
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.040482	11806	2712
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_inv	40	40.076878	27743	3478
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_le_3	40	40.062339	20914	4158
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis_reg.AppVar	40	40.048156	14147	4134
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.prop_eps	40	40.054281	14144	3359
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.262607	57917	3264
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.up_tech	40	40.063564	23564	2084
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.phi_sequence_prop	40	40.059788	23073	2862
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_minusni_n	40	40.102102	29723	3324
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qeq_eqR	40	40.054563	17948	2065
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.077928	24732	3089
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	40	0.013403	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	40	0.021311	5	3	1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	40	0.148342	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_convex	40	40.076436	25666	4525
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.084472	28485	5270
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var	40	12.438711	5174	1162	0.11.8	synth with cache (only 1: intros A eq_dec; only 1: CRelationClasses.simpl_crelation; only 1: apply pr_nu).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40	40.071615	16787	2389
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40	40.076292	22383	5779
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.018491	2	2	0.0	synth with cache (only 1: intros; only 1: apply derivable_pt_id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.Rlt_R0_R2	40	0.044641	8	7	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	40	0.062700	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	40	6.198914	4311	325	0.1.17.15	synth with cache (only 1: intros n; only 1: pattern n; only 1: unfold Rle; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_refl	40	0.084561	3	3	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P1	40	40.057619	15493	5687
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	40	40.049661	10223	1649
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_growing	40	40.060344	21863	1638
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	4.896060	5252	825	0.2.0.0.0.18	synth with cache (only 1: intuition; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intro; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dconst	40	40.072178	23288	4767
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Rcompare_spec	40	40.098047	31826	3746
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.073150	23246	5801
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step2	40	40.045046	11787	2839
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term1	40	40.050237	15577	4049
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech2	40	40.034329	9234	2096
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_pos	40	40.198885	22585	4624
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step1	40	40.047128	16157	2103
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.atan_sub_correct	40	40.065722	9643	1512
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTCN_step1	40	40.104780	35638	2773
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.081210	25771	4360
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	40	40.042488	10596	3583
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C2	40	40.039093	10572	3868
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.103183	11	11	0.1.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTC_Newton	40	0.586614	181	33	10.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40	40.026881	3079	823
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	0.282572	35	10	7.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P1	40	40.125185	45633	5775
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	40	0.109367	62	17	0.7.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.068253	21360	4356
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_true	40	40.068548	24756	2305
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.225318	24021	1922
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_maj	40	40.098091	19610	3321
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.036446	9438	3192
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.pow_sqr	40	40.057091	18492	2403
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	40	40.176219	14649	4004
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rri	40	40.062086	22396	2606
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	40	40.090326	35882	3481
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	40	40.053305	15744	3694
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_div	40	30.866030	8869	1528	0.2.23.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	6.680579	10906	925	0.0.22.0.0.0.14.16.56	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.243351	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.051295	15012	3968
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.199959	20127	3684
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	1.202670	395	111	4.0.0.5	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: congruence; only 1: congruence; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	40	1.073347	454	91	0.8.4	synth with cache (only 1: intro; only 1: intros z; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_div	40	40.065009	20436	4709
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.153309	19	9	3.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.099315	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	40	9.813051	2585	454	0.0.0.0.19	synth with cache (only 1: intros a m H; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.035249	8	5	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_max_distr	40	0.029863	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_min_distr	40	0.032240	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	40	40.037714	8418	2554
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_form	40	39.998814	21313	2197
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_double	40	0.020251	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.018950	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.continuity_cos	40	40.041358	12649	3530
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp0	40	40.082202	27621	4678
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_symm	40	40.065203	21837	3043
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI	40	40.051927	17050	3014
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	40	12.805845	3868	358	5.13.6.32	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.R_one_zero	40	0.014340	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_increasing	40	40.048297	15418	3336
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.090182	11163	2710
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P1	40	40.075381	11652	3535
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40	40.064760	19505	3934
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	40	40.085362	31633	2451
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P1	40	40.254065	19440	2364
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.lt_minus_O_lt	40	40.089433	24322	3366
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rle_Qle	40	40.076314	27347	2801
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	40	40.069409	21329	4051
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.076336	26252	3704
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.RTheory	40	40.120082	44892	5583
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.063049	22007	3534
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var2	40	40.061443	21542	3054
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.039222	12087	2790
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P1	40	40.095848	37167	2822
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_cv	40	40.173768	67239	6157
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_irrefl	40	41.239679	57457	3361
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_irrefl	40	0.017753	4	4	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	40	40.097061	31356	7762
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	40	40.077804	24167	4880
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.088940	32172	4969
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step3	40	40.040515	10694	2561
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.048637	15376	3128
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech3	40	40.057280	17451	2533
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_Rle	40	40.070607	24700	3300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.055726	17926	2972
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	40	40.028335	7145	2351
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.062498	19595	2524
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.063969	20409	4123
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.076822	28674	2783
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	40	40.017803	3049	1130
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rset	40	0.055720	7	4	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	40	40.111627	33280	5590
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	40	0.020632	6	3	0.0.3	synth with cache (only 1: intros; only 1: intros [y [H H0]]; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step1	40	40.093099	32635	4334
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_false	40	40.095720	9582	1418
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro	40	40.048690	14157	3851
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_lt	40	40.067473	25268	3238
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.A1_cvg	40	40.051947	15380	4505
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_maj	40	40.081226	16596	3749
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor2	40	40.055483	17293	4533
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	40	40.053517	16159	3627
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_sqrt	40	40.062057	21038	2437
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40	40.068937	23033	4208
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.100345	36140	5366
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0	40	40.067477	17350	6323
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	40	40.069916	10004	1693
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_eq	40	10.421989	7683	1198	0.0.0.10.4.5.3	synth with cache (only 1: intros r H; only 1: intros LT; only 1: intro H1; only 1: destruct H1 as [p pmaj]; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.145999	61970	3171
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_eq	40	2.668559	2330	490	14.0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: rewrite H0; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_not_R0	40	40.074142	27283	2721
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40	40.052897	16047	3471
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40	40.060664	19879	3778
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.law_cosines	40	40.039112	12271	1907
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.103911	33498	3929
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	40	40.076840	27697	2770
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rdi	40	40.074155	18974	2099
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_lt_inv	40	40.043639	12122	4049
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt	40	40.079073	22630	5444
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40	40.200082	38832	4563
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	40	40.137186	27447	3235
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.110570	32168	2647
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.for_base_fp	40	40.058874	15661	4213
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P2	40	40.031758	10176	2573
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.even_odd_cor	40	40.136600	42152	3492
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	40	0.011450	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	40	40.069495	23626	2816
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.038212	7911	1345
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.078007	27890	4180
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rfield	40	40.128024	25935	4441
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.101133	38604	3537
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_inv	40	40.063495	22770	3742
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.total_order_T	40	40.088623	31168	3858
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.115698	41836	2762
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40	40.882997	22426	1592
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.107005	20120	2357
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P2	40	40.072236	20636	4074
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.123817	43611	4384
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.014306	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_l	40	40.077499	20890	6580
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.508393	10	2	3	synth with cache (only 1: Z.order').
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dadd	40	40.105541	25659	4156
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_r	40	0.553051	136	75	4.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.054855	16218	5001
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.062236	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_right	40	0.025390	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	40	40.051791	14247	3069
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech4	40	40.062243	16501	5056
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	40	0.015414	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term3	40	40.041710	12070	3067
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.fact_prodSO	40	40.188681	20654	1256
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	40	40.036765	9815	2551
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step3	40	40.055930	15474	4187
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.le_n_2n	40	0.043163	6	6	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.141699	47212	4165
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_last	40	40.035089	6818	4690
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.037659	12666	1467
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rtheory	40	40.016059	3117	1519
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P2	40	40.127886	44377	4137
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	1.154154	728	109	8.0.0.0.5	synth with cache (only 1: intros H1; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step2	40	40.075263	25377	4658
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	40	40.065011	24048	1920
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.059967	19379	4211
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Un_cv_ext	40	40.041897	14089	2811
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.C1_cvg	40	40.047725	13827	5088
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40	40.050007	13959	4045
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	40	40.033044	7759	4220
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_cv_R0	40	40.033534	8545	4236
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_0	40	40.117344	36105	4522
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derive_pt_div	40	40.047074	13550	3375
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	40	40.064652	16302	5813
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40	40.072153	24295	3704
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.063921	12572	1939
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.109694	45990	2270
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	40	40.095992	30848	5909
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_maj	40	40.034030	8616	3352
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.067604	19588	4013
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.triangle	40	40.044591	12308	4647
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_2_aux	40	40.112899	43651	3230
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.translation_0	40	0.127981	31	11	1.3.0.1	synth with cache (only 1: intros; only 1: split; only 1: auto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40	40.025391	3715	2384
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40	40.042888	12652	2864
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	40	10.498107	3319	735	1.0.5.1.8	synth with cache (only 1: intros n m H; only 1: apply min_max_antimonotone; only 1: unfold Rminus, Rdiv; only 1: do 3 red; only 1: auto using Rnot_lt_le with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_1	40	12.047263	4542	1736	3.1.4.3	synth with cache (only 1: intros x y; only 1: unfold Rsqr; only 1: intros a b; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	40	40.029803	7807	2814
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt_f	40	40.061435	16615	4977
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40	40.490056	41682	3330
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	40	40.052885	16459	3003
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.sig_not_dec	40	40.082490	27945	2876
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	40	40.071932	20010	6111
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.euclidian_division	40	40.147828	38566	5123
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.021367	5971	2106
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rlt_Qlt	40	40.108576	40585	3200
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_RN_plus	40	40.042821	11915	2341
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Ball_in_inter	40	40.061979	20591	4100
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	40	40.135172	56168	2684
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	40	1.020173	171	47	9.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	40	40.161601	67300	3519
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_inv	40	40.035489	11169	2546
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Req_appart_dec	40	40.127845	47128	2982
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	40.114963	19456	928
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40	40.614046	27695	3135
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.091843	11858	2426
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	40	40.076810	24189	4720
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.149366	43835	3790
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.126165	6570	777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	1.300971	939	154	4.4.11	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult	40	40.047850	13472	4261
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	40	40.089793	30791	4924
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	40	40.071644	9438	2174
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.029751	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.binomial	40	40.061029	18757	2707
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_couple_eq	40	9.217393	5508	1005	23.0	synth with cache (only 1: intros; only 1: now injection H as [=->]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	40	40.058625	15955	4324
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.048587	14901	1616
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step4	40	40.080372	28611	4593
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.042624	14144	2182
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term4	40	40.041791	10580	3666
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P3	40	40.029077	7359	2934
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	40	40.296154	54720	4059
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40	40.023101	5925	630
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P3	40	40.070389	20017	6033
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.719105	185	67	0.0.2.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	40	40.028252	7009	3095
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_0	40	40.089803	32659	3866
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_first_term_bound	40	40.041415	13437	2739
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.B1_cvg	40	40.104298	15282	4560
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.052484	15357	4449
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.Rolle	40	40.057328	18051	3896
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_cv_R0	40	40.031421	7944	4196
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_1	40	40.073885	23910	4892
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40	40.061776	19880	3891
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.033940	7810	869
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_dec	40	40.231550	52176	6517
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sinh_0	40	40.087761	31592	2466
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_pi2	40	40.043672	12091	3353
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_translation	40	40.060826	20809	2749
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	40.041149	12046	2673
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.074591	10	8	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.039426	3	2	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	40	40.028720	7052	3374
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40	40.037708	10074	3300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	40	40.063345	11297	1865
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.069302	17659	6583
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists1	40	40.066900	23152	3505
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit	40	40.065856	20616	2213
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	40	40.130560	44674	3218
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40	40.816330	31156	2506
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_Int_part	40	40.055693	16414	3546
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qri	40	40.040305	10892	726
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qlt_Rlt	40	40.103708	36650	2936
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt	40	40.075395	22878	5443
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_exists	40	40.056111	21428	3008
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_center	40	40.074501	25508	4214
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_0_2	40	40.234806	104039	3419
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	40	40.029938	8205	2901
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	40	40.084525	24421	2820
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40	40.082862	14365	3642
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40	40.035007	7978	2707
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	40	40.045215	14138	2447
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	40	40.073653	23041	3930
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_ss	40	40.098213	33895	4572
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.089964	28591	4750
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.057191	30	7	7	synth with cache (only 1: auto using eqb_correct, eqb_complete).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult_const	40	40.052113	14423	4563
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_const	40	40.097652	35345	4724
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_comm	40	40.111492	18610	1466
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P1	40	1.990303	548	166	2.2.0.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: inversion H; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_two_in_interval_works	40	40.091716	35063	3265
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech7	40	40.084644	6344	1456
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT	40	40.068272	22701	4625
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3_7	40	40.047364	10939	2155
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.048781	17206	2438
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qcri	40	12.619612	1890	314	1.0.3.2.7.1.4	synth with cache (only 1: unfold Qeq; only 1: intro; only 1: repeat red; only 1: intuition; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.006582	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	40	40.387061	39982	3907
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.D_x_no_cond	40	40.069854	19000	2560
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40	40.019007	5078	569
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.087816	28994	3998
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	40	40.093492	31122	5053
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	40	40.032305	9784	1757
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C4	40	40.033689	8646	3694
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_1	40	40.079483	25979	2378
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_CVU	40	40.099212	7723	3211
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	40	40.080324	14049	3837
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonneg_derivative_1	40	40.066195	20710	4374
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	6.245468	4299	344	4.39	synth with cache (only 1: intro H; only 1: apply Zeq_is_eq_bool).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste_cv_R0	40	40.032443	8072	4134
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_eq_0	40	40.063155	19070	1913
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	40.045496	13578	3275
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40	40.558007	7594	258
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_opp	40	40.578063	19751	1688
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rtotal_order	40	40.102924	35240	4349
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdichotomy	40	0.136769	31	14	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	40	0.314127	151	48	7.0.0	synth with cache (only 1: red; only 1: intros; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40	40.095615	35509	2395
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge	40	3.181918	2232	283	3.3.17	synth with cache (only 1: intros x y; only 1: constructor 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	40	40.066146	17943	2719
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.pi2_int	40	40.048802	13580	3568
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_0	40	40.058322	20003	2918
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6	40	40.047325	13556	3315
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40	40.028829	6661	2959
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_cv	40	40.027112	6686	3078
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	40	3.402202	1615	326	10.2.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_le	40	0.027587	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_gt	40	0.009227	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	40	0.005216	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.076471	22287	6384
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	40	40.060028	13465	157
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.up	40	28.584102	73534	1529	179	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists	40	40.024583	5626	3408
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.048653	12757	2859
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	40	40.108882	27481	3853
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40	40.113437	42950	3216
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.073521	25573	2737
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_plus	40	40.061222	17423	4223
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	40	40.085938	26444	5539
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.035852	11252	2988
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_CVU	40	40.064892	23638	3568
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_pos	40	0.013451	4	1	3	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	40	40.088420	31152	4093
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	40	40.028877	7781	2828
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	40.073509	22043	4023
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.122748	46898	3263
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40	40.254451	30879	2778
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	40	40.057220	19813	3117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.087173	34420	1883
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_ss	40	40.120787	45730	5084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.069292	18449	4957
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	40	40.080579	23635	4691
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.066518	20327	5146
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.090092	19694	4146
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P2	40	40.114161	43110	4537
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech11	40	40.055748	16922	2729
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	40	0.014545	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences	40	40.140490	52453	4236
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.856279	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.096513	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.PI_2_3_7_ineq	40	40.055666	18398	3116
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.093645	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intros Eq0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P5	40	40.075461	21209	2898
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	40	40.076482	24148	4794
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qdi	40	40.029355	7456	1008
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	40	40.186308	32201	3801
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rabs_4	40	40.073843	20188	3342
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.R_power_theory	40	40.023672	3227	1111
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.cauchy_bound	40	40.627890	44860	4249
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.083000	23706	5844
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_inv_ext	40	40.070885	24225	2218
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	40	40.029278	6884	3301
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.054256	10549	3082
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.neighbourhood_P1	40	2.645259	2231	369	3.10.0.2.0	synth with cache (only 1: unfold included; only 1: intros f X x; only 1: intros; only 1: elim H0; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min	40	40.075686	26082	4280
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P2	40	0.895615	625	117	3.9.4	synth with cache (only 1: intros; only 1: intros P; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_0	40	40.053837	16121	4366
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.comm	40	40.088915	5735	374
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_0	40	40.066369	11008	2964
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	40	40.040725	10266	3580
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40	40.056584	16735	4175
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_nat	40	20.020589	30819	2936	17.4.28	synth with cache (only 1: intros LT; only 1: unfold frac_part; only 1: intuition eauto  4 with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40	40.646945	5307	563
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_minus	40	40.071208	12866	1886
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.lim_x	40	30.318641	37658	3377	14.30	synth with cache (only 1: intros H l; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40	40.620155	54812	3642
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_minus	40	40.051408	16090	2783
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.archimed_cor1	40	40.146368	53555	5290
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.046919	12675	4125
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40	40.078937	26880	1974
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	40	40.070620	17267	3898
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_plus	40	40.079435	19562	2620
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_lt	40	40.116916	42936	3779
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.060591	14730	5945
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zsth	40	0.039376	12	4	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40	40.103948	3903	118
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ln	40	40.044157	13959	2480
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	40	40.062710	18570	2888
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	40.191657	79196	3038
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rlt_4	40	23.948580	8362	1594	0.3.0.2.2.4.0.0.2.5.4	synth with cache (only 1: intros f1 a x X; only 1: elim (Rplus_ne 1); only 1: cut (0 < 1); only 1: rewrite Rplus_0_r; only 1: intros r n H'; only 1: elim (Rplus_ne 1); only 1: intro; only 1: intro; only 1: intros; only 1: Lra.lra; only 1: apply Rlt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	40	0.055316	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.192093	921	99	14.7	synth with cache (only 1: intros a0; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_mult	40	40.048258	13543	2696
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow	40	40.067652	20476	4225
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.035151	9	6	1.0.1	synth with cache (only 1: simpl; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_continuity	40	40.045590	12438	3506
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_cv	40	40.023299	6137	2545
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40	40.170714	70888	2689
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	40	1.590539	459	117	0.1.3.3.0	synth with cache (only 1: intro; only 1: intro; only 1: intros H1; only 1: repeat rewrite S_INR; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	8.848474	6225	248	59.12	synth with cache (only 1: intros; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	40	40.085929	32729	3190
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_abs	40	27.949902	8580	1548	0.4.0.1.18.1	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: simpl; only 1: ring; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40	40.071642	14520	1064
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	40	40.207461	85594	3055
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40	40.106873	45370	294
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv	40	40.027758	7282	2481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	40.994809	27063	1363
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.102939	35834	3435
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.016363	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Wn_decreasing	40	40.075242	23377	2748
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dminus	40	40.042089	9713	4432
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.063085	19281	4788
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.div_eq_inv	40	0.016693	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.Rlist_P1	40	40.159034	64578	4290
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	40	40.094047	33823	3100
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	40	40.045677	16173	1388
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.095454	30885	7055
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.028565	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.057995	18600	3267
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.norm_correct	40	40.020489	5028	632
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.038777	11776	2588
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	40	40.088060	27781	4688
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.QSORaddon	40	40.043075	10200	4364
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	24.133228	19768	2778	1.0.9.0.9.5.0.9	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.096206	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C6	40	40.033991	8163	3867
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_lt	40	0.015741	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_pos	40	4.048356	2518	478	8.2.1.3.0	synth with cache (only 1: intros; only 1: left; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.915758	771	283	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_le	40	0.032643	6	4	0.2.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound	40	0.020974	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	40	0.016914	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.044161	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.080861	18111	4036
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.023983	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P3	40	40.135676	50254	5457
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_1	40	40.051129	12239	2889
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	40	0.216503	85	23	3.1.1.0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intro; only 1: unfold neighbourhood; only 1: intro; only 1: elim H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.060452	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_ge	40	1.156533	587	194	0.0.8.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.529401	125	72	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_ge	40	0.050807	13	9	0.2.1.0	synth with cache (only 1: intros r1 r2 H; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.081606	29171	3649
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.R0_fp_O	40	40.036183	7265	1829
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	3.804921	2257	526	18.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: now case Pos.compare).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_mult	40	40.073068	26335	2910
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.460876	4972	695
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_plus	40	40.059000	15226	3389
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.074005	9447	1588
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	40	40.065456	12328	1096
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2_cos2	40	40.063591	20441	3442
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.047554	15283	2268
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_cos	40	40.040117	10167	3805
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	1.364518	982	157	4.4.12	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	40.031795	5212	1985
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.790210	176	68	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.050881	15372	3072
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_sin	40	0.050135	6	4	0.0.2.0	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos_pos	40	40.061045	15183	3165
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40	40.081743	14803	4270
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	26.092671	15639	1605	0.0.13.0.8.14	synth with cache (only 1: intros a b H; only 1: destruct H; only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	0.391836	173	51	4.0.1.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zr	40	40.629870	8790	658
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_morph	40	40.073952	4907	654
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_inv	40	40.070881	10601	2814
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.042595	12900	3017
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40	40.139417	53104	3600
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.continuous_neq_0	40	40.095754	35287	3991
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	40	7.639547	963	42	0.0.41	synth with cache (only 1: split; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_opp	40	40.359509	23266	2422
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	40	40.101842	20347	2645
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.049365	15873	3782
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rdef_pow_add	40	40.044844	15077	2282
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	20.909811	7753	1350	8.13.0.6	synth with cache (only 1: revert q; only 1: unfold Pos.leb, Pos.le; only 1: intro m; only 1: now case Pos.compare).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	40	40.073631	21078	4413
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40	40.311118	40532	1587
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	40	40.039859	12416	3341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	40.062093	21295	984
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.051026	13322	2683
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40	40.051276	10988	6923
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	40	40.149814	59599	1825
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40	40.104516	38906	2647
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	40	40.031541	9054	2798
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.062897	21888	2831
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.075037	24034	3079
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0.006223	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	40.125304	48839	2860
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	40	40.086758	30737	2842
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.284107	19	7	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.008148	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.124974	51015	1128
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx_pow_n	40	40.071175	20543	5312
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_div	40	40.053878	16762	3633
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P0	40	40.074396	24563	2906
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.decomp_sum	40	40.059572	20543	2478
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	40	40.062414	20523	2923
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	40	40.145715	14733	2666
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40	40.029709	8125	761
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P6	40	40.048584	17087	2229
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_true	40	40.119604	47578	2398
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	40	40.114882	37978	5064
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_lt_succ	40	4.088737	1575	241	2.3.14	synth with cache (only 1: inversion 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_decreasing	40	40.142089	29022	3241
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.054766	17628	3368
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P5	40	40.127162	45248	6351
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.068657	23116	2946
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.043353	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_le	40	40.060888	18175	2624
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_le	40	0.025190	9	4	1.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.042031	10497	3912
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	40	40.038820	12260	1866
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pow2	40	3.959164	1422	296	1.3.1.8	synth with cache (only 1: intros x; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.107988	18536	1788
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	20.567856	14159	1139	0.24.22	synth with cache (only 1: intro; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: discriminate || simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.049643	31	6	3.4	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.034903	27	5	7.0	synth with cache (only 1: intros; only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	40	13.058987	3851	1343	4.0.0.0.0.1.5	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.106860	21425	4184
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos2	40	40.059205	18443	2436
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	40	0.040447	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation	40	40.041872	12794	3031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40	40.076491	15198	2460
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.FQ_dense	40	40.019494	2547	1037
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40	40.037994	9131	3226
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos	40	40.058321	16344	2950
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_cos	40	40.047175	10047	3080
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos	40	40.028324	6217	3439
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.059579	16472	4491
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	40	40.057711	19606	2388
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40	40.126561	24798	1162
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40	41.633370	28702	2124
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	40	40.036697	11441	2070
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40	41.546468	71158	1774
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	40	40.060830	12387	339
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_minus	40	40.045301	12194	2848
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P5	40	40.055674	17133	1905
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	40	40.041935	13295	3185
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.R_power_theory	40	40.102044	39640	3357
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	40.079162	24963	4745
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Power_monotonic	40	40.077015	22943	3980
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	40	40.039282	12005	3094
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40	40.064585	19808	3035
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_tan	40	40.047718	13108	2116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40	40.067264	18149	7668
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_abs	40	14.687873	10039	1578	0.0.0.24.0.1.0	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: unfold Rabs; only 1: compute; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40	40.125856	52058	1078
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40	40.194776	25311	2496
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_1	40	40.027633	8877	1101
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40	40.088435	10807	2703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.055152	19017	2683
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	40.117561	46403	2503
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40	40.066608	21640	2629
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	40	40.071876	19699	2162
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	40.155190	62389	1509
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	40	40.070486	20961	4471
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dcomp	40	40.214306	17037	4033
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	40	40.072875	23030	3808
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_comm	40	40.103030	34072	2991
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40	40.023231	5948	1213
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P2	40	40.031244	8935	2680
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_false	40	40.080777	28854	2932
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift'	40	40.104563	34544	4267
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40	40.036526	12765	1250
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.increase_seq_transit	40	40.105545	41305	4310
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.081876	27186	5735
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40	40.051237	14861	3256
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.disc_P1	40	40.118376	40395	6006
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.Un_growing_shift	40	3.236590	2051	335	3.5.9.1	synth with cache (only 1: intro; only 1: intro; only 1: intros m H1; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.142361	34015	4804
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	40	40.054342	16148	4697
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_ge	40	0.023522	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_lt	40	0.026508	4	4	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.244187	43	18	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.174893	56	24	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_gt	40	0.114778	27	13	0.0.2	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le	40	0.015516	3	3	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge	40	0.023677	14	5	0.0.3	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le_sym	40	0.018681	4	3	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.013375	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	40	0.021235	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	40	40.044174	10660	5549
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	3.241883	744	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40	40.058653	16996	3710
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.026877	3	3	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40	40.120205	18466	2227
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.Zcri	40	21.399262	6995	395	51.0.6	synth with cache (only 1: intros a Ha; only 1: apply Ncring_initial.Zsth; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.230225	31412	3471
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	5.978500	4880	745	3.0.1.10.18	synth with cache (only 1: red; only 1: intros x y H'; only 1: intros; only 1: unfold opp_fct; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40	40.031896	5642	1185
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	40	40.082877	27895	3358
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	1.287794	92	65	5	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	40	40.046447	11245	4556
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	23.667507	20914	1368	6.0.0.0.24.26.5	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: easy; only 1: easy; only 1: first [ intuition congruence | auto ]; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.059850	19524	3634
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.042296	13254	2093
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	40.124242	1573	328
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.068574	20546	4564
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	40	40.086160	20384	3602
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.046135	11561	3296
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	40	0.297494	41	23	1.3.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40	40.043209	14050	3076
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.RQ_limit	40	40.118148	48976	2929
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_increasing	40	40.042045	12239	3286
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40	40.032130	8054	757
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40	40.133006	50952	4214
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.041990	13308	2323
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.factorDenom	40	14.879822	6778	1629	0.0.5.7.1.6	synth with cache (only 1: intros x y z; only 1: rewrite Qmult_comm; only 1: unfold Qeq, Qmult; only 1: rewrite Pos.mul_comm; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40	40.589308	35105	3012
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_inv	40	40.095081	36876	2673
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	3.980474	5093	661	2.2.1.20.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: auto; only 1: auto with ordered_type; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.maxN	40	40.047737	14908	3440
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.060718	20283	3613
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.RPow_abs	40	40.071875	20854	4243
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.038571	11076	2713
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_increasing_interv	40	40.069835	14096	2285
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	40.089212	21016	2757
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	0.241346	222	24	12	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40	40.031201	9624	1309
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	40	40.065470	15023	6411
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	40	40.084488	9113	1042
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_1	40	40.113771	4554	680
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.063439	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	40	40.244277	105814	2345
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.029338	9666	1292
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40	40.028018	6317	3216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.843611	313	92	3.0.0.0.2.0.3	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.024478	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	0.057985	14	7	6	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40	40.073468	27342	2005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.027248	4	4	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.037525	8	5	0.0.0.3.0	synth with cache (only 1: unfold to_Z; only 1: generalize digits_ne_1; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.261139	182	13	19	synth with cache (only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.006872	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0.006924	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_maj	40	40.119496	43460	4681
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	40.132706	55799	1661
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_plus	40	40.087965	30528	4699
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.032967	8895	2177
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.D_pow_n	40	40.047463	13624	3092
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	40	40.085948	30975	3237
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.087278	19117	8117
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_r	40	0.038474	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.035747	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_right	40	0.025987	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40	40.049782	15680	993
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P3	40	40.054518	19717	2749
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_m_Proper	40	40.039235	9188	4032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40	40.055429	21691	916
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.decrease_seq_transit	40	40.092941	33865	4541
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.exist_PI	40	40.045127	12195	2979
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P1	40	40.113453	23623	3178
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	40	40.098977	32852	4293
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_antisym	40	0.025538	4	3	1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_le_eq	40	0.084399	26	9	1.1	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.020650	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.199475	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.024753	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.044952	10792	2687
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	40	40.083091	21688	3643
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	40	40.050419	14937	2516
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	40	40.605183	20638	2330
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.negative_derivative	40	40.036006	8976	4047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40	40.040867	9812	840
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.012504	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.uniqueness_sum	40	40.086451	27731	3272
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.084517	19350	1986
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.minus_sum	40	0.154033	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_free	40	40.107568	35494	5316
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40	40.061937	17383	2581
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.066427	22365	3462
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_trans_rot	40	40.039322	9936	2602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	3.735421	1648	448	4.7.0.0.1.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	40.087388	16463	2899
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40	40.047490	13829	3714
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.046820	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	18.638674	49238	460	268	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.040218	9748	3970
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	40	40.042057	12769	3225
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40	40.332194	23492	1653
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_no_R0	40	2.972920	940	255	0.0.0.0.11.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	40	40.065289	21238	3063
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	29.346542	5323	2132	0.0.0.0.0.0.0.0.1.0.0.10.0	synth with cache (only 1: unfold Rgt; only 1: intro; only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: destruct (Rle_lt_dec 0 x); only 1: replace (x ^ 2) with (x * x) by field; only 1: apply Rmult_le_pos; only 1: auto; only 1: auto; only 1: replace (x ^ 2) with (- x * - x) by field; only 1: apply Rmult_le_pos; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.030151	3271	783
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.valid_le_compat	40	8.172336	7943	1102	5.0.2.4.7.0.0.10.0	synth with cache (only 1: intros x y z; only 1: destruct 1; only 1: intro E; only 1: trivial; only 1: constructor; only 1: Pos.Private_Tac.order; only 1: now f_equal; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40	40.655757	17792	1622
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.010167	3	2	0.1	synth with cache (only 1: intros n m; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.029053	2	2	0.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	40	40.043783	13785	3166
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40	40.043342	13802	2248
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_le_compat	40	4.942904	3644	549	0.1.0.4.5.6.0.2.2	synth with cache (only 1: intros x y H; only 1: simple destruct 1; only 1: trivial; only 1: right; only 1: intuition; only 1: Pos.Private_Tac.order || (right; Pos.Private_Tac.order) || (left; Pos.Private_Tac.order); only 1: eauto; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40	41.137784	30539	3326
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_div	40	40.039928	11125	1961
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40	40.721541	73889	4534
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.077100	10062	2894
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.051839	17131	3430
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.118436	40702	5895
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.050888	14337	3053
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40	40.260667	40370	2569
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.065116	16702	5874
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40	40.105514	32916	2214
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40	40.090746	31790	3247
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_base	40	0.012285	6	2	3.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_ne_zero	40	3.863132	1032	229	1.1.0.6.1.1	synth with cache (only 1: simple induction n; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_0	40	40.036607	12256	1885
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.151655	15127	1224
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40	40.029705	8549	2354
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.059137	21154	1886
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_min	40	40.075296	23527	5441
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.069302	26858	1328
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.059731	18757	4444
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	40	40.057726	16830	5040
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	40	40.086805	15961	3983
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.039175	10998	1887
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.030411	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.check_correct	40	40.021947	3975	1113
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.089735	33581	2549
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P4	40	40.022787	5281	2687
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.060209	19103	2888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40	40.460499	11503	1193
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40	40.101770	39852	3147
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	5.440864	1760	218	6.2.1.16	synth with cache (only 1: intros a; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_ineq	40	40.058741	20324	2028
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxRmult	40	5.081855	2316	471	1.1.1.1.1.1.7.2.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: do 2 (apply Rmax_case_strong; intro); only 1: case H0; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P2	40	40.164100	36549	5079
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	40	12.711156	9411	1434	0.0.7.18	synth with cache (only 1: intros m Hm; only 1: intros; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_trans	40	40.067658	20571	3526
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp2	40	40.049109	9395	2355
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_r	40	40.070288	24710	2820
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	40	40.139342	54841	3539
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	24.784289	4903	1936	17	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult	40	40.040774	9479	3905
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rappart_repr	40	40.107322	34579	4745
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.877634	2924	266	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_0	40	40.048100	14459	4014
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	1.151855	766	169	3.3.1.5.0	synth with cache (only 1: apply Vector.caseS; only 1: intros; only 1: destruct h; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_decomposition	40	40.062230	19165	2197
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_mul	40	40.052486	10884	4114
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40	40.104199	4794	1687
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI2	40	40.062167	16854	2879
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.069953	19818	3466
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.026640	7	3	0.4.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI4	40	40.067107	22320	2318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40	40.095666	39138	2794
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	41.538988	7403	1290
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_sin	40	40.085657	27427	3890
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40	40.165284	17376	1923
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_1	40	40.154673	29415	3812
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_r	40	12.536182	14437	1056	45	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.007410	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_l	40	0.008930	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_lower_bound	40	40.043568	13884	2254
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40	40.082914	27750	3323
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40	40.148854	41068	2558
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	40	40.047052	15374	2762
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.114786	40888	3443
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40	40.058757	3627	578
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	40	2.190856	2641	266	27	synth with cache (only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	40	41.304890	23616	2931
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_cv	40	40.054543	17101	4091
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor2	40	40.045515	14240	2823
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P1	40	0.049336	9	4	1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	40.634747	41024	5763
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40	40.046126	14434	3186
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_minus	40	32.897632	14711	4363	11.5.0.0.0.1.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40	2.389954	2144	289	5.0.4.0.3.4	synth with cache (only 1: intros; only 1: induction p; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: first [ intuition congruence | auto ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40	40.146178	54871	3468
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	40	40.088635	26651	6248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.083502	30318	2849
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.009231	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rinv_pow	40	40.077055	23722	3424
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_not_0_positive	40	40.072005	18388	2450
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	40	40.100969	22507	2837
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40	40.091047	30930	2057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.041368	7	6	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	4.515381	883	274	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_maj	40	40.063570	19217	5456
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P4	40	40.085190	29722	4344
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	2.304045	838	217	12.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40	40.025625	7339	2364
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	0.099893	14	5	1.0.3	synth with cache (only 1: intro f; only 1: intros f1 f2 X X0 x; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40	40.123064	21272	2262
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.066845	24811	2379
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P7	40	40.043245	12632	3429
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_N	40	40.056900	16892	3964
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qmult_integral	40	0.043628	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40	40.054366	20005	994
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.041964	10541	1213
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number	40	40.143448	61909	407
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	40	40.132891	50855	4111
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.125261	45540	5809
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	40	40.061443	18872	4494
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	40	0.133774	22	13	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.098738	33303	5531
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_trans	40	40.076005	23987	2968
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40	40.101021	38637	1589
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part1	40	40.047961	15806	2972
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_dicho	40	40.064563	18189	3341
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	40.125133	50286	2220
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	40	40.048056	13506	3512
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.407966	69	40	0.0.0.1.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.045882	361	133	5.0.1.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.148703	15	13	0.0.1.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_comm	40	40.133713	56310	3475
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	40	40.107491	22609	3674
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	40	21.184063	9812	2147	0.0.0.0.0.0.0.22.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.052185	17955	1469
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_Rle	40	40.070506	23041	2928
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.single_limit	40	40.084422	17522	2545
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40	40.738593	18295	945
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub	40	10.154107	2933	926	0.0.1.0.0.0.0.1.10	synth with cache (only 1: intros x y H; only 1: pattern x at 1; only 1: pattern x at 1; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intros Eq0; only 1: auto with real; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_RGT_0	40	40.037313	8988	4197
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.031984	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40	40.054996	15176	1978
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.005539	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.060278	19487	3661
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.116382	44510	2961
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	40	11.914934	10656	1393	9.2.1.6.6.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40	40.063871	12474	1210
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.155409	21714	2125
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40	40.069597	20686	5733
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_inv	40	40.059560	12539	3649
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.070446	23901	3162
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_3_2	40	40.051286	16211	2079
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	14.576206	11033	1013	0.0.4.1.1.0.0.2.23.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40	40.069319	23748	2389
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	8.047164	3666	847	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40	40.372013	23398	2036
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.009133	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.022580	1	1	0	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	40	40.074916	27073	3775
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40	40.250295	33721	2645
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	40	40.051316	17366	3420
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P2	40	40.214654	10352	2082
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40	40.051825	12190	970
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.682445	51683	4499
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_mult	40	40.062344	18475	5206
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.073952	23966	2797
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.179048	15843	2984
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.078023	20266	7025
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.095089	29758	5105
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.063765	22035	2772
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	40	40.233627	45721	3302
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	27.630417	12107	878	14.0.0.17.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	40.070221	20521	4557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.085356	22	10	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0.086910	27	6	6	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40	40.113796	41224	3760
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_opp	40	40.123976	35851	5177
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P5	40	40.076121	23823	4849
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40	40.698470	2940	1667
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40	40.023679	5760	2172
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40	40.080067	30089	3017
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40	40.054560	16046	3666
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P8	40	40.034517	9566	3467
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	40	40.048827	15543	2808
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40	40.059195	21289	1377
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.102245	31931	2521
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	40	40.313200	49035	1155
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	40	40.056073	15150	3698
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0.305255	350	20	26	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.009619	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rri	40	40.060653	20986	2573
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	40	40.077617	26245	3889
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.R_one_zero	40	0.015921	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part2	40	40.050251	12909	5790
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.continuity_seq	40	40.053389	15234	4454
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div_alt	40	40.084981	13075	3588
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.134601	57564	4186
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	40	40.046832	12373	5261
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40	40.034376	10464	2981
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	40.114023	41803	4007
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rsum_abs	40	40.057776	16558	3778
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_comp	40	40.053516	13697	4625
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	40.739871	15017	3681
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_4	40	40.082588	27247	4123
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	40	40.086507	25964	8082
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI4	40	40.061237	19914	3402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40	40.099392	35882	4237
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_const	40	25.184974	9327	2626	0.0.0.0.0.0.0.0.0.0.0.0.0.6.0.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: red; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_trans	40	40.169903	18935	3837
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_trans	40	0.171540	43	23	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40	40.057514	9991	5224
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_antisym	40	40.086895	24595	2971
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	40	40.042599	12632	3136
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_mult	40	40.067578	19326	5432
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40	40.121939	27077	2194
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	40	40.073626	25445	3286
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_1	40	40.041284	11282	2752
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_le_iff	40	0.312343	49	20	0.0.0.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: now subst; only 1: destruct 1; only 1: Z.order').
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.lt_le_iff	40	0.010741	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.161627	29488	5092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	40.041530	9036	1851
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	40	2.077113	1286	252	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40	40.033724	9999	1888
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	40.644806	18105	2477
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	40	40.044850	5646	2215
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_derivable	40	40.054674	17701	3314
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.053610	18398	3131
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40	40.037696	9686	1965
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_neq0	40	16.134374	5076	1007	0.0.0.2.12.10	synth with cache (only 1: apply Rlt_dichotomy_converse; only 1: unfold Rgt; only 1: right; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	40.674547	53273	3576
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_neg	40	7.719324	6240	796	3.7.1.11.4.1.0	synth with cache (only 1: intro n; only 1: split; only 1: intros H; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	40	40.102453	35889	2689
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.055910	15446	4512
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40	40.421436	24991	2386
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos	40	40.057532	19959	2158
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1	40	40.081058	26898	3175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	12.008432	2251	154	0.0.0.38	synth with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	3.602312	676	120	2.1.1.0.7.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	40	40.487725	23269	2090
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.075163	11094	973
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.059915	17995	3349
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	1.799861	1791	130	24.7	synth with cache (only 1: intro p; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.042220	18	6	0.0.6	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_min	40	40.098228	24887	6608
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	40	40.071964	21396	5509
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	2.536009	458	75	0.0.5.10	synth with cache (only 1: red; only 1: intuition; only 1: intuition_in; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	1.418084	57	24	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	40	40.088090	31346	3081
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.035813	10018	2033
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.591723	6469	2193
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40	40.020824	6379	1617
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_zero	40	40.033361	9547	2048
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P9	40	40.046293	16055	2605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40	40.116408	45723	1545
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40	40.113020	43755	2392
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.051884	13646	5137
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	4.167687	606	102	0.0.5.3.7	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intros; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.016616	2	2	0.0	synth with cache (only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0.009225	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.009946	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0.009758	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.restriction_family	40	40.092678	30606	5757
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40	40.091773	21487	1688
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	40	40.029938	9347	1027
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	40	40.107666	41482	3271
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.045475	9624	3981
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.086431	30318	4180
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.042443	9934	3585
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_opp_r	40	40.117729	50139	2327
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_ax	40	40.067476	23462	4157
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40	40.033975	7046	3435
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	40	40.063717	18700	3524
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40	40.210559	87906	4001
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.044045	18	5	0.1	synth with cache (only 1: intros n m Hn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_inv	40	40.059868	14738	4210
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.084933	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.193078	25278	408
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_neg	40	40.065720	16141	8149
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	40	40.053175	17112	3064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40	40.082873	27852	3604
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.141825	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_scal	40	40.099583	33914	5014
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.022983	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_growing	40	5.192887	3148	740	10.0.3.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_trans	40	40.096653	29984	4041
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.108574	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_0	40	40.094065	32340	2792
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_mult	40	40.042737	13096	2519
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.047661	14924	2876
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	40	40.060497	20843	2734
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	40	40.044802	14474	2176
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40	40.122625	33994	2610
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40	40.294455	70170	2577
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	40.064685	24140	2557
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_inv	40	9.353939	3146	1190	1.4.0.10	synth with cache (only 1: intros a b n Hn; only 1: apply continuity_pt_inv; only 1: auto with real; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	40.621854	36050	2176
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.732113	284	97	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	40	40.052668	17804	2911
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P4	40	40.048762	15689	2675
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.082201	1960	450
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI	40	40.062747	20498	3488
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.465408	19735	2843
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.114504	39922	2818
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	40	40.059201	16739	4252
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	2.064591	851	178	2.0.7.0.0.5	synth with cache (only 1: destruct x; only 1: intros x y H7; only 1: reflexivity; only 1: reflexivity; only 1: intros x y H7; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40	40.038350	6992	2840
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	7.144475	4807	469	7.5.18.0.6	synth with cache (only 1: intro n; only 1: unfold Same_set, Included, mkEns, In; only 1: repeat split; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.126626	8333	1508
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rsqr	40	40.045162	11434	4348
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	40	0.318923	50	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40	40.028411	8383	898
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	40	40.474324	36479	2455
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	40.053896	15050	1963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.050388	14565	3066
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_cv	40	40.092417	30414	5114
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	40	40.061360	17263	5215
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40	40.294615	5086	3618
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.081766	28359	3138
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40	40.180086	41252	1651
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40	40.018545	4354	1947
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2RpowerRZ	40	40.053760	14146	2651
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	0.704537	92	10	0.13	synth with cache (only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40	40.038482	10003	3199
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0.012359	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	6.485882	577	77	0.0.2.12	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl in *; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.021985	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	0.983262	219	42	0.0.8.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.083173	31353	1653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.112214	46563	1588
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.003950	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0.159730	437	23	29	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.076723	29089	2293
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	3.074131	1391	168	12.8.3	synth with cache (only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40	40.124113	22206	2335
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0.013289	17	2	8	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0.034866	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.046609	17	7	1.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0.099736	10	3	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0.107065	64	8	12	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	40	40.120551	41560	4887
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0.040233	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.068349	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.070372	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.334651	1028	161	6.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0.032823	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.019436	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.028652	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0.020521	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rdi	40	40.040258	11002	1985
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0.007107	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	40	40.070457	23705	2758
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.492658	30	11	0.0.0.6	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0.044093	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0.033129	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.837412	954	97	12.0.18	synth with cache (only 1: red; only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0.122754	12	5	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	40.841877	6758	647
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part2	40	40.049135	10367	4166
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_car	40	40.046841	12656	3027
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	40	40.124062	18434	4136
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	3.712655	961	103	0.23	synth with cache (only 1: symmetry; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.095467	36584	2975
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.085337	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv	40	40.028911	6123	3197
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0.216123	8	3	1.0.4	synth with cache (only 1: generalize (mem_iff s x); only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	40	40.032562	8383	3183
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.716193	20	5	0.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40	40.109224	16552	1791
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0.621960	20	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.085535	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40	40.157217	60961	3085
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40	40.725178	19932	3037
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.045076	26	8	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0.033927	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0.048177	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0.014661	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	1.132934	120	25	10	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.018506	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0.629710	14	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.108328	13755	4929
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.069499	21019	2619
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0.035332	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.026379	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.020654	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0.040826	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.045388	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.073767	25193	2624
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.094587	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0.035428	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.028352	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.457022	39	17	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0.049861	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0.043335	5	3	0.0.2	synth with cache (only 1: intro n; only 1: intros g_eq; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.060556	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	2.971239	2271	142	1.0.41	synth with cache (only 1: case_eq (Fin.eqb x y); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.094706	12091	1634
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.078490	24337	4999
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	1.230718	76	55	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.046735	12418	3855
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_Rinv	40	40.051371	16525	2455
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.050818	18314	1471
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.983416	45	21	1.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	28.452292	14207	3678	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	40.071280	27039	1259
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_is_inj	40	40.037750	11259	2575
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dec	40	2.723095	756	260	0.0.1.0.1.8	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_dec	40	0.080571	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	40	0.153983	5	3	1.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	40	0.182748	9	5	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	1.952106	171	130	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_dec	40	0.474890	48	22	0.4.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_dec	40	0.100424	5	3	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40	40.193339	59880	4466
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_dec	40	0.130937	5	3	2.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40	40.069976	19810	6250
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.780873	15	5	1	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_dec	40	0.394291	61	34	1.4.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.058418	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_or_ge	40	0.079069	27	15	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_or_lt	40	0.253926	33	14	0.2.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_or_gt	40	0.099504	35	20	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40	40.103954	38720	3260
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_l	40	4.682470	1351	591	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_div	40	40.061376	18446	5013
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qred_abs	40	40.140776	34814	2427
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_r	40	2.120189	626	277	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	40	40.030171	8863	2360
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P5	40	40.040555	13005	2611
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI	40	40.051557	8053	2534
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zsor	40	40.064344	19773	2836
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40	40.112395	39615	2986
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40	40.040855	5669	1564
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40	40.379321	15819	1490
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power	40	40.247650	12085	1753
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.670548	18350	2896
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_even	40	40.043269	12453	2811
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.047028	6967	1128
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	40	40.256608	56703	3874
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40	40.050404	12766	4884
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_asym	40	40.572272	25224	1857
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_cv	40	40.116816	45400	2954
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	40	40.045397	13372	2936
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40	40.051631	15346	2949
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower0	40	40.033924	8904	1500
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40	40.046883	13749	2233
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	40.012203	2521	1352
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40	40.616683	3267	1524
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40	40.055894	16777	2293
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40	40.075864	29178	1916
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.409385	49	18	0.0.4.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40	40.086494	30679	2652
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.072211	26758	2222
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	40	40.126793	44880	5548
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.063366	21421	2551
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qri	40	40.086636	28218	1507
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Q_one_zero	40	0.016013	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	40.056891	15539	1186
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	0.097357	41	14	2.4.0	synth with cache (only 1: destruct m; only 1: easy; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	40.488136	20535	723
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.036984	9955	3071
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.053535	12360	4333
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_comm	40	40.125748	49130	3024
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_var	40	40.027894	6080	3213
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.044847	12513	3136
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.118186	43642	3854
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.030633	12	4	1.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	40.276342	2524	481
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0.069558	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0.061452	1	1	0	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.101981	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.089243	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	11.525309	7351	824	4.13.0.3.13	synth with cache (only 1: intros A l; only 1: red; only 1: zify; only 1: f_equal; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R0	40	40.156124	41888	1327
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	32.215815	2671	1963	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI6	40	40.061259	20076	1857
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40	40.187048	75250	3970
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	40.245839	22510	1133
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0.091054	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0.108900	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.483153	19	5	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cauchy_abs	40	40.094671	34255	4706
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.296315	5	3	0.1.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.076476	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_0	40	40.070810	19928	3625
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_continue	40	40.040753	12730	3235
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.077719	21876	4179
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.078536	27408	2943
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.043164	9801	2236
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40	40.218482	63323	2183
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	40	40.311630	149457	812
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	40.058455	17769	3318
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	9.904361	412	104	0.2.2	synth with cache (only 1: generalize (mem_iff s x); only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.077148	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	40	40.235165	28121	2916
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_comp	40	40.050320	13519	4025
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0.951765	80	16	0.0.0.10	synth with cache (only 1: split; only 1: intros; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_canon	40	40.157304	55038	1914
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40	11.417953	1150	919	0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_opp	40	40.063151	17950	2735
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	40	40.030750	8536	2601
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.038237	11750	2560
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_bound	40	40.027446	5642	3334
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZSORaddon	40	40.409191	12853	2887
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	40	40.086168	26793	3663
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.037372	11139	729
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_opp	40	7.009628	3179	955	0.0.1.0.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0.0.2.1	synth with cache (only 1: destruct a, b; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.156168	14282	2486
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_positive	40	40.281585	12340	1611
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_odd	40	40.056471	15447	3413
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	40.697284	32854	4531
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.040495	11761	2049
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40	40.077315	26671	2771
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.053202	14523	4215
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cond_eq	40	40.099309	21020	3608
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	40	0.008279	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	40	40.059285	19392	589
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	40	40.080322	28112	3936
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_proper	40	42.183204	8026	1260
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	40.044080	12594	1962
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	40	40.018802	4061	1672
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.079297	24318	4227
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40	40.047374	14247	2390
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.929460	12924	2136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40	40.072147	23077	2611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40	40.108748	41359	4111
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	40	4.460962	4234	395	19.0.25	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	40	40.088463	31923	3408
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P1	40	40.287533	43123	4165
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40	40.044510	12336	1870
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	40	40.027333	7330	581
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40	40.041166	6452	623
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40	40.809375	5078	616
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	40	40.063299	21944	3829
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZNpower	40	15.933476	4378	1707	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	40	40.050659	13996	4011
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	12.884269	3598	619	10.3.1.0.1.1.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	0.925755	135	73	0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_assoc	40	40.083309	15004	2117
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF	40	40.056515	16914	4099
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.037852	9233	3241
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_exp	40	0.034702	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	9.597029	13859	624	7.0.13.18.0.81	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40	40.043506	13994	1750
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.298649	143	17	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.009813	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.007089	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.011765	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.707639	69	51	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.323661	68	12	7.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	40	13.054345	2940	1093	2.0.0.2.2.4	synth with cache (only 1: intro H1; only 1: intro; only 1: intro H10; only 1: intros; only 1: unfold Rdiv; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.748056	65	49	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.007429	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40	40.094452	30418	2582
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R1	40	40.142697	26976	3035
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI6	40	40.043638	12455	3268
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.137626	52805	2710
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	5.752267	2239	544	1.0.0.0.0.0.0.0.2.0.0.0.2.0	synth with cache (only 1: destruct z; only 1: intros Hn; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: intros; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.051783	15414	4203
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	40.253333	7027	2446
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.087620	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: intuition; only 1: do 2 rewrite F.union_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.063727	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0.092178	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_plus	40	40.054257	15491	3672
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.231285	12	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	40	40.097162	30287	5212
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zmult_power	40	40.055810	23084	1177
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.051326	14399	3342
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40	40.103237	8467	4075
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.inser_trans_R	40	40.056459	9375	1609
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40	40.657493	12773	1182
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step1	40	40.038751	11120	2645
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.058617	4197	768
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.612592	62343	2508
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	6.218990	1422	104	0.1.1.31	synth with cache (only 1: intro y; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0.126464	53	9	2.8	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40	40.657551	5012	4382
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.020651	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.774578	23	6	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.012146	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	3.031648	1018	347	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.110263	9867	2700
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.037265	11390	2940
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	1.885899	429	96	3.1.0.2.1.0.0.6	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	3.537311	531	95	3.0.6.5	synth with cache (only 1: split; only 1: intros H; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.043760	12486	3250
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r	40	8.861930	686	145	0.3.0.0.6	synth with cache (only 1: intros a0; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.066223	17511	2234
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40	40.017978	3649	2018
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ne	40	0.412415	24	13	0.0.0.1.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_l	40	0.246465	7	5	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn	40	40.091296	23095	1367
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power	40	40.067518	18666	1352
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.051166	4237	1685
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_abs	40	40.084339	21888	4574
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.631077	23990	2474
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	10.040333	461	80	0.0.3.0.1.9	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intros; only 1: rewrite union_spec; only 1: rewrite remove_spec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0.024590	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0.024774	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.045088	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.057397	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0.043674	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0.056842	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.054021	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.078939	2	2	0.0	synth with cache (only 1: rewrite union_spec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	40	40.039254	4777	1749
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0.063592	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0.056026	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0.095111	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40	40.063229	19848	2553
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0.078341	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0.414889	18	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_maj	40	40.145508	53387	4958
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QSORaddon	40	40.031426	7853	826
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P10	40	40.077672	24592	6201
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	0.832279	866	97	2.6.17	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	40	0.016771	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.096402	38750	1664
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40	40.175310	21997	2328
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_formula_compat	40	40.478663	39813	3149
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.682028	1216	79	40	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.264773	112746	3478
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_case	40	40.155526	61262	3167
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.154512	58939	3534
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	6.963045	947	50	0.0.5.34	synth with cache (only 1: intro n; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_lt_trans	40	41.579697	18016	1340
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	31.188496	2691	2030	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0.735707	51	10	0.0.9	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P2	40	40.050782	12290	4977
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.081214	27009	2747
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qdi	40	40.036112	9442	866
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Z_one_zero	40	0.041627	4	2	0.2	synth with cache (only 1: intro EQ; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zcri	40	0.022867	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qopp_lt_compat	40	40.174734	30075	2863
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.065251	19868	2975
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	40	40.457625	32527	2422
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT_cor	40	40.059894	18079	3100
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_Z	40	2.028088	922	127	5.0.13	synth with cache (only 1: simpl; only 1: intros; only 1: apply Z.div_1_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.129310	53458	1641
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.041668	10014	4363
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40	40.132876	7978	991
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rinv_l	40	40.051273	18923	1546
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF_var	40	40.062667	19932	4221
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.048450	15860	3236
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_sinh	40	0.032927	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_exp	40	2.699630	1945	335	0.1.15	synth with cache (only 1: intro H5; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	40	40.060921	19516	2827
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	40	0.090061	21	10	1.0.5	synth with cache (only 1: intro eps; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.391957	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40	40.046024	15071	1568
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.081449	5767	2005
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.064303	21326	4303
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	10.354976	614	153	1.2.0.9.1	synth with cache (only 1: intuition; only 1: split; only 1: rewrite inter_spec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.280240	121548	3800
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0.728690	29	11	0.5	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.037659	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0.042249	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0.023839	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0.024976	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0.040580	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0.047489	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.072017	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.028303	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.047426	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0.094075	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0.095542	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	40.082755	26163	1769
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_2	40	40.141934	53543	5339
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult	40	40.059917	19899	2414
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_le	40	40.092597	25710	6860
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.057008	22396	1368
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	40	40.062925	20853	2616
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inv	40	1.657902	531	182	0.0.4.4	synth with cache (only 1: intros r b; only 1: unfold Rsqr; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	40.060278	7134	3719
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.051214	14989	4453
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_pos	40	40.154530	20728	1587
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.034051	8	5	0.2.1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: intro y; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.125881	9	5	1.1.0.2	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity	40	40.140089	25703	1838
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0.112339	118	30	8.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ub_opp	40	5.834866	2783	352	21.3	synth with cache (only 1: intro; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_opp_lt	40	0.029841	4	2	2.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	40	40.067991	22808	2368
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40	41.290615	52387	2948
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.035504	9753	2884
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	40.746890	12101	1803
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	40.028888	2286	418
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_cos	40	40.052130	15359	2993
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.753738	6	3	0.1.2	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.733171	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	0.008210	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	0.048847	16	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.098715	33061	3737
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.039533	11905	1985
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.035329	9	4	1.3.0	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.031251	16	5	1.3.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	40.030589	8153	2066
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn2	40	40.056216	20676	1155
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qdiv_power	40	40.086999	12965	2184
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40	40.161952	16944	2342
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	40	40.102738	20234	3332
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.704611	24072	2918
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	5.821090	324	87	1.1.1.1.6	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intuition; only 1: clear H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.024311	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.035505	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40	40.044317	10247	3887
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0.046546	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0.045025	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0.046488	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.082378	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0.056701	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	0.093592	14	3	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.083699	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	40	40.076140	11978	3926
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.058959	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0.082532	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0.099182	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0.416626	17	4	0.6	synth with cache (only 1: intros m; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P11	40	40.061611	21103	2816
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_compat	40	40.132145	14695	1339
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_nformula_dec	40	40.184780	21162	1974
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	40.086560	33758	3434
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.039613	10788	2756
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.073929	12071	1218
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_wd_Proper	40	40.127449	22619	2194
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.363077	131	47	0.8.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40	40.311125	140868	2820
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.499171	323	50	1.0.10	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	39.223670	4476	3227	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_pos	40	1.905490	693	160	4.0.0.3.1.2.0.1.1	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: ring; only 1: simpl; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_neg	40	0.147255	35	21	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	6.429126	685	94	3.4.0.4.15	synth with cache (only 1: intros EQ; only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	40	40.902388	12791	1281
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	40	40.188504	77248	4359
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zdi	40	40.037782	7751	760
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40	40.064686	19201	2768
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	40	40.089662	32515	3497
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_Z	40	40.130439	42279	3615
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	40	40.514250	29641	4075
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.130729	49183	2335
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	40	40.239095	7909	2623
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.059993	21762	1247
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_loc	40	40.058665	18347	3880
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.063410	2295	677
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_nonneg	40	7.660847	3109	376	0.0.0.0.14.12	synth with cache (only 1: intros (c, Hc); only 1: simpl; only 1: unfold Qle in *; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Zabs_Qabs	40	0.043439	13	5	1.2.1	synth with cache (only 1: intros p Hp; only 1: simpl; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40	40.052796	9822	2816
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.sinh_lt	40	40.049561	15271	3635
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	40.076905	29698	1757
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left	40	40.057221	12269	5740
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI3	40	40.070244	24271	2054
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.131465	49627	4029
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	40.050896	1794	656
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	40.089795	30961	3365
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.050228	9	8	1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.659323	28686	4491
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0.406311	18	6	0.0.6	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq_R0	40	40.125932	22925	2916
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	0.494478	166	37	0.1.7.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: red; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.399483	53	12	0.0.8	synth with cache (only 1: intro Streicher_K; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_O	40	40.047603	10989	2497
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40	40.061595	21233	1263
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.038918	11446	1764
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.108053	9582	4132
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40	19.893110	3041	1917	0.0.1.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.025438	6	3	0.0.3	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with fset).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step3	40	40.053755	16691	3835
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_neg	40	40.057194	12955	6585
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity2	40	40.084169	22484	3476
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.036412	8	5	0.2.1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: intro y; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	40.205524	44245	3235
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.125650	9	5	1.1.0.2	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.029695	26	8	2.3.1	synth with cache (only 1: split; only 1: split; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tech_opp_tan	40	40.054323	16936	3197
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	40	40.079567	29583	2299
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P9	40	40.036783	11750	2587
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40	40.230040	20967	2206
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_cos	40	40.058922	18764	2771
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.059339	16255	1766
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	0.008417	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40	40.180358	69813	3499
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	40	40.113315	41755	2809
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40	40.018260	4904	1104
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos	40	40.071134	21176	4383
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_n	40	40.049139	15223	2465
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_incr	40	40.069359	19405	5194
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40	40.089359	6788	2912
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_nonneg	40	9.540798	6656	534	0.1.0.0.6.7.9.46	synth with cache (only 1: eapply Qle_trans; only 1: auto with *; only 1: apply Qle_minus_iff; only 1: simpl; only 1: rewrite <- Qle_minus_iff; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.722474	21693	3056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40	40.050413	14074	3560
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	13.365982	8480	980	1.22.7	synth with cache (only 1: intros Ha Eq; only 1: Ndec.eqb2eq; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0.007789	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	40	40.088930	20480	4237
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P12	40	40.082628	29116	3666
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.091204	26081	2179
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.052946	15546	2778
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40	40.060338	19101	3901
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.245403	30675	3655
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_opp	40	30.403978	15318	2853	13.1.0.9	synth with cache (only 1: red; only 1: simpl; only 1: intros (n, d); only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_right	40	28.404927	14735	3055	0.0.0.0.3.0.1.11.4	synth with cache (only 1: intro; only 1: intros E0; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intros H; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 H); only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.033480	4456	959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	6.072988	2245	435	7.0.1.0.13.0.0.0.2	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with *; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40	40.146311	58530	4721
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	40.035220	2358	1684
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.309743	10	5	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_eqDom	40	40.089699	21761	5898
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.542507	109	49	0.8	synth with cache (only 1: intros H3; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0.045915	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_trans	40	40.819881	19137	1688
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0.037240	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0.025539	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0.024977	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0.044149	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0.058373	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0.057770	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0.028777	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	40.108447	34532	4176
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0.193847	8	3	2.0.3	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0.092561	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	40	40.083264	22065	4442
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	40	40.142846	18097	1637
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	40	40.545944	35962	2936
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40	40.166907	67808	2808
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.057235	11128	4044
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.R1_neq_R0	40	40.143184	64435	1630
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.060091	20452	3962
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.026819	3269	354
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.070084	26625	1815
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.052793	16465	2716
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.086428	15612	1695
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	9.978944	546	305	1.0.7	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	40.084926	28040	4376
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0.248385	8	4	0.2.1.1	synth with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40	40.197330	67917	5632
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.306207	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_incr	40	40.087977	28486	4333
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	40.034511	3881	517
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_1	40	40.046362	14520	2564
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40	40.077392	28055	2216
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	2.004080	504	103	0.0.3.2.11	synth with cache (only 1: constructor; only 1: fsetdec; only 1: generalize (F.mem_iff s x); only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq	40	40.076241	22241	5384
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	4.617240	1936	431	0.0.0.3.0.0.0.0.0.1.0.0.1.2	synth with cache (only 1: destruct z; only 1: intros Hb; only 1: simpl; only 1: easy; only 1: destruct p; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: auto; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40	40.158657	34697	2900
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_limite	40	40.079159	16220	3978
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	22.246864	7839	1155	0.20.4.1.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	40	40.119447	30124	3076
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40	40.288816	87347	6000
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40	40.200252	32771	2895
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pre_atan	40	40.042495	10178	2358
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	40	40.051062	16463	2889
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.053167	19285	2877
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40	40.123367	14029	2263
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	0.574944	618	70	1.0.12.9	synth with cache (only 1: intro; only 1: rewrite H; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_plus	40	40.052277	15884	3157
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40	40.164930	49225	4535
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.075852	22659	3873
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.073410	19693	6030
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.058387	13367	3124
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.169885	27	21	0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: Z.order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.078336	16	6	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.136011	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus_positive	40	40.073483	22925	4575
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.158389	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1_Rle	40	40.066431	18697	4531
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40	40.276119	12268	2340
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.210348	57632	4198
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsrt	40	40.158588	8799	3179
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40	40.047043	12397	3244
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.787848	109891	2172
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.213626	47194	3606
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	40	40.160649	33549	4268
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P13	40	40.063137	19869	3431
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	4.592047	860	548	0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: apply H0; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P14	40	1.093665	642	137	1.8.0.3	synth with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.448644	44848	3456
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40	40.061689	17806	3735
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RTautoChecker_sound	40	40.403627	31623	3013
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40	40.046154	13936	2511
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.108430	18003	2865
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle	40	40.055158	15337	2420
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.070375	2370	236
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qmult	40	0.778789	319	91	1.3.2.0.1.0	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	4.812970	873	542	0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: apply H0; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40	40.681626	18754	2133
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.021116	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.020663	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.012435	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.279160	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P3	40	40.109817	30329	3608
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40	40.103515	13080	2942
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans	40	40.977190	11989	1062
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.096214	26010	3319
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	40	40.111738	12394	2827
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	40	40.570847	44241	3821
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_inj	40	40.039668	10167	3917
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	40	40.078900	28916	2435
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_abs	40	40.029697	6078	4065
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	40.020393	1852	399
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	9.773123	820	465	1.1.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40	40.032922	8034	143
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	40	40.050783	15488	2482
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_0	40	40.669442	27972	3534
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	40	40.213214	95457	1175
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40	40.564571	36460	3599
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cv_maj	40	40.124715	25352	4326
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	40	40.033251	9020	2726
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	40.025231	2953	1765
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	40.079381	30284	1682
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	40.021863	6105	1227
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.045792	14587	2494
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40	40.042828	10655	2950
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq	40	40.073828	24762	3660
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.383809	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.045801	13	6	0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.049863	15639	2126
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_is_canon	40	40.178237	55153	4433
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40	40.604607	11774	2045
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_bound	40	40.060526	13558	2536
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40	40.582059	42877	4163
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	40	40.047083	14667	3448
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40	40.182453	13123	2235
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.195322	63287	1130
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.103941	42426	3047
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_minus	40	40.053354	16192	3779
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	12.724346	8708	1165	1.1.1.1.0.0.24	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.766278	648	121	2.6.5	synth with cache (only 1: intros x y z H1 H2; only 1: inversion H1; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.352066	195	23	10.1	synth with cache (only 1: intros n; only 1: now BinInt.Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.210574	18	4	0.6	synth with cache (only 1: intros n m; only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	1.046524	574	142	13.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40	40.253889	83113	832
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.015057	3	2	1.0	synth with cache (only 1: intro; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0.009595	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	40	40.060636	20067	2906
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.055943	16136	2795
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_opp	40	40.147960	27731	3280
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Remainder_equiv	40	40.052027	16289	2842
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rle_pow	40	40.049751	12720	3689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	8.004272	5495	473	1.1.0.29	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle	40	40.089192	23017	2688
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsft	40	40.250327	10526	2008
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	40.051734	14197	3657
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.726537	29968	5275
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_cvabs	40	40.055520	16242	3985
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qpower_theory	40	2.076767	1188	75	2.0.0.0.0.40	synth with cache (only 1: constructor; only 1: destruct n; only 1: red; only 1: simpl; only 1: trivial; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	40	40.631987	28852	1583
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex1	40	0.006200	1	1	0	synth with cache (only 1: exact Qmult_plus_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	40	0.007696	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex3	40	0.425423	41	14	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.357026	61	21	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex4	40	0.006433	2	1	1	synth with cache (only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex5	40	0.009367	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	40	0.014834	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	40	0.042220	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex8	40	0.022413	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex9	40	0.019516	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P15	40	40.071066	21920	2638
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QWeakChecker_sound	40	40.987807	25139	1877
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40	40.074828	25141	3503
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40	40.039031	11541	1755
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos	40	40.082580	27429	4085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.064724	18632	3638
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_to	40	40.789356	98417	2685
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.076202	26277	2157
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	36.762305	10781	1310	0.0.0.3.1.6.1.18.1	synth with cache (only 1: intros m x; only 1: induction m; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: L.MX.elim_comp; only 1: auto; only 1: eauto with ordered_type; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	40.166150	28758	2277
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	0.025741	6	3	3.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	14.214630	12369	1611	0.3.5.0.24	synth with cache (only 1: intros a b; only 1: unfold eq, Equal; only 1: split; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.196542	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.008721	2	2	0.0	synth with cache (only 1: unfold In; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.014881	5	2	3.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	40	0.008637	6	1	5	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P4	40	40.123709	44740	5381
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	40	40.938752	19285	1352
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_floor_ceiling	40	40.171369	14933	1494
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.072166	17661	4742
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_sub	40	40.484119	38422	3109
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.059010	20972	1541
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	15.917634	5610	288	32.15.1	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_refl	40	4.267769	1634	224	0.0.3.0.0.3.13.0	synth with cache (only 1: intros; only 1: split; only 1: simpl_relation; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: simpl_relation; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	40.099426	4553	1932
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40	40.017593	2599	985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.055089	18018	3007
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	40	1.944163	414	99	0.0.3.0.5	synth with cache (only 1: destruct 1; only 1: destruct (CRltLinear R), p; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	40	40.044162	11851	2370
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_1	40	40.204720	49422	5028
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.130516	39398	2142
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	6.608610	2763	171	38.2	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	40	40.061316	20390	2757
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	40.022988	2071	1143
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	40	40.067824	22777	2746
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.038978	3721	749
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	40.087607	28358	3107
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40	40.066105	18559	4837
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	40	40.083397	24216	3948
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	8.733259	7142	284	65	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	0.015311	4	1	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	40	40.365759	18909	1526
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_decomp	40	40.175307	49135	3323
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	1.024750	549	40	27	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	40.113035	10340	1429
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	40	40.077605	15981	2759
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40	40.102780	16605	2011
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.282160	44	12	7.1	synth with cache (only 1: intros q1 q2 r1 r2 Hr1 Hr2 EQ; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	40	40.069762	24027	3788
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40	40.626804	42696	5068
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40	40.029285	8037	2588
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_plus	40	40.044526	13473	2797
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40	40.387813	10311	1446
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40	40.725476	120569	3249
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	1.597447	1222	216	21	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	40.077344	7478	3101
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_0_l	40	40.090494	13891	2751
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.061935	11	4	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40	40.641043	48293	2652
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_minus_positive	40	40.067248	13073	2587
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	40	40.104140	38146	1982
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	40	40.055753	14567	3869
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40	40.037241	7879	1585
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40	40.045817	11656	3138
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.224653	11686	1219
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	5.539522	4343	434	1.22.4.14.1	synth with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.177360	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40	40.057091	15900	3447
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_Cauchy	40	40.090078	30367	5303
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40	40.754478	45702	2494
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex10	40	40.094227	11221	2011
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_plus	40	0.072912	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_opp	40	0.035951	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	40.735655	76002	3863
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P16	40	40.072254	23908	3373
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QTautoChecker_sound	40	40.791733	37903	2269
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40	40.046221	13157	2852
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_abs	40	40.131207	20671	6247
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.028170	7	4	0.3.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.648948	14137	890
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qminus	40	40.131096	17192	1257
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.045624	10382	2025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_of	40	40.705918	33407	416
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_inj	40	0.025895	10	3	0.2	synth with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.693523	12709	2648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	31.992771	39590	1939	14.5.55.1	synth with cache (only 1: intros; only 1: inversion H; only 1: rewrite H1 in *; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	40	40.171285	25458	4369
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound	40	5.604053	18457	1589	0.44.3	synth with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P5	40	40.091029	27470	6217
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qlt_floor	40	40.040607	12639	2223
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less	40	40.037951	11824	2235
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.110768	37793	2702
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_add	40	40.471450	28557	2136
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40	40.019789	3220	635
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40	40.025042	2281	910
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_trans	40	40.431716	26786	2679
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	40	40.063390	21750	2283
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_r	40	40.250114	72579	3614
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.033300	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.018820	13	3	5	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.079304	27596	3142
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0.007633	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	0.011524	2	1	1	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0.012855	3	1	2	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.011455	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.014063	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.412476	24	13	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete	40	11.304399	31860	2321	0.34.6.13	synth with cache (only 1: intro x; only 1: intros; only 1: apply H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_sqrt	40	40.046259	8915	2564
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	40.026435	3178	816
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_mod	40	40.080826	30760	2879
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	40.029693	2786	666
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_to	40	40.383917	28997	4849
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_of	40	0.388446	182	52	0.1.8.1	synth with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: unfold N.to_uint, Pos.to_uint; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40	40.071946	23852	3071
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40	40.149104	46786	2907
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40	40.057728	18775	3967
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_involutive	40	40.117453	33678	4338
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	40.344449	10692	1169
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_opp	40	40.068758	13262	2124
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.801745	20595	282
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	40.093857	10952	1326
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	12.053456	8107	1234	0.20.0.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	40.689905	16915	2247
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.017133	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.094559	17157	2429
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.062820	20168	2481
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	40	40.052090	16489	3792
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.643398	59958	2229
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40	40.260836	11965	3450
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_R0	40	40.144702	14407	2085
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.190966	7570	1112
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	5.211768	1472	332	0.1.15	synth with cache (only 1: intros EQ; only 1: intros n'; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	4.598945	2165	335	0.24	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40	40.632554	53771	5489
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus	40	40.044462	10472	2215
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rabs	40	40.062749	16537	5391
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_unique_full	40	40.078750	24218	3779
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_unique_full	40	0.408597	150	36	0.0.0.0.7	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	1.277696	604	158	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r	40	2.047257	378	94	0.4.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_inv_r; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_l_sym	40	0.039170	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_sym	40	0.039825	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_r	40	0.042687	9	3	1.1	synth with cache (only 1: intros; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.053749	13286	2164
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.022420	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.115803	9924	577
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	14.776470	12400	982	4.27.1.1.1	synth with cache (only 1: intro n; only 1: split; only 1: now destruct n; only 1: intros Hb; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40	40.051970	14073	3313
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	40.562413	25938	4857
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.046758	12532	3772
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ne	40	3.528558	1666	511	2.0.8.7.10	synth with cache (only 1: unfold IZR, IPR; only 1: intro; only 1: intuition; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.174152	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.077794	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	5.681503	2854	418	2.0.22	synth with cache (only 1: intros x y H; only 1: rewrite add_spec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P17	40	40.078068	25657	4083
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	40.813840	75217	4679
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.682717	537	139	1.6.4	synth with cache (only 1: intros r1 r2 H H0; only 1: subst; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	40	0.697264	390	76	1.0.0.0.13	synth with cache (only 1: induction l; only 1: intros a0; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_le	40	40.056077	17289	2561
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.043474	12145	2729
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.040214	5	5	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40	40.038033	7756	1612
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qle_Qabs	40	40.092281	29333	3424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40	40.303961	49447	1658
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_surj	40	40.274506	52149	572
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40	40.716768	30520	4408
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0.017455	7	2	4.1	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0.009101	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	40.740891	40545	4163
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_carac	40	40.058812	14651	6478
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_lt	40	40.231974	11806	1952
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.057548	18470	3213
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	40	40.183741	35249	2498
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	10.827460	11629	1073	9.12.15	synth with cache (only 1: intro n; only 1: intros Ha Eq x IN; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.464429	28021	1905
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_int_norm	40	9.874605	4510	1160	5.4.11.0.0.1	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: generalize (DecimalPos.Unsigned.to_of d); only 1: simpl; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	40.024337	2311	884
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	40	40.038755	10553	3068
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	40	40.870140	19959	2439
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	0.715371	397	70	13.2	synth with cache (only 1: intros (x1, x2); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.017215	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	40	40.744671	16910	2545
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40	40.195310	50145	4421
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	40	40.478730	12647	2207
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	40	40.356957	10038	481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_inj	40	2.622655	1205	257	3.11.0.0	synth with cache (only 1: intros; only 1: rewrite <- !Unsigned.to_of; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	40	40.225114	81615	9307
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.048059	13850	2442
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40	40.088569	27807	4308
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40	40.058055	19596	2416
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	40.028033	2094	554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40	40.335794	47164	2910
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	40.207384	16543	2693
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	8.217428	17171	666	0.0.0.0.0.0.4.80	synth with cache (only 1: intros n; only 1: case n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	40.515691	31202	2316
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40	40.057354	18358	3417
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	40	40.080101	18276	2923
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.471763	4663	649
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.009203	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0.009657	1	1	0	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.008123	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.009397	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0.009923	1	1	0	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.059976	5	5	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_atan	40	40.037320	6272	2369
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40	40.204403	43532	723
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40	40.942755	5891	360
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a	40	40.061408	19679	2634
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.160589	9464	4151
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40	40.079225	20034	2622
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P9	40	40.056469	20226	2636
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40	41.020289	15377	1220
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40	40.184688	5529	755
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	40.650829	20409	2386
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.010324	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	40	40.064712	16384	5960
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus'	40	40.150685	9016	1882
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_pos	40	40.081364	28434	2466
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	1.033500	365	105	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40	40.625177	14122	2706
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	40	40.077153	12059	2179
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcle_Qcabs	40	40.261237	23279	4222
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40	40.042504	10228	3557
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Zcompare_spec	40	40.467597	30837	3639
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40	40.323201	108268	3369
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.128316	9	3	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.049905	73	11	10	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	40	40.042202	10465	4614
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40	40.604644	54292	3844
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.066557	18944	2869
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P19	40	40.083063	27888	4327
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40	40.020584	2638	723
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.195076	15608	3084
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40	40.036493	9993	2167
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40	40.044556	10671	1943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40	40.039114	7417	601
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	40	40.071052	17179	4747
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	2.989454	1203	354	0.0.0.1.0.0.3.6.1	synth with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.676709	6490	2618
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_compact	40	40.103351	36011	5153
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	40.699093	28907	1885
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_resp_le	40	40.242923	20323	3362
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_cauchy	40	40.190483	21377	3652
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	40	40.130196	36448	2504
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	40.066515	6876	770
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.091353	34067	2501
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.586025	29	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.480240	28	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.010430	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.014366	2	2	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.invert_heap	40	0.769484	709	88	0.5.3.11	synth with cache (only 1: intros l l1 l2; only 1: intros; only 1: inversion_clear H; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	40	40.041869	12463	3032
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	40.055112	16519	1757
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_complete	40	40.913995	30554	3916
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_0_r	40	41.468925	22026	1946
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.345708	25471	1992
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.949252	25279	3459
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.050136	6	6	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	40	40.435933	18398	3307
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.230974	86350	7665
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.062879	9348	2576
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40	40.212464	90882	1033
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	40	40.074177	22616	1472
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40	40.105535	37928	3625
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	6.206921	943	257	0.1.12	synth with cache (only 1: intros m H; only 1: destruct H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.019263	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40	40.039056	12511	2090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.405799	52731	3977
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.011093	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.065786	210	45	7.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.046699	11	8	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40	40.695942	29801	3683
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40	40.082195	28977	2423
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.065969	22229	3624
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.945966	281	31	12.1	synth with cache (only 1: intros l; only 1: now induction l).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qceq_alt	40	40.111358	30893	3364
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.014631	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_increasing	40	40.035678	9446	2853
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	40.410348	25089	1339
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcgt_alt	40	1.007631	590	126	1.2.1.11	synth with cache (only 1: unfold Pos.ge; only 1: destr_bool; only 1: symmetry; only 1: apply Z.gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_alt	40	0.026935	17	4	0.2	synth with cache (only 1: intros n m; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40	40.058916	23101	643
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	40.613638	2205	736
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.068769	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_cos	40	40.047443	13465	3032
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.109058	30889	2739
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40	40.159179	50883	1065
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40	40.649590	32535	2574
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	40	40.227232	9860	4290
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40	40.163408	35612	2991
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0.012221	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_sin	40	3.287719	768	231	0.0.4.0.0.1.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intro H1; only 1: rewrite double; only 1: rewrite <- H1; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	40.161905	40564	2717
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult_positive	40	40.113310	15286	2558
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_lt	40	40.069860	23861	2224
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	5.707077	326	55	16	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40	40.086658	33751	1109
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.133081	22480	3426
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40	40.041222	10259	2103
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.132950	10930	3313
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40	40.051945	15159	3348
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40	40.617380	38301	2137
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	40	9.960522	4797	794	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	4.509146	3756	333	8.27	synth with cache (only 1: intros n m H1 H2; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	40	40.062419	20143	3235
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.758402	14	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.106340	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P20	40	40.100112	36145	3600
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	40	40.102682	8687	1601
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P21	40	0.032507	15	4	0.1	synth with cache (only 1: intros n m H; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.772691	66700	4985
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	40.032805	2021	1047
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40	40.050065	14670	2394
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.072094	21631	3421
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.095788	3192	788
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qle_condition	40	40.049275	13335	2149
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	40.081379	26073	4307
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	40.695018	7060	4000
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.prolongement_C0	40	40.093994	30865	3657
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	40.724077	56232	3874
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.126299	141	28	1.9	synth with cache (only 1: intro a; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.102131	24596	2251
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.041745	12023	2893
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.044945	11441	1192
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.075713	22437	2256
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	40.070366	24281	2077
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	13.841473	1539	312	1.17.0	synth with cache (only 1: intros x y H a; only 1: intros n Hn; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rect	40	40.475136	42655	2565
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	40.052353	15966	2590
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.175649	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.413270	51	36	0.0.0.0.0.1.0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l; only 1: apply PI_RGT_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.290555	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_eq_iff	40	40.085812	22753	5295
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rec	40	1.950069	517	176	0.2.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_1_r	40	40.174368	24050	2592
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.329453	17236	2464
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.497407	28400	4039
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower	40	40.050641	14840	3253
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.101153	32534	4359
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_divide	40	40.045995	8341	452
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P22	40	20.099288	7424	1381	0.4.7.1.21	synth with cache (only 1: intros n H; only 1: case n; only 1: intuition; only 1: intros c Hc IH; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.188710	82247	2891
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40	40.109728	23859	3016
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	40	0.935657	242	96	3.1.1.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: simpl; only 1: intros n m p H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40	40.066519	20683	3318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.634934	40661	2933
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40	40.136600	51750	2401
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_derive	40	40.096578	33880	3107
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.627035	38222	3729
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_0	40	40.299274	21057	1706
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40	40.083010	17416	803
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.399178	17521	3412
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P11	40	40.037595	12271	2359
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40	40.653310	54642	3603
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40	40.766912	42383	3090
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	40	40.085578	32009	3790
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	40.120498	4852	3617
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	40	40.856637	21865	1631
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_2a	40	40.050118	15320	3000
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.081822	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_neg	40	0.045726	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult	40	40.052574	16606	2910
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.080969	27231	3715
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	40.847328	27251	3661
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.449568	407	70	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.036242	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	40.102547	34352	3451
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0.007495	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.096566	43	11	1.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	40	40.068035	21966	2469
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40	40.651887	28274	3497
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	41.061406	4064	485
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	40.273975	20203	2195
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40	40.045040	10796	3491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	0.043236	8	4	1.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.093170	32897	2723
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.032620	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	40.617984	41036	7661
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	40	40.137327	52197	4015
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral	40	40.088596	16057	2065
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40	40.683575	46704	7475
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.070273	24508	2075
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40	40.057179	11179	5879
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.062804	7328	2025
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.189044	1274	127	22	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	40	40.152234	10014	1156
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.148335	13266	1914
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	2.489215	987	209	12.5	synth with cache (only 1: intros a; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	40.680619	9123	1315
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.115645	24933	3651
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.200185	26610	3085
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.063425	19831	4178
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40	40.051504	16776	2440
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_comp_Proper	40	1.691234	491	180	1.2.1.0.0.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.561994	36608	3463
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR2	40	40.748025	45565	2389
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.018980	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	40.088920	9440	1799
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	40.151361	13035	1540
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.042986	12270	3310
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.low_trans	40	40.494412	27690	5591
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.994649	13143	2362
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	40	40.503602	8991	2664
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	40	40.234943	14000	1356
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	5.383697	2526	431	0.6.6.4	synth with cache (only 1: intros s s' H; only 1: intros a b; only 1: rewrite singleton_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	40	40.111923	24763	4816
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	11.977275	7325	1037	1.0.0.23.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_2	40	40.087925	30723	2979
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	40	1.844087	276	42	8.0.1	synth with cache (only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	2.325081	1539	147	0.29	synth with cache (only 1: intro n; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.080415	23844	4096
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.079971	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40	40.085570	31939	2508
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0.052866	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40	40.108469	36677	5415
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P24	40	40.098379	36223	4125
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40	40.025890	3170	1112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.024032	6	1	5	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.049012	5605	1943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_of	40	40.910002	34140	4126
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	40	40.053500	15835	4495
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40	40.185346	5408	1605
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_1	40	40.044334	12952	1880
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40	40.054503	17637	806
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40	40.396183	21033	1765
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	40.106926	36764	2237
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.026337	8	6	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.179423	42961	5801
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40	40.675658	81451	1434
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0.007592	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P12	40	40.058595	15267	2340
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0.019535	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	40	40.046335	12290	3843
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0.010097	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0.009059	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.009550	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.008245	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.006921	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0.007402	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0.086226	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.080822	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.007603	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0.010349	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.008692	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0.008847	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.008305	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0.028826	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0.008101	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0.008300	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	40	40.845842	37168	4485
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Zpower_Qpower	40	40.050972	16836	2822
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	40	40.716657	33498	1776
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.069945	24036	3038
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.978174	681	101	12.0.3	synth with cache (only 1: intros a b H; only 1: destruct H as [n maj]; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	40	18.074911	12076	1076	12.17.1.13.0.0.23	synth with cache (only 1: split; only 1: auto with datatypes; only 1: auto with datatypes; only 1: intros e l1 l2; only 1: intros; only 1: intuition; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Proper_instance_0	40	0.230516	47	18	0.2.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.048038	12357	2228
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.812058	23408	4651
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce	40	40.067664	20544	2861
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qsqr_nonneg	40	1.608195	547	151	2.0.0.0.1.5.3	synth with cache (only 1: simpl; only 1: intro n; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40	40.221888	14938	2977
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.718493	53314	3653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	40.059116	16607	3376
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.897736	4049	396
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_assoc	40	40.354882	35068	3938
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_ineq	40	40.070935	23306	4287
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40	40.630381	55542	3154
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	40	40.067029	16552	2571
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.150985	20	6	1.1	synth with cache (only 1: intros a n Ha; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.111531	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	2.410957	1312	294	0.0.12.4	synth with cache (only 1: intro H; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	40	0.677945	215	61	5.5	synth with cache (only 1: intros a m Hm; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.152418	26	10	3	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	0.019830	6	2	4.0	synth with cache (only 1: intros n m H; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40	40.661148	42218	4550
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40	40.244344	28039	1943
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40	40.079866	21575	4755
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40	40.046557	11718	3241
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.414277	319	50	1.9.2	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.209590	10	4	0.1.0	synth with cache (only 1: unfold create; only 1: intros m a b Ha Hb; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	4.672863	2483	451	4.12.2.7.0	synth with cache (only 1: split; only 1: intros; only 1: intuition; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.145572	25154	3555
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	9.887941	14473	936	0.44.2	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (empty_1 H)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.026619	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40	40.014869	1775	892
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	40.725284	10448	1483
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	40	40.694212	48391	3375
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.043169	11670	4517
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.226444	20887	2846
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.078208	23202	4562
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnormalise_correct	40	40.424094	15836	2151
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	40.271469	31712	2479
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.116231	45101	3340
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40	40.167584	22553	1953
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.442902	16801	3618
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40	40.293727	6398	1668
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40	40.160290	38738	4370
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	40	40.032404	8935	2894
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.063438	20505	1802
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	40	40.515530	38177	4243
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	40	40.069946	23372	3321
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_neg	40	26.010680	14241	1539	0.0.0.5.0.3.10.15	synth with cache (only 1: unfold tan; only 1: intros n; only 1: rewrite <- cos_sym; only 1: unfold Rdiv; only 1: rewrite sin_antisym; only 1: unfold sin; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40	40.105207	36273	5580
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P25	40	40.074286	24337	4701
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40	40.087010	17812	1688
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40	40.110460	12968	1397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40	40.991459	10849	1263
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous	40	40.122133	21688	4451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.900294	47399	2738
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.009876	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	40	40.805506	34656	2884
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.006998	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_atan	40	40.092699	11813	2755
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40	40.105987	36533	5185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40	40.109300	19397	1573
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.389298	24434	2162
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_complete	40	0.007397	1	1	0	synth with cache (only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_Pcompare	40	0.060477	19	8	0.4	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.021637	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.055811	18817	3329
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	40.143937	4121	2492
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0.008157	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0.007264	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	0.039018	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40	41.063221	29093	1805
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0.008260	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0.011092	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0.006942	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.006778	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0.006843	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.043886	12814	2615
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.515614	35667	5815
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P13	40	40.024855	5727	2854
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40	40.380140	28382	3530
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.merge	40	40.141048	48049	3279
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40	40.082419	25481	3648
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	2.702247	1350	257	0.7.0.0.6	synth with cache (only 1: intro LS'; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: exists x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_decomp	40	40.048207	10934	1981
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_null	40	40.066149	17909	6667
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40	40.050797	13753	3581
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40	40.190512	6206	503
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.139891	23973	946
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_opp	40	40.105363	36458	5574
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	14.694697	8328	1971	0.0.1.1.2.0.0.0.5.0.0.0.0.0.0.0.3	synth with cache (only 1: intro H; only 1: simpl; only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	40	40.061362	16639	2419
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.022528	2	2	0.0	synth with cache (only 1: intros r1 r2 H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.162659	40741	1213
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40	40.075155	16451	9165
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.016098	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0.010798	1	1	0	synth with cache (only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	40.073484	24340	785
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40	40.080744	23255	2655
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	40	40.053094	14707	3487
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40	40.614000	63061	4293
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	40	5.050182	575	313	7.1	synth with cache (only 1: intros m n p; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40	40.618342	15913	2217
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	4.743574	5734	851	6.1.3.17.2.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40	40.014528	1927	970
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40	40.129406	48278	3957
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40	40.710074	8436	4392
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0.008212	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	1.566856	256	51	10.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.233288	41511	5168
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_exists	40	40.095105	34365	4582
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.086017	4318	810
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.100952	21481	3408
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.035751	10	5	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.026471	8	3	0.3.2	synth with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_characterization	40	40.537889	22064	3395
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.577612	14484	2222
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	40.109365	14127	1611
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.837747	551	73	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.044535	12131	3719
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.095354	16	4	0.4	synth with cache (only 1: intros def_n0; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	1.293821	209	40	7.2	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40	40.480196	34535	2419
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.671145	253	68	4.7	synth with cache (only 1: intros a b q Ha Hb H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.655492	10022	1998
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.008225	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40	40.273503	21250	960
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.523799	33064	3292
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_imp	40	40.036806	10578	3166
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.158049	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40	40.235560	100128	694
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.prime_power_prime	40	40.083518	29608	3866
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_minus	40	40.043348	11691	2576
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40	40.065868	23052	2697
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_nil	40	41.120148	28600	3273
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P26	40	40.082372	29094	4551
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40	40.690362	24136	2702
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40	40.028445	5074	1032
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40	40.087048	19452	4656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	40.955197	78065	603
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	40	40.359036	26349	2541
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0.006364	1	1	0	synth with cache (only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40	40.040249	13512	1800
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40	40.114899	32969	5511
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	40	40.040466	10630	3155
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40	40.448361	8567	1021
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_Ncompare	40	40.641901	75716	2851
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.018578	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_complete	40	0.017394	2	1	1	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_exact_full	40	40.058806	20047	2379
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40	40.223483	8038	741
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40	40.745770	66981	3441
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.022519	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.034978	8714	3563
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_ltb_leb	40	40.831286	14443	2451
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40	40.055038	16603	2513
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	40	40.067545	23641	2177
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.058189	16764	3350
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.insert	40	41.047400	89928	3009
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40	40.230916	29083	2422
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40	40.443548	5980	353
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_infty	40	0.044893	25	7	1.0.1.2	synth with cache (only 1: destruct a; only 1: simpl; only 1: now try N.order'; only 1: now try N.order').
coq-tactician-stdlib.8.11.dev	Coq.NArith.NArith.TestOrder.test	40	0.008913	1	1	0	synth with cache (only 1: N.order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.126821	25314	1329
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_ineq	40	40.067041	10322	4627
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40	40.111827	16364	2348
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40	40.085998	23987	2464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40	40.267604	13124	2066
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40	40.055500	8455	1219
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	40	40.087798	28485	3960
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.223739	64561	5091
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	40	40.140882	59828	947
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40	40.629888	24284	3323
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40	40.673909	34614	3565
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40	40.058371	15040	1521
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.428729	102	41	0.2.0.0.0.2.0	synth with cache (only 1: split; only 1: intros; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.012660	2073	858
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	40.672657	11195	2784
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.091040	32369	3618
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	40	40.826104	69710	3371
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.archimed	40	40.441979	47783	1459
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.731572	7403	1100
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	40	40.433102	25013	5286
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_restrict	40	40.566630	36805	4297
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	40.872342	24244	4427
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.normalise_correct	40	40.407355	24964	3249
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.deg_rad	40	40.050851	14825	2760
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40	40.432312	29967	2409
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40	40.283069	21818	1717
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	40	41.102040	16662	3587
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	40	40.029540	7277	3151
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.110809	37979	3282
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_3PI2	40	40.045493	12087	2879
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.056259	17437	3036
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.127861	53486	952
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	40	11.302289	12108	1594	5.6.2.6.8.0	synth with cache (only 1: unfold included; only 1: intros A A_wd A0 AS; only 1: intros; only 1: intros del H9; only 1: unfold intersection_domain; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.481733	25885	4620
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P27	40	40.099421	37106	4224
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40	40.156590	31857	1455
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40	40.061622	20710	1782
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40	40.094339	34226	3519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	40	40.597379	48133	2207
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.043277	13033	2839
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40	40.103596	28973	3844
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.805784	26855	2488
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40	40.086131	31142	2210
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0.005967	1	1	0	synth with cache (only 1: apply Z.divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40	40.144447	20442	2539
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_true	40	40.711968	95924	3267
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	24.665705	15665	2456	0.0.0.4.2.0.0.0.9.7.0	synth with cache (only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	40	11.597014	12902	1552	0.0.18.0.5.10.0	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: simpl; only 1: rewrite H; only 1: elim H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	31.900434	35661	3481	52.1	synth with cache (only 1: intros n m H1 H2; only 1: Pos.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_le	40	40.084403	28469	2946
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	40.073461	5210	1906
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P15	40	40.116763	13528	2271
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.593159	45697	3614
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40	40.057862	15711	3122
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.217576	15720	2576
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40	40.850234	28320	4178
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40	40.060458	16054	4083
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40	40.242655	28094	2789
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40	40.021014	5871	509
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_zeros	40	40.596613	33840	4499
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.list_to_heap	40	41.326760	107129	1679
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_comm	40	40.141430	21035	1784
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	40	40.062886	8660	4541
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.467405	25065	1550
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40	40.068965	14524	3537
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40	40.076107	12393	1714
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.060680	16975	4488
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	9.413341	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.096722	32238	3202
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_compat	40	0.109337	23	9	2.0	synth with cache (only 1: intros x y H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0	40	0.020046	9	2	2	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40	40.611728	19019	1771
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	0.095508	57	13	5.4	synth with cache (only 1: intro a'; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	0.529152	439	58	4.12	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.149350	56632	4434
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40	40.590745	44206	4830
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	40	26.471340	33621	2744	1.33.15	synth with cache (only 1: intro y; only 1: apply permut_length_1; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0.290001	297	55	10.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40	40.019498	5325	931
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	40.718817	28409	4857
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.007451	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0.014318	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0.008664	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0.008686	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0.009433	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.008413	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0.009505	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	0.008860	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0.007223	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	2.561804	1638	187	19.19	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.088889	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.008063	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0.010079	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.009780	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	40	3.805873	2520	242	0.22.8	synth with cache (only 1: intros m Hm; only 1: subst; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.009543	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.007094	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.025805	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0.008032	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0.017847	6	3	3.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.167738	16	4	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.752885	21594	4690
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.representative_choice	40	40.664254	12382	1756
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.classical_definite_description	40	40.355789	124684	5871
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40	40.456198	19063	4035
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.028731	4	4	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnegate_correct	40	40.438003	7786	1258
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.917084	44266	4961
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.completeness	40	40.083380	25555	1322
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	40	40.927429	6618	1404
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.035802	7380	1978
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40	40.470490	31913	2658
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40	40.344098	14446	2728
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.028130	7006	2735
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	40	40.546885	16087	2469
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2PI	40	40.045715	12253	3417
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40	40.068275	18350	1821
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.118466	44751	3123
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P6	40	40.129064	39014	5308
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40	40.101324	40146	721
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.053494	15381	4257
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40	40.043673	16265	589
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40	40.096676	22350	5060
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_converging	40	40.037446	11431	2418
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	40	40.865122	21659	3414
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmult_one	40	40.514626	10448	1411
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40	40.103162	12446	1668
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	40	31.495679	27806	4124	0.4.0.0.0.0.0.0.7.0.2.4.0.0.0.2.1.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: intros m H; only 1: now destruct m; only 1: simpl; only 1: intros; only 1: injection H as [=<-]; only 1: destruct p; only 1: split; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40	44.852956	22300	357
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_false	40	40.578246	38691	3351
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40	40.172182	29122	3281
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P29	40	40.053877	17874	3019
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40	40.180261	63176	3951
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	40	40.110380	38412	4506
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	40.094773	16617	4190
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P16	40	40.048236	11892	2839
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40	40.266330	94626	2353
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40	40.065567	18765	3062
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	40	40.062494	21973	3092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40	40.045406	10742	4111
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40	40.852953	33754	3488
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.488378	40245	4849
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40	40.319534	12821	3707
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.heap_to_list	40	40.197817	85256	2325
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_involutive	40	40.164486	38737	4315
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.074333	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	40	40.088762	26536	4203
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_assoc	40	2.137447	882	183	6.1.0.3.0.1	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_l	40	0.633027	478	61	6.1.7	synth with cache (only 1: induction n; only 1: qc; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_r	40	0.587856	213	45	1.0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40	40.379020	22039	3428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40	40.048926	10463	3509
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.068310	21245	3981
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40	40.333945	5227	325
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.033880	7729	2068
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40	40.249216	58981	3924
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40	40.662797	53819	1823
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	40	41.015268	37289	3144
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.028539	9103	483
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.079581	27707	1967
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.052887	16801	1801
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.099829	17	5	1.2	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	40	40.225576	40671	3451
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.662238	2540	1068
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0.007846	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0.008145	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0.034130	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0.008697	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0.011202	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0.008422	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.007708	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0.008231	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	40	1.268622	379	81	1.11	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.020698	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	40	40.190861	67626	2863
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_opp_opp	40	0.417614	44	17	1.2	synth with cache (only 1: intros n m; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	40	40.504045	17496	3432
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.negate_correct	40	40.495234	25838	2616
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	41.098866	27330	2598
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	19.450242	35214	1631	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	40	40.912208	7438	1468
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40	40.024403	5051	2779
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	40.070047	18745	2008
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	40	40.030177	8377	3120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40	40.489560	26182	1708
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2PI	40	40.043046	11445	3269
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.102302	32663	4817
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	41.099099	12465	1764
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.342378	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.079789	25393	2551
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	40	8.592751	2475	677	6.11	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.023352	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_r	40	0.028921	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.019267	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr	40	0.019493	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	40	40.077655	26333	3859
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.077461	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40	40.087135	31069	3095
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	4.283819	4880	409	2.1.1.3.31	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.038620	9764	4089
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_indefinite_description	40	40.318422	116570	6006
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40	40.041904	9134	824
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.094082	24422	4093
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_01	40	40.030504	7991	2126
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.805530	22320	2703
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.058705	16962	4220
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_first_one	40	40.582010	41810	5152
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.singleton_choice	40	40.818541	14878	1893
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	40	40.083075	28479	2667
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.is_lub_u	40	9.027451	3416	710	3.5.3.6.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intro; only 1: intro A; only 1: intros n m Hn Hm (q, Hq) (r, Hr); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_eq	40	9.483470	3696	1093	1.10.0.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: unfold Rminus; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nodd_not_double	40	40.160133	46785	3934
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40	40.659903	20367	3709
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.051464	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	40	40.071516	22516	3283
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.210785	63220	1584
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.021562	2	1	1	synth with cache (only 1: now Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	40.072976	11143	4208
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	0.247946	85	26	0.8	synth with cache (only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.037122	12041	2707
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.070857	18537	5793
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.057680	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	40	40.192606	35304	3204
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40	40.062915	19363	3602
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	3.281895	1717	398	0.0.0.1.1.0.4.0.0.1	synth with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.771934	63909	2881
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40	40.174524	10005	5425
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40	40.820488	23136	4950
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.treesort	40	40.193895	37904	1845
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_prop	40	40.067314	22044	3461
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_l	40	40.141735	23397	1602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40	40.467788	47514	1825
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40	40.050603	9665	3714
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	40	40.666919	133273	4589
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40	40.054750	15896	3786
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40	40.054481	13470	2367
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	10.204624	2483	652	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40	40.802294	3110	360
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.676712	69464	2080
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.657468	134928	4704
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	40	40.577469	12907	1461
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length	40	40.976307	33974	4257
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.118623	27311	3021
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	40	40.918457	40504	4873
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.762544	9028	731
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.unique_choice	40	40.881939	52370	3202
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40	40.950596	19067	2702
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	40	40.042784	13375	2224
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40	40.869878	37166	3636
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	40.778633	95161	1783
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	40	36.086650	10481	2977	1.15.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	40	41.019441	7699	1378
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	40	1.866741	214	69	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40	40.071299	21662	2918
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.015044	1268	465
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	40.434990	52427	1702
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.078119	23821	3178
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.038356	9884	3119
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_opp	40	40.575413	14761	1872
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	0.422204	9	7	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	40.164258	19647	3053
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40	40.078797	24764	3399
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	40	40.114312	43118	4868
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	40.085996	11964	943
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	40	40.591528	123153	6422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.020014	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40	40.059575	9904	4504
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_opp	40	40.148884	16286	2408
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide	40	40.451712	13410	1774
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_idemp	40	40.112039	44247	2468
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	40	40.531077	81630	5176
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40	41.097053	40365	1948
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	40	40.142455	38046	4779
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq	40	40.094758	35240	2466
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod	40	1.969315	685	164	0.1.3.0.4.0.0	synth with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: rewrite Hc; only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	4.192439	1297	517	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.678822	92415	4051
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.591218	10238	658
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	40	40.110715	37131	4908
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	40.091371	11513	4812
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	40.218973	44009	4986
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P17	40	40.041363	13124	2495
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40	40.052292	15082	3035
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	40	40.048784	9223	1792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40	40.044326	11066	4040
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	39.395297	22743	1555	12.33.13.16	synth with cache (only 1: intro n; only 1: split; only 1: now destruct n as [| [| | ]| [| | ]]; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.725064	52126	4891
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40	40.556938	32999	3511
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	40	40.057199	16357	4549
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.121458	18005	1732
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_comm	40	0.871757	542	111	1.0.0.3.7.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40	40.081944	27688	3058
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.603812	38191	2026
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0.006692	1	1	0	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40	40.412002	25131	5333
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def1	40	40.074397	21064	5562
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40	40.078305	21918	3109
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40	40.378017	2618	287
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	40	40.116773	24677	5305
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.680516	66154	2840
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.functional_choice	40	40.885174	86313	4894
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.769319	62223	3333
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40	40.081515	27536	2699
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.548899	27303	3358
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.786403	143	85	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	40.173366	11348	2608
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	40.783589	32222	4586
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.528812	35393	3396
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.153591	42278	3412
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.586321	20827	2504
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	40	40.088727	32672	2378
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dpower	40	40.032649	9476	3029
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	40	40.600087	41379	3998
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40	5.354094	4087	645	0.7.7.4.2	synth with cache (only 1: intros l x e r; only 1: intros y' e'' eqky'; only 1: red; only 1: simpl; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40	40.689038	70835	2441
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.019393	2	2	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40	40.076497	26243	2302
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	40	0.008235	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.091276	30831	2614
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40	40.121353	31457	1865
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	40	40.056286	17217	2842
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	7.754643	2007	847	0.1.8.0.3	synth with cache (only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: destruct (fold_0 s' i f) as (l', (Hl', (Hl'1, Hl'2))); only 1: apply fold_1b; only 1: clear Hl2 Hl'2; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40	40.039119	3231	414
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_compare	40	40.668064	13854	1404
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_le	40	1.120506	159	55	1.2.3.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with *; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	26.562521	17515	1975	0.0.0.0.1.0.7.1.8.9	synth with cache (only 1: destruct x; only 1: intuition; only 1: right; only 1: split; only 1: easy; only 1: split; only 1: left; only 1: split; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	40	1.180490	210	65	2.2.4.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40	40.068876	21380	3005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.151264	15	12	3.0.0.0.0	synth with cache (only 1: revert n; only 1: intros; only 1: revert n; only 1: intros; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.128284	50157	2786
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40	40.066336	22389	3729
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	40	5.322793	2811	552	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40	40.072594	10237	338
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	40	40.258380	70383	5464
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0.008790	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	8.011842	1835	993	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	40	40.142379	14172	2514
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.Raw.to_N_of_pos	40	0.009088	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_comm	40	40.627259	52702	4759
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	37.810765	43519	3740	0.0.18.18.0.1.4	synth with cache (only 1: intros Ha; only 1: intros n; only 1: eqb2eq; only 1: intros H; only 1: contradict Ha; only 1: subst; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.068242	11966	2489
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40	40.086941	31664	2649
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_minus	40	0.021515	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	40	40.111569	40489	4883
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_eq_contra	40	0.083967	8	4	2.1.1.0	synth with cache (only 1: intros; only 1: red; only 1: intro; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq	40	0.168918	34	15	2.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq_right	40	0.031410	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	40	0.039146	13	4	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_dec	40	40.824897	35778	2457
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40	40.118965	33352	4979
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	40.809768	30823	699
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.033824	3	3	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_sgn	40	40.047450	12289	3741
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40	40.093210	12536	4793
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	40.205017	42035	3724
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P18	40	40.033967	10031	2486
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40	40.085328	25138	4586
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_lt_neq	40	3.900870	1531	400	17.0	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.052162	17894	2854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.043300	10261	4262
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.usu	40	40.138740	59581	618
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	40.233287	43666	301
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40	40.638987	52355	4668
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	3.477705	962	348	1.2.1.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.005258	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	25.756989	21172	2564	0.3.1.0.15.6.7.1	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: trivial; only 1: auto; only 1: simpl; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.032550	8	6	0.1.1.0.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.438436	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	10.952926	3841	1317	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.145900	18264	2436
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40	40.080311	16034	1653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	40	40.556001	33376	3467
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	40.609252	126711	5385
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	40	40.104212	22537	3320
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.102175	33562	5883
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40	40.073661	20155	2781
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	5.308574	1458	336	0.3.0.2.0.5.1	synth with cache (only 1: destruct x; only 1: intros n' (HPn', Hn'); only 1: qc; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.010940	3243	313
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	40	40.133788	43264	4958
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.993815	10599	1469
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropAnd	40	0.299146	1059	48	0.1.42	synth with cache (only 1: split; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropOr	40	0.737573	2129	112	5.5.49	synth with cache (only 1: split; only 1: intros A A_wd A0 AS; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropArrow	40	1.150488	1776	75	0.55	synth with cache (only 1: split; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	40	0.090804	2	2	0.0	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropNot	40	0.047912	31	12	0.0.0.6	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40	40.617002	5042	3317
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.306390	110	34	1.1.0.3.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40	40.088149	34492	3112
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.div_0_r_ext	40	40.733208	25273	3487
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_power	40	40.027852	7771	2607
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40	40.912857	16877	3289
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40	40.088134	28171	3065
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_unique	40	40.708002	19965	2930
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.621243	24705	2945
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	3.320745	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.046462	8	6	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_n0	40	31.671398	15052	3007	11.11.2.8	synth with cache (only 1: intros n; only 1: intuition; only 1: now subst; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40	40.286336	28176	2946
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_N_of_N	40	40.089615	21929	2693
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40	40.096886	33970	2181
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_period	40	40.037656	9677	2599
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40	40.388948	19190	3238
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.038319	10328	3677
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40	40.153533	59175	2405
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40	40.211654	32257	1538
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.811053	40184	850
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.047113	13297	3003
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1	40	40.027990	7699	2432
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_definite_description	40	40.606464	135743	4714
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.498636	15226	2156
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_N_of_N	40	40.541885	30733	1357
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_assoc	40	40.670238	50973	4829
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	40.638518	40663	3581
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1	40	40.066375	23460	719
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_l	40	0.619394	510	109	0.0.4.1.7	synth with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: unfold ni_min; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_r	40	0.033187	11	7	0.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_l	40	0.009295	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40	40.516081	31765	1976
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.411664	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40	40.058461	15383	5132
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_plus	40	40.066352	23102	2428
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	40.162090	17970	2564
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	40.057267	15118	3699
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	40.105222	20857	2438
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40	40.050187	12891	3824
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.042261	13795	2705
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	40	40.095331	16005	3187
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sus	40	40.154946	63073	2031
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.052104	12512	4870
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40	40.537384	14155	1716
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40	40.616625	52080	4823
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_injective	40	40.164622	31754	3944
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.300339	43787	6118
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.425263	13519	1445
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_nat	40	0.221402	114	19	6.7	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40	40.151392	15084	5061
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nbit0_neq	40	10.476078	5582	704	11.9.3.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intuition; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_eq	40	0.153301	22	7	2.0.4	synth with cache (only 1: intuition; only 1: eqb2eq; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_neq	40	0.114311	3	3	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_dec	40	40.475632	28547	1906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	38.474412	39802	630	3.1.0.1.1.3.1.0.1.1.0.0.200	synth with cache (only 1: compute; only 1: destruct d; only 1: trivial; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40	40.125831	25487	1857
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	5.217964	1401	539	2.2.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.147214	42505	4544
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod	40	40.754159	15883	3031
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxAbs	40	40.051870	13608	3920
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40	40.067580	10536	1824
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral	40	40.155888	19268	1828
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40	40.003878	437	295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	5.605941	1625	710	2.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	40.202395	47316	5151
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.532367	37027	3657
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	40.490826	65742	4758
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.010969	2	2	0.0	synth with cache (only 1: exists a1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	13.369268	6508	1328	0.14.0.0.0.0.0.1.1	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: now split; only 1: discriminate; only 1: now split; only 1: intros (EQ, EQ'); only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.038777	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.617002	5028	3081
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_max_spec	40	40.726192	24128	2463
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_min_spec	40	0.603731	138	24	7.1	synth with cache (only 1: intros n m; only 1: Z.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	40.074768	28771	2538
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	10.923570	8284	689	29.19	synth with cache (only 1: intros; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult_distr	40	40.050887	15115	3046
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40	40.072137	21243	2053
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	40.541568	13218	4064
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_approx	40	40.869507	16466	1781
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	40.711046	99701	1426
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.016808	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	40	40.046202	16869	1762
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.716963	20552	2336
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40	40.039442	8389	3325
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_Z_of_Z	40	40.591648	65186	776
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40	40.079854	23845	1482
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_shift	40	40.045914	11843	3456
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40	40.077724	24535	3260
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40	40.049608	11671	4824
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40	40.159634	61846	3018
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40	40.030723	7555	2785
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.758622	28614	3380
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.061092	20767	1622
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	40	40.127778	11412	2609
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_intro	40	0.307244	155	42	9.1	synth with cache (only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.022282	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.026914	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Z_of_of_Z	40	40.546479	50547	1776
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_Z_of_Z	40	40.559505	52557	850
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	40	40.048616	11428	1298
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_elim	40	2.853574	2524	271	21.0.0.0	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_involutive	40	0.037589	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40	40.216940	30554	2194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40	40.073156	21277	4813
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_refl	40	40.677608	69275	2534
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.077561	26756	2831
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.294854	64480	3300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40	40.163511	60979	3756
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40	40.083308	28359	2876
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_P1	40	40.066534	18100	2326
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	40	40.051544	15576	3232
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.849510	15514	2957
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.isi	40	40.135627	54656	2326
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40	40.111842	8605	4707
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.007853	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_antisym	40	5.726940	4169	585	7.1.4.2.3.7.0	synth with cache (only 1: intros x y; only 1: destruct x; only 1: intuition auto; BinInt.Z.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intro eq_rect_eq; only 1: inversion 1; only 1: rewrite ni_min_comm; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40	40.323380	9280	1936
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.429750	29959	2582
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_alt	40	0.040715	9	5	2.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.930032	304	110	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40	40.750883	50360	4506
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.653326	287	82	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Z	40	40.809511	14987	1729
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40	8.100468	3568	973	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.744789	240	93	2.1.1.0.0.1	synth with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.642362	221	89	4.1.0.1.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	40	40.579052	32034	2492
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_spec	40	40.603740	65733	2910
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.058727	19471	2403
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.choice	40	40.594653	85740	4880
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.695180	13859	4609
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.073767	21894	4428
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.014922	4	2	1.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.813717	29044	2714
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40	40.056370	12045	2082
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40	40.010012	2960	260
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral_l	40	40.167842	19218	2296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40	40.543726	17195	3489
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.042533	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.010450	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	40	40.528803	31648	4820
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.012057	4	2	2.0	synth with cache (only 1: intros a Ha; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	40	0.013317	4	2	2.0	synth with cache (only 1: intros a n; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40	40.881467	82008	2643
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40	40.761688	23987	667
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	40.842667	25711	3687
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.575138	3918	2720
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_r	40	5.368388	2310	426	6.1.3.6.0	synth with cache (only 1: unfold Q2Qc; only 1: intuition; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.111649	44840	3358
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40	40.404781	25558	4259
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rlt_Rpower_l	40	40.042366	13056	2760
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.685559	474	119	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40	40.068725	21605	3073
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	40	40.913781	10306	2318
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	3.032339	779	141	6.0.5.2	synth with cache (only 1: split; only 1: split; only 1: intros n' Hn'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.590536	37029	2462
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.018397	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.023118	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	41.089832	27882	1254
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	40	40.094534	26238	2719
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	40	40.412840	17421	1997
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	40	40.532904	25704	2254
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.521116	35977	3642
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.047227	9144	3578
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_shift	40	40.038991	8632	2728
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.020191	3	2	1.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin	40	0.353101	74	30	0.0.0.5.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.107624	10	10	1.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40	40.240474	34382	2814
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.eq_incl	40	0.028460	4	3	0.0.1	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.062514	19795	4108
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.361822	336	47	2.11	synth with cache (only 1: intros a n; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_le	40	0.010543	6	2	4.0	synth with cache (only 1: intros x y H; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	40.061143	19881	2829
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_lt	40	0.032982	18	5	3.0	synth with cache (only 1: intros; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.Zlt_le_add_1	40	0.380084	50	14	6.1	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40	40.087025	31270	2834
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.add_le	40	0.011714	5	2	3.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.mul_le	40	0.022545	8	4	0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.473477	30988	4131
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40	40.033072	5391	599
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan0_0	40	40.045847	13469	2648
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.507911	29082	2796
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.527352	27050	2709
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_distr	40	40.065189	6480	1384
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_inv_permute	40	0.037660	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus_l	40	40.048503	15878	2006
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.270730	42635	3904
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	4.086777	1429	181	1.5.16	synth with cache (only 1: intuition; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.088699	31687	1598
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40	40.054770	15221	3777
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P20	40	40.055102	20182	2257
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	40	40.058112	21029	2668
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40	44.729674	23433	370
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	40	1.639002	234	55	0.0.0.2.4.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_le	40	40.782133	21724	3185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.087986	28244	5420
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	40	40.158668	38545	3988
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40	40.591410	9208	2089
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qgt_alt	40	40.455327	35342	4045
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_alt	40	0.030041	19	5	6	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40	40.631396	34152	3942
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.228676	22344	2258
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.071182	19552	5213
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.793310	34441	1683
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	40	40.101050	24348	2985
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	40	40.199989	58882	3913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40	40.055725	15711	3050
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	26.912523	16515	1856	1.0.1.30.3	synth with cache (only 1: unfold permutation, meq; only 1: intros x y H; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	4.434515	3080	227	15.13.14	synth with cache (only 1: intros x y; only 1: intros H'; only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40	40.050326	9452	4848
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0.007772	1	1	0	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.075023	18340	5066
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	1.310810	266	81	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_ok	40	40.734079	25852	2930
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.454370	13947	1956
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	1.007814	181	48	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.048711	7898	2603
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003859	623	246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.568606	17975	2744
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	40	40.518832	21383	3364
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	6.056231	5477	284	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40	40.855924	20790	2034
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	4.902279	2334	354	8.0.1.12	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	2.083261	2091	192	39	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40	40.121582	13373	8353
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40	40.054066	18449	2073
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	40	40.358870	41755	5170
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower_l	40	40.070187	18008	2681
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.077764	22234	3008
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40	40.058026	16430	2183
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.151967	25975	2247
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.018086	2	2	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.024345	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40	40.100084	35705	3752
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40	41.066529	16222	3221
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	40	21.175776	4208	1845	0.0.0.4.6.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_decidable	40	40.840987	30517	2874
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	40	40.784058	11905	1914
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40	40.540747	19854	1988
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_pos_of_pos	40	40.512494	23496	1562
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40	40.094351	31303	2491
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN_bound	40	40.073913	22991	4168
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.826166	27130	874
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.636827	31546	2100
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40	40.067660	22134	4169
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40	40.091656	31740	3788
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40	40.029078	5309	2793
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	0.005771	2	1	1	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40	40.127372	51385	1243
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	40.832715	4891	297
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	40	40.051104	16361	2529
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_pos_of_pos	40	40.146179	45856	3016
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	8.219811	4413	270	27.5.9	synth with cache (only 1: intros x y H; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.516099	30473	2093
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.062564	19635	3373
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.318758	54457	3652
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.070554	21154	2937
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	5.450707	3544	286	19.3.5.7	synth with cache (only 1: intros x y H; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40	40.043093	9878	3754
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P21	40	40.048099	15397	2991
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40	40.028327	3904	1482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40	40.107849	37327	5426
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	40	40.247486	20087	2392
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40	40.858776	11768	1420
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_1	40	40.165367	50403	3463
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.051224	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qge_alt	40	40.734878	16673	2473
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40	40.205810	15287	2401
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	40.167212	27573	3530
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0.040166	15	4	4	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	0.086876	9	2	7	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40	40.747203	76610	3616
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40	40.073643	20283	4799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	20.823635	3664	724	1.1.9.10	synth with cache (only 1: intros Eqf Lef x y; only 1: compute; only 1: intros n m; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_exp	40	40.756997	7445	2127
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.007914	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0.013916	7	2	5.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nneq_elim	40	40.597112	24703	3491
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	40	40.503162	33415	1987
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.051548	11194	1528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.020703	6	3	3.0.0	synth with cache (only 1: intros; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	40	40.442768	16883	4072
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.BoolTheory	40	0.447137	198	66	0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.bool_eq_ok	40	0.008277	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	40	40.062922	18282	3478
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_remainder	40	40.496708	36505	3294
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	40	40.884836	60767	3091
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40	40.044656	4683	627
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40	40.003789	520	265
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40	40.567516	18501	3490
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	40	40.073838	14046	4366
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40	40.866780	26200	1783
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	10.816324	4537	1047	5.1.3.5.0.5	synth with cache (only 1: case n; only 1: intros; only 1: reflexivity; only 1: intros Hn Hn'; only 1: now apply Pos.iter_swap_gen; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	40.743641	33880	2964
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40	40.831099	35857	1762
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40	40.087441	21582	2665
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40	40.143805	3401	2941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	40	40.323428	32635	4121
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	1.388363	998	111	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.041949	9	3	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	40	8.652809	1367	456	1.1.0.1.0.1.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros H; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.096875	16681	1733
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	40	40.103956	20406	2281
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40	40.121763	45053	2938
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	40	40.126880	51663	2107
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_simpl	40	40.033806	7743	2093
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40	40.782001	98927	2233
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.037810	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40	41.066773	17871	3742
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40	40.076594	9986	4094
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.468378	6834	1358
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40	41.226162	13110	1664
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	40.072184	20294	2531
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	1.755228	742	206	2.1.2.5	synth with cache (only 1: intro Hz; only 1: red; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	34.862410	19663	1778	2.7.1.0.0.5.17.9	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.053179	15773	3677
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	2.339485	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40	40.060698	17715	3934
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40	40.435455	23532	2394
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40	40.062109	22007	1811
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0.007378	1	1	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40	40.153319	30762	6875
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_opp	40	40.031162	7382	2599
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	40.046728	13582	2853
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.natSRth	40	40.686046	6375	1314
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40	40.057391	16231	2262
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40	40.250549	54060	4329
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.142921	39829	1760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40	40.066997	21902	2568
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	40.507843	24937	3515
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.012303	4	2	1.1	synth with cache (only 1: red; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.245006	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40	40.295961	15045	1949
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sus	40	40.070959	22152	5016
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	40	40.051279	15911	3090
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P22	40	40.031517	8461	3348
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.808511	48117	2907
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_case	40	40.625691	44377	3286
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40	40.165277	27724	2005
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.125073	14718	3507
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_antisym	40	40.528836	66522	7521
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.727313	43584	3611
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40	40.118818	43333	3418
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	40.527254	12509	1314
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	40	40.646816	33285	451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40	40.073973	24269	2753
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	40	40.433733	20578	6792
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_neq	40	0.017876	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_compat	40	0.027167	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40	40.091455	27360	4256
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	40	40.135254	18734	5451
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40	40.065230	4435	695
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	40	40.798050	41005	2325
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40	40.003813	629	194
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.060872	15295	2311
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.505288	30077	3840
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	40.076595	10828	4634
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.780224	16880	2061
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40	40.069525	19201	2401
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.128805	6390	3561
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare	40	40.371844	50128	5188
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	41.040876	17159	1057
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	40	40.066328	21944	2738
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.234687	52614	2919
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.sinh_arcsinh	40	40.042564	12460	2909
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.118496	30045	2892
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	40.128172	46311	3801
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_refl	40	1.015674	1159	135	7.8.3.1	synth with cache (only 1: intro n; only 1: induction n; only 1: red; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_antisym	40	0.548108	168	40	8.2	synth with cache (only 1: intros x y z; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_minus	40	40.048140	17779	1718
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	40	40.062004	12815	2950
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.398088	34884	4335
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.070974	21074	2274
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Zth	40	40.436247	6418	1671
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	40	40.039238	5577	1017
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.008772	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0.009860	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.008493	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40	40.040299	9238	2559
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0	40	40.079352	27450	3430
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.774262	448	133	3.7.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.057048	18	6	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.WeakKonigsLemma	40	41.321763	23761	1320
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40	40.707746	60299	2100
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	2.932311	2069	377	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	40	40.127547	31819	3913
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40	40.084966	29519	3629
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	40.362704	21072	1987
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.036605	11285	2682
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.779354	30045	4455
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40	40.627681	39430	1489
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	40	40.053149	17491	2356
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.nat_morph_N	40	40.429153	10189	1984
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.GP_finite	40	40.047436	13395	2393
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.378492	92920	3342
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40	40.111024	35006	2155
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	3.278754	2707	170	35	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40	40.066965	20277	3644
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40	40.484570	21610	3216
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	17.603515	6188	2131	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.2.1	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: split; only 1: auto; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.078943	5	5	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu	40	40.139067	55381	2357
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	0.367986	248	43	13	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.011676	4	2	1.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P23	40	40.027611	7213	2926
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_total	40	40.140210	37175	5370
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	40	40.563396	6784	2191
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	40	40.126845	19982	2978
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.193544	21173	865
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	40.044304	9046	1491
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_spec	40	40.820817	45018	412
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_refl	40	0.126611	4	2	0.2	synth with cache (only 1: red; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_sym	40	0.113109	4	2	2.0	synth with cache (only 1: symmetry; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40	40.714889	32392	5082
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40	40.193898	36196	5450
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	6.046910	4095	230	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	40.822297	10677	1458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40	40.068067	20512	3240
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	40	40.640905	39129	3824
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.get_correct	40	40.169321	45542	5320
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40	40.077790	19538	4202
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_dec	40	40.246274	18580	1897
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	0.644658	666	68	3.3.15	synth with cache (only 1: intros Az LS; only 1: elim ARth; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.011309	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	0.137855	102	13	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq_full	40	40.171643	23361	2462
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.094660	29663	3614
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zcase_sign	40	40.831480	51167	2750
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40	40.034055	974	190
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.788792	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.097276	20725	3315
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.597905	9017	2098
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	9.788724	6840	572	13.10.2.12.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.048045	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40	41.069776	21633	1975
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40	40.057409	21961	2725
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40	40.034562	5997	3827
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	40.883368	13984	1710
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.455358	90555	2472
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.015918	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rminmax	40	40.065012	17640	5053
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40	40.262356	26315	2557
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40	40.942963	32575	1754
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40	40.038603	9813	3233
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40	40.155110	60282	3327
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	40	35.055394	7265	1325	2.0.2.13.9	synth with cache (only 1: red; only 1: simple induction 1; only 1: auto with real; only 1: intro; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_trans	40	40.167627	34735	3177
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.500750	332	158	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.392222	230	64	10.2	synth with cache (only 1: do 3 intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	40	40.087218	33169	2777
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	3.759991	4172	321	51	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40	40.046019	4846	2988
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40	40.461719	43498	2188
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	40.139420	52356	3706
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.009035	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	40	40.190269	18195	2699
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40	40.166978	31766	2033
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40	40.140527	46748	3461
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	40	40.060350	18717	4949
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.056183	14898	4353
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40	40.059586	12713	8008
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow_lt_1_compat	40	40.081764	9617	2123
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	9.737706	19654	551	103	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.023629	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.022510	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.109726	69	13	0.2.8	synth with cache (only 1: intro; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.022492	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.025678	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40	40.725631	7431	1337
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40	40.381971	24783	1373
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	40	40.048950	14547	2766
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	40	40.073910	22711	3824
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	40	40.099948	33634	3713
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40	40.279352	42951	5414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40	40.060872	16729	4167
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	40	40.094195	38395	948
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	40.731616	13613	1017
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.042128	5	5	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.941675	87274	4551
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_pos	40	3.496674	1699	418	5.0.12	synth with cache (only 1: intros a b; only 1: apply Rle_ge; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P24	40	40.051339	11458	3410
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_induc	40	40.733204	21816	2957
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	40	40.050287	16768	1954
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	40	40.837392	20949	3090
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40	40.258186	23210	2692
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40	40.477843	21816	4192
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_trans	40	40.439941	21513	1889
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.493506	735	183	22	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0.012941	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.219599	46440	4810
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40	40.719976	40849	4015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.784944	23216	3083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.057753	17014	2651
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_Nle	40	40.620634	28180	4555
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct1	40	40.681450	11477	1711
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40	40.970950	32760	2277
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_refl	40	1.645905	515	92	1.2.0.1.0.4.11	synth with cache (only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	40	40.621780	57649	4742
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.le_ni_le	40	8.378996	4719	703	0.3.9.14.1	synth with cache (only 1: intros n m H; only 1: symmetry; only 1: unfold ni_min; only 1: rewrite Nat.min_l by trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40	40.078888	7509	1147
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.999458	24872	1568
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq	40	40.490668	20003	2734
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005775	1532	170
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	4.934644	715	343	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40	40.463785	29198	3999
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.005628	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	40	40.093388	14253	2757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40	40.615446	42148	1798
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40	41.035203	19139	1044
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40	40.069616	26790	2569
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40	40.072664	20086	4957
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.069954	22600	3145
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	40.339826	74170	1379
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	14.220197	5597	873	13.6.0.3.0	synth with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: apply H0; only 1: intro abs; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.792989	17584	2120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0.214624	5	3	2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_lt	40	40.040526	11351	3537
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40	40.063058	15154	1187
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40	40.292303	37304	3617
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.050114	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0.017015	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_eq	40	40.182984	46175	4428
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	40	17.252407	13455	1426	2.5.0.0.7.1.18	synth with cache (only 1: intros P Hrec; only 1: intros m [H3 H4]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat	40	40.047544	12421	2162
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40	40.112829	42617	2811
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.536038	852	267	4.7.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRzero_double	40	40.060162	13572	4194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40	40.058199	17375	3544
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	40	40.038932	11043	2824
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40	40.806195	25286	1224
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40	40.753975	69566	3470
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40	40.103721	18042	1355
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	40	22.123706	21582	1013	0.0.0.0.0.0.2.64.0.12.71	synth with cache (only 1: split; only 1: intuition; only 1: firstorder; only 1: intros l'; only 1: intro; only 1: intro; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	40	40.119425	42787	4906
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	41.349874	14613	1998
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.089951	105	19	14	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40	40.075068	9054	717
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	40	40.055587	17575	2951
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_Rabs	40	40.037933	10519	2687
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40	40.900251	74510	5554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.501816	10408	2280
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.075038	20	5	3	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.569949	1359	67	1.0.0.46	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.020211	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.006812	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0.005120	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	23.444383	18081	1225	2.10.1.7.9.2.7.20.7.2.11	synth with cache (only 1: compute; only 1: split; only 1: compute; only 1: now f_equal; only 1: compute; only 1: intro; only 1: now subst; only 1: compute; only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_pos	40	4.416314	648	271	0.1.0.7	synth with cache (only 1: intros a b; only 1: intro; only 1: apply pow_lt; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.624508	20442	1735
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.052456	13877	3929
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_weak	40	16.848094	14981	1436	5.31	synth with cache (only 1: intros m IH H; only 1: now apply Z.lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0.008961	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_trans	40	0.457557	180	49	1.1.1.4.0	synth with cache (only 1: intros x y z; only 1: intuition auto; N.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	40	40.036774	7127	2695
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	40.271753	53356	7502
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0.020855	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40	40.036892	8693	3470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi	40	40.068444	20075	3595
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.015960	3	2	1.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.006142	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.793631	133178	2237
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40	40.365494	16567	5969
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_sym	40	40.086237	25362	4074
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.028652	7479	2743
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	40	40.368131	17348	2185
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40	40.138896	9721	1920
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.202170	38084	3918
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40	40.713266	34109	2651
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	40.080725	26184	3836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.024862	5	3	0.0.2	synth with cache (only 1: simpl; only 1: intro; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.016655	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	29.064713	56775	1395	97.29.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: do 2 constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.013629	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.013535	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	40.826013	16301	2190
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct2	40	40.424303	20312	3531
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_antisym	40	40.160157	40016	5220
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	13.855573	3831	562	18.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	40	40.558435	21954	2486
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_le	40	40.620232	31878	3682
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	40	10.734934	5522	1276	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40	40.086603	10902	1748
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40	40.495252	508	150
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.814995	25834	2538
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40	40.468732	7850	2320
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.087056	29075	4617
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40	40.802133	33641	2699
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.062064	16274	3609
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.209807	88053	5453
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40	40.710308	18464	1340
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40	40.023555	3896	2743
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	40.161556	23368	4526
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_le	40	40.149410	8112	2576
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	40.112477	35858	4385
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.239371	11580	2153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	12.826638	1265	116	1.0.26	synth with cache (only 1: induction x; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.042431	11058	2809
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat	40	0.022886	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	40	40.880408	11535	1373
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	40	40.086726	4042	440
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	12.619965	2400	458	16.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_0_r	40	40.100163	6034	2025
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40	40.904499	17376	932
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.076417	24544	2109
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN	40	40.054549	17625	3458
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40	40.811668	2573	1091
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40	40.685783	55074	2464
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40	40.087377	23921	2517
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.462851	25716	2138
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	40	40.068370	21177	5544
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	12.778305	8303	327	81	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.057000	17486	2932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.016983	6	2	1.3	synth with cache (only 1: intro H0; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40	40.032623	5888	2111
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	40	41.235357	18323	2367
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	2.047453	1247	58	35	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.729369	117	34	2.2.1.1.3	synth with cache (only 1: constructor; only 1: intuition; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40	40.409890	35839	3151
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	40	40.533574	22284	3623
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.447802	5837	716
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.038421	11174	2214
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem	40	40.059636	18145	3546
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	17.569773	1434	160	4.19	synth with cache (only 1: intros l H; only 1: now induction l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40	40.372662	28697	1084
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.138847	28381	4599
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40	40.083253	26292	2688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40	40.046716	13245	2571
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40	40.338378	77716	2547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.054347	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	40	3.063760	1800	523	11.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_lt_le	40	1.062504	221	71	3.4.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_le_lt	40	0.034777	15	7	1.2.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.036035	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_not_lt	40	0.029978	9	5	5.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	40	40.421425	50809	3385
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_refl	40	40.060971	15671	5607
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_eq	40	0.050819	11	6	0.0.1.0.0	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.896739	264	116	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	40	40.096750	15617	3210
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P26	40	40.028185	7283	2514
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40	40.204587	10100	1804
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.215956	22053	1972
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.095274	7202	3811
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40	40.343995	22808	1261
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.426710	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.922376	15834	2105
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct1	40	40.550579	14223	3495
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_lb	40	40.556627	52152	3192
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_trans	40	40.630045	37377	2630
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	40	40.195743	73825	4666
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_sym	40	40.764511	40776	2989
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40	40.088162	26279	2927
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	4.473509	6732	511	2.0.1.38.2	synth with cache (only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40	40.002762	393	181
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	40	40.822662	36289	2260
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40	40.106934	31093	4622
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.012354	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.016056	3	3	0.0.0	synth with cache (only 1: intros q r; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40	40.142932	34216	4722
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	40.621770	7958	3129
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.109984	38466	2674
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	10.148161	6665	1287	4.5.1.3.5.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: now auto with arith; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40	40.150423	61291	4157
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	40.399278	17143	2982
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40	40.044324	7476	4773
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	40.092048	21872	4240
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	40	40.168049	15042	2504
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	40.156088	60802	2384
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.185419	2201	165	4.2.14.2.18.2	synth with cache (only 1: split; only 1: intuition; only 1: auto with *; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.214594	13431	3034
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat	40	40.079326	26311	2518
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40	40.039542	13614	1624
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	40	40.900913	23538	1390
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.015535	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.047565	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40	40.042061	5768	2749
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40	41.061957	8144	1183
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40	40.798250	14211	1622
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40	40.112553	30594	3140
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS	40	40.050719	15243	3407
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40	40.866210	4085	599
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.242636	79093	1712
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	40.055490	11865	6177
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_ind	40	0.728406	774	112	0.3.7.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.483586	41738	3253
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.170375	66612	4305
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_intro	40	3.524558	3750	385	6.20	synth with cache (only 1: intros x y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40	40.072023	23175	2861
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	40	40.730956	27095	3424
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.692488	17024	2437
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	40	41.013053	26683	1319
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.736182	31624	1742
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.091824	33270	3581
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.923106	33240	5124
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.296099	161	23	8.2	synth with cache (only 1: intros; only 1: now rewrite <- ?BinNat.N.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.043220	9805	2497
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.075487	26515	2341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40	40.148508	52430	4025
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	13.552784	5505	1371	1.2.11.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.676340	16835	1237
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	40.249921	42346	3292
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	40	40.103408	29623	1778
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.059860	17181	2994
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	40	40.220434	24013	2556
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	18.273742	7574	2860	10.6.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_tri	40	40.076504	22961	4839
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	40	40.527658	97919	1427
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.009782	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P27	40	40.035125	11482	2535
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	40	40.030116	6749	3944
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40	40.193306	10526	1599
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40	40.301219	81153	3744
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	0.997258	585	101	1.12.4	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.018681	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.010147	2	2	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct2	40	40.056253	11835	7402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40	40.919676	13091	1133
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	40	19.589456	17276	1476	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	40	40.611287	32328	985
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_ltb_trans	40	40.785450	30733	1637
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	40	40.196421	38684	2649
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40	40.067016	16959	2733
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	40	40.632390	14131	2931
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40	40.087075	848	159
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	40	0.012122	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	40	0.021136	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.441867	45511	5679
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_unique	40	40.858868	26217	3617
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	40	40.618054	24701	2809
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.963724	37700	2623
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	40.087019	28094	4700
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40	40.043975	15753	1902
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40	40.788667	75959	2688
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.092702	37	9	3.2	synth with cache (only 1: intros n m s1 s2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	40.478750	11793	2232
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.047741	143	11	17	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	20.324161	10577	1495	34.2.0.3.1	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: rewrite <- Rmult_1_r; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	40.082589	28767	4303
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	40.194530	76288	2215
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	40.063529	19268	657
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40	40.234714	7915	1517
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.054741	15779	3048
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.105747	37536	4103
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	16.147292	2994	715	0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40	40.039258	4548	2378
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	40	40.878816	23597	2203
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40	40.997595	12857	705
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.772991	22146	2079
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40	40.155261	27135	1442
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	40.067122	16685	5458
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.406714	222	36	0.8.3	synth with cache (only 1: intro H; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	0.150073	150	24	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.455586	19953	8417
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_eq_bool	40	0.006787	1	1	0	synth with cache (only 1: apply Qeq_bool_iff).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40	40.909563	2790	793
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	40	40.087676	31278	4447
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	10.991719	1262	326	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	40	40.892921	33885	1463
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.019382	5	4	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40	40.071740	20097	2415
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40	40.169813	67299	3624
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.654721	13492	1819
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40	40.446847	13906	1988
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	40	40.778588	37805	1268
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40	40.535264	15525	1973
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.058205	11605	2228
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.065862	19245	4760
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	40.891378	22856	2481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40	40.084002	2448	665
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40	40.394439	16921	1075
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40	40.144339	43861	3795
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40	40.046699	14233	1996
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40	40.056466	15281	3604
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	40.071155	21038	4770
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_dec	40	40.248817	53406	3201
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_plus	40	40.085912	26327	5000
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40	40.612874	71048	2099
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	27.199838	21803	2985	0.0.0.0.19.0.8.3.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros s2; only 1: rewrite <- 2!find_mapsto_iff; only 1: constructor; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	40	40.046989	14682	3891
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.024391	5919	2869
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	2.816741	950	184	0.0.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	40.240332	39303	2538
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.prefix_correct	40	40.157998	34162	3902
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_spec	40	40.415089	25317	1581
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40	40.962589	10477	1550
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.eqb_false	40	40.727475	4707	1770
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.629502	30092	4477
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40	40.104278	28135	3121
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_1	40	40.637390	43851	2973
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40	40.015163	1044	154
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.259428	28271	5639
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_N_embedding	40	40.426535	65457	3598
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_unique	40	40.094789	33507	4284
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.067690	19	4	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	40	40.112799	27596	6159
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_r	40	0.020229	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_l	40	0.451208	94	21	9	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_r	40	0.018178	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40	40.119226	39582	4923
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.764845	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	40.921761	35145	2088
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_1_r	40	0.263693	53	17	6.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40	40.079062	29209	3366
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.057433	14308	5445
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.301117	19271	3543
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	40	40.225554	98947	2869
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	40.085634	28610	3148
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.057796	18332	1961
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	40	40.096756	26664	8530
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.167230	66466	4584
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.190889	8978	1860
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40	40.061885	10808	2810
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40	40.531201	28967	1422
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.480593	37659	3022
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.921880	16951	886
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40	40.064297	15293	5228
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	40.644863	42886	2578
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	0.029815	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.053638	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40	0.631166	285	29	1.14.1	synth with cache (only 1: intuition; only 1: contradict H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0.025762	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0.012174	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.774888	44080	2039
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	40.414932	13586	1071
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.109229	38844	5245
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40	40.064956	10590	2249
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40	40.286790	6773	1577
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	40	40.653105	56999	2637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	40.065698	18289	4231
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	40.335125	14501	2395
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.434781	15717	2141
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40	40.411415	20462	2217
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.856106	10892	1844
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_CV_0	40	40.035507	10019	2578
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	40	40.050575	14019	3500
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.094456	5463	1071
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	40.522763	43536	1985
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	2.235400	176	75	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40	40.384733	15438	943
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.033836	8909	2359
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.239735	13344	2388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.085924	27345	3472
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.078373	25549	3508
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_dec	40	40.104225	33802	4970
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_mult_l	40	40.057014	17731	2037
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	23.241361	12988	3864	0.0.1.25.2	synth with cache (only 1: intros; only 1: unfold Rgt, Z.pred; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.589791	43778	1213
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.011375	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.554797	259	66	0.6.1.3	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40	40.104942	7122	2811
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40	40.227347	28195	4596
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	5.553591	2325	849	0.0.0.0.0.0.2.5	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.019518	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	40	40.100729	34402	6196
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P29	40	40.042776	14355	2707
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zsgn_spec	40	40.989713	20203	1398
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	40	40.144685	26632	4432
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40	40.831576	14571	2706
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.059878	6639	1247
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	40.006020	1783	151
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.621606	47339	4200
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40	40.441392	32439	2999
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_embedding	40	40.598329	28815	2462
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.141940	21391	4761
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_to_nat	40	40.622117	40012	1011
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.140368	49330	4561
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.111801	36426	2938
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.776258	19811	2364
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40	40.308766	108869	6112
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_cases	40	40.766504	39931	3376
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_0	40	40.054709	16767	3439
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40	40.064532	25989	637
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.417345	28170	3331
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40	40.057842	19015	2416
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.105494	39629	3265
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.280075	1101	268	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_le	40	40.115187	41925	3836
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.293259	5876	1039
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	40	40.157598	8025	1742
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	40	40.927951	21772	2389
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	2.417853	781	247	9.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.722502	12972	2083
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.384294	11624	2923
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0.052479	8	1	7	synth with cache (only 1: apply two_power_pos_equiv).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	40.071890	18037	4985
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.023072	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.088645	31867	4506
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.481841	32302	3353
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.668189	35737	2278
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	3.882331	1584	72	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40	40.491544	22106	1150
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	0.728840	142	43	0.5.1.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: destruct H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	5.256618	1996	623	0.0.9.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: intros; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	40.059668	9707	1710
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40	40.080801	24168	2578
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40	40.155499	69793	580
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	40	40.709472	60543	2566
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	2.649936	600	73	0.1.0.18	synth with cache (only 1: constructor; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	3.798896	1551	66	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40	40.649623	9788	1532
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40	40.847758	8378	1444
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_lim	40	40.032024	7536	2283
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.525242	8560	1621
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	40	40.063030	20174	4115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40	40.059336	16681	2887
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	40.984427	23084	4279
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	40	40.531819	10700	756
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.112103	9552	903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40	40.070867	21037	3451
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	40	40.410206	102336	2038
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	41.103067	14913	2340
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.169569	24337	3507
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	40	40.063194	20845	2792
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40	40.434733	32402	3350
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.059194	13721	4734
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40	40.261439	39234	3923
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40	40.082157	22883	5889
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct2	40	40.142250	15060	5453
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P30	40	40.042314	13606	2659
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.103301	33143	3520
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_le	40	40.653238	31464	2827
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	40.893000	26294	1468
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.040325	15	6	0.0.0.2	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	40.023718	711	206
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.057150	14240	3097
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_comm	40	40.684914	28661	3875
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zne_left	40	40.596143	31182	2814
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.011146	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.310215	40724	3419
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	40	0.006009	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008717	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_rev	40	0.006060	2	1	1	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.006096	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_semantics	40	40.158147	36687	2964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	40.065977	19265	2851
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat	40	40.551753	9280	857
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40	40.111488	35868	3228
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	40.100891	38595	3228
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_bounded	40	40.553687	10439	1232
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_mult	40	40.838627	17406	2638
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.056942	18810	3283
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40	40.056227	17606	2047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	6.136580	635	205	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.768404	51943	3216
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40	40.161023	21225	1957
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.556925	8454	586
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.111995	21948	1899
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_correct	40	40.095317	34067	4122
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40	40.055653	12183	4059
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.894466	22631	2868
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.786524	21229	1914
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40	40.067439	16442	4911
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	7.975272	13316	212	0.2.0.0.2.152	synth with cache (only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro H; only 1: simpl; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	40	40.065695	19183	5067
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.679944	32664	4728
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_eq_sym	40	0.111856	70	21	1.1.5	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.420753	26025	2029
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40	40.304383	17000	3466
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.934669	5538	103	0.0.102	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	40.067351	18725	4304
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40	40.109911	19794	1982
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.207024	3542	77	83	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.018506	3	3	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40	40.178562	74888	2481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.054144	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_ind	40	40.143973	57894	4649
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	40.657286	17641	1308
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40	40.387407	8524	1792
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.304866	246	33	0.0.11	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	0.053690	8	4	0.1.3.0	synth with cache (only 1: intros; only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.466112	723	55	30	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.619816	13108	1764
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.769224	11940	2385
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	40	40.053371	15183	3729
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_CVU_prelim	40	40.068119	6522	2052
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.512806	65169	707
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40	40.097871	32318	4034
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	40.916309	17829	1556
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.493793	18650	2408
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40	40.417286	38315	1377
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	40.330411	7474	1262
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_minus_iff	40	40.496094	16105	2124
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.056270	15283	4518
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40	43.656180	14012	1537
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40	40.531024	13390	1102
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.232477	26632	7348
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.663805	19018	2181
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40	40.058127	13214	5775
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P31	40	40.032954	9533	2374
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct3	40	40.692009	16329	3441
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	10.731886	4656	394	37	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.053710	5	4	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono	40	40.562771	34651	3710
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_lt	40	40.731820	27571	2411
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40	40.022463	1017	239
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.682592	27540	3017
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.030992	5	5	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	20.692265	3695	458	0.2.11.0.0.10	synth with cache (only 1: intros a; only 1: unfold Z.eq, Z.add; only 1: simpl in *; only 1: induction a; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40	40.033276	5329	1182
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40	40.146763	41353	4219
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra_1	40	40.639367	32256	3044
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.870829	13183	1427
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	3.733837	680	110	1.5.9.2	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Por_semantics	40	40.584741	19009	5153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	40	40.080213	23260	3985
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.488278	72	22	0.1.0.5.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.624330	18401	1354
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40	40.126332	50535	3118
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0.047806	1	1	0	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_pos	40	40.082633	29200	3453
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.383496	58596	2701
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.047970	13968	3237
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40	40.052075	15436	1851
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	18.861620	12990	1395	2.1.0.12.6.6.3	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: trivial; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.386719	194	63	1.1.1.0.0.0.3	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.081215	27097	3146
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_cases	40	40.806822	62655	3017
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40	40.368071	12343	2150
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40	40.085654	31437	3349
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.095902	26699	4129
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_iff	40	40.092724	2174	367
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40	40.053735	11104	4552
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40	40.560231	15413	1789
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40	40.193732	31690	2959
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40	40.047315	9797	4846
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	1.945081	1103	135	6.12	synth with cache (only 1: Z.swap_greater; only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.145571	52994	3103
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40	40.142513	8415	3257
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_comm	40	40.792861	42441	3638
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.118083	40878	5036
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.130219	20700	3636
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.135034	5816	898
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	40	40.217646	100331	685
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	0.219328	104	32	3.1.2	synth with cache (only 1: intros n m H1 H2; only 1: apply CReal_mult_proper_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.019150	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	19.843991	5395	560	1.0.0.24	synth with cache (only 1: intros a n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now rewrite add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.353366	56	12	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_rec	40	40.943518	58725	4850
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.143793	27442	3066
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	41.166964	4596	713
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40	40.629612	17024	698
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.046029	15131	2124
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_is_datan	40	40.037003	10817	2455
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40	40.732520	15366	2336
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	17.643760	8356	1728	1.1.5.0.0.5.1.2.0.0.1.0	synth with cache (only 1: induction s; only 1: inversion 1; only 1: inv; only 1: simpl; only 1: intuition; only 1: intuition; only 1: simpl in *; only 1: inv; only 1: elim_compare x a; only 1: eauto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.054593	18924	1929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	40	40.618353	78584	666
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	40	25.227052	28392	2547	4.0.94	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40	40.047134	12940	3166
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	3.440486	616	265	0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	40	40.422913	14207	1891
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.378793	18008	2091
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	40	40.053253	12952	5187
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	32.300669	613	128	2.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40	40.023654	5836	1489
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.643922	16655	2375
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40	40.225416	27586	4717
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40	40.055675	12044	6170
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40	40.660228	9649	3532
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.127000	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.192904	32	18	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	40	34.390593	14958	1978	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left	40	0.165419	41	15	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.025189	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_rev	40	0.026759	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge0	40	32.017148	21905	1991	0.0.1.2.32.2	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: Z.order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P32	40	40.042834	12531	3507
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	40	40.609655	20201	2766
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.754553	21808	3896
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.043564	8336	2671
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	41.000648	49644	2098
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.287795	33835	4186
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra	40	40.092668	18160	3456
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	21.820163	1320	242	0.3.0.1	synth with cache (only 1: unfold Symmetric, Z.eq; only 1: simpl in *; only 1: intro m; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	40	40.056531	13308	5661
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40	40.387412	16149	407
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	5.805161	4470	897	19.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40	40.129226	50592	4314
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.916909	15757	1556
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	40.289904	26222	3723
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0	40	40.038553	10413	3225
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40	40.063503	19336	3965
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_embedding	40	40.256261	11676	1099
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	40	40.138914	33857	4840
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.059034	18142	2680
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_cases	40	40.243220	43252	4139
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	40	40.038511	7654	3307
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40	40.201342	18752	2807
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.056206	7319	267
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40	40.295483	19236	2351
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	8.234191	7777	1023	0.0.0.5.6.1.0.0.13.2.2.0	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40	40.043287	8433	4839
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.381693	21992	1941
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	40	40.793106	10363	1449
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_opp	40	40.160195	62761	4809
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.474170	23648	2362
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40	40.311713	18044	3875
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_refl	40	40.860452	75268	3499
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40	40.252394	21155	2683
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	1.120565	153	33	0.1.0.0.4.4	synth with cache (only 1: red; only 1: red; only 1: intros; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.057004	14998	2472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40	40.141191	55642	3679
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.835845	1959	258	0.0.0.27	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40	40.208276	57551	2423
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40	41.107886	15660	1770
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	41.044200	16650	864
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_le	40	40.067924	21917	3579
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40	40.764089	26127	222
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.446036	11707	2451
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.030603	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.048992	11874	3997
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.036974	10242	2097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.570666	57764	5236
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pand_semantics	40	40.584573	22934	4979
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40	40.053831	14887	3452
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_semantics	40	0.479177	163	78	0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40	40.390347	8079	2538
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.381410	7144	1053
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0.008268	6	1	5	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_le_compat	40	40.192061	22107	3570
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	40	40.065362	16905	5288
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.096833	50	16	4.4	synth with cache (only 1: intros Ha'; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	40.007423	1789	137
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40	40.501111	4278	283
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	40.083930	28261	3912
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.066046	13425	1845
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40	40.038522	7155	3773
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_lt	40	40.196680	22902	2891
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P33	40	40.040557	12860	2181
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_mult_approx	40	40.855805	15877	1848
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	40	40.911207	31629	3109
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.051982	11049	2556
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	40	40.142069	40458	4273
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.950556	39831	1802
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_ultra	40	40.618264	7162	2889
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.683734	327	83	3.0.2.4	synth with cache (only 1: intro H; only 1: intros; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	0.779440	509	39	0.0.0.0.27	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	40.496318	3538	701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_to	40	40.091847	31353	2925
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.328430	105029	3725
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40	40.528844	15179	1602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	2.265573	88	32	0.2.0.3.0	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: intro H; only 1: simpl; only 1: rewrite <- !mul_add_distr_l; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.038766	11363	2631
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.567490	11306	1520
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	16.900542	13288	1677	0.2.1.3.0.2.19.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40	40.087918	33358	2028
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_bounded	40	40.085684	4007	219
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	40	40.123880	42987	4635
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	40.617177	17240	2680
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.131111	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	40	40.743227	41503	2398
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.099715	8	4	0.0.4.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: apply Z.leb_le; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	2.505935	637	214	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	40	40.055155	6161	3934
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.060099	17288	3832
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40	40.125526	21909	2621
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40	40.249929	95651	5445
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.105422	60	24	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	0.804421	908	147	1.0.14	synth with cache (only 1: compute; only 1: intros A B P R H; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.075950	27031	2536
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.313422	222	47	0.4.0.6.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40	40.738438	122410	1885
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.042236	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	40	40.595796	14013	2642
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_minus	40	40.096371	29585	4492
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_nat_bounded	40	40.044079	15251	189
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40	40.429495	27574	1940
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40	40.040526	8917	4054
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.035462	7	3	0.4.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40	40.115452	16583	4475
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40	40.090524	22721	4468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40	40.053624	14529	4433
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	14.978039	7595	1284	1.1.0.0.9.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.049625	5	5	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40	40.151085	11955	1744
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.411618	38219	5015
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40	40.680082	15915	1099
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40	40.676454	70191	4138
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40	41.231841	21539	201
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.040558	11889	2098
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.655505	17276	534
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU	40	40.042267	12053	2125
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40	40.036727	7485	2251
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40	40.743546	14308	2720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40	40.156357	26664	1667
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40	40.044330	12019	2732
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.576288	33566	4174
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiff_semantics	40	0.297367	84	38	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.466556	14710	1197
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	40	40.184849	12128	2499
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmake_Qdiv	40	10.348504	8071	837	0.34.0.12	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: Z.nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	40	40.079088	24391	3660
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.033888	2202	122
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.075535	22998	2634
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40	40.249560	8327	1546
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	13.089364	7701	1487	0.0.1.0.1.2.2.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.129217	49797	2973
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40	40.632471	18954	2357
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	40	10.904346	1919	700	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.588056	13321	3730
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.049083	16211	2331
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge	40	40.958060	21242	2116
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.023656	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.918359	32222	2487
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	40	35.246742	24220	2905	0.0.5.0.15.13.0.0.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: rewrite <- H  at 2; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.412158	37709	3660
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40	40.044114	8801	1332
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	15.212894	6890	1236	1.0.1.0.0.0.0.2.0.1.0.0.5.0.0.4.0	synth with cache (only 1: unfold Nat.of_uint; only 1: induction d; only 1: now Nat.nzsimpl; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?Nat.tail_mul_spec, ?IHd; only 1: trivial; only 1: simpl; only 1: Morphisms.f_equiv; only 1: now destruct nztail; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	40	40.321020	38394	4063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_of	40	40.097659	25536	3200
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	41.006382	47181	3098
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	40	0.033476	77	7	13	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	0.007923	2	1	1	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_le_0	40	40.043108	11490	3492
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.450402	8690	1108
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40	40.478739	16119	2237
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.079370	27367	3002
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	40	40.085251	27198	2942
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	40.343072	6198	343
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.881259	850	94	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.929341	27222	3781
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.807532	31163	2591
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40	40.264116	16955	3819
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	1.854804	630	178	0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: intros EQ; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.046266	11699	1504
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.070231	15376	4006
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40	40.043212	8851	4038
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_spec	40	40.866006	34262	2181
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.085172	26787	2846
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_left	40	0.122496	39	17	0.6.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40	40.364802	126927	6793
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	40	40.632522	30465	2572
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_mult	40	40.092702	30252	4195
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zpos_max_1	40	1.972905	630	59	1.4.12.9	synth with cache (only 1: induction p; only 1: easy; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_nat_None_iff	40	40.053338	5389	391
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40	40.802394	21841	901
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40	40.380423	10537	1265
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40	40.106524	28604	3752
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_const	40	2.990057	6007	450	0.39.4	synth with cache (only 1: intro q; only 1: exists 0%Z; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40	40.353718	33840	4280
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.148731	57565	2973
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.123664	13785	3096
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40	40.096014	19956	1674
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.095436	6183	2811
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	40	40.053830	17884	1365
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	41.075243	9786	602
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	6.168176	5304	395	1.5.15.18.8	synth with cache (only 1: red; only 1: intros n; only 1: intros a b; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40	40.068709	15551	1117
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40	40.652367	22681	608
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40	40.872737	17835	2646
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_spec	40	40.851885	37706	1996
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40	40.049459	12480	3678
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful_0	40	40.180850	56863	4634
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40	40.099934	29807	2609
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.253981	11395	2648
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	4.971086	2717	118	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	40	40.100266	5418	1593
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40	40.003773	699	177
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.766444	17612	1952
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40	40.105103	37311	1897
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	9.579678	909	494	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40	40.225351	26098	4533
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40	40.071610	23356	3770
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40	40.724434	66988	3283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.021989	5041	2062
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.141215	23688	3521
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40	40.548645	4549	398
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	40	40.043886	14306	2542
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.812427	31742	2910
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	3.565258	1365	429	2.0.1.0.0.3.1.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.204734	88954	3393
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor0	40	0.097258	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor1	40	0.019808	9	4	3.2.0	synth with cache (only 1: change 2 with (1 + 1); only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono	40	40.537012	21098	2792
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40	40.061831	15754	2992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	40	40.511767	26435	2203
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	40	40.393352	28167	4631
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	40	40.092823	25862	6670
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	4.207338	1474	435	0.0.1.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: now destruct Hx).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.023402	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	40.432323	12205	913
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.037136	9278	3777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	40.488561	9887	1669
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.133053	47526	4367
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.074752	4296	946
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40	40.699205	14161	1055
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40	40.684250	34447	1752
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.075692	27284	2702
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	0.006480	7	1	6	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.360054	10207	2362
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	40	40.978113	29134	2503
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.778226	57743	3147
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.054367	15411	2235
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.in_bdepth	40	40.073229	13882	2880
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	40	40.089210	13833	2432
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	5.023720	6350	630	7.8.6.3.7	synth with cache (only 1: intros LE EQ; only 1: revert EQ; only 1: intro H; only 1: apply BinInt.Z.lt_nge in H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40	40.079194	23479	3605
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	7.530433	1978	317	0.0.0.0.3.16	synth with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.044420	15	7	1.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.040176	15	6	2.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	11.847791	12311	968	5.6.7.8.2.24	synth with cache (only 1: intros m a b Ha; only 1: red; only 1: destruct m; only 1: intuition; only 1: inversion_clear H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	40	40.625544	6373	1255
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.496276	12890	1453
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40	40.824918	17787	793
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Nth	40	40.453393	3933	1213
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_scal	40	40.089792	31545	5053
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Neqb_ok	40	0.317109	103	39	0.2.0.0.0.0.0.1	synth with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: now try N.order'; only 1: now try N.order'; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.011054	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_to_N	40	40.045663	10051	5306
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.330121	27664	3799
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	2.572866	2084	309	10.3.7	synth with cache (only 1: intros; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.085773	22018	2947
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	40.110110	37371	4221
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40	40.237129	52415	2334
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40	40.577165	5338	3005
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_id	40	4.461909	4508	391	0.0.7.66	synth with cache (only 1: intro H; only 1: red; only 1: exists 1; only 1: apply derivable_pt_lim_id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.030779	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_odd	40	40.034236	8788	1125
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.194227	53480	2605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40	40.096907	34578	1926
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40	40.645702	6532	1173
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40	40.926558	6643	1181
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful	40	40.604857	53748	5303
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	40	40.526021	39506	3759
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.146108	13828	2936
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_l	40	40.029740	5166	1445
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	40	40.845569	32663	1797
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40	40.412822	511	157
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.068617	20935	2183
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.464478	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_comp	40	40.907167	21278	3857
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.996290	32862	364
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.142354	54208	3639
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	40.123421	48884	2946
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.382462	4377	1839
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_continuity	40	40.034372	9531	2449
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40	40.159424	31648	3839
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	40	40.447774	20674	2659
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	40	40.058388	16503	2647
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40	40.856134	29128	3176
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	41.007851	2960	553
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.237617	19	4	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	40.634176	24211	3178
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40	40.034190	5329	1418
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	40	40.527179	26082	2246
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	40	40.131564	39261	3981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	40.097280	29796	5501
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.032579	7	3	4.0.0	synth with cache (only 1: intros a n m H; only 1: rewrite remove_spec; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.049491	15	5	2.0.1.1	synth with cache (only 1: intros n m p; only 1: rewrite remove_spec; only 1: apply H || intro; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.918409	23661	2975
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	25.419649	12507	554	55.22	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	40	40.043444	11694	3858
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.312096	28122	3896
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.nat_N_Z	40	0.051702	23	10	0.0.0.3.1	synth with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	40	40.064626	21686	2327
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	40	40.347353	3955	898
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.432311	5241	1335
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	40.216759	8578	2563
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.172602	25493	3530
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.107602	14713	2260
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40	40.386555	5176	1821
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_total	40	40.345175	22946	3723
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	40	40.199781	12749	1397
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_zero	40	40.071600	12253	1858
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	40.201220	18750	1831
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	4.722513	1696	387	7.9	synth with cache (only 1: intros x y Hx; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	40.137929	51058	3025
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40	40.350756	21930	2910
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	40	40.339956	5919	1106
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	40	40.137237	27064	2014
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40	40.887927	72974	2965
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	40	40.075077	26825	1802
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40	40.116207	40038	3917
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40	40.327901	58334	3657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.148976	61230	1098
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40	40.525510	27975	3466
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40	40.065029	13003	2166
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.165584	6630	3454
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_comp	40	40.095828	33946	4703
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_even	40	40.052529	15503	2840
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.195506	34245	4400
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40	40.146364	56664	1232
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40	40.686839	15966	778
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40	40.757237	11405	1633
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	0.934330	763	112	9.18	synth with cache (only 1: compute; only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.169252	114	16	0.2.11	synth with cache (only 1: unfold PX.eqk, PX.eqke; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful	40	40.616218	34466	4620
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.457564	11335	2003
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_1	40	40.197449	20948	2288
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	26.647870	7961	3317	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	5.197031	457	264	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_r	40	40.053869	6625	2109
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40	40.407266	392	131
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.680968	17398	2534
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	40.610281	7581	1983
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	1.548826	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.090270	23954	1949
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40	40.073204	23443	3129
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40	40.037588	11510	2235
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.639303	7153	2119
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.515132	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40	40.110718	13285	3118
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.019228	4583	2054
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	40	40.315727	4041	533
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	40	40.502322	39602	4054
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	40	40.667405	27325	4004
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40	40.041658	5777	1085
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor4	40	41.034236	4861	760
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor5	40	0.050770	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_to	40	40.517527	36771	1876
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor6	40	0.008763	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.new_var	40	0.032927	22	6	0.4.2	synth with cache (only 1: intros; only 1: exists x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA1	40	0.019204	3	2	1.0	synth with cache (only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA2	40	0.055839	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	40	40.097835	31736	6427
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	40	40.202778	67237	5221
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.020034	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	40	40.632325	42705	2317
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	8.576324	872	405	0.3.0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.426371	23172	1296
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_lt_0	40	40.044324	8616	3442
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.259474	13462	3993
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	40	40.640034	24354	2383
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.032427	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_Z	40	0.020473	4	3	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	40	0.007800	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_N	40	0.047461	9	7	1.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	40	40.114102	23963	3563
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy	40	1.842120	496	183	2.0.0.0.1.1.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_N_nat	40	0.257222	249	50	15	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	40	40.388432	9206	3523
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40	40.107441	17034	2676
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	0.005879	8	1	7	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.010164	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.316043	13703	2527
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	40	2.360206	954	73	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_N_nat	40	0.170411	50	5	11	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.074620	23802	3662
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.393270	9688	2311
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.022838	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	40	40.768865	35481	2342
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	40	0.006204	8	1	7	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	41.075915	29515	3993
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_opp	40	40.070274	20075	3865
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	1.752425	721	215	0.0.2.0.7	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.016954	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.106172	65	14	0.1.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40	40.171395	9553	872
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	40	40.063963	19953	2816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.036771	8480	2931
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.173201	18284	5240
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	40	40.992875	35319	2872
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	40	40.455342	18142	1371
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.030701	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0.009485	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40	40.949655	51334	2683
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40	40.344553	35133	2895
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_nat_N	40	10.885221	9718	207	1.1.0.0.0.119	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: apply positive_nat_N).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.id	40	0.008371	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	40	0.184769	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40	40.078521	29667	1839
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40	40.342856	69668	5159
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	40	29.818720	22998	1859	1.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_iff	40	0.651712	116	79	1.0.3.2	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros EQ; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.is_nonneg	40	0.123285	42	14	0.2.1.2.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.006960	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pos	40	0.007349	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.056820	7317	826
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_compare	40	0.280883	73	37	1.0.0.0.0.3.0	synth with cache (only 1: destruct n, m; only 1: easy || now destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	40	11.911914	3152	501	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	40	40.461803	24114	4541
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.286641	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.032175	5707	2139
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.058234	17844	3545
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zeven_rem	40	40.085082	29731	2497
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_is_le_bool	40	1.168938	637	140	0.3.0.10.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: split; only 1: now case Z.compare_spec; only 1: Z.swap_greater; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_le	40	3.641343	1407	368	2.4.0.0.0.0.4.1	synth with cache (only 1: unfold N.leb, N.le; only 1: destruct n, m; only 1: reflexivity; only 1: simpl; only 1: easy'; only 1: simpl; only 1: now split; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	16.605063	7101	957	0.0.3.7.1.0.9.7	synth with cache (only 1: intros n m; only 1: destruct m; only 1: intro H; only 1: Nat.nzsimpl; only 1: Nat.order; only 1: intro H; only 1: simpl; only 1: trivial using Nat.le_add_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.139552	26964	3210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40	40.024017	6324	1266
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.040880	333	160	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_ge	40	0.078521	3	2	0.1	synth with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_gt	40	0.081494	5	2	0.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40	40.774773	8697	1684
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.528519	130	48	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	40.406467	17158	1359
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.167498	32682	5232
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.462782	14500	2258
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	40	40.100257	11138	1948
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40	40.665248	4366	1875
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comp	40	40.782441	18249	2870
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40	40.094314	32043	4376
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40	40.080730	26174	4760
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	40.732495	23696	2220
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.043003	12946	2763
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40	40.121388	507	132
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40	40.752261	14532	1891
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.109870	15645	1753
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.037478	2	2	0.0	synth with cache (only 1: unfold add; only 1: now autorew).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.096875	17	6	3	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	40.448243	19759	2526
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	11.674750	6704	935	0.9.0.6.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_eq	40	40.685272	63179	3444
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.614077	20704	4989
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40	40.030979	5863	2370
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	40	40.070724	20006	5044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_of	40	40.543887	40030	3165
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	40	40.100176	31283	5593
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.892436	20637	1839
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_gt_0	40	40.056236	16325	3885
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40	40.395203	8314	1100
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40	40.674946	6677	1464
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_iff	40	40.269688	17716	3577
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zne	40	40.904085	30011	1300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	40	40.073513	6096	369
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	40.362367	10885	2424
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.511942	25934	3438
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.539662	34566	1220
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.019417	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_le	40	40.211050	17863	1784
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	15.323584	35505	1612	0.1.1.0.38.20	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	40.323848	19303	4928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40	40.141086	11797	1713
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.015433	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_correct	40	21.375839	26044	3107	5.1.2.0.12.0.19.0	synth with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: simpl; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0.044386	10	5	3.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.007978	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.676695	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.018458	5	3	0.2.0	synth with cache (only 1: destruct n; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	40	40.062001	7196	3967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40	40.032916	9993	1589
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.218140	92	26	1.4.2	synth with cache (only 1: intros n; only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40	40.056818	15374	3887
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.791969	779	135	1.1.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.886683	76	31	0.3.1.1	synth with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_2	40	40.552858	7343	979
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Gauss	40	40.499396	25594	2567
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40	41.015347	23720	2150
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	4.008815	3729	421	19.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	40	40.688849	47565	3601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40	40.058791	20313	1574
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.831102	20027	1763
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.218205	55168	4552
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40	40.039541	7076	4352
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_pos	40	40.311157	18349	3016
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.223000	92	25	1.0.4.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.053262	16178	353
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	40	40.107535	35574	5242
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	36.766208	73100	1532	4.1.6.3.138.24	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_add	40	0.010259	3	1	2	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mul	40	0.010133	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.074440	25617	3112
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.270866	58700	434
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double	40	11.211738	6140	1309	0.1.0.0.7.8.0.1	synth with cache (only 1: intros a; only 1: intros H; only 1: N.bitwise; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zodd_rem	40	40.067753	22225	2900
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	40	40.486233	30460	3485
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.315732	80735	3092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40	40.095815	31493	3615
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40	40.389603	30764	3405
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.638942	1072	168	1.14.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40	40.842821	12819	2064
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_correct	40	3.845305	1251	345	0.0.0.0.0.0.1.0.0.6	synth with cache (only 1: intros [| ] ?; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	40	40.169293	9016	1350
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	40	40.043411	10788	2037
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40	40.361662	5718	1720
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.088522	33387	2574
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.696996	26673	4293
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.282649	42824	4632
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.033766	10587	2667
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40	40.167119	427	106
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40	40.073962	21523	3933
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40	40.347615	17708	1782
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_le	40	40.140998	26922	3419
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.328334	20448	1651
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_Ncompare	40	40.535086	21514	5590
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40	40.083170	11671	2321
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_neq	40	40.917703	67807	2771
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.574679	54469	2882
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.370581	42687	4008
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA4	40	40.911902	35551	1381
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_lt_0	40	40.047221	10716	3703
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.385483	7565	2480
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.027437	6574	2524
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.473269	65305	2471
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zgt	40	40.905108	50147	3524
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	40	40.104782	4012	847
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40	40.359131	9549	2240
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	40	40.089916	31172	3726
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_pos	40	40.167667	24773	2077
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.133674	48592	5420
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0.104658	30	8	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	41.054561	66155	1354
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.014315	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.016889	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.015545	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	40.339111	12763	2690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40	40.550060	11756	1253
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40	40.100479	8558	1154
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	40.095695	28663	5246
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA5	40	9.822606	2602	434	12.13	synth with cache (only 1: intros n m; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	40	40.576399	30268	3913
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_opp	40	1.196322	423	204	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.174392	22086	4792
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mult	40	40.472779	21918	2341
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	40.650291	21662	2657
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	40.076157	11060	1468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	40	40.041343	12447	1607
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40	40.109661	26610	4206
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.254249	40794	3276
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40	40.891853	34685	3081
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40	40.319031	20440	1420
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	40	40.151346	23298	4561
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_bounded	40	40.110152	47343	883
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_minus	40	40.062829	20281	4070
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40	40.091959	31436	3784
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40	40.025710	4081	2676
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.925804	24758	7291
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	3.336409	926	382	0.1.3.3.0.0.0	synth with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: now discriminate Hb || clear Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.421725	21943	4716
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.049710	4252	955
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40	40.143130	41484	2330
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40	40.386168	12109	2819
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	8.778680	4023	773	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcrt	40	9.381913	1449	550	0.0.0.2.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.9	synth with cache (only 1: split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: auto; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40	40.757079	15572	1529
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_bit0	40	40.601654	31870	2980
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	40	40.913745	11574	857
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	40	40.191424	17368	2500
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.071322	19531	6162
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	40.026587	6532	2285
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40	40.140343	54641	3397
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40	40.052353	12958	5539
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_comp	40	40.749727	14444	2470
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40	40.046770	15281	2230
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40	40.003832	515	121
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA6	40	23.056283	7419	374	4.41.4.5	synth with cache (only 1: intro; only 1: intros EQ; only 1: Tactics.program_simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40	40.221389	39108	3925
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40	40.353893	2592	423
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.515273	17066	2258
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	3.806969	35	10	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40	40.191761	34359	4860
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	1.712846	13	4	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	40.070860	20775	5410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40	40.073368	7592	1230
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	1.077795	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	40	40.138252	48659	5537
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_lt	40	40.592490	42010	1267
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	40.506219	21087	3747
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.365139	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40	40.034161	6801	3804
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40	40.086399	12542	2621
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.309559	31559	4393
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zge	40	40.618508	37593	3038
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40	40.422590	3583	2023
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	40.166202	9487	1738
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.079820	12184	1996
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.106371	3	3	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	40	40.165305	30459	2082
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.596539	35229	2526
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	41.031047	16018	1910
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.356840	8977	3003
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40	40.488372	10678	1562
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.132421	46611	3714
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.439548	184	55	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.030563	7	4	0.0.0.3	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	1.670509	106	30	6.0.3	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	40.086894	26364	2633
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	40	40.382498	19169	1335
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	2.802315	1887	427	0.0.7.2.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intros; only 1: intuition; only 1: exists e; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.576024	3106	906
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	40	40.602094	17743	2961
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	8.000586	2199	229	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	40	40.354166	34292	2816
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	40.073699	24066	2588
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_def.Zpower_theory	40	40.844735	12546	993
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.324961	16494	2905
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40	40.080705	25501	3676
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	40	40.108438	35385	4347
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec	40	4.260183	1236	409	3.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_None_iff	40	40.126456	4407	596
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.045567	11450	4030
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.087286	29389	3721
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.030001	4425	3360
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub	40	40.655596	24177	2629
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	40	40.245968	21615	3949
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.023300	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40	40.024439	5067	860
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.195052	40440	3702
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40	40.214441	11341	1591
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcft	40	39.529951	6232	1832	0.0.0.1.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: exact Qcplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r; only 1: unfold Q2Qc; only 1: intros H; only 1: discriminate H; only 1: intros; only 1: apply Qc_is_canon; only 1: split; only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.292854	75520	4590
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.test_field	40	0.782230	259	107	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_div2	40	40.100125	24830	2650
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40	40.805544	12312	2472
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40	40.063577	14945	7112
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	40	40.182745	8813	1598
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_op_square	40	40.855741	15565	2009
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_succ	40	8.240227	4683	573	0.0.5.1.1.5.1.0.0.26	synth with cache (only 1: N.induct n; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: rewrite H; only 1: Morphisms.f_equiv; only 1: simpl; only 1: f_equal; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.662913	7139	1219
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	40.133667	49621	5034
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40	40.096598	32101	4565
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_eq_ps_atan	40	40.054923	8168	2073
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_comp	40	40.828059	28726	2643
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	40	4.377025	4659	341	3.0.0.0.17.29	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40	40.189219	22675	3591
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_equiv	40	40.945912	37936	1360
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.918555	18415	1523
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.115120	14762	2004
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred	40	3.596923	2191	353	4.0.19	synth with cache (only 1: destruct n; only 1: easy || now destruct 1; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40	40.858565	41882	5238
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	40	40.327472	12416	2089
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	40	40.075997	22148	5083
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40	40.043172	7700	2287
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40	40.046462	381	102
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	40	40.383478	61007	2976
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.574275	48960	2684
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.481647	38970	6347
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form1	40	40.050046	14814	2674
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40	40.072199	6828	2449
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0.008927	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0.009328	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.009096	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.008667	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form2	40	1.423808	183	89	2.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_compat	40	40.285942	22564	3728
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.083461	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.041042	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.897694	1162	139	7.17	synth with cache (only 1: intros n; only 1: now rewrite <- ?Nat.add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.013208	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.052096	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.072518	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.373442	142	33	0.7.1	synth with cache (only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zeq	40	40.684591	32713	3109
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_lt	40	0.128282	8	2	6.0	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.341855	35	14	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.011126	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.019705	350	82	11	synth with cache (only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.015883	3	3	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0.009036	1	1	0	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_not_le	40	0.256364	72	22	4.4	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_ge_lt	40	0.478883	377	45	0.21	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40	40.021655	4250	2549
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_lt_ge	40	0.083606	6	2	4.0	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_gt_le	40	0.084434	8	2	5.1	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.080045	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40	40.421821	7999	2138
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_below_rat	40	40.121215	10405	2837
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	40.598154	14133	1410
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40	40.380701	9382	1346
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	4.576494	1052	378	0.0.2.1.0.1.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros x y; only 1: intro H; only 1: intros; only 1: rewrite <- H; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40	40.062264	22407	1357
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.304661	60	30	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.607527	43037	5559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40	40.565343	6343	1582
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_spec	40	0.142411	295	36	21	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_ok	40	0.004221	7	1	6	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	40	40.641824	13026	2850
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40	40.063290	17065	2906
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.017431	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_2	40	40.623106	3279	1037
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	40	7.337143	6388	380	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_subset	40	40.072195	21956	2188
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.398288	748	209	1.0.11	synth with cache (only 1: intros L R n; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.469937	20436	3212
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	40.084838	29754	2221
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_asym	40	1.554833	305	72	2.0.9	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_irrefl	40	0.144592	159	25	4.6.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40	40.030295	7246	2183
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	2.734788	1017	184	1.0.0.6.4	synth with cache (only 1: induction 1; only 1: split; only 1: intuition; only 1: intuition; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40	40.470350	16976	5189
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.099387	32869	1673
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	40.087982	29799	3070
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec'	40	40.949089	35353	3543
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.060919	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	40	40.068410	21536	4553
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.050585	3508	2643
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	40	40.257766	35563	4287
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	6.684145	5534	1064	1.0.2.3.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40	40.089708	30101	3678
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.324970	22704	3545
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40	40.135694	18254	3382
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	40	40.667422	159718	558
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	1.566114	1201	259	1.1.1.2.0.10	synth with cache (only 1: induction l as [| x xs Hl]; only 1: intuition; only 1: intro; only 1: intro; only 1: intro; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40	40.303016	42874	4291
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eq_dec	40	0.089135	28	8	0.0.7	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	40	32.993899	15349	1626	2.16.2.1.9.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0	40	40.570984	35080	3125
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_add	40	40.112033	37613	2038
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40	40.439044	7736	3022
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.083009	26271	4720
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.032438	8173	1670
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	40	40.381836	45253	3513
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0.005127	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.023896	6395	1885
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40	40.068714	19824	4027
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40	40.148947	53500	7207
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_eq	40	40.029182	7255	2860
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	40.398486	11056	2038
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.390157	235	48	1.0.0.4.3	synth with cache (only 1: intro x; only 1: intros n H; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	40	40.762883	14513	1986
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.211760	10516	488
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_equiv	40	40.978424	70204	1499
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_min	40	40.953348	34260	2918
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.862787	41849	5217
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.025719	2201	391
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.372344	22965	4981
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0.010127	2	1	1	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0.009183	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_1	40	40.178585	28341	4031
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40	40.117805	17294	2976
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003520	571	115
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	40	40.138528	32738	5800
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.017223	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	40	40.501400	18389	3153
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_le	40	40.870306	13487	3237
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.445073	30368	1007
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form3	40	40.056042	10813	2192
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0.200593	41	11	0.0.5.1	synth with cache (only 1: simpl_relation; only 1: compute in H; only 1: compute in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0.006896	3	1	2	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0.016916	5	2	3.0	synth with cache (only 1: destruct p; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.010408	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.028357	12	4	1.0.4	synth with cache (only 1: intros (U, V); only 1: compute in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0.006083	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0.005863	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0.010605	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	6.241438	4546	974	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_const	40	40.060271	16208	3807
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.885002	409	94	4.5.5	synth with cache (only 1: do 2 rewrite InA_alt; only 1: intros (a, H); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	40.051728	14103	3545
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40	40.294157	22329	4915
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40	40.019745	4268	1507
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	34.453634	29712	2376	27.2.0.5.14	synth with cache (only 1: intros x y H; only 1: red; only 1: unfold Subset, Empty, impl; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.037275	11978	1164
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form4	40	8.389414	1174	610	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.352596	24985	4603
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.555061	28187	4515
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_scal	40	31.894970	18645	2737	4.0.1.2.9.8.0.1	synth with cache (only 1: unfold derivable_pt; only 1: unfold continuity_pt, mult_real_fct; only 1: intros n m p H; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_scal; only 1: elim H; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_id	40	0.228595	30	11	1.4.1	synth with cache (only 1: intros p0; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.208993	13	10	1.2.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.116352	40362	3431
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.403328	30923	3272
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_3	40	40.261101	3756	1569
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_jump	40	40.071093	25896	2577
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.345136	43884	5377
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.660171	30824	2367
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_trans	40	0.114345	16	8	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	40.092768	29838	4949
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_trans	40	0.276100	139	26	1.0.9	synth with cache (only 1: intros H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_trans	40	0.028221	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_div	40	40.149152	15994	4391
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	1.833389	2867	83	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.506625	26022	3370
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_nat_via_N	40	40.075729	25571	4900
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	40	40.069924	22441	3000
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.058579	13251	4525
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	40	4.319646	1641	342	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_1	40	3.688565	1790	166	1.1.0.19.2	synth with cache (only 1: intros H; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_eq	40	40.365695	26616	3832
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.040793	13989	1412
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	14.522142	21890	1297	0.4.1.0.0.49.2	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: firstorder; only 1: compute in H; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40	40.088673	27012	4389
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40	40.170875	19755	1828
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	40.180578	25167	5531
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	40	40.433881	45810	3725
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.786630	795	123	0.1.15	synth with cache (only 1: intros [| a l] H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.028530	7	4	1.0.0.2	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40	40.355328	52912	2802
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.025372	7	4	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	40	40.441595	23837	4982
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_1	40	40.612317	35148	2396
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_2	40	0.041011	20	6	1.0.0.2	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40	40.053255	14417	4450
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40	40.707130	15411	2547
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA9	40	40.992091	18115	1267
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_simpl	40	40.936624	41789	4139
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.031036	5385	2758
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40	40.870079	24237	1631
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.094319	33804	2867
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40	40.149014	56487	5449
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40	40.019305	3901	2128
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	40	40.044621	13975	2990
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	40.412979	37088	3597
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_compat	40	40.875767	15522	2099
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40	40.103295	15010	3246
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_bool_iff	40	40.626497	49353	5372
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	2.030657	670	289	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40	40.284504	32276	4237
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_max	40	40.926020	38969	4863
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	40	40.747702	30089	2814
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	40	40.070217	20669	2044
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	17.002123	17410	1541	0.0.11.11.15.1.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40	40.056083	15577	2139
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.704585	63946	3459
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40	40.035645	580	114
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_even_bool	40	3.054396	3287	291	0.0.0.0.0.0.0.0.0.0.17.1.0.8.23	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: split; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_nle	40	40.633491	47742	2534
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40	40.396555	10387	900
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.701317	59	44	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	40	40.409214	16358	3222
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	7.969919	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	40.253706	14091	3344
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0.008514	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40	40.324571	9772	2662
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40	40.019219	3959	2078
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	0.516972	203	14	20	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.058247	20216	1852
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.106926	39365	2731
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.038699	17	6	4.1	synth with cache (only 1: intros n m; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.208657	75	22	4.0.0.2	synth with cache (only 1: split; only 1: solve [ inv Raw.MapsTo; auto ]; only 1: destruct m2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_0	40	40.055092	17435	3751
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.294591	15579	3519
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40	40.641525	21792	1412
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.055949	17886	3470
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	40.023456	6731	1354
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40	40.529643	89094	3944
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	40	40.697318	29021	2653
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_tail	40	40.122759	36548	3650
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	40	40.564710	7595	1736
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40	40.049578	14218	2167
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	40.419855	47767	5028
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_via_nat	40	40.022628	5650	695
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40	40.562153	23021	4540
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40	40.220761	45444	2226
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40	40.057430	8145	1452
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	40	40.523858	24944	1740
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.579765	25508	3590
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.650443	49495	4448
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.096433	16753	2553
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	40	40.456531	13073	1808
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.285015	25676	5587
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40	40.477637	70949	5757
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.423113	40263	2953
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	40	40.494820	32775	3810
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40	40.177131	65875	5631
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	40	40.056339	15728	3175
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nsame_bit0	40	40.187983	36967	2366
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.112454	35	15	4.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_contravar	40	0.058600	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40	40.412574	14609	2506
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_contravar	40	0.318291	33	16	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	40.032972	8516	2011
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_tl	40	40.865408	16574	787
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA10	40	41.013490	18551	606
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.056980	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_succ	40	0.114240	29	7	4.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	40.586457	25678	1853
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	2.534654	401	156	0.4.0.4.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.113220	32	11	0.2	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_contravar	40	0.166871	25	15	2	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	40.169401	71467	2625
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_contravar	40	0.053447	4	4	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	40	40.074547	21093	4696
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.014406	2858	1739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.339301	17596	4370
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.378080	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.091026	12758	2473
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeqb_comp	40	40.894421	19480	1880
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	40.399673	11502	5417
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40	40.205397	37644	5191
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40	40.617542	9300	900
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.029439	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.909463	11599	936
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.959431	22421	3268
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.197468	21	15	0.0.0.1.2	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.061457	11304	1185
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40	40.002812	499	106
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.213229	47339	3115
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_4	40	0.050342	14	4	3.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_5	40	0.047124	2	2	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.039546	2733	496
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.971644	55491	1537
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	34.870381	48189	2702	2.2.2.6.2.2.2.2.6.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.452884	29922	1276
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	40	40.484931	46695	5600
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.021853	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.424908	137	44	1.0.3.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: intuition congruence; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.142061	10690	3941
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	40.070424	24130	3155
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.051564	13345	2417
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.041510	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	0.098234	42	17	1.0.6	synth with cache (only 1: firstorder; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.022267	5	3	2.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40	40.023334	4612	1532
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40	40.086986	30292	2618
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.032019	7725	3386
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.063362	20331	3916
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40	40.215286	60850	5468
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.467033	39492	2478
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40	40.113682	41916	1999
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.531117	20545	2889
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40	40.634823	16247	3165
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_acc	40	40.088766	29783	4797
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.184511	25781	5963
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	40	11.625269	10821	963	0.0.2.0.2.2.3.0.0.0.4.4.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_dec	40	1.196773	385	238	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.052669	15280	2595
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40	40.415777	48733	4701
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.052990	4414	900
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	40.084644	25645	3947
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40	40.048063	7559	5056
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	34.213126	32549	4125	0.0.0.0.1.3.3.0.1.3.2.6.0.0.0.1.3.3.0.1.3.2.6.0.10	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	11.533258	4395	745	1.15.1.0.0.7	synth with cache (only 1: intros [| x l] H; only 1: intuition; only 1: discriminate; only 1: simpl; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40	40.046245	15275	1354
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod	40	40.525050	20823	3486
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40	40.073277	21842	3144
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.953979	36914	1811
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.905032	85916	1380
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.add	40	40.196201	32256	5605
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.372308	24903	5135
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.163617	15	7	2.1.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.301620	42577	3521
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.009116	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0.008036	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.041051	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0.007045	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.196322	144	17	0.0.15	synth with cache (only 1: split; only 1: CRelationClasses.simpl_crelation; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0.124057	9	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.164745	45302	4024
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.563813	34	9	1.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.012876	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.199876	62	13	6.1	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.005110	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0.005727	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.009711	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.020858	8	4	3.0.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros n m; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.369761	319	42	22	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0.009267	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.011049	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	40.407282	29061	6570
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.217305	93	23	7.1	synth with cache (only 1: intros x y z H1 H2; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_less	40	40.660230	41725	4134
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.505894	77	9	0.12	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0.083751	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.010020	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.036721	7820	1585
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40	40.743570	11137	2236
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_pred_double	40	40.399296	51957	5937
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	40	13.240242	7298	2839	10.1.0.4.0.2.0.2.0.0.0.1.1	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p; only 1: intros; only 1: intros Hb; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.043968	5	5	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA12	40	40.975444	28554	1043
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40	40.324319	19984	3974
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.072216	23414	2974
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.021190	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40	40.162669	66609	2836
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.021905	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.022475	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.019181	5	4	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.021764	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_Sn	40	2.482737	1351	241	4.6.4.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	3.772978	2144	167	0.0.24.4.0	synth with cache (only 1: repeat red; only 1: intros x x' Hxx' y y' Hyy'; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40	40.059804	2988	1563
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	40	40.093413	29754	4672
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_gt	40	4.842352	1987	625	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	9.539585	1913	400	13.0.0.3	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder; only 1: firstorder; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40	40.385981	23273	2078
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.120739	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40	40.136047	21971	3461
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	40	0.135620	108	9	15	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.637638	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qleb_comp	40	40.846893	21940	2227
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_apart_0_1	40	0.085850	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.136160	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_Order	40	0.770768	295	114	2.0.0.0.0.0.0.3.0.0.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.194446	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_cancel	40	6.396078	2217	499	0.5.0.7.1.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: intro Hnotz; only 1: eapply Rlt_not_le; only 1: eauto; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.095557	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.275578	8571	3938
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	40.372766	29950	4317
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40	40.230936	14716	2838
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40	40.043910	9404	3492
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40	40.005801	980	131
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mod	40	40.663724	33038	3610
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	40	40.856410	17909	3001
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.528998	19495	5767
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_4	40	0.049739	4	3	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.087748	248	108	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	40	40.029003	7147	1370
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	40	40.956066	59993	2145
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40	40.438262	19688	1587
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	40	40.479319	48180	5023
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.051147	14653	3200
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40	40.404340	17097	4912
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.063777	19923	2374
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	40	40.038030	11229	3104
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.062560	22684	1091
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.045138	12029	4736
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	40	40.265928	13932	1950
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.615687	25322	4189
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40	40.070145	23522	2784
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	40	40.406445	75295	4858
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.108813	36909	3662
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	40	40.418837	16602	3895
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	4.903793	2112	354	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	40	40.268935	13279	3212
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	32.109848	34510	3043	22.9.20	synth with cache (only 1: intro x; only 1: intros n H; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	40	40.071568	21369	3607
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40	40.335309	49647	4663
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40	40.620550	42175	4079
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	40	40.071648	19324	3112
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.032053	7993	1682
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40	40.004018	566	175
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	40	40.493953	16678	4692
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40	40.052174	13172	3633
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	40	40.515022	13217	2930
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.982107	721	96	10.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.873462	19698	2020
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.025192	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.007282	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.005521	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	40	40.326197	52839	2705
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	4.159505	2537	479	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	2.682455	3382	414	3.1.3.4.1.2.0.11	synth with cache (only 1: intros RS' n; only 1: induction n; only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.331320	255	68	1.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (CReal_plus_comm y), (CReal_plus_comm z) in H; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.373515	112770	4495
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	40.342665	20246	2359
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.304380	198	43	1.6.0.2.3	synth with cache (only 1: split; only 1: easy; only 1: auto; only 1: intros l1 l2; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.128739	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.051235	18203	1179
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.015553	4	3	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40	40.759316	19732	2243
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_spec	40	40.682697	24258	3451
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	40	0.037648	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	1.319006	688	171	0.1.1.3.2.3	synth with cache (only 1: induction 1; only 1: compute in H; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA13	40	40.659746	17579	753
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA14	40	0.159046	11	10	0.1.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40	40.064448	20845	3213
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.620573	28581	4319
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	40	40.151955	55665	5030
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40	40.014915	3129	1667
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_not_refl	40	40.667780	45030	4547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40	40.390979	8663	2038
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.408160	25825	872
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.031943	3	3	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0.024973	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40	40.133587	15509	2160
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	31.757017	27133	525	2.2.0.42.77	synth with cache (only 1: intro m; only 1: induction m; only 1: simpl; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.550345	26710	4667
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_f_morph	40	40.458573	39072	4912
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.nat_po	40	40.393493	48772	3181
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.map_simpl	40	0.267356	23	9	0.0.1.2	synth with cache (only 1: induction l as [| a tail]; only 1: simpl; only 1: reflexivity; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_cancel	40	40.045657	10579	3051
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_l	40	2.289156	800	100	0.0.0.17	synth with cache (only 1: intros l; only 1: unfold Qeq; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40	40.986519	86590	4361
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.285736	28596	4886
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	40	40.518774	9055	3519
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.161557	29	11	1.0.2.2	synth with cache (only 1: split; only 1: now destruct 1; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.067734	20207	2691
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003394	922	99
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	9.504133	7197	1132	2.0.11.2.5.6	synth with cache (only 1: intros; only 1: elim H0; only 1: intuition; only 1: rewrite InA_cons; only 1: eauto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.637968	31555	4103
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_r	40	1.767777	344	62	1.8.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: now rewrite Pos.mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	40.308016	28615	3459
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.913063	27886	5179
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_pred	40	8.708781	4911	716	2.18.3.0	synth with cache (only 1: boolify_even_odd; only 1: intros; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	40	40.025900	3343	488
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.652129	53829	1758
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	42.915718	31347	821
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.522352	37913	4267
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comm	40	9.113518	3157	934	0.0.0.0.1.0.3.6.3	synth with cache (only 1: destruct x; only 1: intros; only 1: generalize 1%Z; only 1: red; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40	40.355973	14341	4377
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40	40.106615	39499	2913
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	40	40.043272	7535	2864
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.031782	9144	1065
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.108234	5	4	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.143786	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	40	40.099541	28674	5268
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	40	40.364040	21341	2645
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40	40.080947	25565	2796
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pow	40	0.978786	655	98	0.0.0.0.12.6	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	40	40.759692	18360	2755
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.395473	61518	4094
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_total_order	40	17.169027	12740	1866	1.0.0.9.2.7.6.9	synth with cache (only 1: constructor; only 1: intro H'0; only 1: intros n m; only 1: simpl; only 1: destruct (le_gt_dec n m); only 1: intros H; only 1: intuition PeanoNat.Nat.order; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.064384	18037	5857
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.212366	182	13	19	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.190970	26044	2221
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.054628	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	40	40.527430	6036	2396
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.189287	27667	6756
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40	40.146782	58318	3472
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.404432	80054	3810
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	40	40.137894	48738	6227
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40	40.062960	19221	2372
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.760014	19301	4465
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40	40.161781	22850	2294
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	11.223982	2578	381	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	40	40.515232	78655	2385
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ	40	40.885160	19401	2309
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40	42.799062	7070	1547
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40	40.091518	30191	2989
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	40.358403	29297	5737
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	40.134804	29266	3337
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	40.484218	74654	3865
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40	40.043837	11204	1785
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40	40.812569	4600	933
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	40	40.700792	26339	4522
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.068732	23875	2278
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA15	40	40.954781	12737	1057
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.047425	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA17	40	0.052003	2	2	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	40	40.147689	53727	5386
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.035409	11111	995
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_1	40	40.605260	27285	4773
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40	40.511281	10651	1720
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.154254	13612	1856
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40	40.535094	10471	1928
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.029758	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	40	0.773836	226	113	0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.140490	4	2	2.0	synth with cache (only 1: intros; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.123502	15803	1697
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	40.254866	32212	2422
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.048801	11580	3848
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	0.009688	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.005528	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.005548	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	4.341722	547	132	3.1.3.3	synth with cache (only 1: intro n; only 1: unfold relation_equivalence in *; only 1: intros x x' Exx' y y' Eyy'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40	40.583898	88790	5510
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	40.255787	12537	2826
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40	40.002428	433	90
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40	40.510411	16201	3829
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40	40.232423	39878	5722
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40	40.038407	3991	599
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_rem	40	40.720064	38300	3625
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40	40.404364	32822	2569
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.849508	24515	2782
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.784324	763	92	0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot2	40	0.017874	4	3	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_pred	40	40.615355	32262	4059
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_div2	40	0.016441	1	1	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.973603	331	78	0.1.8.1	synth with cache (only 1: intuition; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.017716	1	1	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA18	40	10.959605	4351	491	34	synth with cache (only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	40	40.021229	4628	1041
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.204045	8	5	1.1.1.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	40.825175	18911	3378
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	40	40.908678	27156	2320
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_div2	40	6.508823	996	300	0.0.3.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	40.449967	24532	2899
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_involutive	40	40.869530	9917	1985
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_opp_r	40	0.151388	10	5	0.2.1.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros a0; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40	40.077271	26244	2052
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.608339	16309	3180
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_0	40	40.041117	11340	3524
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40	40.065772	16020	6578
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_pow	40	40.051452	13548	4552
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.430048	31207	2791
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.495537	10098	1704
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	18.619644	9119	1663	0.3.1.6.0.12	synth with cache (only 1: intros def_n0; only 1: intros x y z; only 1: compute; only 1: intros; only 1: rewrite <- H0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.049045	9	4	2.0	synth with cache (only 1: intros; only 1: dintuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40	40.212940	49196	6522
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	40	40.433716	87014	4730
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	40	40.766961	32380	3969
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.697397	37636	3079
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.353249	5368	2434
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	40.267384	23099	7194
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.050546	13811	3016
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	23.904615	43343	2012	0.8.72	synth with cache (only 1: compute; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40	40.512060	81489	4641
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	40	7.502536	4132	792	0.4.3.2.1.8	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	40	40.229124	39133	5587
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	10.709798	3606	1295	1.0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: unfold Empty, empty; only 1: red; only 1: intros; only 1: inv; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.018922	3	2	1.0	synth with cache (only 1: unfold elements; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	21.707634	16424	1557	29.20.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40	40.027926	6926	1611
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_divisors	40	40.130776	14907	1398
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	40	40.285895	24865	5445
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40	40.032179	9697	1098
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.209591	123	31	14	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1.437764	2376	179	0.0.0.2.1.35	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.462334	54895	3011
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40	40.526656	13935	3435
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.613347	38387	3976
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	40	40.112607	18405	2068
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40	40.212553	49311	6603
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1.179369	861	61	0.0.0.1.24	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40	40.136153	20520	2454
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40	40.486464	29469	6497
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	40	40.091958	33964	3137
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40	40.909517	6084	1636
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	31.667944	4464	961	2.12.6	synth with cache (only 1: intro x; only 1: intros H; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.054988	17981	1870
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.008456	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.010147	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.019827	11	3	3.2	synth with cache (only 1: intros a a' Ha; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.233000	12	4	0.2	synth with cache (only 1: intros A A_wd A0 AS n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.046230	16	9	0.0.0.0.0.2	synth with cache (only 1: split; only 1: reduce; only 1: firstorder; only 1: reduce; only 1: unfold pointwise_relation in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.128038	44311	5210
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.029683	9029	1235
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.277072	10086	2490
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_3	40	40.173513	47717	3567
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40	40.525791	11252	2099
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.057587	4747	1478
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	40	0.012343	1	1	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	40.345567	75290	2566
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	40	0.877464	622	108	16	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	3.261149	1948	551	0.1.0.0.6.0.2.1.0.0	synth with cache (only 1: intro Dec; only 1: split; only 1: induction 1; only 1: constructor; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: induction 1; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.430420	10709	1708
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40	40.100715	31107	3669
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40	40.321053	43344	5559
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.651761	81	36	0.0.1.5	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.496227	15868	2142
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.759345	405	100	0.13	synth with cache (only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.003590	169	55
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.339424	32242	3612
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.762200	21627	2421
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_testbit	40	0.264273	42	26	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	40	0.036904	6	5	1.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40	40.476025	5797	1676
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA19	40	40.969986	21240	2132
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA20	40	0.168170	4	4	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.060135	8992	1966
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	40	40.524533	19770	208
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	40.939794	49651	1574
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	40	41.007610	14180	870
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_quot2	40	0.130770	14	8	2.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	40	40.118287	42190	3983
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40	40.081948	26797	2608
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_r	40	40.474315	35324	3398
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_1	40	40.052336	5849	2348
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.006478	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_sym	40	0.005855	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.006456	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.053413	16544	1629
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	40	40.332238	10823	3078
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.203980	57	29	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.085463	29038	3939
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40	40.104538	33023	4818
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.189858	26615	7392
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40	40.481764	65997	2190
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.602777	11786	4844
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	40	40.326500	14507	3461
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40	40.260660	61056	6660
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	40	40.833751	41872	3046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40	40.059059	16891	2210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	40.465930	4239	733
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.325382	50813	3841
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_maximum	40	40.049633	15056	3158
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.350898	54508	5393
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	40	7.316898	6178	662	0.0.0.4.13.1.8.0.12	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: intros Ha Eq; only 1: easy; only 1: simpl; only 1: induction l as [| a l IH]; only 1: intro H; only 1: inversion 1; only 1: auto; only 1: now auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	20.061752	11085	2646	1.0.0.4.7.0.1.5.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: exists x; only 1: invlist InA; only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	40	12.286003	2154	735	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.377342	8113	1505
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	40	1.002984	443	107	0.0.0.0.0.2.1.10	synth with cache (only 1: intro; only 1: functional induction (min_elt s); only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	40	0.407749	39	25	5.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40	40.965756	33149	1384
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40	40.043105	10411	3247
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.027856	8126	1049
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_rel_prime	40	40.076021	25563	3054
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40	40.115910	17003	3284
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	40	40.425296	42643	4181
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.065044	19468	3017
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.346039	68	31	0.3.3	synth with cache (only 1: intro z; only 1: intros y (Hy, Hy'); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_succ	40	40.605053	20447	3218
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40	40.233626	17616	6113
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40	40.708265	49351	4337
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40	40.073981	16908	1650
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40	40.254339	56987	6633
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	40.058445	17665	3349
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40	40.038485	7817	3697
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40	40.472409	11892	2788
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	40	40.095581	30633	4653
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40	40.028661	8291	905
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.436963	11120	1872
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_4	40	40.708661	47518	3976
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40	40.536197	19079	873
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	38.100315	41728	4851	0.0.0.4.0.4.4.0.2.0.6.13.15	synth with cache (only 1: intros l' n; only 1: intros m IH; only 1: intros (p, H); only 1: unfold MapsTo in *; only 1: induction H; only 1: destruct y; only 1: destruct H; only 1: compute in H; only 1: exists e; only 1: eauto; only 1: destruct IHInA as [e H0]; only 1: exists e; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.413561	69669	3722
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_l	40	40.089564	14909	4691
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40	40.089264	28046	3572
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40	40.196805	33891	5739
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.770158	3165	242	1.0.1.0.31	synth with cache (only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	40.516534	10711	2138
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40	40.001547	214	50
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	1.341628	440	113	0.1.5.3	synth with cache (only 1: intros H; only 1: rewrite H; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.021784	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.186448	27	15	0.3.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: destruct (split (A:=l)); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.583408	51960	4186
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40	40.468927	27832	2752
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj	40	40.622856	26922	4519
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.intro_Z	40	40.350671	15936	2340
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.058210	788	149	4.12	synth with cache (only 1: rewrite InA_cons; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40	40.076156	24049	3387
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	2.013713	653	153	0.0.1.2.9	synth with cache (only 1: intros H; only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_iff	40	4.474271	1160	370	10.0.0.2.1	synth with cache (only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.008240	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pos	40	0.179697	8	7	0.1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.008795	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40	40.619800	34607	3756
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.008114	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.008154	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	40	0.007958	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.007291	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.006484	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	40	40.101779	34958	3307
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	40	1.388384	67	19	9	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.009870	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0.006400	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0.006841	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.005649	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0.007810	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.005442	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0.006202	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40	40.086269	30159	2194
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	40	40.059780	11212	3391
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.919720	13814	2248
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	40	40.436747	45196	4936
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.039142	12840	767
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	40	40.080553	26779	4590
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40	40.105211	24593	3307
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_add	40	6.808782	1015	481	3.6.5	synth with cache (only 1: unfold Z.le, Z.min; only 1: intros; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mul	40	0.315629	95	46	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	40	40.435088	24597	1334
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.350453	50169	5788
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_elim	40	40.441159	33865	3123
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.222752	94	26	2.1.2.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.072582	30	11	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.028235	12	6	1.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zge_compare	40	0.021999	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	40.061299	16210	5445
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zgt_compare	40	0.019647	2	2	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.014950	4	2	1.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	40	0.009203	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.026334	10	3	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.312561	45568	5228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	40	40.061416	20078	2718
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40	40.361643	10069	1442
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40	40.230636	50905	4287
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.264956	60505	5693
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40	40.172043	33614	6316
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.577380	371	68	4.2.0.10	synth with cache (only 1: destruct l as [| x xs]; only 1: inversion 1; only 1: constructor; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40	40.350778	9779	2511
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_minimum	40	40.034034	8850	3939
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	40	40.448199	15775	2305
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_opp	40	40.240094	23611	2595	2.2.0.0.0.6.3.2.0.32	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: unfold Z.ggcd, Z.opp; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: now f_equal; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40	40.073679	21413	3782
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0.023636	10	4	3.1	synth with cache (only 1: intro s; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	0.015398	5	2	2.1	synth with cache (only 1: intros m H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	40	40.329096	18002	4081
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40	40.019627	3958	1728
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.902914	39351	3247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40	40.049725	8240	1219
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	40	40.042927	12336	1711
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_mult	40	40.057384	19230	2168
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	40	40.351270	106474	4116
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40	40.245459	31664	6949
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_succ	40	40.892401	37870	4274
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_succ	40	0.006542	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_le_succ	40	0.005944	1	1	0	synth with cache (only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_le	40	0.017216	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_le	40	0.006788	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_gt	40	0.018312	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.555470	49183	4902
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	6.157391	4795	997	1.0.0.1.1.0.1.0.0.12.0.2.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: intros; only 1: firstorder; only 1: simpl; only 1: apply Sorted_merge; only 1: auto; only 1: destruct H; only 1: auto; only 1: auto; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40	40.055076	13116	2701
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	40	19.339395	19744	1753	0.0.0.0.13.0.27	synth with cache (only 1: intros Hbeq; only 1: unfold filter; only 1: intros a n Ha Hn; only 1: rewrite xfilter_spec; only 1: simpl; only 1: intros; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40	40.036742	8317	2036
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.425091	17435	2804
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	9.019092	4133	986	1.0.0.1.3.0.0.9	synth with cache (only 1: intro Pdec; only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40	40.054200	19091	1544
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_0	40	6.439987	13304	395	5.63.24	synth with cache (only 1: intuition; only 1: case H; only 1: Z.order').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	26.950751	12150	1637	4.1.1.2.0.0.5.14.12	synth with cache (only 1: red; only 1: red; only 1: destruct s as [| c l y r]; only 1: unfold remove_min; only 1: inversion 2; only 1: inversion 1; only 1: intros; only 1: destruct delmin as (x0, s0); only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40	40.983900	16007	2025
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40	40.124586	44874	4698
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.027841	7694	1748
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	2.559306	1023	348	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	4.923433	4712	817	57	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40	40.410714	14483	2871
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_z	40	40.246966	35214	2639
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_succ	40	21.258187	8168	1633	1.0.1.0.0.0.0.2.7.14	synth with cache (only 1: unfold Z.le, Z.max; only 1: intuition; only 1: simpl in *; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: unfold N.succ, N.add; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	40	4.683564	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	40.526433	17853	1663
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40	40.473349	12130	2216
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_r	40	40.076673	8032	2935
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.095176	27842	3947
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	40.218853	55049	3712
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40	40.497742	29883	4288
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	5.776254	2810	502	0.0.1.4.17	synth with cache (only 1: intro; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40	40.448338	26552	2672
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40	40.423325	36243	2559
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40	40.004570	100	42
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	5.682158	2886	566	14.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	7.394855	3180	694	1.1.2.10.4.0	synth with cache (only 1: intros; only 1: invlist InA; only 1: induction l; only 1: intuition; only 1: auto using eqke_equiv; only 1: auto using eqke_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.209009	38	13	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	40.208593	30267	5305
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_def	40	40.193687	39248	6316
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.089217	31517	2812
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.041741	11845	3775
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_assoc	40	40.893430	20245	3003
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40	40.064762	20149	2428
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.015923	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_r	40	0.097494	19	6	0.1.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	40.419532	27766	2865
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	12.095274	3172	785	0.0.0.0.8.0.3.2	synth with cache (only 1: rewrite InA_cons; only 1: intuition; only 1: invlist Sorted; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40	40.120818	22206	3589
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.100282	32883	5977
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.318555	48958	5991
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.547793	463	101	6.1.3.0	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40	40.326165	40820	4713
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	40	40.502555	36044	6417
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	40	40.068498	23201	2821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40	40.405386	16058	2335
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40	40.477606	66961	5219
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_constant2	40	40.038625	9477	4606
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40	40.644924	53736	411
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.393690	24407	4024
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40	40.386167	11113	2890
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40	40.042709	8760	3728
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40	40.440570	36084	4283
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.937171	9951	1360
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.pos_eq_refl	40	40.394009	37349	4872
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.303130	80	18	3.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40	40.570027	52804	4746
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.id	40	40.600443	56855	2511
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.084915	4483	745
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40	40.045462	15916	911
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.391055	19800	3353
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40	41.069224	12026	1610
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40	40.258184	72084	6806
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_le	40	40.376758	32370	3311
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40	40.045127	10984	2369
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40	40.233248	41578	8591
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40	40.530178	45057	5194
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	40	24.092884	13117	2198	15.7	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	40.466179	20014	5183
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40	40.531964	76420	11417
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.070085	17563	2801
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.298486	178	36	0.1.9	synth with cache (only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.102144	37862	3229
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40	40.101247	35806	2648
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.393033	1251	50	1.0.46	synth with cache (only 1: intros EQ; only 1: simpl in *; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40	40.744144	9364	1526
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40	40.020968	4622	1993
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	2.501258	1912	115	0.0.0.2.42	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40	40.099209	33225	4209
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40	40.519483	16169	598
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_2	40	40.046700	16544	1520
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_1	40	40.618477	37241	3313
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_sub	40	40.658660	28163	4246
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pred	40	0.046985	14	6	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_compare	40	0.389311	106	56	1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	40.520124	20139	2053
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_le	40	2.780755	891	207	0.2.20	synth with cache (only 1: unfold N.le, N.ge; only 1: intros; only 1: now rewrite N2Z.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40	40.255362	43486	2472
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40	40.273940	22052	5323
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40	40.189870	67025	4004
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40	40.465295	33783	4601
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40	40.467859	20656	2515
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40	40.001626	166	30
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	40.329962	44564	7492
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_add	40	40.338535	20817	5388
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_diff	40	40.053131	10889	2618
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.049768	15704	1747
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.026799	11	4	4.0	synth with cache (only 1: intros a b H; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.063046	19	7	0.0.0.4	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.163046	17016	1512
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_r	40	0.064448	13	11	0.1.0.0.0.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comm	40	0.086041	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40	40.587760	58832	1383
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40	40.118392	29089	2108
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.430535	20452	2625
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.091796	26901	4103
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40	40.205787	41540	7036
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40	40.320298	34156	6395
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40	40.242177	20739	5398
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.030090	7	6	0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	40	40.351014	38640	4650
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	40	40.650487	38685	3409
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	2.760527	7118	436	0.4.0.1.1.39.1	synth with cache (only 1: intro; only 1: apply NNPP; only 1: red; only 1: intro H'0; only 1: elim H'0; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	40	10.024623	4870	1000	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40	40.055281	16977	3195
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	40.429392	37227	2234
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.352429	58947	6561
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	40	40.057619	17760	3745
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	5.144169	1707	595	0.0.2.0.1.5	synth with cache (only 1: intros X Y H'; only 1: intro IT; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40	40.052577	13756	2016
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40	40.509205	27262	1827
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40	40.387991	21202	3655
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	40	40.271913	20458	4728
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.form_eq_refl	40	40.372954	61849	4832
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	40	40.405663	33814	5367
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Z_modulo_2	40	40.947662	9059	1059
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.602175	35566	4060
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj	40	40.560017	34289	3127
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.054102	12803	1429
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.043082	14033	1092
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iff	40	0.609082	283	87	4.2.1.0.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.607723	933	255	0.0.1.11	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.024327	7	3	3.0.1	synth with cache (only 1: repeat red; only 1: intros f g l H; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	40	40.142964	5569	2040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40	40.025881	4811	2925
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.300623	21220	5183
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_pred	40	40.415793	38913	3178
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_pred	40	0.006472	1	1	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40	40.052296	14506	2985
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40	40.133919	46546	6499
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40	40.336791	25204	3903
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	23.844861	10332	1774	16.0.7.5.4.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: apply permA_skip; only 1: intuition; only 1: auto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.020826	4	3	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	36.865055	20264	2240	2.15.2.16	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: generalize LT; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.049641	13207	2816
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	2.470626	586	380	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.536742	18926	1378
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	40.244494	11072	1755
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.473722	25035	3663
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0.009012	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0.012460	2	1	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.008701	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.009276	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.007672	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.007710	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0.008581	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0.006557	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.018754	11	4	1.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.006823	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.538700	392	55	18	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0.007605	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0.006674	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0.006258	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40	40.437849	11589	2091
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	5.530870	1481	596	6.7.1	synth with cache (only 1: symmetry; only 1: generalize (F.mem_iff s x); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40	40.131644	51502	2425
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	40	40.098372	33127	4152
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_3	40	40.039498	12557	1750
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40	40.429127	8041	2419
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	40	40.170681	43441	2527
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40	40.046755	15620	1014
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat	40	9.885916	3547	692	22	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	40.539344	24147	1803
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	40.422047	24197	3441
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.443506	45052	3401
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40	40.153417	51617	3691
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40	40.315249	12308	4560
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.490760	23249	3722
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	19.951740	8810	2577	0.1.9.1.0.0.4.6	synth with cache (only 1: intro l'; only 1: intros l HF; only 1: induction 1; only 1: auto; only 1: simpl in *; only 1: tauto; only 1: firstorder  (subst; auto); only 1: discriminate || auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40	40.001746	128	32
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	40	40.413976	61537	2455
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_0	40	40.084480	16023	3262
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	40.063999	16601	4423
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.025263	9	3	1.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.478887	12775	1860
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.097690	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40	40.070026	16229	2713
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	40.089358	11704	4306
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	40.395866	16373	4684
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.335636	22532	3044
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	40	40.362764	14029	2240
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_map_NoDup	40	40.168466	18383	3877
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40	40.317342	56918	7285
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.finite_image	40	40.362662	82944	7126
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Gt_Psucc	40	40.253129	15392	3775
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40	13.926237	7351	1341	0.0.1.1.0.0.0.1.4.13	synth with cache (only 1: intros a a' Ha n; only 1: subst; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: simpl in *; only 1: intuition congruence; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40	40.673542	6557	879
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40	40.437665	48273	4628
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	7.376768	3424	614	5.3.0.0.0.3.7.3	synth with cache (only 1: intros s; only 1: intros x y z; only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite <- H0; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	40.153162	21576	6477
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Psucc_Gt	40	3.261626	1840	380	0.0.0.2.2.1.0.2.2.1	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.020063	4062	1460
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.map_app	40	0.054546	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.length_map	40	0.032590	5	5	0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	40	40.223930	25816	3708
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.693744	23816	916
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.312421	17835	3547
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.011519	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_inv	40	4.409504	3104	703	12.0.3.0.3	synth with cache (only 1: intros H'5 H'8; only 1: intros x0 H'; only 1: elim H'; only 1: elim H'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.228517	45164	6182
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40	40.047015	12319	2580
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0.600169	1520	59	2.51	synth with cache (only 1: split; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zsplit2	40	40.902695	17051	467
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	40	40.071157	10009	1478
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_ex	40	0.045209	8	4	2.1.0.1	synth with cache (only 1: intros; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_ex	40	0.173962	25	14	0.0.0.0.1	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40	40.025998	6626	1928
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_double	40	40.385649	9307	1998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40	40.038318	7103	4786
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	40	40.359974	27814	3120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.561788	16006	1934
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	2.192923	4898	219	63	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.466514	721	68	36	synth with cache (only 1: auto with typeclass_instances).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40	40.490981	58086	6743
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40	40.071477	17840	7834
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eq_dec	40	40.400749	26911	3811
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	40.949083	39232	1644
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.052620	14	4	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.016398	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.832316	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_pos_0	40	0.011561	2	2	0.0	synth with cache (only 1: intro n; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.013264	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_neg_0	40	0.010158	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40	40.485653	44520	5059
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40	40.533799	23744	2559
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.402794	185	22	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	40	2.404410	2475	375	4.3.5.7	synth with cache (only 1: intro n; only 1: intros; only 1: simpl; only 1: eauto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	0.138199	164	24	5.3.2	synth with cache (only 1: simpl in *; only 1: intros; only 1: eauto with set).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose1	40	5.413961	2951	679	5.0.4.5.0.2	synth with cache (only 1: induction F; only 1: auto; only 1: intros n m H1 H2; only 1: unfold push, map, contents, index; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40	40.454216	17927	3687
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.076090	13336	3454
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	40.629918	32884	3864
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	2.413475	580	51	21	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.048900	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.367555	65756	4383
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.034035	19	5	0.2.3	synth with cache (only 1: intros n H; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.061918	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	0.038381	26	7	2.5	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.007029	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0.009616	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.149935	13426	2219
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	40.076746	24460	4305
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	40.117354	47348	2727
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	3.582855	4077	516	25.3.0.3.0.2.2.28	synth with cache (only 1: constructor 1; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.070450	19685	3598
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_ge_2	40	40.072972	26638	2135
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	4.624214	4661	795	0.0.0.0.0.0.3.0.0.0.0.0.3.0.0.7.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: destruct (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	2.866168	1227	303	0.0.2.7.3	synth with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_trans	40	40.195672	16021	1660
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	1.015082	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.187074	32	12	1	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.434808	9309	1806
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.402647	198	66	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40	40.026849	8349	1162
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.743875	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	40.148548	15000	1343
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	40.372034	18784	2417
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	0.652512	740	64	20.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	2.335747	385	107	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.301488	83	22	0.1.0.5	synth with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	1.454998	875	138	13.5	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	39.428080	10497	4661	0.0.0.0.1.0.0.0.0.4.1.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: inversion_clear 3; only 1: inversion_clear 3; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.112665	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40	40.069887	23401	1636
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_min	40	40.958437	37154	3596
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40	40.328582	41050	3984
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	2.127775	1353	326	1.0.0.0.0.0.6.0.3	synth with cache (only 1: unfold or_cnf_opt; only 1: intros; only 1: rewrite orb_comm; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	40	40.901656	10091	1964
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40	40.001068	70	30
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_nat	40	21.234834	23304	1972	30.0.0.34	synth with cache (only 1: intros n H; only 1: simpl in *; only 1: apply (Nat.lt_irrefl (S n)); only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	19.981773	12421	1877	11.19.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hy; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	40	40.456099	57498	4926
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_1	40	40.030144	6193	3505
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.108812	34792	4795
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.862767	25145	2110
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.542098	16764	4776
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	32.730856	9679	4304	0.0.0.0.1.1.0.0.2.2.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40	40.446085	50078	4685
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_list_carac	40	40.244358	11211	4024
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	40	40.750048	14505	2856
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.250399	65847	7570
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	40	40.313320	16489	4135
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	6.872135	3679	773	6.2.1.0.1.0.0.0.0.2.0.0.0.1	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40	40.411133	26192	5190
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40	40.474592	55489	3004
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.370605	66426	4611
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40	40.091376	20750	3101
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	2.255990	1353	360	1.1.2.0.1.9	synth with cache (only 1: induction l; only 1: simpl; only 1: intros l l' Hperm; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40	40.053715	16647	2397
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_map	40	40.374618	29827	4493
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	40	40.296057	63156	4295
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.559900	55101	3922
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40	40.058369	15665	4064
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose2	40	35.445026	20619	3779	22.0.1.2.4.1.3.0	synth with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: intros; only 1: auto; only 1: intros A f assoc a0 comma0 l; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40	40.423076	10342	2622
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	40	40.210568	13347	1772
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.024499	9	3	1.0	synth with cache (only 1: unfold Equal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40	40.028289	8594	1907
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40	40.051519	11489	5121
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	40	40.371784	20197	2404
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ	40	0.030730	8	6	1.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.998773	15548	1999
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	9.753980	9535	1687	0.7.0.2.3.2.2.1.4	synth with cache (only 1: intros n m; only 1: revert m; only 1: unfold eq; only 1: Bool.destr_bool; only 1: destruct compare; only 1: intuition; only 1: now right; only 1: right; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.611001	24244	1910
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.077630	23196	6542
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	40	40.343572	95849	5358
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	40	40.346913	45263	7856
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.036886	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40	40.111551	32624	8579
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40	40.326102	18094	3162
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.626997	390	102	0.2.0.0.0.2.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40	40.503031	46593	3269
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	1.386937	502	232	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	40	40.030275	8701	1700
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.581483	40248	3374
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_true	40	0.118976	112	28	0.7.0.1	synth with cache (only 1: induction l; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40	40.288988	79828	2433
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_map	40	1.686543	937	251	1.1.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction l; only 1: intros; only 1: split; only 1: simpl; only 1: intros l; only 1: auto; only 1: simpl; only 1: intros l; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.058603	17690	3387
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40	40.101738	34305	3722
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_0_1_more	40	40.080775	27316	2753
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	40.331647	44857	7000
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40	40.021213	4908	2008
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_total	40	40.710230	18370	2559
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.182379	36633	4739
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_cons	40	3.135872	1857	515	5.1.1.5.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	40	40.068030	18146	5325
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.562675	38456	270
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	40	40.417082	17575	2287
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.307202	19395	5200
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40	40.681282	29692	467
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.135822	48577	2234
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0.007488	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0.014975	6	2	4.0	synth with cache (only 1: intros m x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.031295	11	4	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.387464	32137	2408
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	0.745135	609	109	4.0.1.0.3.7	synth with cache (only 1: induction m; only 1: simpl; only 1: intros p l inlist; only 1: auto; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.299501	33373	4156
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	40	40.822417	25274	3280
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose3	40	24.989685	15619	2906	1.0.2.0.0.5.12.0.0.0.0.0.0	synth with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: intros; only 1: auto; only 1: intro e; only 1: intros A eq_dec; only 1: intros Az LS; only 1: simpl; only 1: apply IHF; only 1: induction F; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.166344	12462	2101
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	40.914100	26919	2668
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.001077	69	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.032618	7559	3363
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.206558	29523	4249
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral_l	40	40.481867	13783	1534
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	40	40.124896	33376	3280
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40	40.269877	20919	6235
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	2.129098	773	381	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_carac	40	40.159140	18521	5066
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40	40.234121	53223	8455
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	40	40.563642	18166	1238
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	40.260729	34709	4579
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.145295	110	25	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.349404	8463	1767
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	40.287085	59305	2680
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40	40.252145	54788	4100
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.083512	18253	2932
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.358623	21881	5117
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app	40	40.308982	43621	4078
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	40	40.258084	48762	3924
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_Im_intro	40	40.328294	47106	6446
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40	40.056926	17062	2816
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40	40.107389	38098	5544
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.006931	2	1	1	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	40	40.059875	18502	1360
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.043040	14146	1699
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	2.298146	581	94	9.0.5.2	synth with cache (only 1: induction l as [| y l]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40	40.055765	20233	2430
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0.007061	1	1	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_add	40	40.493734	18689	1527
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40	40.351289	58609	6337
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0.254419	159	26	5.9	synth with cache (only 1: unfold phi; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.027469	38	4	10	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0.007081	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40	40.207209	4851	2072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0.006159	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.026279	3	2	1.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.007127	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	40.981496	16153	1266
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40	40.568911	17519	2333
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40	40.370841	66554	4219
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_succ	40	40.463780	56261	7373
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.006614	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_succ	40	0.032167	5	5	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.457211	59330	3583
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40	40.461551	27580	5934
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	11.567034	6211	1531	0.0.0.1.4.0.0.1.1.4.2.0.0.2	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: unfold not; only 1: intro Hneg; only 1: intros [Hc1| Hc2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	40	40.063520	21692	2177
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	40	40.094073	32499	2594
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40	40.195635	36270	5419
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.476642	22623	3037
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	40	40.140033	53144	3978
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	40	40.106138	36342	4255
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_alt	40	40.075566	29697	1643
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40	40.022321	6213	1352
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40	40.320237	46342	5785
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.039021	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	40	40.155303	36327	4669
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	40	40.388242	28961	5952
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	40	40.670250	31687	3860
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.074247	18525	8288
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	2.089800	1172	326	1.1.0.10	synth with cache (only 1: intros d ie; only 1: intro HF; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.178471	27967	1353
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	40	40.312443	6300	809
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.107256	34592	3024
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.538567	15622	430
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div	40	40.372875	24751	4642
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.386180	21483	3726
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.238342	49524	3166
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	4.995048	4481	853	4.0.0.0.4.0.12	synth with cache (only 1: induction l; only 1: constructor; only 1: intro y; only 1: intros; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	40	40.875898	12517	2269
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.weaken	40	40.110490	34196	5901
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	40.064675	21889	1762
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40	40.002816	512	36
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	40	41.078105	5619	999
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_1	40	40.031734	6923	3306
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	40	40.072326	22350	3530
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40	40.648085	27668	1493
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_plus	40	40.917572	16913	2079
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_mult	40	0.012323	4	2	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_opp	40	0.010649	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40	40.216162	16208	3623
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.297415	17684	3848
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_list_carac	40	40.518672	113393	4074
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	14.403100	13295	2227	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_in	40	21.183737	18355	2928	2.7.0.0.3.1.4.4.1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: induction 1; only 1: firstorder; only 1: simpl; only 1: destruct l; only 1: firstorder; only 1: subst; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intuition; only 1: subst; only 1: auto; only 1: simpl in H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	40	40.572263	8469	2075
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40	40.260682	58760	4284
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40	40.129358	7212	2002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.597737	10096	1542
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40	40.355677	24442	4265
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app_Some	40	40.286317	26126	4728
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.010933	6	1	5	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40	40.200878	21096	3569
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40	40.080481	24472	4619
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.388736	45299	6735
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.042231	8801	3709
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	40	40.039789	6788	4162
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.020256	5171	1550
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.286557	35266	4460
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40	40.067648	12380	4740
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.539974	26552	2411
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40	40.329457	42540	8942
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	40	40.898438	36527	2448
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40	40.569459	10497	985
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.440804	22279	4798
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	40	40.283144	69081	8675
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40	40.038123	8043	2355
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	3.790940	5649	252	4.0.1.64.0.0	synth with cache (only 1: split; only 1: congruence; only 1: intros EQ; only 1: intros; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	40	40.437429	10006	2526
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.130760	15010	5385
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40	40.071953	22302	3252
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40	40.657935	21797	7067
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.one_succ	40	0.009568	6	2	0.4	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.009457	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_0_l	40	0.006828	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	40	40.133000	47065	4303
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	2.739435	480	158	6.1.0.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: generalize (mem_iff s x); only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.499307	24657	3660
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.837151	606	85	10.7	synth with cache (only 1: repeat red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.179973	16	16	1.0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: rewrite mem_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.062442	5	3	1.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40	40.771620	22356	2606
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40	40.076516	25357	3977
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	40	40.118484	7923	853
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.116411	45817	2965
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40	40.028104	8081	1456
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.080186	20283	1957
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	40	40.054261	9119	2583
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.079426	23	10	0.2.0.1.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize	40	40.714493	49976	2600
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.578384	365	71	0.1.0.9.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40	40.135565	9764	2985
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40	40.385588	7504	1522
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	12.711549	1661	1113	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40	40.074535	21996	2520
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mod	40	40.394855	17981	3589
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40	40.632510	24074	331
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40	40.352804	21182	4445
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	32.963374	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term	40	40.338654	52407	3827
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40	40.429283	29310	5253
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	16.889804	8070	2320	0.0.0.4.1.3.1.2.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold not; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	26.748204	15061	2763	7.4.12.1.7	synth with cache (only 1: intros l1 l2 Eq x; only 1: intros; only 1: rewrite <- H; only 1: apply Permutation_app_head; only 1: discriminate || auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40	40.040944	11291	1890
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project_In	40	40.237035	46009	6103
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.998506	5611	1018
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_0	40	40.024925	4727	2602
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	8.498638	9	7	2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	40.046474	11092	1184
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.591938	18043	3288
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_involutive	40	40.841947	18256	1930
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40	40.316686	13828	5025
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	29.803152	13954	1628	0.0.10.2.1.5.2.2.4.0	synth with cache (only 1: intros A B SetoidFunChoice R T Hequiv Hexists; only 1: intros x; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: assert (Hcompat : forall (x x' : A) (y : B), R x x' -> T' x y -> T' x' y) by firstorder; only 1: destruct SetoidFunChoice with (R := R) (T := T) as (f, Hf); only 1: easy; only 1: intros; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	40.200776	30689	6550
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_carac	40	40.378904	29466	3046
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.398493	23165	7084
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.238700	105	32	0.1.0.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: intros n H; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_app	40	40.367930	40170	5803
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	0.081146	39	14	2.0.1.2	synth with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	40	40.237915	23362	3183
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.431642	56704	3032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40	40.325037	16351	4265
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	40.106280	38914	2754
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	2.036874	417	182	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	40	40.198596	40289	4151
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	40	40.229051	32045	3938
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_empty	40	0.042359	10	7	0.2.0.0	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40	40.049004	18554	1470
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.264099	25317	4568
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.044403	9861	4452
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40	40.034148	11510	870
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.258126	34473	5823
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40	40.297973	22513	5688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40	40.070401	6279	1853
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_sub	40	40.396652	43476	3983
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.256756	57347	4850
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	40	40.639198	34645	1953
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.438283	36808	3288
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.057330	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_0	40	0.008993	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.053588	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	40	40.412295	12912	3512
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.047674	9013	1122
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.356983	31584	4892
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_0	40	0.007654	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	40	40.195471	79600	3117
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40	40.349569	38638	4969
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	40.033427	8730	998
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	40	2.431409	1870	206	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.062584	17021	4844
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40	40.517688	54024	1097
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.097242	33611	4754
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_div_prime	40	40.104887	39858	3339
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.021352	5209	1601
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	40.112892	17231	2400
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.077352	20245	3972
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	40	40.719606	30263	2838
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.043124	9600	3193
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.397098	9092	1340
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.035399	6	3	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	40.109506	34337	5018
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.227651	5	3	0.2.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.268124	19	9	4.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot	40	40.431342	19993	4384
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40	40.430891	49588	699
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.085900	26254	3673
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eta	40	40.475236	110970	1849
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term'	40	40.266008	22521	4141
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40	40.494570	19767	3870
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	40	40.305111	19703	5560
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.404095	27667	4449
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project	40	40.092479	28002	5483
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40	40.263928	24351	1972
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.024521	4324	2769
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	24.739058	5745	2497	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40	40.001496	119	28
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	40	40.988808	8036	1385
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	40.044797	12214	1596
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	40	40.073594	22958	4391
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inv_r	40	40.974336	7938	1185
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	5.599223	9	3	3.1	synth with cache (only 1: intros; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40	40.381389	12819	5844
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.530035	13950	1843
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40	40.179587	33192	7398
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.487807	19081	3357
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	40	40.228485	30291	5536
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40	40.195910	30570	6858
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.275843	4	3	0.0.1	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	17.946941	8369	531	44.15	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.323999	46861	3424
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.170283	20492	2764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40	40.440168	19096	4498
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	40.431240	16571	3861
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	3.132870	1796	148	25.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_app	40	40.251369	39299	4235
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.131662	9809	2808
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40	40.069478	15761	1405
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_decreases	40	40.119510	40421	7360
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.079735	22922	3904
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.027608	8678	1261
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.489142	40005	3402
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	7.176313	5517	657	7.0.14.12	synth with cache (only 1: intros (l, L); only 1: induction l as [| a l IH]; only 1: auto; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	3.046226	990	110	15.17	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	0.110606	93	10	14	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_pred	40	40.348077	25632	3996
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40	40.984567	6388	1050
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.361624	25391	3694
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_succ	40	40.407132	67952	4305
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.one_succ	40	0.004773	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.two_succ	40	0.010168	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_0	40	0.004535	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_spec	40	0.023793	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.014238	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40	40.876960	25584	2521
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.262049	18772	4222
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40	40.115629	47353	1366
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.053211	6	6	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	40	40.095695	23487	3623
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.056252	28	9	0.0.2	synth with cache (only 1: intros n m Hn; only 1: rewrite partition_filter; only 1: apply eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40	40.351779	41896	4816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	40.072885	16751	1213
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.114818	5	3	0.2.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_pred	40	40.529210	27865	6948
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.011525	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.040263	12039	1435
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.497549	18601	2110
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	6.987099	2762	1114	0.0.0.0.0.0.0.0.0.0.2.1.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	40.069635	25051	3530
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.821294	230	106	0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_succ	40	0.012048	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_sub	40	0.307531	171	44	7.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.031124	9988	887
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.382686	334	66	2.11.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	40	40.051998	6609	3759
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_0_l	40	0.135213	9	8	2.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40	40.096358	29702	3885
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_0_r	40	3.912050	8704	503	0.0.0.0.0.46	synth with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	16.465478	5972	1602	1.5.4.0.4.9	synth with cache (only 1: repeat red; only 1: intros x y; only 1: compute; only 1: symmetry; only 1: f_equiv'; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	40	40.070036	18748	6836
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.313599	77	39	5.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	40	40.672530	16694	725
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.035063	6851	4144
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40	40.092871	27684	3016
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40	40.328514	6778	1831
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.580543	22414	5104
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40	40.370868	14489	4475
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eq_nth_iff	40	40.237144	26341	8701
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div2	40	1.936422	1084	184	0.0.1.1.1.1.11.1.0.1.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl Z.to_N; only 1: trivial; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xror_clause_clause	40	40.501563	75258	3605
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.901366	422	65	13.1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	40	40.059920	15707	6091
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	40	0.140644	62	19	4	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	40	40.958063	16673	2165
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40	40.418931	31566	4162
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40	40.256042	25225	1821
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.interp_proof	40	40.327576	52331	4782
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.026585	5730	2579
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.182138	21709	6151
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.892936	7530	1362
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0.008653	1	1	0	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0.007471	2	1	1	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	40	0.009332	2	1	1	synth with cache (only 1: apply Z.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	40	0.009370	2	1	1	synth with cache (only 1: apply Z.add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.009945	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0.011582	4	1	3	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.077487	23538	4012
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.147710	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.031412	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	40.594027	29907	4041
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40	40.001490	223	28
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.868776	14498	2593
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40	40.302298	22282	5093
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40	40.062750	18350	3839
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40	40.595457	46950	3511
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40	40.078303	20024	7229
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.020173	13	3	3.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.007804	2	1	1	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0.005862	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.074227	4	2	0.2	synth with cache (only 1: intros l'; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0.071325	1	1	0	synth with cache (only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.013398	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.021200	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_app	40	40.343596	12794	2204
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.770009	578	100	0.12.3	synth with cache (only 1: intros x y z; only 1: compute; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.136101	42390	4440
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.302996	45432	4098
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	40	40.312718	17995	2844
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.443621	68143	2196
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.217321	40527	6497
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	5.599310	2898	694	0.0.2.0.15	synth with cache (only 1: destruct m; only 1: auto with sets; only 1: inversion 1; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40	40.101658	10004	1571
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.041623	8539	4300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole	40	40.342384	27030	6412
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40	40.034799	11198	1502
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40	40.359824	29244	4110
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_inverse	40	40.336572	11333	1112
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.253259	42444	4639
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40	40.665837	27312	231
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40	40.021278	4774	1992
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	9.044582	4795	589	0.0.3.17.0.5.0.1	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: intuition; only 1: intro x; only 1: abstract now inversion 1; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	40.662042	48265	2115
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.428699	43088	4023
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.064177	19893	3224
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40	40.116314	23072	4623
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	40	40.324980	55472	7144
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.289372	24621	5177
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.059155	11916	1213
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.061287	3	3	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.083369	27887	2588
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40	40.810858	12842	2274
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_spec	40	40.087087	33290	2816
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40	40.024245	6921	935
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.101566	33969	4726
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	40	40.144143	39178	4230
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.205219	47167	6935
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.043637	26	11	4.1.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_succ_r	40	40.562394	27614	6487
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_0_l	40	0.008478	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	40.373656	43839	2297
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40	28.919407	14697	2766	0.1.13.0.0.12	synth with cache (only 1: intro y; only 1: intros l m a; only 1: intros; only 1: rewrite H; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.058943	13795	3851
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	40	40.774254	8329	621
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.HdRel_inv	40	0.240746	94	24	4.3	synth with cache (only 1: inversion 1; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_inv	40	0.016293	2	2	0.0	synth with cache (only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.070407	19757	2968
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40	40.260190	15955	3426
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	1.235473	406	109	0.0.0.0.0.6	synth with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_order_last	40	40.354229	38988	2609
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40	40.165371	12423	3245
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40	40.299503	89801	7617
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_clause_clause	40	40.047265	11209	4820
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.604409	25936	4443
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	40	40.324563	42324	4680
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.563286	14889	2789
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	40	1.742267	418	214	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: intros H0 [| ]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	40.222737	19117	1856
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.Reflect	40	40.647646	102373	4731
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.093329	6871	3229
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.069634	5823	3184
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	40	40.398145	37588	2906
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.nil_cons	40	0.165255	71	22	9	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_unique	40	40.382032	47605	5401
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40	40.641202	35766	3652
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001496	116	28
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40	40.272594	35816	5505
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.915583	10022	2372
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	40.213486	39166	5452
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.011172	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.036190	9	2	2	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.096106	26	10	0.0.0.1	synth with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40	40.098674	32878	3474
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40	40.447701	61937	3065
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	40	40.051370	12503	4580
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_testbit	40	18.099542	17443	2095	0.1.0.2.1.20.1.7.4	synth with cache (only 1: intros H; only 1: assert (Hn : 0 <= n); only 1: trivial; only 1: destruct a; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: apply Z.testbit_Zpos; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	3.224883	1381	241	3.1.2.1.0.15.0.0.3	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: apply Build_preorder; only 1: unfold eqk, ltk; only 1: auto with *; only 1: unfold eqk, eqke; only 1: red; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.040368	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.032814	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.184167	24951	5526
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.018232	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	40	40.254213	40234	3486
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id_abs	40	0.006831	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.008767	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_0	40	0.008580	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.009451	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.006829	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40	40.049335	13808	2567
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40	40.240382	24433	4937
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.075108	8	6	0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.046472	10392	2049
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole_principle	40	40.087578	27278	6187
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.022475	5463	568
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.280637	28233	3788
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.815459	389	146	1.1.3.1.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	40	40.263304	29940	1582
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	3.174566	1029	344	0.0.0.3.0.0.0.0.5	synth with cache (only 1: intros m x e f; only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: intros; only 1: simpl; only 1: inversion_clear H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.359978	18917	3147
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.573615	119	63	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_compare	40	40.599442	60006	2944
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	1.201527	186	90	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.068821	14509	2185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.016946	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.368003	105	51	9	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40	40.882729	19483	276
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40	40.676170	19017	1621
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	0.213249	407	22	28	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	40	40.662860	45182	3222
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40	40.189028	23933	3134
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.363789	62352	3209
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	40	40.155278	57178	4471
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40	40.320049	59301	6447
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	40	40.043909	6686	2882
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.199570	30902	6731
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	40	40.092649	32406	3028
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	40.074209	24934	2386
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	12.488700	23195	725	0.1.5.42.59.0	synth with cache (only 1: constructor; only 1: intro y; only 1: destruct y; only 1: compute; only 1: order; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40	40.025527	7367	938
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	40.101696	32915	4698
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	40	40.110050	26767	2382
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_succ_r	40	40.263792	36001	5669
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_0_l	40	0.005242	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_succ_l	40	40.148616	27071	6413
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40	40.279413	22285	2575
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.012106	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	40.493566	30266	2411
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_r	40	40.064083	16074	5361
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	1.813588	711	176	0.0.5.4.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.170660	34888	4069
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	40.657962	26868	1530
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40	40.147561	51254	2770
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40	40.377194	20760	2778
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.353802	38646	1487
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40	40.226663	34208	5677
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40	40.404981	23048	3722
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	40	40.404077	56541	5329
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_mod	40	40.894895	23077	3148
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.260243	38993	5158
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	40.082814	29997	2989
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0.007114	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_0	40	40.048395	13688	3780
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.122145	35254	3040
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	40	40.686598	41075	3111
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	40	40.249587	68369	2812
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_approx	40	40.180989	36964	6077
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	40.646054	39262	3956
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40	40.001510	191	26
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.544911	19606	3475
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_div_r	40	41.029446	20770	2784
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40	40.095582	20637	3111
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.430215	58827	4999
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_push_compat	40	40.060867	15972	5639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.055743	20220	1526
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.430857	59008	2822
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40	40.239456	30356	6755
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40	40.042176	8636	3339
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.037566	14377	746
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.083880	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.325859	37720	4648
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify	40	40.298921	27630	5651
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40	40.319918	39401	4736
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_max	40	40.379984	32371	5065
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40	40.350759	9716	1694
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	40	40.339025	23429	4769
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin_Finite	40	41.779795	19127	3346
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorDef.BASES.trunc	40	40.399528	72701	5660
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.560485	7621	1002
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40	32.274119	16398	3128	4.2.3.3.6.1.0.1	synth with cache (only 1: repeat red; only 1: unfold eqk, ltk; only 1: intros a n H H'; only 1: destruct n; only 1: simpl in *; only 1: constructor; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40	40.654391	11280	1197
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	0.189432	272	17	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0.017058	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0.083707	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.045624	7527	898
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40	40.309788	37163	4487
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40	28.852683	17705	1961	3.0.5.0.3.4.16.5	synth with cache (only 1: intros H l; only 1: red; only 1: simpl; only 1: intros m x y; only 1: L.MX.elim_comp; only 1: intuition; only 1: rewrite H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.111800	27385	4617
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40	40.337328	21364	6993
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40	40.390738	28369	3516
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40	40.315165	78761	7649
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	40	40.058559	17034	1649
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	40	40.070929	25911	2645
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.028930	8860	797
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	40	40.371402	39397	2875
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40	40.131446	46340	4811
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_succ_l	40	40.232004	35775	5368
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.107363	38301	2737
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	7.749230	13933	546	29.14.4.20	synth with cache (only 1: intros a; only 1: destruct a; only 1: now simpl; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eqb_eq	40	40.518170	23929	6472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.360888	29412	4093
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_minus	40	40.063917	18008	4804
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_minus	40	0.032667	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.253632	24682	3661
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	40.440677	79542	7131
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40	40.386894	38310	2074
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.628554	120	51	1.5.1.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: inversion H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.281214	27347	4376
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_last	40	40.392387	49801	6043
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.190339	22010	4525
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40	40.055729	12804	5804
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40	40.600520	35244	4667
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	8.033116	2298	419	3.11.3.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.734109	31997	2600
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.180071	13700	2952
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.038584	9655	3920
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40	40.079297	23588	2805
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_plus_distr	40	32.803194	9026	1559	8.0.3.3.2.0.0.3	synth with cache (only 1: intros x y; only 1: unfold Qplus, inject_Z; only 1: simpl; only 1: unfold Qeq; only 1: intro H0; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.113707	37237	3252
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_minus_distr	40	1.617492	402	158	0.0.5.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.216081	27950	4024
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	40	40.918926	29367	2464
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.042592	10	3	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.020186	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.WeakFanTheorem	40	40.649079	178400	5689
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.711292	31947	2985
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40	40.001435	84	27
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40	40.475373	26704	6291
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	31.753802	10146	2494	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	5.631480	4656	651	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40	40.123465	38141	3514
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40	40.368846	71098	4711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40	40.112000	7177	1545
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	40	40.482524	32231	6306
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40	40.083128	23842	7475
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	40	40.183516	69955	2245
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.032281	10932	869
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	40	40.102017	35885	4413
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	40	40.401433	23042	3373
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.length_zero_iff_nil	40	5.849143	4675	528	0.12.2.9.6.3.7.3	synth with cache (only 1: split; only 1: intros; only 1: induction l as [| a tail]; only 1: trivial; only 1: simpl in *; only 1: now discriminate; only 1: inversion 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_nil	40	0.006331	2	1	1	synth with cache (only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.013267	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	40	0.011974	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	40	0.160489	111	30	1.2.5	synth with cache (only 1: destr_bool; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.not_in_cons	40	1.164863	296	69	8.3	synth with cache (only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_nil	40	0.015036	5	3	2.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40	40.252260	13652	2581
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.501520	19018	2564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40	40.074969	8682	2040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.014856	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	40	40.312890	33733	4096
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.138192	43	15	0.0.4.1	synth with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40	40.345896	22306	4236
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.010980	2	2	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0.008602	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40	40.516616	8846	1265
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0.009180	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	40.660792	13735	918
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.842294	699	135	1.6.0.11	synth with cache (only 1: induction 1; only 1: left; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	40	40.249804	80276	6816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40	40.029594	7589	942
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Peirce	40	0.293106	672	56	24.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.201507	38265	4448
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.135266	51965	3650
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionality.proof_irrelevance	40	40.445627	90151	4255
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40	40.395527	35565	4703
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.242672	90	26	0.1.5	synth with cache (only 1: inversion 1; only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40	40.175969	49791	6051
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.le_lt_SS	40	3.386114	2361	327	32	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	40	40.033518	5002	509
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dec	40	0.018331	2	1	1	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.024773	39	7	9	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	40	40.048056	18532	1637
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	40	40.368046	58702	1925
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.028758	10525	858
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	40	40.158649	16704	3400
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40	40.050882	16253	1955
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eqb_eq	40	40.342591	27958	7921
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim	40	7.528469	12636	1634	2.22.24	synth with cache (only 1: intros a Ha; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim2	40	0.028041	21	7	7	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ltb_lt	40	40.360069	31314	5887
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.053995	14251	4461
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_or	40	1.139642	850	242	0.9.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40	40.337771	24087	4840
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	5.477137	7428	1159	27	synth with cache (only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_and	40	0.487543	226	108	3.1.2.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: intro; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_to_imply	40	0.033837	15	7	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.268119	20316	4177
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_and_or	40	1.111947	473	181	8.4	synth with cache (only 1: Bool.destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_not_and	40	0.040546	20	8	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_or_and	40	0.009299	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.009766	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or	40	0.010958	6	2	3.1	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or2	40	0.012710	3	2	0.1	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.218503	30145	3185
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare.discrete_nat	40	40.305780	26510	3436
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	40	40.405806	23359	1926
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.023657	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40	40.339933	11043	3241
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.253258	112	26	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	40	40.387018	23516	3134
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.336029	22530	4451
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	20.946501	21926	3067	6.6.9.4.3	synth with cache (only 1: unfold get, push, index; only 1: inversion 1; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	3.457413	1628	564	2.0.2.0.0.1.7	synth with cache (only 1: intros l; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ratom_cnf	40	40.340863	83704	4862
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40	40.397694	47333	4471
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40	40.102124	29332	2862
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	3.443338	1430	374	6.2.3.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	0.124521	8	4	3.0.1.0	synth with cache (only 1: unfold Subtract at 1; only 1: intros A x y H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	40	40.417910	33370	4491
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod	40	40.954936	24549	2894
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.030966	6640	3894
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	40.060778	19279	3452
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.Splus_lt	40	17.232215	15532	2009	109	synth with cache (only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40	40.036230	9984	1239
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_r	40	40.508697	12370	2826
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	40	16.632010	3243	1126	1.7.4.3	synth with cache (only 1: do 2 intro; only 1: generalize (Rtotal_order r1 r2); only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	40.895291	29780	1535
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.007263	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.325945	127505	8975
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.144826	52718	3829
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	9.227114	3935	468	0.20.4	synth with cache (only 1: intros x y; only 1: compute; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	18.062751	10604	1454	0.0.0.0.0.0.0.21.22	synth with cache (only 1: intros x l; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40	40.295409	37806	6182
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.001031	56	27
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.374616	27365	3703
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.020994	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.025301	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40	40.261510	96679	571
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40	40.465531	66445	4874
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.041774	11368	2126
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	40.424046	61902	4175
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40	40.079137	22516	6416
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	40	40.066283	14244	2732
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40	40.325850	31740	4043
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_split	40	40.343587	78031	3768
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_inv	40	0.005855	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40	40.152472	29257	5411
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iter	40	40.440468	45362	2666
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	40	0.226778	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40	40.024671	4692	883
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.018579	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.203075	21668	2452
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40	40.580482	9746	1028
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40	40.222521	45863	6052
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40	40.566784	24990	1349
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40	40.346102	62445	3486
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.169863	68458	3263
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40	40.563076	38353	4640
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40	40.093609	33174	3188
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_discr	40	40.412657	114335	2882
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_spec	40	0.007551	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.057184	13952	5557
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	40	40.359846	70508	4056
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	40	40.275423	24400	2096
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.023595	7853	683
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	40	40.209185	17704	5098
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	40	0.117758	13	5	5.0	synth with cache (only 1: unfold to_nat; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40	40.032041	10224	1177
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ltb_lt	40	40.209830	17805	6113
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	40	0.159203	60	14	5.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.leb_le	40	40.357668	22624	5256
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	40.174718	46402	7423
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.307526	183	69	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	40.647061	56256	879
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_Blow	40	40.230715	36964	3334
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40	40.585829	69469	4398
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.240153	7553	1704
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.085188	26712	5401
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.293775	14290	4184
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.241096	55545	6641
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_In	40	40.217013	33008	6311
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_extends	40	40.413727	10506	3005
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	40	40.551315	63034	3310
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40	40.144015	49336	2603
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_min	40	27.062586	11664	3812	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros Hn Hm; only 1: rewrite !abs_N_nonneg; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: unfold Z.min, N.min; only 1: simpl; only 1: now case Pos.compare; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct Hn || now destruct Hm || clear; only 1: trivial; only 1: trivial; only 1: Z.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.561499	1621	675	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	40.196247	45775	4692
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.212626	26726	2974
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_1	40	40.033101	7404	3957
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40	40.089053	30000	5027
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.SSplus_lt	40	40.124220	19051	5771
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40	40.043403	9821	3939
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.578656	13277	3151
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_minus	40	40.045285	12265	2785
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.995571	18658	3238
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0.006328	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.034179	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.397796	215	34	7.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.043840	8	3	5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_em	40	40.313605	122776	14399
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40	40.583777	27545	4017
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.240506	33	8	0.0.5	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.262532	35505	4152
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40	40.309408	14667	1929
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.033502	11	8	1.1.0.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intro; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.077191	24148	5842
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40	40.001381	73	30
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40	40.109055	35231	5132
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40	40.378014	124352	4382
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	20.000740	6741	2495	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40	40.463941	99566	5804
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	40	40.511181	8440	1288
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	40.142490	50546	5829
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.078996	15763	1727
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.109347	36760	4159
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_dec	40	40.323500	15801	1600
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40	40.173383	25060	6064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.105433	4542	252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.016624	2	2	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj	40	40.346718	88503	4691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	0.061517	4	3	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.207792	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.821822	27996	3546
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40	40.299973	34934	4508
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.589163	25110	1338
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40	40.215556	9158	1272
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.447465	29156	3638
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	40	40.253207	104345	5161
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_cons_not_nil	40	4.277522	4596	616	4.0.0.3.19	synth with cache (only 1: intros n IH; only 1: induction n; only 1: simpl; only 1: now discriminate; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_l	40	0.016257	5	2	3.0	synth with cache (only 1: simpl; only 1: now destruct l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	40	40.064420	21330	2531
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.321960	121490	3789
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_ass	40	40.057708	20955	2071
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	40	40.252583	38505	3284
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.390074	51801	1825
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.022317	6929	587
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40	40.048929	12616	4559
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.464073	19846	2673
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	40	40.060636	17175	4741
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	40	40.206517	34610	3763
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	40	1.222374	169	94	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	40.203661	42966	6015
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	40	40.822973	22563	6411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40	40.486992	22120	1470
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.711901	29205	3579
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40	40.374260	6806	1351
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.const_nth	40	40.235921	22777	2642
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.lt_O_fact	40	40.149432	29720	7575
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40	40.314110	14495	2961
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.575580	75151	4243
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.094551	21393	2486
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.356277	33105	3754
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_max	40	40.627800	16155	5425
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.326595	61055	4749
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	6.408452	2166	243	0.0.0.7.16.7	synth with cache (only 1: intros x x' Hxx'; only 1: intro H; only 1: induction n; only 1: eauto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.242745	77	36	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	40	40.181753	26441	4724
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	40	40.052007	15377	3089
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_r	40	18.470127	23002	2732	0.2.0.0.6.6.0.3.11.0.0.7.8	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: compute; only 1: destruct l; only 1: reflexivity; only 1: simpl in *; only 1: destruct l; only 1: reflexivity; only 1: apply f_equal; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_end	40	0.037171	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40	40.068727	22597	3377
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	41.007384	22215	4469
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.018908	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.max	40	40.258721	26518	5457
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	2.873529	1597	479	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	0.225663	49	30	1	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.003729	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc	40	1.974950	936	280	0.0.9.1.0.0.1	synth with cache (only 1: induction l; only 1: intros a r; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc_reverse	40	0.043030	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_comm_cons	40	0.011464	1	1	0	synth with cache (only 1: auto using app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.053119	11841	4917
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.665324	273	92	0.0.0.0.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	7.358110	5777	692	21.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_tt	40	0.031582	3	3	0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	5.430077	2242	632	0.0.0.2.2.0.4.2	synth with cache (only 1: induction n; only 1: split; only 1: intro H; only 1: rewrite <- PeanoNat.Nat.odd_spec in H; only 1: discriminate; only 1: inversion_clear 1; only 1: elim IHn; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_lt	40	40.075645	21280	6127
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	40	40.689183	83850	4354
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	40	40.292958	115930	9434
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	40	0.360368	620	119	9.0.0.4.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat	40	40.978618	41113	2685
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.108867	17178	3138
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	40.177630	18935	3993
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40	40.348780	21017	2903
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40	34.758401	18643	3229	0.8.2.0.4.9.0.0.2	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: intuition; only 1: destruct a as (x', e'); only 1: subst; only 1: apply add_NoDup; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40	40.198374	33203	6618
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40	40.001139	51	21
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	3.226833	11692	922	0.10.13.0.20.1	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intros H ?; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.164966	21912	4405
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_n_S	40	0.142375	11	6	0.2.3	synth with cache (only 1: revert m; only 1: intros H; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_n	40	0.005591	1	1	0	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40	40.435670	96688	4211
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt	40	8.989800	3532	1294	0.0.0.4.2.4.0	synth with cache (only 1: intros; only 1: red; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	40	40.092908	27151	5562
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.452782	73458	6316
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	40	40.455464	28335	3777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40	40.062479	20703	1776
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40	40.300092	33274	4672
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.218059	15983	4748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.112097	9444	926
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.045315	3	2	0.1	synth with cache (only 1: intuition; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_double	40	40.528950	17894	1995
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0.024216	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ	40	0.019285	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.033019	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_add	40	0.021904	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.403033	39903	3243
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.459165	44199	4102
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40	40.066935	23671	2068
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40	40.756488	20110	1184
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	40	40.240220	16175	4524
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	40	40.117350	42953	3565
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	3.260422	1672	381	1.5.3.1.0.7	synth with cache (only 1: induction l; only 1: unfold eqk, eqke; only 1: auto with ordered_type; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	40.043947	10761	2294
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.014896	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.061277	21575	2543
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_succ	40	40.677201	212936	1918
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.modulo	40	40.057966	15720	3795
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.double_succ	40	0.008582	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_inj	40	40.273915	63150	4312
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40	40.021899	6588	1351
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.053447	12167	5254
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.148985	22172	5674
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_lt_iff	40	0.025077	5	5	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_le_iff	40	0.012646	2	2	0.0	synth with cache (only 1: unfold leb, le; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.395341	11448	1280
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_dec	40	40.327079	43899	3068
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_sub	40	40.304902	28392	7742
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.524786	37551	2236
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.211099	36977	4494
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_antisym	40	2.990659	1416	487	0.3.2.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite CompOpp_involutive; only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	6.889053	11960	589	0.0.0.0.0.73	synth with cache (only 1: red; only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_not_1	40	0.021571	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.033905	9	7	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_le_iff	40	0.127577	33	19	3.0	synth with cache (only 1: revert m; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40	40.462893	6285	367
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_succ	40	0.799192	325	120	1.1.1.0.0.2.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	10.312759	5533	1048	0.1.5.0.7.2.0.8	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: constructor; only 1: unfold eqk, ltk; only 1: constructor; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	15.248162	14458	1078	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map	40	40.457290	67652	1846
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_mul	40	0.021117	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_div2	40	0.019879	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_neq_0	40	40.301698	47987	7263
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	40	40.471993	32108	4455
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	40.071020	8900	1888
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	40	40.766599	24368	4710
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40	40.464427	159997	3684
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.242504	15206	4605
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	40	21.378796	7233	1311	1.10.5.3	synth with cache (only 1: compute; only 1: intros; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.026003	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.018045	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.023092	4	4	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_assoc_reverse	40	11.140335	1759	464	1.0.4.0.0.0.8	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: now intros ->; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40	40.100000	37301	3181
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	40	40.236578	41439	2920
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.138418	30555	6823
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	40.789056	30850	4678
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.097685	45	14	0.0.3	synth with cache (only 1: intros n m p; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	40	40.052723	11223	4570
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_unit	40	40.253641	34129	4461
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	40	40.389608	23448	2788
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.ind_0_1_SS	40	40.245528	18921	3249
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_antisym	40	40.520328	21143	2496
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_assoc_reverse	40	40.155236	7264	1851
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat	40	40.714754	58553	2197
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.022435	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0.009435	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.022937	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0.008435	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.038492	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.040166	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40	40.001710	133	31
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40	40.484236	24439	3017
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	40.668235	39919	6061
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.274543	25287	6575
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.444221	46796	5197
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40	40.647661	287317	9939
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40	40.158364	25011	4843
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	40	39.838713	29817	3497	1.2.41	synth with cache (only 1: inversion 1; only 1: auto with relations; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_pred	40	0.006805	2	1	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_not_gt	40	0.006343	1	1	0	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	40	0.007650	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_S_gt	40	0.228659	37	15	2.0.0.4	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_le	40	0.005579	1	1	0	synth with cache (only 1: apply Peano.le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_S	40	0.008926	2	1	1	synth with cache (only 1: apply Nat.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	40	0.006086	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_n_O	40	0.008883	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.485911	92255	2988
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.072711	18971	6397
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_le	40	0.102996	14	13	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40	40.057094	13758	615
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.exists_spec	40	40.360888	32017	3759
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	15.613042	4667	1300	7.2.2.1.1	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: simpl; only 1: destruct y; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40	40.082474	23956	3150
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.933146	294	139	1.1.0.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_left	40	0.847305	242	124	0.1.1.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: destruct x; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_right	40	0.055316	9	9	1.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40	40.103328	9606	2765
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.119681	7068	1581
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.018640	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40	40.444217	44694	3233
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	40	40.300609	13497	4497
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.736383	20314	1156
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	40	40.148854	55645	5693
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40	40.070879	10376	1406
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	40	40.369556	44993	3186
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_le	40	27.228126	16775	3100	8.7.5.0.3.2.0.0.0.8	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	28.964352	20359	4579	4.1.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.027855	5630	1288
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.012841	2	2	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.054222	17863	2469
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred	40	3.462933	1625	607	1.0.1.0.0.0.9.3	synth with cache (only 1: intro H; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_sanity	40	40.488711	38347	2816
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	40	40.062825	13707	6458
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40	40.029795	9887	1089
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_antisym	40	40.297390	31953	7914
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	40	40.218775	52665	3591
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	40.167566	23580	2749
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_ge_dec	40	0.488544	137	76	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_gt_dec	40	0.080939	18	11	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40	40.405212	52153	3647
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_O	40	22.999253	27415	2717	9.0.0.12.22.1.2	synth with cache (only 1: destruct n; only 1: intro H; only 1: now left; only 1: destruct m; only 1: intro; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.151214	34652	3845
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_succ_r	40	40.663208	20287	4853
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.473682	10994	1291
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.049238	4	3	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40	40.440938	19355	3611
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_compare	40	40.341377	74185	6567
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map2	40	40.396414	24854	3033
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_min	40	0.023127	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_max	40	0.101608	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	2.195556	579	84	1.0.1.0.0.3.17	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto; only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.071154	51	10	0.0.9	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	40	40.201365	24081	5946
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.O_or_S	40	12.095868	23377	1312	0.0.0.36.38	synth with cache (only 1: induction n; only 1: right; only 1: reflexivity; only 1: left; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	7.257568	15372	170	0.173	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	40.060234	16950	2334
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.583428	24639	5240
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	40	12.849219	14508	1094	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40	40.306869	33234	7293
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	40	40.347588	12441	3717
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_reg_l	40	40.253008	22653	3175
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40	40.051338	16451	2124
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	40	40.050095	16093	2839
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf	40	40.388275	23711	4369
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	40.554035	21692	4437
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.017321	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	0.016949	10	2	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.011585	3	2	1.0	synth with cache (only 1: intros n m H; only 1: now rewrite <- ?Z.add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.065374	16202	5377
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.021995	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.024187	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inj_tail	40	40.218313	45208	4357
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	40	0.284301	116	44	0.0.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	6.336490	3853	525	0.3.2.1.16	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.lt_div2	40	40.211080	28623	7533
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.add_term_correct	40	40.542754	26194	2241
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	40	40.457457	29346	2246
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_irrefl	40	0.251745	87	12	13	synth with cache (only 1: apply Z.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.bet_eq	40	23.116752	30515	2850	27.18	synth with cache (only 1: induction 1; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001282	144	26
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	40.151606	37628	3008
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40	40.197840	33601	3169
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat	40	40.660651	47937	2350
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.216682	15335	4700
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_le	40	2.384647	568	137	3.0.5.3	synth with cache (only 1: intros n m; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	4.831536	3609	182	53.4	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40	40.193915	38882	4656
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40	40.654267	293181	9697
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	40	40.185694	24347	3302
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_Sn_m	40	40.143369	25659	4979
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.pred_of_minus	40	0.024258	1	1	0	synth with cache (only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40	40.485753	78879	2677
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_ge	40	40.058650	13321	5262
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40	40.063823	21269	1979
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	40	40.421720	60878	3267
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.149739	33989	2894
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	40	40.168108	15682	5158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40	40.168382	5303	2481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.064340	21065	2557
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	40	1.453510	468	235	0.3.1.2	synth with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40	40.229637	48976	4770
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	40	40.037689	9633	3836
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40	40.347215	23945	1037
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	40	40.209990	77240	6485
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40	40.529058	51512	2300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	40	40.076587	22879	3953
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.156318	96	23	8.0	synth with cache (only 1: revert l1 l2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.065965	22778	2683
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_inj	40	40.283616	42228	4744
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_diag_reverse	40	14.438688	15806	1799	0.0.2.7.36.3	synth with cache (only 1: symmetry; only 1: Nat.induct ltac:(n); only 1: apply Nat.sub_0_r; only 1: simpl; only 1: intros n IH; only 1: now rewrite IH).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.065388	16654	6021
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.017473	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.021613	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.018222	4675	1372
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	40	40.405118	28814	2912
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	40	40.468422	57251	5552
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.939232	369	58	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	40	40.297311	24008	4179
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	40	40.190733	27085	3585
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_BVxor	40	40.163528	30785	3062
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_N_succ	40	5.695536	3267	620	0.0.0.0.2.14.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_r	40	0.007448	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_l	40	0.007566	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_l	40	40.518043	30884	4994
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.542183	8022	1387
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	40	4.302054	2476	551	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40	40.467851	69406	1637
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iter	40	40.578765	43859	4965
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.map_push	40	40.083603	26162	5242
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40	40.346062	9856	1634
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	40	3.009353	1027	408	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.208207	17411	2119
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	40.415820	45347	5623
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	40	40.338779	18979	3312
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_le_S	40	0.041881	7	5	0.0.1.0.1	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order_pos; only 1: intros n IH; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_Sm_le	40	0.007161	1	1	0	synth with cache (only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_n_Sm	40	0.018400	5	3	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_not_lt	40	0.176342	28	12	0.6	synth with cache (only 1: intros; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_not_le	40	0.168516	23	10	0.6	synth with cache (only 1: intro H2; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.R_sanity	40	40.235617	19997	3596
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.neq_0_lt	40	0.016849	2	2	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	40	0.021393	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.255029	21610	6988
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	40	0.006158	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_S_n	40	0.014072	10	2	2	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_dec	40	5.723313	3340	591	7.7.4.2.5	synth with cache (only 1: destruct m; only 1: auto with arith; only 1: destruct (le_gt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.383031	28540	4404
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	40	0.006031	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred	40	0.656582	294	94	0.0.3.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros a Ha; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40	40.047267	13394	1925
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	40	0.158129	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_reg_l	40	40.304726	49883	3186
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.098754	11728	2807
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred_pos	40	0.607387	318	90	1.0.0.0.0.6	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros n H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec1	40	40.276859	87845	4408
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec	40	0.004030	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.004818	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.gt_wf_rec	40	0.006636	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	40.929672	29984	2949
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	40.103754	32833	3373
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_or	40	40.119844	37248	6245
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_refl	40	0.339585	599	61	2.12.13	synth with cache (only 1: induction n; only 1: now try Nat.order'; only 1: now rewrite <- ?Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40	40.101287	31119	3365
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_div2	40	40.223119	34418	5294
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_or_app	40	1.300016	692	210	6.0.1.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.331833	45995	2716
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_n_0_eq	40	0.030856	16	4	0.1	synth with cache (only 1: inversion 1; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	9.266472	2409	692	1.1.1.1.0.1.0.0.11	synth with cache (only 1: destruct n; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order; only 1: Z.order_pos; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40	40.001500	199	34
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	6.169391	2888	236	2.1.14.12.0.6.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: auto; only 1: intros H; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	40.158686	61497	5001
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.057583	15287	4674
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40	40.433325	7356	995
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	1.929066	452	181	7.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0.013981	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	40	40.935872	34566	1616
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.005195	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_Sk_l	40	40.275104	34087	3700
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_correct	40	40.169399	8114	1969
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40	40.257027	67245	712
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40	40.214847	76825	1945
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	40	40.254458	29365	3745
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rplus	40	40.035564	4956	1063
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	40.579261	23405	3381
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	40	4.398794	1394	263	4.0.4.0.0.0.7	synth with cache (only 1: destruct m as [| m| m]; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.020361	4	2	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40	40.068380	25227	1964
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.379903	46165	3872
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_O_le	40	26.606247	8419	2446	13.0.1.0.0.0.1.0.0.1.5	synth with cache (only 1: revert m; only 1: induction n; only 1: intro m; only 1: Nat.nzsimpl; only 1: right; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.178343	24835	3430
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_iff	40	12.891690	8218	2044	11.0.1.0.0.0.0.9.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: split; only 1: auto; only 1: intro H; only 1: elim H; only 1: intro H0; only 1: elim H0; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40	40.143044	8810	552
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	40	40.140541	17848	5227
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_equiv	40	40.235547	42979	6770
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	40	40.404024	43370	4498
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40	23.434083	7229	836	11.14.1.0.6.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.067186	21005	4772
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	40	40.169349	66496	3931
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.495250	23874	1428
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	40.319925	57490	5283
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_restr	40	13.270512	8751	1001	3.2.21.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	40	40.094417	18359	2159
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.073286	26803	2319
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	40	15.541155	3412	1011	0.0.0.0.3.0.0.0.2.6	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	40	40.083062	29031	3126
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	40.030045	10563	1273
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.230927	25888	4466
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_r	40	40.404774	26354	6609
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	40	40.211556	35142	4355
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_spec	40	40.261970	26465	2732
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_BVand	40	40.255921	28233	3447
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40	40.252630	22418	5018
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.580344	138813	2020
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Full_map	40	40.258601	48364	9699
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_l	40	40.621059	34883	5553
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.le_unique	40	40.222528	55699	5572
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40	40.428283	7943	1074
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_elim_rel	40	33.175700	32987	4199	28.2.5.0.0.0	synth with cache (only 1: induction n; only 1: intros; only 1: auto; only 1: inversion 1; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40	40.389125	48914	7336
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.depair_sanity	40	40.465096	21628	1543
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.174283	23809	4584
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_le	40	40.166449	36247	3945
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.221492	56882	3529
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40	40.121738	12086	2843
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	40	40.195104	33814	3988
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	40	40.187824	21422	3359
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.050290	18530	1983
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_is_eq	40	40.167378	44826	6950
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_div2	40	40.243759	41906	5350
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.232941	50776	3746
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40	40.208956	16592	5929
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40	40.882892	28651	2471
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40	40.001399	197	29
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40	40.071594	25919	6336
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40	40.538136	8666	882
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	40	40.342219	19197	2234
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40	40.061248	19889	9438
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40	40.255322	82447	4954
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	38.178906	49363	4738	0.0.5.7.0.2.1.6.34.0	synth with cache (only 1: Z.swap_greater; only 1: destruct n as [| n| n]; only 1: intro H; only 1: now Z.nzsimpl; only 1: destruct m as [| m| m]; only 1: apply Z.mul_le_mono_pos_r; only 1: intros; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	40	40.330767	31238	3485
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_sqr	40	40.047141	16686	4131
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40	40.571258	193361	3912
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40	40.047991	11656	1393
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.317076	11294	1715
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	2.444930	560	153	0.0.0.0.8.0	synth with cache (only 1: intros m x y e; only 1: CRelationClasses.simpl_crelation; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.145635	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.195407	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_eq_nat	40	0.018986	6	6	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.025295	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.036356	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_eq	40	0.258858	24	13	2	synth with cache (only 1: apply eq_nat_is_eq).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.337512	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_lt	40	0.019160	18	3	5	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_gt	40	0.007318	3	1	2	synth with cache (only 1: apply Nat.lt_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_O	40	0.017550	5	2	3.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus	40	0.851492	1299	115	33	synth with cache (only 1: now apply Nat.add_sub_eq_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	40	0.845739	239	56	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.008756	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	40	1.020876	355	112	1.0.2.0.3.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.166207	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	40	3.236974	1646	413	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus_r	40	4.063283	2210	606	0.0.1.0.2.0.6.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_r	40	0.748357	127	56	0.1.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	40	5.281629	5886	656	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_head	40	6.539154	5134	1002	1.16.1.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now symmetry; only 1: simpl; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	2.046484	2132	162	3.0.2.24.2	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.id	40	1.068318	436	82	5.0.1.17	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons	40	7.132356	1531	478	1.0.0.0.0.0.1.0.2.1.2	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold eval_clause; only 1: generalize nil as acc; only 1: induction f; only 1: simpl; only 1: intros; only 1: tauto; only 1: intros; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.091469	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	11.581804	4553	930	0.0.3.1.1.7.2.6	synth with cache (only 1: intros x l' H H0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply SortA_InfA_InA; only 1: eauto with *; only 1: eauto with *; only 1: solve_proper; only 1: eauto with *; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.578514	25997	2816
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zlt_Qlt	40	40.471262	37822	4591
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	40	15.891312	6923	1009	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	40.211685	21436	2446
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_divide	40	40.115737	43640	3593
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.345514	7241	2285
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40	40.244759	31642	3851
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.111933	29268	5177
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40	40.086316	24758	5045
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.070839	17944	6430
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus	40	26.846822	13477	4524	0.0.1.0.2.0.6.0.0.4	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_1	40	40.149809	11134	1991
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40	40.148284	47676	4623
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.061194	17845	3374
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40	40.457372	195484	12064
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	40	40.080285	23447	3260
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_0	40	0.006875	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40	40.001183	118	27
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40	41.256022	28216	1551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	40.052229	10820	2551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40	40.061357	7177	2192
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.252781	3815	1219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40	40.139682	16298	2409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.142049	16952	3749
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.134815	36985	4036
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40	40.252739	38715	5027
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	40	40.116892	23783	3797
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.208641	19677	4865
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans_S	40	40.148689	18055	2062
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_even	40	40.269433	58738	5187
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.245892	18935	4864
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40	40.317966	12089	2068
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_elim	40	40.253181	52634	7490
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_ge	40	40.243592	57805	3661
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	40	0.008550	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_le	40	0.006315	1	1	0	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_gt	40	0.009667	3	1	2	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.400145	31945	4217
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_ge	40	0.008720	2	1	1	synth with cache (only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	40	0.008172	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_idem	40	40.304997	21475	3118
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj	40	40.178311	23511	6892
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.121515	37	21	2.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_l	40	40.364255	26222	5827
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_r	40	0.228891	7	6	0.1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40	40.282925	35392	3883
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_0_eq	40	1.952862	1347	168	5.0.28	synth with cache (only 1: Nat.cases ltac:(n); only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.006364	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.007014	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40	40.291197	9118	1627
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40	40.486442	90796	3438
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	33.994250	25893	2793	0.0.1.1.2.4.5.1.4.3.0.0.0.5.1.22.7	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: Z.nzsimpl; only 1: intros Ha; only 1: Z.order'; only 1: easy || now destruct y; only 1: easy; only 1: intro LT; only 1: auto; only 1: now split; only 1: unfold Z.lt; only 1: simpl; only 1: easy || now destruct 1; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.020286	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	40	40.344301	24430	3786
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40	40.287060	15995	1638
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	40	40.391447	43596	5118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.433779	13288	1958
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40	40.046938	10604	2589
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.nat_total_order	40	40.419909	15244	1888
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	20.927813	29185	2740	4.2.0.0.40	synth with cache (only 1: intros x x' Hx y y' Hy Hr; only 1: apply fold_rec; only 1: intros; only 1: trivial; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_S_le	40	40.258484	24718	3299
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_intro	40	0.134459	80	26	0.3.5	synth with cache (only 1: intro z; only 1: intros n m H1 H2; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.peano_ind	40	40.685005	104970	6031
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_lt	40	0.586483	516	88	7.3.0.3	synth with cache (only 1: intros L R n; only 1: intro H; only 1: firstorder; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_app	40	6.004178	2835	802	3.1.1.2.0.5.1	synth with cache (only 1: intros; only 1: induction v; only 1: inversion le; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_tail	40	40.254551	61406	6595
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_decide	40	8.412272	4545	1135	5.0.0.0.0.1.0.0.3.0.1.1.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_prf_irr	40	2.079555	826	265	0.0.0.5.0.0.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: now simpl; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.011523	5	2	0.3	synth with cache (only 1: intros m w le; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_comm_cons	40	0.026589	6	4	0.1.1.0	synth with cache (only 1: intros; only 1: destruct v; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_or_odd	40	9.606302	22444	878	3.3.28.30.19	synth with cache (only 1: Nat.induct n; only 1: left; only 1: firstorder; only 1: intro p; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_odd_dec	40	0.020001	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.342966	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.not_even_and_odd	40	0.550575	442	105	4.0.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	40	1.574462	639	204	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj	40	40.380422	26621	4571
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.029395	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_correct	40	40.038194	11382	2111
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.505046	8597	1900
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_false	40	3.868486	4036	542	0.0.3.2.4.0.1.16	synth with cache (only 1: Nat.double_induct n m; only 1: intros a Ha; only 1: intro H1; only 1: subst; only 1: discriminate; only 1: now try Nat.order'; only 1: intros a b Ha Hb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat	40	40.204303	31166	3356
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40	40.934711	15344	2079
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lteq	40	40.467738	21008	2994
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_eq	40	2.832195	1949	374	1.0.3.0.0.0.1.0.7	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: contradiction || auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40	40.359440	71159	924
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40	40.140069	10735	2336
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.072458	10140	2192
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40	40.085089	25267	6049
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subset_spec	40	40.089173	26743	3216
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.230327	12724	4846
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.302261	983	44	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	40	40.071965	17032	944
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40	40.054839	16274	2265
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.311716	50534	3646
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.132620	45968	5622
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40	40.041757	11163	1290
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.empty_1	40	0.218530	436	48	3.0.23	synth with cache (only 1: intros H; only 1: simpl in *; only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40	40.091358	29668	5446
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.286880	31581	1987
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	40	40.121654	34393	4922
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.017842	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40	40.327760	131066	9902
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.006343	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.one_succ	40	0.006350	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.two_succ	40	0.004397	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_0_l	40	0.009500	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.023922	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40	40.002057	101	33
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.069879	32	14	0.0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40	40.095550	29841	4353
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40	40.071313	20422	1987
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40	40.102430	33562	4732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40	40.075166	12928	4582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40	40.163891	9018	1871
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40	40.269251	7451	931
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.042205	12	6	1.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_r	40	40.200548	36678	4322
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.074436	18914	4663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.367929	54524	7987
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_odd	40	40.180206	52357	4925
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40	40.182636	40171	8307
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.233371	13316	5793
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_lt	40	40.060921	14961	6184
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	40	40.205565	24776	5422
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	40	40.231417	18574	5382
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_succ_r	40	40.323858	12384	4042
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.395313	32710	3590
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40	40.447002	59207	6293
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.675022	8146	1911
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.193019	28697	4591
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.332671	13194	1052
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.907997	26016	2419
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	40.408613	50594	5666
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.052694	13598	3742
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40	40.500696	4585	1069
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.104818	34678	4499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.074838	8477	777
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_p_Sq	40	40.256174	27154	3363
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_S	40	0.012309	2	2	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_Sp_q	40	0.012078	2	2	0.0	synth with cache (only 1: intros * []; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.033335	7082	3554
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	40	3.844566	428	81	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.bi_induction	40	40.909621	53645	6241
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.109298	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.059505	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_in_or_default	40	40.489180	33185	4704
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.016633	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.107432	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.288886	30654	3522
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_split	40	40.207491	46797	2555
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	40	0.351506	20	5	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.349296	24414	6218
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	40	40.041150	10941	2395
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40	40.464661	6118	828
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_div2	40	14.447527	6922	1811	19.0.0.0.1.0.1.0.0.0.0.1.5	synth with cache (only 1: split; only 1: split; only 1: rewrite even_equiv; only 1: intros (p, ->); only 1: rewrite Nat.div2_succ_double; only 1: apply Nat.div2_double; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: trivial; only 1: apply odd_div2 in Od; only 1: rewrite <- Od; only 1: intro Od'; only 1: elim (n_Sn _ Od'); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.272072	30689	2707
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_le_compat	40	0.007872	2	1	1	synth with cache (only 1: apply Nat.add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	40	19.175484	15977	3348	2.0.7.4.0.0.5.10	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: destruct m; only 1: now destruct n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.004808	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_weak	40	40.508582	40434	2961
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40	41.390695	21960	3278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40	40.106627	22827	3792
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.098453	11709	2629
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.280540	38647	442
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40	40.057788	14272	4855
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_spec	40	17.521733	5089	1551	0.0.0.2.8.2	synth with cache (only 1: simpl; only 1: unfold succ, add; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40	40.098181	21667	5434
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.040517	9240	4196
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	40	40.116068	36678	6643
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	40	2.296541	297	143	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	14.891977	4529	897	0.1.4.6.0.5.2	synth with cache (only 1: inversion 1; only 1: unfold MapsTo in *; only 1: invlist InA; only 1: inversion_clear H; only 1: destruct H1 as [e' H2]; only 1: auto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	40	40.046064	12275	2939
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_1	40	0.016207	4	3	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	40	0.020998	5	4	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.695715	345	67	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	40	3.948362	278	95	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_mul	40	0.046916	9	8	1	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	40	40.033956	4883	1516
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_mul	40	1.477496	152	83	2.7	synth with cache (only 1: rewrite add_comm; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	40	0.016283	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_succ_double	40	0.008100	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.not_le_minus_0	40	40.166118	37593	4835
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	1.780960	683	170	0.0.7.0.0.2	synth with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: simpl in *; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.129229	48682	3229
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.025649	3191	990
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.731603	56	32	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.045033	6	5	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	40	40.263720	40571	3304
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40	40.161824	18992	3155
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40	40.001767	245	46
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.137794	12892	2335
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40	40.322043	138159	6090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40	40.126386	31586	4379
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.220640	4395	701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40	40.093274	7120	2190
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40	40.132453	25005	3547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40	40.223345	19227	2045
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	4.694741	1581	199	1.2.18.0	synth with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	40	40.218187	69408	4737
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	40	40.226341	13737	4012
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40	40.262362	74116	4119
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_gt	40	40.216335	16907	6100
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_l	40	40.275372	17271	5795
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eq_dec	40	40.401524	61571	4705
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.681884	32866	5788
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	40	40.138721	19414	5518
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.486816	35394	3721
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40	40.428851	27606	2191
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	40	40.291570	33035	4846
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40	40.510078	22821	2618
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.490579	35663	3527
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.478121	95	53	0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.026261	4	4	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	40	40.359617	70941	4084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40	40.083768	24831	4756
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_square_simpl	40	40.903867	30705	2469
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_square_simpl	40	0.034698	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40	40.517597	14439	2697
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40	40.281937	46536	3701
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.cast	40	4.513728	2842	628	10.4.4	synth with cache (only 1: intros x y; only 1: intro; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.134602	17590	3604
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	40	40.261726	58045	5418
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	40	0.041393	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.181419	30457	6959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40	41.036548	14685	1707
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	40.805760	19481	1478
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.013371	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_0_r	40	0.007107	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_splitat	40	40.398144	30185	4850
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	40	40.246757	21448	3717
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	40	0.060447	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_r	40	0.057305	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	40	0.057515	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	40	0.638131	31	9	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_r	40	0.058513	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_l	40	0.057648	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_r	40	0.076847	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_l	40	0.056734	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_l	40	0.056441	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_le	40	40.421282	15470	4837
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_r	40	0.228141	4	3	0.0.1	synth with cache (only 1: induction n; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xcnf_correct	40	40.243423	26139	2596
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_l	40	0.059605	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_r	40	0.057341	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_aux	40	0.583341	94	29	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	40	0.041880	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_r	40	0.038255	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_r	40	0.056646	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	3.828882	792	392	0.7.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_l	40	0.056848	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_S	40	40.252736	35280	3598
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	40	0.085803	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_l	40	0.037821	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.317923	81	44	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_r	40	0.037751	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.059661	8	7	0.1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	40	40.234413	17002	2052
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.085204	22166	8582
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.103667	31061	2858
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.847562	26079	6908
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.533791	632	349	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.059741	11406	2901
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.043545	8706	2904
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_l	40	4.305808	2616	387	5.3.0.8.0.16	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intros m IH; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40	40.074636	21560	4325
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0.014851	5	2	3.0	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40	40.132164	14970	4307
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40	40.136704	41778	4579
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.077309	22241	4906
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.227162	24241	879
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_r	40	5.272402	2673	465	7.1.2.0.1.2.1.1.19	synth with cache (only 1: revert m; only 1: induction n; only 1: intro; only 1: Nat.nzsimpl; only 1: left; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	40	40.074105	20367	5449
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	40	40.070002	16689	1324
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	40	1.659320	361	236	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_inj	40	40.316943	30161	4046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40	40.073887	6969	557
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	40	40.079761	25054	3012
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.022965	2405	792
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40	40.076230	25739	2371
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40	40.058775	17604	2542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40	40.059505	12752	4777
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.134172	49938	5767
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40	40.103217	19493	4361
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40	40.002860	297	45
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40	40.066130	14261	2719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40	40.142296	8625	2018
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	40.056815	9482	2154
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40	40.180934	10591	2492
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_lt_compat_l	40	40.186711	19688	3090
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.141914	16330	4496
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	1.649133	537	189	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.027852	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40	40.173914	34828	6517
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_le	40	40.111955	13583	6091
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40	42.137286	7258	1011
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_no_neutral	40	40.274973	47446	4416
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40	40.257394	69962	4520
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	40	40.282696	15157	5826
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	15.295513	9037	1752	2.0.0.0.0.0.0.0.1.0.0.0.0.14.0	synth with cache (only 1: intros m x y e; only 1: reduce; only 1: apply InA_eqA with (x, e); only 1: split; only 1: eauto; only 1: eauto; only 1: red; only 1: unfold Raw.PX.eqke; only 1: intuition; only 1: eauto; only 1: congruence; only 1: unfold Raw.PX.eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.339087	48737	2281
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40	40.358010	58614	2915
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40	40.431275	50289	3240
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.072318	17230	4368
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	40	40.389835	21361	4522
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40	40.200934	36189	4077
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.469266	68827	4719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40	40.601423	4433	717
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.230537	19999	4044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	5.999894	1085	317	0.0.0.1.1.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zeq_plus_swap	40	41.095959	7747	1150
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.718674	586	206	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.059791	13160	2629
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_in_int	40	40.238907	52204	4993
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40	40.092906	14579	4552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	7.360069	2192	903	0.1.0.0.1.0.1.0.1.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	40	40.131871	47306	5425
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_succ_r	40	40.491131	7325	1666
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_neg_r	40	1.114755	401	111	0.0.1.1.2.1.5	synth with cache (only 1: revert m; only 1: destruct m; only 1: now destruct n; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.027337	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	4.543360	1994	457	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.032541	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	40	40.725890	13659	2956
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.095900	37972	2191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40	8.483695	984	199	2.16	synth with cache (only 1: compute; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	40	40.186956	24838	4025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.040100	7209	3587
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	2.426814	1032	168	0.0.1.12	synth with cache (only 1: unfold pow; only 1: intro y; only 1: rewrite recursion_0; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.115341	27276	8971
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_trans	40	40.448198	19302	3844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40	40.042526	11134	2804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.031533	7067	2415
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.820225	12587	2091
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40	40.103504	24059	4632
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40	40.073846	16435	3227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	39.523540	10043	4074	0.1.1.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0); only 1: pos_or_neg b; only 1: rewrite abs_eq in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: rewrite <- opp_0, eq_opp_r; only 1: rewrite abs_neq' in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: now apply mod_always_pos; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.216703	5704	583
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.070533	11298	5594
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	11.041334	4442	952	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_compat	40	40.269635	8905	1936
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	40	40.206188	41120	3998
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	3.998746	1954	450	0.0.0.10.3	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: unfold elements; only 1: simpl; only 1: now rewrite !app_assoc_reverse).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_contravar	40	40.073844	18410	5196
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.101454	18730	1037
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_inj	40	40.293678	32025	5199
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40	40.216811	7093	1188
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_1	40	40.097957	24553	3517
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40	40.040388	11459	660
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40	40.295473	27073	3846
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40	40.063602	13231	4756
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40	40.118765	45936	4997
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40	40.081058	15807	2955
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40	40.145848	11974	3325
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40	40.108072	15561	4134
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.014069	383	42
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.278516	33441	3836
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	40	40.321012	31533	2987
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.294251	14584	5318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.293454	19310	2092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.512621	37658	4819
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.317655	11783	4119
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	40	40.396956	18476	5095
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	40.279285	24404	4051
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40	40.166199	41807	1472
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40	40.276434	62809	5030
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40	40.337781	19712	1887
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	4.334257	832	455	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.089594	18963	4456
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	40	40.153016	14756	5382
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	40	40.389921	28356	1563
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40	40.069545	16108	8323
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.055872	21114	1652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40	40.046223	13195	2547
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.933489	27520	5615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40	40.106176	19263	2938
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40	40.225674	28781	3829
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	40	40.233695	27368	2925
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40	40.056427	15911	3339
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	40	40.192428	41858	4772
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.square_spec	40	40.771751	5066	727
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	40.093353	25366	5717
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.tauto_checker_sound	40	40.043489	13233	2688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40	40.064611	15595	3985
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_double	40	40.220735	25956	5608
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_eq	40	15.399812	10839	1921	2.0.0.0.0.0.0.6.6.0.11.1	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: intros H; only 1: intros; only 1: reflexivity || destruct H; only 1: trivial; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0.008075	2	1	1	synth with cache (only 1: apply Nat.compare_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.007303	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	40.312165	6702	1325
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	40	40.095912	21444	5089
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_trans	40	40.446061	20217	3414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	40	40.098008	26236	2405
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40	40.036461	7117	3897
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_div	40	40.465613	31864	4078
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40	40.178796	16316	2650
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40	40.144617	27665	5135
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.088481	8057	1437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.163328	28462	2271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.387516	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.035101	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40	40.068877	13865	6280
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	40	40.370184	15382	3197
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	40	40.425169	12094	779
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	9.029117	6897	1080	5.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_le_lt	40	1.606546	1099	154	19.7	synth with cache (only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_le	40	0.006157	2	1	1	synth with cache (only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.cons_1	40	40.270896	30672	3955
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_O	40	3.546494	2189	410	8.2.0.0.0.0.6	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros n IH; only 1: intro H; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	40	40.060968	14571	3906
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40	40.057054	7124	1670
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_not_lt	40	3.592613	3229	346	24.0.6	synth with cache (only 1: intro; only 1: apply Z.nlt_ge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt	40	40.411203	15223	2370
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.447479	72	41	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.055391	11844	4600
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_2	40	40.058174	10587	1682
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40	40.016308	1938	825
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	1.725169	309	146	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40	40.110294	27654	6157
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40	40.052990	16800	2153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40	40.069581	13001	3555
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.091037	29430	4995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40	40.097418	17814	3091
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40	40.121261	9393	3671
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40	40.002901	223	47
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.284608	34356	3738
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40	40.438439	76617	6658
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.362009	11272	4067
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	40.054145	17345	1841
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	40	40.391105	16945	4065
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.105271	23	10	2.1.1	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40	41.537515	10010	935
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	40.338902	51586	4622
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40	40.158179	61168	2045
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40	40.383710	21158	2597
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40	40.081702	11123	3845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.021590	7	3	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.065119	15350	4358
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40	40.287068	19984	4229
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	1.559649	1899	283	0.0.1.6.7.20	synth with cache (only 1: intros H; only 1: simpl in *; only 1: intro n; only 1: unfold Raw.empty; only 1: intro abs; only 1: inversion abs).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	40	40.544362	4303	1682
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40	40.079520	11752	3707
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.328809	56	26	7	synth with cache (only 1: eauto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	40.535374	47143	5451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.085038	26286	4595
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.083955	26921	3957
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.115378	12582	1964
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40	40.420890	28990	4002
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_minus_le	40	40.694582	28346	3485
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.009307	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	40	40.204900	36730	3384
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40	40.055221	12421	4988
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	40	14.310594	4494	1404	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_overflow	40	40.283802	31618	6150
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.121821	338	93	0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_le_mono	40	0.271204	55	31	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_0_r	40	0.483088	315	47	5.15	synth with cache (only 1: inversion 1; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_0_r	40	0.104401	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	4.488136	2877	729	1.5.5.3.2	synth with cache (only 1: intros; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	40	40.698032	18475	1267
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40	40.106412	18964	4932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	10.729110	4680	1440	2.8.2.5	synth with cache (only 1: intros a Ha; only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_bf_map	40	40.310870	27938	2204
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.040371	6210	2907
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_2n	40	40.261553	64948	4878
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_S2n	40	0.021771	11	4	0.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double	40	0.059000	18	8	1	synth with cache (only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double_plus_one	40	0.460213	207	64	0.8.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_equiv	40	40.126898	23166	5155
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40	40.219619	18423	2397
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.leb_le	40	40.105539	25621	7193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.182490	16	7	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.134585	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.025096	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.024968	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40	40.105425	6522	1135
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.119142	20863	5779
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	40	40.910495	19843	2921
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.059171	8881	1935
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.105235	31614	5193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.245882	14873	738
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40	40.094489	21086	3712
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40	40.056595	13603	5737
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40	40.701048	31748	815
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	21.671446	19718	1369	0.0.1.0.2.0.6.18.38	synth with cache (only 1: intros n IH; only 1: intros x x' Hxx'; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	10.671343	2302	288	0.1.0.6.8.6.2	synth with cache (only 1: intros H2; only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: intros Ha; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.017049	3	2	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.018619	2	2	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	40.310858	62698	1677
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	40	40.290148	44196	3258
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	40	40.072388	18223	5461
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40	40.053096	4532	782
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.441891	19775	3422
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_3	40	40.066415	18389	3085
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40	40.124697	1732	729
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	40.221305	7413	772
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40	40.258086	11175	5181
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40	40.039410	11588	1880
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	17.399542	3908	449	2.2.1.0.24.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.074407	23407	3955
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40	40.118471	26035	4150
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	3.489282	828	338	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40	40.107504	12216	2004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	12.748888	4141	861	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.074195	8215	2652
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	40	31.483472	26789	4801	0.0.0.2.1.6.4.2.1.12	synth with cache (only 1: induction l; only 1: intros l m a; only 1: simpl; only 1: intro; only 1: now Nat.nzsimpl; only 1: intros; only 1: destruct n; only 1: split; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40	40.002650	256	77
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth1	40	0.910287	177	75	0.0.5.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_le_reg_l	40	40.141608	33382	5612
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40	40.176756	29413	5091
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.196704	22068	6112
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.259305	24072	5027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40	40.086179	1942	356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40	40.194047	41163	1392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.125283	31120	4297
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40	40.166832	18101	1842
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40	40.446033	48084	2169
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_r	40	2.504894	720	322	0.3.1.0.1.2.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40	40.399579	13633	3950
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.330334	50095	4308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40	40.054229	13618	4771
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.181646	18273	4996
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40	40.103844	36340	2600
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.459998	57544	4785
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.374826	267	65	0.0.4.0.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40	40.076942	11912	2901
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.059306	10935	5603
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_not_exists	40	40.265281	49910	4458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40	40.102818	23674	3579
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	9.680681	1964	650	0.0.0.3.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth2	40	8.920857	3236	1135	0.0.8.0.0.3.0.1.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: intros l' d [| n]; only 1: simpl; only 1: now destruct l; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40	40.060795	17459	4217
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_succ_r	40	40.379587	16815	1433
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	2.759739	551	247	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_spec	40	40.269767	14065	2477
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_neg	40	0.054228	24	8	4	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40	40.099315	24350	5915
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	40.067861	18535	5085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40	40.051398	7503	2991
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_iff_conv	40	40.220215	17715	5056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40	40.272847	13383	4295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40	40.114747	13414	4034
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.081630	20830	5625
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.017470	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.049208	11145	3867
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	40	10.257774	5077	808	26	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.092587	6316	2044
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.523887	16561	2504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40	40.163085	19532	4499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40	40.169059	6661	819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.274221	20432	847
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_add	40	40.767312	10443	1630
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	5.039629	499	99	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40	40.190109	30094	3318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40	40.102290	5276	185
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	40.228771	22277	2923
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_tail_plus	40	40.161174	10976	3372
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	40	39.357392	20207	2163	3.40	synth with cache (only 1: intro x; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	40	40.060788	10531	1540
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_dec	40	40.588530	19256	5026
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.051219	11710	1705
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.014080	1593	622
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40	40.318392	15837	5447
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40	40.112760	18266	2465
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40	40.098011	28808	4247
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40	40.075945	28777	2513
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	21.548711	10548	4206	0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40	40.103631	10828	3575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40	40.148299	19622	3700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40	40.109756	7217	3360
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40	40.125973	40844	4647
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40	40.001094	82	24
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	40	40.260748	42139	2324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40	40.219076	16766	3686
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40	40.324439	17348	5560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40	40.181532	74212	2456
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.077139	12371	1524
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	4.076131	804	471	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rgt_minus	40	12.485577	3698	986	0.0.0.1.0.4.9	synth with cache (only 1: intros x y H'; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct	40	27.604939	21854	4374	17.1.0.0.0.1.3.0.0.0.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m H; only 1: destruct m; only 1: now split; only 1: simpl; only 1: rewrite IHn; only 1: trivial; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete	40	0.006562	1	1	0	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40	40.113468	17420	4862
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct_conv	40	0.024645	3	2	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.018302	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	40.199316	18309	1700
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.353257	9800	2708
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.435910	44369	5637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40	40.079430	21236	6173
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	40.480880	31889	4545
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40	40.486611	15785	5125
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	40	40.181509	27285	5191
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	40.109982	39709	3445
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	40	40.430084	43589	3795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40	40.065028	15470	3057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.053510	12514	5323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	3.041119	2245	317	0.0.0.0.0.0.0.20	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	40	40.230861	38180	4496
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.342366	168	41	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	3.186376	2813	79	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	40.059455	17397	2688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	32.047684	13377	1855	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	0.862343	136	40	7.2	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	40	5.380523	1043	129	1.1.0.14	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	40.060324	15879	4856
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	40	40.184422	28884	4595
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	40	19.102083	11107	1666	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40	40.051920	13067	1669
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.508090	20864	3535
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40	40.117158	20156	5463
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.073921	21076	3382
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_O_plus_INR	40	5.449753	895	215	4.0.3.0.0.2.1	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.049967	11795	4372
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40	40.208068	17582	1703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40	40.041066	8060	3820
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	40	11.448946	27633	1019	1.12.32.15.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.square_spec	40	40.384438	31652	3124
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	40.044608	4273	2319
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.027480	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_odd	40	40.981968	16971	1763
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40	40.112475	20496	4788
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	40.090321	18090	3851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.039276	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	40	40.736433	11254	1736
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40	40.284971	9378	1669
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40	40.210610	25642	4017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	40	40.174651	57900	1970
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40	40.282025	36003	4198
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40	40.069203	11428	1248
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_2	40	40.066669	18884	2866
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_dec	40	40.453075	25672	3313
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40	40.063548	14729	5795
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	40.132301	2091	659
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	29.321890	24765	2467	0.0.0.0.1.41	synth with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.112495	20491	2601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.144314	43762	5784
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40	40.305675	128513	9461
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	40	40.101311	21722	6425
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	40.036005	7984	3218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.188255	8939	3518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.351671	44	16	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.144654	25425	3229
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.002691	389	71
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	40	40.228381	13403	4032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.121371	13777	5737
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	0.138655	350	20	26	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.012564	3	2	0.1	synth with cache (only 1: intros a; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	40	40.259664	32335	3750
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40	40.103547	5632	940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	3.806726	661	292	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40	40.045477	12467	1710
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.166648	8152	2750
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40	40.092222	16392	3455
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	40	40.257944	14105	5909
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	40	40.178748	18113	5259
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40	40.083490	21325	6031
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	40	40.311647	38702	4045
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40	40.416973	33476	4675
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40	40.085137	26113	2360
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.530691	5174	2219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40	40.094687	7920	2377
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	40	40.150636	52721	6618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40	40.143134	5200	1032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40	40.183582	18653	1810
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40	40.072195	18066	3742
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	30.980363	9556	1772	0.0.0.0.0.3.17	synth with cache (only 1: intro z; only 1: intros n m H; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: intuition order; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.189508	59	23	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40	40.387625	12623	2617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	40.083574	11278	2999
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	4.978132	1832	594	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.142855	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_In	40	40.402444	35758	5485
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.527525	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.096646	38	16	1.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.038047	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.042128	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.017529	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.015883	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.873638	425	152	0.1.4.0.1.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40	40.144137	32399	4343
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.074031	25	14	1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.012684	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.012942	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40	40.103612	16317	3126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.360288	88	39	0.0.0.0.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.082653	24	14	0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.232407	65	31	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.096332	19525	5405
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.248377	44	28	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.478541	14514	2186
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.030883	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.078543	10428	3118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	11.633667	7158	1217	0.5.9.6.0.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.583550	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	40	40.056200	14855	4540
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	15.400531	5936	2411	0.0.0.0.0.0.0.0.1.0.2.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	1.197441	790	187	0.1.8.1	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.216606	20578	2475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	40.051106	11852	3470
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	40	3.184706	1457	641	3.0.2.0.0.2.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: reflexivity || destruct H; only 1: destruct m; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_succ	40	0.078436	28	23	2.2.0	synth with cache (only 1: revert m; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	6.115300	2962	821	1.2.2.8.3	synth with cache (only 1: induction n; only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.077833	5994	1402
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_l	40	2.512930	1150	559	0.0.1.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	40	40.388070	29404	3295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	40.030185	3850	2050
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_r	40	2.267526	873	455	0.0.1.0.1.0.0.0.0.0.0.0.2	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40	40.148299	26161	5358
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_even	40	40.893847	15831	1594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40	40.140207	27243	4576
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	40	4.777318	2234	979	0.0.1.0.1.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	40	40.386244	22198	4327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40	40.062436	11605	2902
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40	40.207132	23122	4190
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40	40.120834	38276	1648
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	40	40.342673	65485	3550
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40	40.098545	26168	2285
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_3	40	40.047140	8763	1471
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_r	40	6.810370	3572	1364	0.0.1.0.0.0.0.1.0.0.0.0.0.0.7	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.477068	40888	1024
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	40	0.013872	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.012443	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.064809	22	7	1.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.012918	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40	40.324609	11739	5679
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015210	2921	848
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.083723	28411	2735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.200725	29	9	0.0.4	synth with cache (only 1: intros; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.210368	44	11	2.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.081325	20075	2565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.150846	13	5	0.0.3.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.013651	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.090554	23893	6706
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.165326	60084	8680
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40	40.186810	8541	3580
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40	40.097740	25853	3050
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40	40.002538	361	55
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_tail_mult	40	40.163965	9979	2529
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40	40.254413	34382	4063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40	40.080593	6381	1502
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	40.112273	27077	5082
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40	40.380225	10041	2181
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40	40.064593	16225	3581
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40	40.050726	10025	1458
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.295025	15923	5941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40	40.071794	20743	1168
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	40	40.485157	28117	5038
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40	40.293631	33980	4705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.053584	11820	2476
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	40	40.564147	3974	1668
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.095363	23645	3093
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	40.403596	57731	4853
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40	40.120997	13652	4794
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	9.159807	2383	1085	1.0.6.1.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.504097	225	70	0.0.5.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40	40.172087	20454	4068
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.084015	12090	2915
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	40.077562	17164	4274
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40	40.152223	15557	2187
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	40.047250	12287	3105
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth_error	40	40.210087	47860	5543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40	40.097928	8640	1397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.057918	10487	4326
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	40.093112	17181	8005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40	40.078343	22453	5200
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	5.527865	1538	619	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.even_spec	40	40.665836	22182	4644
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	40	40.066011	21682	3094
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.085908	26454	4824
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.013551	4	3	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	40.045201	9966	3271
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	11.174858	44146	1033	0.0.0.101	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40	40.433734	3505	1283
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	0.073495	30	11	6.0	synth with cache (only 1: intros; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	10.215201	3177	1016	2.3.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.042444	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	40.408222	55510	4921
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	40.019700	4100	1063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40	40.079764	11475	3628
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	40	40.386823	25044	2261
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40	40.167979	13352	2553
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zodd_mod	40	40.819324	15242	1374
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	40.079631	24752	3501
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	22.180891	2979	1088	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	40	40.766889	19729	2590
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.085707	16057	3864
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.388341	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.214323	18472	3676
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	4.084720	717	306	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40	40.074696	8856	2282
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	30.977180	74539	10615	5.13.8.1.14.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: right; only 1: trivial; only 1: left; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_spec	40	40.125417	41502	4645
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40	40.082576	18308	4560
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.099719	34829	3367
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_le_compat	40	40.090293	24234	3840
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40	40.246959	72622	3674
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	23.739122	8198	2124	1.0.1.5.1.0.1.6.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40	40.054528	13002	5295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	7.390936	1020	401	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40	40.015583	2339	1046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.118617	22370	4105
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	40.104933	18345	5371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	18.727217	13295	2982	0.3.0.0.2.3.10	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.380462	107	53	0.1.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	2.758030	774	314	1.0.0.1.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40	40.157105	13091	4495
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40	40.001596	248	25
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40	40.249258	98065	5280
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	40	40.291408	19133	6996
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40	40.168228	20991	2068
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40	40.091251	18144	5377
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	40.033247	6904	1522
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.217289	16600	5031
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO	40	0.010512	4	2	0.2	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40	41.578501	5541	1132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40	40.075625	22888	3311
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.071905	19842	2129
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	40	40.270416	13435	2312
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.517521	25541	3882
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	0.525598	83	38	0.0.0.0.0.0.0.5	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.102041	16479	3973
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	40	40.578470	4914	1818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40	40.103475	24427	3736
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40	40.101380	34141	3241
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40	40.153414	11964	4314
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.031937	8068	2098
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	40.110103	10646	2905
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40	40.374278	13824	2102
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	40	40.358346	18797	5187
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.065806	15888	6668
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40	40.091064	17260	5053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40	40.155161	17006	3017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	40.051219	13498	3932
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.odd_spec	40	40.285844	24941	4181
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.double_spec	40	0.006120	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.404641	169	66	0.0.3.2	synth with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_double_spec	40	0.477208	91	38	0.1.0.0.0.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_double_spec	40	0.008206	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	40	40.051294	13237	4245
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	31.388869	19410	2495	0.0.0.8.0.3.0.13.3.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: apply eq_opp_r; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	40.091005	28282	5221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.129801	51	19	0.2.0.1.1	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro H; only 1: right; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	3.241207	1613	412	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40	40.049217	9761	3343
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40	40.241690	42124	4578
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	3.020472	736	280	1.0.0.3.0.6.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: assert (AUX : forall a b, 0 <= a <= b -> b * a + a * b <= a * a + b * b); only 1: intros a b (Ha, H); only 1: apply crossmul_le_addsquare; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.535525	1848	740
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.045519	11408	2337
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40	40.555162	38068	4880
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40	40.082168	10201	2565
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_le	40	40.281554	22716	3811
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40	40.058175	8854	3675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zeven_mod	40	40.487073	18933	2005
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same	40	0.134524	44	21	0.1.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40	40.044274	8149	3400
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.791026	18350	2362
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40	40.234784	28643	4995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.098290	22296	3062
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.269834	108494	10567
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.256869	22224	4831
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	32.621236	4574	1513	0.0.1.0.4.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_2	40	40.078812	18918	2006
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_1	40	0.005516	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.011446	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	40	40.065320	14413	2359
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_minus_iff	40	40.520111	7947	1740
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.044815	9127	1507
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40	40.199627	52922	3931
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	1.988993	5270	282	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.605692	811	113	0.0.0.27	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40	40.151274	13317	2845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40	40.158234	54042	4031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40	40.091134	27263	7184
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40	40.073460	14125	4788
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	7.351295	1184	532	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40	40.013570	1956	846
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40	40.165232	8540	3446
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000998	47	24
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40	40.395140	174515	3576
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	40	8.803911	992	503	0.1.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros s1 s2 B1 B2; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	40	40.356048	26074	7257
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.181304	18068	2813
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40	40.063365	14246	6014
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.052586	10	9	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40	40.032621	6599	1584
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.340540	14608	6041
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40	40.050269	13542	2686
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	40	40.120825	45023	4575
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40	40.078815	23109	2701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40	40.181523	13621	2270
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.420345	18692	2453
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	40	40.151000	15852	3768
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40	40.051945	15488	1296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.084045	24949	3442
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40	40.082639	25622	3937
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.064891	19392	3290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40	40.045115	9994	3273
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.709328	187	74	0.0.1.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.222758	25613	4692
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	5.094142	3855	526	1.0.0.0.25	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: order'; only 1: apply Private_NZDiv.div_small; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.276906	145	32	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.534950	7053	1421
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_Some	40	40.177470	14592	5827
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	16.014123	5370	1746	0.0.0.7.0.0.0.8.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	40.068248	17929	6089
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	6.837621	2581	757	0.1.0.0.1.1.0.8	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40	40.114101	14863	4064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40	40.124421	10951	4035
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	13.920375	1605	594	2.0.0.1.2.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_INR	40	40.041619	11132	2127
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.744768	48065	1905
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.069255	22089	3093
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	2.549863	456	206	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	40.081808	23733	5244
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.068076	14157	4005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40	40.140632	33059	4251
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40	40.533968	34285	2805
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.151111	49	24	0.0.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40	40.037371	9257	2261
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40	40.032966	7570	2106
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	8.068841	2918	729	8.3.0.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros m H2 H3; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	40.403902	17305	4420
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40	40.038434	6790	2231
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	40	40.374399	20035	3363
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.091763	419	155	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40	40.116577	4743	1956
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.171437	14363	4508
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	18.681563	8000	2164	1.0.0.0.14.0.0.0.1	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: intuition; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.185228	558	184	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	40	40.468113	31732	4659
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.091486	31739	4447
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	14.067250	8226	2064	0.4.0.0.0.0.0.4.0.1.3	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40	40.042744	8464	4339
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	40.043489	9833	3176
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40	40.172736	62492	10595
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40	40.263751	25648	1237
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	14.951141	4570	1739	0.4.0.3.0.4	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.460581	16331	4455
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.154702	62588	4245
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	40	0.019634	7	2	5.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.145191	14118	3925
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40	40.111956	18571	4295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	40.120173	39445	5060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40	40.095645	18352	4124
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	40.104808	14123	3521
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40	40.110597	8680	3230
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.034514	6485	441
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000991	43	25
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40	40.364705	159553	4881
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40	40.076594	16612	2703
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	40	40.318076	29163	5831
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	40.083413	13392	5587
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	40.040278	11949	1503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.752558	2337	354	0.0.1.0.0.0.0.0.0.0.7.33	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.279518	16962	5252
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	40	40.074596	21931	4236
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40	40.217643	8023	1912
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40	40.075602	21019	1913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.052356	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.411996	27476	2319
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	40.115971	40046	4749
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.498598	1089	476	3.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.143909	15076	4035
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	0.460212	1439	55	52	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	40.068105	20279	3681
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40	40.057544	13665	4264
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.169798	65880	1764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40	40.172332	13749	3906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40	40.224021	3138	1003
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40	40.521478	12413	1678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	1.123516	376	103	0.0.2.0.2.0.4.0	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_split	40	40.221459	21086	4710
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40	40.058447	10622	2876
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	40.044156	8191	5185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40	40.055123	10568	4578
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.115289	35821	4715
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	40	40.109559	34156	5966
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	40	40.725755	43684	4540
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.187464	6967	975
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	12.060980	2490	729	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.031410	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	40.068052	13694	3175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.136409	17835	3369
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40	40.223781	19448	2806
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40	40.062565	15761	2509
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40	40.049821	12707	2669
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	40.046387	11390	3330
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.668831	342	52	0.12.0	synth with cache (only 1: intros n m; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.358390	9241	2809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	40.108917	37375	3612
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	22.839933	6069	2553	0.0.2.0.0.0.0.0.7	synth with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.even_spec	40	40.224077	39738	4392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	4.775398	2258	348	13.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40	40.085175	13240	4494
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	13.840118	2988	1228	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_plus	40	40.609911	9824	2142
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	8.872154	1215	484	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.544956	151	74	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	21.348175	10688	3201	0.0.3.0.0.1.1.0.1.5.0.1.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40	40.080881	18374	3318
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_min	40	40.433754	19113	3517
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.058549	16375	3051
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40	40.405726	18225	2312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.068789	13020	1314
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	40	40.063668	15387	4243
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.141718	43865	10936
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.044875	3	2	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40	40.279719	31738	1075
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	40.052327	14808	2482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.030973	9	5	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.115544	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.018936	275	118	1.0.0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.308699	69	25	0.6.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.322035	127	34	3.4.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app1	40	24.155523	9700	2439	2.2.0.0.2.0.1.1.2.7.1	synth with cache (only 1: revert l; only 1: induction n; only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: eauto; only 1: intros [| a l] H; only 1: now f_equal; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_compat	40	40.503356	9594	2437
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.fold_1	40	40.165025	61226	4312
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.115045	24639	6027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40	7.289894	3610	447	0.0.1.0.18.7	synth with cache (only 1: intros n H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: now nzsimpl'; only 1: intros; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40	40.078169	24731	2652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40	40.141936	34598	3429
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40	40.146076	39796	5705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	40.079037	8146	4103
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40	40.033940	3931	617
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40	40.001137	94	20
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app2	40	7.280273	2178	825	0.0.0.1.0.3.1.1.0.0.4.0	synth with cache (only 1: revert l; only 1: revert n; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40	40.050512	9180	2252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	14.592897	6074	1415	6.1.8.3	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id	40	40.468527	59632	5176
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.139339	52632	3450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	20.349900	4412	1645	1.0.0.3.1.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_diag	40	40.306554	28995	4981
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	40.281156	23891	4753
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40	40.092766	32895	2895
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40	40.446123	4981	1313
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40	40.549866	13742	1907
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40	40.096341	12071	1918
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.149169	59904	2849
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40	40.072536	21483	3714
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	0.255238	98	28	0.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: apply add_sub).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40	40.210170	14055	3197
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40	40.091018	19751	3415
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.098128	12320	1942
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40	40.197368	10532	2776
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40	40.731305	17055	555
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	2.688918	681	292	3.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40	40.066477	18574	3841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.244882	66	22	0.0.5.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40	40.073518	5226	3078
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.061278	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	4.328028	889	398	0.2.0.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- add_sub_assoc by apply le_refl; only 1: rewrite sub_diag; only 1: now rewrite add_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.250351	32	13	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40	40.082924	27935	2805
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_INR	40	40.094276	31125	3930
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	3.237793	4332	428	3.6.22	synth with cache (only 1: unfold lt; only 1: intros A P; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	40	12.188126	6162	1522	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_mod	40	40.558201	39517	3911
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.293046	10411	2848
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	26.412075	18466	2526	2.4.2.3.0.13.7.18	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: unfold not; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.029098	6753	1557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	40.065701	14404	3298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40	40.079538	24564	3258
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40	40.037693	6701	1678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40	40.376317	19249	4802
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40	40.059666	16282	2740
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40	40.027531	6432	1550
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	40.077627	10760	3029
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.odd_spec	40	40.297113	30187	4188
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40	40.038133	5356	2310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	40.130004	24095	2395
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.191531	444	143	0.1.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.059729	16947	4553
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.120675	35	18	3.2.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_1	40	1.359751	398	66	1.0.1.9	synth with cache (only 1: intros a n Hn; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth'	40	13.837572	5330	1806	0.0.0.0.1.0.4.0.0.1.7.0.0.0.0	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: intros; only 1: solve [ inversion H ]; only 1: simpl; only 1: intros; only 1: now auto with arith; only 1: intros [| n]; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40	40.065915	14086	5163
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	40	40.648177	79094	5423
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.077482	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.072930	20748	3541
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.482172	36583	5140
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	40	40.099832	17881	3262
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40	40.202414	76016	11085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	25.683915	5987	2373	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40	40.059384	12145	6176
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	5.056269	1020	301	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.047777	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.082083	19390	3449
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.id	40	5.473984	2542	684	0.1.0.0.0.1.6.5.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: simpl; only 1: now destruct 1 || intros _; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_1	40	40.117101	25615	2138
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	40	40.613206	18111	2586
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_spec	40	40.198960	27102	5393
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.072927	9348	709
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40	40.082135	24516	4100
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.039080	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.097539	17014	5529
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.108510	25795	4847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40	40.140098	7362	3386
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40	40.075075	6886	988
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	11.994188	3926	1636	0.0.1.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40	40.001321	145	18
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	40	40.059549	15268	1358
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	3.377478	914	276	0.1.1.10.0	synth with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40	40.205836	13025	3622
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id_max	40	40.303479	31396	3834
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40	40.151140	12672	2683
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.442730	61024	3391
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.006179	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	40	40.480951	38080	4783
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40	40.087253	30098	2823
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.761626	275	69	2.0.0.8.0	synth with cache (only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40	40.123807	14825	2892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40	40.277193	5854	1110
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40	40.357837	33162	3187
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.064723	22286	2296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40	40.056018	16245	3120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	40.082177	27667	2133
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	40.210860	15435	3572
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	1.040835	400	127	0.0.0.1.0.0.1.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.535892	146	71	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40	40.256396	11056	3369
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40	40.085985	10639	4516
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.106675	13876	3214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	40.071327	20340	4900
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40	40.054460	14786	2856
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_1_INR	40	40.108895	34872	4770
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40	40.500125	24364	1913
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40	40.279881	23691	3127
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40	40.212754	8158	1280
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40	40.211461	26411	4770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40	40.085779	29300	1432
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.758216	207	59	0.1.1.1.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	40.061230	18143	3074
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	40	31.193604	21718	4480	0.0.0.0.15.0.12	synth with cache (only 1: unfold not; only 1: intros s x y; only 1: intro H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40	40.056958	11978	1721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.071371	8788	1559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.063886	9643	3113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	18.232191	5405	742	4.0.1.0.24.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40	40.040506	9172	2563
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	40.375377	42026	4233
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40	40.107712	16188	2694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	40.172836	43910	6860
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.496142	73017	1940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.526202	168	59	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.503993	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40	40.163036	19273	2318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.192260	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.108181	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	40	40.222545	41000	5697
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40	40.176701	14363	2097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	40	40.084889	24404	4349
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.026539	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	8.311900	3805	574	0.0.0.0.6.0.4.2.1.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.253227	97142	12809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40	40.053070	8367	2081
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40	40.318614	10202	3301
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	40	40.172178	16635	1746
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	25.392518	29419	2612	0.0.1.0.2.5.8.9.1.12	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply find_2; only 1: simpl; only 1: rewrite ?add_find, ?bal_find; only 1: destruct X.compare; only 1: order; only 1: intuition congruence; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40	40.063124	10246	2939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.409530	19	10	0.0.0.0.2	synth with cache (only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_2	40	40.095947	35303	3789
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj	40	40.716617	25803	3857
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.027726	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	40	40.177374	19417	2152
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_0	40	0.246084	63	8	0.11	synth with cache (only 1: Nat.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	40	0.005398	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.007066	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_l	40	40.715726	13361	1556
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.074518	13554	2435
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.111025	35619	5266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.136017	15346	3625
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.139861	34597	3530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	8.010606	1805	711	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.018090	3776	539
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40	40.080745	14718	5049
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40	40.001074	73	28
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.046476	9360	2352
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_add	40	7.438698	3074	782	0.1.0.1.1.7.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intro H; only 1: intros; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40	40.186006	30199	3735
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj	40	40.358967	22445	4423
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	35.098996	9838	1558	4.3.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_case	40	40.304743	47384	5878
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	40	40.378658	75266	5191
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.092829	31410	3872
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.013693	6	2	4.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.011444	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	40	3.487845	1052	295	1.0.0.0.0.3.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.027513	6372	1629
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.149866	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.040412	2729	136	5.39	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.016808	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40	40.093887	16388	2949
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.050896	18980	1377
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.022329	4809	2305
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.101337	34717	1966
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.172470	4689	1331
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40	40.323462	15164	4305
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	19.056045	12283	1650	1.16.8.1.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: intros; only 1: simpl_relation; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40	40.085845	6989	3836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.055897	15245	3405
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	40.076387	22660	4514
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.080066	23129	3362
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.115384	29565	3391
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40	40.546487	26337	3021
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	40.069747	10089	3039
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.220714	29023	5027
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	40	40.527834	17923	3064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40	40.044092	10363	1618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.067087	19114	2890
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40	40.066443	18808	3120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	40	40.704093	7066	1478
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.176688	45	28	0.0.0.1	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40	40.077868	18408	4992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40	40.103511	19014	2804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	40.176986	7007	3221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.037780	8494	3427
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.074417	9273	1736
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_eucl_spec	40	40.365435	38885	5360
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	40.226721	34527	3373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.035121	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40	40.152235	16073	4712
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.277489	29417	4572
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	18.054095	11900	1363	0.0.0.0.0.1.28.15	synth with cache (only 1: transitivity 1; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40	40.080637	9018	902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	40	40.152456	56800	1967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.373369	23793	2228
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40	40.149317	50992	10281
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40	40.245954	13672	3639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	14.756979	6851	570	1.1.2.5.7.5.23.5	synth with cache (only 1: rewrite one_succ; only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite opp_succ; only 1: apply lt_pred_le; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod'_correct	40	40.552715	20381	1963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.017126	8	3	4.1.0	synth with cache (only 1: intros; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	0.016270	8	2	6.0	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.024153	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR	40	19.270034	7801	1509	2.1.0.13.7	synth with cache (only 1: red; only 1: induction n; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.066277	21191	2921
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_1	40	40.080162	22338	3596
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div_mod	40	40.235893	16640	4166
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	24.383296	9494	2327	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_r	40	40.518126	5014	1701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40	40.076945	16146	1906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40	40.142289	52132	3919
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.124806	22703	3701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40	40.114732	24211	4835
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.122719	10045	2118
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40	40.037310	2113	610
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40	40.072140	12153	5406
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.001014	56	26
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.123596	46360	3362
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.284222	1283	516	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.045247	13	6	0.0.0.2	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40	40.088607	23172	3731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	40.044998	8142	811
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	40	40.447116	20700	3965
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.020645	4	3	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40	40.416104	43629	4959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	40.147742	55874	2401
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.022088	4416	1521
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	40	40.482679	27849	3821
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	40	40.184637	73709	4967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40	40.087102	15922	3649
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40	40.054439	16228	2634
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40	40.220809	6246	2217
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.011844	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.077163	14058	3328
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40	40.323584	16053	3506
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	40	40.061610	18878	2482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40	40.074725	19846	4053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.100560	21126	4637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.095639	19594	2011
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	9.978894	7203	1297	0.0.5.0.0.1.1.10.4	synth with cache (only 1: cases ltac:(n); only 1: apply le_ngt; only 1: rewrite pred_0; only 1: apply le_ngt; only 1: order; only 1: intro; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40	40.370016	27609	4985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	2.078152	704	234	5.4.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n IH; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40	40.359105	16938	3874
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.009779	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0.011365	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0.008308	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	40.037850	9996	1528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40	40.161789	59009	6346
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.723880	14318	4902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	2.684277	486	169	0.0.0.0.1.4.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	2.684136	1239	319	1.0.0.0.1.11.0.0	synth with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.077333	7	6	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.048452	13297	2138
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.290270	52	22	1.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	40.561093	101902	6010
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.073427	17350	6086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.088247	28817	4683
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40	40.056337	14516	4362
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40	40.178844	7424	3200
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.267609	2683	1072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.841932	1585	246	21.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod'	40	40.236565	32296	5108
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40	40.125693	17773	4427
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	40.177505	22354	5721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.091414	362	164	1.0.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.019735	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.020438	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod	40	2.373094	859	245	0.10.0.1	synth with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: intros H; only 1: now destruct div_eucl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	9.851400	5167	1206	3.0.0.0.0.3.1.1.0.0.0.7	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intro p; only 1: intros; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply le_le_succ_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40	40.076835	20158	4590
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.exists_last	40	40.353828	55091	5045
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40	40.111439	39417	3125
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.096993	29881	4428
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40	40.330997	138616	9602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.358111	35194	3519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	11.420458	2289	620	0.0.0.0.0.0.4.6	synth with cache (only 1: intros n m H; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.052353	12642	4026
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.127784	36270	10325
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	40	40.585426	24426	3387
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_lt	40	40.115974	40008	4332
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40	40.036544	9640	2040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.151842	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	40	40.077970	21621	5706
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	40.207933	23439	4183
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40	40.106069	30360	3902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40	40.047943	7902	1994
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_l	40	40.503734	11001	1791
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40	40.078890	17226	3149
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	40.130627	46901	4009
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40	40.161038	49329	6456
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	38.955582	1670	787	0.0.0.0.2.1.1.1.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.056857	11545	5283
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.061908	16392	3165
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.038551	4872	1370
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	7.012629	1123	441	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	40	40.298712	28399	5928
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.114610	31624	6932
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	40	40.209058	63726	5558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40	40.104402	30926	3085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	9.142933	7125	894	0.0.0.14.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.021787	4231	1394
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.289641	115	46	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	40	40.445734	30340	4416
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40	40.092163	10783	1504
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	40	40.454595	9196	1023
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40	40.090833	21666	10140
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.041040	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	2.020526	603	209	0.1.0.0.5.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	40	40.311369	135902	3302
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.356828	112	44	0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.221831	92	39	0.1.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.165431	12985	2411
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40	40.084529	15338	1879
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40	40.236434	27231	6059
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.090386	17222	4245
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	40.076771	12258	5098
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40	40.079058	19417	4004
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	6.389028	3027	832	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: reflexivity || destruct H; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40	40.603852	60224	2296
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	40.188835	14129	6106
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40	40.066606	23155	2284
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quotrem_eq	40	40.491226	32426	5753
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	4.372821	1338	642	0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(H); only 1: intro EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	33.866197	13836	3178	0.0.3.1.2.3.6.1.0.2	synth with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: intros _ H; only 1: rewrite pred_succ; only 1: apply le_succ_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40	40.057723	8400	2195
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40	40.162199	61367	4797
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.027924	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.214553	22	14	0.0.0.0.0.2	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40	40.142619	15022	3232
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40	40.393166	109977	5887
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40	40.058869	14000	5402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40	40.188692	13326	2820
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.223947	180	43	0.1.7.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: case (M.singleton x); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40	40.110343	18544	8331
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	1.439344	333	120	0.0.0.0.0.5.0.4	synth with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.322789	90	39	1.0.0.1.0.2	synth with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40	40.461503	209532	3634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.759794	505	129	0.0.0.7.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	4.660847	1481	670	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.184425	21493	3454
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	40.120419	24911	4609
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	40	40.482740	38233	4199
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.523212	189	67	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	20.748419	12753	1419	0.0.34	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40	40.131811	6916	1797
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.removelast_app	40	40.190327	31322	5160
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	4.706454	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.089174	4689	1191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	40	40.064740	16237	4248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.031800	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	40.099647	25815	5116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40	40.055107	15238	2144
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	40.039812	8711	2650
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	5.739461	1812	507	0.0.1.1.0.1.15	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40	40.138280	42281	9921
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	3.397764	142	68	0.0.0.0.0.2.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	40	40.066115	18716	4185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.406255	163	58	0.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: intros; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.401899	47895	4264
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.div_Zdiv	40	40.507724	26834	3586
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	40	0.249637	70	27	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.050639	14436	2759
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_1	40	40.089047	10233	1390
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	15.529780	9025	2196	1.1.9.10	synth with cache (only 1: intros n1 m1 H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	14.741472	3975	1804	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	40.195017	11909	2839
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40	40.074230	22282	5053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40	40.046000	12680	2312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.082814	24571	4206
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.035058	7	6	1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.077145	13550	4185
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.012912	1756	766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40	40.080713	4533	854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40	40.044634	9035	2196
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	40	40.060903	14390	2733
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	40	40.613695	13511	1892
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	40	40.218161	80089	6589
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	40	40.425981	22187	3677
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_equiv	40	40.260758	34583	6961
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_l	40	0.007995	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.418517	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40	40.027837	6225	1979
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.059830	7	5	0.0.0.2.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.031937	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40	40.181470	14925	1165
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	40	40.284069	21736	4461
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.793252	19568	2346
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	40.285160	122325	5749
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.018630	19	3	6	synth with cache (only 1: now symmetry).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40	40.078323	13091	3851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.995882	499	157	0.1.1.1.2.2	synth with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.186826	11651	3249
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40	40.096044	20567	2828
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.172968	20516	4015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.081116	21008	5198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.087135	16874	3936
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.191515	25	15	0.0.0.1.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.446080	111	40	0.2.4	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40	40.059432	16585	2920
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	3.438470	969	322	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.609499	16459	2434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.069525	20	10	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40	40.112770	43607	1070
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40	40.205400	27750	3292
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem'	40	40.552124	29900	1896
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem	40	0.108615	15	15	0.0.1.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40	40.068978	19747	3991
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.139690	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	4.203344	980	303	0.0.0.2.0.1.1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40	40.051450	14443	2686
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.569790	69	32	0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.187691	23263	3731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.104821	12486	2790
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.391466	26187	2704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.054326	14816	2528
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.086537	23	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.021889	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	5.412240	2247	470	4.5.3.1.3	synth with cache (only 1: intros x y z; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: rewrite <- H0; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.prop_congr	40	0.012075	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_true	40	0.031641	125	10	16	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.not_false_is_true	40	0.006119	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_locked_true	40	0.009166	2	2	0.0	synth with cache (only 1: unlock; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbT	40	0.014550	4	3	0.1.0	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbTE	40	0.009433	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbF	40	0.009324	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	40	0.008471	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbK	40	0.134454	506	30	3.27	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbNE	40	0.006482	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_inj	40	0.258084	599	40	0.31	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbLR	40	0.021669	7	1	6	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbRL	40	0.043903	24	4	8	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.453567	610	193	0.0.0.2.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.228290	64	31	1.3.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.149383	50	29	0.0.0.3.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.032521	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contra	40	0.840667	480	79	0.0.0.0.17	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: Bool.destr_bool; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraL	40	0.013636	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraR	40	0.013276	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40	40.134644	46122	5721
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraLR	40	0.013752	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.319802	103	32	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40	40.145787	10594	2896
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.224623	64	26	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.037821	7	5	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	40	0.499775	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.wlog_neg	40	0.009871	1	1	0	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	40	0.667046	146	16	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	4.090845	774	263	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.156973	314	109	0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFN	40	0.830726	185	17	2.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	40	40.503146	29317	4019
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraTF	40	0.676661	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40	40.124138	40161	5577
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraNF	40	0.780387	165	16	2.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40	40.079162	20784	5782
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40	40.106598	31968	5429
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_In	40	40.188595	37750	4368
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.358403	98	58	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.044630	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.483847	154	65	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.101102	24717	4089
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40	40.050399	9154	1761
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	40	40.140888	43425	9994
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.062505	38	12	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40	40.084474	22223	5271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40	40.078855	15417	4375
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40	40.157864	57525	3620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.116519	28331	1675
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_INR	40	40.045249	11354	1970
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.487300	163	107	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.188869	44	27	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40	40.497477	60826	6766
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.mod_Zmod	40	40.610869	13402	1451
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFF	40	6.892627	6098	590	0.1.33.15	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_refl	40	0.008672	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_sym	40	0.013288	2	2	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_trans	40	0.046603	11	9	2.0.0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	40	0.010586	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40	40.072348	21069	3452
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	40	1.179738	2363	226	1.7.19.0.0.23	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with *; only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.114936	38845	4601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	40.072974	20070	4148
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	8.460328	5854	984	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.085930	12319	3310
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.244029	13706	3773
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.015654	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.134068	1160	235	2.1.5.8	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	1.299576	553	189	0.0.0.1.0.0.0.3	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40	40.056039	14001	3275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.031973	8359	1378
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	7.602121	2689	905	7.1.0.1.3.0	synth with cache (only 1: apply bit_ext; only 1: case (to_Z_bounded j); only 1: intros H1n H2n; only 1: intros n; only 1: rewrite !lxor_spec, xorb_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	15.821816	3672	597	1.0.0.4.17.2.0	synth with cache (only 1: intros x y z; only 1: intro H; only 1: intro y0; only 1: destruct 2; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40	40.102993	29363	4502
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.096066	18299	6114
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40	40.029199	6620	950
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40	40.102556	24495	4576
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_r	40	35.276536	13004	4270	0.0.0.1.1.2.0.0.9.2.5	synth with cache (only 1: revert q; only 1: intros H; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40	40.076532	25054	2968
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.061660	12153	2380
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40	40.079586	14860	2568
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.108633	22893	7677
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.819553	602	119	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	40	40.397672	21014	3503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	21.533426	5444	1127	0.0.0.0.9.1.7.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzsimpl; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.106450	7	6	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.027397	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	40.027545	6436	1874
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0.003645	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40	40.049036	11039	2089
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0.005754	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.002865	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.512987	28995	4774
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	40	40.464432	38837	4088
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.325594	1122	251	2.0.6.0.2.1.1.3	synth with cache (only 1: hnf; only 1: split; only 1: red; only 1: intro z; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.003678	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.011372	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	40	0.013080	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.007359	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	40	40.147818	48022	8216
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0.007386	1	1	0	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.168387	289	74	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.012549	2	2	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.011774	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_impl_subrelation	40	0.010815	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.009779	3	3	0.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	40.056865	10393	4117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.152536	9379	2560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.011330	2	2	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40	40.142685	51787	4232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40	40.162012	16568	4300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.170870	33583	5685
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.082441	12680	2316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	18.013384	9840	1985	7.0.1.0.0.0.0.12	synth with cache (only 1: intro LS'; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40	8.676733	3818	737	0.1.0.1.4.2.0.2.0.12	synth with cache (only 1: intros Hn Hm; only 1: assert (Hij : 0 <= i / j) by (apply Z_div_pos; auto with zarith); only 1: case (Z_mod_lt i j); only 1: auto with zarith; only 1: rewrite (Z_div_mod_eq i j); only 1: intros; only 1: apply Zdiv_lt_upper_bound; only 1: Z.order'; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.102644	37860	1478
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	40.323215	25824	1843
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	40	40.710915	20070	4749
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.058585	8186	1717
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40	40.197027	13007	2509
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.054417	15729	2546
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.358064	12747	2692
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.019961	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.086199	29	13	0.1.0.3	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	40.128615	44584	5401
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40	40.133035	9228	1908
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40	40.098519	15406	3264
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.301464	55	22	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.661858	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.324661	15067	3607
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40	40.075649	17057	7369
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_not_In	40	40.271758	13911	2935
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_nil	40	0.012625	4	2	2.0	synth with cache (only 1: simpl; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	2.474203	999	305	0.0.0.0.1.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.068836	17810	4895
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40	40.036202	8594	1998
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40	40.109360	30294	10437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	40.045838	11295	2246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40	40.119494	43319	2055
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_INR	40	40.063105	17072	4741
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40	40.098100	21248	4533
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	40.526764	86534	4520
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifP	40	40.166218	13251	355
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.069393	18131	4123
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.467770	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.014908	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifF	40	0.006817	1	1	0	synth with cache (only 1: by move ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifN	40	0.013078	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.161626	58612	4621
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_1	40	40.097719	33184	5133
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_same	40	0.007798	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_neg	40	0.007092	3	1	2	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.007826	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.007358	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifE	40	0.099761	50	5	11	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40	40.134567	13400	1392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.089709	8170	2244
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	40	40.266865	19812	4129
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40	40.046724	10599	2862
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	40.066021	15491	6128
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.008883	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_symmetric	40	0.006691	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_transitive	40	0.012416	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.049724	8501	1955
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	40	40.064372	16664	4029
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40	40.083573	24575	5749
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	23.759795	11559	2809	0.0.0.5.0.1.0.11.1	synth with cache (only 1: intros n m H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intuition order; only 1: intros k H1 H2; only 1: nzsimpl; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40	40.094065	18009	5331
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.095979	30954	3386
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40	40.102090	21129	3988
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.236260	16102	5657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40	40.080979	28331	2546
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40	40.070566	17939	2896
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.108143	27072	10524
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.171423	66	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.509288	5995	1164
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.176794	22706	5266
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	40.064212	13367	3318
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_reflexive	40	0.018573	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.008925	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_transitive	40	0.105501	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_equivalence	40	0.270026	13	4	7	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	40.026010	6280	1728
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0.006180	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0.009482	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0.006054	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_2	40	40.100296	32878	5057
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.408200	28445	4490
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.trans	40	40.157399	53050	4036
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	5.373587	1336	519	7.1.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: unfold flip in *; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.061060	7321	402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.147278	14084	1997
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	3.185055	2131	343	1.3.1.4.5.7	synth with cache (only 1: split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0.005711	3	1	2	synth with cache (only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0.016315	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.021482	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40	40.202500	7919	1552
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0.012500	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.025380	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	40	40.079598	25430	1811
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.008960	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0.062468	15	5	3.2	synth with cache (only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.020950	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0.008044	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40	40.224259	12442	3140
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.018043	2	2	0.0	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40	40.132121	18615	6935
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0.014859	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.054272	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.140953	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	1.075675	1064	133	0.6.16	synth with cache (only 1: intros y1 y2 Hy1 Hy2; only 1: apply L.find_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40	40.042661	10607	2475
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_equivalence	40	17.770183	2325	268	0.0.28.0.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros x; only 1: intros; only 1: now transitivity y).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	0.798699	891	84	19.2	synth with cache (only 1: intro X; only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.011642	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.067563	30	6	0.7	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0.010954	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0.011943	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40	40.020495	4447	1818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40	40.616197	11862	2182
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40	40.313282	15061	1939
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.151231	14	7	3.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.046948	8	6	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	40	40.720761	40224	2821
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	4.645406	2746	345	22.7	synth with cache (only 1: intros a b; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.012622	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0.025839	5	2	0.3	synth with cache (only 1: intros y H'1; only 1: auto  7 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.100337	7585	1632
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40	40.229024	9705	3301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40	40.061230	16404	3946
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	40	40.514930	12860	2950
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.026007	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40	40.055443	19798	1690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.098522	5582	2106
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	40	5.394580	2456	609	0.0.1.0.0.1.0.2.0.1.0.0.0.0.3.3.4.0.1	synth with cache (only 1: destruct b as [| b| b]; only 1: reflexivity; only 1: unfold rem; only 1: simpl; only 1: destruct a as [| a| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: induction a; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.914920	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	3.256832	846	407	0.0.0.0.0.0.0.1.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.mem x s); only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: case (M.union s s'); only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	5.017460	992	395	0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	40	40.344776	30224	4735
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40	40.087395	24267	2555
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.083290	25049	4830
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40	40.049450	8238	3111
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.504792	225	70	5.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.068466	20	15	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.uint_dec	40	40.755418	355818	8601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40	40.062282	16075	4316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	40.043227	9312	1848
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.158966	57753	5721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_revapp	40	1.067628	8883	126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.158582	355	137	0.0.1.3.2.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40	40.161301	57385	2400
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	40	40.089898	27927	4495
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l	40	8.495705	2475	1212	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40	40.178424	10474	2298
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40	40.413253	74575	3455
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40	40.071550	22092	3245
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	40	40.069139	19200	5311
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40	40.106886	38750	2435
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	40	40.192448	15315	536
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introTF	40	0.012815	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.012588	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	40	0.007296	1	1	0	synth with cache (only 1: by move <-; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40	40.072979	11843	5609
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40	40.043554	10673	2416
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.981586	516	307	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.049874	9732	3981
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_spec	40	40.237139	20951	4036
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.034759	17	5	0.2	synth with cache (only 1: inversion 1; only 1: now apply pred_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40	40.059253	8568	2440
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40	40.070057	18613	4286
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40	40.154971	55377	4499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.059591	14728	3490
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.072711	12103	2752
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.unitE	40	0.282311	754	67	3.9.20	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0.005647	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.059756	63	8	0.11	synth with cache (only 1: intros; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40	40.074095	19416	6879
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	1.916579	1338	272	7.0.0.0.5.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40	40.096763	12581	3879
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrsetoid.compat_Reflexive	40	0.007679	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r	40	7.783390	3266	1027	0.0.1.0.0.1.0.0.0.1.0.0.2.0.0.0.0.0.0.3	synth with cache (only 1: intuition; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_comm	40	40.315679	17371	5597
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40	40.063923	19252	3527
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40	40.235655	89174	7133
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.092333	34448	4244
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_l	40	40.485138	6603	1486
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.669445	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	40.027440	6685	1605
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_1	40	40.738480	15612	2524
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.789916	19049	3836
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.078662	12588	2227
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0.009976	1	1	0	synth with cache (only 1: eauto using eq_trans, eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	40	40.057472	13518	2006
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.032715	6017	1236
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0.010068	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40	40.135175	8436	2749
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.538744	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40	40.152731	16071	3292
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0.311492	158	77	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.238597	32979	3986
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40	40.111049	6628	697
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	40.106323	18764	5683
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40	40.141291	52032	3146
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0.182955	114	15	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0.845647	71	7	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40	40.075965	22031	4343
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0.205856	49	26	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	1.575987	205	179	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40	40.131824	50982	1175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40	40.235856	7434	703
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	1.492483	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.310589	8690	2336
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40	40.089698	31106	1358
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.186672	12967	3081
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40	40.075442	20462	4717
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	4.021670	435	403	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40	40.161121	6535	1934
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.135578	46035	5168
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	1.259565	324	108	6.2.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40	40.030220	7635	1759
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.606988	65479	2734
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	15.608647	5089	4447	4.3.2	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_spec	40	40.533445	42719	4314
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.301559	126109	3644
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.025377	6	3	1.0.2	synth with cache (only 1: red; only 1: compute; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.130546	95	29	4.6	synth with cache (only 1: repeat red; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_eq	40	40.428518	33458	4194
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_neq	40	0.026821	3	3	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40	40.054208	14294	3017
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	12.366479	6843	1018	1.0.1.1.2.25	synth with cache (only 1: induction 1; only 1: intros H; only 1: eauto; only 1: intros; only 1: constructor; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.103842	20788	4603
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	40	40.092710	33258	3198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_rev	40	40.120468	49617	2812
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.061377	16662	3686
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.017765	2	2	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.042567	6	4	0.2.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	25.246712	10819	1529	30.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx y y' Hy Hr; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	10.827550	1272	895	4.4.9	synth with cache (only 1: assert (R x0 x0); only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_le	40	40.094716	30258	4601
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	35.452757	154467	4997	4.48.80.13	synth with cache (only 1: intros; only 1: intro z; only 1: rewrite -> H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0.006970	4	2	2.0	synth with cache (only 1: intros H ?; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	40.110596	7477	4973
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	1.280403	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	40.215450	64150	3114
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	7.329124	2566	2235	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.048750	13426	2658
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.095925	19016	1557
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.335037	22495	814
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40	40.162561	11992	2708
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	3.895436	601	209	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40	40.091954	31887	3910
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	40.163512	64733	1690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	0.319238	52	24	1.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.025625	3	3	0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.095563	5	4	0.1.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40	40.056944	15495	4061
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.078687	24917	6020
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	40	40.173631	21469	4337
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.038076	7930	2802
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40	40.061648	14771	5023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40	40.100681	14049	5550
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40	3.553952	22127	203
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	40	3.011561	1231	81	0.0.38	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	40	40.077950	20753	6929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.142111	13010	4450
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40	40.132207	45423	5849
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos	40	40.360003	25874	4657
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.298044	14378	3939
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	13.651988	11883	1869	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.009717	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40	40.106907	22063	4068
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	40	40.315147	28289	6045
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	40	40.456922	14457	3882
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	40.025954	6365	1627
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	26.732687	7962	2136	10.8.4.0	synth with cache (only 1: unfold lcm; only 1: intros n m; only 1: rewrite <- gcd_div_swap; only 1: apply abs_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.521021	43345	5796
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_min	40	40.128415	22847	4201
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.114173	29124	9213
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.025774	3849	1736
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	12.821772	5756	1545	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40	40.147913	9495	2822
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40	40.201710	12616	2618
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.005230	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40	40.214570	20294	4347
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40	40.145831	21007	5256
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40	40.054960	6195	795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	2.973122	1301	449	0.2.0.0.0.1.0.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40	40.068166	18615	4162
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40	40.051625	14981	1571
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40	40.077829	10871	1811
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.097561	31977	4702
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40	40.066406	17254	3365
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	28.326334	7671	6779	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	10.355854	4939	1435	1.0.0.0.3.8.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	2.238838	1308	520	1.1.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.527185	228	120	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.020673	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.022192	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40	40.109464	36663	3455
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40	40.138767	21176	2946
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.064941	16727	4798
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	40	40.197517	24430	3979
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0.010712	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.469115	14162	4426
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_neg	40	0.011309	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	6.254481	2215	1601	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	40.047519	10031	3404
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.307568	27388	5176
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.745841	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	40	40.165487	11123	2477
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40	40.104176	24018	4745
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40	40.104621	33083	4179
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	40	40.058606	14410	5753
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40	40.087150	24169	2273
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	40	40.037882	7994	1938
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZN	40	0.428963	208	35	0.1.0.9	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40	40.135454	12579	2866
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.346695	141247	4416
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	40.079922	7941	7225
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40	40.043236	11423	2439
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0.031895	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40	40.435924	3893	1331
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0.257600	63	6	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.020510	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.115923	13269	2210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.080868	22623	6928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	40.071647	15769	3058
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.101203	27777	3802
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40	40.059416	13080	4237
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	13.776985	6296	2539	0.0.0.1.1.1.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	40.192266	27292	4361
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40	40.063947	18867	2955
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_1	40	40.127972	49663	4325
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.010406	2	2	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	3.839145	1550	364	7.0.3.4.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.099831	19323	5460
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.085290	23221	4864
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.785187	1086	303	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.045954	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.206623	15765	609
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	3.254325	1678	814	0.0.0.1.0.0.0.0.0.2	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intro T; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 H'0; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	2.737098	977	271	6.0.0.1.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.subset_eq	40	40.172101	62126	8947
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.103637	10037	3834
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.092252	13	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40	40.099121	29459	7715
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40	40.800871	36440	2602
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	40	40.386628	18917	5004
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	40	3.301404	6916	690	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.119930	42033	4892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40	40.078253	22749	3179
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	40	40.203974	33171	5790
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	2.990360	752	507	0.0.6.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_r	40	40.079479	11303	2021
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.089295	8	5	1.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	0.061081	3	2	1.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.019042	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	3.395789	8025	908	2.27.3	synth with cache (only 1: red; only 1: compute; only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_equivalence	40	40.205951	76837	11534
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	3.650157	1513	334	0.0.15.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_eq	40	0.711624	606	196	0.2.0.0.5.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40	40.182761	15764	3909
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.020623	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.492499	35805	5377
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_max	40	40.452546	29148	5238
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0.009017	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.018188	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	40.090086	21928	5604
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.205026	71	33	0.2.0.1.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.027332	5	3	0.2.0	synth with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	4.828245	26764	798	2.2.0.2.35.57	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40	40.073900	13634	5741
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.153978	53	14	0.0.0.8	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.098696	11785	2160
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0.006788	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.451777	196196	9860
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0.006345	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	0.013522	6	4	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	40.277004	23781	3761
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.210592	194	57	2.2.0.2.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: apply H; only 1: red in H0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	0.027076	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.023938	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0.041383	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	40.132420	46198	4464
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.039762	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.005345	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0.006865	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	40.063989	16954	4563
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40	40.060426	13182	6029
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	4.028303	2071	498	1.0.0.0.1.0.0.1.0.0.0.0.1.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id	40	0.018509	6	4	1.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.004517	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0.007671	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.007161	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	1.557255	9842	133
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.006453	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	40	0.534586	576	108	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.006130	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.650076	694	102	1.16.0.1.0	synth with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: trivial; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.317095	267	50	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	40	0.164378	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_right	40	0.012210	5	3	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.deletion	40	0.008695	4	2	1.1	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_heq	40	0.123521	151	32	0.2.4.2	synth with cache (only 1: intros H H'; only 1: subst; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT2	40	0.143132	103	25	0.0.0.5.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40	40.055038	17184	1703
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	31.296475	33109	2651	2.5.20.23	synth with cache (only 1: intros a b c0; only 1: intros l H; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40	40.911244	10159	1742
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	40	11.683231	8124	1251	0.6.7.7.2.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: induction (Rwf x); only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	6.063720	933	387	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.050098	12137	3741
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40	40.131420	17885	6242
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40	40.072211	21901	3172
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.191480	17491	2218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40	40.086103	27221	3379
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.018096	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.503367	23196	4528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.061328	16481	3052
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_unit	40	40.182695	23672	5768
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	40.065932	10481	9544
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.033174	13	6	4.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.014513	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.014731	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40	40.235797	32473	4292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40	40.075678	18703	4605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	40	40.094897	26627	9267
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.290022	120082	8498
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.055150	15887	2320
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	40	40.082346	26168	3584
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	40	40.670215	298031	3069
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag2	40	0.017225	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40	40.040199	10516	2425
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.svalP	40	0.004152	3	1	2	synth with cache (only 1: apply proj2_sig).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.092126	2886	536
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.011984	7	2	0.5	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.037921	4	3	0.0.1	synth with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.012587	3	2	1.0	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.106688	10840	1663
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	40	0.004727	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.043176	14	5	3	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	40.079031	20830	7409
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.007275	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.005271	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.058722	18435	3525
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	40	0.043666	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.093293	13265	3558
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP	40	1.814611	11448	144
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0.032535	12	2	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP'	40	0.006287	1	1	0	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	40	0.011449	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	40	0.006391	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	40	0.018676	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	13.252551	4558	2076	0.0.0.0.0.0.0.0.0.0.0.0.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: trivial; only 1: right; only 1: split; only 1: intuition; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_2	40	40.066827	19046	3594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40	40.074850	23232	3016
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.257763	22224	3936
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.099775	108	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40	40.101537	8107	2696
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40	40.101387	16785	3055
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.077334	22511	5592
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	40.153945	59570	1309
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	40	40.081903	21299	9217
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.173698	29779	1439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40	40.064595	18153	2931
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.master_key	40	0.004786	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_double	40	2.303034	1044	181	0.2.0.0.3.10.2	synth with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now nzsimpl; only 1: simpl; only 1: nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.108687	32	17	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_pcan	40	4.289028	13884	745	2.31.36	synth with cache (only 1: intros Hfst Hsnd; only 1: rewrite -> Hfst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40	40.124605	16674	4485
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40	40.125128	39567	6735
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.524523	14607	2221
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.320068	16983	5332
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	40	40.266274	14004	2440
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40	40.108736	38445	3038
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.544456	8304	2230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.071590	19144	4957
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	11.027133	4021	1483	0.0.0.2.0.0.0.0.0.12	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.110609	27	20	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.420030	44	29	2.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.119533	15779	4504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.171748	39	25	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_2	40	40.265981	16291	5594
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	40	40.307509	120922	7819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40	40.121896	18215	2768
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40	40.157756	54663	8292
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.007989	2	2	0.0	synth with cache (only 1: red; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40	40.043162	8171	3026
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.154430	33916	4697
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	40.164413	66509	2113
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.434449	24975	3634
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40	40.070059	4406	555
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.017833	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.047992	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT1	40	40.098896	163423	4987	0.13.3.58.11.22	synth with cache (only 1: intro Streicher_K; only 1: intro H; only 1: apply Streicher_K; only 1: dependent rewrite H; only 1: reflexivity; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_K	40	0.014381	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	8.237704	3643	1054	0.0.0.0.8.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0.005563	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40	40.014043	3279	1235
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	40	2.561829	945	333	1.1.0.1.1.1.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	40	40.493396	8397	2116
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	28.588369	19963	2520	1.9.0.21	synth with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40	40.593679	9958	2756
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.139402	51769	2350
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.046591	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.034053	8897	1781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40	40.123476	5305	1473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.075753	10166	2049
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.093397	27533	2986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.215510	32067	4692
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	9.304972	1556	257	0.0.3.1.0.1.2.2.8	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.059221	7	6	0.1.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.252174	44602	3086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40	40.059273	7061	2032
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_involutive	40	40.237038	39119	5231
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	40.031417	6035	1818
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.005802	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.010222	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip1	40	0.016348	5	4	0.0.1.0	synth with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip2	40	0.004871	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.019336	7	4	0.0.1.2	synth with cache (only 1: hnf; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0.003518	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0.006726	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	40	0.712990	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0.023061	7	1	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.flip_atom	40	0.006391	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.083558	21526	7034
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	19.167404	20692	2520	19.2.8.1.8.1.8.0.5.6	synth with cache (only 1: split; only 1: now try order'; only 1: intros a; only 1: revert a; only 1: intros; only 1: firstorder; only 1: intros a; only 1: intros n m; only 1: intros H H1 H2; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	40.079629	17921	9509
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.052149	14291	2568
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IZR_INZ	40	40.058346	14638	3377
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_rev	40	40.049681	11906	3722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.048886	13481	2912
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40	40.087234	6994	2238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.099728	29086	6419
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.049323	12728	3907
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40	40.099441	13133	4457
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.flip_arrow	40	40.115423	7805	1617
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip	40	0.089286	4	2	0.2	synth with cache (only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_refl	40	40.183997	76589	3479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.058621	6601	3752
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.101503	9680	2747
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.031449	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40	40.105453	17181	3085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.284451	70	32	0.2.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.041007	7	6	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.104865	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.060439	16805	4853
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.065512	18171	6185
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40	40.277217	23532	786
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.064521	14832	2687
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	40	40.469128	212546	7854
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.030071	12	3	0.3	synth with cache (only 1: unlock; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.le_div2	40	40.274790	33734	4378
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	40	3.798307	423	101	3.7.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.127839	20870	3982
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.336464	137169	6834
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.010041	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.150472	49968	7724
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.505353	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canRL	40	0.096018	95	21	7.3	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	40	0.006833	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Some_inj	40	0.479113	556	79	0.0.19	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.of_voidK	40	0.044600	50	7	0.10	synth with cache (only 1: intro H; only 1: destruct H).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.esymK	40	0.515553	1177	98	0.10.16.0	synth with cache (only 1: red; only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.etrans_id	40	0.070037	125	12	0.15	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.083300	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_l	40	40.293251	15749	4387
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	40	40.692424	25666	5110
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock	40	3.423682	24859	311
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	40	40.460270	6560	1704
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40	40.117412	35985	4599
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	3.928174	8885	374	7.48.24	synth with cache (only 1: intros Hfst Hsnd; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.568665	12753	1433
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40	40.153156	18296	3782
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40	40.140616	13845	4886
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	3.826436	8287	380	3.29.52	synth with cache (only 1: intro; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40	40.846743	410468	8550
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	40	40.161748	61336	7498
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40	40.085476	24624	6595
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	40	40.080775	16851	6918
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	6.098803	4417	837	0.0.11.5.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: induction n; only 1: trivial; only 1: f_equal; only 1: simpl; only 1: rewrite <- IHn; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40	40.199735	17696	3409
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	40.178782	75166	1365
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.123066	42359	2360
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0.011947	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0.015706	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.184927	9	4	1.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.016264	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40	40.078337	21759	4152
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.097189	190	30	0.16	synth with cache (only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.348469	142193	7828
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.006624	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.007908	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	0.023962	22	5	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.022327	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0.023164	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.034627	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0.042011	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.005200	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0.005437	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.066269	159	20	5.11	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	40	0.006268	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Transitive	40	0.008683	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.733932	21063	2606
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40	40.171820	62629	6946
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	40.568786	7365	1785
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40	40.338087	6703	780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	22.114288	4463	2381	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.148014	29	20	0.0.0.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.344527	136548	7997
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.025824	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40	40.061944	17098	4067
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40	40.082408	13481	3088
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	1.882323	1321	202	0.7.2.3.9	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.390849	275	44	13.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	11.117067	6932	599	0.1.0.1.2.1.0.0.0.5.25.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: ok; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.077971	24235	4265
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40	40.045842	10369	3950
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.238804	33768	5923
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	35.908259	16906	3368	1.0.1.6.1.22	synth with cache (only 1: intros n m p q; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: f_equiv; only 1: f_equiv; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	2.391030	870	168	2.0.2.1.2.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: destruct t as [| [| ] l x r]; only 1: invrb; only 1: invrb; only 1: auto; only 1: invrb).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40	40.337777	5437	1062
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_l	40	40.527392	31073	1989
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.091018	7413	1556
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.in_rev	40	40.181699	23315	5532
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.flip_arrow	40	40.033573	4495	966
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.079417	21219	5894
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip	40	0.028302	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40	40.080530	28527	1094
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_r	40	2.869202	863	298	1.0.2.3.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (EQ, EQ'); only 1: exists bb; only 1: simpl; only 1: now rewrite Pos.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip_2	40	0.822601	252	64	3.1.6	synth with cache (only 1: compute; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40	40.101359	33903	3857
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	0.017097	7	2	3.2	synth with cache (only 1: apply max_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	40	40.053192	13113	1881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	40	40.063357	17544	3343
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_length	40	4.150922	2342	455	2.3.1.10.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct IHl as [l' (a', H)]; only 1: rewrite app_length; only 1: simpl; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	40.038028	9831	2128
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40	40.114102	5741	1954
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40	40.059562	18249	1571
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40	40.098721	35151	4594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40	40.043787	10511	3619
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	17.670712	2099	790	0.3.0.2.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: intros; only 1: generalize (Hiff (compat_P_aux H)); only 1: rewrite H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	38.001987	16268	2898	4.17.7	synth with cache (only 1: intros n m Hn; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.093295	31521	4706
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40	40.037480	9758	2219
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	40	6.010598	1726	400	0.2.2.9.1	synth with cache (only 1: intros; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40	40.082272	14141	4406
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40	40.077397	18960	8420
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	40	40.073542	17514	8547
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.386130	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	40.147860	29758	1306
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	13.610651	3294	1127	0.0.0.5.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_div2	40	40.180214	20837	5124
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	40	40.082142	12427	2173
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.052059	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40	40.150199	50649	7785
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_left	40	40.213930	81093	9489
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	40	0.016011	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_refl	40	0.005694	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.315397	18367	5141
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	40	40.435478	184501	7762
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock_with	40	0.006923	2	1	1	synth with cache (only 1: by case : k ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40	40.777776	30376	1999
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	16.433831	10399	868	1.40.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: inversion H; only 1: invrb).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	40	2.772175	2462	495	1.0.3.2.8.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: simpl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_sym	40	0.014420	4	3	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.013803	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.096466	28945	3667
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.576208	15848	2218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.232122	8113	3020
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	9.977551	5873	1159	1.1.0.1.0.0.0.4.2.1.2.3	synth with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40	40.217307	11218	3768
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_right	40	4.845654	4697	1015	17.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.260777	102819	5175
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40	40.304580	116997	11838
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.125272	44789	6864
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.037969	6943	2817
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.007389	5	2	1.2	synth with cache (only 1: intros U R H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0.005099	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.276119	21430	4948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.139026	11541	2673
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.106053	38883	2938
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	7.509973	1426	414	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.025311	8	4	0.1.3.0	synth with cache (only 1: intro H; only 1: intro EQ; only 1: contradict ltac:(H); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0.017512	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0.016487	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0.136633	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.009449	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0.008506	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.009843	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0.019544	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.022174	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.009448	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0.009532	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0.008196	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.007611	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.011888	2	2	0.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.006325	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.006532	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.006448	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0.007250	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	4.378084	10820	591	2.19.52	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40	40.083420	26196	3864
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40	40.214798	82354	8024
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40	40.137144	46169	5565
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0.009152	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.017997	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.060206	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	40	40.420126	35175	4124
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40	40.118600	35188	8327
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	2.242964	2585	482	0.0.4.17	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.018165	8	4	2.0.1.1	synth with cache (only 1: red; only 1: intros y H2; only 1: apply Acc_intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40	40.506332	25803	1740
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	22.235208	8175	1203	4.4.4.12.2	synth with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	40.119087	18150	3473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40	40.118125	39039	5231
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40	40.055155	11094	3082
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	7.581528	2626	861	2.2.0.1.0.1.0.1.0.4.3	synth with cache (only 1: split; only 1: intro EQ; only 1: intuition; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_comm	40	13.508172	11213	2747	12.5.2.2	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	40	40.085677	28243	3843
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_ass	40	0.693015	230	131	1.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_left	40	1.525449	516	280	1.0.3.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_right	40	0.433014	119	83	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40	40.105335	20047	3790
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40	30.714473	14289	3142	1.3.0.3.13.1	synth with cache (only 1: intros n m p q H1 H2; only 1: rewrite mul_comm; only 1: apply (mul_lt_mono_pos_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: order'; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40	40.210733	18617	6778
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.167877	38774	2793
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iftrue_inv	40	0.493960	827	106	1.0.1.14	synth with cache (only 1: intro H; only 1: destruct 1; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iffalse_inv	40	0.021685	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40	40.461153	9466	1070
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.042871	9522	2884
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.995202	392	97	1.0.3.1.1.3	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40	40.085773	22081	5069
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40	40.081381	22141	7273
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_greatest	40	40.330205	23137	4468
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_nonneg	40	0.113920	44	17	1	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.051302	12552	3531
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_0	40	0.323406	483	36	2.2.24	synth with cache (only 1: induction a; only 1: split; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_0	40	0.007316	1	1	0	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR	40	40.038386	11351	1780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	40	40.068977	17778	5852
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_nth	40	40.175147	22521	4313
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.106948	29646	6843
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	8.678511	4375	1007	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40	40.085536	29134	1432
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	24.488352	3520	1342	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40	40.061295	13608	3708
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40	40.072000	23246	2840
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.067330	16098	3764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40	40.056336	12808	2556
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.132817	48943	4118
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40	40.237668	19094	1643
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.050147	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_true	40	9.935704	24594	2062	1.34.17	synth with cache (only 1: intro p; only 1: inversion 1; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	40	0.036437	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	40	0.025074	13	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40	40.104632	16739	3330
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40	40.105652	30908	7549
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.146565	30095	867
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.051443	13149	3377
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	40	6.576653	3290	1494	7.3.1.0	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?IHd).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_decr	40	40.208367	40352	5719
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.double_twice	40	0.027638	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.061236	20	8	1.0.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	4.484285	3562	467	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	40.109875	6681	1210
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.062949	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40	40.052669	12633	4728
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.313755	30067	3871
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	40	40.140783	46897	6980
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.086980	189	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	40	0.006616	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	40	0.005106	1	1	0	synth with cache (only 1: by case : eqPQ ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_sum	40	6.121827	6285	1326	0.0.5.3.0.0.5.3.2	synth with cache (only 1: intros A B []; only 1: intros; only 1: left; only 1: inversion H; only 1: assumption; only 1: intros; only 1: right; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	40	0.017896	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0.006465	1	1	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40	40.046749	8698	2280
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.071206	37	9	2.4.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	40	40.807730	24623	4478
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.727976	219	86	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	9.806837	7547	1714	1.2.1.0.0.0.5.12.0	synth with cache (only 1: intro X; only 1: split; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_l	40	40.053072	12790	3841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.216030	14461	3491
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40	40.121171	38554	6926
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40	40.075568	7681	4510
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	28.390952	16242	2594	0.0.28.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.393990	158	55	1.0.0.0.0.2	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.161421	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	10.016909	2410	771	0.0.0.1.0.6.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.143960	44399	9439
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.018143	4	4	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.240014	92701	10579
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.441590	48616	4801
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	40.055925	19957	1845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.099698	15495	2767
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	6.433687	5666	519	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40	40.295724	115144	4263
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	2.798198	967	444	5.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.286626	93	49	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.147198	55	21	0.1.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.034244	7	6	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40	40.071446	22615	2888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.033079	8	6	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	40	13.170165	109879	1422	1.109.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40	40.146991	48269	8212
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.271000	107239	6780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	28.977594	11306	3892	0.0.4.1.5.0.1.5.0	synth with cache (only 1: intros a b Ha Hb; only 1: intuition; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: exfalso; only 1: order; only 1: apply mod_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	40	40.722801	26043	1561
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40	40.085969	11877	2060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40	40.041217	8594	1005
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_proper	40	40.089029	2361	651
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40	40.063375	16740	4236
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40	40.038737	10417	1771
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	9.829039	14988	2955	1.0.0.0.0.0.21.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	40.295179	121788	6315
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40	40.108671	36787	4135
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_sym	40	0.532082	1350	116	0.12.16	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_trans	40	0.013373	8	3	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_rotate	40	40.081436	19887	6777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40	40.179625	13478	2732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40	40.102346	21987	4567
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40	40.238801	39787	4143
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.074359	10500	2477
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40	40.084437	19460	7621
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	40.055428	12810	4704
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.448263	196	67	1.2.1.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.014344	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	40	40.451413	15403	3450
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	40	40.072530	22245	2474
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_append_rev	40	40.092480	28425	5610
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.103988	27296	8378
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	40.104964	25537	3982
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40	40.082539	25583	3886
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40	40.078177	24401	3992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40	40.043580	10153	2326
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.037359	4	3	0.1.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.088489	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40	40.103421	14084	2455
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.106320	37332	5020
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.291175	14618	1819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40	40.086310	12060	3291
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Newman	40	40.063779	17540	6293
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	6.075470	2932	637	0.0.2.0.9.8	synth with cache (only 1: destruct (lt_total n m); only 1: solve_max; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: intuition; only 1: now apply max_l; only 1: now apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0.041035	10	3	1	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introF	40	40.376248	13044	775
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.083905	22339	6913
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	40.257904	35338	3304
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	40.144006	15657	2614
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.123127	4462	1672
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.087455	24973	7024
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_succ	40	9.227401	2828	835	1.1.0.0.0.0.0.3.0.3.1	synth with cache (only 1: nzsimpl; only 1: destruct n; only 1: now destruct a; only 1: destruct a as [| a]; only 1: intros _; only 1: simpl; only 1: trivial; only 1: discriminate || intros _; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_succ	40	0.028353	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_neg_r	40	0.021927	5	1	4	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	40	40.322361	27686	4574
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40	40.156494	60128	4259
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40	40.087878	9225	2123
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	40	5.518541	26738	318
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	40.041741	9786	3309
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.019534	9	5	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.006826	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0.005971	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.096309	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.020083	5	5	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_greatest	40	40.846714	18079	4122
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.583039	18535	2209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40	40.210833	10479	2136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40	40.098298	12606	4289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.060505	11	8	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.106119	31156	7962
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40	40.062415	16801	4113
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40	40.335293	132540	7771
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.050804	16689	1734
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.099067	15022	2776
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	3.756182	1737	571	6.7.1	synth with cache (only 1: intros x y z; only 1: unfold Add; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40	40.280593	105133	5219
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	40	40.127987	50086	4888
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.024618	4	4	0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.049272	13887	2424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40	40.166183	16222	3229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.086557	71	13	0.8.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	4.671132	3974	1090	4.0.0.1.13.1.1.1.8	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.287380	145	66	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40	40.149668	51108	7577
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.021839	9	4	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40	40.107016	32192	6448
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.117643	38344	6296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40	40.055076	12826	4681
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	40	40.453366	26088	5517
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.021490	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.017536	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.414439	178191	8330
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40	40.076644	13131	1551
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	40	40.099305	4384	486
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40	40.051078	15395	2574
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40	40.130106	2550	997
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	40	40.125142	38766	10303
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.082144	16315	8497
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	5.020732	20594	835	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	40	40.433522	183055	8889
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec	40	0.010913	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect	40	0.011557	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_congr	40	40.067706	16314	6512
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40	40.150750	16545	3992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40	40.066903	18016	5555
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	40	27.567607	15380	3641	3.0.0.0.0.0.0.0.0.0.2.0.19	synth with cache (only 1: induction d; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	7.262512	17724	2105	2.4.2.4.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	0.083791	181	31	8.0.2	synth with cache (only 1: red; only 1: intros h1 h2; only 1: destruct h2).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.003620	1	1	0	synth with cache (only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	19.374781	3579	1656	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	0.661151	611	183	1.4.1.2	synth with cache (only 1: intros B C H'; only 1: intro; only 1: left; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.009450	2	2	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.661846	1282	202	0.9.4.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40	40.193829	19935	3558
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40	40.056411	10414	1950
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	40.068087	15383	8191
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_IZR	40	40.048587	12439	2557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.079848	19094	6409
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	40	40.292693	28470	5210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.077870	21809	4925
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.024750	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40	40.052784	11833	4150
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	40.144292	27477	4614
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	2.063606	2180	327	5.1.15	synth with cache (only 1: induction l; only 1: trivial; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.048396	11512	3209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40	40.104188	26567	6369
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	40.357272	11804	2537
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.085600	30141	4514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40	40.097996	10805	3909
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	40.061722	14784	3952
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introN	40	40.187683	18326	1025
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	40	40.267056	33192	2591
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40	40.105275	14135	2409
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40	40.165091	7880	2047
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_succ_r	40	40.357347	23615	3375
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.forall_hprop	40	40.317567	125028	9553
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_r	40	40.321358	19150	5641
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40	40.195428	76707	4451
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40	40.107617	5592	2985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	14.347821	6218	895	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.093285	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	40	40.144950	55517	2703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_0	40	18.161830	7976	2442	0.0.0.0.0.0.0.0.0.0.8.5	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40	40.098856	29780	5865
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	40	40.502850	19848	4251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	18.874397	3206	1052	0.0.0.6.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: trivial; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.223636	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_r	40	40.514111	14654	3902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40	40.135488	4774	1831
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40	40.039971	10306	2211
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.052713	9	6	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	40.114759	29439	4055
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40	40.198423	3465	1116
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	40.061715	15621	5043
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	40	8.388718	2549	1181	0.0.0.0.0.0.0.0.0.0.0.2.1.0.2	synth with cache (only 1: induction d; only 1: unfold unorm; only 1: rewrite <- rev_nztail_rev; only 1: simpl; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	40	40.301448	115767	4297
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40	40.240521	53187	7146
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40	40.079072	22252	4478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	40.237285	8732	2624
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.218320	80223	8962
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.123557	37476	8195
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	39.373160	111545	7142	0.11.3.8.49.0	synth with cache (only 1: intro x; only 1: apply Acc_rect; only 1: intro z; only 1: intro; only 1: split; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.046556	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40	40.092086	21163	4440
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	19.857431	3980	1859	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.377001	75	45	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.033045	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0.015563	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.034050	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.068761	12	7	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.016253	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.107101	18	11	2	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	3.514007	1037	482	1.2.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	40	40.765873	24960	4450
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.572397	970	138	2.11.6.1	synth with cache (only 1: intros; only 1: intro p; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	40	40.141569	11689	1004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.045844	11370	3407
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.057125	10165	3083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40	40.057594	13465	2476
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.084886	24600	6475
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40	40.156811	52444	6194
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_invol	40	9.106875	4477	1830	0.0.0.0.0.2.0.0.0.0.0.8	synth with cache (only 1: induction d; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_invol	40	0.010390	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40	40.200665	79968	4525
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	34.897769	120156	9447	0.2.3.1.36.1.3.8	synth with cache (only 1: red; only 1: intro; only 1: destruct 1; only 1: intro p; only 1: elim (Noone_in_empty x); only 1: red; only 1: destruct p; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	20.192282	7422	1195	0.12.14	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.435519	184493	8745
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_perm_left	40	40.078557	18834	6464
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec_r	40	0.012286	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect_r	40	0.013210	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_congr	40	0.015890	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.018720	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.009691	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_JMeq	40	0.010070	2	2	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40	40.201548	17681	5219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40	40.282075	23414	3967
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	23.006494	26874	1134	57.23.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40	40.207968	10766	2399
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.242693	90791	8296
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	7.061109	75740	763
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep	40	0.292966	194	44	1.0.3.2.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	40	40.051331	13331	3279
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.006087	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	40	0.005066	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel	40	0.004145	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0.004805	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0.003589	1	1	0	synth with cache (only 1: now unfold Over_rel).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40	40.073939	19160	6151
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_left	40	0.006748	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_right	40	0.007430	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	40	0.017430	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	40.058990	15392	4148
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	40	0.006114	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_uncurry_curry	40	0.010267	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.020593	8	3	5.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.021125	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.020884	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.018565	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.020660	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0.025246	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.031372	16	4	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.085155	21	13	1.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: now transitivity y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.051450	10001	3516
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40	40.074099	17300	5308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.047093	9814	2047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.074560	12	5	0.2.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.460674	53248	4449
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_nil	40	0.006761	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_cons	40	0.046458	8	7	0.0.0.0.0.1.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intro y; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.175069	10884	1947
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	40	40.367923	6877	1451
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.compare	40	40.181961	74583	5572
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.101264	10939	2396
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introNf	40	40.343251	14652	752
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	14.317448	4338	1102	0.5.13.0	synth with cache (only 1: intros n m p; only 1: revert n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	40.250507	23896	3733
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40	40.097344	28800	3662
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	6.912774	1449	503	2.4.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.013703	6	3	0.3.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	40	40.253983	16400	1585
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_succ_r	40	40.188556	20439	1754
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	40	40.293901	110811	9119
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.impl_hprop	40	0.014196	4	4	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.false_hprop	40	0.007011	2	2	0.0	synth with cache (only 1: intros p q; only 1: destruct p, q).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	40	0.010757	4	3	0.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	40	0.017701	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_l	40	40.325795	22044	6558
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.223238	39	22	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.223552	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.354890	129908	3649
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.041150	12780	1511
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.110051	32815	5218
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_opp	40	40.997841	26434	3085
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	3.046446	1462	433	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.144101	23575	3936
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.026366	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xO	40	0.050791	25	7	1.5.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.076028	14094	2442
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.020521	4	4	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40	40.124146	9679	1729
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.794808	478	232	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.101288	6865	2241
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.035174	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.033621	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.032255	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.040337	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not_not	40	3.189048	9008	1068	7.4.0.0.0.13.0	synth with cache (only 1: intro A; only 1: intro H1; only 1: unfold not; only 1: intro H; only 1: elim H1; only 1: trivial; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	40	0.011497	11	4	1.1.0	synth with cache (only 1: unfold decidable; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_False	40	0.004800	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_or	40	0.951526	1384	326	1.0.17	synth with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_and	40	0.023273	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not	40	0.011570	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_imp	40	0.017998	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_iff	40	0.026982	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not	40	0.007747	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or	40	0.008880	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and	40	0.019243	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp	40	0.019699	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_simp	40	0.013803	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_iff	40	0.043385	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	9.403739	4243	1186	1.2.4.9	synth with cache (only 1: intros z Base Step; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_true_iff	40	0.025397	38	9	8	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_false_iff	40	0.003952	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not_iff	40	0.012442	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.contrapositive	40	0.015145	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_1	40	0.018284	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_2	40	0.017693	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_1	40	0.017241	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.270923	88	41	0.0.5.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_2	40	0.018851	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_not_l	40	0.019918	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or_iff	40	0.024374	16	5	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and_iff	40	0.008914	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_iff	40	0.062192	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.025796	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.065924	17960	2769
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	40.074487	20838	5506
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	3.714020	1459	504	0.0.0.1.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.115471	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40	40.184664	6026	1928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	4.094656	1288	657	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40	40.275849	103412	3718
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40	40.069884	10806	1630
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.378223	23220	2734
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40	40.216544	79994	9277
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	4.105106	1677	360	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.073718	15049	3225
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.bool_dec	40	40.285751	111999	8942
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_true_false	40	0.005670	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_false_true	40	0.005130	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40	40.059982	15578	2835
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.031648	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.060984	4	3	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40	40.262723	16021	4834
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	40	40.252633	93685	10257
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.039028	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.081065	18	16	2.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	40	40.398761	23037	3934
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.080367	105	30	2.0.1.2.2	synth with cache (only 1: intro A; only 1: split; only 1: intros H'0 H'1; only 1: auto; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.opp_IZR	40	26.984876	23502	1593	1.0.0.0.1.15.23.4.4	synth with cache (only 1: intro; only 1: unfold IZR; only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	40	40.093116	18709	2546
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.469704	3412	453	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_is_false	40	0.093134	135	22	2.7.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	40	0.012871	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_iff_false	40	0.495143	330	108	0.0.0.5.4	synth with cache (only 1: intro A; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	40	0.019435	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40	40.073619	20534	3536
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40	40.051470	16921	1359
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.475192	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40	40.064099	12516	3449
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.099917	28721	9333
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40	40.174620	59817	9499
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.tl_nth_tl	40	0.871054	656	192	1.0.0.10	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	40	1.584429	1167	371	2.0.2.1.1.1.1.0.2	synth with cache (only 1: destr_bool; only 1: split; only 1: destruct 1; only 1: intuition; only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_subst	40	0.022055	11	4	0.3.1	synth with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_reflx	40	0.006837	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	40	0.008024	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_true_iff	40	0.024355	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_false_iff	40	0.030852	6	5	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_orb	40	0.031245	18	7	0.0.1.0.2	synth with cache (only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_andb	40	0.007913	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive	40	0.007319	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	39.139115	84922	10449	0.21.3.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive_reverse	40	0.007240	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	40	0.008308	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.007280	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb1	40	0.006107	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb2	40	0.005974	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.if_negb	40	0.005810	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	40	0.013954	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_false_iff	40	0.013674	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_iff	40	0.031840	8	5	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.067051	16056	6800
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_iff	40	0.036589	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_elim	40	0.026981	5	4	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.164023	63737	3829
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop	40	0.041537	12	8	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_intro	40	0.084505	40	21	1.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	40	0.024803	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_elim	40	0.079548	36	20	0.0.3.1	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_diag	40	0.006876	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	40	0.006448	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.667313	546	171	0.2.3.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	40	0.005978	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_r	40	0.006175	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.014897	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_l	40	0.006011	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.012491	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_negb_r	40	0.005903	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_comm	40	0.008708	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_assoc	40	0.012588	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_iff	40	0.030487	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_iff	40	0.031544	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.204983	141	39	0.0.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	40	0.056155	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro1	40	0.030950	9	8	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro2	40	0.012695	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_r	40	0.005316	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_l	40	0.005705	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	40	0.005637	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_r	40	0.006104	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_l	40	0.006083	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	40	0.027941	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_negb_r	40	0.005732	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_comm	40	0.007398	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_assoc	40	0.012875	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.009908	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.010767	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_r	40	0.011646	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_l	40	0.010793	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_andb	40	0.007968	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_orb	40	0.007467	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	40	0.007381	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	40	0.007161	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_r	40	0.006308	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	40	0.005407	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_nilpotent	40	0.005317	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_comm	40	0.007366	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.010836	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	40	0.108291	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_1	40	0.023965	10	3	5.0	synth with cache (only 1: intros; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_2	40	0.013446	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.013364	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.014056	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_l	40	0.007858	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_r	40	0.022422	5	5	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_negb_negb	40	0.007640	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.038041	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_iff_eq	40	0.129387	66	27	2.2.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.011325	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_not_negb	40	0.010442	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.016603	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	40	0.011493	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.trans_eq_bool	40	0.012530	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.013326	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_left	40	0.007866	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.012211	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_refl	40	0.006160	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_eq	40	0.017021	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist1	40	40.075039	17831	6511
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	5.964873	7828	1458	1.0.0.1.0.4.1.3.0.2.8.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.265500	230	68	6.2.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intro p; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.011500	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.034289	21	7	2.3.0	synth with cache (only 1: compute; only 1: destruct 1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40	40.140496	12026	3334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	40.113604	5219	1517
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_elim	40	2.092324	1917	549	1.0.4.0.4.1.4.0.2	synth with cache (only 1: destr_bool; only 1: left; only 1: apply H; only 1: right; only 1: apply H; only 1: left; only 1: apply H; only 1: left; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_intro	40	0.059084	35	12	7.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_intro	40	0.017868	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_elim	40	0.020533	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_intro	40	0.017988	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.015528	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_elim	40	0.012110	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_intro	40	0.011300	3	2	1.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	12.195878	3704	1314	3.1.1.6.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_classical	40	0.009198	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	28.315043	9139	2048	0.25	synth with cache (only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.012275	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_if	40	0.055329	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_if	40	0.006090	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_lazy_alt	40	0.007515	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_lazy_alt	40	0.004972	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	8.558445	2792	998	0.0.0.3.2.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.088745	22854	2637
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_iff	40	1.924406	1580	319	3.0.0.0.2.12	synth with cache (only 1: red; only 1: intros A B []; only 1: auto; only 1: repeat split; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.iff_reflect	40	0.027460	13	4	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	40	0.020906	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_spec	40	0.021259	6	5	1.0.0.0.0	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.913563	473	190	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40	40.219011	14316	3309
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.864182	216	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.916426	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40	40.065329	15618	7569
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.077848	18362	6242
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_curry_uncurry	40	40.401650	174319	6497
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	40.038882	10723	1876
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.128885	8601	2050
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	4.911461	11669	1219	0.8.2.1.17.0.2.14	synth with cache (only 1: red; only 1: split; only 1: reflexivity; only 1: intro p; only 1: destruct p; only 1: simpl in *; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	40.051798	7740	1508
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.021918	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	6.651060	2265	645	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.262004	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	40	40.208601	33801	5683
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.022912	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.094007	19244	3209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	27.843539	5686	3387	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.list_eq_dec	40	0.745885	511	79	13	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	15.678576	92858	608
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_cons	40	0.012140	6	2	1.3	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.012115	2	2	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.041806	11	9	2.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	40	40.226746	9128	3476
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40	40.114600	10890	2758
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40	40.281275	112647	8723
coq-tactician-stdlib.8.11.dev	Coq.Logic.StrictProp.Spr1_inj	40	3.764173	20277	690	1.47.17.34	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introTn	40	40.257090	20723	1148
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.294906	477	79	0.6.1.5.3	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.012463	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40	40.130785	21650	3942
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40	40.077395	23239	2663
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40	40.095762	12450	2795
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.453636	15729	3874
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	5.297822	1669	773	0.0.5.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hprop	40	40.328978	135463	9152
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	40.168271	62830	4001
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	40	40.054157	17504	2695
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.131609	19297	4333
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	7.486670	23900	1411	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp2	40	4.204247	15548	169
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xI	40	40.482593	18284	4093
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.818400	1885	184	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	40	40.564621	20314	2203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40	40.017502	3136	1542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.030148	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.084743	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	3.055266	482	273	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_functional_relation	40	40.144787	53403	6210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.362670	319	125	0.0.0.0.6	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp	40	4.423550	15903	171
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_2	40	40.142385	53823	3496
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.094800	26939	7206
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0.009450	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40	40.124520	7533	1801
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.013636	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.862903	447	146	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.273638	67	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40	40.099081	6639	1307
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	7.200030	18192	1280	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_inj	40	40.332760	134366	8059
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.181575	199	32	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.283862	26500	4033
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.140637	46900	9858
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.409393	194	97	0.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	1.400006	2165	256	0.10.0.0.14.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.018716	3	3	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.016417	10	3	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp0	40	4.866566	16625	175
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	40	40.754829	26988	3377
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.008145	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_0_l	40	0.007297	6	1	5	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.071298	39	9	9	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40	40.051699	12073	3789
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	1.983354	2397	316	0.11.0.0.15.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40	40.049068	11448	3824
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	36.065377	27027	7529	0.12.0.4.5.0	synth with cache (only 1: unfold Add at 1; only 1: intros X H'; only 1: destruct 1; only 1: auto with sets; only 1: destruct H; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.012655	3	3	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_IZR	40	40.057613	15626	3131
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.220356	96	61	0.2.0.1.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.010780	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	0.010426	3	2	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	40.784777	32399	3854
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.645007	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40	40.049832	14259	1358
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.039268	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40	40.065447	17550	2432
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkrel	40	3.998820	16262	173
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	40.101696	29774	9281
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.113631	34200	8144
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	40	1.771115	2138	439	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	40.018557	3884	760
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40	40.179447	76043	3499
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	40	40.536049	240045	8437
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f	40	0.150597	204	37	0.11.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.013295	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist2	40	40.075339	18283	6368
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40	40.067586	15458	5342
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	4.464639	2675	983	0.0.0.0.0.2.1.0.0.0.2.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.199446	9586	1894
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_right	40	3.979559	2668	1190	0.10.1.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40	40.256421	5144	1469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40	40.069571	10482	2584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40	40.129802	56332	2017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.022743	8	3	0.5.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	31.603939	9051	3587	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.sumbool_of_bool	40	0.782419	2300	188	17.0.15.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_rec	40	0.051130	45	12	1.1.4	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_ind	40	0.013241	3	3	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.eq_trans_cancel	40	27.499167	60351	5248	0.20.10.8.14	synth with cache (only 1: unfold eq_trans, eq_sym, eq_ind; only 1: intros A B f g <- H; only 1: destruct r, 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40	40.039255	4220	654
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40	40.059564	13938	7575
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	40	40.219765	15604	3324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.047588	12873	2604
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.029788	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	2.955778	284	120	1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	40.077437	23594	3166
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.star_monotone	40	9.395415	4885	2190	0.0.5.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40	40.056585	7774	1941
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.075121	10197	2405
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40	40.495997	216899	6050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40	40.077016	8326	1516
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.081035	20369	6852
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map	40	40.186993	26175	4781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40	40.112999	13411	4045
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	19.245240	22545	2870	0.1.5.27.1.5.3.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.030189	17	7	0.1.1.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	10.449863	3042	1251	0.6.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.306569	129522	8041
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40	40.213263	75101	8790
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.022870	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introFn	40	40.357723	14691	573
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	40	40.236306	12294	6723
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	40	1.062683	4705	207	0.60	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	40	0.013873	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	40	0.015822	3	2	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	40	0.015434	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	40	0.278914	570	66	0.0.2.10.4	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.060977	18312	2140
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	22.330845	6102	1090	1.0.1.0.0.0.1.0.1.1.0.0.0.0.0.0.0.2.29	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	40.085482	15131	3797
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_high	40	40.438564	16526	4811
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.242442	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map_iff	40	6.376154	2200	586	0.0.15.0.0.0	synth with cache (only 1: induction l; only 1: intro n; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: subst; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	40	0.062742	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40	40.123926	43377	5779
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	40	0.006460	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	40	0.052721	45	14	0.8	synth with cache (only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	40	0.013413	10	3	4	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth	40	0.854616	515	137	0.0.6.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	5.504021	44201	922	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.027104	4	4	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	40.839162	410145	3166
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	40	40.178353	35477	3779
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	11.722694	2664	677	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.557203	20576	1846
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.031437	2947	1382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	1.638727	444	114	2.10.0	synth with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	40.104584	9976	3439
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40	40.191254	72836	6480
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.099549	33784	2542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40	40.223460	16361	3428
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_and	40	25.243691	89988	6270	0.0.1.1.0.11.0.0.0.7.24.21	synth with cache (only 1: destruct H2; only 1: elim H1; only 1: left; only 1: split; only 1: assumption; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_or	40	0.027014	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_not	40	0.024726	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.074329	306	152	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40	40.071107	20012	5777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40	40.073864	21929	3935
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	40	40.368066	149789	4045
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.363834	18192	5577
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40	40.109178	32706	9946
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40	40.043835	11479	2764
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	40	40.969673	32810	2284
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap	40	11.572869	13804	1396	0.10.0.0.0.0.0.23	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	40	40.057202	15328	3518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	6.070765	1794	594	0.0.5.1.0.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.093551	31308	3131
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40	40.049226	4440	1281
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40	40.088202	26200	3430
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_plus	40	40.126787	39974	6851
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.175271	55998	3265
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40	40.047615	13011	1339
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40	40.235983	106730	3097
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_0	40	4.683026	4683	367	3.3.46	synth with cache (only 1: destruct (N.le_gt_cases a 0) as [Ha| Ha]; only 1: now destruct a; only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist1	40	40.065433	15796	6158
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth_error	40	20.137535	15852	2385	2.0.21.0.0.0.0	synth with cache (only 1: intros l n d H; only 1: apply nth_error_split in H; only 1: destruct H as [l1 [l2 [H H']]]; only 1: subst; only 1: induction l1 as [| x l1 IH]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.564398	261843	4560
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_app	40	0.442506	153	75	1.0.0.0.0.2.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	40	40.257763	101700	5149
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.032355	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_left	40	0.018233	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.109383	13597	3476
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.057136	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40	40.152467	7025	2028
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	40	0.056668	35	14	2.4.0	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.047570	9787	2359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40	40.170891	65588	4075
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.035236	12	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.174442	61	19	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	12.150773	14715	3131	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.299068	674	69	1.0.5.17	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	0.599781	1322	127	1.0.8.12.12	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.103690	72	23	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	40	40.238098	91872	7741
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	40	39.272477	111072	8382	2.41.0.7.0.10.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	40	0.022135	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.011408	3	2	1.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.011873	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.011761	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.027742	13	6	0.0.0.0.1	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.026155	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.014905	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	40	0.015428	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	40	40.869348	431013	4212
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40	40.044999	11304	2492
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.029301	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	40.038912	7434	1345
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	13.403776	4683	1216	0.0.0.0.0.1.11	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	40.033109	7436	1481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.161509	51	16	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40	40.103412	32607	8165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.245603	77	21	0.7.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40	40.080035	12840	2582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40	40.116687	7017	1978
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40	40.215204	82399	6836
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40	40.103898	30369	6676
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.010239	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.014289	3	1	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40	40.081385	16510	7511
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	40	40.057387	12713	5362
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.216461	7142	3017
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.145665	53648	8550
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_fst	40	0.629594	459	141	1.1.6.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimT	40	40.244731	54404	1430
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	40.283870	19457	4548
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40	40.106635	36356	4940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	40.127686	15335	3454
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	4.890997	851	320	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.532184	20578	3388
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	40	0.011982	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	40	40.723817	37840	3538
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	40	40.368336	152850	12134
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	40	0.526357	1168	134	0.5.0.1.31	synth with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	40	0.019442	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	40	0.020248	8	4	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	40	0.024435	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	40	0.019518	6	5	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	40	40.530851	243706	5863
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	40	0.021797	3	3	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.025327	2	2	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40	40.380414	168582	6973
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.104867	17578	3717
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40	40.059357	10820	2552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	40.052930	10612	2282
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	40	40.135574	44792	5402
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40	40.223545	87323	8215
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.487234	455	105	0.0.0.13.0	synth with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40	40.131625	11028	2558
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	40.054536	12716	5583
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_of_sumbool	40	40.530021	229286	8614
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	40	7.434336	10951	926	0.43.0	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	40	0.002931	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	40	0.004245	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	40	0.003709	2	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	7.563819	16939	1079	0.5.10.45	synth with cache (only 1: intro p; only 1: red; only 1: destruct p; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.020229	59	19	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.006255	6	4	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	0.017009	18	4	1.6	synth with cache (only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	40	0.120636	542	158	1.0.2.0.1.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	40	0.091088	246	97	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	40	0.218344	1101	131
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist2	40	30.239522	12586	4618	2.1.1.1.4.0.0.0.0.0.2	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_sym; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_left; only 1: apply union_perm_left; only 1: apply union_ass).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40	40.107665	32770	5427
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	40	0.510678	1334	353	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	40	0.226174	922	104	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	40	40.368943	149212	4765
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.257179	18462	4717
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	40	1.031561	2931	605	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	40	0.010856	4	4	0.0.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	40	0.270668	809	143	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.053629	12775	3714
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	40	4.712707	4917	422	0.9.21	synth with cache (only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_IZR	40	40.087485	29516	2383
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_succ	40	40.473477	44220	4197
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.123329	12024	2770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40	40.055268	14895	3334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.865705	143	58	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40	40.079700	18366	2803
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.EqSt_reflex	40	40.360418	65018	6609
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.044551	12384	3149
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40	40.083857	18297	3677
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.093679	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40	40.216377	84090	2953
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.495442	12500	2839
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.sym_EqSt	40
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_rev	40	40.462265	31725	4413
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	40	40.796200	378680	4309
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.011860	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.012692	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_right	40	40.193986	75059	5744
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	40	1.046923	472	153	4.3.0.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40	40.126774	8698	1438
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40	40.042591	10933	2066
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	40.067485	16916	4933
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	40	40.711302	336456	6499
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	40	0.020794	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.021298	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.546278	934	72	1.29	synth with cache (only 1: intros f [x]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.209176	74647	9521
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hprop	40	40.143467	48727	8677
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	40	40.480849	209670	13934
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	40	40.070219	26397	2249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40	40.078733	25875	3198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	6.127568	3453	759	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.117300	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40	40.026776	3708	1210
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40	40.077956	24380	2356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40	40.053674	14452	2627
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Lemma1	40	40.081604	21344	9006
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.151150	8223	2321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	15.137273	6341	1691	3.7.0.5.4.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with (a mod b); only 1: now apply mod_always_pos; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.367740	80	38	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40	40.076454	8056	3160
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40	40.551375	245492	6156
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40	40.078173	23445	4123
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	3.430970	565	248	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	40	4.725671	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.274748	117260	10135
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_snd	40	40.057846	13761	5061
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	40	1.108938	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	40	0.011638	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	40	0.012062	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40	40.078307	5117	2495
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	40	0.025849	20	6	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.324195	23064	1183
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.209770	15637	5554
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40	40.068187	23122	3287
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	2.957744	6143	408	23.1.6.28	synth with cache (only 1: intro x; only 1: destruct 1 as (eq_qp, H); only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40	40.097288	15509	5586
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40	40.122925	21408	4268
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40	4.460245	42462	409
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.382260	34984	2601
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	40	40.838967	16552	3123
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	2.734127	351	177	0.0.3.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	40	40.260418	101532	8362
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	16.313196	16309	4062	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.288063	168	81	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	40	40.077862	16264	1352
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40	40.035012	8419	2776
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	40.050332	11076	1789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	2.046144	498	105	0.12.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_1	40	40.062849	8087	1041
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40	40.171550	65363	6081
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	40.131096	48026	5223
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	8.139440	1250	488	0.1.0.0.0.1.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.258718	24	15	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40	40.073263	19802	5355
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.162277	64595	2830
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.095422	30117	3947
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.378205	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40	40.209991	28038	2984
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.358021	140275	4474
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimN	40	40.258029	28401	1205
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	0.244864	72	20	4.0.0.1	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	40	40.461528	195268	15053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40	40.071686	20230	3742
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	40.288146	123197	6168
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_IZR	40	40.092013	27284	5434
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_add	40	40.343537	25712	5594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40	40.203696	11316	3525
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.104677	7572	1607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	22.338591	7842	1658	11.0.2.2.14	synth with cache (only 1: compute; only 1: intros a n m H; only 1: revert a m; only 1: intros m Hm; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40	40.149647	42560	4755
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.294938	121964	9849
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.227101	120	49	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.415875	14657	4387
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40	41.541417	3487	460
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.trans_EqSt	40	40.088657	22793	9144
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_left	40	40.051555	10805	6419
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40	40.902074	442577	4448
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.173329	9324	2437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40	40.058380	14189	1477
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	40	40.467080	60114	1329
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40	1.216021	10557	138
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	40	11.105323	15952	3790	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.flat_map_concat_map	40	1.042968	514	138	0.1.3.0.0.0.3	synth with cache (only 1: intros n m p; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	40	0.120164	72	48	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.277804	112522	5381
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hset	40	40.215407	81062	9508
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40	40.074348	20411	3169
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.010842	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40	40.031843	4545	1588
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40	40.121365	10114	2505
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40	40.044549	8018	4268
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	38.983335	13771	2978	1.1.0.0.7.11.0	synth with cache (only 1: intros n m; only 1: compute; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40	40.125561	12945	2217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.038503	8	4	0.0.3.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40	40.090339	8897	3404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.577345	144	90	0.0.3.2	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.010474	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.029130	7	5	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40	40.225534	87302	5904
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.150029	43	20	0.1.3.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.010372	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.010501	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	40.059513	14758	4909
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.775397	196	70	0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.291753	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_invariant	40	40.416352	20043	2650
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40	40.138443	6402	2729
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	40	40.293177	114321	8856
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.821158	235	154	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimNf	40	40.313851	37129	1119
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.406298	8986	3480
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40	40.060806	15182	3180
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_flat_map	40	40.277946	17546	3717
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_id	40	0.038490	7	6	1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.305431	117700	6472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40	40.092802	8083	4581
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_map	40	1.247408	594	182	1.0.0.0.0.5.5	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction l as [| x l]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	4.631138	640	313	0.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lxor_spec	40	40.575788	57312	2205
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	40.921145	448494	4304
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40	1.183426	10557	138
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.concat_map	40	17.318435	12947	2307	0.0.0.1.0.0.7.0.0.0.0.8.4	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: destruct l; only 1: rewrite IHl; only 1: simpl; only 1: auto; only 1: rewrite IHl; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	40	40.146882	40989	11692
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40	40.143294	47323	9338
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	40.045195	10475	3307
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	40	40.165618	5264	945
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	40.186133	10775	2045
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_2	40	40.128076	20816	4356
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40	40.096076	31782	7752
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	40	26.438977	6605	3646	0.8.5.1.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40	40.218169	28488	3052
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in	40	10.801087	6509	1033	0.4.15.1.2.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40	40.136696	35141	3942
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext	40	0.294401	70	32	0.0.1.0.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.033551	7	5	2.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.302671	128280	5305
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40	40.063507	15305	5157
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40	40.370756	148464	4660
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimTn	40	40.351329	40876	1866
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	40.285930	31823	3545
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	14.690650	45309	2291	0.4.21.37.1.10	synth with cache (only 1: red; only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: destruct h2; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40	10.151880	12519	2539	0.0.0.0.0.13.0.0.0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: auto; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimFn	40	40.392648	47589	1407
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.297940	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.365741	496	90	11.0.0.0	synth with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40	40.051852	13411	3114
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	3.041512	1039	478	0.0.0.0.0.0.1.0.8	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: intro; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.024408	8	6	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.343991	120	61	0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.034677	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.076043	39	18	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	40	40.378696	172146	3784
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	40	0.021383	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.021983	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR_R0	40	40.060984	13473	6116
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	40	0.049318	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_1_r	40	40.360351	34631	4518
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	3.676106	6184	861	2.8.0.2.6.3	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40	40.096195	3936	931
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.759598	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40	40.046635	11879	2953
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40	40.129714	24411	4418
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.646243	431	93	0.0.0.0.1.9	synth with cache (only 1: intros n m; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	40	40.714385	14020	4034
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.182749	54504	4212
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40	40.258788	98233	8593
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.047539	18	5	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.475721	21974	5057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.322574	11160	1940
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	40	13.328760	6857	1594	0.0.0.0.0.0.0.0.4.1.0.0.0.0.4.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.eqst_ntheq	40	40.070366	16092	9464
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_right_app	40	0.289581	101	41	0.1.0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ext_in_map	40	20.725506	10238	2419	7.13.3.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: firstorder; only 1: inversion 1; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40	40.188943	10479	2121
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40	40.051326	11927	3531
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40	40.691190	333797	3041
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40	40.113077	36321	2228
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	40	40.275959	108972	10913
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.082078	21739	5169
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_succ_r	40	40.396940	19844	4960
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	13.062700	5821	1275	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.025165	4980	685
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.049633	7355	2892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.240968	13544	2107
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40	40.054407	13589	2976
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40	40.164290	56656	5885
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40	40.364780	164802	4656
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_spec	40	40.222879	20759	4628
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40	40.087146	26131	4825
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.333733	135723	12033
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	40	0.014793	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introP	40	40.145830	26053	1000
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	40	40.215779	15538	5142
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40	40.109805	35965	4958
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40	40.158973	16160	3864
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40	40.130195	11647	4884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.086336	8549	3376
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lor_spec	40	40.310989	14628	5223
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	40	40.234832	81267	13098
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	40	0.013220	5	3	0.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	40	0.042342	24	10	1.1.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	40	0.265549	387	65	1.0.4.7	synth with cache (only 1: induction n; only 1: intro; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	40	0.939829	1355	217	1.1.13.2.1	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.046804	10461	3456
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_positive_comp	40	40.555050	22267	2431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40	40.145434	10762	3560
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.twist	40	40.046437	10656	5246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.152758	28099	2945
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40	40.095428	14132	4386
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.252959	54916	1811
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	40	40.491435	37130	3855
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.741398	88	50	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	40.179278	66325	7957
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.861357	167	80	1.1.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40	40.353286	144081	4514
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40	40.439635	193158	6688
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.323780	118127	3879
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sumboolP	40	40.354187	41287	1095
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP	40	0.091732	77	7	13	synth with cache (only 1: by case Pb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40	40.057546	13720	4442
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40	40.066835	16758	3111
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	40	40.051253	10929	4818
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	40	40.346606	151204	3750
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	40	40.253379	18092	4785
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.030609	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40	40.089523	30348	3383
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.143315	11433	2696
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	1.728056	888	234	6.4.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	40	0.022695	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.068607	8585	1975
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.203144	77403	8518
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	0.040000	16	7	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep	40	0.025472	12	4	1.2	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.062648	28	13	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.007655	2	2	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.054584	13673	3690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.797106	354	121	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.580904	15744	4672
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40	40.225658	87133	7655
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40	40.108897	7544	738
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	40	40.186492	55643	6259
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.ntheq_eqst	40	40.163045	54211	10521
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.463867	14418	5124
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	40	40.489193	26319	5027
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	40	0.832616	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	5.730237	14831	763	0.6.2.17.6.14.11	synth with cache (only 1: red; only 1: red; only 1: intros l; only 1: induction l; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	40	40.371451	37424	5461
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40	40.048453	11170	3247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40	40.163186	17880	3315
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40	40.263559	116217	1995
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	40	40.223915	85371	12914
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	40	0.008676	3	2	1.0	synth with cache (only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.353870	484	51	2.14.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.486265	220804	5001
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0.006786	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	40	0.004310	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	40	0.203814	205	87	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	40	0.020487	26	7	5.2	synth with cache (only 1: intro H1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	40	0.008033	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	40	0.333938	468	134	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.008568	6	2	1.3	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.012043	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.009259	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.009556	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.519998	1431	111	28.1	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.012208	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.011057	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.011058	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.012212	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.529966	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.013475	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.051657	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.020474	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	2.093136	9662	278
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.019024	5	3	0.1.1	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	40	0.011205	3	2	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	40	0.014509	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	40	0.032502	13	7	1.0.1.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 1; only 1: destruct 1; only 1: repeat split).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	40	0.017608	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	40	0.023310	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	40	0.027954	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	40	0.436229	465	84	0.6.4.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	40	0.010716	5	2	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.010635	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	40	0.011137	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	40	0.011766	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	40	0.011755	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	40	0.056310	41	13	0.2.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	40	0.032905	19	7	0.1.5	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.066043	13831	5260
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.206811	51539	4023
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.355113	13394	4112
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40	40.030610	5153	1411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40	40.052190	9235	4518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	40.195738	6510	1322
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40	40.036504	9443	2101
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	2.383234	665	317	0.0.2.1.0.0.1.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40	40.114916	33455	7674
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	18.672157	6557	2646	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40	40.072233	21496	3833
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	40	40.194924	25603	7176
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40	40.123149	41999	5678
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	40	40.452238	198995	14848
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	40	0.018093	6	5	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sameP	40	40.237867	22849	849
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	3.366413	714	361	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.033278	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0.015486	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.053253	15	7	3.3	synth with cache (only 1: intros Hnm Hpq; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.068506	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.014271	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.153971	26	13	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	40.358946	8991	2056
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesP	40	1.184444	2975	167	5.48	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40	40.076998	23097	3912
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	40	1.611235	2152	552	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40	40.193979	6762	1654
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40	40.134869	7994	3776
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lor_spec	40	40.542548	37081	2865
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesPn	40	4.640321	7788	555	0.8.48	synth with cache (only 1: destruct 1; only 1: intro p; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessL	40	1.076798	3074	197	9.3.27.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	40	40.156224	47253	10066
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessR	40	0.733439	2387	174	13.3.18.3	synth with cache (only 1: repeat split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40	40.059777	16552	3055
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	7.335837	3293	606	0.0.4.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: revert a; only 1: intros n; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.033892	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40	40.098388	7819	1944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.145982	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_comp	40	40.681356	9760	1163
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	40	3.942055	2226	943	0.0.1.0.5.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	40	2.013421	1033	464	0.0.1.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decPcases	40	40.391042	38165	635
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40	40.431501	22491	4044
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	18.709184	7723	1818	0.0.1.1.2.4.1.24	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: clear IHl IHr; only 1: simpl; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_sym	40	7.020301	25494	875	2.1.9.22.22.49.4	synth with cache (only 1: split; only 1: intro H; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	40	1.507940	723	338	0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_exists	40	40.338607	23635	4871
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.178456	65786	9217
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.534540	31318	3798
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.101448	8131	2293
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.842097	716	148	2.5.1.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_app	40	0.766671	225	121	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	40	0.453888	236	79	0.0.1.3.1.0.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_inj	40	40.245015	93284	11961
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	2.246586	941	242	0.0.1.0.1.5.9	synth with cache (only 1: intros; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40	40.149045	53482	8480
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.285486	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.236773	54274	2586
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40	40.029884	5775	3065
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	40.411576	14387	4768
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	2.739554	420	188	0.1.0.1.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_IZR	40	40.046634	9576	4126
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add	40	40.375777	6857	2622
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.105262	14872	2580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.509443	116	50	0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40	40.056001	4561	1671
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decP	40
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.613760	283857	2828
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	5.196882	4276	1075	0.0.1.0.0.1.0.1.1.0.0.0.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicW	40	0.833564	1829	93	0.46	synth with cache (only 1: red; only 1: by move  =>b b' ->).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.851665	434	89	0.0.0.3.2.0.2	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.067432	17544	2583
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	4.877125	1147	405	1.1.5.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.216068	85252	10660
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40	40.108674	33335	8411
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.land_spec	40	40.687932	20566	4738
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	0.177441	190	30	5.5.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.030684	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_map	40	0.019370	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.132634	44829	5444
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_nth	40	40.488919	19473	3897
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	40	40.220423	70585	6559
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.063243	19879	2864
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	40	0.019763	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	40	0.031658	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	40	33.623267	77283	6052	3.28.4.11.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	40	0.013907	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	40	0.012778	5	3	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40	40.109078	27056	6520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.060692	17935	3103
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40	40.365631	5585	1720
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_app	40	40.854115	31003	3017
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.altP	40	40.199750	59313	654
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	7.058933	4385	840	2.2.2.6.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	40.074729	19107	4568
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.030988	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	40	30.698793	34489	10084	0.0.0.0.0.0.0.0.0.8.0.0.0.2.0.0.0.2.0.0.0.2.2.5.5	synth with cache (only 1: intros; only 1: split; only 1: destruct c; only 1: destruct c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c, c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.087515	7	5	1.1.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.074354	7	2	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.161609	58	17	0.8	synth with cache (only 1: apply min_l; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt	40	4.333910	1486	317	4.2.0.11	synth with cache (only 1: destruct (le_gt_cases m n); only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff; only 1: apply N.gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_gt	40	0.005776	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.284468	19173	4845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.052836	8588	4394
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40	40.417816	8263	1871
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.050771	14	8	0.0.0.2.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40	40.073345	8812	4062
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	40	40.670385	10460	1802
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40	40.028607	4336	1807
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40	40.064621	14156	4236
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40	40.072727	26357	962
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.312650	120	51	0.1.1.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le_iff	40	6.068281	1219	429	4.2.6	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40	40.099641	31683	5154
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40	40.285959	22202	7416
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.086773	16903	3809
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.077066	22892	4342
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40	40.405576	14262	5064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	40.296609	7856	1628
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.045207	14981	2975
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le	40	4.581134	930	364	0.0.0.1.0.6.1	synth with cache (only 1: unfold le, min; only 1: case compare_spec; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.le_ge	40	0.005297	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.346713	26762	3492
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	5.807304	1832	430	0.0.0.0.0.14	synth with cache (only 1: unfold log2_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40	40.035168	7287	2106
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40	40.108552	14818	3283
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.199351	13230	3373
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.ForAll_map	40
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.240317	7867	2226
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessP	40	40.392952	153555	8276
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.bind_unless	40	40.371760	146946	5666
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	40.193688	23194	6263
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40	40.379929	171324	9447
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lxor_spec	40	40.612929	31211	4656
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_In	40	40.522137	16831	3321
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.318243	3603	217	2.46	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40	40.048750	10251	2047
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_contra	40	40.194960	66201	3087
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.024895	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40	40.061189	17331	2928
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and3	40	0.012465	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.014977	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and5	40	0.017718	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	40	0.016063	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40	40.277620	16941	5092
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	40	40.344771	121724	5589
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0.007091	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0.005699	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	40	0.009726	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	40	2.174704	587	201	0.0.0.5.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intros Ha Eq; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0.005578	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0.006483	1	1	0	synth with cache (only 1: by case b1; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	40	40.082605	24593	4350
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons1	40	1.862778	679	148	0.0.1.6.2.0.1	synth with cache (only 1: firstorder; only 1: simpl; only 1: case_eq (f a); only 1: rewrite H; only 1: intros; only 1: reflexivity; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons2	40	0.016752	2	2	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eqb_eq	40	40.284975	22505	6773
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	40.226918	16053	3506
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.198332	14473	3039
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.059344	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.060603	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.177365	62587	10217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.113740	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.076631	17358	2813
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_bind	40	40.247400	81342	3559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40	40.109358	19998	5130
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40	40.134967	10297	3732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.420336	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.143389	47866	10329
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	1.773229	2006	450	0.4.0.0.12	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.885440	267	116	1.0.2.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_app	40	40.261535	44678	5886
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40	40.112183	37575	4664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.089088	21258	7650
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	40	40.357364	135614	4307
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	40	40.451948	192131	8418
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	40	0.010289	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	40	0.022759	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	40.264348	14719	2985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.402001	13257	2123
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	40	0.402725	45	12	0.2.2.1	synth with cache (only 1: destruct e'; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	40	10.326150	31991	384	2.2.194	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_EM	40	40.276971	92120	3223
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.565358	43110	4852
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	40	0.357784	12	3	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	40	40.909648	7763	2334
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	40	0.385783	13	3	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	40	1.769220	3350	379	1.1.1.3.20.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.129283	49843	3055
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.028487	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.032644	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.059474	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40	40.073616	19855	4106
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	40	40.562588	257087	8976
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	3.317142	1176	361	2.2.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.065108	9703	3478
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.299103	27703	5491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40	40.104739	26752	3748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40	40.322188	13007	1484
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_some	40	40.403437	23111	3719
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.751034	112	43	1.0.0.0.1.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.307545	57	33	0.0.0.0.3.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40	40.106043	7953	1082
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.076145	17363	4560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40	40.093681	11612	4641
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.285446	27903	8591
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.049275	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.049743	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.048226	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.052680	8	6	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.015389	10	3	2.3	synth with cache (only 1: revert q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	40	0.005900	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.079244	19259	5805
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40	40.096576	30657	4072
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.land_spec	40	40.357988	23332	3458
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.679182	892	124	0.0.1.0.2.2.2.2.7.4	synth with cache (only 1: unfold testbit; only 1: destruct divmod as (q', u'); only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: fold testbit; only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40	40.234341	12828	4478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40	40.151076	12493	2877
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_ltb	40	40.415380	20440	3079
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	40	40.390125	27967	3124
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	40	5.725884	3708	960	4.5.4.1.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.066115	8377	1809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.061305	16106	4044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.532686	207	84	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	40	3.701887	2081	551	3.3.9.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40	40.294194	8561	885
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40	40.211017	13930	2804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40	26.388355	10042	3584	0.0.0.1.0.0.5.0.0.0.5.0.0	synth with cache (only 1: intros; only 1: destruct (lt_ge_cases 0 b); only 1: apply div_small; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: intuition; only 1: rewrite <- div_opp_opp by trivial; only 1: apply div_small; only 1: rewrite <- opp_lt_mono, opp_nonneg_nonpos; only 1: destruct (mod_neg_bound a b); only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.065544	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Exists_map	40	40.102233	29303	9252
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.383678	262	74	0.7.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.035526	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in	40	9.392152	5281	1108	5.1.1.0.7.1.0.0.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40	40.228165	9442	2917
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	40	40.213083	72369	3380
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_imply	40	40.233735	75561	3271
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.251730	17849	3627
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40	40.290125	123311	7261
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	40	40.039260	7315	1646
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.052913	14131	2953
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	40	40.204137	27477	5495
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	40	40.400053	8756	808
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR	40	40.088673	29425	3443
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_leb	40	40.694423	15490	3502
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_length	40	40.330132	21970	5156
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	40.272087	18649	6233
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40	40.335014	17445	3176
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.523968	500	111	0.2.3.1.1.7	synth with cache (only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40	40.154164	18279	4485
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.023204	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40	40.138486	13985	3569
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.079647	17840	2479
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.254968	62931	753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	13.405473	5654	1444	1.0.8.3.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros H; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0.094865	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.097360	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0.008195	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andTb	40	0.005343	5	1	4	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	40	0.004096	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbT	40	0.066567	111	13	2.12	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbF	40	0.055671	80	11	2.10	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbb	40	0.005345	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40	40.174200	59352	10531
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.197673	72024	10320
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbC	40	0.504408	1148	43	0.46	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbA	40	0.005771	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbCA	40	0.007659	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	40	0.016544	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbACA	40	0.028901	63	6	12	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	40	0.004982	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orFb	40	0.004059	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbT	40	0.009738	3	1	2	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbF	40	0.005517	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	40	0.005577	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	40	0.008074	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbA	40	0.011110	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbCA	40	0.011108	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	40	0.012625	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbACA	40	0.021686	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbN	40	0.007874	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andNb	40	0.007515	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbN	40	0.007028	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orNb	40	0.007286	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orl	40	0.021636	5	1	4	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orr	40	0.005792	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andl	40	0.012990	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andr	40	0.011963	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idl	40	0.330428	179	21	8.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idr	40	0.013442	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2l	40	0.016101	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	40	0.019670	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	40	0.013306	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idr	40	0.013596	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	40	0.021788	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2r	40	0.023138	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	40	0.010792	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_or	40	0.009567	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbK	40	0.008410	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	40	0.009004	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	40	0.008579	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	40	0.008801	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	40	0.006031	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybF	40	0.006769	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	40	0.005997	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	40	0.006865	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybb	40	0.005914	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	40	4.623921	1447	505	1.1.1.5.1.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intuition; only 1: rewrite filter_map; only 1: split; only 1: apply ext_in_map; only 1: apply map_ext_in).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	40	0.009142	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	40	0.009059	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext	40	0.023444	4	4	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyNb	40	0.009220	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	40	0.008832	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybNN	40	0.110110	2	1	1	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idl	40	0.012519	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_inv_nil	40	40.234233	34779	8597
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idr	40	0.013700	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40	40.095723	37053	1626
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_id2l	40	0.022561	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addFb	40	0.004426	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	40	0.005821	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbb	40	0.008268	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbC	40	0.007579	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbA	40	0.011756	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbCA	40	0.012223	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbAC	40	0.011447	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	40	0.021192	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.049208	7350	1927
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	40	0.012627	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	40	0.012444	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	40	0.010398	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbK	40	0.007230	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	40	0.016007	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbI	40	0.018225	3	1	2	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addTb	40	0.006526	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	40	0.009830	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbN	40	0.008241	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addNb	40	0.010097	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40	40.146750	20014	3542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.027033	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.024131	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40	40.300577	12485	2292
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	40	40.497823	37640	539
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.elements_in_partition	40	40.059758	15950	5653
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.590447	44629	513
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	40	40.148783	38337	5713
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_lt	40	40.779200	13705	4118
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	40	40.439121	189760	9586
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	40	0.519143	562	89	7.8.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	40	0.044796	15	4	0.0.5	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	40	0.146176	53	17	0.0.7	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	40	0.040137	4	4	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbP	40	3.558313	1752	70	1.0.0.0.53	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	40	0.098020	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUl	40	2.542347	4068	337	0.20.0.7.24	synth with cache (only 1: intro H; only 1: simpl; only 1: Bool.destr_bool; only 1: elim eq_sym with (1 := H0); only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.008351	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40	40.070824	18214	4535
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	40	40.301741	120428	10396
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	40	5.778310	1623	766	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	40	40.131522	49902	2991
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	40	0.028279	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	40	5.061930	8444	662	15.13.9.30	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	40.057024	13910	4097
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_spec	40	16.385960	2527	723	1.0.1.0.0.0.7.6	synth with cache (only 1: rewrite <- (succ_pred m); only 1: rewrite <- (succ_pred m); only 1: rewrite geb_leb; only 1: case leb_spec0; only 1: constructor; only 1: order; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.350568	5184	1364
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	40	40.329990	17823	4133
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.355592	19245	5687
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.104421	26397	3074
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_r	40	0.060285	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40	40.094023	33827	3319
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40	40.077064	18177	5581
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40	40.116414	37202	5073
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.375557	44141	3961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40	40.256516	13771	2856
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	1.713149	470	198	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.556439	257	81	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40	40.123572	9745	2564
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_le	40	40.441029	9909	3572
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_r	40	1.169263	245	70	0.11	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	40	40.364331	25969	3367
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.083526	19245	3681
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40	40.182595	9044	2623
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	40	40.295737	27165	6826
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40	40.189865	21020	3773
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.084703	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_le_iff	40	0.019876	4	3	0.0.1	synth with cache (only 1: unfold le; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.236381	48	19	2.1	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt	40	0.015923	2	2	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_gt	40	0.007244	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.028395	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le	40	0.018615	2	2	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_ge	40	0.007147	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_spec	40	40.515520	8137	2088
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_diag	40	0.208364	4	2	1.1	synth with cache (only 1: rewrite two_succ; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_opp	40	1.607646	285	136	0.0.0.0.0.1.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	8.180213	1727	262	0.0.1.0.0.0.0.1.26	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: now f_equal; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.384607	20057	4584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.207564	16838	3222
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.226752	10035	429
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.297862	25125	4842
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	40	40.662891	29933	307
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0.011518	1	1	0	synth with cache (only 1: by case : msp  => _ /= ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.010797	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0.006493	3	1	2	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.007178	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.PropNeqType.paradox	40	40.394055	180018	11158
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	40	40.054238	11978	1973
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40	40.073167	19556	2731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.339419	20199	2397
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR_R1	40	40.080938	25453	4202
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_iff_add	40	40.379609	14968	5972
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	40	40.203489	38456	438
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	11.211096	4280	1210	1.10.3	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.045932	6	5	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.qualifE	40	0.006855	2	1	1	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	22.454186	10238	997	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	40	28.529517	232293	2489
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	40	40.076546	20192	6767
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40	40.151146	14195	2818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.310751	10612	3314
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40	40.097836	15368	3530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.020953	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40	40.199120	13809	3366
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40	40.246176	6121	1396
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.009603	2	2	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40	40.120870	34352	7470
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_l	40	30.009967	16235	2463	3.2.30	synth with cache (only 1: destruct (min_spec n m); only 1: apply mul_cancel_l; only 1: apply mul_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_l	40	40.229385	31331	5328
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	40	40.115931	35298	522
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.014157	3	2	0.1	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.012684	8	2	5.1	synth with cache (only 1: intros; only 1: intuition Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.047591	12494	2411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.087570	4326	1511
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	40.211943	22876	3673
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.324652	7743	2035
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.844243	896	122	2.0.14.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.115833	8	4	3.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_nth	40	40.228031	32026	5682
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	40	40.351319	151555	10283
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.829987	16331	2480
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.379346	154562	2323
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	1.018769	168	61	0.0.4.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40	40.531416	215541	1609
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.289848	97	30	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	40	0.044240	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.412021	161335	2529
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40	40.058287	13873	4170
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_l	40	40.345290	18982	3382
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_length	40	1.038630	425	132	2.4.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40	40.424995	169717	2226
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.id	40	0.010967	2	1	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj	40	0.006677	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.018743	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	40	0.016050	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.033257	8	1	7	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.005441	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.102320	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	40.063621	10179	2504
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.015834	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.013159	3	2	1.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.012127	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	12.767861	8645	1441	0.0.1.13.0.0.0.0.1.0.6.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_up_eqn; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite <- (add_0_l 0); only 1: nzsimpl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.043951	11693	2592
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	14.924134	10964	1644	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40	40.227578	4143	417
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.169045	18543	6927
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_combine	40	40.238629	32860	4547
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_antisym	40	40.204313	28194	7479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	14.844848	2734	796	1.0.1.10.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.nlt_1_r	40	0.048159	21	5	5	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_1_succ	40	0.043213	19	6	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.012805	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_nle	40	0.133596	23	11	0.4	synth with cache (only 1: unfold ltb, lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_aux	40	0.737551	307	92	1.2.0.0.5	synth with cache (only 1: intro H; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_incl	40	0.372310	57	21	0.0.3	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	40	14.626390	7040	1793	0.0.6.3.6.0.3.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_r	40	12.835466	7434	1862	0.4.1.9.0.0.0.0.0.10.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: red; only 1: intros a b l H; only 1: contradiction; only 1: destruct l'; only 1: simpl; only 1: contradiction; only 1: firstorder  (subst; auto); only 1: injection H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40	40.144841	19521	3896
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	40	40.308976	46079	4871
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.056885	17274	1927
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	40.073746	17821	3585
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_spec	40	0.013014	4	1	3	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0.008105	1	1	0	synth with cache (only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40	40.066357	1916	812
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.065272	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.063978	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40	40.065723	10941	1834
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.122950	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.515016	35616	2951
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_1_l	40	10.912440	7381	1766	0.4.2.1.1.15	synth with cache (only 1: apply ltb_ge; only 1: induction p; only 1: now f_equal; only 1: trivial; only 1: unfold ltb, lt; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40	40.128494	11963	3527
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	40.119100	15397	2974
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_r	40	40.216463	34519	10714
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	40	40.803426	22034	2752
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	40	40.812435	12893	813
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_split	40	40.100700	35362	4627
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	40.129004	13273	2987
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_refl	40	0.636804	706	57	27	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_l	40	40.260788	12563	4954
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.328064	130489	2472
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.440886	190064	2130
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40	40.045609	5969	1983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40	40.054815	14005	3724
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40	40.197936	10107	2802
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.035364	3	2	1.0	synth with cache (only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.388355	254	72	1.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.007900	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	40	40.075578	23600	3297
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.246973	9406	3454
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.042593	9525	2628
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	40	40.208948	72595	4238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40	40.152234	64046	4454
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	40	40.003613	312469	3003
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.222304	19932	3701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40	40.153234	19356	4638
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.029243	12	4	0.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.022314	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	40.266395	19668	2316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40	40.143849	10642	3061
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40	40.100238	26140	8345
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	6.439133	4330	540	13.1.12	synth with cache (only 1: intro RS'; only 1: intros; only 1: now apply mul_lt_mono_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.184554	48	24	1.0.1.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones	40	40.795576	35598	2924
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.144593	19806	2072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.057319	11120	2396
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40	40.095356	6300	1503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40	40.417723	9841	759
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	40.170656	22394	3408
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.023367	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	40	40.450283	201268	7395
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.009589	1	1	0	synth with cache (only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.011553	3	2	1.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.008584	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.007332	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.014176	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.005854	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40	40.305306	111613	1560
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	7.971685	3400	1874	0.0.1.0.0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40	40.089043	29637	2404
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond_dep	40	40.357331	142245	3825
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	40	18.078832	12869	1961	0.0.0.2.9.2.0.2.0.2.0.0.6.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: intros k H1 H2; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons_cons	40	0.186968	12	8	2.0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons	40	0.017429	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	40	0.014684	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_nth	40	40.084932	25691	5183
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.007461	1	1	0	synth with cache (only 1: solve [ auto ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond	40	40.340340	126733	3084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.049380	9161	3190
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	40	40.150189	24535	7516
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.090869	27190	3264
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tl	40	0.788388	403	88	5.2.0.0.1.3	synth with cache (only 1: induction l; only 1: intros l2; only 1: firstorder  discriminate; only 1: intros; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tran	40	0.019812	7	3	3.0.1	synth with cache (only 1: induction l; only 1: auto with datatypes; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appl	40	0.010847	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appr	40	0.011158	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40	40.309421	16792	2044
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	40	40.072167	17472	6567
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.054746	12053	4637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40	40.147676	13985	3698
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	40	40.206092	16262	5024
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	1.912521	878	188	9.6.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.023432	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	40	40.352744	47118	4931
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_compat	40	0.246170	53	10	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_nil	40	7.004747	4280	612	9.4.0.11	synth with cache (only 1: destruct l' as [| y l']; only 1: trivial; only 1: firstorder; only 1: now destruct l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_iff	40	40.358274	12390	3341
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_nil	40	0.329349	641	38	0.0.0.32	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.015556	4	2	0.2	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	40	0.266349	165	38	4.1.0.1.4	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	40	0.006325	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.prod_length	40	40.202639	23012	4131
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	40.098786	24488	7138
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40	40.063607	16118	2014
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_cons	40	6.899707	4461	779	3.10.14	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40	40.094481	2957	1077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40	40.136578	14205	3324
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40	40.056936	15397	2462
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	40	40.235951	8676	3412
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app	40	1.880599	758	288	0.0.0.1.1.1.0.1.5	synth with cache (only 1: induction n as [| n IH]; only 1: intros l1; only 1: intros; only 1: solve [ auto ]; only 1: intros [| x l] H; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: now rewrite IH).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	40	7.250167	2046	704	0.2.3.1.0.6	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt_iff	40	40.254926	18619	3948
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	40	40.288786	31750	4735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40	40.058710	14716	3989
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_refl	40	0.015794	3	2	0.1	synth with cache (only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	40.244713	16360	3341
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.317166	31941	3965
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	40	10.916426	3750	1435	0.5.0.0.0.3.0.0.0.1.1.1.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: intro l'; only 1: elim l'; only 1: auto with arith; only 1: intros a' y H H0; only 1: absurd (S (length y) <= 0); only 1: auto with arith; only 1: auto with arith; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_le_length	40	11.426773	4845	1678	4.3.3.0.1.1.0.0.1.4	synth with cache (only 1: induction n; only 1: destruct l; only 1: now simpl; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: now auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.217841	21522	3824
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond_dep	40	40.358799	145558	2881
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_trans	40	40.531560	29955	3675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40	40.093532	22528	3898
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40	40.045569	8548	4923
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.011861	4	2	0.2	synth with cache (only 1: unfold Z.sqrtrem, Z.sqrt, Pos.sqrt; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.005163	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.338216	128972	3222
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.117582	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.022660	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.010324	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.011574	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.177682	137	19	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	40	0.016678	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	40	0.011626	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0.010025	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	0.018327	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	0.017227	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	40	0.010736	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0.010542	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	40	0.010982	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	40	0.016854	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	40	0.017799	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	40.091384	23202	2893
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	40	0.011230	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	40	0.019904	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0.015372	1	1	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	40.246601	20993	3880
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	40	0.027273	4	1	3	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_le	40	40.076986	25516	3379
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	40	40.060406	12230	2262
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	36.445759	13028	2635	24.0.2	synth with cache (only 1: intros H; only 1: bitwise; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	40	23.647412	12511	2740	0.23.0.2	synth with cache (only 1: unfold Pos.min; only 1: rewrite Pos2Nat.inj_compare; only 1: unfold Z.le, Z.min; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.007323	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.020483	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0.007155	1	1	0	synth with cache (only 1: now injection 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.023698	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0.008878	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0.026662	13	3	3	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0.005816	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.259058	248	16	22	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.012263	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0.013610	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0.007021	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_ind	40	40.428738	25565	2678
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_trans	40	9.226516	3091	1170	0.0.0.0.3.15	synth with cache (only 1: intros EQ; only 1: intros H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40	40.338580	131533	3829
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	40	13.304573	5355	911	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	40	0.005529	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	2.752685	1189	272	0.6.0.1.1.1.6.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.123787	47451	3602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40	40.224026	20287	3884
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	40	40.622482	282714	2556
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_neq	40	3.631340	1146	322	1.2.2.0.4.0	synth with cache (only 1: intros n m H; only 1: red; only 1: intros H0; only 1: apply H; only 1: apply eq_IZR; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40	40.262538	25026	2944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40	40.192593	19527	2575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40	40.114175	37944	4453
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	40.047428	12862	2667
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	40	40.135024	26431	4891
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.107515	11037	3538
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40	40.170146	13282	2363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40	40.156839	16821	3580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.951836	683	125	4.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	40	40.484265	27901	5252
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.011763	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.013596	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.007465	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.014042	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0.007882	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.008330	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.006988	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.006820	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0.005280	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.012087	4	1	3	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0.008495	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0.008066	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40	40.260198	91231	4009
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40	40.159185	53819	8132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	1.466587	712	161	1.3.0.7	synth with cache (only 1: intros Hab; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40	40.127613	36589	9133
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40	40.292116	110084	3452
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0.020007	1	1	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0.015176	2	1	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.014993	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le_iff	40	13.336825	3559	1111	4.3.2.1.1.4.0.0.0.2.0	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: split; only 1: intros H; only 1: order; only 1: intros H; only 1: easy; only 1: easy'; only 1: easy'; only 1: revert q; only 1: intro n; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_lt	40	40.067732	16519	2223
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	40	0.015525	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.le_ge	40	0.005373	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.313286	117824	3558
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40	40.089018	18077	4176
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0.015296	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0.020861	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0.021761	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	33.166021	17522	3705	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.048911	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.247778	18381	3178
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	40	19.711220	11291	2411	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.070368	22415	2942
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	40.053731	13024	3214
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_strorder	40	40.339130	43490	4063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40	40.093482	4429	1162
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	40	2.303650	2404	225	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.248312	17091	3517
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.289178	16957	6736
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	4.148713	4508	157	0.70	synth with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0.027486	1	1	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in2	40	0.342096	378	56	5.6.6	synth with cache (only 1: intros; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	20.216037	27483	1203	27.54.18	synth with cache (only 1: intros; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	40	0.424467	192	19	4.14	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in21	40	0.010231	1	1	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in3	40	1.161713	1127	123	13.16	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40	40.094481	20054	5794
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.250610	23400	4327
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40	40.075234	22413	3488
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	40	0.022375	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.305889	217	36	0.0.0.15	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_cons	40	0.009145	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	40	0.031873	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.260501	18637	3343
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.023502	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.025138	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40	40.330016	9163	2437
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	2.024076	1874	396	0.0.0.0.0.0.0.0.0.13	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app_2	40	40.243541	24418	4950
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.100347	34023	3730
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all2	40	2.830104	802	312	1.0.0.0.0.5.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: destruct l; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_firstn	40	40.437362	34936	4412
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length	40	1.714353	682	229	2.0.1.0.0.0.0.0.4	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	40	0.024228	6	4	1.0.0.1	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_length	40	1.338216	663	160	1.0.0.0.0.1.0.0.0.0.3	synth with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: split; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40	40.110346	16676	3934
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_lt_trans	40	40.430618	28256	3759
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_app	40	1.317894	523	178	0.0.0.5.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40	40.247927	13715	2195
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	40	40.413428	24434	4516
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	40	40.262773	33333	4609
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	9.189502	7776	675	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	1.645915	1453	138	0.0.19.4	synth with cache (only 1: intros x x' Hxx'; only 1: apply min_mono; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40	40.289380	15485	2591
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.rev_trans	40	40.200408	66063	4190
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0.049289	27	3	9	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40	40.039213	8906	2778
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.068988	19859	4752
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40	40.109537	33015	1995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40	40.078358	21730	4612
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.012115	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.115930	15250	2070
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.069594	18222	1675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	40.595072	35561	3068
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.323430	17917	4300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_antisym	40	40.324913	31580	6152
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.020340	6	4	0.0.2.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40	40.107997	37768	3768
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	40.532072	18482	3822
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.008010	1	1	0	synth with cache (only 1: apply Z.testbit_Zpos).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40	40.256364	15950	2358
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.073528	25527	2870
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40	40.349329	144177	4456
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	40	0.010314	3	3	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40	40.260727	13749	3640
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40	40.249170	16959	3860
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40	40.094966	25870	6305
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40	40.102153	35205	4257
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.120496	47226	2961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.064719	16812	4584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40	40.258453	25168	3810
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	10.534216	4781	1203	0.2.2.1.1.1.7.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl Z.to_N; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40	34.269439	21661	3540	0.0.32.0.0.0.1.0.0	synth with cache (only 1: intros L R n; only 1: destruct (lt_trichotomy n z) as [H| [H| H]]; only 1: apply L; only 1: now apply lt_le_incl; only 1: apply L; only 1: now apply eq_le_incl; only 1: apply strong_right_induction; only 1: assumption; only 1: now apply lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	40	26.455523	18196	4403	2.2.0.0.9.1.0.0.0.0.3.0.7	synth with cache (only 1: induction n as [| n IH]; only 1: intro; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.526197	28544	1487
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40	40.172354	56606	10377
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	40.169247	57401	2043
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	40.259065	17231	3125
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.092357	22740	7582
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	40	40.180761	56844	1635
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_r_R1	40	40.068927	18021	2470
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	40	40.437970	12901	2785
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	32.980828	74357	1988	20.122	synth with cache (only 1: red; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40	40.091887	22134	4062
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40	40.112449	9350	3176
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	40.260817	18428	3437
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	40.076890	21134	4316
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_partorder	40	40.263694	17208	3397
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.014650	5	3	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.971389	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	40.126156	5846	1898
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	14.653765	2586	636	0.0.1.4.11	synth with cache (only 1: unfold Basics.flip, respectful; only 1: unfold clearbit; only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.403573	15995	4872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40	40.260358	15388	2596
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.083679	21513	5912
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.194761	59535	1566
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	40	10.152428	3700	1233	4.0.0.8.3	synth with cache (only 1: revert p q r; only 1: intros a b Ha; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	40.197586	21338	3122
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	40.057707	17016	2283
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	40	40.269202	11014	3075
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.043836	13043	2348
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.TestOrder.test	40	0.023434	13	3	1	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	40	40.090221	27895	4246
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_nil	40	0.021975	5	4	0.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40	40.133340	22334	4937
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	40	40.169036	16792	7582
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_l	40	0.768280	210	95	2.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.170575	28	15	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_rev	40	40.459662	6688	2087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.307430	9315	2059
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_rev	40	40.365855	6109	2378
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.213345	14601	3686
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40	40.134743	38796	2857
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.159593	20686	3083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40	40.030114	5255	2088
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40	40.275229	89080	2845
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0.009688	1	1	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40	40.536325	26640	1385
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40	40.259293	13671	2152
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.209710	71902	2558
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.024123	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40	40.275431	14805	2559
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.049941	11628	1595
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_r	40	9.896222	4645	1394	0.0.0.0.0.1.0.0.0.0.1.9.1.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: simpl; only 1: intros; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	40	40.322312	20912	6550
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.017042	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.016822	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.453142	31818	4969
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_r	40	0.009545	2	2	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40	40.108373	34884	4280
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.523331	23879	935
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.010338	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.single_z_r_R1	40	40.054397	12609	3781
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.094964	30	15	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	40.322789	10837	1770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40	40.267636	17065	2808
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40	40.084666	6392	1326
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40	40.088285	9822	1918
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40	40.064112	21532	2144
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_in	40	6.889451	2212	660	5.0.4.2.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: simpl in *; only 1: intros; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_length	40	0.191916	33	15	2.0.0.1.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: split; only 1: simpl in *; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40	40.112757	22445	4543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.278646	17593	3382
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj	40	40.127433	32689	4951
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.015014	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	6.977521	1242	259	0.14	synth with cache (only 1: unfold clearbit; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	15.701153	8567	2367	3.3.0.1.1.9.3.0	synth with cache (only 1: intros Compat Hl Hr; only 1: intros; only 1: apply max_case_strong; only 1: intros; only 1: destruct H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40	40.198495	43024	4146
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.125060	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.019268	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40	40.136170	41227	7997
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_removelast	40	40.386457	13554	4261
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	40	40.499983	16917	3785
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40	40.255591	85890	1635
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40	40.278046	16677	2748
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40	40.149243	41672	3030
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.018057	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.019160	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	40	19.236122	31614	1669	9.8.1.13.12.5.34.49	synth with cache (only 1: compute; only 1: revert l1 l2; only 1: induction l1 as [| x1 l1]; only 1: intros H; only 1: constructor 1; only 1: intro x; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40	40.282688	82489	1531
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_single_z_r_R1	40	40.075209	10874	1417
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.251551	71753	1569
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	40	40.390531	10960	2575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.080678	10031	3219
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_div2_up	40	1.122334	353	186	0.3.2.1.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40	40.129765	12494	4663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40	40.266786	23368	3219
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono	40	40.286761	22908	3704
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	40.204772	81723	2324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40	40.106913	18291	3692
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.198678	12471	5623
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	40	40.275436	19514	5525
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_1_r	40	0.092631	46	19	9	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.007131	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40	40.252170	21074	3630
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	40	40.279891	15601	5369
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	2.553160	1710	368	1.3.4.2.0.9	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.197444	48024	2226
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	1.168680	633	93	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.066106	16608	5602
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.025245	5	4	1.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.283639	26142	4139
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.050816	9988	1087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	26.106282	5717	1004	0.0.0.0.0.17.1	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40	40.038378	7692	3351
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40	40.131637	20428	4895
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	32.497289	7196	1900	1.0.1.17.1	synth with cache (only 1: intros; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	40	40.398379	28028	5423
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn	40	40.245794	19972	6661
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40	40.246908	13213	3809
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	11.190942	5975	1308	1.0.7.0.2.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: case ltb_spec0; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	22.289603	13210	3701	0.0.8.24.1	synth with cache (only 1: intros Compat Hl Hr; only 1: intro x; only 1: apply min_case_strong; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.243152	12370	2374
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	40	40.262245	22486	4463
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.289379	19504	3359
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40	40.197002	49017	1938
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	40.580134	38453	1802
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40	40.151155	29139	1943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40	40.265696	14717	3327
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40	40.070450	13648	3324
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono	40	40.294695	23422	4745
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.325488	19227	6718
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40	40.061881	14687	2440
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	40	40.081968	30884	1076
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_le_contravar	40	40.038021	8715	2528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.157334	5831	2193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40	40.066971	18219	4050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.085690	20434	4617
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40	40.059405	19781	2200
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	40	40.317114	45144	6504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40	40.086354	13979	3281
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40	40.164050	10601	3261
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40	40.060777	17846	3307
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	40	40.585756	42521	1414
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.061099	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.117779	43939	4472
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.124706	34499	9797
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.incl_Add_inv	40	40.144609	25377	4842
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40	40.203032	50266	1827
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.134506	9714	2113
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.042569	4	4	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	40	40.517717	24044	2581
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40	40.226406	86210	9011
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40	40.214317	50180	1817
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.303086	30845	5906
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.055229	9574	3201
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40	40.186426	42907	1510
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	40	0.138738	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40	40.092136	22342	5227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40	40.138465	26667	4421
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40	40.239212	11033	3001
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_gt_1	40	40.381433	34965	5059
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40	40.143941	13077	4156
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40	40.243903	2991	972
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	17.180480	14174	443	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_succ_r	40	40.361378	19154	5042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.154625	16710	4068
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	40	40.389163	30156	5718
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	40	2.819589	903	200	0.2.3.2.0.0.12	synth with cache (only 1: intros H; only 1: destruct x; only 1: intros; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.644044	6	5	0.0.1.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add	40	40.219370	25213	5787
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.063522	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.061446	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40	40.156619	18078	2988
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.246349	9870	2073
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40	40.096282	32926	2828
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.153996	16485	3394
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40	40.068955	22199	3578
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	1.292745	4093	156	70	synth with cache (only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.341242	163	41	0.6.2.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.038949	10	5	0.1.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.055431	12593	5001
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.162584	8479	2483
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40	40.252553	5866	1659
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	2.382435	675	398	0.0.0.0.0.0.0.4.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: intros; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.723573	188	110	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub	40	40.221754	21584	5404
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove	40	40.149465	38071	5120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40	40.115794	9066	2116
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.097448	28240	4457
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	40	3.724751	2160	579	1.1.2.5.0.0.0.12	synth with cache (only 1: intuition_in; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: unfold elt in *; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.040675	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40	40.260318	25221	3239
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.086420	27301	5769
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40	40.044543	12137	2782
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	2.945515	1535	439	0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.538041	18200	2582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40	40.215073	9817	3931
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.106171	26605	3439
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.178989	10135	3511
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40	40.129898	52782	3741
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	40	40.187383	15690	4401
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_div	40	40.054244	9672	1089
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40	40.197790	14811	2151
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40	40.445557	2760	1116
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double_var	40	29.480182	7969	699	3.16.7.16	synth with cache (only 1: Z.nzsimpl'; only 1: Bool.destr_bool; only 1: ring_simplify; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.363722	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	40	40.447714	23352	4864
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.262648	19	12	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40	40.108054	10581	1953
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40	40.123816	12789	5105
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40	40.066491	24335	1682
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_2	40	40.479485	24604	4634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.102749	8199	4665
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40	40.204614	14180	2745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	3.155204	540	306	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40	40.267380	20090	3800
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.097860	20841	3410
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	40	40.542001	16846	1970
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40	40.174768	59134	9416
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.102946	29237	4821
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.279885	123	46	2.0.0.0.0.0.6	synth with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40	40.270457	6716	1989
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.133994	18	6	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40	40.567089	25064	3341
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.010911	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.ZL0	40	0.005159	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_In	40	40.292706	16929	3199
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.817224	51	9	8	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.048367	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40	40.051876	12055	4551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40	40.028086	5621	2622
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40	40.095535	9271	3250
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40	40.232044	6474	1251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.097388	17358	4500
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	40.235584	27824	4201
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.020992	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.021487	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40	40.338572	11707	2171
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.295818	11506	1968
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.222016	6862	1390
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	40	40.352523	22498	5281
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.244808	7169	1592
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	40	40.383013	30256	5059
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40	40.159052	18410	1948
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	40	40.065086	20512	2112
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.552609	42632	4217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40	40.291830	9998	1534
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	1.980714	826	119	14.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40	40.285013	19762	2633
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt	40	1.437603	477	192	0.0.0.0.0.0.5	synth with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: congruence; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40	40.245882	8458	1430
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40	40.130234	45287	2937
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.088309	30539	3546
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.027947	6002	2328
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40	40.109557	11903	4975
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.059739	16418	2712
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	40	40.305851	17081	4603
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nodup	40	40.182387	60842	5705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40	40.232950	13580	1817
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	40.085962	24682	3827
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40	40.247272	16575	2263
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_inv	40	40.532710	21498	3778
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	40.153586	17344	1903
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	40	40.167453	32974	3429
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.132226	51979	1910
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40	40.388900	4452	1121
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add_distr	40	40.335469	13233	4623
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40	40.100288	33847	4291
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	40	40.357957	20894	5443
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.R_rm	40	40.055015	13346	5149
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40	40.127874	13204	3188
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	40	40.080364	24566	1649
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40	40.126250	11638	2475
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_epsilon	40	40.072561	7452	1841
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	40	40.161353	46053	4321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.038163	9522	2315
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40	40.060154	20341	1796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	40.074137	14604	4414
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ	40	40.322207	18980	4893
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.171206	8746	1753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.105291	20658	3809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40	40.149503	6074	2470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40	40.065830	14855	3325
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	40	40.344825	29645	4902
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_minus_eq	40	40.194971	41401	3691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40	40.274376	19209	4466
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	40	27.960311	19706	3615	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	40	0.446631	60	28	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth_error	40	40.292449	27144	4133
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40	40.085197	6135	2559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40	40.130779	19977	3953
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40	40.115882	11313	4744
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.256644	14594	1939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.208938	3146	1368
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	40	40.394433	44787	5191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	40.190984	10173	2164
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40	40.187969	9466	2238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	40.248531	19652	2156
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	40.416222	20214	7428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.270039	13237	1588
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	40	40.416595	20927	5468
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.431391	26525	6239
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.041665	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_l	40	0.009156	3	2	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_r	40	0.040838	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth	40	40.279420	23368	5221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40	40.108692	7416	2028
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.299047	32946	2412
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.026649	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.313465	33868	2424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.033955	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40	40.175485	21487	2628
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.117227	9	4	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.070496	19146	2220
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40	40.139007	52039	4503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40	40.096878	4483	2167
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40	40.129931	8395	2302
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.252858	17032	2406
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_r	40	10.715374	4680	1382	2.0.0.0.2.1.0.0.3.0	synth with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	40	40.227938	22903	5919
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40	40.120842	9732	2927
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_incl_length	40	40.324585	18909	3727
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.152720	17118	2399
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.546000	963	227	1.0.7.2.0.2	synth with cache (only 1: apply max_monotone; only 1: repeat red; only 1: intros q r; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.049424	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.024285	6	4	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	40.089147	25355	4221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40	40.276154	13196	2188
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_length_incl	40	40.089364	29870	4559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	40.066222	18296	3773
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	40	4.833610	2079	509	0.0.13.2	synth with cache (only 1: apply max_monotone; only 1: intros H; only 1: intros Hnm Hpq; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40	40.214197	15542	3331
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40	40.089509	29088	4963
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.410703	29218	4891
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.020617	7	3	0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.025924	5	4	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.completeness_weak	40	40.069001	16304	6981
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_le	40	40.507418	22798	3349
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.199838	14833	3597
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40	40.128400	12075	3366
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.of_nat_succ	40	2.064523	1844	231	0.7.0.0.2.0.0.0.27	synth with cache (only 1: PeanoNat.Nat.cases n; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: induction n; only 1: auto; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40	40.162712	13813	2387
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40	40.044640	8702	2356
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	40	40.077114	12330	4459
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.094354	20501	4146
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_l	40	40.235789	34143	4104
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NoDup_map_inv	40	40.112299	36705	5356
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_op_succ	40	7.494421	4370	732	1.2.16.1.0	synth with cache (only 1: induction p; only 1: simpl; only 1: congruence; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40	40.267143	3684	1340
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_length	40	40.342819	46487	3883
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.024528	7	4	0.1.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: solve [ inversion H ]; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40	40.088134	8326	4603
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40	40.090594	28528	3967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40	40.171756	18093	2648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.308409	23187	3790
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_l	40	40.245487	29194	5593
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_nth	40	40.275959	16487	4367
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.327708	31321	4476
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.046105	8331	2596
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.120669	12940	3854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.074925	7589	4424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.324766	6413	1393
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40	40.283440	24455	2958
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_plus_distr	40	16.762399	7062	910	1.1.0.2.14.9	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros a b; only 1: intros x y z; only 1: intro; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40	40.149474	2651	1098
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_EM_T	40	0.035720	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	8.044660	5296	1033	1.1.15.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40	40.248910	5656	1839
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.116823	13538	2956
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	40.187034	12080	2285
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40	40.249545	13501	3092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.289331	18408	3960
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_l	40	40.432414	53718	4447
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_max_distr	40	40.334182	17140	3855
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_min_distr	40	40.330567	21339	4565
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.in_seq	40	40.131979	48896	2475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	4.076398	925	486	1.2.2.2.0	synth with cache (only 1: intros a n; only 1: unfold lnot; only 1: rewrite !ones_equiv; only 1: bitwise; only 1: now destruct a.[m]).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	15.212176	9163	2037	0.1.0.0.1.6.1.0.4.2.0.0.14	synth with cache (only 1: split; only 1: induction l as [| a l IH]; only 1: easy; only 1: simpl; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intros; only 1: firstorder; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40	40.131688	20710	3485
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	1.860128	2072	275	0.0.20.1	synth with cache (only 1: intros; only 1: generalize (rev_involutive (A:=l)); only 1: inversion_clear H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40	40.282584	22088	3177
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40	40.275052	17537	3009
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.242715	10097	2219
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40	40.061024	15104	2031
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40	40.052569	15369	2566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40	40.050618	11578	4500
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	40.161140	18494	2218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40	40.130589	7417	2045
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	40	40.386300	19727	4212
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40	40.056177	15617	2926
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.256055	9573	2032
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_NoDup	40	40.422409	78823	2521
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.017085	4	2	0.2	synth with cache (only 1: inversion 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40	40.270640	5214	1442
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	40	40.279586	10281	2641
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.186497	11432	2326
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.254838	24921	3560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.030066	4	3	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.142262	18903	3903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40	40.207753	12301	2764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40	40.142504	51461	5510
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40	40.197693	12079	2063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40	40.151160	20811	4242
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	40.152667	53671	3971
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.050255	8397	3100
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40	40.138094	15303	4495
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40	40.138175	17977	3608
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_minus_distr	40	40.048296	11191	882
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_of_nat	40	40.257461	35920	5736
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	3.246860	1028	357	0.0.4.5	synth with cache (only 1: intros x y z; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.362865	34262	3619
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.149100	14446	4533
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.075568	9141	4379
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	40.330689	35851	3964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40	40.292576	7491	3373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.172948	12	5	0.0.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40	40.287101	13932	4557
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.324986	14377	1627
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_impl	40	21.988188	32636	3411	0.10.1.5.2.8.21.4	synth with cache (only 1: intro H; only 1: intros E; only 1: intros l1 l2; only 1: induction 1; only 1: constructor; only 1: auto; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.362157	20408	3144
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40	40.044410	11730	2542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40	40.074204	8721	3000
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.325592	26708	4959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40	40.133695	7899	3809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40	40.216515	15038	3482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40	40.162719	14022	2875
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.111799	14380	4643
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.202471	19948	2756
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40	40.117954	14451	5135
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_impl	40	4.355895	4289	561	4.3.10.10.0.0	synth with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.213950	11912	2749
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_refl	40	0.005609	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.053543	8717	2558
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40	40.197680	19907	3575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.180183	10499	3522
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrt_spec	40	40.354998	24238	4382
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	40.120381	38811	4902
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	40	40.243956	37618	5082
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40	40.228955	24195	3769
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.206188	75208	6630
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40	40.213229	17112	2753
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40	40.453133	21999	3011
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40	40.073100	19195	4605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.188481	13275	3011
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.331032	20463	3870
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	25.858739	8574	1248	0.0.0.0.13.0.18	synth with cache (only 1: compute; only 1: intros x1 x2 H1 x3 x4 H2; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40	40.043171	10055	2657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.061573	15300	4561
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.059595	17422	2994
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40	40.076684	13352	2362
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40	40.175030	21199	4770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.161003	7869	1540
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.118714	12019	2628
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.098694	26293	7235
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40	40.167527	7199	2175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40	40.178222	7830	3463
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40	40.318026	21562	3308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.064654	17949	4552
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_l	40	40.075324	20251	5514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40	40.213765	18413	3458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40	40.137625	13978	3610
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40	40.147347	10805	2346
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_r	40	40.254923	25803	6047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40	40.086080	15431	4335
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40	40.104269	3259	1547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.130074	17934	2847
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	40.271913	37034	4902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40	40.188974	37883	4884
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	40	40.293475	43103	5574
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app	40	25.531036	16978	3649	0.0.4.6.2.0.0.1.0.8.0.1.0	synth with cache (only 1: induction l1; only 1: induction l1'; only 1: simpl; only 1: induction 1; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H; only 1: intro y; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40	40.120536	9108	3941
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40	40.221051	17732	3562
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40	40.390575	7857	1909
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.008516	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.187720	10430	2580
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	40.326800	8604	1735
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40	40.345310	17989	4225
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40	40.162079	9982	3173
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	40	0.029801	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	40.271570	43072	3952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40	40.083093	9779	2364
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40	40.055305	11355	4570
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40	40.164312	6537	2634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.152877	8991	4719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	40.223254	24434	4377
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.202997	20080	3924
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.110789	11849	4248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40	40.165554	63640	5869
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40	40.292337	5637	1681
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	40	40.339094	32284	4470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40	40.211354	12247	3009
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.138558	23600	1107
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.188586	15029	3759
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40	40.178194	15675	3122
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.487645	56664	3259
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	40	40.480793	62029	5100
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.429864	32582	4428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40	40.202551	13786	2919
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	40	40.297922	25779	4892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40	40.179217	10370	1789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40	40.057201	14442	3893
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.195781	18816	3683
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40	40.097673	28017	6253
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40	40.184296	13677	4187
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.054143	13598	4875
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40	40.043989	10593	2591
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.130147	44833	4073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40	40.172506	11833	2804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.195312	15823	2600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40	40.220300	11222	2904
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.272346	37697	3769
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40	40.053620	6632	1836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40	40.154077	17156	3445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40	40.188396	12143	3223
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40	40.288371	19186	3011
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_spec	40	22.876272	46841	2422	1.1.1.2.4.7.0.1.3.2.31.15	synth with cache (only 1: revert n; only 1: destruct n; only 1: simpl; only 1: intros Hy; only 1: intuition; only 1: simpl; only 1: compute; only 1: induction n as [| n IH]; only 1: destruct 1; only 1: auto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.040975	9831	2502
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_greatest	40	40.413429	24676	5064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40	40.282495	14256	2289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40	40.273836	13836	2233
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40	40.237942	7884	932
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.146798	54911	6104
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.104315	14637	4009
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40	40.160296	14902	1832
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40	40.036270	8911	1842
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Peqb_true_eq	40	40.529354	78483	5376
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40	40.362551	53078	5016
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40	40.095510	13942	3770
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40	40.332409	20716	3551
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pminus_mask_Gt	40	40.452007	37400	4618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40	40.161912	22092	5338
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	23.189889	10666	2391	0.0.10.2.7.0	synth with cache (only 1: intros a n H; only 1: symmetry; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40	40.022193	5009	1814
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40	40.206962	9828	3513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40	40.133157	11556	3812
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40	40.048391	11884	4353
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	40	40.380423	38498	5076
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40	40.439689	14867	2198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40	40.213775	14529	1508
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40	40.188768	4218	2341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40	40.185936	20857	3401
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40	40.109356	9150	1472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40	40.064398	17910	2923
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40	40.196499	7482	1618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40	40.192895	14874	3102
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Dcompare	40	40.531962	54623	2536
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40	40.063725	21572	5805
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.167720	6502	1475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.029064	8950	1924
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.054706	17942	4623
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.057619	16143	2185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.079229	26191	3170
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.059127	17889	3041
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40	40.060738	18372	5214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.057608	17349	3154
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40	40.053085	15600	3403
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40	40.059956	24641	3488
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40	40.203157	4404	1414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.054396	15327	2735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.043996	13291	3673
