
Coq.micromega.OrderedRing.rplus_morph_Proper	40	6.11	search with cache (only 1: intros x y H z; only 1: firstorder).	0.262191057205	186
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	6.29	search with cache (only 1: intros x y H z; only 1: firstorder).	1.01329898834	1522
Coq.micromega.OrderedRing.ropp_morph_Proper	40	19.4	search with cache (only 1: intros a b H; only 1: firstorder).	0.708334207535	878
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	14.9	search with cache (only 1: intros x y H; only 1: intuition).	5.87866401672	662
Coq.micromega.OrderedRing.Rplus_0_l	40	34	search with cache (only 1: firstorder).	0.732712030411	1148
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0474469661713	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0506548881531	2
Coq.micromega.OrderedRing.Rplus_comm	40	2.1.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0830821990967	7
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0479590892792	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0492391586304	2
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40	6.0.6.4.0.1.0	search with cache (only 1: intros n m; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: now rewrite H; only 1: rewrite Rlt_le_neq in H; only 1: intuition).	24.9212999344	12368
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).	0.107399225235	11
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	0.0.0.2.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.455037117004	23
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.0	search with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0256450176239	3
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	1.0	search with cache (only 1: intros; only 1: now apply Z.ge_le).	0.120353937149	71
Coq.micromega.Ztac.elim_concl_lt	40	3.0	search with cache (only 1: intros; only 1: Z.order).	0.0546450614929	15
Coq.micromega.Ztac.Zlt_le_add_1	40	2.7	search with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.266352176666	108
Coq.micromega.Ztac.add_le	40	0.0	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0172619819641	2
Coq.micromega.Ztac.mul_le	40	0.0.3.0	search with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.0357601642609	18
Coq.micromega.ZifyInst.PropAnd	40	8.9	search with cache (only 1: constructor; only 1: tauto).	0.29757809639	202
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0386300086975	2
Coq.micromega.ZifyInst.PropArrow	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0332970619202	2
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0454318523407	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0305919647217	3
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.0.0.0.4.0.0.0.0.3.2	search with cache (only 1: intro n; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	4.6902320385	3178
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0215060710907	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.021035194397	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0200369358063	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0207169055939	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0207960605621	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	0.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0724351406097	5
Coq.micromega.ZCoeff.ring_ops_wd	40	3.1.1.4	search with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	0.722932100296	240
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40	2.0.15	search with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto with arith).	2.62204408646	992
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	6.0.5.0	search with cache (only 1: intros; only 1: rewrite <- (Rmult_0_l x); only 1: rewrite <- (Rmult_comm x); only 1: auto with real).	6.00494098663	2499
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply Rlt_le_trans with 1; only 1: auto with real; only 1: pattern 1 at 1; only 1: replace 1 with 0 + 1; only 1: auto with real; only 1: auto with real).	0.460123062134	105
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	4.0.1.0.0	search with cache (only 1: intros x H; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: auto with real).	0.0938749313354	16
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.0.0.4.1.0.0	search with cache (only 1: split; only 1: intro EQ; only 1: now rewrite EQ; only 1: destruct x; only 1: reflexivity; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	2.04885196686	715
Coq.micromega.ZMicromega.lt_le_iff	40	6.0	search with cache (only 1: intros a; only 1: apply Z.lt_le_pred).	0.110239028931	8
Coq.micromega.ZMicromega.le_0_iff	40	2.2.4.1	search with cache (only 1: intros; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	1.30014300346	356
Coq.micromega.ZMicromega.le_neg	40	0.0.0.2.0.0.1.1.9.1.0.3	search with cache (only 1: split; only 1: intros; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: destruct x; only 1: compute; only 1: intuition congruence; only 1: intros Hx; only 1: easy; only 1: simpl; only 1: intros H; only 1: easy).	20.6028869152	13877
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0	search with cache (only 1: reflexivity).	0.108445882797	1
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	2.0.0.0.0.7.0	search with cache (only 1: intro; only 1: destruct x; only 1: simpl; only 1: split; only 1: Z.order'; only 1: auto with zarith; only 1: intuition).	0.858080863953	345
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40	24.3.0	search with cache (only 1: rewrite <- !jump_add; only 1: unfold jump; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	5.96784877777	6793
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	1.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0433900356293	4
Coq.micromega.Env.nth_pred_double	40	3.0.1	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.148252010345	20
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.5.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: reflexivity).	0.0315980911255	10
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	8	search with cache (only 1: destr_bool).	0.0362958908081	17
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0141432285309	1
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.013904094696	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	1.0.0.30	search with cache (only 1: intros [| n]; only 1: reflexivity; only 1: simpl; only 1: congruence).	1.58822607994	2765
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	1.1.5	search with cache (only 1: destruct f; only 1: reflexivity; only 1: auto).	0.0322411060333	11
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	0.1.0.6.8.19.1.6	search with cache (only 1: destruct f; only 1: reflexivity; only 1: destruct c; only 1: firstorder; only 1: induction f; only 1: auto; only 1: auto; only 1: auto).	23.8428709507	57633
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.0.0.3.0.7.0.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: simpl; only 1: reflexivity).	2.60526800156	2706
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40	3.31	search with cache (only 1: fix gcd_divide 1; only 1: auto).	1.18611502647	1987
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	1.15.7.12	search with cache (only 1: intros x; only 1: split; only 1: firstorder; only 1: tauto).	12.2870490551	19921
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0325450897217	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	8	search with cache (only 1: firstorder).	0.913029909134	9
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	1.10.3.2.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: repeat rewrite make_conj_cons in *; only 1: unfold eval_clause at 2; only 1: tauto).	5.03014612198	2590
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0660769939423	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	0.0.0.0.0.0.0.0.4.0.11	search with cache (only 1: destruct x; only 1: simpl; only 1: now try destruct p; only 1: simpl; only 1: split; only 1: auto with zarith; only 1: auto with zarith; only 1: simpl; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	3.61837792397	2230
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0112571716309	1
Coq.micromega.EnvRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0124790668488	2
Coq.micromega.EnvRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0112619400024	1
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40	59.11	search with cache (only 1: simpl; only 1: firstorder).	2.99747204781	4353
Coq.micromega.EnvRing.Pphi1	40	23	search with cache (only 1: firstorder).	0.699805021286	495
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40	0.0.4.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.0370919704437	13
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	14.2498559952	2234
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	7.31147384644	1321
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.1	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.140640974045	5
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0459609031677	8
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.1.2.0.0.1.0.13.5	search with cache (only 1: revert l; only 1: induction M; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: rsimpl).	18.599490881	6547
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0183880329132	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.019483089447	2
Coq.micromega.RingMicromega.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0167400836945	1
Coq.micromega.RingMicromega.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0184469223022	1
Coq.micromega.RingMicromega.rlt_morph_Proper	40	1	search with cache (only 1: exact (SORlt_wd sor)).	0.0196058750153	2
Coq.micromega.RingMicromega.rminus_morph_Proper	40	0.0.0.0.2	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0680360794067	7
Coq.micromega.RingMicromega.cleb_sound	40	32.9	search with cache (only 1: intros; only 1: firstorder).	3.190762043	3371
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	5.9.11.0	search with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	2.57549595833	1261
Coq.micromega.RingMicromega.eval_pol_mul	40	6.6.20.0	search with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	3.28170704842	1809
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.2.2.0.2	search with cache (only 1: firstorder; only 1: induction l; only 1: constructor; only 1: simpl; only 1: auto).	0.0473580360413	42
Coq.micromega.Refl.make_impl_map	40	2.0.2.0	search with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: simpl; only 1: firstorder).	0.0439109802246	8
Coq.micromega.Refl.make_conj_cons	40	4.0.7.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: firstorder).	2.55218505859	3104
Coq.micromega.Refl.make_conj_impl	40	1.0.8.1.0.3.2.0	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: tauto).	30.5988321304	24337
Coq.micromega.Refl.make_conj_in	40	0.1.1.0.0.1.6.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: destruct l; only 1: firstorder; only 1: subst; only 1: auto; only 1: firstorder; only 1: subst; only 1: auto).	8.88127183914	9148
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.13.0	search with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	2.48443508148	796
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.083536863327	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.2.8	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.721282958984	383
Coq.rtauto.Bintree.map_app	40	0.0.0.0.0.0.2.0	search with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0434060096741	10
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.028822183609	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.0.0.7.0.0.0.3.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: auto with arith; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	14.6303961277	12644
Coq.rtauto.Bintree.Lget_app_Some	40	0.2.3.0.3.0.7.1.2	search with cache (only 1: induction l; only 1: simpl; only 1: intro Pdec; only 1: inversion 1; only 1: intros l2; only 1: simpl; only 1: intros [| i]; only 1: trivial; only 1: auto).	21.7698431015	18944
Coq.rtauto.Bintree.Tget_Tempty	40	3	search with cache (only 1: now intros []).	0.0198221206665	4
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	3	search with cache (only 1: now intros []).	0.0199129581451	4
Coq.rtauto.Bintree.get_Full_Gt	40	2.12.5	search with cache (only 1: intro i; only 1: fix sqrtrem_spec 1; only 1: auto).	9.20169687271	8541
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	2.11.9.1.2	search with cache (only 1: intros; only 1: intro H; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	11.5405311584	17956
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40	0.3	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.0267949104309	12
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40
Coq.rtauto.Rtauto.compose1	40	5.2.0.5.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: auto; only 1: intros A H; only 1: simpl; only 1: firstorder).	1.37498807907	1772
Coq.rtauto.Rtauto.compose2	40	10.1.1.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: auto; only 1: intros A H; only 1: firstorder).	3.57010793686	2951
Coq.rtauto.Rtauto.compose3	40	0.0.9.0.1.0.1.0	search with cache (only 1: induction F; only 1: intros A B C H; only 1: auto; only 1: intros A B C H; only 1: simpl; only 1: intro Dec; only 1: apply IHF; only 1: auto).	6.03867697716	4313
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40	3.9.8	search with cache (only 1: intros S F; only 1: fix sqrtrem_spec 1; only 1: auto).	4.71504497528	6403
Coq.rtauto.Rtauto.project	40	5.4	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.214853048325	145
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0716359615326	1
Coq.omega.OmegaLemmas.Zred_factor1	40	4.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: change_no_check 2 with (1 + 1); only 1: now Z.nzsimpl).	0.077241897583	13
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	2	search with cache (only 1: now Z.nzsimpl).	1.34861111641	109
Coq.omega.OmegaLemmas.Zred_factor4	40	19.12	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: trivial).	23.9261109829	4625
Coq.omega.OmegaLemmas.Zred_factor5	40	5	search with cache (only 1: now Z.nzsimpl).	0.0397598743439	6
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.0115740299225	1
Coq.omega.OmegaLemmas.new_var	40	0.9	search with cache (only 1: intro n; only 1: now exists n).	0.0377700328827	41
Coq.omega.OmegaLemmas.OMEGA1	40	3.1	search with cache (only 1: intro EQ; only 1: now rewrite EQ).	0.0156810283661	6
Coq.omega.OmegaLemmas.OMEGA2	40	2.4.0.7	search with cache (only 1: destruct x; only 1: auto; only 1: easy || now destruct y; only 1: easy).	1.61703300476	296
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	10.15.5	search with cache (only 1: intros Hx Hxy; only 1: rewrite Hx; only 1: now subst).	2.04075312614	2340
Coq.omega.OmegaLemmas.OMEGA6	40	1.0.0.1.4.0.12.10	search with cache (only 1: destruct x; only 1: intro H; only 1: now intros ->; only 1: simpl; only 1: intros x; only 1: now intros ->; only 1: intros Hx Hxy; only 1: easy || now destruct Hm).	11.1175811291	2536
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	2.23.1.1	search with cache (only 1: destruct x; only 1: auto with relations; only 1: easy || now destruct y; only 1: easy).	38.3203799725	24459
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.025221824646	3
Coq.omega.OmegaLemmas.OMEGA12	40	1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0228219032288	3
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0554239749908	3
Coq.omega.OmegaLemmas.OMEGA15	40	0.1.2.2	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0738120079041	15
Coq.omega.OmegaLemmas.OMEGA16	40	3.5	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0552651882172	19
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0400819778442	2
Coq.omega.OmegaLemmas.OMEGA18	40	2.3.1.1	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now intros ->).	0.138840913773	47
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0484001636505	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	0.0.1.10.20.0	search with cache (only 1: intros; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	7.38121795654	7628
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0637829303741	6
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.0.4.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0790958404541	15
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0633628368378	6
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0608389377594	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0567741394043	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0735709667206	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	search with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.059014081955	3
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	0.1.2.0	search with cache (only 1: revert q; only 1: intros; only 1: rewrite Pos.eqb_eq; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).	0.507007837296	112
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.0945510864258	9
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.0.3.9	search with cache (only 1: intros a Ha; only 1: inversion 1; only 1: simpl; only 1: trivial).	0.194257974625	119
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	0	search with cache (only 1: reflexivity).	0.0390689373016	1
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	1	search with cache (only 1: auto with arith).	0.0181260108948	2
Coq.funind.Recdef.Splus_lt	40	8	search with cache (only 1: auto with arith).	0.0267159938812	13
Coq.funind.Recdef.SSplus_lt	40	10.1	search with cache (only 1: apply Nat.lt_succ_r; only 1: auto with arith).	0.263239860535	183
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0602378845215	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.0	search with cache (only 1: intro EQ; only 1: discriminate).	0.0604109764099	2
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	0	search with cache (only 1: assumption).	0.012501001358	1
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0121929645538	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40	56	search with cache (only 1: CRelationClasses.simpl_crelation).	17.9962980747	9112
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40	1.3.0.0.0.0.0.0.0	search with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	17.3973259926	519
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40	0.5.4	search with cache (only 1: intro P; only 1: elim (PaddX_ok2 P); only 1: auto).	8.43801307678	1064
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	11.0.1	search with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	4.41239309311	416
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	1.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.16905713081	57
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.2.0.0.1.0.0.1.0	search with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.38325405121	594
Coq.setoid_ring.Ring.bool_eq_ok	40	0.0.0.0.0.3	search with cache (only 1: intros [| ] [| ]; only 1: auto; only 1: auto; only 1: auto; only 1: simpl; only 1: trivial).	0.175790071487	16
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0467810630798	1
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0481390953064	2
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0480010509491	3
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0513949394226	4
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	6	search with cache (only 1: trivial).	0.0708150863647	12
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.058767080307	1
Coq.setoid_ring.Field_theory.rsub_0_l	40	1	search with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.0982801914215	2
Coq.setoid_ring.Field_theory.rsub_0_r	40	3.0	search with cache (only 1: rewrite rsub_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.110950946808	5
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	24.1	search with cache (only 1: intros; only 1: eauto).	2.06002116203	759
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40	9.34.31	search with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	4.83459401131	4069
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40	0	search with cache (only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.0575828552246	1
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.117541074753	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.118500947952	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40	10.0.1.1	search with cache (only 1: unfold NPEequiv; only 1: simpl; only 1: intros; only 1: now rewrite (morph1 CRmorph)).	20.5331180096	722
Coq.setoid_ring.Field_theory.PE_1_r	40	7.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	1.4992609024	124
Coq.setoid_ring.Field_theory.PEpow_0_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: eauto).	0.418570995331	3
Coq.setoid_ring.Field_theory.PEpow_1_r	40	4.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.0910978317261	7
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.0.0.1.3.1	search with cache (only 1: simpl; only 1: destruct l1; only 1: intros; only 1: trivial; only 1: destruct 1; only 1: trivial).	3.26614999771	274
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	5.1	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.322399139404	21
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	0.0.4.1	search with cache (only 1: intros; only 1: destruct 1; only 1: simpl; only 1: ring [ phi_0 phi_1 ]).	0.13978099823	13
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0805678367615	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0803301334381	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0800149440765	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	1	search with cache (only 1: exact eq_equivalence).	0.0505938529968	2
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	1.1.1.23	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	3.42157506943	2666
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	0.1.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0690400600433	4
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	2	search with cache (only 1: f_equiv).	0.04740691185	3
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	22	search with cache (only 1: now repeat split).	0.56813287735	231
Coq.setoid_ring.Ring_theory.IDmorph	40	3.1.1.2.2.2.1.1.2	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: auto).	1.1361310482	1168
Coq.setoid_ring.Ring_theory.Eqsth	40	4.6.3.3	search with cache (only 1: constructor; only 1: constructor; only 1: congruence; only 1: congruence).	0.298413038254	453
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	7.7.2	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.690498828888	582
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.157232999802	4
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	65	search with cache (only 1: firstorder).	17.4305939674	32536
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	3.3	search with cache (only 1: intros a b H; only 1: trivial).	0.0288949012756	8
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.0.0.7	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.130561828613	43
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	6	search with cache (only 1: solve_proper).	0.0248210430145	7
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0228199958801	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0225219726562	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	3.2.1.1.1.1.2.2.2	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intros x y H; only 1: auto).	1.16105794907	1144
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	18	search with cache (only 1: firstorder).	0.550830841064	270
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	98.6	search with cache (only 1: intros a b H; only 1: firstorder).	32.0757069588	88073
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	18	search with cache (only 1: firstorder).	0.893635034561	563
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	8.6	search with cache (only 1: intros n m LE LT; only 1: firstorder).	0.439904928207	355
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	11.7	search with cache (only 1: intro n; only 1: firstorder).	0.560715913773	603
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	3.4	search with cache (only 1: intros; only 1: auto).	0.0333199501038	9
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	0.25.21.12	search with cache (only 1: cut (1%positive = 1%positive); only 1: intros EQ; only 1: firstorder; only 1: constructor).	6.68199896812	10383
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0380189418793	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0418610572815	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0441842079163	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0458061695099	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0434730052948	1
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	2	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0471448898315	3
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0433180332184	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.2.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0536160469055	6
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.3.0.0.0.0.0.0.0.5	search with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	4.34837198257	1881
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (SRadd_ext SReqe)).	0.0456900596619	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (SRmul_ext SReqe)).	0.0453410148621	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0430970191956	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0427050590515	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0418930053711	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0432510375977	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.160377979279	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.1.1.1.1	search with cache (only 1: induction x; only 1: simpl; only 1: norm; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	0.11284995079	18
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0436310768127	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.045539855957	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0435411930084	1
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0445091724396	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	1.0.0.2	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.178885936737	7
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	0.0.6	search with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	0.105079889297	9
Coq.setoid_ring.Cring.cring_div_theory	40	1.7.2.0.0.0.0.7	search with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: subst; only 1: rewrite Z.mul_comm; only 1: reflexivity).	6.03946304321	1481
Coq.setoid_ring.Cring.Zcri	40	12.12.20	search with cache (only 1: intros H1; only 1: repeat red; only 1: auto with zarith).	3.40292787552	2680
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0428130626678	1
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0443480014801	2
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0406968593597	1
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	0.12	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.2664539814	105
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	12.4	search with cache (only 1: red; only 1: simpl_relation).	4.65649485588	1654
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	4.11	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	2.72889995575	620
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40	53.31	search with cache (only 1: elim ARth; only 1: firstorder).	31.9670059681	18876
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.1.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	24.1349489689	3659
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	0.1.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	4.45537495613	969
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40	0.0.4.0.3.0.5	search with cache (only 1: destruct n; only 1: Esimpl; only 1: intros; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: Esimpl).	7.53935003281	1373
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40	0.55	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	27.962884903	44858
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40	0.35	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	3.93558716774	6605
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	3.0.1	search with cache (only 1: intro x; only 1: intros; only 1: reflexivity).	0.0634498596191	7
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40	29.3	search with cache (only 1: intros; only 1: firstorder).	9.8543419838	5966
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.0.0.0	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0844810009003	4
Coq.setoid_ring.Ncring.ring_add_assoc1	40	3.8.10.0	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	4.940792799	2159
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.18.2.8.0	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: rewrite <- ring_add_assoc; only 1: reflexivity).	22.0498850346	7770
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	1.12	search with cache (only 1: intros a b; only 1: apply Zeq_is_eq_bool).	0.399944067001	253
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	0.0.0.7.12.4.3	search with cache (only 1: unfold Qeq; only 1: intro; only 1: repeat red; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	9.64162778854	4365
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0604801177979	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00796604156494	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	search with cache (only 1: by case : {}k {}).	0.00968599319458	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.6	search with cache (only 1: destruct 1; only 1: auto).	0.0745141506195	12
Coq.ssr.ssreflect.iffLR	40	2	search with cache (only 1: tauto).	0.01136302948	3
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.00977516174316	1
Coq.ssr.ssreflect.iffLRn	40	1.3	search with cache (only 1: intro H; only 1: tauto).	0.0245759487152	6
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.0105798244476	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0136852264404	1
Coq.ssr.ssrbool.is_true_true	40
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: by case).	0.0111970901489	2
Coq.ssr.ssrbool.is_true_locked_true	40
Coq.ssr.ssrbool.negbT	40	0.0.2	search with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0915820598602	5
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.0337779521942	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.0120129585266	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.0116059780121	1
Coq.ssr.ssrbool.negbK	40	0	search with cache (only 1: by case).	0.0315020084381	1
Coq.ssr.ssrbool.negbNE	40	4	search with cache (only 1: by case : {}b {}).	0.0130310058594	5
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	17	search with cache (only 1: Bool.destr_bool).	0.166948795319	277
Coq.ssr.ssrbool.negbRL	40	15.1	search with cache (only 1: intros; only 1: Bool.destr_bool).	0.132827043533	174
Coq.ssr.ssrbool.contra	40
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0168459415436	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.016667842865	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0168619155884	1
Coq.ssr.ssrbool.contraT	40	3.14	search with cache (only 1: Bool.destr_bool; only 1: auto with bool).	0.312467098236	148
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0133888721466	1
Coq.ssr.ssrbool.contraFT	40	2.18	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.451464891434	211
Coq.ssr.ssrbool.contraFN	40	2.10	search with cache (only 1: Bool.destr_bool; only 1: intuition).	6.39433312416	60
Coq.ssr.ssrbool.contraTF	40
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.11518907547	1
Coq.ssr.ssrbool.ifT	40	7	search with cache (only 1: by move {+}->).	0.0415182113647	16
Coq.ssr.ssrbool.ifF	40	0	search with cache (only 1: by move {+}->).	0.00854706764221	1
Coq.ssr.ssrbool.ifN	40	2	search with cache (only 1: by case : {}b {}).	0.0142621994019	3
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.398032903671	3
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.2691218853	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.01025390625	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.00898408889771	1
Coq.ssr.ssrbool.ifE	40
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.124125003815	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.081050157547	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.0151038169861	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.11	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.236795186996	46
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	6	search with cache (only 1: by case Pb).	0.0436871051788	7
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	9.4.17	search with cache (only 1: destruct 1; only 1: intro H1; only 1: tauto).	4.25479388237	633
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40	0.23.19	search with cache (only 1: split; only 1: intros H ?; only 1: auto).	5.78382396698	1037
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.039293050766	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0186910629272	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.02192902565	1
Coq.ssr.ssrbool.pair_andP	40	4	search with cache (only 1: intuition).	1.17598700523	15
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.0103969573975	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.0104610919952	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0126140117645	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.0103490352631	1
Coq.ssr.ssrbool.negPf	40	1	search with cache (only 1: by case b1; constructor; auto).	0.0561509132385	2
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.044102191925	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0183210372925	1
Coq.ssr.ssrbool.implyP	40	1	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.013524055481	2
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by [  ]).	0.0103430747986	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.0576491355896	1
Coq.ssr.ssrbool.andbT	40
Coq.ssr.ssrbool.andbF	40	1	search with cache (only 1: by case).	0.012708902359	2
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.0533530712128	1
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.0113501548767	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0135040283203	1
Coq.ssr.ssrbool.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.017049074173	1
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0185039043427	1
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: by [  ]).	0.0101218223572	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.010381937027	1
Coq.ssr.ssrbool.orbT	40	1	search with cache (only 1: Bool.destr_bool).	0.0132131576538	2
Coq.ssr.ssrbool.orbF	40	1	search with cache (only 1: by case).	0.0131170749664	2
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.0109739303589	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0131402015686	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0178909301758	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0171542167664	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0171427726746	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0245079994202	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: by case : {}b {}).	0.122154951096	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.011332988739	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : {}b {}).	0.011134147644	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.0111620426178	1
Coq.ssr.ssrbool.andb_orl	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0221860408783	3
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0174751281738	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0175931453705	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0174698829651	1
Coq.ssr.ssrbool.andb_idl	40
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.211009979248	1
Coq.ssr.ssrbool.andb_id2l	40	7	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.296096086502	18
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0257511138916	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0174720287323	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0839428901672	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.154930114746	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0253090858459	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.145234107971	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.126024007797	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0132989883423	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0134179592133	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0133938789368	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0134599208832	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0107901096344	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.0111448764801	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.0353889465332	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.0110578536987	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.0126988887787	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0136570930481	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0135259628296	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0133819580078	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0135390758514	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0135169029236	1
Coq.ssr.ssrbool.implyb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.188905954361	1
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.146399974823	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0246801376343	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00973606109619	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.0106410980225	1
Coq.ssr.ssrbool.addbb	40	0	search with cache (only 1: by case).	0.0106718540192	1
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0124070644379	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0167200565338	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0167000293732	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0168399810791	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0249328613281	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0172901153564	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.017345905304	1
Coq.ssr.ssrbool.addKb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0155708789825	2
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.01287317276	1
Coq.ssr.ssrbool.addIb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0212299823761	2
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0189480781555	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.0112969875336	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.0130269527435	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.013680934906	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0138740539551	1
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.0345339775085	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.0126349925995	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.0133380889893	5
Coq.ssr.ssrbool.simpl_predE	40	0	search with cache (only 1: by [  ]).	0.0109529495239	1
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.0115070343018	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	search with cache (only 1: by [  ]).	0.010586977005	1
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	1	search with cache (only 1: by [  ]).	0.0105030536652	2
Coq.ssr.ssrbool.in1W	40	15.6	search with cache (only 1: Bool.destr_bool; only 1: by [  ]).	0.657006978989	348
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0129458904266	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0135369300842	1
Coq.ssr.ssrbool.in1T	40	18.4	search with cache (only 1: Bool.destr_bool; only 1: auto with bool).	1.5596408844	297
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0181620121002	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0196559429169	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0176708698273	2
Coq.ssr.ssrbool.sub_in11	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.64107298851	3
Coq.ssr.ssrbool.sub_in111	40	3	search with cache (only 1: by move  {}=>? ?; auto).	1.41406583786	4
Coq.ssr.ssrbool.on1W	40	1	search with cache (only 1: by move  {}=>? ?).	0.94405412674	2
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.206027030945	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.134423017502	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.114279985428	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.138565063477	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0186929702759	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.96724486351	2
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	0.780177116394	1
Coq.ssr.ssrbool.subon2	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.907702922821	3
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	4.3.4	search with cache (only 1: Bool.destr_bool; only 1: subst; only 1: intuition).	2.90158104897	102
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.684388875961	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.207352876663	2
Coq.ssr.ssrbool.canRL_on	40	1	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.112017869949	2
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.326075077057	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.18741106987	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0692839622498	1
Coq.ssr.ssrbool.sub_in_bij	40
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.574583053589	1
Coq.ssr.ssrbool.sub_in2	40	7.12.23	search with cache (only 1: Bool.destr_bool; only 1: red; only 1: auto).	2.72324800491	1092
Coq.ssr.ssrbool.sub_in3	40	22.11.9	search with cache (only 1: intros; only 1: red; only 1: auto).	6.60312104225	1552
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub1 sub; apply : {}sub_in111 {}).	0.0159220695496	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	1	search with cache (only 1: by move  {}=>eq_fg eq_gh x; rewrite eq_fg).	0.0156719684601	2
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0401608943939	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	1.00677394867	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	4	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0851130485535	17
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.851767063141	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: firstorder).	0.00350403785706	1
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40	4	search with cache (only 1: split).	0.0103809833527	5
Coq.ssr.ssrfun.fsym	40	0.8	search with cache (only 1: intro H; only 1: by [  ]).	0.017972946167	10
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	0	search with cache (only 1: by [  ]).	0.00912094116211	1
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	4.3.6.10.11	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: Bool.destr_bool).	7.54286408424	2110
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0379390716553	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.0969688892365	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.0104899406433	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0129220485687	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	1.0186290741	1
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.226319074631	2
Coq.ssr.ssrfun.canLR	40	6.8.11	search with cache (only 1: Bool.destr_bool; only 1: subst; only 1: auto).	7.45145392418	435
Coq.ssr.ssrfun.canRL	40
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	12	search with cache (only 1: by case).	1.86930394173	49
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	0	search with cache (only 1: by [  ]).	0.0554440021515	1
Coq.ssr.ssrfun.inj_can_sym	40	6.9.6	search with cache (only 1: intros; only 1: red; only 1: auto).	0.602761983871	394
Coq.ssr.ssrfun.inj_comp	40
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.1	search with cache (only 1: intros; only 1: trivial).	0.00570607185364	3
Coq.ssr.ssrunder.Under_rel.Under_relE	40	1	search with cache (only 1: auto).	0.00524306297302	2
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.0054771900177	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.006422996521	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00522494316101	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.0.11.5	search with cache (only 1: intros x y z; only 1: intros Heq; only 1: intros <-; only 1: auto with arith).	0.607501983643	1074
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.0.3	search with cache (only 1: refine (@rectS _ _ _ _); only 1: intros; only 1: now simpl; only 1: now simpl).	0.171542882919	32
Coq.Vectors.VectorSpec.const_nth	40	0.0.3.6	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	0.1010389328	59
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0	search with cache (only 1: trivial).	0.0158941745758	1
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	1.0.0.0.12.14	search with cache (only 1: intros; only 1: induction v; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: trivial).	2.51033997536	4356
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0402989387512	9
Coq.Vectors.VectorSpec.uncons_cons	40	0	search with cache (only 1: now simpl).	0.0156300067902	1
Coq.Vectors.VectorSpec.append_comm_cons	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0182368755341	3
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	2.1.10	search with cache (only 1: intros m n p; only 1: intros <-; only 1: trivial).	0.3756711483	747
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0103709697723	1
Coq.Setoids.Setoid.Seq_sym	40	1	search with cache (only 1: firstorder).	0.011549949646	2
Coq.Setoids.Setoid.Seq_trans	40	0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).	0.0108048915863	3
Coq.Setoids.Setoid.gen_st	40	4.0.2	search with cache (only 1: intros; only 1: red; only 1: simpl_relation).	0.0262839794159	9
Coq.Bool.IfProp.Iftrue_inv	40	5.0.1	search with cache (only 1: destruct 1; only 1: intuition; only 1: destr_bool).	0.0101280212402	21
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.2.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: assumption).	0.00601506233215	8
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.00508689880371	3
Coq.Bool.IfProp.IfProp_or	40	0.1.0.1.1	search with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.011843919754	27
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	8.3	search with cache (only 1: intros; only 1: now subst).	0.106738805771	82
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0513980388641	3
Coq.Bool.Zerob.zerob_false_intro	40	1.4.0	search with cache (only 1: destruct n; only 1: easy || now destruct 1; only 1: trivial).	0.0649108886719	14
Coq.Bool.Zerob.zerob_false_elim	40	4.1.8.0	search with cache (only 1: destruct n; only 1: intuition; only 1: inversion 1; only 1: auto).	1.71853303909	1265
Coq.Bool.DecBool.ifdec_left	40	0.15.2.6.0	search with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: destruct 1; only 1: assumption).	0.592237949371	3840
Coq.Bool.DecBool.ifdec_right	40	1.0.3.2.5.3	search with cache (only 1: intros A C h1 h2; only 1: intros; only 1: destruct h2; only 1: case H; only 1: assumption; only 1: trivial).	0.940232992172	4034
Coq.Bool.Sumbool.sumbool_of_bool	40	3.2.8.5	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.1275370121	650
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.1	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00774097442627	4
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00611615180969	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.00880002975464	7
Coq.Bool.Sumbool.sumbool_not	40	1.0.0.0.4	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: auto).	0.106090068817	71
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	0	search with cache (only 1: discriminate).	0.00833511352539	1
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00803899765015	1
Coq.Bool.Bool.eq_true_false_abs	40
Coq.Bool.Bool.not_true_is_false	40	1.1.0	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: trivial).	0.011509180069	5
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0118389129639	2
Coq.Bool.Bool.not_true_iff_false	40	1.0.1.1	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.0385382175446	53
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0158371925354	3
Coq.Bool.Bool.leb_implb	40	2.0.2.0.6	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.317739009857	454
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.0126371383667	1
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00936508178711	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.0120069980621	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0863559246063	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0337560176849	17
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.0117008686066	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0117189884186	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00962495803833	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00955605506897	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0118801593781	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.0105350017548	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00976395606995	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00970005989075	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.0100998878479	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0141930580139	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0143110752106	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0255761146545	5
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0236670970917	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0189979076385	5
Coq.Bool.Bool.orb_prop	40	1.1.1.1.1	search with cache (only 1: destruct a, b; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0145010948181	10
Coq.Bool.Bool.orb_true_intro	40	1.3.0.1.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: destr_bool; only 1: intuition).	0.0696969032288	106
Coq.Bool.Bool.orb_false_intro	40	1	search with cache (only 1: destr_bool).	0.0225939750671	14
Coq.Bool.Bool.orb_false_elim	40	0.0.3.0	search with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).	0.0402171611786	54
Coq.Bool.Bool.orb_diag	40	1	search with cache (only 1: destr_bool).	0.00992608070374	2
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.00964188575745	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00965905189514	1
Coq.Bool.Bool.orb_false_r	40	0	search with cache (only 1: destr_bool).	0.00957894325256	1
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00952386856079	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00975704193115	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0117540359497	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0156989097595	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0238239765167	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0263929367065	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0160319805145	9
Coq.Bool.Bool.andb_false_intro1	40	1	search with cache (only 1: destr_bool).	0.0124428272247	2
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0107700824738	3
Coq.Bool.Bool.andb_false_r	40	1	search with cache (only 1: destr_bool).	0.00993990898132	2
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.0095648765564	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.00961899757385	1
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.00951099395752	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00940585136414	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0155658721924	4
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00957703590393	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0115950107574	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0158898830414	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0159029960632	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0159239768982	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0155439376831	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0158550739288	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0113749504089	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0118680000305	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00984191894531	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00967407226562	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00992298126221	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00830101966858	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00974988937378	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.0118548870087	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0159759521484	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.012687921524	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0173909664154	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0175521373749	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0173509120941	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0174980163574	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.0118498802185	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0135650634766	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.0119559764862	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.4	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.101557970047	65
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0.0.0.2.1	search with cache (only 1: destruct b1; only 1: intuition; only 1: destruct b2; only 1: intros [? ?]; only 1: intuition; only 1: intros [? ?]; only 1: trivial).	0.125694036484	100
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0122129917145	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0121171474457	2
Coq.Bool.Bool.absurd_eq_bool	40	3.3.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0146968364716	10
Coq.Bool.Bool.absurd_eq_true	40	3.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0114521980286	6
Coq.Bool.Bool.trans_eq_bool	40	1	search with cache (only 1: destr_bool).	0.023815870285	9
Coq.Bool.Bool.Is_true_eq_true	40	3.2	search with cache (only 1: destr_bool; only 1: intuition).	0.0118510723114	7
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.0102360248566	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00954079627991	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00951790809631	1
Coq.Bool.Bool.eqb_eq	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0145099163055	4
Coq.Bool.Bool.orb_prop_elim	40	2.1.1.1.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0570979118347	78
Coq.Bool.Bool.orb_prop_intro	40	9.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0532529354095	48
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0160808563232	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.017963886261	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0179400444031	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.1.0.0.1.0	search with cache (only 1: destr_bool; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: auto).	0.0164330005646	9
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto).	0.0116369724274	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0115411281586	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0116140842438	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0121500492096	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.0126800537109	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.0100190639496	1
Coq.Bool.Bool.andb_lazy_alt	40	1	search with cache (only 1: destr_bool).	0.0119619369507	2
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.00859785079956	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	8.6.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.390327215195	464
Coq.Bool.Bool.reflect_dec	40	0.0.9	search with cache (only 1: destruct 1; only 1: tauto; only 1: intuition).	0.43935084343	141
Coq.Bool.Bool.eqb_spec	40	1.1.1.0.4	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0466890335083	59
Coq.Bool.BoolEq.beq_eq_true	40	2.6	search with cache (only 1: induction 1; only 1: intuition).	0.0263478755951	20
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40	8.1.0.0.0.0.3.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intro eq; only 1: intuition).	22.5461850166	21919
Coq.Lists.ListSet.set_mem_correct1	40	0.0.1.0.0.3.2	search with cache (only 1: simple induction x; only 1: easy; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: auto; only 1: auto).	0.319710016251	237
Coq.Lists.ListSet.set_mem_correct2	40	8.0.0.1.0.2.0	search with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: firstorder).	13.5242300034	10050
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40	0.1.10.0.1.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: induction 1; only 1: firstorder; only 1: auto with datatypes).	17.1072480679	18768
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.0.1.0.6.0.2.0.0.2.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec b a0); only 1: subst a; only 1: left; only 1: auto; only 1: right; only 1: auto with datatypes).	17.3271341324	19883
Coq.Lists.ListSet.set_add_intro	40	0.0.1	search with cache (only 1: inversion 1; only 1: auto; only 1: auto).	0.049134016037	36
Coq.Lists.ListSet.set_add_elim	40	1.4.0.0.0.3.0.0.0.2.1.3.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: destruct 1; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec b a0); only 1: right; only 1: auto; only 1: simpl; only 1: tauto).	32.548871994	28878
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: auto; only 1: tauto).	2.73123502731	2040
Coq.Lists.ListSet.set_add_not_empty	40	3.1.2.0.1.2.0.1.1.3	search with cache (only 1: simple induction x; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec a a0); only 1: intros; only 1: discriminate; only 1: intro eq; only 1: discriminate).	3.47715616226	4214
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40	0.1.0.1.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l as [| x l IH]; only 1: intro ND; only 1: simpl; only 1: tauto; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: simpl; only 1: auto; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: simpl; only 1: auto).	20.7939119339	19229
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.3.1.0.1.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.486765146255	265
Coq.Lists.ListSet.set_union_intro	40	0.0.1	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.251675844193	83
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.1.0.0.0.0.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: auto with datatypes).	0.572882890701	222
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0206489562988	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	3.1.0.1.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 l Hrec y; only 1: eauto with datatypes).	0.890225887299	232
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40	3.0.0.0.6.0.0.0.0	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: firstorder; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).	8.95729780197	9067
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	6.0.0.11.3.16	search with cache (only 1: red; only 1: intuition; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: simpl; only 1: firstorder).	33.3249230385	1649
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	0.3	search with cache (only 1: intros [? ?]; only 1: reflexivity).	0.00671887397766	20
Coq.Lists.Streams.tl_nth_tl	40	0.0.0.1.5	search with cache (only 1: induction n; only 1: trivial; only 1: intro x; only 1: case x; only 1: trivial).	0.0373530387878	101
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	0.4.0.8.3	search with cache (only 1: intros; only 1: destruct H; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: reflexivity).	0.259860992432	1023
Coq.Lists.Streams.trans_EqSt	40	1.1.6.1	search with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct H; only 1: coinduction ltac:(EqSt_reflex); only 1: assumption).	0.421478033066	1010
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	7.23.1.3	search with cache (only 1: intros n; only 1: coinduction ltac:(Eq_trans); only 1: auto; only 1: assumption).	0.634454965591	3565
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.1	search with cache (only 1: simple induction n; only 1: auto; only 1: simpl; only 1: intros m hypind; only 1: trivial).	0.00818610191345	6
Coq.Lists.Streams.Str_nth_map	40	0.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.00677704811096	5
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	1.0.0.3.0.0.3	search with cache (only 1: simple induction n; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros m hypind; only 1: auto).	0.142779111862	320
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: apply IHn).	0.00787091255188	4
Coq.Lists.List.nil_cons	40	15	search with cache (only 1: destr_bool).	0.257329940796	405
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	0.0.2.0	search with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: discriminate; only 1: firstorder  discriminate).	0.0134100914001	6
Coq.Lists.List.length_zero_iff_nil	40	0.5.8.1.0.8.6.0	search with cache (only 1: split; only 1: intros; only 1: destruct l; only 1: reflexivity; only 1: discriminate; only 1: symmetry; only 1: rewrite ?Nat.add_0_l, ?Nat.add_0_r, ?H; only 1: reflexivity).	2.09468388557	6712
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.00646901130676	1
Coq.Lists.List.hd_error_cons	40	0	search with cache (only 1: reflexivity).	0.0072021484375	1
Coq.Lists.List.in_eq	40	0.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.00783586502075	2
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00799608230591	2
Coq.Lists.List.not_in_cons	40	3.1.2.10.1.1.6.0.0	search with cache (only 1: simpl; only 1: split; only 1: intro H; only 1: intuition; only 1: intro H; only 1: inversion 1; only 1: subst; only 1: firstorder  discriminate; only 1: now apply H).	16.6737918854	26762
Coq.Lists.List.in_nil	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.00791883468628	3
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.00671815872192	1
Coq.Lists.List.in_dec	40	7.0.8.13	search with cache (only 1: intro H; only 1: induction l; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	39.3325440884	23200
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0097770690918	2
Coq.Lists.List.app_nil_r	40	0.5.3.0.3	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.340707063675	474
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0146250724792	6
Coq.Lists.List.app_assoc	40	1.0.0.1.0.0	search with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto).	0.141709804535	8
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0169198513031	7
Coq.Lists.List.app_comm_cons	40	1.0	search with cache (only 1: intros l m n; only 1: auto).	0.0105209350586	3
Coq.Lists.List.app_eq_nil	40	0.0.5.1	search with cache (only 1: induction l as [| a0 l IHl]; only 1: intros a r; only 1: auto; only 1: firstorder  discriminate).	0.0209269523621	10
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	1.0.2.0.8	search with cache (only 1: induction l as [| a tail]; only 1: trivial; only 1: intros; only 1: simpl; only 1: auto).	0.827019929886	935
Coq.Lists.List.in_app_or	40	22.1.2.5	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	26.7066168785	64099
Coq.Lists.List.in_or_app	40	0.0.0.1.6.0.0.4.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: firstorder  discriminate; only 1: simpl; only 1: intros a0 y H H0; only 1: elim H0; only 1: destruct 1; only 1: auto; only 1: auto; only 1: auto).	4.79749488831	7679
Coq.Lists.List.in_app_iff	40	0.4.0.0.1.0.0.0.0.4.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: split; only 1: auto; only 1: intro H; only 1: elim H; only 1: intro H0; only 1: elim H0; only 1: auto; only 1: simpl; only 1: intros y H0 H1; only 1: intuition).	23.4903030396	26467
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	1.1.0.0.0.0.0	search with cache (only 1: simpl; only 1: intros n l d; only 1: destruct n; only 1: auto; only 1: destruct n; only 1: auto; only 1: auto).	0.0220370292664	12
Coq.Lists.List.nth_default_eq	40	1.3.0.0.0.0.0.1.0.6.0.0.1	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: intros [| n]; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (IHl n); only 1: auto).	21.2513549328	27316
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.0.0.0.0.0.2.1.0.0.3.1.0.1.1.0	search with cache (only 1: unfold lt; only 1: induction l; only 1: induction n as [| n hn]; only 1: intros; only 1: f_equal; only 1: inversion H; only 1: intros; only 1: simpl; only 1: inversion H; only 1: simpl; only 1: destruct n; only 1: intros; only 1: auto; only 1: intros; only 1: apply IHl; only 1: auto with arith).	26.719627142	48522
Coq.Lists.List.app_nth1	40	0.0.0.0.6.1.1	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.64415693283	2005
Coq.Lists.List.app_nth2	40	0.0.1.0.3.0.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: auto; only 1: trivial; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	2.4052670002	2138
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40	0.0.0.0.0.0.0.1.0.0.2.3.0.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: destruct n; only 1: easy; only 1: easy; only 1: destruct n; only 1: simpl; only 1: split; only 1: now auto with arith; only 1: now auto with arith; only 1: simpl; only 1: rewrite IHl; only 1: split; only 1: auto with arith; only 1: auto with arith).	34.4604001045	32134
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.0.0.0.2.0.0.5	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.536600112915	372
Coq.Lists.List.nth_error_app2	40	0.0.1.0.0.1.0.1.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: induction l; only 1: auto; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	1.0111720562	912
Coq.Lists.List.nth_error_nth	40	0.1.0.1.1.3.3.2.0.1.1	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: inversion H1; only 1: now f_equal; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto).	16.3654708862	20943
Coq.Lists.List.nth_error_nth'	40	0.0.0.0.1.1.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	0.105655908585	64
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	3	search with cache (only 1: auto).	0.0100009441376	4
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	3.0.1.1	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto; only 1: intuition).	0.0223770141602	13
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0140318870544	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.4.1.0.0.0.7	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite (IHl y); only 1: auto).	1.19918394089	1182
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	0.0.0	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0124328136444	3
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0087878704071	2
Coq.Lists.List.concat_cons	40	0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).	0.0130867958069	5
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40	17	search with cache (only 1: decide equality).	0.358130216599	661
Coq.Lists.List.map_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0086088180542	2
Coq.Lists.List.in_map	40	0.0.0.0.2.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: firstorder; only 1: subst; only 1: simpl; only 1: auto).	0.0534539222717	19
Coq.Lists.List.in_map_iff	40	2.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	0.101460933685	8
Coq.Lists.List.map_length	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0125918388367	5
Coq.Lists.List.map_nth	40	0.0.0.0.4.0.0.0.0.2.0.1	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	6.14137005806	6639
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	1.5.0.1.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	1.32820105553	1535
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	4.0.0.4	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: firstorder  discriminate).	0.0826239585876	115
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.2.0.0.0.10	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.267053127289	298
Coq.Lists.List.concat_map	40	0.2.11.1.0.0.2.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: auto).	3.51387000084	5853
Coq.Lists.List.map_id	40	0.0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.015725851059	8
Coq.Lists.List.map_map	40	0.6.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.343929052353	433
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.0189518928528	7
Coq.Lists.List.fold_left_app	40	0.1.0.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0144000053406	6
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.7.0.2.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).	4.52541589737	4080
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.357409954071	298
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	0.0.0.1.15.0.0.0.10	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	18.6088531017	26440
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	1.0.2.0.4.0.1.0.12	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros; only 1: intuition congruence).	5.1241748333	3647
Coq.Lists.List.find_none	40	0.0.1.0.0.2.0.0.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: case_eq (f a); only 1: intuition; only 1: congruence; only 1: congruence; only 1: intuition; only 1: congruence).	1.27418088913	654
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.011904001236	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	3.0.0.1.1.1.0.1.0.0	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: easy; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: reflexivity || discriminate).	3.77481508255	3040
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.0.2.2.2.0.0.0.0	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	2.33558011055	1691
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0145919322968	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	7.49551391602	5220
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40
Coq.Lists.List.split_length_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0260119438171	8
Coq.Lists.List.split_combine	40	0.2.0.2.6.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: f_equal; only 1: auto).	2.79958200455	3283
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40	0.0.3.0.0.1.0.1.2.1.0	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: contradiction; only 1: destruct l'; only 1: intros; only 1: auto; only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).	5.69246602058	5318
Coq.Lists.List.combine_length	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.994483947754	759
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	2.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto)).	0.113138914108	20
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	44	search with cache (only 1: CRelationClasses.simpl_crelation).	0.748440027237	1380
Coq.Lists.List.lel_trans	40	17.0	search with cache (only 1: unfold lel; only 1: Nat.order).	0.517077922821	617
Coq.Lists.List.lel_cons_cons	40	0.0.0.0	search with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).	0.01886677742	4
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0110909938812	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0117108821869	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	1	search with cache (only 1: solve [ auto ]).	0.00799703598022	2
Coq.Lists.List.incl_tl	40	8	search with cache (only 1: intuition).	0.0258979797363	20
Coq.Lists.List.incl_tran	40	1.1.0	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0140488147736	5
Coq.Lists.List.incl_appl	40	5	search with cache (only 1: auto with datatypes).	0.0331108570099	23
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0124700069427	1
Coq.Lists.List.incl_cons	40	11.3.10	search with cache (only 1: red; only 1: intros l m a; only 1: firstorder  (subst; auto)).	2.51339197159	2672
Coq.Lists.List.incl_app	40	16.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder).	15.6321349144	8376
Coq.Lists.List.firstn_nil	40	0.0.0.0.14	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.286812067032	177
Coq.Lists.List.firstn_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0109279155731	2
Coq.Lists.List.firstn_all	40	2.0.0.0.12	search with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: now rewrite IH).	0.234138011932	224
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.00865197181702	1
Coq.Lists.List.firstn_le_length	40	1.1.1.1.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.474412918091	219
Coq.Lists.List.firstn_length_le	40	1.0.0.0.2.3.0.0.2.0	search with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: auto; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	6.14866399765	6633
Coq.Lists.List.firstn_app	40	1.1.0.0.2.3.2	search with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.42392396927	864
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40	1.2.0.2.0.9	search with cache (only 1: induction n as [| n IHn]; only 1: auto; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: now rewrite ?firstn_nil; only 1: now simpl).	2.8258471489	2747
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.00851798057556	1
Coq.Lists.List.skipn_nil	40	0.0.4	search with cache (only 1: destruct n; only 1: now simpl; only 1: now simpl).	0.0179450511932	15
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.00932788848877	1
Coq.Lists.List.skipn_none	40	0.0.0.0.0.1	search with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.017982006073	7
Coq.Lists.List.skipn_all2	40	1.0.0.0.1.1.0	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: auto with arith).	0.309360027313	128
Coq.Lists.List.firstn_skipn	40	0.1.0.0.2.1.1	search with cache (only 1: induction n; only 1: auto; only 1: destruct l as [| x xs]; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.652535200119	438
Coq.Lists.List.firstn_length	40	0.0.0.0.3.1.0.5	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.23007011414	3676
Coq.Lists.List.skipn_length	40	0.0.0.0.0.0.0.0.0.0.8	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	12.8850419521	14161
Coq.Lists.List.skipn_all	40	0.0.0.0.0	search with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0175969600677	5
Coq.Lists.List.skipn_app	40	0.0.0.2.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.270229101181	171
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	1	search with cache (only 1: now intros []).	0.0101671218872	2
Coq.Lists.List.combine_firstn_l	40	0.0.1.0.0.4.0.0.5	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	4.22176289558	3208
Coq.Lists.List.combine_firstn_r	40	0.1.0.0.0.0.0.0.0.5.1.0	search with cache (only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	3.41047692299	3392
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	2.0.0.0.0.3	search with cache (only 1: induction 1; only 1: intros; only 1: simpl; only 1: tauto; only 1: simpl; only 1: firstorder).	0.312279939651	141
Coq.Lists.List.Add_length	40	0.0.0.0.6	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0428290367126	37
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0121591091156	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0357279777527	4
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	0.1.0.0.0.0.5	search with cache (only 1: intro n; only 1: induction n as [| k iHk]; only 1: intros; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto).	0.214632987976	241
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	1.6.1.3.0.2	search with cache (only 1: induction len; only 1: auto; only 1: intro n; only 1: simpl; only 1: f_equal; only 1: auto).	4.73325395584	4865
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	3.4.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: inversion_clear 1).	0.0250558853149	18
Coq.Lists.List.Exists_cons	40	4.0.0.6.3	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: firstorder).	0.687808990479	540
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.1.2.1.0.0.1.0	search with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intuition).	1.9234149456	1421
Coq.Lists.List.Forall_inv	40	0.3	search with cache (only 1: inversion 1; only 1: auto).	0.0171930789948	12
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40	0.1.0.1.3.0.0.1.1.3.2.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: constructor; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: destruct Hrec as [Hl'| Hl']; only 1: left; only 1: auto; only 1: right; only 1: abstract now inversion 1; only 1: right; only 1: abstract now inversion 1).	13.6998939514	10554
Coq.Lists.List.Forall_inv_tail	40	0.1.1	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.0159170627594	5
Coq.Lists.List.Exists_impl	40	3.0.6.10.1	search with cache (only 1: intros P x0 xs H; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now apply Exists_cons_tl).	3.27975797653	5321
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.0333108901978	10
Coq.Lists.List.Forall_Exists_dec	40	4.0.1.0.0.0.0.1.0.0.0.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now constructor; only 1: right; only 1: now apply Exists_cons_tl).	16.9724960327	5140
Coq.Lists.List.Forall_impl	40	4.0.7.0.0.0	search with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto).	0.85224199295	915
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: auto).	0.00941801071167	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	0.1.4.0.4.0.1	search with cache (only 1: induction l1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: inversion_clear 1; only 1: simpl; only 1: auto).	1.82021784782	1495
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	0.0.0.9	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	0.0596330165863	61
Coq.Lists.List.repeat_spec	40	0.0.5.0.5.0.13	search with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	1.16516089439	1604
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: repeat intro; only 1: auto).	0.0227191448212	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	6.0.2.8	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intuition).	13.3443698883	5399
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.2.2	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: simpl; only 1: auto; only 1: do 2 (etransitivity; try eassumption)).	0.631080150604	106
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.0.1.4.21	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	0.761847019196	566
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40	1.20.3.2	search with cache (only 1: intuition; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	10.8734939098	5098
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0256309509277	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	1.0.1.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	0.0378789901733	7
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: eauto; only 1: auto).	0.0253419876099	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	1.0.0.6.2.0.0.3.3	search with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto; only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto).	7.40703392029	8970
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.2.1	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.0907068252563	88
Coq.Lists.SetoidList.InA_nil	40	2.1.0	search with cache (only 1: split; only 1: inversion 1; only 1: induction 1).	0.0129389762878	6
Coq.Lists.SetoidList.InA_alt	40	0.0.0.0.0.1.1.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.226292133331	172
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	9	search with cache (only 1: now simpl).	0.0967500209808	25
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.0.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto).	0.0203700065613	7
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	1.10.6.2	search with cache (only 1: intros x y z H; only 1: induction 1; only 1: eauto with *; only 1: auto).	12.9719898701	1703
Coq.Lists.SetoidList.In_InA	40	0.0.0.0.4	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.131391048431	9
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.0.2.1.1	search with cache (only 1: split; only 1: intuition; only 1: invlist InA; only 1: auto; only 1: auto).	0.0203700065613	9
Coq.Lists.SetoidList.InA_double_head	40	0.0.0.2.5	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto; only 1: auto; only 1: auto).	0.222846984863	79
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0387098789215	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.5	search with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: auto).	0.0230801105499	10
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.7	search with cache (only 1: intros H; only 1: rewrite !InA_cons; only 1: tauto).	0.0310308933258	10
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.7	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.145390987396	10
Coq.Lists.SetoidList.equivlistA_app_idem	40	1.3.0.0.0.3	search with cache (only 1: destruct l; only 1: simpl; only 1: intuition; only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).	0.742399930954	191
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	1.0.0.0.0.2.0.2.0.2	search with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).	0.803910017014	752
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40	0.0.1.0.0.0.1.5.17	search with cache (only 1: intros l l'; only 1: intros ND Incl FOP; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	17.8023300171	5365
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	0.0.1.2.2.2.0.17	search with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: inv; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto).	17.0376219749	3010
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40	0.15.2	search with cache (only 1: intro; only 1: rewrite <- H; only 1: auto).	0.899303197861	586
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	0.0.2.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: apply H; only 1: simpl; only 1: auto).	0.0504429340363	8
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.021027803421	8
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.2.0.0.3.1.3	search with cache (only 1: induction l1; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: intuition; only 1: inv; only 1: auto).	0.958400964737	451
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0227909088135	5
Coq.Lists.SetoidList.app_eqlistA_compat	40	1.6.1.10.7	search with cache (only 1: induction 1; only 1: solve_proper; only 1: simpl; only 1: red; only 1: auto).	25.6769900322	3818
Coq.Lists.SetoidList.eqlistA_app	40	0.0.2.0.0.0.0	search with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0313110351562	9
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.0.2.1.0.3	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: intuition).	0.266262054443	142
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	3.0	search with cache (only 1: decide equality; only 1: decide equality).	0.0241940021515	5
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.00636386871338	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.00598692893982	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.015261888504	5
Coq.NArith.BinNat.N.bi_induction	40	0.2.0.20.1	search with cache (only 1: intros; only 1: apply Pos.peano_ind; only 1: assumption; only 1: fix sqrtrem_spec 1; only 1: auto).	5.11470603943	13154
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.00606608390808	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.00621700286865	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.00611209869385	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.00612783432007	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0	search with cache (only 1: auto).	0.00640797615051	1
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0116159915924	3
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.2.1.1.1.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: trivial).	4.37686419487	4718
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0101299285889	3
Coq.NArith.BinNat.N.pred_sub	40	0.2.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p).	0.016037940979	7
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0137720108032	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0202429294586	9
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	2.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0285971164703	19
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00693202018738	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	5.16.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: now destruct n).	11.8017160892	14099
Coq.NArith.BinNat.N.ltb_lt	40	5.4.9	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	1.38783311844	1890
Coq.NArith.BinNat.N.leb_le	40	5.4.5	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	0.561830997467	545
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	1.0	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.00756788253784	3
Coq.NArith.BinNat.N.compare_le_iff	40	0.1.2.0	search with cache (only 1: revert m; only 1: destruct m; only 1: reflexivity; only 1: reflexivity).	0.0723030567169	75
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0847427845001	61
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	1	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0364451408386	2
Coq.NArith.BinNat.N.succ_double_spec	40	14	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.658622026443	183
Coq.NArith.BinNat.N.double_add	40	0.0.0.0.0.0.0.2.2	search with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.2933921814	512
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0083909034729	1
Coq.NArith.BinNat.N.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.00899195671082	1
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.1.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0130920410156	6
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.00684523582458	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	2.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.587875127792	319
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0416932106018	27
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0272400379181	11
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0250599384308	9
Coq.NArith.BinNat.N.compare_0_r	40	1	search with cache (only 1: now destruct n).	0.0124039649963	2
Coq.NArith.BinNat.N.pow_0_r	40	3	search with cache (only 1: now nzsimpl').	0.0209331512451	4
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	13.1	search with cache (only 1: intro; only 1: false_hyp H nlt_0_r).	1.97668910027	1597
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	9	search with cache (only 1: now destruct n).	0.0708091259003	79
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40	0.0.0.1.0.1.1.1.0.0.3.1.0.0.1.0.0.0	search with cache (only 1: destruct n; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m; only 1: destruct p; only 1: split; only 1: now exists (pos p); only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: easy; only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m).	11.579485178	12670
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.2	search with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0159730911255	6
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40	4.18.24.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	16.7222049236	36433
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0083429813385	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	0.0240480899811	7
Coq.NArith.BinNat.N.gcd_divide_r	40	0.0.1.0.0.0.1	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.108953952789	18
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	0	search with cache (only 1: apply le_0_l).	0.00716209411621	1
Coq.NArith.BinNat.N.testbit_even_0	40	0.3.37.12	search with cache (only 1: simpl; only 1: induction a; only 1: trivial; only 1: easy).	1.42741584778	3265
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.00741815567017	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0160520076752	4
Coq.NArith.BinNat.N.testbit_neg_r	40	4.1	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0399360656738	35
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40	1.0.0.0.0.6.4.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: now destruct a; only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.iter_succ).	30.1721251011	25637
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.00698018074036	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.2	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.130249977112	22
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00745487213135	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.4	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.130943775177	63
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00793194770813	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.0.0.0.3	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.0243499279022	9
Coq.NArith.Ndec.Peqb_complete	40	0	search with cache (only 1: apply Pos.eqb_eq).	0.068797826767	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.4	search with cache (only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.118439912796	19
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0828740596771	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0831341743469	1
Coq.NArith.Ndec.Neqb_complete	40	1	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0825619697571	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	1.2.4.4.1.0.14.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: eqb2eq; only 1: split; only 1: intros <-; only 1: inversion H; only 1: apply Ndouble_plus_one_bit0; only 1: now try N.order').	10.7914140224	13887
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	6.1.2.0	search with cache (only 1: intros Ha Hb; only 1: eqb2eq; only 1: intros <-; only 1: congruence).	1.52857899666	653
Coq.NArith.Ndec.Ndiv2_eq	40	0.1.7.0	search with cache (only 1: intros Ha; only 1: eqb2eq; only 1: subst; only 1: trivial).	0.391767978668	188
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0999441146851	4
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.1.1	search with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.21365904808	37
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	31	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.939888954163	867
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	3.7.3.3	search with cache (only 1: rewrite !Nleb_Nle; only 1: intro LE; only 1: intros H3; only 1: N.order).	2.11613988876	1398
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40	1.0.0.0.0.0.0.0.15.2	search with cache (only 1: rewrite !Nleb_Nle; only 1: destruct a, b; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	32.1723458767	28360
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.3.2.1.0.0	search with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite !N2Nat.inj_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	1.54067397118	693
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	0.4.2.2.0.0.0.0.0	search with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intro H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: rewrite !N2Nat.inj_succ_double; only 1: trivial).	9.05400395393	4290
Coq.NArith.Ndec.Nltb_double_mono_conv	40	0.0.0.5.4.0.0.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: intro; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: now apply leb_complete).	8.87114191055	4633
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	0.0.0.4.7.0.0.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply le_n_S, mult_le_compat_l; only 1: now apply leb_complete).	15.1226100922	8485
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0.0	search with cache (only 1: unfold Nleb; only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0956180095673	2
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40	13.17	search with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	5.7627799511	4561
Coq.NArith.Ndec.Nmin_le_2	40	9.0	search with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.12878203392	31
Coq.NArith.Ndec.Nmin_le_3	40	5.7	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	2.96160888672	1338
Coq.NArith.Ndec.Nmin_le_4	40	13.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.831403970718	346
Coq.NArith.Ndec.Nmin_le_5	40	12.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.77276802063	360
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.1.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.118572950363	5
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction a as [| p]; only 1: intro H; only 1: trivial; only 1: intro H; only 1: exfalso; only 1: induction p as [| p IHp| ]; only 1: discriminate || simpl; only 1: discriminate || simpl; only 1: discriminate || simpl).	0.13129901886	9
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	0.0.6.8.0.3.41	search with cache (only 1: vm_compute; only 1: destruct x; only 1: easy; only 1: f_equal; only 1: induction n; only 1: auto; only 1: auto).	7.78676915169	14919
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.1.2	search with cache (only 1: simpl; only 1: simple induction d; only 1: trivial; only 1: reflexivity).	0.0993468761444	8
Coq.NArith.Ndist.ni_min_O_r	40	0.0.1.2.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.107306957245	9
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: reflexivity).	0.0756049156189	1
Coq.NArith.Ndist.ni_min_inf_r	40	1.0.2	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0873670578003	6
Coq.NArith.Ndist.ni_le_refl	40	0.0.7.5.0.3.5	search with cache (only 1: vm_compute; only 1: destruct x; only 1: easy; only 1: f_equal; only 1: induction n; only 1: auto; only 1: auto).	2.88091897964	3120
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.0.2.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.140360832214	16
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40	1.1.0.0.3.6.3.7.3	search with cache (only 1: unfold ni_le; only 1: simpl; only 1: intros; only 1: destruct n as [| n]; only 1: inversion H; only 1: trivial; only 1: f_equal; only 1: apply Nat.min_l || apply Nat.min_r; only 1: auto with arith).	12.576818943	12052
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.1.2.0.1	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros [| n]; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	1.07380414009	487
Coq.NArith.Ndigits.Nshiftr_nat_S	40	6.1.0	search with cache (only 1: destruct a; only 1: trivial; only 1: trivial).	0.241395950317	49
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0754890441895	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0808620452881	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.076954126358	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.2.5.2.3.0.0.1	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: f_equal; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: f_equal; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	15.8303370476	10798
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	7.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).	0.187983036041	41
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	4.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.land_spec).	0.221707105637	41
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	5.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.ldiff_spec).	0.251567840576	51
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	5.1.9	search with cache (only 1: intros [| n]; only 1: trivial; only 1: now destruct n).	0.991032123566	601
Coq.NArith.Ndigits.Ndouble_bit0	40	0.2.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0879511833191	5
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0873470306396	4
Coq.NArith.Ndigits.Ndiv2_double	40	0.1.0.3.4.0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: discriminate; only 1: trivial; only 1: discriminate).	4.35521888733	2450
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.2.2.0.4.0	search with cache (only 1: destruct n; only 1: discriminate; only 1: destruct p; only 1: reflexivity; only 1: discriminate; only 1: reflexivity).	2.2887980938	880
Coq.NArith.Ndigits.Ndiv2_correct	40	1.3.0.0.2.6.0.0	search with cache (only 1: destruct a; only 1: trivial; only 1: induction p; only 1: intros m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	32.6573030949	17561
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0945880413055	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	3.02269005775	1604
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.75613808632	725
Coq.NArith.Ndigits.Nless_def_3	40	0.0.5.4.1.0.2.0.0.3.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	31.1171150208	20480
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.0.1.0.0.2.13.9	search with cache (only 1: intros s1; only 1: unfold Nless; only 1: elim s1; only 1: simpl; only 1: congruence; only 1: intros; only 1: exists p; only 1: auto).	2.16479206085	2752
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.0.2.1.7.1.1.4.0.2.7	search with cache (only 1: apply Vector.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: intros n m s1 s2; only 1: simpl; only 1: case n; only 1: apply Ndouble_plus_one_bit0; only 1: apply Ndouble_bit0).	12.942388773	9474
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.1.0.0.3.0.0.3.14.0.1.8	search with cache (only 1: destruct a; only 1: simpl; only 1: reflexivity; only 1: induction p; only 1: simpl in *; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	20.2166721821	12819
Coq.NArith.NArith.test	40	1	search with cache (only 1: N.order).	0.117519140244	19
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	4.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now subst).	0.096470117569	68
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	2.1.3.3.0.0.0.1	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	2.83694791794	2388
Coq.NArith.Nnat.N2Nat.inj_succ	40	8.0.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.977580070496	690
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.2.0.24	search with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.196445941925	484
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).	0.0231280326843	6
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0227489471436	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	1	search with cache (only 1: nat2N).	0.0202560424805	2
Coq.NArith.Nnat.Nat2N.inj_pred	40	0	search with cache (only 1: nat2N).	0.0201900005341	1
Coq.NArith.Nnat.Nat2N.inj_add	40	8	search with cache (only 1: nat2N).	0.0689799785614	48
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	search with cache (only 1: nat2N).	0.022360086441	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0219509601593	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0966358184814	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0230839252472	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0223741531372	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	0.8.0.5	search with cache (only 1: destruct n, m; only 1: simpl; only 1: do 8 (case Bool.eqb_spec; [ intros -> | constructor; now intros [=] ]); only 1: easy').	0.514667034149	498
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, N.eqb_eq).	0.0154550075531	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.0204858779907	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.2.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	0.570311069489	110
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	11	search with cache (only 1: t_eqb).	0.240128993988	121
Coq.Strings.String.eqb_eq	40	13	search with cache (only 1: t_eqb).	13.0102958679	4424
Coq.Strings.String.eqb_neq	40	1	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0909378528595	11
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0921969413757	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.0.11.6.1.0.19	search with cache (only 1: elim s; only 1: reflexivity; only 1: simpl; only 1: intro; only 1: intros H0; only 1: intros ->; only 1: reflexivity).	4.73490095139	4519
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	4.26.0.0.3	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	25.3207120895	22960
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	7	search with cache (only 1: auto).	0.072448015213	8
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	4	search with cache (only 1: auto).	0.08131980896	5
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	4	search with cache (only 1: auto).	0.0184600353241	5
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.157958984375	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.1.1.1.5.0	search with cache (only 1: intro; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: trivial; only 1: auto with arith).	0.431180953979	230
Coq.Reals.ROrderedType.Req_dec	40	0.0.3.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.29731202126	160
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40	0.0.4.14.2.16	search with cache (only 1: compute; only 1: intros; only 1: destruct (total_order_T x y); only 1: intuition; only 1: constructor; only 1: exact r).	14.5577487946	18146
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	1.1.0.0.0.0.0.6.0	search with cache (only 1: split; only 1: compute; only 1: intros x abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: red; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	0.629752874374	332
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0.0.2.1	search with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: auto).	0.225289106369	7
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	4.1.0.0	search with cache (only 1: intros; only 1: destruct (total_order_T x y); only 1: intuition; only 1: intuition).	0.294810056686	19
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.8.0.7	search with cache (only 1: intros b; only 1: intros; only 1: injection H; only 1: auto).	6.65125107765	3263
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	15.0.11	search with cache (only 1: fix even_equiv 1; only 1: intros n H; only 1: auto with arith).	2.00257587433	1932
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	0.2	search with cache (only 1: intros m n p; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.147120952606	4
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40	2.5	search with cache (only 1: fix ind_0_1_SS 1; only 1: reflexivity || assumption).	0.426651954651	117
Coq.Reals.Rfunctions.fact_simpl	40	0.2	search with cache (only 1: simpl; only 1: contradiction || auto).	0.147985935211	4
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	1.0	search with cache (only 1: intro; only 1: reflexivity).	0.143248081207	3
Coq.Reals.Rfunctions.pow_1	40	5.0	search with cache (only 1: intro; only 1: ring_Rsqr).	0.161828994751	7
Coq.Reals.Rfunctions.pow_add	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.204968929291	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	2.0.0.0.0	search with cache (only 1: intros z [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: ring).	0.260499954224	26
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	0.237165212631	10
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	3.1	search with cache (only 1: intro; only 1: ring_Rsqr).	0.392090082169	36
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.141423940659	1
Coq.Reals.Rfunctions.powerRZ_1	40	1.0.1	search with cache (only 1: simpl; only 1: intro; only 1: ring).	0.192914009094	16
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	0.0.1.0.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	1.1604719162	147
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.204471111298	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	0.2.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).	0.327425956726	8
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	1.0.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.116307020187	12
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	5.2.2.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto).	0.454545974731	205
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	0.35.2	search with cache (only 1: intros n; only 1: red; only 1: now right).	4.03582000732	5419
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.132313966751	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	search with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.142668962479	4
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.4.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.35324382782	84
Coq.Reals.RIneq.Rgt_not_eq	40	0.8.0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: pattern r1 at 2; only 1: subst; only 1: eauto).	2.37787795067	880
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.0.0.2.0.0.0.2.2	search with cache (only 1: intros x y [H| H] abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	4.81729006767	2055
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.8.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	2.08607697487	437
Coq.Reals.RIneq.Rdichotomy	40	0.1.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: tauto).	0.167948007584	4
Coq.Reals.RIneq.Rlt_le	40	0.2.3	search with cache (only 1: intros a b H; only 1: red; only 1: auto).	0.159482002258	19
Coq.Reals.RIneq.Rgt_ge	40	0.1.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.147438049316	4
Coq.Reals.RIneq.Rle_ge	40	0.0.4.2.2	search with cache (only 1: intros a b H; only 1: red; only 1: inversion_clear H; only 1: tauto; only 1: auto).	3.02106595039	455
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.152376890182	5
Coq.Reals.RIneq.Rlt_gt	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.137490987778	3
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.135338068008	1
Coq.Reals.RIneq.Rnot_le_lt	40	0.0.2.0.2.0.2.1.0	search with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: destruct H; only 1: destruct s; only 1: left; only 1: exact r; only 1: right; only 1: exact e; only 1: exact r).	2.67019295692	1088
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.161478042603	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.137364149094	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.1.1.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: intuition eauto  3).	0.385867118835	27
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.156867980957	6
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.163910865784	8
Coq.Reals.RIneq.Rnot_lt_ge	40	0.1.0.0.0.0.0	search with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: red; only 1: auto with real).	0.165180206299	8
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0.0.0	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.161635875702	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.155339002609	6
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.152287960052	5
Coq.Reals.RIneq.Rge_not_lt	40	1.0.0.1.1.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.429458856583	11
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.2	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.178733110428	6
Coq.Reals.RIneq.Rge_not_gt	40	0.0.0.2.1.1	search with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.489507913589	18
Coq.Reals.RIneq.Req_le	40	0.0.2	search with cache (only 1: destruct 1; only 1: right; only 1: reflexivity).	0.15510892868	5
Coq.Reals.RIneq.Req_ge	40	0.0.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.143700838089	4
Coq.Reals.RIneq.Req_le_sym	40	1.0	search with cache (only 1: unfold Rle; only 1: auto with *).	0.145735025406	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: auto).	0.149713993073	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.2.0	search with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.198861122131	7
Coq.Reals.RIneq.Rle_antisym	40	2.0.1.5.0.5.1	search with cache (only 1: intros x y; only 1: unfold Rle; only 1: intuition; only 1: exfalso; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	9.92637610435	3755
Coq.Reals.RIneq.Rge_antisym	40	1.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.161263942719	4
Coq.Reals.RIneq.Rle_le_eq	40	0.0.0.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.1774559021	4
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.151318073273	1
Coq.Reals.RIneq.Rlt_eq_compat	40	0.2.0.6	search with cache (only 1: intros a b c d; only 1: intuition eauto  3; only 1: subst; only 1: auto).	0.725264072418	189
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.0.0	search with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.151430845261	5
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	0.9.1	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros y Ey abs; only 1: eauto using Rle_trans with rorders).	1.83904099464	260
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.2	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.240504980087	34
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.15872502327	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.5.1.2.2	search with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: generalize (total_order_T r1 r2); only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	7.59144306183	858
Coq.Reals.RIneq.Rle_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.342523813248	3
Coq.Reals.RIneq.Rgt_dec	40	3.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.231686115265	7
Coq.Reals.RIneq.Rge_dec	40	1.1.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.47089099884	13
Coq.Reals.RIneq.Rlt_le_dec	40	1.0.0.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.200083971024	7
Coq.Reals.RIneq.Rgt_ge_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.182861089706	3
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.222852945328	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.243333816528	35
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.181644916534	3
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.0.0.1	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.207422971725	27
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.340343952179	40
Coq.Reals.RIneq.Rge_or_gt	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.157265901566	6
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.0.1.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.211740016937	7
Coq.Reals.RIneq.inser_trans_R	40	0.0.11.0.0	search with cache (only 1: intros; only 1: intuition eauto  2; only 1: edestruct Rlt_le_dec; only 1: intuition eauto  2; only 1: intuition eauto  2).	17.9125699997	2012
Coq.Reals.RIneq.Rplus_0_r	40	0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	1.3652100563	7
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	0.182770013809	7
Coq.Reals.RIneq.Rplus_opp_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.35454201698	6
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	2.0	search with cache (only 1: intros; only 1: auto with real).	0.229691028595	27
Coq.Reals.RIneq.Rplus_eq_compat_r	40	2.0	search with cache (only 1: intros r r1 r2; only 1: congruence).	1.19525909424	22
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.0.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with - x + x + y by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.184891939163	5
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40	0.3.0.0.0.0.0.1	search with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_mult_comm, CReal_inv_l; only 1: reflexivity).	18.7144589424	292
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	2.44500994682	64
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.151607036591	3
Coq.Reals.RIneq.Rmult_0_r	40	3.1	search with cache (only 1: intro q; only 1: ring).	0.282506942749	15
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.1466319561	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.192504167557	8
Coq.Reals.RIneq.Rmult_1_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.143959999084	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	search with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.140532016754	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.6.3	search with cache (only 1: intros r r1 r2 H; only 1: rewrite <- H; only 1: reflexivity).	1.47065615654	310
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.1	search with cache (only 1: intros a b H; only 1: rewrite H; only 1: auto with real).	0.286077022552	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.132941007614	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	2.2.1.1	search with cache (only 1: intros; only 1: split; only 1: auto with real; only 1: auto with real).	0.330134868622	40
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	1.2.0	search with cache (only 1: intros r1 r2 H; only 1: intro Hnotz; only 1: auto with real).	0.377732992172	41
Coq.Reals.RIneq.Rmult_plus_distr_r	40	1.2.0.0.0	search with cache (only 1: intros m n p; only 1: rewrite Rmult_comm; only 1: rewrite (Rmult_comm n p); only 1: rewrite (Rmult_comm m p); only 1: apply Rmult_plus_distr_l).	0.162681818008	8
Coq.Reals.RIneq.Rsqr_0	40	3.25	search with cache (only 1: compute; only 1: ring).	11.0574269295	1555
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	search with cache (only 1: auto with *).	0.133899927139	1
Coq.Reals.RIneq.Ropp_0	40	2	search with cache (only 1: ring).	0.143017053604	3
Coq.Reals.RIneq.Ropp_eq_0_compat	40	1.2.2	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.152552843094	8
Coq.Reals.RIneq.Ropp_involutive	40	2.0	search with cache (only 1: intro; only 1: ring).	0.148334980011	4
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.2	search with cache (only 1: intros a b; only 1: ring).	1.64207911491	30
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.0	search with cache (only 1: intros; only 1: ring).	0.145882129669	2
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.146219968796	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.146641016006	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.14670920372	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.146595954895	2
Coq.Reals.RIneq.Rminus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.137508153915	2
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.139569997787	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0	search with cache (only 1: intros; only 1: ring).	0.147730827332	2
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.146720170975	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.12	search with cache (only 1: destruct 1; only 1: ring).	9.30616116524	1142
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.0	search with cache (only 1: intros; only 1: ring).	0.274425029755	2
Coq.Reals.RIneq.Rminus_eq_contra	40	2.0.2.0.0	search with cache (only 1: intros r1 r2; only 1: unfold Rminus; only 1: intro; only 1: red; only 1: auto with real).	0.701545953751	67
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.155083179474	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.152968883514	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	search with cache (only 1: intros; only 1: ring).	2.01830410957	17
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.4.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.408004045486	35
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.161120891571	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.0.4.1	search with cache (only 1: intros a b H; only 1: field; only 1: red; only 1: auto).	0.808528900146	30
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.7.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.758086919785	38
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.6.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.787272930145	82
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	5.7	search with cache (only 1: red; only 1: auto with real).	1.69744491577	331
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.3.1.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.156587123871	9
Coq.Reals.RIneq.Rplus_le_compat_l	40	4.0.6	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	3.48240804672	334
Coq.Reals.RIneq.Rplus_ge_compat_l	40	0.1.0.8.0.14.8	search with cache (only 1: destruct 1; only 1: left; only 1: auto with real; only 1: red; only 1: elim H; only 1: right; only 1: auto with zarith real).	35.7726261616	13741
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.2.0.0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	3.59350895882	644
Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.3.2.3	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.445436954498	88
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.163274765015	5
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.2	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.331911087036	7
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.2.3	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.23289513588	17
Coq.Reals.RIneq.Rplus_lt_0_compat	40	0.1.0.1.0	search with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto using Rplus_lt_compat_l with real).	0.159501075745	7
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.1.1	search with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	0.842283964157	174
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.0.0.0	search with cache (only 1: intros n m p q; only 1: intros; only 1: generalize (Rlt_le_dec m q); only 1: intuition).	0.337008953094	4
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	1.6	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).	0.189038038254	26
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.201883792877	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	1	search with cache (only 1: auto with real).	1.83021402359	98
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.0.4.2	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	1.25402903557	96
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.0	search with cache (only 1: unfold Rge; only 1: intuition).	0.164448022842	2
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.1.0.1	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: auto with real; only 1: intro; only 1: auto with real).	0.489316940308	8
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.1.0.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: auto with real; only 1: intro; only 1: auto with real).	0.251909971237	7
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.154102087021	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.154817819595	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.142054080963	3
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.151806116104	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.15572810173	4
Coq.Reals.RIneq.Ropp_lt_cancel	40	0.1.0.0.1.8.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: edestruct Rle_dec; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real; only 1: auto with real).	23.6759960651	3693
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.0	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.147382974625	4
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.1	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.149907112122	5
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.1.0	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.624133110046	59
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	11.0.5	search with cache (only 1: intros a b c; only 1: intros; only 1: intuition).	5.94851493835	3103
Coq.Reals.RIneq.Rmult_gt_compat_l	40	2.0.5	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.423387050629	51
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	12.0.10	search with cache (only 1: intros a b c; only 1: intros; only 1: intuition).	15.7769641876	8086
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	0.2.0.2.4	search with cache (only 1: intros n m p q; only 1: unfold IZR; only 1: intros; only 1: generalize (Rlt_le_dec m q); only 1: intuition).	1.09164309502	280
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.1.0	search with cache (only 1: intros; only 1: replace r with - - r; only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.353768110275	47
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.3.2.9.1	search with cache (only 1: intros; only 1: replace r with - - r; only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	2.87982988358	1222
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	4.0.3.0.0.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	9.28416919708	1004
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.166408061981	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.3.2	search with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.823238134384	74
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.8.0.0.0.0	search with cache (only 1: intros; only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: apply (Rplus_lt_reg_l r2); only 1: auto with real; only 1: auto with real; only 1: ring).	32.7817490101	6367
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.1.1.0.0	search with cache (only 1: intros; only 1: replace r2 with 0 + r2; only 1: replace r1 with r1 - r2 + r2; only 1: auto with real; only 1: ring; only 1: auto with real).	0.195331096649	8
Coq.Reals.RIneq.Rminus_ge	40	0.0.0.1.1.5.0	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: replace r2 with 0 + r2; only 1: replace r1 with r1 - r2 + r2; only 1: auto with real; only 1: ring; only 1: auto with real).	11.9677870274	2478
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.150626897812	4
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.1	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.203605175018	19
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with r * / r; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real; only 1: auto with real).	3.53474092484	729
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	13.4	search with cache (only 1: intro q; only 1: apply Rlt_n_Sn).	6.7957470417	2561
Coq.Reals.RIneq.tech_Rgt_minus	40	8.0.0.0.2.2	search with cache (only 1: intros x y; only 1: intros; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: auto with real).	8.30871582031	2928
Coq.Reals.RIneq.S_INR	40	0.0.4.1.0.0	search with cache (only 1: simpl; only 1: intro; only 1: induction n as [| k iHk]; only 1: auto with real; only 1: simpl; only 1: ring).	0.513533830643	103
Coq.Reals.RIneq.S_O_plus_INR	40	2.0.2.0.0.0	search with cache (only 1: simpl; only 1: intro; only 1: destruct n; only 1: auto with real; only 1: simpl; only 1: ring).	0.244648933411	14
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	2.1.3.0.9.1	search with cache (only 1: induction n; only 1: auto with real; only 1: simpl; only 1: destruct n; only 1: auto with real; only 1: auto with real).	11.0030221939	5257
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	0.3.0.0	search with cache (only 1: simple induction 1; only 1: auto with real; only 1: clear m H; only 1: auto with arith real).	0.396236181259	20
Coq.Reals.RIneq.INR_not_0	40	3.5.0.0.1	search with cache (only 1: red; only 1: intros; only 1: apply H; only 1: subst n; only 1: reflexivity).	2.436658144	731
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	2.0.0.2	search with cache (only 1: red; only 1: intros n H H1; only 1: apply H; only 1: now apply not_INR in H).	1.4951570034	171
Coq.Reals.RIneq.IZN	40	0.0.0.23	search with cache (only 1: intros x H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	1.5383708477	1332
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.3.0.0.1	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: apply eq_IZR; only 1: auto with zarith real).	0.345833063126	24
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with r - (r + 1); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with r + 1 - r; only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	4.62692403793	1904
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	search with cache (only 1: intros; only 1: replace 0 with 0 * r2; only 1: auto with real; only 1: auto with real).	0.61040019989	92
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	6.1	search with cache (only 1: intros; only 1: ring).	0.14697098732	9
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.347835063934	31
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	5.1.3.0.3.1	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: intros; only 1: rewrite <- (Rmult_0_l x); only 1: rewrite <- (Rmult_comm x); only 1: auto with real).	35.9379029274	11779
Coq.Reals.RIneq.Rdiv_plus_distr	40	2.3.8	search with cache (only 1: intros x y z; only 1: unfold Rdiv; only 1: ring).	1.15445804596	341
Coq.Reals.RIneq.Rdiv_minus_distr	40	2.3.5	search with cache (only 1: intros x y z; only 1: unfold Rdiv; only 1: ring).	0.834133148193	217
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.170774936676	4
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40	0.1.0.1.0.0.4.3	search with cache (only 1: intros n m le; only 1: pattern m, n; only 1: apply le_elim_rel; only 1: intros; only 1: rewrite <- minus_n_O; only 1: trivial; only 1: auto with real; only 1: auto with real).	1.96631598473	868
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	5.1.5	search with cache (only 1: fix even_odd_double 1; only 1: intros; only 1: auto).	2.47202301025	827
Coq.Reals.ArithProp.le_double	40	0.1	search with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).	0.551403999329	69
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	1.0.1.0	search with cache (only 1: intro n; only 1: intros; only 1: simpl; only 1: auto with arith).	0.150349140167	6
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.SeqProp.growing_cv	40	14.16.3	search with cache (only 1: intros xn cau; only 1: fix ind_0_1_SS 1; only 1: assumption).	29.9784212112	16997
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40	12.11.6.3.2	search with cache (only 1: intro; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: intro; only 1: fix ind_0_1_SS 1; only 1: assumption).	10.0661230087	10432
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40	5.14.3	search with cache (only 1: intro X; only 1: fix odd_equiv 1; only 1: auto).	2.68058490753	2616
Coq.Reals.SeqProp.min_ss	40	0.0.0.0.0.0.0.4.0.2.0	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	2.67168402672	991
Coq.Reals.SeqProp.Wn_decreasing	40	1.8.1.0	search with cache (only 1: intros; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix odd_equiv 1; only 1: auto).	2.29445409775	917
Coq.Reals.SeqProp.Vn_growing	40	1.10.4.0	search with cache (only 1: intros; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix even_equiv 1; only 1: auto).	3.77233195305	2505
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	3.0.3.9.2	search with cache (only 1: intros; only 1: unfold Rle; only 1: revert n; only 1: fix even_odd_double 1; only 1: intuition congruence).	24.756554842	10646
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.075119972229	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40	0.0.6.3.0.4.0.1	search with cache (only 1: intro; only 1: intro; only 1: induction 1; only 1: apply Rle_refl; only 1: apply Rge_le; only 1: apply growing_prop; only 1: auto with arith; only 1: auto with arith).	13.8666160107	8226
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40	5.4.10.4	search with cache (only 1: unfold Un_cv; only 1: intros P H0 H1 H2; only 1: fix ind_0_1_SS 1; only 1: assumption).	18.0106670856	11763
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.160903930664	7
Coq.Reals.DiscrR.IZR_eq	40	0.1.0	search with cache (only 1: intros; only 1: subst; only 1: auto with zarith real).	0.143611907959	4
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.16.0	search with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	6.86248207092	2907
Coq.Reals.ConstructiveReals.CReq_sym	40	13.0	search with cache (only 1: intros; only 1: firstorder).	3.48907089233	955
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	0.1.0.1.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.102164030075	19
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40	0.0.3.0.0.4.2.0.1.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs; only 1: intro abs; only 1: apply H0; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	35.0736308098	13730
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40	21.2.0.0.2	search with cache (only 1: intros; only 1: intro abs; only 1: apply lt_CR_of_Q in abs; only 1: contradict H; only 1: auto with *).	23.4020431042	11596
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	32	search with cache (only 1: eauto).	2.07034611702	1704
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	0.2.0.1.3.3.20	search with cache (only 1: intros x y z; only 1: intros n H0; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite max_l; only 1: simpl; only 1: auto with arith; only 1: apply Nat.le_refl).	22.8979189396	20216
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	4	search with cache (only 1: auto).	0.144601106644	43
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	7	search with cache (only 1: apply CReal_isRingExt).	26.4601249695	276
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	3	search with cache (only 1: apply CReal_isRingExt).	25.5427258015	255
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.3.0	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	11.7331259251	68
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0628950595856	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	1.2	search with cache (only 1: intro; only 1: ring).	1.71557402611	124
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	4.4	search with cache (only 1: intros x y; only 1: ring).	1.97611284256	77
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0683119297028	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	0.2.0	search with cache (only 1: intros [xn limx]; only 1: intros k p q H H0; only 1: auto with arith).	0.183997154236	34
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0774030685425	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	7.0.11	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).	2.531291008	1613
Coq.Reals.R_sqr.Rsqr_plus	40	3.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	0.10019993782	6
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.208236932755	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	4.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0824658870697	6
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0819280147552	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	0.0.1.7.0.0	search with cache (only 1: intros; only 1: destruct (Rabs_pos x) as [| Heq]; only 1: auto with real; only 1: apply Rabs_no_R0 in H; only 1: symmetry in Heq; only 1: contradiction).	0.889889955521	303
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.9	search with cache (only 1: intros x y; only 1: ring_Rsqr).	0.353699207306	80
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0846438407898	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.2.3.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: ring_Rsqr).	0.167236089706	16
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	2.1.1.2	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: field; only 1: trivial).	0.246834039688	61
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.0.0.0.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.184470891953	5
Coq.Reals.Rlimit.eps4	40	26.0	search with cache (only 1: intros; only 1: field).	4.31997609138	1413
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.11207985878	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	1.0	search with cache (only 1: intros; only 1: lra).	0.114926815033	3
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.1.0.4.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: induction a as [a IH| a IH| ]; only 1: reflexivity; only 1: auto with zarith; only 1: auto).	1.15734791756	233
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	4.6210501194	2081
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.2	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0893609523773	17
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.0.0.4	search with cache (only 1: constructor; only 1: intro abs; only 1: pose proof (CRealLt_asym x x abs); only 1: contradiction; only 1: intro abs; only 1: pose proof (CRealLt_asym x x abs); only 1: contradiction).	0.227662086487	84
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	0.2.0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: auto; only 1: apply H).	0.0887610912323	8
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	2.6.2.2.2.0.0.2.2	search with cache (only 1: split; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl; only 1: split; only 1: apply H; only 1: apply H; only 1: red; only 1: now unfold Zdiv.eqm; intros a b c ->).	23.0903379917	4734
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	1.1.2.0.0.1.2.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros H1 H2; only 1: rewrite <- H0 in H2; only 1: rewrite <- H in H2; only 1: contradiction; only 1: intros H1 H2; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).	23.248693943	3672
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40	1.0.11.1.0.0.3	search with cache (only 1: intros x y lpo; only 1: intro; only 1: destruct H; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: assumption).	30.5489909649	4332
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	4.12.0.4.0	search with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: apply H0; only 1: destruct H, H0; only 1: assumption).	2.06059503555	988
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	4	search with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.185487985611	61
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	1	search with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.395350933075	21
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	4.31267309189	1371
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	4	search with cache (only 1: auto).	0.0743279457092	5
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	0.1.6	search with cache (only 1: intros (a, b) (c, d); only 1: simpl; only 1: auto).	0.121216058731	17
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	9	search with cache (only 1: assumption).	0.0740079879761	10
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.0.0.0	search with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.0868701934814	4
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	0.2.8.17.0	search with cache (only 1: intros x y z H; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	16.5583779812	8559
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.370303153992	9
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	3.26262593269	457
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.9	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x + t)); only 1: destruct H0; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: apply CReal_plus_proper_r; only 1: apply H).	33.6378171444	5476
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2.1	search with cache (only 1: apply (CReal_plus_eq_reg_l 0); only 1: reflexivity).	0.149232149124	17
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: intuition_in).	0.0739719867706	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	1.0	search with cache (only 1: unfold empty, Empty; only 1: auto).	0.0758831501007	3
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.0.1	search with cache (only 1: unfold create; only 1: intros; only 1: auto).	0.161649942398	23
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0	search with cache (only 1: reflexivity).	0.0722410678864	1
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.0.2	search with cache (only 1: induction m; only 1: reflexivity; only 1: simpl; only 1: auto).	0.113131046295	6
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0	search with cache (only 1: destruct m; only 1: reflexivity; only 1: simpl; only 1: auto).	0.110322952271	4
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	0.4.1.3	search with cache (only 1: intros m; only 1: intro; only 1: intro abs; only 1: inversion abs).	0.284810066223	73
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40
Coq.FSets.FMapFullAVL.IntMake.find_2	40	0.6.3.5.1	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intuition; only 1: apply find_2; only 1: auto).	1.05340790749	812
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	1.4.2.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).	0.225884199142	67
Coq.FSets.FMapFullAVL.IntMake.elements_3	40	7.0.0.20.3	search with cache (only 1: intros; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: inversion 1).	2.42579603195	1796
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	0.2.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0702838897705	5
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0445189476013	1
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.1.6.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	2.0187830925	716
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	0.0.0.12	search with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	1.08827877045	510
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40	0.2.3.0.2.3.18.0	search with cache (only 1: induction 1; only 1: eauto with *; only 1: firstorder; only 1: exists x; only 1: auto; only 1: firstorder; only 1: exists x; only 1: auto).	4.32740616798	5476
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.3.1.2.0	search with cache (only 1: induction m; only 1: intros x y H; only 1: inversion 1; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	1.41067814827	213
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	2.2.0	search with cache (only 1: split; only 1: intuition_in; only 1: intuition).	0.1498670578	7
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	12.6	search with cache (only 1: intros m x y; only 1: intuition_in).	1.36783599854	845
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.11	search with cache (only 1: intros m x y; only 1: intuition_in).	0.46977519989	139
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	3.5.9	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: L.MX.order).	2.49191808701	688
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.10	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	2.09180617332	129
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	1.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.072093963623	3
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0608789920807	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0	search with cache (only 1: intuition_in).	0.0605659484863	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0616331100464	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	2.0.0	search with cache (only 1: intros x y; only 1: intuition_in; only 1: eauto with ordered_type).	0.407535076141	5
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0702309608459	4
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0769009590149	1
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	2	search with cache (only 1: auto).	0.0547780990601	3
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	4.1.10.0	search with cache (only 1: unfold empty; only 1: intros m x y; only 1: eapply L.PX.MO.OrderTac.lt_irrefl; only 1: intuition_in).	6.12555909157	626
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	1.1.0.0.0.2.0.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: simpl; only 1: intros; only 1: unfold empty, Empty; only 1: intuition_in; only 1: simpl; only 1: intro H; only 1: discriminate).	1.04844403267	260
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.0.2.0.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: intros; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	0.0986940860748	9
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40	0.0.3.4.0.3.1.1.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: intros; only 1: discriminate; only 1: auto; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: auto).	19.2255368233	7258
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	0.0.2.3.0.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: now destruct 1; only 1: auto; only 1: auto; only 1: auto).	0.32279086113	101
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	0.0.0.0.0.0.0.0.0.4	search with cache (only 1: firstorder; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: apply find_2; only 1: auto; only 1: congruence; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	4.75736308098	1619
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	0.1	search with cache (only 1: unfold create; only 1: intuition_in).	0.312883853912	15
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.1.1.2.0	search with cache (only 1: intros; only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.21203494072	10
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40	3.0.2.10.32	search with cache (only 1: red; only 1: intros m; only 1: case m; only 1: auto; only 1: auto).	3.52698588371	5913
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	0.2.2.4	search with cache (only 1: simpl; only 1: induction 1; only 1: red; only 1: auto).	1.43086910248	439
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	3.0.1.0.2	search with cache (only 1: intros m x y; only 1: induction m; only 1: inversion 1; only 1: simpl; only 1: intuition_in).	0.568875074387	87
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	0.0.0.1.0.3.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	1.10422706604	238
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.161729812622	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	0.3.3.3	search with cache (only 1: intros m; only 1: intro; only 1: intro abs; only 1: inversion abs).	0.263156890869	80
Coq.FSets.FMapAVL.IntMake.is_empty_1	40	2.32	search with cache (only 1: fix odd_spec 1; only 1: auto).	8.74511194229	5013
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40	18.1.5.2.1	search with cache (only 1: intros m x y e; only 1: intros; only 1: red; only 1: simpl; only 1: auto using find_1, add_1 with ordered_type).	20.0017261505	18432
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40	0.1.40.5	search with cache (only 1: intros m x y e; only 1: apply find_1; only 1: apply (is_bst m); only 1: auto).	39.0725917816	32169
Coq.FSets.FMapAVL.IntMake.find_2	40	0.7.3.3.0	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intuition; only 1: apply find_2; only 1: auto).	1.5136089325	827
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	1.6.4.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).	2.29998087883	576
Coq.FSets.FMapAVL.IntMake.elements_3	40	8.7.0.1.1.25.1.1	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros x e0 y0 H H6; only 1: inversion_clear H).	12.096061945	7306
Coq.FSets.FMapAVL.IntMake.elements_3w	40	0.3.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.115564107895	6
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0956370830536	1
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.0.0.0.7.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	2.76205992699	1021
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40	3.5.4.20.3.17	search with cache (only 1: intros x y; only 1: intuition; only 1: destruct x; only 1: LO.cmp_solve; only 1: LO.cmp_solve; only 1: LO.cmp_solve).	19.4692938328	15157
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.6.0.0.2.2.0	search with cache (only 1: destruct e2; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: auto).	1.55694890022	635
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	2.1	search with cache (only 1: intros; only 1: reflexivity).	0.127929925919	5
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	2.1	search with cache (only 1: intros; only 1: reflexivity).	0.127549171448	5
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	4.0	search with cache (only 1: symmetry; only 1: intuition).	0.103561878204	6
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	3	search with cache (only 1: intuition).	0.133426904678	14
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	3	search with cache (only 1: intuition).	0.104605913162	13
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	4	search with cache (only 1: intuition).	0.111572980881	14
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	1	search with cache (only 1: intuition).	0.125579118729	15
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40	0.2.16.0.2.2	search with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: destruct 1; only 1: auto; only 1: intros EQ; only 1: intuition; only 1: exact (add_3 E H)).	18.0739319324	9557
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	0.1.4.4	search with cache (only 1: intro H; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.641638994217	174
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	1	search with cache (only 1: intuition).	0.120677947998	26
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	0	search with cache (only 1: intuition).	0.0588171482086	1
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	3	search with cache (only 1: intuition).	0.0797379016876	14
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	0	search with cache (only 1: intuition).	0.0480570793152	1
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40	0.0.0.0.0.0.2.1	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	2.39929819107	253
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	0.0.0.1.0.4.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	10.0323431492	1247
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	16.0.1.1	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	1.32558989525	1372
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	6.4	search with cache (only 1: red; only 1: firstorder).	2.26976394653	450
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	14.0.15	search with cache (only 1: intro H; only 1: intros y LT; only 1: firstorder).	29.2372128963	22031
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.1.4.2	search with cache (only 1: intros n; only 1: red; only 1: intros; only 1: trivial).	0.115620851517	38
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.0.2.4	search with cache (only 1: intros; only 1: red; only 1: intros y LT; only 1: auto).	0.0722870826721	10
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	10.0.1	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	5.95892190933	357
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	17	search with cache (only 1: firstorder).	0.720437049866	385
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	0.0.1.3.6	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	3.25343799591	336
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.2.1.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: rewrite H; only 1: do 2 rewrite remove_iff; only 1: intuition).	0.153820991516	12
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	0.1.5.3	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: rewrite H; only 1: intuition).	1.26355600357	389
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.2.0	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.15299487114	15
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.2.0	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.0933630466461	5
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.4.4.12	search with cache (only 1: vm_compute; only 1: intros s s' H s'' s''' H0; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).	4.243901968	1864
Coq.FSets.FSetPositive.PositiveSet.In_1	40	4.12.0	search with cache (only 1: intros x y z; only 1: red; only 1: <Coq.Strings.String.t_eqb>).	4.29756808281	2228
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.0.5.0	search with cache (only 1: intros n; only 1: constructor; only 1: trivial; only 1: trivial).	0.186370134354	34
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	3.0	search with cache (only 1: intros y z H1 H2; only 1: now symmetry).	0.123969078064	5
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	2.14.3.7	search with cache (only 1: intros x y z; only 1: intuition auto; BinInt.Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intros EQ; only 1: now etransitivity).	3.92652606964	3530
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	7.0	search with cache (only 1: intros; only 1: auto).	0.122928857803	9
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.119047164917	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	3.1	search with cache (only 1: intros n; only 1: now destruct n).	0.123492002487	6
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	9.17	search with cache (only 1: vm_compute; only 1: discriminate).	0.313229084015	409
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	3.0.10	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	0.65399813652	323
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.135656118393	3
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.15	search with cache (only 1: vm_compute; only 1: auto with *).	0.254019021988	209
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	2.33.9	search with cache (only 1: intro; only 1: fix even_spec 1; only 1: eassumption).	30.6488060951	31440
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.1.2.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	0.192549943924	8
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.1.4.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	0.195914030075	10
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	0.0.0.0.0.0.0.0.0.7.14	search with cache (only 1: intros n m s1 s2; only 1: case s1; only 1: simpl; only 1: intros; only 1: now subst; only 1: simpl; only 1: intros; only 1: now subst; only 1: simpl; only 1: intros; only 1: now subst).	13.5642459393	10914
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	23	search with cache (only 1: destr_bool).	0.399672031403	435
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	0.0.0.1.0.0.0.2.2.0.0.0.0.1.1.4	search with cache (only 1: intros s1; only 1: elim s1; only 1: intro n; only 1: split; only 1: firstorder; only 1: intros (EQ, EQ'); only 1: auto; only 1: intros s2; only 1: split; only 1: firstorder; only 1: now subst; only 1: firstorder; only 1: intro n; only 1: split; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	31.8935520649	17629
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.345050811768	59
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40	4.0.48	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	5.54563593864	12677
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.144054174423	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.0.0.3	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.138177871704	7
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.13459610939	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.132855892181	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.135143041611	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.20	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).	1.29951000214	893
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	1.0.13	search with cache (only 1: intros [| l' o' r']; only 1: reflexivity; only 1: reflexivity).	0.390439987183	188
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	5.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with arith).	0.15273308754	15
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	1.2.0	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.147302865982	6
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	1.10.20	search with cache (only 1: intros s i Hi; only 1: rewrite remove_spec; only 1: tauto).	24.1108691692	14297
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.161125898361	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	3.0.1.0.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: intuition congruence).	0.213889837265	26
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.141731023788	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.8	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.307507991791	71
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.1.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.152225017548	4
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.157008886337	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.1.1.3	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.250538825989	48
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.153543949127	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.151140928268	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.2.2.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.156272888184	8
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.143025875092	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct j; only 1: simpl; only 1: rewrite (IHi j~1); only 1: auto; only 1: simpl; only 1: rewrite (IHi j~0); only 1: auto; only 1: simpl; only 1: rewrite <- (IHi 1); only 1: auto; only 1: intros; only 1: simpl; only 1: destruct j; only 1: rewrite (IHi j~1); only 1: auto; only 1: rewrite (IHi j~0); only 1: auto; only 1: rewrite <- (IHi 1); only 1: auto; only 1: reflexivity).	34.1904289722	15391
Coq.FSets.FMapPositive.append_neutral_r	40	0.0.1.0.1.0.6	search with cache (only 1: induction i; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: auto).	0.39807510376	245
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.121838092804	7
Coq.FSets.FMapPositive.PositiveMap.gempty	40	15	search with cache (only 1: now intros []).	0.276929140091	154
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.13312292099	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.0.0.0.2	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: reflexivity).	0.135939836502	8
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	31.5228021145	7257
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	1.1.1.5	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.726515054703	149
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	0.7.1	search with cache (only 1: intuition auto; ME.MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- H; only 1: auto).	0.184284925461	30
Coq.FSets.FMapPositive.PositiveMap.find_1	40	1.1	search with cache (only 1: intros; only 1: auto).	0.102718114853	4
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.101618051529	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	5.0	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.11162686348	13
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	0.0.0.0.0.3.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: unfold map; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: discriminate).	4.62222719193	1595
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	15.678527832	5450
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0484569072723	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	0.0.4	search with cache (only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.0740399360657	35
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	3	search with cache (only 1: intuition).	0.035190820694	4
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40	3.37.7	search with cache (only 1: intros; only 1: Ndec.eqb2eq; only 1: intuition).	33.3213529587	32334
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	0.3.1.4	search with cache (only 1: intros; only 1: generalize (mem_in_iff m x); only 1: intro; only 1: intuition).	0.259356021881	95
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.19.0.4	search with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	4.61959886551	3898
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	4	search with cache (only 1: intuition).	0.0436310768127	29
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.2.0.1	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.0606241226196	23
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40	0.0.0.1.2.0.0.0.1.3.0.1	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	4.98889493942	2712
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	0.0.0.3.0.1.2.0	search with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).	1.23879408836	493
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40	0.0.0.1.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	0.841417074203	365
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40	2.3.0.0.0.5.4.3.0	search with cache (only 1: split; only 1: intros (e, H); only 1: exists e; only 1: apply elements_1; only 1: auto; only 1: intros (e, H); only 1: exists e; only 1: apply elements_2; only 1: auto).	21.8804759979	15201
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40	0.1.11.0.0.0.2.0.3	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro n; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: inversion H; only 1: discriminate).	23.9485869408	14935
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	1.2	search with cache (only 1: intros; only 1: auto with map).	0.0246829986572	5
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	0.0.0.0.4.2.1.5	search with cache (only 1: intuition; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: intros; only 1: auto with map).	1.55352115631	868
Coq.FSets.FMapFacts.WFacts_fun.add_o	40	0.0.0.0.0.1.4.2	search with cache (only 1: intros; only 1: destruct (eq_dec x y) as [E| E]; only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	2.97434616089	924
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.1.0.0.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0676851272583	13
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	1.2.0.1	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	0.145113945007	24
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40	0.0.0.0.1.1.0.5.0.0	search with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: auto; only 1: auto; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	2.59602022171	1093
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0	search with cache (only 1: split).	0.0179030895233	1
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	5.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.131507158279	38
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	2.11.0.5	search with cache (only 1: intros; only 1: intro k; only 1: rewrite H; only 1: auto with map).	38.1090261936	10002
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.1.0.0	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.0366749763489	5
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.2.0.3.0	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	0.477325201035	89
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.0.0.0.1.2	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.128468036652	29
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40	5.0.27	search with cache (only 1: intro x; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).	2.11569404602	2156
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	0.1.3.17	search with cache (only 1: intro x; only 1: rewrite <- cardinal_Empty; only 1: intros; only 1: auto).	11.5764980316	7106
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	0.0.1.0.0.1.0.0.7.6.0.0.0.1	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	16.0327160358	10395
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40	11	search with cache (only 1: firstorder).	0.840198993683	284
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	6.13	search with cache (only 1: unfold Disjoint; only 1: firstorder).	2.18411898613	1051
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40	9	search with cache (only 1: firstorder).	0.401524066925	14
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.230673074722	91
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	3	search with cache (only 1: inversion_clear 1).	0.0200839042664	4
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	0.1	search with cache (only 1: unfold Empty, empty; only 1: eauto).	0.0178210735321	3
Coq.FSets.FMapWeakList.Raw.is_empty_1	40	0.8	search with cache (only 1: fix even_spec 1; only 1: auto).	0.148880958557	20
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	1.9	search with cache (only 1: fix even_spec 1; only 1: auto).	0.603671073914	334
Coq.FSets.FMapWeakList.Raw.mem_1	40	3.14.1	search with cache (only 1: intros m; only 1: fix even_spec 1; only 1: auto).	13.7837400436	2701
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	0.0.1.1.0.0.1.0.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	9.13780117035	2730
Coq.FSets.FMapWeakList.Raw.remove_3'	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.0705277919769	9
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.1	search with cache (only 1: intros m Hm x y; only 1: auto).	0.0196549892426	3
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0164730548859	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	4.0.0.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).	0.0422971248627	14
Coq.FSets.FMapWeakList.Raw.fold_1	40	6.1.0.17	search with cache (only 1: induction m; only 1: intuition; only 1: simpl; only 1: intuition).	4.60436892509	4382
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40	2.21.2.2.5	search with cache (only 1: intros m Hm x e; only 1: generalize Hm; only 1: clear Hm; only 1: fix even_spec 1; only 1: auto).	27.2064039707	34518
Coq.FSets.FMapWeakList.Raw.equal_2	40	1.14.2	search with cache (only 1: intros m Hm x; only 1: fix even_spec 1; only 1: firstorder).	26.5291969776	14844
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40	0.0.1.0.0.3.9.5	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: split; only 1: auto; only 1: auto; only 1: eauto; only 1: auto; only 1: auto).	4.77363085747	5740
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	0.1.11.2	search with cache (only 1: intros m; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.809268951416	816
Coq.FSets.FMapWeakList.Make.is_empty_1	40	2.0.16	search with cache (only 1: fix even_spec 1; only 1: intros m; only 1: auto).	0.358803987503	529
Coq.FSets.FMapWeakList.Make.is_empty_2	40	1.1.10.8.3.1.1.10.11.0	search with cache (only 1: intros m; only 1: induction m; only 1: intuition; only 1: intros m; only 1: simpl; only 1: intuition; only 1: inversion H; only 1: destruct H0; only 1: discriminate; only 1: discriminate).	26.5962641239	40936
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40	1.10	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.134217977524	175
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40	1.0.8	search with cache (only 1: fix gcd_divide 1; only 1: intros m; only 1: auto).	0.148509979248	161
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0247571468353	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0277810096741	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	0.35.2	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.546941995621	1999
Coq.FSets.FMapWeakList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0235471725464	1
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.155220985413	5
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: split; only 1: generalize (union_inter_cardinal s s'); only 1: intros; only 1: auto with fset; only 1: generalize (union_inter_cardinal s s'); only 1: intros; only 1: auto).	0.175940036774	9
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	3.14	search with cache (only 1: compute; only 1: intuition Dec.fsetdec).	0.539548158646	152
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.0.1.3.1.1	search with cache (only 1: red; only 1: split; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec; only 1: inversion 1).	1.32718896866	285
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	6.4.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	1.82752490044	348
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	3.77622795105	682
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	2.0.2.0.0.0.3.0.1.1.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: destruct 1; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: split; only 1: auto; only 1: auto with sets).	32.5451021194	9273
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.195372104645	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40	7.27.6.10	search with cache (only 1: intros Heqn; only 1: intros m; only 1: f_equiv; only 1: auto with set).	34.6097819805	35290
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	5.9	search with cache (only 1: intros; only 1: auto with set).	0.240556001663	107
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0650360584259	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0.2	search with cache (only 1: apply mem_1; only 1: Dec.fsetdec).	0.0972800254822	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.190758943558	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.14822602272	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.187747955322	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	1	search with cache (only 1: auto with set).	0.0626990795135	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40	0.0.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	20.5301840305	1937
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0999059677124	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.0.1.4	search with cache (only 1: rewrite FM.mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.21958899498	35
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	0.3	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0793960094452	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40	1.5.0.1.5.0.0.0	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	5.60468220711	1866
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.080579996109	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	0.1.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.0781331062317	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1	search with cache (only 1: auto with set).	0.0607039928436	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	4.0	search with cache (only 1: intros; only 1: auto with set).	0.0776460170746	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	3.0	search with cache (only 1: intros; only 1: auto with set).	0.0697960853577	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	0	search with cache (only 1: auto with set).	0.0633578300476	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0	search with cache (only 1: auto with set).	0.0629880428314	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	0.26	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: apply remove_3).	11.0065128803	2585
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	1.3.0.11.0.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: split; only 1: apply subset_2; only 1: auto with set; only 1: Dec.fsetdec).	6.78002882004	1217
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.0635249614716	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0806229114532	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	0.0.0.8	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.221248149872	62
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	1	search with cache (only 1: auto with set).	0.0652008056641	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0714321136475	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0640711784363	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0635540485382	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.063273191452	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0624678134918	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	1	search with cache (only 1: auto with set).	0.0617010593414	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	1	search with cache (only 1: auto with set).	0.0630660057068	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0620620250702	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.159474849701	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: auto with set).	0.0645060539246	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0682489871979	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0637760162354	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0638601779938	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0627119541168	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0633790493011	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0629720687866	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	3.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.232614994049	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0643651485443	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0637159347534	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	3.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.139315128326	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.0626060962677	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0661871433258	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0628061294556	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0627458095551	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	1	search with cache (only 1: auto with set).	0.0625159740448	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0729689598083	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40	0.0.0.0.13.10	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	9.91492605209	4088
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.116980791092	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.11572599411	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.0632288455963	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.117553949356	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.113352060318	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.122697114944	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	10	search with cache (only 1: auto with set fset).	0.230110883713	60
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.4.3	search with cache (only 1: intros s s' H; only 1: f_equal; only 1: auto).	0.095242023468	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: auto with set).	0.119438886642	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0690920352936	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	2.0.0.1.0.0.4	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	0.824687957764	212
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40	0.1.11.0.2.0	search with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	10.2545208931	3348
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.0.0.7	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.147657871246	24
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	14.13.5	search with cache (only 1: simpl; only 1: intros n m; only 1: eauto).	1.7138428688	4960
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.0.0.2.3.0	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	0.0874998569489	90
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.4.5.0	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	1.98880505562	1743
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.2.0.0.0.6.0	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.606343984604	650
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.0.1	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0295550823212	15
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.1.9.1	search with cache (only 1: intuition; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.226572036743	285
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	2.0	search with cache (only 1: intros; only 1: firstorder).	0.103454828262	69
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.1.4.3.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	3.0686070919	649
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1	search with cache (only 1: intros s x; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	12.836769104	967
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.2.7.0	search with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	20.653881073	1389
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0159928798676	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.1.2.3	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0724258422852	66
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.2.3.0	search with cache (only 1: intros s x y; only 1: firstorder; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.139116048813	58
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	0.0.2.1	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0480008125305	30
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.1	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.019800901413	14
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.2	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0497190952301	46
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0161809921265	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0163180828094	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.1.1.1	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0709569454193	19
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	1.0.0.0.2.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0306098461151	9
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.1.1.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0916409492493	28
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	5	search with cache (only 1: decide equality).	0.0479800701141	21
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	0.6.2.24.15.1	search with cache (only 1: intros; only 1: intro s; only 1: red; only 1: intros; only 1: rewrite <- (H _ _ H0); only 1: auto).	30.7827370167	27914
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.1.0.0.1.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.281580924988	8
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.180453062057	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.0.0.0.0.2	search with cache (only 1: intros s x f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: inversion H).	0.381720066071	80
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0778419971466	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	13	search with cache (only 1: solve_proper).	1.14758205414	452
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40	3.1.9	search with cache (only 1: intuition; only 1: red; only 1: eauto with set).	0.495643854141	283
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	4.1.1	search with cache (only 1: intuition; only 1: red; only 1: eauto with set).	0.151823043823	34
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.137367010117	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	1.1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: split; only 1: fsetdec; only 1: fsetdec).	0.122969865799	7
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0882019996643	1
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	0	search with cache (only 1: fsetdec).	0.108157157898	1
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0.0.0	search with cache (only 1: red; only 1: intros y LT; only 1: auto).	0.063992023468	3
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0895280838013	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.102722167969	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0909662246704	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0625741481781	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0932588577271	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0986351966858	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.120451927185	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.085618019104	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0760400295258	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.1.1.1.0	search with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: destruct 1; only 1: fsetdec).	0.195003032684	9
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.101925134659	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0954260826111	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	0	search with cache (only 1: fsetdec).	0.131008148193	1
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	1.1.0	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.229526996613	5
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	6.0.0	search with cache (only 1: split; only 1: apply remove_3; only 1: fsetdec).	0.25709605217	27
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.178040027618	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.184458017349	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.180265188217	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.131790161133	1
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.325106143951	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	1	search with cache (only 1: fsetdec).	0.134406089783	2
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.120718002319	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.152610063553	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.151108026505	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.204859972	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.137513875961	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.212080955505	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.347440004349	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.333600997925	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0751729011536	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0749170780182	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.117994070053	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.104897975922	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.104454994202	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.13482093811	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.123730897903	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	2	search with cache (only 1: fsetdec).	0.183374881744	18
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.128242969513	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.119851827621	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.142215967178	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.156680822372	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.187851905823	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.233623981476	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.237884998322	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.206355810165	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.244318008423	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0940511226654	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0921959877014	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0783231258392	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0785849094391	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0988540649414	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.121783971786	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.120190143585	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0828261375427	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.155205965042	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.208683013916	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.27952003479	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.222043991089	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	2.4.3	search with cache (only 1: split; only 1: fsetdec; only 1: intuition).	0.711606025696	84
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.5	search with cache (only 1: expAdd; only 1: fsetdec).	0.482420921326	18
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.315731048584	5
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.486184120178	2
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.447863817215	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.461914777756	3
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	0.0.0.0.0.0.1.2	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intros; only 1: eapply Pstep; only 1: auto; only 1: auto).	0.530745983124	110
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40	6.1.0.0.1.4	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto with *; only 1: intros; only 1: fsetdec).	2.41900396347	800
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.0.0.3.1	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: exact eq_equivalence; only 1: auto with *).	0.0947980880737	9
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40	1.0.13.7.0.4.7.16	search with cache (only 1: intros until s; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: intros; only 1: eapply fold_right_eqlistA2; only 1: eauto; only 1: auto; only 1: auto with *).	28.5147719383	14338
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	1.1.9.2	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).	0.789286136627	356
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	0.0.0.0.0.1.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.55514407158	745
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0735840797424	3
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	0.0.1.0.0.6	search with cache (only 1: intro; only 1: rewrite elements_Empty, M.cardinal_1; only 1: intro; only 1: destruct (elements s); only 1: auto; only 1: discriminate).	0.394299030304	129
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.1.0.1	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.0844631195068	6
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	0.27.1	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	9.03223395348	3887
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	12.2	search with cache (only 1: symmetry; only 1: intuition).	2.02305698395	1072
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: expAdd; only 1: fsetdec).	0.154071092606	6
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	1.1.0.0.0.2.0.0.3	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: auto with set).	8.22579598427	3094
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	2	search with cache (only 1: auto with set fset).	0.133024930954	33
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.105414867401	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.10434794426	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.0573189258575	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.226863145828	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.1.0	search with cache (only 1: split; only 1: eauto; only 1: eauto).	0.0640308856964	4
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	1	search with cache (only 1: fsetdec).	0.401345968246	29
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.119812011719	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.294182062149	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	11	search with cache (only 1: fsetdec).	0.142486095428	96
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.10538983345	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	5.6	search with cache (only 1: unfold Subset, Empty, impl; only 1: fsetdec).	1.57366394997	580
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.141597986221	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.171989917755	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.193571805954	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.125815868378	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.28893995285	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.344411849976	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.132510185242	5
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	4.4	search with cache (only 1: intros; only 1: fsetdec).	0.26229596138	26
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	1	search with cache (only 1: fsetdec).	0.138710021973	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.111924886703	1
Coq.FSets.FMapList.Raw.empty_1	40	3	search with cache (only 1: inversion 1).	0.0229489803314	4
Coq.FSets.FMapList.Raw.empty_sorted	40	0.2	search with cache (only 1: unfold Empty, empty; only 1: eauto with ordered_type).	0.0233099460602	4
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	1.1.0.0.0.4	search with cache (only 1: unfold Empty, empty; only 1: intros m; only 1: case m; only 1: auto; only 1: intros (k, e) l inlist; only 1: intuition).	0.698930025101	294
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.0.1.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: intuition).	2.24715900421	872
Coq.FSets.FMapList.Raw.elements_1	40	3.1	search with cache (only 1: intros; only 1: auto).	0.0251801013947	6
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0215249061584	1
Coq.FSets.FMapList.Raw.elements_3	40	2.0.0.0.1	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).	0.0407848358154	8
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	3.0.0.0.3	search with cache (only 1: induction m; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: intuition).	0.398535966873	159
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.0.0.0.3.1.0.0	search with cache (only 1: intros m x f; only 1: induction m; only 1: simpl; only 1: auto with ordered_type; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion_clear 1; only 1: auto).	1.15073513985	501
Coq.FSets.FMapList.Raw.map_sorted	40	4.2.2.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct a as (x', e); only 1: inversion 1; only 1: eauto).	6.94606113434	3401
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.0.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.0653569698334	9
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0728960037231	12
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.0.1.9.5	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: auto).	1.79195404053	2627
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	0.1.4.2	search with cache (only 1: intros m; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.139601945877	48
Coq.FSets.FMapList.Make.is_empty_1	40	0.1.20	search with cache (only 1: fix even_spec 1; only 1: intros m; only 1: auto).	0.45839881897	877
Coq.FSets.FMapList.Make.is_empty_2	40	11.3.8.3.2.7.1.0	search with cache (only 1: intros m; only 1: case m; only 1: induction m; only 1: intros m; only 1: case m; only 1: intros sorted hyp; only 1: exact (Raw.empty_1 (elt:=elt)); only 1: inversion 1).	12.4315359592	17985
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0322489738464	1
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0333850383759	2
Coq.FSets.FMapList.Make.elements_3	40	0.10	search with cache (only 1: induction m; only 1: auto).	0.0833220481873	66
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0295310020447	1
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	0.19	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.26925897598	1797
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.2	search with cache (only 1: split; only 1: auto with sets).	0.0101590156555	4
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	1.4.1	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.0332410335541	25
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	0.9.1	search with cache (only 1: intro H; only 1: left; only 1: trivial).	0.0181069374084	118
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	1.0	search with cache (only 1: red; only 1: auto with sets).	0.00598287582397	3
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0	search with cache (only 1: now induction d).	0.00705695152283	1
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.4.0	search with cache (only 1: simpl; only 1: symmetry; only 1: now destruct n).	0.0602400302887	7
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	search with cache (only 1: apply of_lu_double_gen).	0.0399169921875	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0	search with cache (only 1: auto).	0.0402598381042	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0468690395355	2
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0562589168549	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40	3.5.16.4	search with cache (only 1: unfold Pos.to_int, Pos.of_int, norm; only 1: induction d; only 1: now induction d; only 1: now destruct nzhead).	3.94321513176	2272
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	3	search with cache (only 1: trivial).	0.0451231002808	4
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	0.0.0.0.0.0.0.0.0.0.0.8	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	4.0965821743	1449
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.0.0.2.5.0	search with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: f_equal; only 1: unfold Nat.of_uint; only 1: now induction d).	0.621370077133	196
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	7.6.10	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	1.87565493584	1036
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	0.0.0.0.0.0.0.0.2.8	search with cache (only 1: apply Nbit_faithful; only 1: destruct n; only 1: split; only 1: destruct p; only 1: simpl; only 1: now rewrite Unsigned.of_to; only 1: simpl; only 1: now rewrite Unsigned.of_to; only 1: simpl; only 1: reflexivity).	5.20288777351	2667
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	search with cache (only 1: now induction d).	0.052542924881	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.0.1	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0707359313965	5
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.0.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.121401786804	7
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	0.0.0.11.0	search with cache (only 1: exists (N.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold N.to_int, N.of_int, norm; only 1: f_equal; only 1: now induction d).	5.51706194878	1650
Coq.Numbers.DecimalN.Signed.of_int_norm	40	6.0.0.4.5	search with cache (only 1: destruct d; only 1: unfold N.to_int, N.of_int, norm; only 1: f_equal; only 1: now induction d; only 1: now induction d).	3.71808886528	1158
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	1	search with cache (only 1: trivial).	0.0697100162506	16
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	7.7.1	search with cache (only 1: intro n; only 1: compute; only 1: now nzsimpl).	0.772954940796	362
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.290465116501	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.3	search with cache (only 1: compute; only 1: now nzsimpl).	0.142833948135	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.195467948914	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.134969949722	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.229357004166	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.1.1.2	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.344826936722	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	4.0.0	search with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl).	0.46902680397	26
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.1.0.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.365660905838	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.2.0	search with cache (only 1: intros n m; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.4577460289	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	1.2.0.1	search with cache (only 1: unfold Z.opp, Z.eq; only 1: intro m; only 1: simpl; only 1: now nzsimpl).	0.376690149307	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	6.0	search with cache (only 1: intros; only 1: apply BinInt.Z.lt_irrefl).	0.141294002533	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	6.0.1	search with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	0.385812997818	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0202550888062	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0199909210205	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0197689533234	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0197629928589	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	2.15.7.2	search with cache (only 1: rewrite one_succ; only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	4.0862839222	2465
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	0.8.7.8.0	search with cache (only 1: intros n m p; only 1: revert n m; only 1: intro m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	39.986882925	14530
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	0.10.4	search with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	1.22469711304	682
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	1.6.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.212255954742	71
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.022833108902	7
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	2.21.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	10.1729011536	4901
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	0.0534870624542	26
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0858900547028	33
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0279068946838	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	1.1.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0120887756348	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	1.0.0.6.0.0.1.6.35	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order'; only 1: apply lt_1_2; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_refl; only 1: order').	29.3291139603	29992
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.16.5	search with cache (only 1: intros a0; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	9.79701209068	5955
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	0.3.0.2.0.0.0.0.0.0.6.1	search with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros EQ; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite EQ; only 1: now rewrite 2!testbit_neg_r).	8.25986099243	9115
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.160899162292	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0359199047089	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0424180030823	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0123810768127	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	3.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).	0.0146372318268	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0121400356293	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	6.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0135569572449	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	5.2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.0372738838196	39
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0122129917145	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0126168727875	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.9.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.848320960999	295
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	2.8.14.0.10	search with cache (only 1: intros m; only 1: bitwise; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	33.5226788521	34626
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	44.0.3	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	33.6927950382	40701
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0158290863037	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0155389308929	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0188629627228	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	1.0.1	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0325090885162	15
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.2.2.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.396059036255	313
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	0.0.0.0.0.0.2.0.0.2.7.0	search with cache (only 1: intros n m; only 1: destruct_max n; only 1: intuition order; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_l, mul_opp_r; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_opp).	22.8935749531	25422
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.2.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.0517477989197	28
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.0.0.1.1.1.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	3.98498702049	2815
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.1.0.1.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	0.0289659500122	9
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.14.1.0.2.4.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_1_l, le_0_1).	25.4785618782	41576
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0290329456329	4
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.7.0	search with cache (only 1: intros a b g NZ EQ; only 1: rewrite !quot_div_exact; only 1: rewrite gcd_div_factor; only 1: now rewrite <- EQ, div_same; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: rewrite EQ; only 1: apply gcd_divide_l; only 1: rewrite EQ; only 1: apply gcd_divide_r; only 1: trivial; only 1: rewrite EQ; only 1: apply gcd_divide_r; only 1: trivial; only 1: rewrite EQ; only 1: apply gcd_divide_l).	29.0173580647	18844
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.0.0	search with cache (only 1: unfold lcm; only 1: intros a b; only 1: apply abs_nonneg).	0.0174369812012	5
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.0.1.0.28.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	33.2832548618	26713
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0155680179596	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.2.0.13.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial).	0.699516057968	878
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0168190002441	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0170798301697	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	1.9.0.1.3.1	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply abs_nonneg; only 1: trivial; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	21.891931057	17849
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	1.0.0.0.0.1.0.0.0.0.0.1.0.0	search with cache (only 1: intros n m Hn; only 1: split; only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: apply divide_lcm_l).	7.32261896133	5596
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.1.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0266950130463	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.0.1.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	1.31916499138	681
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.0.0.2.3.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.245362043381	105
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.6.5.1.1.0.4.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l; only 1: intros q H H'; only 1: apply divide_abs_r; only 1: now apply divide_abs_l, divide_abs_r).	23.6548290253	23187
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.2.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0431768894196	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.4.0.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	1.90396404266	1366
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.0.3.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono).	6.88204908371	4447
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.10.0.0.0.11.0.3	search with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l).	34.3677041531	33522
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.2.1.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	3.23311209679	2118
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.4.0.0.0.6.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	2.44218111038	2215
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.3.0.0.0.0.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	10.259759903	8017
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	0.0.0.3.0.0.0.0.0.2	search with cache (only 1: intros n m H1 H2; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	2.95399594307	1775
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	2.3.0.0.5.0.4.0.0.4.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	2.83618092537	2246
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	1.3.4.4.1.11.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: apply min_r; only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: apply min_l; only 1: now apply mul_le_mono_nonpos_l).	7.30556297302	4285
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	1.0.0.4.5.0.0.6.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r).	3.21956896782	2257
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	1.0.0.1.0.3	search with cache (only 1: nzinduct n; only 1: left; only 1: now nzsimpl; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.198188066483	148
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.9.0	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0464899539948	80
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	4.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0218131542206	12
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.1.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.01313996315	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	3.2.5.3.2	search with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r; only 1: now nzsimpl').	1.65316581726	2378
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	10.0.1.1.4	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite le_succ_l).	37.1867551804	18051
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.1.5.5	search with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.574093103409	798
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.0.0.5.8.3	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: nzsimpl; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	19.9803500175	14342
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	1.0.1	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0422101020813	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.2.1.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0243439674377	9
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.0.0.5.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	0.17631983757	66
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.0.4.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.101489067078	14
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	2.4.2	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.322160959244	213
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.1.0.0.2	search with cache (only 1: unfold sgn; only 1: intro n; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.434900045395	186
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.02410197258	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.2.0	search with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0366539955139	7
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.0.7	search with cache (only 1: rewrite abs_eq; only 1: auto with relations; only 1: order).	0.0261981487274	10
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.4.5.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: now right).	1.30604505539	531
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: now rewrite opp_nonneg_nonpos).	0.530169963837	262
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	4.5.4.4.2.6	search with cache (only 1: intro n; only 1: intros x y EQ; only 1: intro; only 1: destruct_max x; only 1: auto with sets; only 1: auto with sets).	7.80066418648	12810
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0358629226685	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.1.6	search with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.0346229076385	25
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.1.0.0.1.11.1.1	search with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: auto using lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: auto using lt_0_1).	1.27895498276	1421
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.3.0.0.1.0	search with cache (only 1: intros; only 1: destruct (Quot2Div.mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	0.641765832901	227
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.2.0.0.3	search with cache (only 1: intros a b c Ha Hb Hc; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	0.246290922165	213
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0193541049957	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.8.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	5.04898095131	2588
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.0.0.0.1.0.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: auto).	3.66949796677	2283
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0176341533661	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.0.0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	3.45519113541	1981
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.3.0.0.0.0.0.3.2	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: auto).	6.77049803734	4909
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0184719562531	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.4.2.1.1.0.2.0.0	search with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: left; only 1: auto; only 1: right; only 1: apply mod_neg_bound; only 1: order).	6.5567240715	5976
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.223821878433	48
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.225297927856	48
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	1.3.3.1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order; only 1: order; only 1: rewrite <- div_opp_opp by trivial; only 1: rewrite opp_0; only 1: apply Private_NZDiv.div_small; only 1: intuition).	13.6212630272	14109
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.0707190036774	25
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0177459716797	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0178489685059	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.1.0.0.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	9.53964805603	5698
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.2.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: split; only 1: intuition order; only 1: apply le_refl; only 1: nzsimpl; only 1: now try split).	0.881829977036	398
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.243541002274	106
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	3.0.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	0.795508146286	121
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.2.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.296681880951	70
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: order).	0.0493919849396	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	1.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0540599822998	11
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0346479415894	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0261869430542	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.1.0	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	0.0246448516846	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0383379459381	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	10.8222539425	5566
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0786509513855	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.2.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: order).	0.988979816437	127
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	2.32296895981	513
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.339320898056	47
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.2.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.651710987091	104
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.1.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.522593975067	66
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.2.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.482940912247	78
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.2.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.495434999466	49
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.0.1.1.1.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	1.26138305664	186
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.136800050735	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0250351428986	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.7.1.1	search with cache (only 1: intros n m H; only 1: rewrite 2!(add_comm n); only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	9.4235959053	3227
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	3.0.0.0.0.0.1	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: now f_equiv).	0.297460079193	192
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0156240463257	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.2.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_assoc).	0.303951025009	41
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.1.3.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	0.655699968338	164
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	2.2.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.236754179001	52
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	2.0.0.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite 2!(add_comm n); only 1: now rewrite opp_involutive).	0.58324098587	97
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.1.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.0248761177063	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.3.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0329089164734	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0218141078949	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	9.4.0	search with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	2.16771197319	930
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0209369659424	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	2.20.5.8.9.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_move_l; only 1: now rewrite add_opp_l).	23.1181960106	13091
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0334620475769	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.0940358638763	50
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: intuition).	0.0968720912933	51
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.1.1.3.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0951020717621	55
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.326999187469	154
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0152158737183	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.015349149704	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.138254880905	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	0.0377449989319	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	3.0.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	0.700906038284	82
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: apply div_str_pos; only 1: auto).	0.153022050858	43
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	12.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	8.8999710083	5060
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0296308994293	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0266239643097	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.0.0.1	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: auto).	0.0915050506592	48
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.035551071167	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	7.16780519485	4396
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.1.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0686249732971	29
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.238667964935	42
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	0.0.0.0.0.0.0.2.1.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: auto; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	6.71558713913	1729
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	2.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.315371990204	57
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.1.2.0.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.774569988251	102
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.1.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.753283023834	82
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.1.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.446310997009	60
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.2.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.422479867935	33
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.1.0.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.197134017944	21
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0496988296509	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	1	search with cache (only 1: Z.order).	0.0474119186401	12
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.2.4.0	search with cache (only 1: intros; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	0.0334458351135	10
Coq.Numbers.Cyclic.Int31.Ring31.test	40	10.4	search with cache (only 1: intros a b; only 1: ring).	1.68078613281	266
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	0.6	search with cache (only 1: intros a; only 1: now destruct a).	0.133996009827	8
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.141816139221	2
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0	search with cache (only 1: reflexivity).	0.116904020309	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.10	search with cache (only 1: destruct x; only 1: reflexivity).	9.26146197319	78
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0.0.0.0.0.0.0	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.163718938828	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.0.0.0.0.0.1	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.167965888977	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.154219150543	5
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.137619018555	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.2	search with cache (only 1: destruct x; only 1: reflexivity).	1.13704586029	4
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.139601945877	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	0.1.0.1.0.1	search with cache (only 1: destruct x; only 1: intro H; only 1: injection H; only 1: intros; only 1: simpl; only 1: auto).	1.18370699883	9
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	0.1.0	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.143931865692	4
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.123259067535	2
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0	search with cache (only 1: reflexivity).	0.114190101624	1
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.0.3	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.155298948288	13
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.142741918564	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.117470026016	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.11919093132	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: auto with zarith).	0.121723890305	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.119745016098	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.116577863693	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0	search with cache (only 1: auto).	0.120491981506	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	2.0	search with cache (only 1: intros x y; only 1: auto).	0.125546216965	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	0.1.4.0	search with cache (only 1: intros; only 1: unfold add31; only 1: repeat rewrite phi_phi_inv; only 1: auto).	0.252543210983	28
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.122032165527	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.2	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.169026136398	15
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.123866081238	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.250053882599	4
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.117466926575	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.159164905548	7
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	31	search with cache (only 1: lia).	1.47601699829	1153
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0803878307343	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0810658931732	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.0809471607208	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.2.1.0	search with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.220696926117	22
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.1.0	search with cache (only 1: intros x y; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0743420124054	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.6.0.0	search with cache (only 1: intros; only 1: unfold opp_carry, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.0883929729462	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	0.15.0.0	search with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	7.00368285179	3710
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40	0.0.0.0.1.0.13	search with cache (only 1: intros a b Hb; only 1: intros; only 1: apply Zmod_small; only 1: assert ([|b|] > 0) by lia; only 1: generalize (Z_mod_lt [|a|] [|b|] H0), (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).	30.5232641697	11798
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	9.0	search with cache (only 1: intros; only 1: now f_equal).	0.231404781342	110
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	1.2.0.0.0	search with cache (only 1: intros; only 1: destruct x; only 1: trivial; only 1: apply two_power_pos_equiv; only 1: trivial).	0.0855238437653	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40	0.1.1.2.1.18	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: auto with zarith; only 1: simpl; only 1: auto using Z.lt_gt with zarith; only 1: auto with zarith).	7.03349995613	3610
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	3.5	search with cache (only 1: intros n; only 1: auto with zarith).	0.0742349624634	10
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	5.32182097435	804
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.10.0.0	search with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.760025024414	206
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	0.3.3.3.4.11.4.8.18.6	search with cache (only 1: intros a b; only 1: zify; only 1: symmetry; only 1: Z.bitwise; only 1: rewrite Zmult_mod; only 1: Morphisms.f_equiv; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: rewrite Z.mul_comm; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	33.500398159	32021
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	16.0.0.2.0.0	search with cache (only 1: split; only 1: red; only 1: constructor; only 1: red; only 1: easy; only 1: congruence).	11.3991868496	5964
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	0.2.0.0.0.0.0.11	search with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: constructor; only 1: split; only 1: intros H1; only 1: discriminate; only 1: pose proof gt_wB_1; only 1: lia).	2.02052402496	514
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.0	search with cache (only 1: zify; only 1: reflexivity).	0.106670856476	2
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	0	search with cache (only 1: assumption).	0.0812590122223	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.1.2.0.0	search with cache (only 1: intro n; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: apply ZnZ.spec_to_Z).	0.231580018997	8
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	6.1.0	search with cache (only 1: intros; only 1: zify; only 1: auto).	0.191842794418	10
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	search with cache (only 1: reflexivity).	0.0190079212189	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.0200459957123	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0201208591461	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.0.0.0.0.0.0.0.0.13.1.0.0.0.3.0	search with cache (only 1: induction n; only 1: split; only 1: constructor; only 1: now exists 0; only 1: elim IHn; only 1: intros Ev Od; only 1: induction n; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1; only 1: now inversion_clear H0).	38.3378260136	45723
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	1.13.0	search with cache (only 1: intro n; only 1: rewrite nlt_ge; only 1: apply le_0_l).	2.01163101196	1875
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.0.10.3	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	1.55422711372	2770
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.0.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0118129253387	3
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	0.0.3.1.0.0.0.3.3	search with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: split; only 1: intro H; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intro H; only 1: apply neq_succ_0).	1.83913111687	2720
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.1.0.6.2.2	search with cache (only 1: cases ltac:(n); only 1: left; only 1: reflexivity; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.755074977875	1127
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	1.1.1.0.0.12.2	search with cache (only 1: intro n; only 1: induct ltac:(m); only 1: intro H; only 1: false_hyp H nlt_0_r; only 1: intros m IH H; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	31.562361002	16784
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.1.1.0.0	search with cache (only 1: intro; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0281851291656	7
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.1.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.0408899784088	8
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.5.2	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.262800931931	135
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.2.0.0.0.2.0.4	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite lt_succ_r; only 1: rewrite pred_succ in IH; only 1: order).	1.53065299988	1398
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	0.0.3.6.8	search with cache (only 1: intros z n H; only 1: apply le_succ_l in H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	5.48406195641	7149
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.1.0.0.0.3.0.1	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	0.844592094421	644
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.1.0.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.0386309623718	20
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.1.0.0.0.0.1	search with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: now nzsimpl').	0.0194640159607	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0201239585876	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.5	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: auto').	0.193320989609	124
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	2.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: now nzsimpl).	0.0215599536896	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0078649520874	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.00770902633667	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.2.27.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: order'; only 1: now nzsimpl).	13.5928401947	42111
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.2.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.0257370471954	23
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0065701007843	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.00652384757996	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: apply mul_comm).	0.0121960639954	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.0262758731842	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.7.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.107659101486	144
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: apply div_str_pos; only 1: auto).	0.0626740455627	30
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	0.0.0.1.0.3.1.2.0.3.4.0.0.2	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: symmetry in Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: contradict Hab; only 1: apply lt_neq, Private_NZDiv.div_str_pos; only 1: auto'; only 1: intros Hab; only 1: apply Private_NZDiv.div_small; only 1: auto).	33.0249619484	43944
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	3.0.1.2.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: auto').	0.185151100159	110
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0288209915161	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0204651355743	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.0.2.3.19.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto'; only 1: auto').	8.31200098991	15526
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	0.1.2.0.0.0.0.1.2.0.0.0.1.0.0.2.0	search with cache (only 1: intros; only 1: intuition; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply div_pos; only 1: apply le_0_l; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: apply le_0_l; only 1: order; only 1: order).	13.4185910225	16048
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	1.1.0.0.2.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.231995105743	239
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.4.0	search with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.066104888916	43
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.1.1.0.1	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.0217289924622	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	0.0336229801178	23
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	0.80698800087	380
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	0.362474918365	197
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	4.0.0.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0243310928345	19
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.7.1	search with cache (only 1: intros n m p H; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.784509897232	487
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	2.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.017725944519	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	2.2.3.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.463506937027	215
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.10.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.66423416138	842
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	2.0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0179040431976	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	2.2.4.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.79233789444	309
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.121984004974	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.2.2.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.655201911926	254
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.1.1.0.0.1.0.0.0.0.1	search with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: intro H1; only 1: now apply H; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: order).	0.999865055084	1028
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0111651420593	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	9.1	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.0200979709625	66
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.4.1.7.0	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: now exists n).	0.449244976044	697
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.1.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now nzsimpl').	0.0299401283264	8
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40	6.3.4.0.0.3.0.0	search with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: intros; only 1: now apply H3).	7.48874902725	9289
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.37.5.5	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_0; only 1: auto).	12.2063560486	38678
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	35.0.20	search with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).	10.6180820465	16366
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	1.0.12	search with cache (only 1: unfold def_mul; only 1: intro y; only 1: now rewrite recursion_0).	0.172793149948	320
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	2.3.0	search with cache (only 1: intro n; only 1: unfold ltb; only 1: now rewrite recursion_0).	1.02745389938	8
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	3.3.38.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	7.4614200592	15570
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.18	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.147187948227	165
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.0.1.9.2.5	search with cache (only 1: unfold even; only 1: intro n; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: reflexivity; only 1: f_equiv').	0.92285490036	1095
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	1.3	search with cache (only 1: compute in *; only 1: now rewrite recursion_0).	0.0243368148804	6
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.4.4.17	search with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	2.47921419144	1989
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	0.0.29	search with cache (only 1: unfold pow; only 1: intro n; only 1: now rewrite recursion_0).	9.87276482582	7264
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.6.1.0	search with cache (only 1: intros x y z; only 1: intro; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.450623035431	241
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.8.0	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: assumption).	0.300477981567	149
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.0.2.0.0.0.1.1.0.0	search with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: now apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: assumption; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	1.67000389099	1165
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	4	search with cache (only 1: solve_proper).	0.137539863586	51
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0287821292877	11
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	1.1.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0130250453949	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.0.2.0.6.42	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: apply lt_1_2; only 1: nzsimpl; only 1: reflexivity; only 1: order').	16.1133449078	16549
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.2.4.9.0	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	2.23149514198	722
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.2.0.4.5.1	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now nzsimpl; only 1: order'; only 1: order_nz).	1.15554189682	948
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0226590633392	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.00638890266418	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	1.1.1.2.0.0.5	search with cache (only 1: repeat red; only 1: intros a n; only 1: revert a; only 1: intros; only 1: apply b2n_inj; only 1: rewrite H  at 1; only 1: reflexivity).	1.14612102509	796
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.1	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0355780124664	13
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.1.1.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.0300250053406	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.7.0	search with cache (only 1: intros a n H; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	1.48907113075	942
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0341160297394	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0343201160431	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0400328636169	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0115869045258	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	7.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0129089355469	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0127079486847	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	6.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.0526731014252	50
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0122151374817	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0128078460693	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.1.0.1.0.0.1.0.0.0.0.3.3	search with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: trivial; only 1: order_nz).	3.98273587227	2973
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0137689113617	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.603390932083	346
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.2.0.0.3	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.294630050659	307
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.2.2	search with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.035521030426	30
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.1.0.0.0.3.0.0	search with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.531864881516	313
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	0.11.1.0.1.2.2	search with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros n1 n2 H; only 1: nzsimpl; only 1: now f_equiv).	14.4464168549	13261
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	0.0.0.1.1.3.0.0.1.0	search with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.20348405838	2638
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.0.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0332098007202	7
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.074333190918	34
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	0.6.0.0.9.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: apply le_0_l; only 1: intro n; only 1: rewrite add_succ_l; only 1: apply succ_le_mono).	16.7634251118	17081
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.4.0	search with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.0690729618073	33
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	3.0.4.2.1	search with cache (only 1: intros n m p; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	14.3548631668	4937
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.1.0.3.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: order; only 1: apply le_0_l).	0.27107000351	70
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.1.0.0.0.1.1.0.2.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l; only 1: apply le_0_l).	5.64575910568	1576
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0279860496521	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	2.1.3.1	search with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).	0.187146902084	38
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	5.15128111839	1783
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	0.14.10.4	search with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).	35.83157897	37668
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	0.5.0.2.3	search with cache (only 1: intros a b Ha; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').	1.47006797791	1326
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.4.0.11.0	search with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	10.6589491367	7588
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.1.0.0.0.0.2	search with cache (only 1: intros a b; only 1: intro H; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).	0.183125019073	24
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	1.4.0.10.0	search with cache (only 1: intros; only 1: apply pow_lt_mono_r; only 1: order; only 1: apply le_0_l; only 1: trivial).	15.4828112125	10608
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.1.0.0.1	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).	0.138865947723	9
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.3.0.0.4.0.2	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.629820823669	576
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.1.4.1.0.3.0.0.6	search with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	22.3162269592	20767
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	0.3.0.0.1.3.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l).	13.610861063	7913
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.3.1.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r).	4.98756194115	1786
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.3.0.0.2.0.0.1.0.0.1.0.0	search with cache (only 1: intros n m p; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	23.7590529919	9175
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.3.0.0.1.0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order).	28.9146180153	19313
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.3.0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	4.69216012955	3423
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.3.0.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	3.30639505386	2034
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	0.0.0.2.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	0.977568864822	630
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0.0	search with cache (only 1: intros; only 1: constructor 1).	0.00566101074219	2
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	0.3.2.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	1.01475906372	10
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.2	search with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.147702932358	49
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.0.0.1.1.16.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 1; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	13.3676221371	14970
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0152480602264	6
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.6.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	0.597950935364	331
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0165650844574	6
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.0181360244751	7
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	1.0.3.2.0.6.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	2.38999199867	2701
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	0.0.11.6.0.4.0.0	search with cache (only 1: intro n; only 1: induct ltac:(m); only 1: now nzsimpl; only 1: intros m IH; only 1: rewrite add_succ_r; only 1: rewrite sub_succ; only 1: rewrite IH; only 1: order).	13.142802	13770
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.0.0.0	search with cache (only 1: intro E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	0.0840837955475	4
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	1.4.2	search with cache (only 1: intros E; only 1: rewrite <- !Unsigned.to_of; only 1: now f_equal).	0.2664270401	82
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.3.8	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.437570095062	174
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.1.3.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0179078578949	17
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.1.13	search with cache (only 1: rewrite sqrt_up_eqn0; only 1: now rewrite ?Hx; only 1: order').	0.91553902626	372
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.0.0.15.0.1.0.12	search with cache (only 1: rewrite sqrt_up_eqn; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_pred_square; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: now nzsimpl'; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	36.5368888378	46985
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	0.0.0.1.1.0.0.0.0.0.0.1.4.0	search with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: split; only 1: order; only 1: order; only 1: intros H; only 1: split; only 1: order; only 1: intros Ha; only 1: apply lt_succ_r, sqrt_nonneg; only 1: split; only 1: order; only 1: order).	9.57970690727	9567
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.024002790451	10
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.0.0.5.11.13.14.15	search with cache (only 1: intro H1; only 1: rewrite one_succ; only 1: symmetry; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order).	21.5321512222	36156
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.0153350830078	7
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.1.0.10.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	3.40159296989	3171
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.3.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.254265069962	181
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: order).	0.00914788246155	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00793313980103	5
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.0.0.0.2.2.0.0.0.0.0	search with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: contradict Hab; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	8.92958807945	10947
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	0.0.4.0.0.2.0.0.4.2.1	search with cache (only 1: intros a b Ha Hb; only 1: destruct (le_gt_cases b a); only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply mod_small; only 1: auto; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: auto; only 1: auto).	37.0380530357	26911
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.3.1.0.7.1	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	8.32813811302	740
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0754308700562	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.1.0.0.1.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0717811584473	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0325078964233	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.2.1.4	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.50971007347	707
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0888068675995	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.0.0.4	search with cache (only 1: intro p; only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.467434883118	107
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.127485990524	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0321230888367	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	10.3.7	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.922464132309	1090
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.6.1.0	search with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.502487897873	304
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0206179618835	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.0.4.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.0393331050873	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0226180553436	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.025945186615	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0227479934692	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0245921611786	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	3	search with cache (only 1: order).	0.189106941223	82
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	1	search with cache (only 1: order).	0.0313630104065	24
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	search with cache (only 1: order).	0.359526872635	51
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.3.4	search with cache (only 1: intros; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0530381202698	53
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	2.3.2.0	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: order).	0.312515974045	123
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.9.0	search with cache (only 1: intros n m LE; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.878633022308	454
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.2.3.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: tauto).	0.236140966415	19
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	1.8.3.3.2.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	14.4244911671	7042
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.5.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0232629776001	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.3.1	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0422899723053	14
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.5.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.112658023834	99
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.0.1.0.1.4	search with cache (only 1: intro m; only 1: intro n; only 1: nzinduct n m; only 1: now right; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.996320009232	523
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.1.0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: tauto).	0.357531070709	87
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	0.0.2.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	0.0418319702148	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	1.2.5.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.53823184967	264
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	1.1.0.1.1	search with cache (only 1: intros n m; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: intuition order).	0.289582014084	70
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0174970626831	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.0.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.022155046463	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	1.1.1.0.1.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: split; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.0908889770508	62
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0170290470123	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0167751312256	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	1.0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: left; only 1: apply lt_eq_cases; only 1: now left; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0373928546906	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.3.2.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intro p; only 1: intuition order).	0.30046081543	88
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.1.0.0.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intros; only 1: rewrite lt_succ_r; only 1: order).	0.492341995239	216
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	21.0	search with cache (only 1: intros RS' n; only 1: order).	0.345010042191	714
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40	5.3	search with cache (only 1: intros L R n; only 1: firstorder).	0.0933439731598	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40	0.4.0.1.5	search with cache (only 1: intros H; only 1: intros n m; only 1: compute; only 1: intros x y; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.92013692856	590
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40	0.4.0.1.3	search with cache (only 1: intro H; only 1: intros n m; only 1: compute; only 1: intros x y; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.50126719475	260
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	0.2.0.0.6.11	search with cache (only 1: repeat red; only 1: PeanoNat.Nat.induct n; only 1: trivial; only 1: intros P H0 HS; only 1: simpl; only 1: auto).	2.4133579731	572
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	4.0.0.34.0.0	search with cache (only 1: split; only 1: intros Bn EQ; only 1: firstorder; only 1: intros NEQ m EQ; only 1: apply NEQ; only 1: firstorder).	33.4811820984	65295
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	19	search with cache (only 1: solve_proper).	0.0293550491333	165
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	5.1	search with cache (only 1: intros a; only 1: solve_proper).	0.0123660564423	21
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	12.14.2.0.0.0.0	search with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros a Ha; only 1: simpl; only 1: now rewrite PeanoNat.Nat.pred_succ).	26.8757741451	41390
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	1.1.18.10	search with cache (only 1: PeanoNat.Nat.induct ltac:(n); only 1: apply lt_succ_diag_r; only 1: intros n H; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	14.3609569073	13313
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.0.2.0.2.4	search with cache (only 1: induction n; only 1: simpl; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	1.13329100609	969
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	3.2.14	search with cache (only 1: fix gcd_divide 1; only 1: intros a b; only 1: trivial).	1.82400107384	2265
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	1.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.028333902359	3
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.0.1.0.13.1	search with cache (only 1: intros; only 1: nzsimpl'; only 1: now nzsimpl'; only 1: apply le_refl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	5.11866283417	1101
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	0.0.0.0.0.3.1.0.3.3	search with cache (only 1: intros a b Ha Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: nzsimpl; only 1: order'; only 1: clear b Hb; only 1: intros b Hb IH; only 1: nzsimpl; only 1: now apply mul_pos_pos; only 1: trivial).	11.2615320683	4179
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.2.0.0.0.4.0.0	search with cache (only 1: intros n m p Hp; only 1: split; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_assoc, Hq).	1.18180918694	1421
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.1.10.0	search with cache (only 1: intros n m; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	1.22943210602	675
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	4.0.0.0.0.0.7.1.4	search with cache (only 1: intro n; only 1: intro H; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	1.14247894287	1087
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.00841498374939	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.0.1.1.1	search with cache (only 1: intros n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.199585914612	123
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0161490440369	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.00917100906372	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.0.1.0.14.8	search with cache (only 1: intros n m LE; only 1: apply gcd_unique; only 1: order; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	4.15236783028	4713
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.151673078537	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.38108301163	734
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.9.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.245194196701	164
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.2.0.0.3.0.9.5.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: intros [(y, H)| (y, H)]; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: intros; only 1: now rewrite Odd_succ, Even_succ; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: intros; only 1: now rewrite Odd_succ, Even_succ).	14.1191809177	11015
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	7.4.5.1	search with cache (only 1: intros; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	33.228864193	11643
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.2.0.0	search with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0152339935303	7
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	2.1.0.0.0.3.1.2.0	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: case_eq (even n); only 1: rewrite ?even_spec; only 1: apply even_spec in Hm; only 1: now rewrite even_mul, Hm; only 1: apply even_spec in Hm; only 1: now rewrite even_mul, Hm).	1.53401017189	1502
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	2.9.2.0	search with cache (only 1: intros; only 1: apply even_add_even; only 1: exists m; only 1: now nzsimpl).	4.71258997917	1443
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.106562137604	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.119095087051	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.3.0.0.3.2.3.3	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro m; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: nzsimpl; only 1: apply lt_succ_r).	5.33445310593	3065
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	0.3.0.1.3.2.3.2	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro m; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: nzsimpl; only 1: apply lt_succ_r).	24.1171581745	5305
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0280828475952	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0282621383667	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.0.0.7	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now nzsimpl').	0.214823007584	59
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	9.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	5.34248995781	1245
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.1.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0662322044373	6
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0378758907318	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.0.0.0.4.0.2	search with cache (only 1: apply log2_unique; only 1: order; only 1: split; only 1: now nzsimpl; only 1: apply pow_gt_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_succ_diag_r).	0.236467838287	204
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	7.4.0.0.0.15	search with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order; only 1: order_pos; only 1: now nzsimpl).	13.6654109955	10705
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.4.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).	0.0186891555786	10
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.0.1.0.0.0.16	search with cache (only 1: unfold log2_up; only 1: intros; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: order_pos; only 1: order).	3.10758709908	3689
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.4	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0142579078674	15
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	0.3.1.1.0.1.1.1.0	search with cache (only 1: intros a Ha; only 1: assert (Ha' : 0 < a) by order'; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros; only 1: apply lt_succ_r; only 1: order_pos; only 1: order).	6.73129296303	4797
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	3.1	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	0.039529800415	25
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	6.0	search with cache (only 1: intros; only 1: firstorder).	0.0134658813477	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.7.10.1	search with cache (only 1: intros; only 1: transitivity x; only 1: firstorder; only 1: auto).	0.755439043045	2379
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.0.0.0.11.0	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	0.690963983536	703
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	3.6839761734	621
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.0.0.2.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	0.140805006027	21
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0267329216003	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0269198417664	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.0.1.2.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0165400505066	8
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	7.0	search with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	0.0243358612061	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.7.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.211813926697	191
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	2.0	search with cache (only 1: Bool.destr_bool; only 1: reflexivity).	0.00714087486267	4
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.1.1	search with cache (only 1: Bool.destr_bool; only 1: symmetry; only 1: auto with sets).	0.00966501235962	5
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.00703716278076	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	1	search with cache (only 1: eauto using eq_trans, eq_sym).	8.03211188316	51
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.0.0.1.0.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.0915668010712	63
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.3.0	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.03502202034	26
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	1.0.2	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0960910320282	23
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	1.31.13	search with cache (only 1: intros n IH; only 1: fix sqrtrem_spec 1; only 1: auto).	16.0725131035	20366
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	13	search with cache (only 1: solve_proper).	1.72230315208	337
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.21	search with cache (only 1: intros n m p H H'; only 1: now transitivity m).	1.53976416588	1438
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	18.5	search with cache (only 1: unfold lt; only 1: Nat.order).	4.71507501602	4354
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.0	search with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.12203502655	2
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.112324953079	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	2.4.6.0	search with cache (only 1: intros; only 1: split; only 1: reflexivity; only 1: reflexivity).	0.535511016846	350
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.10.8	search with cache (only 1: induction 1; only 1: red; only 1: auto with ordered_type).	1.61454296112	1048
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	0.4.1	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).	0.278580188751	35
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.0.13	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: eauto).	0.497385978699	363
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40	0.0.0.18.0.4	search with cache (only 1: intros ? ? LT ->; only 1: revert LT; only 1: induction y; only 1: eauto; only 1: eauto; only 1: eauto).	24.2164800167	12154
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	search with cache (only 1: decide equality).	0.126714944839	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	31.1.48.8	search with cache (only 1: intros; only 1: inversion H; only 1: trivial; only 1: Nat.order).	39.0093281269	64136
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	3.1.1	search with cache (only 1: split; only 1: tauto; only 1: auto).	0.0163390636444	8
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.0.6.1.0.7	search with cache (only 1: unfold eq, lt, le in *; only 1: intros; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	16.3458578587	11920
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.1.4.0	search with cache (only 1: intros n; only 1: constructor; only 1: now f_equal; only 1: now f_equal).	0.141144990921	21
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	2.0.2.0.0.0.1	search with cache (only 1: induction x; only 1: intros y LT; only 1: constructor; only 1: inversion LT; only 1: eauto; only 1: inversion LT; only 1: eauto).	0.951283931732	287
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.11	search with cache (only 1: apply eqb_eq; only 1: reflexivity).	0.325003147125	266
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	10.5.8.2.5.5	search with cache (only 1: split; only 1: repeat red; only 1: intuition; only 1: intuition; only 1: repeat red; only 1: apply Logic.eq_trans).	2.91215705872	9054
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	8.0.0.0.0.10.4	search with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	0.632292985916	1291
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	1.0.0.0.0.2	search with cache (only 1: split; only 1: destruct (compare x y); only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.212479829788	81
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2	search with cache (only 1: order).	1.00857186317	3
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	search with cache (only 1: order).	0.0097599029541	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.00974416732788	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.101387023926	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.00863885879517	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.0.1.1.1.1	search with cache (only 1: destruct (compare x y); only 1: intro H; only 1: intuition; only 1: intro H; only 1: intuition; only 1: auto).	0.0613870620728	44
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.00917100906372	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0088369846344	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.00819301605225	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.00905799865723	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.00909686088562	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00853800773621	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00797700881958	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00813102722168	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.832622051239	372
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.832559108734	425
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0324668884277	4
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	2.0.0.0.1.1	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	0.177529811859	44
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	0.0.13.3.0.0.4	search with cache (only 1: destruct l; only 1: auto with *; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	15.9566891193	11201
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	9.2.5	search with cache (only 1: intros x y z; only 1: intuition; only 1: now rewrite H).	0.412619829178	445
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40	0.0.12.0.0.2.0.0.1.0.5	search with cache (only 1: simple induction l; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: setoid_replace x with a; only 1: auto; only 1: auto; only 1: transitivity a; only 1: auto; only 1: auto).	8.94018602371	10179
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.0.0.0.0.4	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: auto).	0.0783050060272	46
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	1.1.4.3.5	search with cache (only 1: simple induction l; only 1: auto; only 1: intros; only 1: constructor; only 1: auto with ordered_type).	0.496052980423	478
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40	0.0.0.0.0.0.0.0.3.0.0.0.0.0.2.2.2.0.1	search with cache (only 1: split; only 1: intros; only 1: eapply SortA_InfA_InA; only 1: split; only 1: exact eq_refl; only 1: auto with *; only 1: exact eq_trans; only 1: split; only 1: exact lt_antirefl; only 1: exact lt_trans; only 1: intuition; only 1: eauto; only 1: auto; only 1: auto; only 1: apply InA_InfA; only 1: split; only 1: exact eq_refl; only 1: auto with *; only 1: exact eq_trans).	10.371776104	14384
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.3	search with cache (only 1: induction 1; only 1: auto).	0.0885670185089	5
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	1	search with cache (only 1: intuition).	0.00981497764587	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.00758099555969	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	2.3.1	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: intuition).	0.0149118900299	9
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.00724101066589	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0139119625092	3
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0187590122223	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	0.5.5	search with cache (only 1: unfold eqk, eqke; only 1: intros x y z; only 1: order).	0.195503950119	155
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40	4.11.2.1.3	search with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto with ordered_type; only 1: simpl in *; only 1: congruence).	15.4868690968	3158
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.010586977005	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0103611946106	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	5.0.1.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).	0.0270228385925	10
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	5.0.1.1	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).	0.207380056381	68
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0251631736755	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.14.8.7.5.1	search with cache (only 1: split; only 1: unfold eqk, ltk; only 1: intro Pdec; only 1: intros H'; only 1: order; only 1: eauto with ordered_type).	4.33818292618	6336
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40	11.6.2.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: unfold eqk, ltk; only 1: order).	8.4957690239	6039
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40	7.0.2.0.6.0.0.1	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: unfold eqke; only 1: unfold eqke, ltk; only 1: intuition; only 1: order).	37.70510602	24199
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0100088119507	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.00921201705933	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.00877809524536	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	0.7.14.2	search with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: auto).	3.41776108742	3420
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	4.1.1.6.0.11.3	search with cache (only 1: unfold ltk, eqk; only 1: induction l; only 1: eauto with ordered_type; only 1: intros; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	5.3379919529	4985
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	1.3.0.16.12.13	search with cache (only 1: unfold ltk, eqk; only 1: intros a b Ha Hb; only 1: induction 1; only 1: auto with ordered_type; only 1: constructor; only 1: eauto with ordered_type).	3.4890370369	7983
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.19.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	1.38174319267	1403
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.1.1.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: intuition).	0.0362520217896	14
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0385921001434	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	1.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: easy).	2.41936898232	1502
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.2.2.0.0.0.0.0.1.2.3.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: discriminate; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: discriminate).	12.3664228916	5380
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.0.0.0.2.2.1.0.0.1.1.3.0.2	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: discriminate; only 1: intro H; only 1: easy).	12.5144679546	6332
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	2.1	search with cache (only 1: autorewrite with order; only 1: reflexivity).	0.0145509243011	5
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	1.2.2.2.7	search with cache (only 1: split; only 1: repeat red; only 1: iorder; only 1: repeat red; only 1: iorder).	0.165781974792	262
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	2.6.0.0	search with cache (only 1: red; only 1: red; only 1: compute; only 1: iorder).	30.861700058	298
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	6.0	search with cache (only 1: compute; only 1: order).	0.0375959873199	51
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	15	search with cache (only 1: iorder).	0.687762022018	560
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0159969329834	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	1.18.18.14.2	search with cache (only 1: intuition; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: iorder; only 1: iorder; only 1: intuition).	3.71356987953	9583
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.6.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	1.41571688652	266
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.0.1.0.1	search with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.228819131851	32
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	2.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.138720035553	33
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.019660949707	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.0.0.0.0.3.0.5.0.3.0.0.1.0.4	search with cache (only 1: destruct (CompSpec2Type (compare_spec x y)); only 1: intro H; only 1: elim (StrictOrder_Irreflexive x); only 1: transitivity y; only 1: auto; only 1: order; only 1: intro H; only 1: intuition; only 1: eapply OrderTac.lt_irrefl; only 1: order; only 1: intro H; only 1: elim (StrictOrder_Irreflexive x); only 1: transitivity y; only 1: auto; only 1: auto).	4.09168410301	7566
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0222659111023	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0191090106964	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	3	search with cache (only 1: order).	1.97269010544	12
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	2	search with cache (only 1: order).	1.0133600235	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	search with cache (only 1: order).	0.0126328468323	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0137012004852	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.0116791725159	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.0119001865387	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0126829147339	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	3.0	search with cache (only 1: intuition; only 1: order).	0.0370080471039	24
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	search with cache (only 1: order).	0.0117161273956	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	search with cache (only 1: order).	0.011292219162	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	1	search with cache (only 1: order).	0.0115869045258	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	search with cache (only 1: order).	0.0113651752472	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.0115489959717	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.0117490291595	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.0107491016388	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	3.1.1.0	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	0.128468990326	16
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.0	search with cache (only 1: unfold lt; only 1: auto with *).	0.0120530128479	2
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0120389461517	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.1	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.0129661560059	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0165128707886	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	3	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0214779376984	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.2.3.11	search with cache (only 1: case leb_spec0; only 1: intuition; only 1: constructor; only 1: trivial; only 1: trivial).	11.963654995	7182
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.0.2.0.7	search with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.648223876953	207
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.6.11	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	1.06375288963	418
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1.1	search with cache (only 1: firstorder; only 1: subst; only 1: auto).	0.0221359729767	5
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	3.0.0.0.1.2	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	0.59344792366	286
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	1.0.13	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: eauto).	1.04058408737	784
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	13.1	search with cache (only 1: intros; only 1: now rewrite H).	0.293040037155	302
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	0.0.10.0.0.3.1.1.1.0.4	search with cache (only 1: simple induction l; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: setoid_replace x with a; only 1: auto; only 1: auto; only 1: transitivity a; only 1: auto; only 1: auto).	9.75830197334	8038
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	1.0.0.0.0.4	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: auto).	0.106559038162	49
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	7.2.5	search with cache (only 1: simple induction l; only 1: auto; only 1: firstorder).	0.31062412262	330
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	21	search with cache (only 1: eauto with *).	1.45500898361	1058
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1	search with cache (only 1: eauto with *).	0.0203590393066	2
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0438678264618	3
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	0	search with cache (only 1: now intros <-).	0.0298988819122	1
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.0100281238556	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: firstorder).	0.00872302055359	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0083749294281	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0	search with cache (only 1: firstorder).	0.00931096076965	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	search with cache (only 1: now destruct 1).	0.00871706008911	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	search with cache (only 1: reflexivity).	0.0085117816925	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.00768399238586	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	search with cache (only 1: firstorder).	0.0115008354187	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.14	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.197834968567	241
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0261039733887	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.6.29.0.12	search with cache (only 1: intro H; only 1: induction 1; only 1: rewrite InA_cons; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).	9.83355498314	10897
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	2.5.1	search with cache (only 1: unfold In, MapsTo; only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv).	0.201126098633	138
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	0.1.0.0.3.1.6.2	search with cache (only 1: rewrite In_alt2; only 1: rewrite In_alt2; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: setoid_rewrite Exists_exists; only 1: firstorder).	8.98125886917	4550
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	0.5.11.2.3	search with cache (only 1: intros x x' Hx y y' Hy z z' Hz; only 1: subst; only 1: unfold In, MapsTo; only 1: setoid_rewrite Hx; only 1: auto).	13.8043141365	4074
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	1.5	search with cache (only 1: unfold In, MapsTo; only 1: now intros <-).	0.0412199497223	14
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0186679363251	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	2.2	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.129097938538	6
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.4.15.11	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	4.67128992081	3897
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.2.3	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	0.0743880271912	19
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	0.2	search with cache (only 1: induction 1; only 1: auto).	0.0176999568939	4
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0132341384888	3
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.0108559131622	1
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.017459154129	3
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0214791297913	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	4.4	search with cache (only 1: intros x y z H; only 1: eauto).	0.0425021648407	23
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	3.4.1.1.1	search with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto; only 1: simpl in *; only 1: congruence).	3.36301207542	515
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	2.0.0.3	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).	0.0331399440765	9
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0289270877838	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.0.2.6.6.1	search with cache (only 1: unfold eqke; only 1: induction 1; only 1: left; only 1: induction H; only 1: auto; only 1: auto).	1.24058008194	1138
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.2.13	search with cache (only 1: induction 2; only 1: eauto; only 1: intuition).	0.55203294754	472
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.16.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.966640949249	815
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.0.0.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: intuition).	0.0553250312805	22
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	2.4.13	search with cache (only 1: repeat red; only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.261771917343	629
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	3.0	search with cache (only 1: unfold eq, lt, compare; only 1: decide equality).	0.288170099258	27
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.1.0.0.0.0.0.2.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	7.77121305466	4199
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.1.1.0.0.3.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.168215036392	179
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	1.84776377678	1279
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	3.1.2.2.1	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: intuition; only 1: intuition; only 1: intros R R' EQ a a' Ha WF; only 1: order).	0.261421918869	208
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	2.3.3.3.3.2.19	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: intuition order; only 1: order; only 1: intuition; only 1: order; only 1: intuition order).	39.3012800217	21250
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	7.13	search with cache (only 1: apply max_r; only 1: intuition order).	0.0952010154724	233
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.0.1.0.4	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0364010334015	32
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0188689231873	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	1	search with cache (only 1: solve_max).	0.0394949913025	18
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0321171283722	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	2.4.0.0.0.0.0.0.0.2	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max; only 1: solve_max).	20.7158079147	5679
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0450830459595	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	1	search with cache (only 1: solve_max).	0.0220007896423	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0207369327545	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0	search with cache (only 1: solve_max).	0.0220108032227	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.0.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0424439907074	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	search with cache (only 1: solve_max).	0.0221149921417	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0	search with cache (only 1: solve_max).	0.0386779308319	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0308470726013	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.145344018936	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	3.0.0.0.3.0.0.0.0	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	5.17934799194	3854
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	1.1.14.5	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.658384084702	933
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	1	search with cache (only 1: solve_min).	0.018748998642	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	1	search with cache (only 1: solve_min).	0.0299241542816	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.0235161781311	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.7.1	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	10.7467420101	3832
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	2	search with cache (only 1: solve_min).	0.0226140022278	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	search with cache (only 1: solve_min).	0.0211379528046	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.0223269462585	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.0.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.041403055191	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.0209119319916	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	1	search with cache (only 1: solve_min).	0.0381608009338	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0316209793091	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.3.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: apply min_glb_iff; only 1: solve_min).	0.0850279331207	15
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.3	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0713999271393	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1.0.1.1	search with cache (only 1: destruct (min_spec n m) as [(C, E)| (C, E)]; only 1: apply min_r || apply min_l; only 1: solve_max; only 1: apply min_r || apply min_l; only 1: solve_max).	0.0350420475006	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.1.0.1.0.0.0.1.1.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	1.71925592422	1741
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	0.2.0.1.0.0.0.1.1.0.0.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.44450092316	1844
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.0.0.0.9.1	search with cache (only 1: intros x y z; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros; only 1: auto).	0.304840803146	303
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.0.0.4.3.13.1	search with cache (only 1: Bool.destr_bool; only 1: apply max_case_strong; only 1: intros Compat Hl Hr; only 1: subst; only 1: auto; only 1: auto; only 1: auto).	6.91579008102	10630
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0137259960175	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.3	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.016930103302	7
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.0.6.0	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.132124900818	89
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0133168697357	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.4	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0170102119446	8
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.0.3.0	search with cache (only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.0264871120453	7
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	4.0	search with cache (only 1: unfold eq; only 1: decide equality).	0.0181188583374	14
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	3.1.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: reflexivity).	0.0205149650574	10
Coq.ZArith.Znat.N_nat_Z	40	0.0.0.0.0.0.2.0.0.9	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.714396953583	582
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0190308094025	5
Coq.ZArith.Znat.positive_N_Z	40	1.2.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: simpl; only 1: f_equal).	0.0150740146637	6
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: reflexivity).	0.00839805603027	1
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0188739299774	5
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0191669464111	4
Coq.ZArith.Znat.Z_nat_N	40	0.3.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: Nat2N.nat2N; only 1: trivial).	0.0492539405823	20
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0101299285889	1
Coq.ZArith.Znat.Zabs_nat_N	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0249660015106	7
Coq.ZArith.Znat.N2Z.id	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.0187108516693	5
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).	1.72761702538	994
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: now Morphisms.f_equiv).	0.983592987061	482
Coq.ZArith.Znat.N2Z.is_nonneg	40	35	search with cache (only 1: now destruct n).	0.450174808502	621
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.00934600830078	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00881409645081	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0322768688202	9
Coq.ZArith.Znat.N2Z.inj_le	40	4.0	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0135960578918	6
Coq.ZArith.Znat.N2Z.inj_lt	40	1.2	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0135741233826	5
Coq.ZArith.Znat.N2Z.inj_ge	40	6.3	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0464820861816	28
Coq.ZArith.Znat.N2Z.inj_gt	40	0.4	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0137407779694	6
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	3	search with cache (only 1: now destruct n, m).	0.0118510723114	4
Coq.ZArith.Znat.N2Z.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.0103831291199	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.102248907089	5
Coq.ZArith.Znat.N2Z.inj_pred_max	40	1.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p).	0.0276970863342	11
Coq.ZArith.Znat.N2Z.inj_pred	40	1.1.2.1.0	search with cache (only 1: unfold Z.pred; only 1: intros H; only 1: destruct n; only 1: easy; only 1: now destruct p).	0.0373270511627	11
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	12.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	0.599170923233	669
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0170800685883	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0307600498199	9
Coq.ZArith.Znat.Z2N.id	40	1.0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0221331119537	6
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: intros; only 1: now f_equal).	0.0259940624237	7
Coq.ZArith.Znat.Z2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.00885605812073	1
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0257079601288	7
Coq.ZArith.Znat.Z2N.inj_neg	40	0	search with cache (only 1: now destruct n).	0.00938200950623	1
Coq.ZArith.Znat.Z2N.inj_add	40	5.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0237581729889	7
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	2.38356900215	412
Coq.ZArith.Znat.Z2N.inj_succ	40	1.2.2.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).	0.79253411293	129
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.2.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.0419049263	14
Coq.ZArith.Znat.Z2N.inj_compare	40	0.6	search with cache (only 1: intros; only 1: now destruct n, m).	0.613614082336	195
Coq.ZArith.Znat.Z2N.inj_le	40	0.24.0	search with cache (only 1: intros Hn Hm; only 1: unfold N.le, N.ge; only 1: now rewrite N2Z.inj_compare).	35.9809780121	19367
Coq.ZArith.Znat.Z2N.inj_lt	40	0.0.6	search with cache (only 1: unfold N.lt, N.gt; only 1: intros Hn Hm; only 1: now rewrite N2Z.inj_compare).	0.0925149917603	68
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.3.0.0.4	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.356796979904	171
Coq.ZArith.Znat.Z2N.inj_quot2	40	3.1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	0.0252621173859	10
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0264849662781	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	2.1	search with cache (only 1: intros; only 1: now destruct n).	0.0155148506165	5
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	search with cache (only 1: now destruct n).	0.0102369785309	2
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.00931310653687	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.00887894630432	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0256080627441	7
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00877904891968	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.024738073349	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.0.0.0.2.2	search with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: now destruct p).	0.477303981781	258
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	2.89196014404	776
Coq.ZArith.Znat.Zabs2N.inj_mul	40	5	search with cache (only 1: now destruct n, m).	1.36317801476	407
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	1.1.0.0.2.1.1.0	search with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: easy).	2.28659510612	1348
Coq.ZArith.Znat.Zabs2N.inj_compare	40	2.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.23903298378	93
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0154168605804	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0154178142548	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	2.2.0.0.8	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	1.30221700668	613
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0128819942474	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: reflexivity).	0.00907397270203	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	1.1.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0231759548187	8
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0124609470367	1
Coq.ZArith.Znat.Nat2Z.id	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0171558856964	5
Coq.ZArith.Znat.Nat2Z.inj	40	0.8.3	search with cache (only 1: intro H; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.27883887291	218
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now f_equal).	0.0182371139526	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	4.1.0	search with cache (only 1: unfold Z.le; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	0.0419828891754	8
Coq.ZArith.Znat.Nat2Z.inj_lt	40	9.1	search with cache (only 1: unfold Z.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	0.389358043671	137
Coq.ZArith.Znat.Nat2Z.inj_ge	40	14.2.1	search with cache (only 1: unfold Z.ge; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	1.08661484718	601
Coq.ZArith.Znat.Nat2Z.inj_gt	40	21.2.1	search with cache (only 1: unfold Z.gt; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	2.90365290642	2055
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.0.0.5.0.0	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	1.33690404892	705
Coq.ZArith.Znat.Z2Nat.inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.017471075058	3
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.0183110237122	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.00872993469238	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.00961017608643	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00862503051758	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	16.0.0.1	search with cache (only 1: unfold Z.succ; only 1: intros; only 1: rewrite Z2N.inj_add by easy; only 1: now Z.nzsimpl).	5.39699006081	4465
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.010390996933	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	1.0	search with cache (only 1: intros; only 1: now destruct n).	0.0154030323029	3
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	2.02593684196	1174
Coq.ZArith.Znat.Zabs2Nat.id	40	0.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0190570354462	6
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.00848412513733	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00930714607239	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00913715362549	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0159411430359	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0160291194916	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	2.2.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.132863998413	21
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0168998241425	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: trivial; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	12.0860300064	7352
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	9.94612789154	5445
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0180649757385	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	14.6600689888	6717
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	1.1.0.5.0.1.8.3	search with cache (only 1: intros a b; only 1: intros Compat Hl Hr; only 1: intros EQ; only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	5.57139706612	4017
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.4.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.031270980835	10
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0211229324341	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.1	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.058531999588	21
Coq.ZArith.Zquot.Zquot_0_r	40	0.0.0.39	search with cache (only 1: induction a as [a IH| a IH| ]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	8.61597299576	7736
Coq.ZArith.Zquot.Zrem_0_r	40	9.0	search with cache (only 1: Z.bitwise; only 1: now destruct a).	0.119688987732	39
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0442931652069	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0443668365479	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.4.0	search with cache (only 1: intros Ha Hb; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.25498008728	52
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0683009624481	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.4.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.237108945847	35
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.2.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.268647193909	39
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.080904006958	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	0.0.0.6.0.5.0	search with cache (only 1: intros; only 1: rewrite (Z.mul_comm c b); only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_mul_cancel_r; only 1: auto; only 1: auto).	4.66261196136	1947
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.0.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0883181095123	7
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.3.1.1	search with cache (only 1: intros a b Ha Hb; only 1: unfold Z.modulo; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.25041103363	56
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.0.1.1.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.mod_divide; only 1: rewrite Z.rem_divide; only 1: intuition; only 1: trivial; only 1: trivial).	0.123103141785	26
Coq.ZArith.Zdigits.binary_value	40	22	search with cache (only 1: constructor).	0.658872842789	595
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.0.0.0	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.152595043182	6
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.127997875214	3
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.124515771866	3
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	0	search with cache (only 1: reflexivity).	0.112023830414	1
Coq.ZArith.Zdigits.Z_div2_value	40
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0	search with cache (only 1: intros; only 1: auto).	0.119201898575	2
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	0.0.1.0.1.1	search with cache (only 1: intros; only 1: destruct z; only 1: simpl; only 1: easy; only 1: now destruct p; only 1: now destruct p).	0.256899833679	50
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	0.189409017563	10
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.70	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	4.66547298431	10709
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.1.0.1.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.0492668151855	49
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	9	search with cache (only 1: now destruct n).	0.00919890403748	10
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	search with cache (only 1: now destruct n).	0.00821781158447	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1	search with cache (only 1: now destruct n).	0.00784301757812	2
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.0256431102753	10
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	5	search with cache (only 1: now destruct n, m).	0.271063089371	169
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	search with cache (only 1: reflexivity).	0.00752091407776	1
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.00812602043152	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.00896501541138	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00911808013916	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.7.0.1.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	4.2094180584	4336
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0102319717407	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.00785303115845	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00794410705566	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.00798201560974	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.00731706619263	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.0.1.1.0.1	search with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: intuition; only 1: trivial).	0.0346529483795	15
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.0.1.3	search with cache (only 1: unfold le, min; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: intuition; only 1: intuition; only 1: trivial).	0.137450933456	98
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	5.0.2	search with cache (only 1: unfold le, min; only 1: intuition; only 1: now destruct n).	0.0215590000153	10
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0202670097351	5
Coq.ZArith.BinInt.Z.sgn_null	40	7.0	search with cache (only 1: intros H; only 1: now destruct n).	0.0165178775787	9
Coq.ZArith.BinInt.Z.sgn_pos	40	3	search with cache (only 1: now destruct n).	0.1226541996	34
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0124180316925	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now subst).	0.00838804244995	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.5.3.1	search with cache (only 1: destruct m as [| m| m]; only 1: now subst; only 1: now nzsimpl; only 1: now destruct 1 || intros _).	0.759275913239	285
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.00797510147095	1
Coq.ZArith.BinInt.Z.square_spec	40	0.0.0.0.0.0.0.2	search with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.0524921417236	10
Coq.ZArith.BinInt.Z.sqrtrem_spec	40	1.0.3.5.1.9.0	search with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: now destruct 1).	10.5016360283	5511
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0109550952911	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.17.0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	8.17251992226	6887
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0107500553131	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: trivial).	0.00838398933411	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	2	search with cache (only 1: now destruct n).	0.00902795791626	3
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.00893115997314	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.0.0.2	search with cache (only 1: intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.225091934204	70
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite N.mul_comm).	0.0297248363495	7
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.0.1.0.0.0.1	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.0515220165253	17
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	20.0558521748	10827
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.0.0.0.0.1.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0273690223694	8
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.00894498825073	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	10	search with cache (only 1: now destruct n).	0.0181729793549	21
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0136249065399	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	1	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.009850025177	2
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	3	search with cache (only 1: apply N.gt_lt_iff).	0.026535987854	11
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0109388828278	1
Coq.ZArith.BinInt.Z.ge_le_iff	40	1.15.5	search with cache (only 1: rewrite <- (succ_pred m); only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	16.0736560822	7435
Coq.ZArith.BinInt.Z.ge_le	40	0.3	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.019562959671	5
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0111041069031	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.3.8.0	search with cache (only 1: unfold ltb, lt; only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: now destruct compare).	2.43487095833	1018
Coq.ZArith.BinInt.Z.geb_le	40	1.6.11.0	search with cache (only 1: unfold leb, le; only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: now destruct compare).	14.0931899548	5468
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	1	search with cache (only 1: apply mul_cancel_l).	0.0119700431824	2
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.1	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0164978504181	3
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	0.6.0.0.9.0.0.16	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: auto).	17.5089349747	9269
Coq.ZArith.BinInt.Z.add_diag	40	0.27	search with cache (only 1: nzsimpl'; only 1: now nzsimpl).	1.35021400452	591
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.0.0.10.0.0.0.0.1	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: destruct H; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	23.5496718884	7998
Coq.ZArith.BinInt.Pos2Z.id	40	0.2	search with cache (only 1: simpl; only 1: trivial).	0.0192708969116	4
Coq.ZArith.BinInt.Pos2Z.inj	40	0	search with cache (only 1: congruence).	0.0159499645233	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0235319137573	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1.3.1	search with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: easy).	0.0320289134979	11
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	2.0.5	search with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: trivial).	0.0357460975647	12
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: easy).	0.0160069465637	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1	search with cache (only 1: trivial).	0.0160739421844	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0202779769897	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.5	search with cache (only 1: rewrite <- Pos.add_1_r; only 1: reflexivity).	0.03568816185	14
Coq.ZArith.BinInt.Pos2Z.inj_add	40	3.1	search with cache (only 1: revert q; only 1: reflexivity).	0.439986228943	98
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: intros H; only 1: simpl; only 1: trivial; only 1: intros H; only 1: simpl; only 1: trivial; only 1: intros H; only 1: simpl; only 1: easy).	0.0494160652161	10
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.0162329673767	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0176470279694	2
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.017872095108	2
Coq.ZArith.BinInt.Pos2Z.inj_square	40	2.0	search with cache (only 1: simpl; only 1: easy).	0.0206570625305	4
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	3.1.0	search with cache (only 1: revert q; only 1: simpl; only 1: trivial).	0.0611560344696	18
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	search with cache (only 1: reflexivity).	0.016489982605	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.016049861908	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0158109664917	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: reflexivity).	0.0165841579437	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	3	search with cache (only 1: reflexivity).	0.0167169570923	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	1.0.0.1.1.24.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	1.51265501976	2400
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	1	search with cache (only 1: now injection 1).	0.0159161090851	2
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0257258415222	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.0148689746857	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0251297950745	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.0164301395416	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1	search with cache (only 1: easy).	0.0191190242767	2
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0149919986725	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0189549922943	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	1	search with cache (only 1: easy).	0.0210320949554	2
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0163538455963	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	0.0.1.6.1.1	search with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: red; only 1: intros; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	4.83336114883	947
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	2.0.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.0252959728241	6
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	5.0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0261681079865	9
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0148429870605	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.015496969223	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0148918628693	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.014867067337	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	search with cache (only 1: trivial).	0.0150489807129	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.0150430202484	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0155711174011	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1	search with cache (only 1: reflexivity).	0.016401052475	2
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0151920318604	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0152158737183	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.0.0.0.0.1.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.0444099903107	8
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0149641036987	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	1	search with cache (only 1: now destruct x).	0.0197880268097	2
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.0156228542328	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0	search with cache (only 1: now destruct x).	0.0214631557465	1
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.126573801041	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	6.4.1.4.1.2.0.2	search with cache (only 1: intros H; only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: destr_eq H).	9.07973599434	9373
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	1.7.2.0.4	search with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: easy).	1.54099798203	721
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.131883144379	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.361078023911	14
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0523421764374	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0498480796814	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0502631664276	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).	0.034255027771	6
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.217371940613	53
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	2.1	search with cache (only 1: intros a b H; only 1: now f_equal).	0.0210869312286	5
Coq.ZArith.BinInt.ZL0	40	0	search with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.0531949996948	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	11	search with cache (only 1: now Z.nzsimpl').	0.742695093155	66
Coq.ZArith.BinInt.Z_eq_mult	40	4.1.0	search with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: reflexivity).	0.0231330394745	8
Coq.ZArith.Zcomplements.floor_gt0	40	0	search with cache (only 1: easy).	0.0361618995667	1
Coq.ZArith.Zcomplements.floor_ok	40	4.0.1.18.5	search with cache (only 1: intros; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	25.2454500198	18395
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	11	search with cache (only 1: now destruct n).	0.100176095963	60
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	1	search with cache (only 1: trivial).	0.0374300479889	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	34.8624138832	15192
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	22.0565361977	10266
Coq.ZArith.Zeven.Zodd_even_bool	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.72	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	12.8879919052	11739
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	1.0.0.0.0.0.1.0.0.0.0.0.1.0	search with cache (only 1: destruct n as [| p| p]; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: now left || now right).	15.9249231815	7205
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	13.9015870094	6524
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.2.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0653967857361	13
Coq.ZArith.Zeven.Zeven_Sn	40	0.0.1.1.0.0.0.2.3.0.1	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: intuition; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now destruct p; only 1: easy; only 1: easy).	4.36490416527	2750
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	0.0.1.0.1.0.0.0.2.3.2.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: intuition; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: easy; only 1: easy).	6.93215799332	4183
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	3.0.0.0.0.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: now destruct n as [| [| | ]| [| | ]]).	0.126871824265	19
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.1.2.1.0	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: easy; only 1: easy).	11.373759985	3773
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.234885931015	17
Coq.ZArith.Zeven.Zodd_quot2	40	2.0	search with cache (only 1: boolify_even_odd; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0612690448761	18
Coq.ZArith.Zeven.Zodd_quot2_neg	40	7.0	search with cache (only 1: intros Hn Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.93368601799	165
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	4.0	search with cache (only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.146679878235	12
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.2	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.237741947174	39
Coq.ZArith.Zeven.Zeven_2p	40	26	search with cache (only 1: now destruct p).	0.72633600235	680
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	1.0.2.9	search with cache (only 1: destruct p; only 1: Morphisms.solve_proper; only 1: easy; only 1: now destruct p).	0.334097146988	175
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.0.1.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.081661939621	20
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0566260814667	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0581419467926	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0500440597534	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	1	search with cache (only 1: apply Z.divide_opp_l).	0.0528960227966	2
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	1	search with cache (only 1: apply Z.divide_abs_l).	0.0511958599091	2
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.2.3.1.0.7	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: rewrite Hc; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	1.97691297531	1210
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	5.6.2	search with cache (only 1: intros H Hb; only 1: subst; only 1: Z.order).	1.43669390678	758
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	6.2.3.17	search with cache (only 1: intros b Hb a; only 1: intros Hab; only 1: intros H; only 1: now apply Z.divide_pos_le).	8.16131997108	9251
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	9.10	search with cache (only 1: intros a b; only 1: firstorder  (subst; auto)).	1.64959001541	1092
Coq.ZArith.Znumtheory.Zis_gcd_0	40	7	search with cache (only 1: firstorder).	0.0957140922546	21
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.1.0.1.4.0	search with cache (only 1: intros n; only 1: split; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith; only 1: trivial).	0.697943925858	165
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.0	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0598001480103	4
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.10112786293	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.13857793808	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0803768634796	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40	0.2.8	search with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: auto).	2.6503868103	347
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.0.1.0.2	search with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intuition).	0.149528980255	33
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.0.0.2	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	0.163466930389	21
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.1	search with cache (only 1: simple induction 1; only 1: auto with zarith).	0.861428976059	32
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	2.54	search with cache (only 1: simple induction 1; only 1: discriminate).	6.85176420212	12484
Coq.ZArith.Znumtheory.not_prime_1	40	0.0.10	search with cache (only 1: destruct 1; only 1: contradict H; only 1: discriminate).	0.58833694458	178
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	0.0.10	search with cache (only 1: simple induction 1; only 1: intros; only 1: now apply (Zlt_le_succ 1)).	0.247940063477	65
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	2.1.18	search with cache (only 1: fix gcd_greatest 1; only 1: intros n m p H H'; only 1: now apply Z.gcd_greatest).	18.9275369644	4915
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.0.0.0.0.0.0.1.1.14.5	search with cache (only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.div, Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	17.9956400394	8575
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.0.0.0.0.1.0.1.0	search with cache (only 1: unfold Z.modulo; only 1: Z.swap_greater; only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: unfold Z.modulo; only 1: unfold Z.div, Z.modulo; only 1: destruct Z.div_eucl; only 1: auto).	1.37162494659	340
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	6.1.7.0.11	search with cache (only 1: unfold Z.modulo; only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: rewrite Z.mul_comm; only 1: now apply Z.mod_eq).	38.2089960575	20500
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.0.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.15181183815	3
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0636448860168	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	1.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0636761188507	5
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0625870227814	6
Coq.ZArith.Zdiv.Zmod_1_r	40	6.9	search with cache (only 1: intro n; only 1: now Z.nzsimpl).	1.6734559536	894
Coq.ZArith.Zdiv.Zdiv_1_r	40	0.3.3.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: Z.nzsimpl; only 1: trivial).	0.290611982346	66
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.2.6.1	search with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	1.93584990501	621
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.2.0	search with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0630259513855	6
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.1.4	search with cache (only 1: intros x y H; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.107358932495	35
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.064523935318	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0646719932556	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0654790401459	3
Coq.ZArith.Zdiv.eqm_refl	40	3.0	search with cache (only 1: intros n; only 1: reflexivity).	0.0582129955292	5
Coq.ZArith.Zdiv.eqm_sym	40	1.2.0	search with cache (only 1: unfold eqm; only 1: intros a b; only 1: auto).	0.0730819702148	14
Coq.ZArith.Zdiv.eqm_trans	40	5.1	search with cache (only 1: unfold eqm; only 1: eauto using Z.Private_Tac.eq_trans, Z.Private_Tac.eq_sym).	0.13698887825	21
Coq.ZArith.Zdiv.eqm_setoid	40	7.1.2.18	search with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: now unfold eqm; intros a b c ->).	1.13748311996	824
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.4.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0705389976501	7
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.0.1.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: auto).	0.137245893478	25
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: auto).	0.0755529403687	4
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0934000015259	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	1.0.2.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: Z.order; only 1: now destruct b).	0.101084947586	7
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.2	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: auto).	0.110611915588	16
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0266349315643	4
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0147280693054	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	0.0.3.0.1.0	search with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: apply Z.mod_pos_bound; only 1: trivial; only 1: now discriminate Hb || clear Hb).	0.120146989822	39
Coq.ZArith.Zabs.Zabs_ind	40	0.0.0.22.9	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.destruct_max n; only 1: auto; only 1: auto).	7.58048295975	10145
Coq.ZArith.Zabs.Zabs_intro	40	6.0	search with cache (only 1: intros; only 1: now destruct n).	0.0437040328979	8
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	3.52.4	search with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.lt, Z.gt; only 1: decide equality).	6.60492610931	5886
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	2.6	search with cache (only 1: intro H; only 1: trivial).	0.0146450996399	10
Coq.ZArith.Int.Z_as_Int.i2z_0	40	2	search with cache (only 1: trivial).	0.0104310512543	3
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.00989007949829	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	search with cache (only 1: reflexivity).	0.0100810527802	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0098180770874	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.00992393493652	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.9	search with cache (only 1: Z.bitwise; only 1: trivial).	0.0318639278412	21
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.00927090644836	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00910186767578	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.00906109809875	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	1	search with cache (only 1: solve [ trivial | destruct (proj1 (Z.le_ngt _ _) Hi _) ]).	0.00968289375305	2
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00878405570984	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00892400741577	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.0.0	search with cache (only 1: symmetry; only 1: simpl; only 1: trivial).	0.0175240039825	3
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.0245671272278	4
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	2.2.4	search with cache (only 1: generalize 1; only 1: intros; only 1: apply Pos2Nat.inj_iter).	1.21151280403	285
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.0.1.0.0.1.0.0	search with cache (only 1: case n; only 1: now destruct 1 || trivial; only 1: intros p _; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: intros p abs; only 1: case abs; only 1: trivial).	0.132287979126	10
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: reflexivity).	0.0103039741516	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0104279518127	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40
Coq.ZArith.Zpower.two_p_equiv	40
Coq.ZArith.Zpower.two_power_nat_S	40	3.0.0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).	0.0556011199951	21
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	3	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0134339332581	4
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	0.3.3.0	search with cache (only 1: destruct x; only 1: apply two_power_pos_equiv; only 1: apply two_power_pos_equiv; only 1: trivial).	0.192823886871	42
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	2.1.1.1.0.1.1	search with cache (only 1: destruct x; only 1: intros Hx; only 1: simpl; only 1: now rewrite ?(Ring_theory.rpow_pow_N pow_th); only 1: intros Hx; only 1: easy; only 1: easy).	1.28280997276	727
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40	2.3.1.1.3.3.4.0	search with cache (only 1: rewrite two_p_equiv; only 1: destruct x; only 1: Morphisms.solve_proper; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: now destruct 1).	12.0201718807	8343
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	4	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.36413693428	44
Coq.ZArith.auxiliary.Zle_left	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0247340202332	1
Coq.ZArith.auxiliary.Zle_left_rev	40	1	search with cache (only 1: apply Z.le_0_sub).	0.0277559757233	2
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.237703084946	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	2	search with cache (only 1: apply Z.lt_0_sub).	0.0264630317688	3
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	1.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0470669269562	16
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.102475881577	40
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0451331138611	4
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0450420379639	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.3.0	search with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).	0.0386879444122	6
Coq.ZArith.Zmax.Zpos_max_1	40	4.0.0.7	search with cache (only 1: induction p; only 1: easy; only 1: trivial; only 1: reflexivity).	0.190543889999	121
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	1.0.0.36.24	search with cache (only 1: unfold Z.min, Pos.min; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: auto with arith).	4.95542883873	4871
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	1.1.0.69	search with cache (only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: reflexivity).	1.90585207939	2836
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.2.0.0.1	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.486809968948	113
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.8	search with cache (only 1: intro H; only 1: Z.order).	0.64509510994	35
Coq.ZArith.Zorder.Zlt_not_le	40	10	search with cache (only 1: intuition Z.order).	0.365607023239	71
Coq.ZArith.Zorder.Zle_not_gt	40	8	search with cache (only 1: auto).	0.368089914322	82
Coq.ZArith.Zorder.Zgt_not_le	40	11	search with cache (only 1: auto).	1.22957611084	263
Coq.ZArith.Zorder.Znot_ge_lt	40	10.6.5	search with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).	1.06823801994	503
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0544159412384	4
Coq.ZArith.Zorder.Znot_gt_le	40	1	search with cache (only 1: trivial).	0.0398519039154	2
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0533571243286	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	1.9.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	1.64380002022	331
Coq.ZArith.Zorder.Zgt_irrefl	40	36	search with cache (only 1: easy).	1.57541894913	1669
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0736918449402	3
Coq.ZArith.Zorder.Zle_gt_trans	40	3.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.0828020572662	6
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0614321231842	2
Coq.ZArith.Zorder.Zge_trans	40	1.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0730330944061	3
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0629620552063	5
Coq.ZArith.Zorder.Zsucc_gt_reg	40	1.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.067312002182	11
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0400431156158	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0403740406036	1
Coq.ZArith.Zorder.Zgt_succ	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0437059402466	2
Coq.ZArith.Zorder.Znot_le_succ	40	0.0.23.4	search with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	1.57631993294	1438
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.037230014801	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0381870269775	1
Coq.ZArith.Zorder.Zgt_succ_le	40	1.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0502171516418	4
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0386538505554	1
Coq.ZArith.Zorder.Zle_succ_gt	40	4.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0602810382843	6
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0399761199951	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.1.18.2.5.5	search with cache (only 1: destruct n as [| p| p]; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: intros H; only 1: easy).	20.3386499882	15384
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.10	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.147727966309	99
Coq.ZArith.Zorder.Zle_neg_pos	40	0.0	search with cache (only 1: intros a b; only 1: easy).	0.0523099899292	2
Coq.ZArith.Zorder.Zgt_pos_0	40	2.0	search with cache (only 1: intros n; only 1: easy).	0.0455658435822	4
Coq.ZArith.Zorder.Zle_0_pos	40	1.0	search with cache (only 1: intros a; only 1: easy).	0.050614118576	3
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0402281284332	1
Coq.ZArith.Zorder.Zle_0_nat	40	1.1.10	search with cache (only 1: red; only 1: intro; only 1: now destruct n).	2.00923585892	527
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	1	search with cache (only 1: apply Z.add_lt_mono_l).	0.0411870479584	2
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0406379699707	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	3	search with cache (only 1: apply Z.add_le_mono_l).	0.0425539016724	4
Coq.ZArith.Zorder.Zplus_le_reg_r	40	15	search with cache (only 1: apply Z.add_le_mono_r).	1.5065600872	202
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	4	search with cache (only 1: apply Z.add_lt_mono_l).	0.047306060791	5
Coq.ZArith.Zorder.Zplus_lt_reg_r	40
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	1.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	1.14845919609	17
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0642499923706	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.9	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.126438856125	38
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0573680400848	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0402369499207	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0405070781708	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0752520561218	4
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	6.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0870299339294	19
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	7.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.075248003006	10
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	4.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0542650222778	13
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.148428201675	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0401611328125	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0568380355835	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0403509140015	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0753948688507	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0736620426178	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0570950508118	5
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	1.0.1.2.0.1.1.0.0.0.12.21	search with cache (only 1: symmetry; only 1: destruct n as [| n| n], m as [| m| m]; only 1: now subst; only 1: simpl; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: trivial; only 1: now subst; only 1: easy || now destruct y; only 1: trivial; only 1: now subst).	36.3647098541	32705
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0534639358521	3
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.153753995895	22
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	2	search with cache (only 1: apply Z.le_0_sub).	0.0421280860901	3
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40	11.4.0.2.0.2.0.41.28	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: intros H; only 1: Z.swap_greater; only 1: subst; only 1: Z.order || apply Z.lt_0_1; only 1: now Z.swap_greater; only 1: Z.swap_greater; only 1: Z.order).	17.2457249165	15288
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	7.1.17	search with cache (only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: now destruct n).	0.828155994415	1030
Coq.ZArith.Zbool.Zle_imp_le_bool	40	1	search with cache (only 1: apply Z.leb_le).	0.00958800315857	2
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	0.10	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.202279806137	105
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	1	search with cache (only 1: trivial).	0.00970983505249	2
Coq.ZArith.Zbool.Zone_min_pos	40	0.6.3.3.4	search with cache (only 1: intros Hn; only 1: destruct n; only 1: now destruct Hn || easy; only 1: now destruct p; only 1: now destruct Hn || easy).	0.613843202591	536
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.6	search with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	0.076849937439	23
Coq.ZArith.Zbool.Zge_is_le_bool	40	3.0.6.1	search with cache (only 1: unfold Z.geb, Z.leb; only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.809815883636	572
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	3.3.0.0	search with cache (only 1: rewrite Z.leb_le; only 1: unfold Z.le, Z.ge; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0322830677032	17
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	2.2.0.0.0.5	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: congruence; only 1: congruence; only 1: now try Z.order').	0.750933885574	456
Coq.ZArith.Zbool.Zeq_bool_neq	40	1.1.3.0.2.5.15	search with cache (only 1: red; only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now try BinNat.N.order'; only 1: now try Z.order'; only 1: now try Z.order').	4.91744589806	4698
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0564930438995	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	1.1.1.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.941128969193	213
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0585300922394	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.1.1	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.0765690803528	8
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.2.6	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.84296107292	687
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.2.0.0	search with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.480792045593	58
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	1.1.1	search with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).	0.0702209472656	11
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40	6.6.2.1.4.0	search with cache (only 1: intro EQ; only 1: elim Z_lt_ge_dec; only 1: now left; only 1: right; only 1: Z.swap_greater; only 1: Z.order').	5.91487407684	3446
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto; only 1: left; only 1: auto).	1.6454000473	507
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.1.1	search with cache (only 1: intro n; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.217758893967	6
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.0338759422302	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.0.0.0.2.3	search with cache (only 1: destruct b as [| b| b]; only 1: Z.order; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: now elim Hb).	0.446578025818	79
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.8.24.5.4.9.0	search with cache (only 1: intro x; only 1: intro H; only 1: induction (Rwf x); only 1: apply eq_dep_eq; only 1: induction (Rwf x); only 1: destruct H; only 1: auto).	8.64154005051	35902
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0211820602417	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	1.12	search with cache (only 1: rewrite <- Fix_F_eq; only 1: reflexivity).	0.091518163681	76
Coq.Program.Wf.Fix_F_sub_rect	40
Coq.Program.Wf.eq_Fix_F_sub	40	7.2	search with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0550639629364	63
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	12.5.7.12.4.14.21	search with cache (only 1: intro p; only 1: intros UIP_refl y; only 1: intro H; only 1: intro z; only 1: destruct z; only 1: subst; only 1: reflexivity).	1.61153101921	21652
Coq.Program.Equality.JMeq_eq_refl	40	3	search with cache (only 1: apply UIP_refl).	0.00425505638123	4
Coq.Program.Equality.UIP_refl_refl	40	0	search with cache (only 1: apply UIP).	0.00406408309937	1
Coq.Program.Equality.inj_pairT2_refl	40	16	search with cache (only 1: apply UIP_refl).	0.0154249668121	108
Coq.Program.Equality.solution_left	40	5.4.4	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0205039978027	151
Coq.Program.Equality.solution_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.00450205802917	3
Coq.Program.Equality.deletion	40	0.0	search with cache (only 1: intros; only 1: assumption).	0.00382804870605	2
Coq.Program.Equality.simplification_heq	40
Coq.Program.Equality.simplification_existT2	40	1.6.0.3.18	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.228266000748	2246
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.0.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.00652813911438	3
Coq.Program.Combinators.compose_id_left	40	0.4	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.00435304641724	6
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0045428276062	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00543022155762	2
Coq.Program.Combinators.flip_flip	40	4.0	search with cache (only 1: intros; only 1: reflexivity).	0.00539708137512	6
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00542902946472	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.084095954895	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40	0.0.0.1.6.7	search with cache (only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: unfold PermutSetoid.permutation, meq; only 1: intros H; only 1: rewrite H; only 1: auto).	1.9375398159	1569
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40	0.0.0.1.0.1.0.4.1.5	search with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: simpl; only 1: induction l as [| x l IHl]; only 1: trivial; only 1: intros H; only 1: specialize (H x); only 1: simpl in H; only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate || auto; only 1: now elim NEQ).	5.64327383041	3124
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.0.0.0.5.1.9.1.0.1	search with cache (only 1: induction stack as [| []]; only 1: simpl; only 1: intro; only 1: constructor; only 1: simpl; only 1: firstorder; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	3.75768494606	6014
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	0.3.2	search with cache (only 1: induction l; only 1: auto; only 1: now constructor).	0.0245590209961	8
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	0.0.1.2	search with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.17226600647	29
Coq.Sorting.Permutation.Permutation_cons	40	1.2.2.2	search with cache (only 1: intros l x HF; only 1: subst; only 1: constructor; only 1: auto).	0.251551866531	53
Coq.Sorting.Permutation.Permutation_in	40	0.6.0.0.1.0.0.2.1	search with cache (only 1: intros l l' Hperm; only 1: induction 1; only 1: auto; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto; only 1: firstorder; only 1: auto).	9.69174695015	4859
Coq.Sorting.Permutation.Permutation_in'	40	2.0.1.0.0.0.0.2.4.3	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: induction 1; only 1: simpl; only 1: tauto; only 1: simpl in *; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	6.64978194237	6048
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.0.0.6.0	search with cache (only 1: intros l l' tl Hperm; only 1: induction l as [| a l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.188369035721	98
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	1	search with cache (only 1: auto).	0.0191450119019	2
Coq.Sorting.Permutation.Permutation_rev	40	4.21.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: trivial).	10.7872958183	14268
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	2.0.0.0.0.0.0.0.0.1	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.471273899078	305
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.0.0.1.0	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_head; only 1: now constructor; only 1: apply Add_app).	1.02872681618	6
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: intros H y; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	1.05879402161	19
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	13	search with cache (only 1: split).	0.461366891861	177
Coq.Sorting.PermutSetoid.permut_sym	40	3.4	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0670459270477	9
Coq.Sorting.PermutSetoid.permut_trans	40	0.1.1.2	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	0.120995998383	28
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.078891992569	4
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40	0.0.1.5.1.1	search with cache (only 1: intros; only 1: replace (a :: l) with [ ] ++ a :: l; only 1: apply permut_add_inside_eq; only 1: reflexivity; only 1: auto; only 1: auto).	7.90591001511	1827
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40	0.0.0.0.0.1.0.0.0.0.10	search with cache (only 1: intro a; only 1: unfold permutation, meq; only 1: intros; only 1: generalize (H a0); only 1: clear H; only 1: simpl; only 1: destruct (eqA_dec a a0); only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	18.7440650463	11139
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).	2.6747469902	594
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	1.0.0.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: apply plus_reg_l with (if eqA_dec a a0 then 1 else 0); only 1: rewrite H; only 1: clear H; only 1: symmetry; only 1: rewrite Nat.add_comm, <- !Nat.add_assoc; only 1: f_equal; only 1: rewrite Nat.add_comm; only 1: auto).	15.8525030613	4318
Coq.Sorting.PermutSetoid.if_eqA_else	40	0.2.7.14	search with cache (only 1: intuition; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: congruence; only 1: auto).	3.13690400124	2864
Coq.Sorting.PermutSetoid.if_eqA_refl	40	1.1.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	0.0841720104218	7
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.0.0.1	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: inversion 1; only 1: auto; only 1: auto with arith).	0.485669136047	48
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40	0.1.1.3.0.2.1.2.2	search with cache (only 1: intros l1 l2; only 1: unfold permutation, meq; only 1: intro a; only 1: simpl; only 1: intros H; only 1: rewrite multiplicity_InA; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).	8.02840995789	4861
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.3.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto; only 1: auto; only 1: auto).	0.110564947128	17
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.12.2	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.317234992981	524
Coq.Sorting.Sorted.Sorted_inv	40	1.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0143189430237	4
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.1.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0169439315796	4
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0134429931641	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	0.0.1.0.0.2.11	search with cache (only 1: intro Pdec; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	13.5974090099	13717
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	0.2	search with cache (only 1: simpl; only 1: auto).	0.0864889621735	12
Coq.Sorting.Heap.leA_Tree_Node	40	0	search with cache (only 1: auto with datatypes).	0.0689549446106	1
Coq.Sorting.Heap.invert_heap	40	0.30	search with cache (only 1: inversion 1; only 1: auto).	3.19485378265	3259
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.2.0.0.0.0.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	1.35687208176	401
Coq.Sorting.Heap.low_trans	40	8.1.2.0.9	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: eauto).	5.51978206635	2647
Coq.Sorting.Heap.Equivalence_instance_0	40	6.1.1.2	search with cache (only 1: split; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).	1.58048987389	342
Coq.Sorting.Heap.Proper_instance_0	40	0.0.0	search with cache (only 1: repeat intro; only 1: simpl; only 1: auto).	0.0843498706818	3
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	0.5	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.205836057663	26
Coq.Sorting.Heap.list_to_heap	40	1.5	search with cache (only 1: fix merge 1; only 1: auto).	0.0879731178284	16
Coq.Sorting.Heap.heap_to_list	40	3.21	search with cache (only 1: fix merge0 1; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	2.20788288116	1662
Coq.Sorting.Heap.treesort	40	2.5	search with cache (only 1: fix merge 1; only 1: auto).	0.116565942764	22
Coq.Init.Wf.Acc_inv	40	12.5.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.300503015518	1566
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00781917572021	4
Coq.Init.Wf.well_founded_ind	40	0	search with cache (only 1: exact (fun P : A -> Set => well_founded_induction_type P)).	0.00594091415405	1
Coq.Init.Wf.Fix_F_eq	40	0.10	search with cache (only 1: intros f [x]; only 1: auto).	0.0144081115723	33
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.7.16.5.18.3	search with cache (only 1: intro z; only 1: intros H x0; only 1: reflexivity || destruct H; only 1: auto; only 1: induction n; only 1: auto).	1.58150410652	15509
Coq.Init.Tactics.decide_right	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0107600688934	4
Coq.Init.Peano.pred_Sn	40	1	search with cache (only 1: reflexivity).	0.0059289932251	2
Coq.Init.Peano.not_eq_S	40	5.1	search with cache (only 1: intros; only 1: auto).	0.00971794128418	13
Coq.Init.Peano.O_S	40	0	search with cache (only 1: discriminate).	0.00648307800293	1
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.9.0.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0440380573273	215
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00844287872314	6
Coq.Init.Peano.plus_n_Sm	40	1.0.0.2	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0105218887329	7
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00938391685486	5
Coq.Init.Peano.mult_n_O	40	1.0.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00948286056519	8
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.2.0	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00859713554382	5
Coq.Init.Peano.le_n_S	40	0.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0178990364075	39
Coq.Init.Peano.nat_case	40	2.7.4	search with cache (only 1: induction n; only 1: auto; only 1: trivial).	0.126821994781	222
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.2.0.3.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.36812400818	3610
Coq.Init.Peano.min_l	40	0.0.0.0.1.0.0.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.612440109253	1121
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.57981801033	1076
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	1.0.1.4.0.1.5	search with cache (only 1: intros n m; only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.314030885696	759
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00605702400208	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00632500648499	3
Coq.Init.Datatypes.surjective_pairing	40
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0087890625	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	1.1.1.1.2	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0119779109955	35
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	2.07452511787	15077
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	2.14.1.2.14.1.2.2.14.1.1	search with cache (only 1: destruct c; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: intros; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto).	16.6449961662	178866
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00220990180969	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0160429477692	117
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40	2.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: auto; only 1: intros H ?; only 1: auto).	0.00403213500977	9
Coq.Init.Logic.not_iff_compat	40	1.4.1.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00411200523376	10
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intro H; only 1: intro A; only 1: split; only 1: intros [? ?]; only 1: split; only 1: assumption; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: assumption).	0.0393581390381	214
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.1.0.2.3.0.1.0.2.3.0.1	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.301429033279	1677
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	3.0	search with cache (only 1: intros; only 1: auto).	0.0068690776825	18
Coq.Init.Logic.iff_to_and	40	2.2.0.0	search with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.0077600479126	22
Coq.Init.Logic.inst	40	3.0	search with cache (only 1: intros; only 1: trivial).	0.00479483604431	5
Coq.Init.Logic.gen	40	0.1	search with cache (only 1: unfold all; only 1: auto).	0.00498509407043	3
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00615406036377	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00565218925476	2
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00558686256409	3
Coq.Init.Logic.not_eq_sym	40
Coq.Init.Logic.eq_sind_r	40
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00571298599243	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00561594963074	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00543284416199	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	1.7.2	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0275330543518	62
Coq.Init.Logic.rew_opp_r	40	0.3	search with cache (only 1: destruct H; only 1: reflexivity).	0.00849604606628	13
Coq.Init.Logic.rew_opp_l	40	0.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00739502906799	4
Coq.Init.Logic.f_equal2	40	0.0.7.3	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0465948581696	228
Coq.Init.Logic.f_equal3	40	0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00882291793823	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0102159976959	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0119791030884	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00746297836304	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00738906860352	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00759410858154	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00752091407776	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00769782066345	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.4.4	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0163118839264	26
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00922513008118	3
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00929999351501	2
Coq.Init.Logic.rew_swap	40	4.3.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0101051330566	10
Coq.Init.Logic.rew_compose	40	1.0.1	search with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0100469589233	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros A C h1 h2; only 1: trivial).	0.00723910331726	2
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40	0.4	search with cache (only 1: destruct e; only 1: reflexivity).	0.012510061264	16
Coq.Init.Logic.eq_trans_sym_distr	40	0.5.1	search with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	0.012375831604	14
Coq.Init.Logic.eq_trans_rew_distr	40
Coq.Init.Logic.rew_const	40	2.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00824117660522	5
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	1.3.5	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0154180526733	46
Coq.Init.Logic.inhabited_covariant	40	0.3.6	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0128748416901	40
Coq.Init.Logic.eq_stepl	40	0.3.0.7	search with cache (only 1: intros; only 1: destruct H; only 1: symmetry; only 1: trivial).	0.0392129421234	146
Coq.Init.Logic.iff_stepl	40	9.0.9.0.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: intros; only 1: auto).	0.348552942276	2274
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.1.2.0.1	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0147581100464	9
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0142910480499	2
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00647616386414	2
Coq.Init.Logic_Type.identity_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00761914253235	3
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00679898262024	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.00844216346741	5
Coq.Init.Logic_Type.identity_ind_r	40	1.5.0	search with cache (only 1: intros A x P H y H0; only 1: destruct H0 in H; only 1: auto).	0.00816893577576	9
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00704717636108	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00727295875549	3
Coq.Init.Specif.sigT_eta	40	0.3	search with cache (only 1: destruct p; only 1: auto).	0.00862193107605	5
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0069899559021	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0084080696106	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0082311630249	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.2.8.12	search with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: auto).	0.114181041718	359
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0905139446259	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00667595863342	4
Coq.Init.Specif.eq_existT_curried_map	40	0.3	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0115239620209	5
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0076949596405	2
Coq.Init.Specif.eq_exist_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00830006599426	5
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.1.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0139050483704	7
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	3.15.1.0.8.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intros [? ?]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried; only 1: exists x; only 1: assumption).	1.76781511307	6272
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00748205184937	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.0.1.1.18	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.49329996109	854
Coq.Init.Specif.eq_sigT2_uncurried_iff	40
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0125510692596	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.00938010215759	4
Coq.Init.Specif.eq_sig2_uncurried	40	0.0.2.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0265619754791	7
Coq.Init.Specif.eq_sig2_uncurried_iff	40	15.6.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	3.2795279026	3430
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0118060112	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00446796417236	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.0.0.0.0.2.1.0.0	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.848737001419	463
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.055233001709	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0597701072693	3
Coq.QArith.Qreduction.Qminus'_correct	40	2.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0593631267548	4
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	3.4.8.0.1.0	search with cache (only 1: split; only 1: intros E; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto; only 1: intros E; only 1: now rewrite !Qred_correct).	2.6153459549	1071
Coq.QArith.Qreduction.Qred_lt	40	3.4.9.0.2.1	search with cache (only 1: split; only 1: intros E; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto; only 1: intros E; only 1: now rewrite !Qred_correct).	3.38008904457	1554
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	18.0.16	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qle_Qabs).	14.2120368481	12401
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	0.3.1.1.0.11	search with cache (only 1: intros n; only 1: simpl; only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: apply Z.square_nonneg).	3.23393988609	1983
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	2.0.1.0.0.0	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: auto with *).	0.100372076035	22
Coq.QArith.Qfield.ex1	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.163394927979	5
Coq.QArith.Qfield.ex2	40	0	search with cache (only 1: exact Qplus_comm).	0.0123689174652	1
Coq.QArith.Qfield.ex3	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.178499937057	5
Coq.QArith.Qfield.ex4	40	0	search with cache (only 1: now try destruct p).	0.016706943512	1
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0197160243988	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0200200080872	1
Coq.QArith.Qfield.ex7	40	0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0450429916382	5
Coq.QArith.Qfield.ex8	40	1.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0434980392456	5
Coq.QArith.Qfield.ex9	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0206258296967	2
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.1.1.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.293004989624	47
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0338530540466	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.1	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.298713922501	8
Coq.QArith.Qcanon.Qred_involutive	40	1.11.0	search with cache (only 1: intros (x, y); only 1: apply Qred_complete; only 1: apply Qred_correct).	2.48202204704	1203
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: reflexivity).	0.0714550018311	3
Coq.QArith.Qcanon.Qcgt_alt	40	0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0737929344177	3
Coq.QArith.Qcanon.Qcle_alt	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0675320625305	2
Coq.QArith.Qcanon.Qcge_alt	40	0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0767540931702	5
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	3	search with cache (only 1: auto with qarith).	0.0652070045471	4
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	0.6.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.101903915405	13
Coq.QArith.Qcanon.Qcplus_0_r	40	1.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.0980489253998	4
Coq.QArith.Qcanon.Qcplus_comm	40	1.0.5.2.1	search with cache (only 1: intros a b; only 1: case a; only 1: intros; only 1: qc; only 1: ring).	0.999920129776	421
Coq.QArith.Qcanon.Qcopp_involutive	40	0.4.0	search with cache (only 1: intros a; only 1: qc; only 1: ring).	0.0957250595093	7
Coq.QArith.Qcanon.Qcplus_opp_r	40	3.0.1	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	2.82246613503	26
Coq.QArith.Qcanon.Qcmult_assoc	40	0.0.1.8	search with cache (only 1: intros (a, b) (c, d); only 1: intros (x, y); only 1: qc; only 1: ring).	0.576522827148	131
Coq.QArith.Qcanon.Qcmult_0_l	40	0.0.0.0	search with cache (only 1: intros; only 1: qc; only 1: compute; only 1: reflexivity).	0.0926020145416	4
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.109684944153	6
Coq.QArith.Qcanon.Qcmult_1_l	40	3.2.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.301647186279	23
Coq.QArith.Qcanon.Qcmult_1_r	40	0.2.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.134966850281	17
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.165162801743	11
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	2.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.153435945511	5
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	3.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.309129953384	6
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	5.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto with *).	0.385572195053	44
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.101531982422	6
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40	0.16.5.7.0	search with cache (only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: field; only 1: auto).	36.6565389633	19824
Coq.QArith.Qcanon.Qcle_refl	40	3.6.1	search with cache (only 1: intros n; only 1: red; only 1: auto with qarith).	0.208861112595	151
Coq.QArith.Qcanon.Qcle_antisym	40	4.2.9.0	search with cache (only 1: intros x y; only 1: destruct x; only 1: intro H; only 1: auto with qarith).	2.32758498192	1247
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	0.0.1.6	search with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	0.446544885635	94
Coq.QArith.Qcanon.Qclt_le_weak	40	8.2	search with cache (only 1: intros a b; only 1: apply Z.lt_le_incl).	0.543108940125	176
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.2.1.0.0	search with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: eauto).	0.156657934189	25
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	5.0.1.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).	0.599515914917	155
Coq.QArith.Qcanon.Qcnot_lt_le	40	7.1	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: apply Z.nlt_ge).	0.0858290195465	19
Coq.QArith.Qcanon.Qcnot_le_lt	40	1.2.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros (x1, x2) (y1, y2); only 1: apply Z.nle_gt).	0.104990005493	24
Coq.QArith.Qcanon.Qclt_not_le	40	5.0	search with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.0879690647125	19
Coq.QArith.Qcanon.Qcle_not_lt	40	4.2.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros (a1, a2) (b1, b2); only 1: apply Z.le_ngt).	0.127828121185	29
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.0.8	search with cache (only 1: unfold Qclt, Qcle; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.34139418602	107
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40	1.0.0.4.0.0.0.6	search with cache (only 1: unfold Qclt, Qcle; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.lt_sub_lt_add_r, Z.opp_involutive; only 1: reflexivity).	2.59355306625	945
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	0.0.7.0.4.1.1	search with cache (only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto; only 1: auto with qarith).	10.9962120056	3799
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	9.0.3	search with cache (only 1: intros; only 1: qc; only 1: now induction n).	0.787384033203	318
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.1.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.530915021896	130
Coq.QArith.Qreals.IZR_nz	40	2.1.0	search with cache (only 1: red; only 1: intro; only 1: now apply not_0_IZR).	0.217872858047	14
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40	0.0.1.6.9	search with cache (only 1: unfold Qeq; only 1: rewrite <- Z.compare_eq_iff; only 1: split; only 1: easy || now destruct 1; only 1: auto).	1.83529806137	952
Coq.QArith.QArith_base.Qlt_alt	40	1.0	search with cache (only 1: symmetry; only 1: reflexivity).	0.0573470592499	3
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	1.0.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0940990447998	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	1	search with cache (only 1: intuition).	0.0551650524139	2
Coq.QArith.QArith_base.Qeq_sym	40	5.1	search with cache (only 1: symmetry; only 1: auto).	0.186146020889	14
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	0.0.0.0.0.1.8.5.7.13	search with cache (only 1: split; only 1: auto with qarith; only 1: auto with qarith; only 1: red; only 1: intros x y z; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	5.45616102219	5568
Coq.QArith.QArith_base.Qeq_dec	40	0.0.1.5	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.236186027527	10
Coq.QArith.QArith_base.Qeq_bool_iff	40	0.2.2.12.5	search with cache (only 1: symmetry; only 1: unfold Qeq, Qlt, Qcompare; only 1: split; only 1: apply Zeq_is_eq_bool; only 1: apply Zeq_is_eq_bool).	1.72334313393	1177
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	search with cache (only 1: apply Zeq_is_eq_bool).	0.0551359653473	2
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0542190074921	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	3	search with cache (only 1: apply Zle_is_le_bool).	0.0581560134888	4
Coq.QArith.QArith_base.Qnot_eq_sym	40	0	search with cache (only 1: auto with qarith).	0.054044008255	1
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.9	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0904738903046	21
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.6	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.657085180283	24
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.4	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.196743965149	46
Coq.QArith.QArith_base.Qmake_Qdiv	40	1.5.11	search with cache (only 1: Z.bitwise; only 1: simpl; only 1: now Z.nzsimpl).	3.1607978344	198
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	2.2.0.0.2.0.0	search with cache (only 1: unfold Qeq, Qcompare; only 1: intros (p1, p2) (q1, q2) H (r1, r2) (s1, s2) H'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: split; only 1: eauto with qarith; only 1: eauto with qarith).	2.10154294968	564
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	1	search with cache (only 1: now try destruct p).	0.0662000179291	2
Coq.QArith.QArith_base.Qplus_assoc	40	4.1.0.2.7	search with cache (only 1: unfold Qeq; only 1: intros n m p; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	14.3212730885	1731
Coq.QArith.QArith_base.Qplus_0_l	40	2.0.0.3	search with cache (only 1: unfold Qeq; only 1: simpl in *; only 1: intros; only 1: ring).	0.518298864365	16
Coq.QArith.QArith_base.Qplus_0_r	40	0.2.0.3.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: Z.nzsimpl; only 1: simpl; only 1: simpl_mult; only 1: ring).	1.11359786987	118
Coq.QArith.QArith_base.Qplus_comm	40	2.4.1.1.2	search with cache (only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring).	3.01881098747	458
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.156145811081	4
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.093700170517	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.1.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.262211084366	6
Coq.QArith.QArith_base.Qmult_0_l	40	7.1	search with cache (only 1: intros; only 1: firstorder).	0.0669779777527	10
Coq.QArith.QArith_base.Qmult_0_r	40	0.1.0.2	search with cache (only 1: red; only 1: simpl; only 1: intros a0; only 1: ring).	0.134048938751	24
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.2.0.0.3	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.71785283089	476
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.145137071609	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.1.1.0.1	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.28168296814	20
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.17390203476	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	9	search with cache (only 1: auto).	0.396530866623	87
Coq.QArith.QArith_base.inject_Z_opp	40	0	search with cache (only 1: now destruct x).	0.057765007019	1
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	0.7.0.3.6	search with cache (only 1: unfold Qeq, Qmult, Qplus; only 1: intros x y H; only 1: simpl; only 1: simpl_mult; only 1: ring).	9.87422204018	3184
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.10853099823	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	2	search with cache (only 1: intuition).	0.0609269142151	3
Coq.QArith.QArith_base.Qle_antisym	40	5.7	search with cache (only 1: unfold Qeq; only 1: apply Z.le_antisymm).	0.248404979706	87
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40	0.0.8	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: now rewrite !Z.mul_1_r).	0.175513029099	62
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	14.13.5	search with cache (only 1: red; only 1: intro H; only 1: now apply Z.lt_le_incl).	3.24750208855	2300
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	2	search with cache (only 1: apply Z.nle_gt).	0.05557513237	3
Coq.QArith.QArith_base.Qle_not_lt	40	2	search with cache (only 1: apply Z.nlt_ge).	0.0557100772858	3
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	4.3.1.0.0.0.0	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: auto with zarith; only 1: red; only 1: simpl; only 1: discriminate; only 1: auto with arith).	8.95454311371	2134
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0731129646301	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40	2.3.0.2.3.0.0.0.1.0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite <- Hy; only 1: clear y' Hy; only 1: induction y; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Hx; only 1: reflexivity; only 1: simpl; only 1: rewrite Hx; only 1: reflexivity).	13.2309658527	6010
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.106013059616	10
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	1.2.11	search with cache (only 1: simpl; only 1: intro n; only 1: now Z.nzsimpl').	1.48882102966	847
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.2.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.141844034195	15
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.398903846741	54
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	0.0.0.3.7.6.2	search with cache (only 1: intro; only 1: unfold Qle, Qlt; only 1: compute; only 1: destruct x as [[| xn| xn] xd]; only 1: congruence; only 1: congruence; only 1: congruence).	28.6650490761	10850
Coq.QArith.Qabs.Qabs_neg	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0666468143463	11
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.0.7.2	search with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).	0.917154788971	348
Coq.QArith.Qabs.Zabs_Qabs	40	0.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: reflexivity).	0.0334939956665	4
Coq.QArith.Qabs.Qabs_opp	40	0.0.0.0.0.0.1.9	search with cache (only 1: intros [[| n| n] d]; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	18.231607914	7130
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	2.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: congruence).	0.0472769737244	7
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.1.2	search with cache (only 1: intros [[| n| n] d]; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	2.49731993675	681
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	2	search with cache (only 1: split).	0.00332188606262	3
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00306105613708	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00359892845154	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	4.0.2.6.3.1	search with cache (only 1: hnf; only 1: split; only 1: intro H; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	0.353118896484	990
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: auto).	0.00525498390198	1
Coq.Classes.CMorphisms.subrelation_respectful	40	1	search with cache (only 1: firstorder).	0.00800085067749	2
Coq.Classes.CMorphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00392413139343	1
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00454092025757	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	3	search with cache (only 1: simpl_crelation).	0.0259368419647	4
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00957012176514	1
Coq.Classes.CMorphisms.forall_subrelation	40	0.1	search with cache (only 1: reduce; only 1: firstorder).	0.00862789154053	3
Coq.Classes.CMorphisms.iff_impl_subrelation	40	2.0	search with cache (only 1: reduce; only 1: firstorder).	0.00542688369751	4
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00433397293091	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00488305091858	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00453996658325	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	2	search with cache (only 1: firstorder).	0.00844311714172	3
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0835521221161	1
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.022588968277	1
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	5.42044901848	1545
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	3.2.1	search with cache (only 1: transitivity x0; only 1: firstorder; only 1: firstorder).	1.64262509346	665
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	4.2.0	search with cache (only 1: transitivity x0; only 1: firstorder; only 1: simpl_crelation).	0.711833000183	418
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0995380878448	1
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	6.5.0	search with cache (only 1: transitivity y; only 1: assumption; only 1: assumption).	1.35084319115	1932
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	1	search with cache (only 1: firstorder).	1.98636007309	376
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	0	search with cache (only 1: simpl_crelation).	0.0080201625824	1
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	0	search with cache (only 1: firstorder).	0.00695705413818	1
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	1	search with cache (only 1: simpl_crelation).	0.00953888893127	2
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00482082366943	1
Coq.Classes.CMorphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.00627398490906	1
Coq.Classes.CMorphisms.flip1	40	0	search with cache (only 1: firstorder).	0.0039849281311	1
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00403594970703	1
Coq.Classes.CMorphisms.eq_subrelation	40	2	search with cache (only 1: simpl_crelation).	0.0119938850403	11
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00397896766663	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00393414497375	1
Coq.Classes.CMorphisms.proper_proper	40	0.0	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0760068893433	2
Coq.Classes.CMorphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00491690635681	1
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0047299861908	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.1	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation).	0.0347979068756	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40	0.20.3.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip; only 1: unfold respectful, relation_equivalence in *; only 1: firstorder).	26.0798799992	5166
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	0.11.2.3	search with cache (only 1: red; only 1: red; only 1: simpl_crelation; only 1: firstorder).	17.8566031456	4694
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.00757884979248	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0110838413239	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.1.3	search with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.0419008731842	39
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40	2.3.1.6	search with cache (only 1: compute; only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: apply (@symmetry _ _ _ _); only 1: firstorder).	8.42930483818	1170
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00850200653076	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00523018836975	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00690603256226	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.264312028885	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.00548815727234	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00517797470093	1
Coq.Classes.CRelationClasses.flip_Reflexive	40	1.0	search with cache (only 1: hnf; only 1: auto).	0.00482797622681	3
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	4.0.0.1	search with cache (only 1: hnf; only 1: intros x y H'; only 1: red in H'; only 1: firstorder).	0.011461019516	9
Coq.Classes.CRelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0187721252441	2
Coq.Classes.CRelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.119112968445	1
Coq.Classes.CRelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.021320104599	1
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0316081047058	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00767397880554	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00590085983276	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0	search with cache (only 1: firstorder).	0.00550889968872	1
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00660610198975	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00804090499878	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	5	search with cache (only 1: firstorder).	0.0125949382782	6
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.013475894928	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.036248922348	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.1.9	search with cache (only 1: compute; only 1: intros A R Sym f Hf x x' Hxx'; only 1: firstorder).	0.280511856079	291
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40	0.8.9	search with cache (only 1: intros; only 1: compute; only 1: firstorder).	7.71918606758	2538
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: firstorder).	0.00508117675781	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00543999671936	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00688099861145	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.256865978241	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: split).	0.00786590576172	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00892996788025	1
Coq.Classes.RelationClasses.flip_Reflexive	40	0	search with cache (only 1: firstorder).	0.00765609741211	1
Coq.Classes.RelationClasses.flip_Antisymmetric	40	1	search with cache (only 1: firstorder).	0.0125391483307	2
Coq.Classes.RelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0280900001526	2
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0279061794281	1
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0405819416046	2
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0992770195007	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00836300849915	1
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00920605659485	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0217311382294	3
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0139639377594	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0261068344116	6
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0128638744354	2
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0181109905243	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0.0.0.0	search with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.0720808506012	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0196540355682	1
Coq.Classes.Morphisms.eq_proper_proxy	40	0	search with cache (only 1: reflexivity).	0.077329158783	1
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0182268619537	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0076220035553	1
Coq.Classes.Morphisms.pointwise_pointwise	40	2.0.1.5.3.4	search with cache (only 1: split; only 1: compute; only 1: intro H; only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.473270893097	981
Coq.Classes.Morphisms.subrelation_id_proper	40	0	search with cache (only 1: trivial).	0.00833702087402	1
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0120561122894	1
Coq.Classes.Morphisms.subrelation_refl	40	1.1	search with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.00903701782227	4
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00894808769226	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	3.2.3	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.167464971542	34
Coq.Classes.Morphisms.pointwise_subrelation	40	1	search with cache (only 1: firstorder).	0.0097119808197	2
Coq.Classes.Morphisms.forall_subrelation	40	1.0	search with cache (only 1: reduce; only 1: firstorder).	0.0113499164581	3
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00905990600586	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00899410247803	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	0	search with cache (only 1: firstorder).	0.0102360248566	1
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0986869335175	1
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	2.69218683243	181
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	2.17078089714	650
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	2.06938910484	618
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	3.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0700080394745	16
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	23.3002910614	16453
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.0116801261902	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	3	search with cache (only 1: firstorder).	0.0120780467987	4
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.1.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0112838745117	4
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00882911682129	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0125060081482	1
Coq.Classes.Morphisms.flip1	40	0	search with cache (only 1: firstorder).	0.0396769046783	1
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00800609588623	1
Coq.Classes.Morphisms.eq_subrelation	40	1	search with cache (only 1: simpl_relation).	0.0157248973846	2
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00803184509277	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00832509994507	1
Coq.Classes.Morphisms.proper_proper	40	3.4.0	search with cache (only 1: reduce; only 1: simpl_relation; only 1: firstorder).	0.0862729549408	35
Coq.Classes.Morphisms.proper_normalizes_proper	40	2.2.1	search with cache (only 1: reduce in H; only 1: setoid_rewrite H; only 1: apply H0).	0.0183529853821	15
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00965714454651	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	2	search with cache (only 1: simpl_relation).	0.0488882064819	3
Coq.Classes.Morphisms.proper_sym_flip_2	40	2.3	search with cache (only 1: unfold respectful; only 1: simpl_relation).	0.48312497139	39
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.2.0.1.0.1.5	search with cache (only 1: intros; only 1: simpl_relation; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: red; only 1: firstorder).	4.25188088417	1136
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	3	search with cache (only 1: firstorder).	0.00880718231201	4
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00836682319641	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0282919406891	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00753879547119	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	1	search with cache (only 1: firstorder).	0.00942516326904	2
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0166771411896	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.316624879837	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	1	search with cache (only 1: firstorder).	0.0108411312103	2
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0100181102753	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00896310806274	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.00880479812622	1
Coq.Classes.RelationPairs.pair_compat	40	1	search with cache (only 1: firstorder).	0.00964307785034	2
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00885105133057	1
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0121941566467	3
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.4.3.3	search with cache (only 1: repeat red; only 1: firstorder; only 1: compute in *; only 1: auto).	0.457267045975	117
Coq.Classes.DecidableClass.Decidable_sound	40
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.3.2.2.13	search with cache (only 1: split; only 1: apply Nat.eqb_eq; only 1: intro; only 1: subst; only 1: apply Nat.eqb_refl).	1.87461900711	1939
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	6	search with cache (only 1: apply Nat.leb_le).	0.0992391109467	11
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	17.34	search with cache (only 1: destruct y; only 1: now destruct x).	0.969233989716	2206
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	9	search with cache (only 1: now auto).	0.022027015686	10
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0172381401062	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0174169540405	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	7.11.27.1	search with cache (only 1: intros; only 1: destruct H; only 1: simpl in *; only 1: firstorder).	23.566712141	16656
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	5.6	search with cache (only 1: repeat red; only 1: firstorder).	1.65605020523	299
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.575458049774	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0206019878387	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.0	search with cache (only 1: do 2 red; only 1: auto).	0.0205550193787	2
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0192201137543	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	1.2.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.03662109375	6
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0193009376526	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40	0.7.7.0	search with cache (only 1: unfold to_nat; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.01464796066	921
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: trivial).	0.0160210132599	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40	3.0.2	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.047581911087	51
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	2.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.0293750762939	8
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40	0.3.4.1	search with cache (only 1: revert q; only 1: destruct (is_succ p) as (n, ->); only 1: fix sqrtrem_spec 1; only 1: auto with arith).	1.41243600845	713
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	3.13.3	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	24.277025938	17917
Coq.PArith.Pnat.Pos2Nat.inj_ge	40	1.3.10.6	search with cache (only 1: revert q; only 1: destruct (is_succ p) as (n, ->); only 1: fix sqrtrem_spec 1; only 1: auto with arith).	19.0770871639	12862
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40	0.10.0.9.0.5.2	search with cache (only 1: induction p using peano_ind; only 1: easy; only 1: intros; only 1: unfold to_nat; only 1: rewrite iter_op_succ; only 1: now rewrite Nat.pred_succ; only 1: apply Nat.add_assoc).	31.8082280159	29937
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	2.3.0.1.10.1.0.6.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: reflexivity; only 1: induction n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: now f_equal).	10.9798038006	14979
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	3.1.0.0.9.2	search with cache (only 1: split; only 1: apply Pos2Nat.inj; only 1: trivial; only 1: trivial; only 1: intros EQ; only 1: auto).	10.3925168514	10676
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0219769477844	3
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	1.3.3.2.0.7	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	1.44069004059	2369
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.2.0.3.0.16	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	9.36870598793	3611
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.0.0.0.0.1.1	search with cache (only 1: symmetry; only 1: split; only 1: intros; only 1: now subst; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H).	0.0355849266052	10
Coq.PArith.Pnat.SuccNat2Pos.inv	40	11.2.26.0	search with cache (only 1: intros; only 1: apply Pos2Nat.inj; only 1: symmetry; only 1: now rewrite id_succ).	25.9018828869	60134
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	1.0.0.3	search with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: trivial).	0.0820100307465	64
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40	4.1.13.2.0	search with cache (only 1: intros; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: intros q; only 1: now f_equal).	29.4463951588	23763
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40	5.23.3	search with cache (only 1: intros n; only 1: fix le_div2 1; only 1: trivial).	10.6425762177	17231
Coq.PArith.Pnat.ZL6	40	2.2.2.1	search with cache (only 1: intros; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.0999369621277	71
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	search with cache (only 1: decide equality).	0.0253720283508	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	2	search with cache (only 1: now split).	0.0134057998657	3
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0121350288391	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.1.1.0.1.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.100841999054	10
Coq.PArith.BinPos.Pos.double_succ	40	1	search with cache (only 1: reflexivity).	0.0163071155548	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0307059288025	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0303919315338	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	2.79326796532	1028
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	2.0.0.0.0.0.2	search with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	1.59487199783	805
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.0.13.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).	4.0099029541	3147
Coq.PArith.BinPos.Pos.add_1_r	40	0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.024188041687	6
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.014105796814	1
Coq.PArith.BinPos.Pos.add_carry_spec	40	0.27.5	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: auto).	3.45031309128	4567
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40	0.9.1	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now destruct p).	0.884709835052	320
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	1.2.2.0.1.5.0	search with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).	13.9834830761	4110
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0.0.0.0.0.1.1	search with cache (only 1: revert q; only 1: destruct q; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial).	0.132772922516	63
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0167989730835	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0.0	search with cache (only 1: induction p using peano_rect; only 1: trivial; only 1: trivial).	0.0188689231873	3
Coq.PArith.BinPos.Pos.mul_1_r	40	1.0.0.1.0.5	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: reflexivity).	0.188648939133	188
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.0.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.0191879272461	3
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.2.0.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.10810303688	49
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0364739894867	1
Coq.PArith.BinPos.Pos.square_xO	40	11.1.0	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	1.73745203018	958
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp).	0.0416059494019	10
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0297708511353	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	11.4.0	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto).	4.53707385063	2712
Coq.PArith.BinPos.Pos.leb_le	40	11.4.3	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto).	2.95075678825	3539
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	2.10.12	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	3.24076414108	2446
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.3.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	0.0953929424286	9
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.2.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0385279655457	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.3.0	search with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.229072093964	25
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.2.1.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.374536037445	33
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.2.2.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.53421998024	77
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.3.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.540464878082	136
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0	search with cache (only 1: trivial).	0.0160830020905	1
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0160138607025	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.3.3.8.4	search with cache (only 1: change_no_check p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	3.52800416946	3914
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.7.7.13	search with cache (only 1: unfold ge, lt, compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	4.94757580757	4903
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.0.0.0.10	search with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0932610034943	112
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1	search with cache (only 1: unfold lt; only 1: now split).	0.0191478729248	3
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.1.4	search with cache (only 1: unfold le; only 1: unfold ge, lt, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.0327367782593	8
Coq.PArith.BinPos.Pos.gt_lt_iff	40	2.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.152360200882	27
Coq.PArith.BinPos.Pos.gt_lt	40	6.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0621950626373	17
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0164601802826	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	6.2	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.057296037674	19
Coq.PArith.BinPos.Pos.ge_le	40	0.1	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0278978347778	3
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0164260864258	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	0.0.0.7.3.14.0	search with cache (only 1: apply lt_eq_cases; only 1: unfold lt, gt; only 1: rewrite compare_sub_mask, <- sub_mask_nul_iff; only 1: destruct p; only 1: auto; only 1: auto; only 1: auto).	3.04145479202	4437
Coq.PArith.BinPos.Pos.nlt_1_r	40	2	search with cache (only 1: now destruct p).	0.0536341667175	18
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0788140296936	37
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0230770111084	2
Coq.PArith.BinPos.Pos.lt_nle	40	1.3	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.851674079895	122
Coq.PArith.BinPos.Pos.lt_le_incl	40	4.2	search with cache (only 1: unfold lt, le; only 1: congruence).	0.0913240909576	13
Coq.PArith.BinPos.Pos.lt_lt_succ	40	1.1.3.1	search with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: now left).	0.0392739772797	20
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	2.15	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite compare_succ_succ).	0.331396818161	284
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	15.3.3	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.537936925888	655
Coq.PArith.BinPos.Pos.lt_compat	40	3.0.14	search with cache (only 1: intros a a' Ha; only 1: subst; only 1: solve_proper).	1.60818719864	1137
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0281140804291	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40	0.0.0.0.0.0.0.0.0.1.0.7.0.2	search with cache (only 1: rewrite 3!PeanoNat.Nat.lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations).	17.268034935	13790
Coq.PArith.BinPos.Pos.le_succ_l	40	0.1.8.1.2	search with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	2.55575704575	1341
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	11.4.2	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.421891927719	355
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.3.1	search with cache (only 1: unfold le, ge; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0547409057617	7
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.2.0	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0333731174469	5
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.6.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0265400409698	9
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.0.3.0	search with cache (only 1: unfold le; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0301909446716	7
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0219461917877	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40	1.1.16.1	search with cache (only 1: rewrite lt_iff_add; only 1: destruct 1; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	11.3008110523	11150
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	5	search with cache (only 1: now destruct p).	0.070720911026	36
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0194580554962	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.3.1.11	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	2.43373608589	1807
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40	2.16.6	search with cache (only 1: revert q; only 1: fix le_div2 1; only 1: trivial).	19.035544157	11771
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0285580158234	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0289649963379	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.1	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.0487928390503	18
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0367801189423	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40	6.4.8.10.19	search with cache (only 1: apply max_r; only 1: intros H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: pose proof (PeanoNat.Nat.pred_succ n) as EQ'; only 1: elim (nlt_1_r _ H)).	1.98587417603	4230
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0366721153259	9
Coq.PArith.BinPos.Pos.min_1_l	40	0.0	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0224077701569	2
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0368888378143	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.0.1.9.0	search with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).	1.06510686874	717
Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.2.2.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply add_le_mono_l).	0.105520009995	60
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.2	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0294139385223	5
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0334658622742	4
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	2.0.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	0.0368618965149	5
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.1	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0293009281158	4
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0337400436401	4
Coq.PArith.BinPos.Pos.iter_op_succ	40	2.1.2.1.1.0.1.0	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: symmetry; only 1: now rewrite ?H, ?IHp; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: trivial).	3.24447584152	1560
Coq.PArith.BinPos.Pos.of_nat_succ	40	1.11.17.0.20	search with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: trivial).	2.87483787537	5274
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	3.0.1.0.1.1.3.0	search with cache (only 1: intros; only 1: symmetry; only 1: destruct n; only 1: exfalso; only 1: now apply H; only 1: simpl; only 1: f_equal; only 1: apply of_nat_succ).	1.34634494781	1672
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40	4.6.3	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	2.77038097382	1207
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	2.8	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial using lt_add_r).	0.108309030533	93
Coq.PArith.BinPos.Pos.divide_xO_xI	40	2.1.9	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros Hqp Hpr; only 1: intuition).	0.915048122406	549
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40	5.1.21	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	1.31785988808	1276
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	2.12.9	search with cache (only 1: intros x y; only 1: fix sqrtrem_spec 1; only 1: trivial).	15.6969890594	5651
Coq.PArith.BinPos.Pos.ggcd_gcd	40	2.24	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	2.48036384583	3012
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	0.10.16	search with cache (only 1: intros n IH; only 1: fix sqrtrem_spec 1; only 1: auto).	7.51034498215	11629
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	0.10.9	search with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	0.665272951126	532
Coq.PArith.BinPos.Pos.gcd_divide_r	40	0.0.8	search with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	1.04570388794	453
Coq.PArith.BinPos.Pos.gcdn_greatest	40	0.2.1	search with cache (only 1: intros x y z; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.122657060623	83
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.1	search with cache (only 1: unfold Pos.gt; only 1: now split).	0.0298631191254	4
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40	2.0.0.5.5.6	search with cache (only 1: intros; only 1: apply Pos.gt_lt in H; only 1: destruct (Pos.sub_mask_pos p q H) as (r, U); only 1: unfold Pos.sub; only 1: rewrite U; only 1: now apply Pos.sub_mask_pos_iff).	1.53933787346	1783
Coq.PArith.BinPos.Dcompare	40
Coq.Arith.Le.le_n_0_eq	40	0.1	search with cache (only 1: inversion 1; only 1: Nat.order_nz).	0.0471701622009	23
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	23.0	search with cache (only 1: fix even_equiv 1; only 1: auto).	10.6332859993	13896
Coq.Arith.Even.even_or_odd	40	6.2.12.12	search with cache (only 1: Nat.induct n; only 1: do 2 constructor; only 1: fix odd_equiv 1; only 1: tauto).	0.868278980255	2017
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0135450363159	5
Coq.Arith.Even.not_even_and_odd	40	1.8	search with cache (only 1: fix odd_equiv 1; only 1: auto with arith).	0.0316741466522	58
Coq.Arith.Even.even_plus_split	40	1.19.51	search with cache (only 1: revert m; only 1: fix odd_equiv 1; only 1: auto with arith).	36.3949410915	100094
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.113646030426	1
Coq.Arith.Even.even_even_plus	40	1	search with cache (only 1: parity_binop).	0.0655860900879	2
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0367429256439	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0365450382233	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0612070560455	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.120950937271	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0367901325226	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0542261600494	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0367698669434	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0363259315491	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0928528308868	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0365359783173	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0366971492767	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0371050834656	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.104624986649	1
Coq.Arith.Even.even_mult_l	40	1	search with cache (only 1: parity_binop).	0.0248599052429	2
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.024838924408	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0626199245453	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0368599891663	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0364220142365	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0669729709625	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0246160030365	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0116460323334	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0310959815979	1
Coq.Arith.Minus.minus_diag_reverse	40	1.8.20	search with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: trivial).	1.33159995079	2693
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.0.1.22	search with cache (only 1: Nat.induct p; only 1: reflexivity; only 1: intros p IH; only 1: trivial).	0.281754970551	560
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	2.0.0.0.0.0.12	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros; only 1: apply Nat.sub_0_r; only 1: simpl; only 1: trivial).	0.307373046875	505
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.4.6.2.0	search with cache (only 1: rewrite Nat.add_comm; only 1: intros; only 1: symmetry; only 1: apply Nat.sub_add; only 1: trivial).	0.53374004364	1301
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	35.0.1.9	search with cache (only 1: intros a n; only 1: intros EQ; only 1: rewrite <- EQ; only 1: auto with arith).	23.9733948708	55043
Coq.Arith.Between.between_le	40	0.0.1.1.3.4.14	search with cache (only 1: intro n; only 1: destruct n; only 1: auto with arith; only 1: intros m Le; only 1: elim Le; only 1: auto with arith; only 1: auto with arith).	1.31649899483	2932
Coq.Arith.Between.between_Sk_l	40	0.0.0.0.34	search with cache (only 1: fix gcd_divide 1; only 1: induction 1; only 1: intro H; only 1: auto with arith; only 1: auto with arith).	17.3997108936	40990
Coq.Arith.Between.between_restr	40	0.0.2	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0283029079437	24
Coq.Arith.Between.exists_le_S	40	0.0.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0122780799866	3
Coq.Arith.Between.exists_S_le	40	0.0.7.10	search with cache (only 1: intros a; only 1: fix le_div2 1; only 1: intros m IH; only 1: auto).	1.3402068615	2959
Coq.Arith.Between.in_int_intro	40	0.0.2.4	search with cache (only 1: intros a n m H; only 1: split; only 1: trivial; only 1: trivial).	0.243255853653	44
Coq.Arith.Between.in_int_lt	40	4.0.1	search with cache (only 1: intros n m Hn; only 1: intros (p, H); only 1: PeanoNat.Nat.Private_Tac.order).	0.0183181762695	8
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	4.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0166928768158	14
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0287868976593	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	2.0.0.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0163481235504	7
Coq.Arith.Between.exists_in_int	40	1.1.0.13	search with cache (only 1: fix gcd_divide 1; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	1.23839211464	2537
Coq.Arith.Between.in_int_exists	40	0.0.13.26.14	search with cache (only 1: intros f Hf; only 1: intros y [H1 H2]; only 1: elim H2; only 1: auto with arith; only 1: auto with arith).	11.5298628807	37529
Coq.Arith.Between.between_or_exists	40	0.21.5	search with cache (only 1: intros x; only 1: fix le_div2 1; only 1: auto with arith).	19.131196022	30760
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40	22.16.13.11	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl'; only 1: now subst).	1.54372596741	9205
Coq.Arith.Peano_dec.O_or_S	40	0.9.27.51	search with cache (only 1: induction n as [| n IH]; only 1: auto with *; only 1: left; only 1: now exists n).	11.5677909851	55578
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	8.0.10.1.2.1.2	search with cache (only 1: destruct n; only 1: intros EQ; only 1: tauto; only 1: intro H; only 1: destruct m; only 1: now right; only 1: now Morphisms.f_equiv).	14.9584429264	18776
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40	0.1.0.8.6.36.12	search with cache (only 1: right; only 1: destruct m; only 1: revert n; only 1: fix le_div2 1; only 1: intros; only 1: trivial; only 1: apply Nat.le_add_r).	12.3550088406	23097
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40	0.1.6.0.8.4.24.9.3	search with cache (only 1: intros; only 1: Nat.nzsimpl; only 1: apply Nat.add_le_lt_mono; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: trivial; only 1: intuition; only 1: Nat.Private_Tac.order; only 1: trivial).	21.7671921253	83098
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	5.9.10	search with cache (only 1: intros n m Hn Hm; only 1: fix even_equiv 1; only 1: trivial).	1.73945903778	4733
Coq.Arith.Div2.lt_div2	40	1.4.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: fix ind_0_1_SS 1; only 1: trivial).	0.0286569595337	18
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	52	search with cache (only 1: intuition).	18.5828258991	37616
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.0.3	search with cache (only 1: fix even_odd_double 1; only 1: intros; only 1: auto).	0.027724981308	15
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0177190303802	3
Coq.Arith.Div2.div2_double	40	2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: apply Nat.div2_double).	0.0437870025635	18
Coq.Arith.Div2.div2_double_plus_one	40	0.3	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: auto with arith).	0.062756061554	53
Coq.Arith.Plus.plus_assoc_reverse	40	19.0.0.0.0	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: auto with *).	20.5043520927	10308
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.00661087036133	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00664496421814	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	2	search with cache (only 1: apply Nat.add_le_mono).	0.00786399841309	3
Coq.Arith.Plus.plus_lt_compat	40	2.9.10	search with cache (only 1: intro H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	0.527442932129	773
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40	0.24.7.14	search with cache (only 1: Nat.cases n; only 1: trivial; only 1: fix le_div2 1; only 1: trivial).	8.91455507278	12411
Coq.Arith.Plus.le_plus_trans	40	7.1.0.21	search with cache (only 1: induction 1; only 1: apply Nat.le_add_r; only 1: Nat.nzsimpl; only 1: intuition).	6.92329597473	17478
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	6.1.0.0.0.2	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: intros n IH; only 1: intro H; only 1: now try Nat.order').	1.70547485352	1251
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	2.0	search with cache (only 1: intro H; only 1: trivial).	0.0148108005524	4
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.0125629901886	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0170011520386	3
Coq.Arith.Lt.le_not_lt	40	0.5	search with cache (only 1: intros H'; only 1: Nat.order).	0.0343968868256	21
Coq.Arith.Lt.lt_not_le	40	0.3	search with cache (only 1: intro H; only 1: Nat.order).	0.0196008682251	5
Coq.Arith.Lt.neq_0_lt	40	0.0	search with cache (only 1: intro H; only 1: Nat.auto').	0.0164620876312	2
Coq.Arith.Lt.lt_0_neq	40	1.0.0.0	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0176599025726	5
Coq.Arith.Lt.lt_n_S	40	1	search with cache (only 1: apply le_n_S).	0.0146040916443	2
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0137410163879	1
Coq.Arith.Lt.S_pred	40	1.5.3.5.12	search with cache (only 1: revert m; only 1: induction n; only 1: intro H; only 1: now Nat.nzsimpl; only 1: trivial).	1.46647500992	2006
Coq.Arith.Lt.S_pred_pos	40	3.1.0.9.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: induction n as [| n IH]; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: trivial).	0.407002210617	1196
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	2.5.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: apply Nat.lt_succ_r; only 1: trivial).	0.284655094147	270
Coq.Arith.Lt.le_lt_or_eq	40	37.0.2.11	search with cache (only 1: inversion 1; only 1: right; only 1: trivial; only 1: intuition).	23.7535018921	57455
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	2.74755191803	4813
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	8.08060407639	13915
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.189746141434	182
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0123310089111	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0139169692993	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0140120983124	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0138919353485	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0284359455109	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	3.19.2.13.35	search with cache (only 1: pattern n; only 1: Nat.induct n; only 1: auto; only 1: fix le_div2 1; only 1: trivial).	3.17502593994	9958
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	1.0.0.0	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.0185310840607	5
Coq.Arith.Compare_dec.lt_eq_lt_dec	40	1.21.45	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: assumption).	33.8271179199	51980
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.1.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	1.17578983307	331
Coq.Arith.Compare_dec.le_lt_dec	40	0.28.16	search with cache (only 1: revert m; only 1: fix le_div2 1; only 1: trivial).	8.34802794456	11876
Coq.Arith.Compare_dec.le_le_S_dec	40	5.0.0.0.1.0.4.0.2.1	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: auto with arith).	4.2416009903	3145
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.433398008347	261
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0206301212311	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.3	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0280380249023	6
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	0	search with cache (only 1: apply le_dec).	0.0130200386047	1
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.0130491256714	2
Coq.Arith.Compare_dec.dec_le	40	0.0.8.0.0.1.6	search with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: left; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: intros; only 1: right; only 1: Nat.order).	2.30652594566	1747
Coq.Arith.Compare_dec.dec_lt	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0127289295197	2
Coq.Arith.Compare_dec.dec_gt	40	0	search with cache (only 1: apply Nat.lt_decidable).	0.0129761695862	1
Coq.Arith.Compare_dec.dec_ge	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0132269859314	2
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0143160820007	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0136909484863	1
Coq.Arith.Compare_dec.not_gt	40	2	search with cache (only 1: apply Nat.le_ngt).	0.0162591934204	3
Coq.Arith.Compare_dec.not_ge	40	8	search with cache (only 1: intuition Nat.order).	0.0297198295593	15
Coq.Arith.Compare_dec.not_lt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.0151460170746	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	0.1.0.0.1.1.0.1.1.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto with arith; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	1.44940805435	1770
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	search with cache (only 1: apply Nat.compare_lt_iff).	0.0151829719543	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	1	search with cache (only 1: apply Nat.compare_gt_iff).	0.0152399539948	2
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	2.3.4	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: trivial).	0.259060144424	157
Coq.Arith.Compare_dec.leb_correct	40	1.7.0.0.0.1.2.1.0.1.1.18	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros H; only 1: auto with arith).	7.97889089584	18653
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0141248703003	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0245318412781	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.0139310359955	1
Coq.Arith.Compare_dec.leb_compare	40	4.5.5	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: trivial).	1.07351994514	755
Coq.Arith.EqNat.eq_nat_refl	40	2.4.8.9	search with cache (only 1: Nat.induct n; only 1: now try Nat.order'; only 1: intros n IH; only 1: trivial).	0.461096048355	501
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0	search with cache (only 1: intros <-; only 1: apply eq_nat_refl).	0.00802278518677	2
Coq.Arith.EqNat.eq_nat_eq	40	2	search with cache (only 1: apply eq_nat_is_eq).	0.311841011047	152
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	2.0.1.1.0.1.4.0	search with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: simpl; only 1: destruct m; only 1: auto; only 1: auto).	0.908082008362	1400
Coq.Arith.EqNat.beq_nat_refl	40	4.2.1.2	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0770630836487	121
Coq.Arith.EqNat.beq_nat_true	40	0.0.0.0.0.0.0.0.0.0.0.9	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: contradiction || auto).	1.01705002785	1093
Coq.Arith.EqNat.beq_nat_false	40	0.0.0.0.0.0.0.0.0.1.0.33	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: contradiction || auto; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: contradiction || auto).	3.2048740387	10855
Coq.Arith.EqNat.beq_nat_eq	40	1.0.0.0.0.0.0.0.0.0.10	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: contradiction || auto).	33.3740441799	37808
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	4.3.7.1	search with cache (only 1: intros H x0; only 1: induction n; only 1: firstorder; only 1: firstorder).	13.5402259827	784
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	3	search with cache (only 1: destr_bool).	0.0422439575195	40
Coq.Arith.PeanoNat.Nat.recursion_succ	40	3.1.3.0.0.1	search with cache (only 1: intros A A_wd A0 AS; only 1: intros; only 1: simpl; only 1: induction n; only 1: firstorder; only 1: firstorder).	0.528731822968	356
Coq.Arith.PeanoNat.Nat.pred_succ	40	0	search with cache (only 1: reflexivity).	0.00976896286011	1
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0099790096283	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.0099081993103	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0101990699768	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.0101039409637	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.0100839138031	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0177540779114	6
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.0106430053711	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0172200202942	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	23.3024439812	23123
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40	0.0.0.0.0.0.0.0.1.0.3.3.0.0.1.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).	23.5157079697	18608
Coq.Arith.PeanoNat.Nat.compare_antisym	40	0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.515393972397	500
Coq.Arith.PeanoNat.Nat.compare_succ	40	1.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.025190114975	12
Coq.Arith.PeanoNat.Nat.max_l	40	1.0.1.0.0.0.0.2.0.0.0.9	search with cache (only 1: induction n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	4.04894804955	5839
Coq.Arith.PeanoNat.Nat.max_r	40	1.0.1.0.0.0.0.2.1	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.02602100372	2039
Coq.Arith.PeanoNat.Nat.min_l	40	1.0.1.0.2.0.0.1.4	search with cache (only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.16313099861	4304
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	6.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	0.0163359642029	8
Coq.Arith.PeanoNat.Nat.pow_0_r	40	10	search with cache (only 1: reflexivity).	0.0881221294403	21
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.0	search with cache (only 1: intro; only 1: auto).	0.0140111446381	2
Coq.Arith.PeanoNat.Nat.square_spec	40	3	search with cache (only 1: reflexivity).	0.0127580165863	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0209059715271	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	2.2.0.1.0.0.1.0.0.5.0.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: nzsimpl; only 1: now rewrite plus_n_Sm; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	11.544164896	11088
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	4.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0455038547516	40
Coq.Arith.PeanoNat.Nat.divmod_spec	40	0.5.0.2.1	search with cache (only 1: intro z; only 1: intro H; only 1: intro n; only 1: fix odd_spec 1; only 1: intuition).	3.22283101082	713
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	1.19.1.3	search with cache (only 1: simpl; only 1: intros p q n m H; only 1: fix even_spec 1; only 1: intuition).	23.954169035	20735
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0133011341095	2
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40	5.5.2	search with cache (only 1: intros n m H; only 1: fix odd_spec 1; only 1: trivial).	2.65147709846	2409
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.1	search with cache (only 1: inversion 1; only 1: now apply pred_0).	0.028960943222	33
Coq.Arith.PeanoNat.Nat.gcd_divide	40	0.2.11.3	search with cache (only 1: intro n; only 1: fix even_spec 1; only 1: intros; only 1: auto).	0.621000051498	976
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	4.0.0	search with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: auto).	0.0419940948486	14
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0141990184784	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	2.8.1	search with cache (only 1: intros x y z; only 1: fix gcd_divide 1; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.262416124344	385
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	3	search with cache (only 1: apply le_0_l).	0.0145919322968	4
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.1.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.0289809703827	8
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40	0.0.9	search with cache (only 1: fix le_div2 1; only 1: intro H; only 1: auto).	0.271896839142	206
Coq.Arith.PeanoNat.Nat.double_twice	40	2.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.248266935349	56
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.1.7.3	search with cache (only 1: induct ltac:(n); only 1: reflexivity; only 1: intros n IH; only 1: auto).	0.520668983459	523
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	0.0.4.6	search with cache (only 1: unfold testbit; only 1: fix gcd_greatest 1; only 1: fold testbit; only 1: destr_bool).	22.720651865	956
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	2.8.3	search with cache (only 1: intros n m p; only 1: fix le_div2 1; only 1: tauto).	5.69151091576	2722
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	0.3.14.9	search with cache (only 1: intros n m p H; only 1: intros x y; only 1: fix le_div2 1; only 1: assumption).	6.0440428257	3809
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0160820484161	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0127091407776	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.0150089263916	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	1	search with cache (only 1: Nat.order).	0.0259160995483	11
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0104169845581	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00887608528137	1
Coq.Arith.Gt.gt_S	40	7.31.2	search with cache (only 1: intros; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	1.45952701569	3149
Coq.Arith.Gt.gt_pred	40	0	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0103778839111	1
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00911402702332	1
Coq.Arith.Gt.gt_not_le	40	1	search with cache (only 1: apply Nat.lt_nge).	0.010794878006	2
Coq.Arith.Gt.le_S_gt	40	1	search with cache (only 1: apply Nat.le_succ_l).	0.00972986221313	2
Coq.Arith.Gt.gt_S_le	40	1	search with cache (only 1: apply Nat.lt_succ_r).	0.00986886024475	2
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.00974178314209	1
Coq.Arith.Gt.le_gt_S	40	2	search with cache (only 1: apply Nat.lt_succ_r).	0.0109808444977	3
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	8.22.28.0	search with cache (only 1: intros; only 1: inversion H; only 1: now subst; only 1: now apply Nat.lt_trans with m).	10.9354720116	13237
Coq.Arith.Gt.gt_0_eq	40	29.5.23	search with cache (only 1: Nat.induct n; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: intuition).	15.2535221577	46044
Coq.Arith.Gt.plus_gt_reg_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0105741024017	1
Coq.Arith.Gt.plus_gt_compat_l	40	3	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0477089881897	17
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40	0.0.0.0.0.0.0.0.2.1.4	search with cache (only 1: intros A P H; only 1: firstorder; only 1: apply setoid_functional_choice_first_characterization; only 1: split; only 1: exact choice; only 1: split; only 1: exact extensional_function_representative; only 1: exact classic; only 1: firstorder; only 1: firstorder; only 1: firstorder).	18.1533901691	1188
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	2.4.3	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: reflexivity).	0.023973941803	67
Coq.Logic.JMeq.JMeq_trans	40	1.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0106160640717	6
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00917100906372	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00973987579346	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.010036945343	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0103559494019	4
Coq.Logic.JMeq.JMeq_congr	40	0.1.4	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0134170055389	17
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.01029920578	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00952291488647	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: intros * []; only 1: reflexivity).	0.00960302352905	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.2.0.2.0	search with cache (only 1: destruct 1; only 1: intros; only 1: apply eq_sigT_eq_dep; only 1: rewrite H; only 1: reflexivity).	0.0145049095154	9
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.3.6.9	search with cache (only 1: intro A; only 1: intro H; only 1: destruct H; only 1: trivial).	0.106189012527	551
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0113849639893	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	13.0	search with cache (only 1: intros; only 1: tauto).	0.411111116409	323
Coq.Logic.Classical_Prop.not_imply_elim	40	4.1.5.0	search with cache (only 1: intros P H; only 1: destruct (classic P); only 1: auto; only 1: tauto).	0.588162899017	917
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: auto).	0.0142691135406	3
Coq.Logic.Classical_Prop.imply_to_or	40	1.0.0.0.2.6.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intros HA; only 1: assert (h : P 1); only 1: unfold P; only 1: intuition; only 1: tauto).	1.04916906357	1130
Coq.Logic.Classical_Prop.imply_to_and	40	2.0.0.2.1	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intro; only 1: tauto).	0.0378479957581	14
Coq.Logic.Classical_Prop.or_to_imply	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.0543670654297	49
Coq.Logic.Classical_Prop.not_and_or	40	0.0.2.3	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0289440155029	9
Coq.Logic.Classical_Prop.or_not_and	40	1	search with cache (only 1: tauto).	0.0427470207214	35
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0170960426331	1
Coq.Logic.Classical_Prop.and_not_or	40	3.0	search with cache (only 1: simple induction 1; only 1: tauto).	0.0879120826721	59
Coq.Logic.Classical_Prop.imply_and_or	40	5.0	search with cache (only 1: intros; only 1: tauto).	0.0990238189697	85
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0185060501099	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40	1.1.0.0.3.1.0.2.3.0.0	search with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: exact p2b; only 1: exact b2p; only 1: auto; only 1: exact h; only 1: auto; only 1: auto; only 1: auto).	0.819516897202	1969
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	1.0.0.0.0.0.0.4.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	0.0662739276886	283
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	6.13.13	search with cache (only 1: induction n; only 1: firstorder; only 1: firstorder).	2.18482303619	4095
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	0.0.0.0.0.13.0.0.0.0.0.0	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: destruct H as [x Hx]; only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: firstorder; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	11.6489100456	12020
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.1.0.3.1.0.0.3.6.5.6.1.0	search with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: intro x; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: auto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: intro x; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	6.19434094429	22597
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	9.0.0.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: firstorder).	0.244923114777	879
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	35.0	search with cache (only 1: intros; only 1: apply H).	4.50031995773	12322
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.1	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0339820384979	42
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	20.4665160179	22170
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.1.0	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0192551612854	5
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	8	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.09002804756	14
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	7.0.0.0	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	0.960399866104	107
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.5.0.0.0.0	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	0.519577980042	206
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	6	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.609354019165	28
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	5	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.602635860443	19
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.1.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0225028991699	6
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.0.2.4.2.0.1	search with cache (only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: trivial).	1.72643685341	2010
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	8.2	search with cache (only 1: intros P notall; only 1: firstorder).	0.153119087219	200
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	9.3	search with cache (only 1: intros P notall; only 1: firstorder).	0.436595916748	661
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.00716805458069	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	5.0.20.2	search with cache (only 1: intros (l, F); only 1: induction l as [| a l IH]; only 1: auto; only 1: firstorder).	2.65100812912	5556
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0140769481659	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: apply decide; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).	35.1814141273	12453
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.6.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00593185424805	10
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.2	search with cache (only 1: destruct 1; only 1: auto).	0.00663185119629	4
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00524210929871	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00520300865173	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.13.0.2	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.0787041187286	425
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00363111495972	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	search with cache (only 1: eauto using @functional_extensionality_dep).	0.00451183319092	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	5.0.0	search with cache (only 1: intros; only 1: intros p q; only 1: eauto using @functional_extensionality_dep).	0.0134801864624	12
Coq.Logic.HLevels.false_hprop	40	4.1	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00972819328308	7
Coq.Logic.HLevels.true_hprop	40
Coq.Logic.HLevels.not_hprop	40	2.0.3.0	search with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: contradiction).	0.0116748809814	12
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	5.0.26.1.5	search with cache (only 1: intros A Descr; only 1: intro Hx; only 1: apply epsilon_imp_constructive_indefinite_description; only 1: exact epsilon_statement; only 1: firstorder).	4.19892907143	8102
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.14	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0387761592865	169
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00849294662476	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	1.7	search with cache (only 1: destruct 1; only 1: trivial).	0.0165710449219	20
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.2.0.0.11.3.7	search with cache (only 1: intros A P; only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.874045848846	5211
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.00966000556946	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0088939666748	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.9.0.0.6.0	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.427400112152	770
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.7.1.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: reflexivity).	0.0598168373108	127
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.0.7.3.0.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: destruct H; only 1: reflexivity).	0.241406917572	696
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	6.3	search with cache (only 1: red; only 1: auto).	0.0236160755157	56
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	6.0.1	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.0147640705109	18
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	1.3.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: intro UIP_refl; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0214219093323	36
Coq.Logic.EqdepFacts.f_eq_dep	40	0.0.1	search with cache (only 1: intros UIP_refl y; only 1: destruct 1; only 1: auto).	0.0109038352966	4
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.5.2	search with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: trivial).	0.0111911296844	10
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	search with cache (only 1: intros * []; only 1: trivial).	0.00920081138611	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	2.0	search with cache (only 1: intros Ext A B Equiv; only 1: auto).	0.00770878791809	4
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	1	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.442759990692	2
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.2.0.0.0.0	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: auto; only 1: intro H1; only 1: elim H1).	0.00840783119202	8
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	0.5.0.0.3	search with cache (only 1: destruct 1; only 1: unfold not; only 1: auto; only 1: destruct 1; only 1: auto).	0.0625920295715	423
Coq.Logic.Decidable.dec_True	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.00422382354736	5
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00330591201782	2
Coq.Logic.Decidable.dec_or	40	1.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0168650150299	18
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.015506029129	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00705814361572	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.010870218277	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0160758495331	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00566697120667	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00657510757446	1
Coq.Logic.Decidable.not_and	40	1.3.0.1	search with cache (only 1: unfold decidable; only 1: intros; only 1: unfold not; only 1: tauto).	0.0740079879761	13
Coq.Logic.Decidable.not_imp	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0111310482025	3
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0080349445343	2
Coq.Logic.Decidable.not_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.027291059494	3
Coq.Logic.Decidable.not_true_iff	40	4	search with cache (only 1: tauto).	0.00521016120911	5
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00431299209595	1
Coq.Logic.Decidable.not_not_iff	40	1.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0109930038452	13
Coq.Logic.Decidable.contrapositive	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0095419883728	3
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0117950439453	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0111451148987	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0112390518188	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0131261348724	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0125589370728	2
Coq.Logic.Decidable.not_or_iff	40	6.0	search with cache (only 1: intros; only 1: tauto).	0.0101339817047	8
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.00697016716003	1
Coq.Logic.Decidable.not_imp_iff	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0187149047852	3
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.014997959137	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0.0.0.3	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0283470153809	8
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0781538486481	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	4.1.0.8	search with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: intuition_in).	1.90613603592	211
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0423970222473	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.825723171234	539
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0201599597931	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0219368934631	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0493779182434	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	13	search with cache (only 1: ok).	0.543523073196	162
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2.6	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.036052942276	10
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0227010250092	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.0.4.0.0	search with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.37918305397	9
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	10	search with cache (only 1: firstorder).	0.0261981487274	21
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.0.4.0.13.4.20	search with cache (only 1: intros n; only 1: intro H; only 1: destruct n; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: auto).	28.2646858692	47042
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	0.6.0	search with cache (only 1: unfold filter; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0691969394684	12
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0268359184265	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0292339324951	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.0.0.0.0.1.43	search with cache (only 1: destruct 1; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	6.51179909706	7865
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.2.0.2.1.0.0.6	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	7.33253908157	2769
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.1.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.068755865097	10
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.0.30.5	search with cache (only 1: invrb; only 1: destruct H; only 1: eauto; only 1: eauto).	1.70334386826	4542
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	2.0.9.0.0.9.8	search with cache (only 1: invrb; only 1: revert H; only 1: destruct 1; only 1: auto; only 1: revert H; only 1: destruct 1 as [l x r Hl Hr]; only 1: invrb).	2.37727594376	5576
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0577771663666	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	1.19.0.6	search with cache (only 1: red; only 1: unfold singleton; only 1: exists 1%positive; only 1: auto).	1.09958100319	1896
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.0.3.0.0.2.0.3	search with cache (only 1: intros; only 1: destruct t; only 1: invrb; only 1: descolor; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	1.26404285431	866
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.0.0.0.0.0.0.0.0.0.0.0.6	search with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: auto).	7.48518204689	2121
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	0.0.0.0.1.0.12	search with cache (only 1: induction s; only 1: now constructor; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	7.73119688034	6157
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.1.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: descolor; only 1: intuition; only 1: intuition).	0.0824699401855	14
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	search with cache (only 1: invrb; only 1: intuition).	0.245455980301	24
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0.0.4	search with cache (only 1: constructor; only 1: auto; only 1: simpl; only 1: auto).	0.0464379787445	8
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.1.0.1	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.113333940506	24
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	2.3.6.1	search with cache (only 1: destruct s; only 1: exists 0; only 1: now constructor; only 1: ok).	0.266489028931	206
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.6.1.2	search with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).	0.248080015182	167
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0477349758148	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.4.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.769844770432	365
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0704190731049	9
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.6.0.0.0.0	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	1.50380015373	635
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.2.0.0.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.064423084259	10
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0619378089905	3
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	29	search with cache (only 1: firstorder).	3.46356606483	1809
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	1.0.0.4.5	search with cache (only 1: intros a n; only 1: split; only 1: intros H; only 1: trivial; only 1: now destruct n).	2.50022006035	914
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	2.0	search with cache (only 1: intros n; only 1: now destruct n).	0.0286061763763	4
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	19	search with cache (only 1: firstorder).	0.116750001907	178
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	4.7.1	search with cache (only 1: fix even_spec 1; only 1: intro H; only 1: auto).	1.52475500107	278
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.7.0	search with cache (only 1: intros n; only 1: repeat red; only 1: intuition).	0.0513780117035	10
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	10.5.1.4	search with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	12.519644022	6451
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	3.5.4.8	search with cache (only 1: intro H; only 1: intros x y z; only 1: intuition subst; only 1: easy || now destruct y).	4.24383711815	1821
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	19	search with cache (only 1: destr_bool).	0.301571130753	336
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.1.0.0.8	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	1.75946807861	318
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40	0.0.6	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0633699893951	38
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0441620349884	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.4	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0478579998016	15
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0386729240417	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0390019416809	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0392150878906	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.2.0.0.0.0.1.2.10.2	search with cache (only 1: intros n m p; only 1: revert n m; only 1: induction p; only 1: intros [| ] [| ]; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: intros [| ] [| ]; only 1: ct; only 1: ct; only 1: ct; only 1: ct).	3.9197769165	2984
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	5.5	search with cache (only 1: intro n; only 1: now destruct n).	0.10457110405	67
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.1.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0495729446411	4
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	2.4.7.10	search with cache (only 1: unfold In; only 1: intros i; only 1: fix odd_spec 1; only 1: intuition).	21.5154268742	17191
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40	0.4.7	search with cache (only 1: intro; only 1: rewrite H; only 1: firstorder).	0.362087011337	142
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.154323101044	3
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.2.2	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.160531997681	7
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.1.0.11	search with cache (only 1: rewrite remove_spec; only 1: intros; only 1: elim H; only 1: auto with relations).	5.03220105171	1422
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.1	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.166857004166	12
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.158445835114	3
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.156164169312	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.155001878738	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.1.0	search with cache (only 1: intros E; only 1: rewrite inter_spec; only 1: auto).	0.169646024704	4
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.3	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.238078117371	27
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.163058996201	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.254665851593	13
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.178757190704	4
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.0.0	search with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.155690193176	4
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	3.0	search with cache (only 1: symmetry; only 1: intuition).	0.161026000977	5
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40	0.0.0.0.5.6.1.0.10.3	search with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: inversion H; only 1: inversion H; only 1: absurd (false = true); only 1: auto with bool; only 1: inversion H; only 1: apply <- mem_spec; only 1: auto).	7.54221200943	5461
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	5	search with cache (only 1: intuition).	0.155540943146	6
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	5	search with cache (only 1: intuition).	0.1559278965	6
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	8	search with cache (only 1: intuition).	0.163811206818	9
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	1	search with cache (only 1: intuition).	0.141721010208	2
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	0.4	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.262035131454	14
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	1.1.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.202126026154	8
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.4	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.304646968842	23
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	0.1.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.249962091446	22
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.167586088181	2
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.168198108673	3
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	1	search with cache (only 1: intuition).	0.143832206726	2
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.315737962723	9
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	0.0.0.1.0.3.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	6.40040302277	668
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	0.11.5	search with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hx; only 1: auto).	2.08650493622	383
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	6	search with cache (only 1: firstorder).	0.177796125412	16
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40	0.1.7.6.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite remove_spec; only 1: rewrite Hs, Hx  at 1; only 1: rewrite remove_spec; only 1: intuition).	16.2929501534	2735
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	8.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.34508395195	48
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	16	search with cache (only 1: firstorder).	0.682746887207	294
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	11.0.0.5	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	21.8976259232	2118
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	4	search with cache (only 1: firstorder).	0.342452049255	65
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.222862005234	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.209732055664	4
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.23023891449	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.205127954483	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.4.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.419339179993	12
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.189224004745	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.255320072174	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	0	search with cache (only 1: firstorder).	0.115499973297	1
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	1	search with cache (only 1: intuition).	0.125097036362	2
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	0	search with cache (only 1: fsetdec).	0.17271900177	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	0	search with cache (only 1: fsetdec).	0.126441001892	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	0	search with cache (only 1: fsetdec).	0.153720140457	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.155322790146	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.145677089691	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.128320932388	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.17316198349	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.161122083664	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.202897071838	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.153590917587	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.145483970642	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.1.1.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.258726119995	6
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.167067050934	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.152912855148	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	0	search with cache (only 1: fsetdec).	0.186899900436	1
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	1	search with cache (only 1: fsetdec).	0.300974845886	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	1.0	search with cache (only 1: intuition; only 1: fsetdec).	0.245556116104	3
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.262109041214	1
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.259409189224	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.263112068176	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.216252088547	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.419222831726	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	0	search with cache (only 1: fsetdec).	0.19916009903	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.204080820084	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.240298032761	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.223141908646	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.297940969467	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.207997083664	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.308248996735	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.450027942657	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.432033061981	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.139972925186	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.139308929443	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.168547153473	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.209952831268	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.169114112854	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.186857938766	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.182602882385	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	1	search with cache (only 1: fsetdec).	0.322226047516	11
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.195453882217	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.184130907059	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.214677810669	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.225088119507	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.277292966843	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.33109498024	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.346603155136	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.375143051147	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.266137123108	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.161489009857	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.158755779266	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.142921924591	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.143357038498	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.166324138641	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.172269105911	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.197558879852	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.1471118927	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.233962059021	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.225806951523	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.313759088516	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.275635957718	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	1.8	search with cache (only 1: red; only 1: fsetdec).	0.288666963577	23
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	0.1.2	search with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.329367876053	6
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.382812976837	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.556026220322	4
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.487673997879	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.737550973892	25
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	0.0.0.0.0.1.2	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.339252948761	25
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	7.0.3.0.1.2	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: auto with relations; only 1: intros; only 1: fsetdec).	9.80502104759	3059
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.4	search with cache (only 1: unfold Empty; only 1: intros; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite H3; only 1: clear H3; only 1: generalize H, H2; only 1: clear H H2; only 1: case l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (H e); only 1: elim (H2 e); only 1: intuition).	10.0872490406	4080
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	1.1.8.3	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).	0.630262851715	267
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40	0.3.0.0.0.2.6.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: fsetdec; only 1: auto with set).	16.792525053	5049
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.1.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.134793996811	4
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.1.13.1.7.4.13	search with cache (only 1: intuition; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	26.6221408844	28439
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.1.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.137674093246	7
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	0.8.1	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.697856903076	87
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	9.2	search with cache (only 1: intros; only 1: auto with set).	1.44370603561	583
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.8.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto).	1.1663980484	286
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.1.6.6	search with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with *; only 1: auto).	7.83926415443	2908
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	search with cache (only 1: intros; only 1: auto with *).	0.182538032532	21
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.129139900208	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.127479076385	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	13	search with cache (only 1: intuition).	0.138694047928	85
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.3	search with cache (only 1: constructor 2; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.064798116684	8
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.0	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0430359840393	3
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0770699977875	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff s x), (FM.mem_iff s y), (FM.In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.222986936569	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	9	search with cache (only 1: intuition).	0.211410045624	24
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.122806072235	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	2.0.1	search with cache (only 1: generalize (FM.mem_iff s x), (FM.elements_iff s x), (existsb_exists (FM.eqb x) (elements s)); only 1: rewrite InA_alt; only 1: intuition).	0.539050102234	37
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.24253487587	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.183621883392	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.236595153809	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set relations).	0.125769853592	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.15073800087	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.1.1	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.445374011993	21
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.131107091904	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	0.2.1.10	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	5.16668987274	858
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.14838385582	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	0.1.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.128826141357	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	1	search with cache (only 1: auto with set).	0.109562158585	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	7.0	search with cache (only 1: intros; only 1: auto with set).	0.220196962357	17
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40	14.1.0.2.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros; only 1: eauto with set).	25.4187431335	6384
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	3.0	search with cache (only 1: intros; only 1: auto with set).	0.115286827087	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	0	search with cache (only 1: auto with set).	0.113047122955	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0	search with cache (only 1: auto with set).	0.112415075302	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	0.0.10	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: rewrite remove_spec; only 1: intuition).	1.02293896675	107
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	0	search with cache (only 1: auto with set relations).	0.111494064331	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	2.0.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.127833843231	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	0.0.0.6	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.168479919434	19
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1	search with cache (only 1: auto with set).	0.108773946762	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.122480869293	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.108813047409	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.108858108521	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.112437009811	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.113285064697	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.112946987152	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	1	search with cache (only 1: auto with set).	0.111720085144	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.111390829086	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.214353084564	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: auto with set).	0.112893104553	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.11603307724	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.113023996353	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.112370967865	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	1	search with cache (only 1: auto with set).	0.111728191376	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.111927986145	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.112571001053	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	4.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.302468061447	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.113247871399	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.110978126526	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	2.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.202327013016	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0	search with cache (only 1: auto with set).	0.111524105072	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.115827798843	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.111618041992	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.112190961838	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	1	search with cache (only 1: auto with set).	0.112903118134	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.172451972961	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40	0.0.0.0.0.8.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: apply -> equal_spec; only 1: auto).	2.86838793755	555
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.166285991669	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.1.0.0.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	0.438699960709	88
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.110218048096	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.172533035278	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.170145988464	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.3.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with *; only 1: congruence; only 1: auto; only 1: auto).	1.29942703247	305
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0	search with cache (only 1: auto with set).	0.11398100853	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.12.5	search with cache (only 1: intros s s' H; only 1: f_equal; only 1: auto).	0.802765130997	250
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: auto with set).	0.169100999832	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.120167016983	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	0.0.0.0.0.0.1	search with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	0.256390810013	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40	0.0.1.22.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: auto with *; only 1: auto).	14.3691160679	7123
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.1	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.129449129105	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	search with cache (only 1: intuition).	0.459177017212	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.245142936707	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0859558582306	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.168764829636	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.184609889984	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.33979511261	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	2.0	search with cache (only 1: intro; only 1: intuition).	0.0910530090332	4
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.130089998245	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	3.5	search with cache (only 1: red; only 1: fsetdec).	0.229443073273	20
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.17108297348	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.228320837021	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.221009016037	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.150269985199	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.319065093994	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.359153985977	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	4.4.8	search with cache (only 1: vm_compute; only 1: intros a b c Ha Hb Hc; only 1: intuition).	2.78890419006	1101
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	2	search with cache (only 1: fsetdec).	0.215004920959	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	1	search with cache (only 1: fsetdec).	0.181785106659	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.138988018036	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	2.7.10	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: intuition).	1.81835198402	1960
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	0.7.9	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: intuition_in).	2.95323896408	2957
Coq.MSets.MSetGenTree.Props.isok_iff	40	3.2.2	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: firstorder).	0.0833029747009	42
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	1.3.1.0.0.6	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros R R' EQ a a' Ha WF; only 1: subst; only 1: eauto).	1.45264792442	916
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.1	search with cache (only 1: intros; only 1: intuition_in).	0.0366082191467	3
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	2	search with cache (only 1: intuition_in).	0.0957109928131	39
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.8.0	search with cache (only 1: intuition_in; only 1: repeat red; only 1: intuition_in).	0.0411930084229	46
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0115208625793	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.1.3	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.108684062958	19
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.8	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.279542922974	73
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1.0	search with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.0257420539856	4
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.2.1	search with cache (only 1: intros x y; only 1: intros; only 1: eauto).	0.0150139331818	8
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0112409591675	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.00882911682129	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	12.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	11.9934899807	7670
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0486710071564	25
Coq.MSets.MSetGenTree.Props.empty_spec	40	1.0.1	search with cache (only 1: red; only 1: intros; only 1: auto).	0.0119550228119	5
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	search with cache (only 1: auto).	0.00676798820496	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	1.1.0.2	search with cache (only 1: fix even_spec 1; only 1: induction s as [| c l IHl y r IHr]; only 1: auto; only 1: auto).	0.287569046021	95
Coq.MSets.MSetGenTree.Props.mem_spec	40	1.19	search with cache (only 1: fix even_spec 1; only 1: auto).	7.41944098473	6014
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.1.10	search with cache (only 1: functional induction max_elt s; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	20.3163621426	9133
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	1.26	search with cache (only 1: fix even_spec 1; only 1: auto).	6.98286294937	6103
Coq.MSets.MSetGenTree.Props.eq_equiv	40	35	search with cache (only 1: firstorder).	0.9103910923	1053
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	0.0.0.14.3	search with cache (only 1: intuition_in; only 1: rewrite elements_node; only 1: unfold elements; only 1: simpl; only 1: now rewrite !app_assoc_reverse).	4.14978313446	2886
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	3	search with cache (only 1: firstorder).	0.0281510353088	4
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	8	search with cache (only 1: firstorder).	0.0306539535522	11
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	9.5.4	search with cache (only 1: intros; only 1: intuition; only 1: firstorder).	1.136521101	916
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.024808883667	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1	search with cache (only 1: compute; only 1: auto with extcore).	0.0271210670471	3
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	4.2.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.0892000198364	19
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	2.07709598541	374
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.0.0.0.1.0.1.1.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	5.37830114365	1276
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40	1.7.4.3	search with cache (only 1: intro; only 1: unfold Same_set, Included, mkEns, In; only 1: fix gcd_divide 1; only 1: auto).	3.67536783218	1384
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	0.0.2.5	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: inversion_clear Hll'; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.81619811058	58
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	0.8	search with cache (only 1: fix even_spec 1; only 1: auto).	0.259814023972	58
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40	5.4	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.221132040024	112
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.1.0.0.0.1.0.0.0.1.5	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	15.5040328503	5602
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	0	search with cache (only 1: firstorder).	0.0232710838318	1
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	0.2	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.0237631797791	4
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.0.15.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	13.6540489197	242
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40	4.3	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.0963878631592	55
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	1.3	search with cache (only 1: intros; only 1: intuition).	0.132342100143	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	0.2	search with cache (only 1: intros; only 1: auto).	0.0209429264069	4
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0.0.0	search with cache (only 1: unfold elements; only 1: intros; only 1: auto).	0.0255048274994	3
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	0.0.0.0.0.0.2	search with cache (only 1: unfold Empty; only 1: destruct s; only 1: intros; only 1: intro; only 1: inv; only 1: intros; only 1: discriminate).	0.19243478775	83
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: auto).	0.019366979599	2
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40	0.12.2	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	1.83178901672	729
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	1	search with cache (only 1: tauto).	0.0185720920563	2
Coq.MSets.MSetList.MakeRaw.mem_spec	40	3.17	search with cache (only 1: fix odd_spec 1; only 1: auto).	4.16704201698	4874
Coq.MSets.MSetList.MakeRaw.add_inf	40	0.0.10	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.55436706543	218
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.0.0.0.0.1.0.1.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	29.7208549976	4322
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	3	search with cache (only 1: intuition).	0.0228300094604	4
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	0.5.0.0.12	search with cache (only 1: intro l; only 1: unfold singleton; only 1: intros; only 1: rewrite InA_cons, InA_nil; only 1: tauto).	2.62805080414	2592
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0963790416718	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0	search with cache (only 1: auto).	0.0209140777588	1
Coq.MSets.MSetList.MakeRaw.empty_spec	40	2.0.28.16	search with cache (only 1: intros H; only 1: rewrite InA_alt; only 1: intros (a', (Haa', Ha')); only 1: auto).	2.16463279724	3363
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40	5.2	search with cache (only 1: fix even_spec 1; only 1: auto).	0.0247149467468	11
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0.0.1	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0257530212402	4
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	3.3.1	search with cache (only 1: intuition; only 1: inv; only 1: auto).	0.031877040863	10
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0315210819244	3
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40	0.6.3.0.0.9	search with cache (only 1: induction s; only 1: intros; only 1: discriminate; only 1: intros; only 1: inversion H; only 1: auto).	9.81216096878	7741
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	0.0.2.1.4	search with cache (only 1: intros [| x s]; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: inversion 1).	0.868529081345	339
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.023118019104	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1.1	search with cache (only 1: intro s; only 1: auto).	0.0219678878784	4
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	9.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.222921133041	71
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0057201385498	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.2.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.00923204421997	10
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	1.0.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: auto with sets).	0.00723814964294	7
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	0.0.9.4.5	search with cache (only 1: intro H1; only 1: intros; only 1: right with y; only 1: assumption; only 1: left).	0.234813928604	693
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40	0.0.1.0.0.8.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.1	search with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: assumption; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).	15.0743119717	71523
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	1.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).	0.00714898109436	6
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.2.0.0.1.0.1.5.0.0.0.0.1.0	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	12.470318079	48702
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.1.0.0.3	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.00734615325928	9
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.1.0.5.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto with sets; only 1: case H; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).	1.04632902145	3100
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40	0.0.1.0.0.0.0.0.0.7.0.0.0.0.1.0.0.0.0.7.0	search with cache (only 1: split; only 1: induction 1; only 1: constructor 2 with x; only 1: auto; only 1: constructor 1; only 1: constructor 1; only 1: apply clos_rstn1_sym; only 1: auto; only 1: eapply clos_rstn1_trans; only 1: eauto; only 1: eauto; only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	19.9048538208	79355
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	0.2.8.1.2.5.2.5.11	search with cache (only 1: induction 1; only 1: split; only 1: red; only 1: eauto; only 1: red; only 1: intros y0 z D H0 H1; only 1: eauto; only 1: red; only 1: auto).	2.98015904427	20513
Coq.Relations.Relations.inverse_image_of_eq	40	0.1.0.2.2.6.0	search with cache (only 1: intros; only 1: repeat split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).	0.177786111832	827
Coq.Sets.Uniset.leb_refl	40	6	search with cache (only 1: destr_bool).	0.0114319324493	21
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00596904754639	4
Coq.Sets.Uniset.seq_refl	40	1	search with cache (only 1: auto).	0.00542998313904	2
Coq.Sets.Uniset.seq_trans	40
Coq.Sets.Uniset.seq_sym	40	0.1.0.1.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: simpl; only 1: intros; only 1: auto).	0.00758790969849	8
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.00630307197571	3
Coq.Sets.Uniset.union_empty_right	40	4.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	0.00921392440796	8
Coq.Sets.Uniset.union_comm	40	1.7.1.2	search with cache (only 1: unfold seq; only 1: simpl; only 1: intro H; only 1: intuition).	0.345530986786	722
Coq.Sets.Uniset.union_ass	40	1.5.0	search with cache (only 1: unfold seq; only 1: simpl; only 1: auto with bool).	0.0922219753265	119
Coq.Sets.Uniset.seq_left	40	0.6.1.0.1.1.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	2.49687886238	4325
Coq.Sets.Uniset.seq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0137729644775	9
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	0.0111100673676	10
Coq.Sets.Multiset.meq_refl	40	15	search with cache (only 1: split).	0.305849790573	294
Coq.Sets.Multiset.meq_trans	40	8.1	search with cache (only 1: unfold meq; only 1: congruence).	0.547200918198	186
Coq.Sets.Multiset.meq_sym	40	0.0.0.1.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: intros; only 1: rewrite H; only 1: auto).	0.0243589878082	6
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0182881355286	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0195870399475	4
Coq.Sets.Multiset.munion_comm	40	6.6.3.0	search with cache (only 1: unfold meq; only 1: simpl; only 1: intros a b n; only 1: intuition).	4.68947815895	4375
Coq.Sets.Multiset.munion_ass	40	5.1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto with arith).	0.459070920944	324
Coq.Sets.Multiset.meq_left	40	0.2.1.2.1.0.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: simpl; only 1: auto).	1.07703495026	762
Coq.Sets.Multiset.meq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0337889194489	9
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	0.4.7.2.0	search with cache (only 1: unfold meq; only 1: intros; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto).	21.6632111073	5166
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	0.0914309024811	10
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: auto with sets).	0.0155849456787	1
Coq.Sets.Integers.le_antisym	40	0.0	search with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.0186328887939	2
Coq.Sets.Integers.le_trans	40	3	search with cache (only 1: exact PeanoNat.Nat.le_trans).	0.037477016449	46
Coq.Sets.Integers.le_Order	40	1.0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).	0.317327976227	305
Coq.Sets.Integers.triv_nat	40	7	search with cache (only 1: split).	0.032320022583	30
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.11.4	search with cache (only 1: intros; only 1: intros x' x'' Hx' Hx''; only 1: auto).	0.100713014603	470
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	2.0.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.120786905289	37
Coq.Sets.Relations_1_facts.contains_is_preorder	40	7	search with cache (only 1: auto  10 with sets).	0.0251522064209	57
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	1.4.3.0.0.0.8.0.3	search with cache (only 1: split; only 1: auto  10 with sets; only 1: intro H'1; only 1: intros A B [H1 H2]; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros H'3 H'4; only 1: destruct 1; only 1: auto  10 with sets).	1.63007497787	5160
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.4.1.3	search with cache (only 1: unfold same_relation at 1; only 1: intros U R H'; only 1: destruct 1; only 1: auto  10 with sets).	0.131816864014	122
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0828249454498	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	6.0	search with cache (only 1: compute; only 1: intuition).	0.0245840549469	28
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	search with cache (only 1: intuition).	0.0042929649353	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto with sets).	0.00437688827515	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	2.0.0.0.0.0.4.1.7	search with cache (only 1: intros H'0 H'1; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.600955963135	4040
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.0.9.0.0.0.0.7.0.2	search with cache (only 1: red; only 1: intros U R; only 1: intro T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: intro h; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	2.34705209732	15618
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	0.0.0.0.0.0.4.0.0.2.7.4.0.0.1	search with cache (only 1: generalize Rstar_contains_R; only 1: intro T; only 1: unfold Symmetric, Complement; only 1: intros U R H'; only 1: intros; only 1: elim H; only 1: auto with sets; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	30.6971378326	154167
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.1.7.1.1.1.1.0.0	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	3.00193810463	14735
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.4.0.0.0.1.0.0.0.0	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	1.06578612328	3035
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	2.3.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0130279064178	8
Coq.Sets.Permut.comm_left	40
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	2.0.0.2.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: apply op_comm).	0.0264670848846	30
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.0.11.4.3	search with cache (only 1: intuition; only 1: unfold In in *; only 1: exists x; only 1: auto with sets; only 1: auto with sets).	1.98042488098	3492
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	0.2.4.9.1.1.3	search with cache (only 1: intro x; only 1: apply Extensionality_Ensembles; only 1: split; only 1: destruct 1 as [x0 H y H0]; only 1: red; only 1: elim H; only 1: auto with sets).	2.16856002808	2284
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	4.8.4.9	search with cache (only 1: intros A x y H'; only 1: elim H'; only 1: intro H'5; only 1: firstorder).	3.13803386688	7495
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	4.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.00743794441223	11
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40	10	search with cache (only 1: auto  10 with sets).	0.0818889141083	21
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00549101829529	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	1	search with cache (only 1: auto with sets).	0.00559902191162	2
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.4.0.0.0.0.0.0.0.5	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	31.895113945	3766
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40	1.2.0.0.0.2.0.4	search with cache (only 1: intro X; only 1: intro A; only 1: intros; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	2.28378891945	2311
Coq.Sets.Powerset.Intersection_maximal	40	1.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.00710105895996	5
Coq.Sets.Powerset.Union_increases_l	40	3.0.0.0.0	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.00688219070435	8
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00493001937866	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.0.0.1	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0104141235352	7
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.00725317001343	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	0.3.3	search with cache (only 1: intros X Y I NI; only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	0.257127046585	22
Coq.Sets.Classical_sets.Subtract_inv	40	1.15.0	search with cache (only 1: unfold Subtract at 1; only 1: simple induction 1; only 1: auto with sets).	0.784746170044	1180
Coq.Sets.Classical_sets.Included_Strict_Included	40	0.29.25	search with cache (only 1: intros A NI; only 1: compute; only 1: tauto).	21.0241310596	21443
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	1.0.1.0.0.0	search with cache (only 1: intro; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros; only 1: auto with sets).	0.026358127594	8
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	1.3.2.1.3.0.0.2	search with cache (only 1: generalize Rstar_contains_Rplus; only 1: intro T; only 1: red in T; only 1: intros U R; only 1: intros x1 y0 H'1; only 1: red; only 1: exists y0; only 1: auto with sets).	2.79224300385	10540
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.8.0.2	search with cache (only 1: intros A B x H' H'0; only 1: red; only 1: elim H'0; only 1: auto with sets).	0.922613143921	809
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.2.1.0.0	search with cache (only 1: intros A B x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0783720016479	22
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40	0.0.0.0.1.0.0.0.0.4.0	search with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	5.27806997299	3314
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.1.1.0.1.2.0.0.0.0.5	search with cache (only 1: unfold Add at 1; only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	17.56133008	21368
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.00880098342896	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	4.22.2	search with cache (only 1: intros; only 1: unfold Add at 1; only 1: auto  6 with sets).	0.50820183754	1258
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.00825810432434	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.00822401046753	1
Coq.Sets.Powerset_facts.Union_associative	40	18.2	search with cache (only 1: intros B C H'; only 1: auto  10 with sets).	0.606993913651	676
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.00923490524292	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0103681087494	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	1.0.0.0.1.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.834659099579	1917
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	5.60392594337	7638
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.1.0.0.0.1.0.0.3.4.8	search with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.953330039978	2122
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.1.3.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	7.2534930706	9649
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	8.0.10.0.2.0	search with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: auto  9 with sets).	3.73252105713	6409
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.3.0.4.5.1.1.7.7.4.3	search with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: red; only 1: elim H'0; only 1: auto with sets; only 1: destruct 1; only 1: intuition; only 1: auto with sets).	34.4898378849	75138
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	2.2.0.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: destruct 1; only 1: intros x2 H'1; only 1: auto with sets).	0.0903580188751	16
Coq.Sets.Powerset_facts.incl_add	40	0.7	search with cache (only 1: unfold Add; only 1: auto with sets).	0.141690969467	71
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	2.5	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.0740427970886	36
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	2	search with cache (only 1: auto with sets).	0.00542712211609	3
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.3.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.011833190918	23
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.00929403305054	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.2.7.0.1.6.1.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: exfalso; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	1.702064991	5317
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0147440433502	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.1.0.2.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: intuition; only 1: intuition).	0.0934209823608	82
Coq.Sets.Constructive_sets.Extension	40	0.5.0.5.1.4.4	search with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: split; only 1: intro H1; only 1: auto; only 1: intro H1; only 1: auto).	0.413743019104	3079
Coq.Sets.Constructive_sets.Noone_in_empty	40	0.3	search with cache (only 1: intro A; only 1: destruct 1).	0.00802493095398	19
Coq.Sets.Constructive_sets.Included_Empty	40	0	search with cache (only 1: destruct 1).	0.00411009788513	1
Coq.Sets.Constructive_sets.Add_intro1	40	1.10.2.1	search with cache (only 1: red; only 1: intros x H; only 1: left; only 1: trivial).	0.714419841766	5068
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00456809997559	2
Coq.Sets.Constructive_sets.Inhabited_add	40	7.11.5.0	search with cache (only 1: unfold Add at 1; only 1: intros; only 1: exists x; only 1: auto with sets).	0.393696069717	3902
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	0.0.0	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: trivial).	0.00957298278809	3
Coq.Sets.Constructive_sets.Singleton_intro	40	0.2.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.00522422790527	5
Coq.Sets.Constructive_sets.Union_inv	40	0.4.0.3	search with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto using Noone_in_empty with sets).	0.103886127472	110
Coq.Sets.Constructive_sets.Add_inv	40	3.15.0.0.1.0	search with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	1.33611989021	6271
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.00492095947266	3
Coq.Sets.Constructive_sets.Couple_inv	40	0.0.0.1	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.0077338218689	5
Coq.Sets.Constructive_sets.Setminus_intro	40	0.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.00502395629883	2
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.00461483001709	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	5.0.5	search with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.0271229743958	180
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.0.14.4	search with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.640604019165	1448
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	0.1.4	search with cache (only 1: induction 1; only 1: auto; only 1: apply Inhabited_add).	0.0177938938141	30