coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	14.577732	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	14.741542	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	14.739593	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	14.743958	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	14.862245	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	15.029700	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	14.902780	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	14.976326	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	14.976852	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	15.024419	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	16.292606	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	2.817910	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.3.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	17.719494	40
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	3.029566	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	120	0.2.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	17.941302	17
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	120	0.0.0.0.2.2	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	18.027287	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	120	0.5.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	18.153584	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.2	synth with cache (only 1: destruct 1; only 1: reflexivity).	3.692656	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.824658	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.0.1.0.0.1	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: destruct H; only 1: trivial).	6.260293	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	120	0.0.1.0.0.0.0.0.3.1	synth with cache (only 1: intros; only 1: destruct a; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: assumption; only 1: destruct b; only 1: split; only 1: assumption).	21.187254	41
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	120	0.0.0.0.1.1	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.417726	14
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	120	0.1.11.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: auto; only 1: auto).	22.091734	119
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	120	1.0.7.1.1	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct b1; only 1: auto; only 1: trivial).	22.146605	52
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	120	1.3	synth with cache (only 1: destruct 1; only 1: trivial).	22.254019	81
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	120	3.0.0.2.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	23.260936	86
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	6.121157	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	24.442429	80
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	3.378551	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	120	0.0.25.0	synth with cache (only 1: intros; only 1: pattern p; only 1: destruct p; only 1: reflexivity).	7.878810	164
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	26.231987	151
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	120	2.1.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply H; only 1: assumption; only 1: intros ?; only 1: destruct H0; only 1: intros ?; only 1: destruct H; only 1: auto).	27.526515	78
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	120	1.0	synth with cache (only 1: unfold all; only 1: auto).	3.210522	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.14	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	27.819356	295
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	120	0.1	synth with cache (only 1: unfold all; only 1: auto).	2.894989	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	120	0.2.6.0.0.0.1.6.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	29.877917	124
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	3.040159	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	3.042985	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	3.175519	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	5.445037	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	3.190637	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	120	0.11.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim identity_sym with (1 := H0); only 1: trivial).	12.523624	73
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	120	0.8.24.2	synth with cache (only 1: intros; only 1: pattern eq_trans; only 1: destruct H; only 1: reflexivity).	8.842685	285
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	11.941586	44
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.1.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	5.632884	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.13.13	synth with cache (only 1: destruct q' in |- * at 1 2; only 1: destruct p'; only 1: reflexivity).	21.576470	592
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	120	12.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	8.179252	140
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	120	0.0.0.5.0.0.0.0.0.0.1.0.0.0.0.5	synth with cache (only 1: destruct 1; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	46.992360	495
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	120	0.4.0.3.10.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct b; only 1: destruct H in X; only 1: assumption; only 1: destruct H in X; only 1: assumption).	29.659730	641
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	120	0.0.1.0.4.0.0.0.2.0.4.0.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	48.391972	475
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.041220	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	1.3.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact H).	20.846612	282
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.639459	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	1.5.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact H).	25.198297	569
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.483399	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	3.30.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: exact X).	25.024389	488
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	1.6.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact H).	25.907944	604
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.778686	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	120	3.4.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact X).	25.555734	514
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: reflexivity).	2.510244	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	120	0.1.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.642197	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	120	0.4.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.505436	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	120	0.1.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.464869	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	120	1.0.0.2.0.0.0.7.0.0.0.0.2.2.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	79.250260	533
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.12.0.14	synth with cache (only 1: destruct q in |- * at 1 2; only 1: destruct 1; only 1: subst; only 1: reflexivity).	88.074245	3470
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	120	10.33.0	synth with cache (only 1: intros; only 1: apply @f_equal_dep2; only 1: auto).	7.345267	296
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	2.650311	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	120	11.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: auto).	16.915854	165
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	120	0.25.0	synth with cache (only 1: intros; only 1: rewrite e; only 1: reflexivity).	5.278448	121
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	4.823720	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	3.174970	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	120	10.13.12.0	synth with cache (only 1: intros; only 1: destruct e' in |- * at 1 2; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	23.875164	560
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	2.899223	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	120	0.5.6	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	5.956834	39
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	3.24.0	synth with cache (only 1: intros; only 1: destruct r; only 1: apply @eq_refl).	25.292078	408
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	120	0.18.0.0.0.3	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction IHn; only 1: trivial).	19.934243	254
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	120	6.3.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	6.527990	57
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	120	0.0.4.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	12.921628	129
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	10.430951	47
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	120	0.4.4	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	4.295268	29
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	120	0.5.5	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	5.169664	36
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	120	0.5.8	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	6.057199	41
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	14.528196	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
