File "./theories/PFsection13.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection13.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection13.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection13.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection13.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection13.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection13.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection13.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection14.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection14.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection14.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection14.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection14.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection14.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection14.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection14.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection11.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection11.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection11.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection11.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection11.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection11.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection11.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection11.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection12.v", line 6, characters 0-89:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection12.v", line 6, characters 0-89:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection12.v", line 6, characters 0-89:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection12.v", line 6, characters 0-89:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection12.v", line 6, characters 0-89:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection12.v", line 6, characters 0-89:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection12.v", line 6, characters 0-89:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection12.v", line 6, characters 0-89:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection11.v", line 113, characters 31-63:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection11.v", line 114, characters 30-50:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection11.v", line 133, characters 34-57:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection11.v", line 142, characters 30-58:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection11.v", line 155, characters 0-74:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection11.v", line 172, characters 35-75:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/Driver/CompConfig.v", line 377, characters 10-50:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct config as [[[[? ?] ?] ?] ?]; simpl
try intros until config;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [_tmp_tactician2 ?];
      [ ..
      | destruct _tmp_tactician2 as [_tmp_tactician4 ?];
         [ .. | destruct _tmp_tactician4 as [? ?]; [ .. | idtac ] ] ] ]);
 simpl

File "./theories/PFsection12.v", line 68, characters 0-53:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection13.v", line 228, characters 20-31:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 228, characters 20-31:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 228, characters 20-31:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 228, characters 20-31:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 228, characters 20-31:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 228, characters 20-31:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 228, characters 20-31:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection10.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection10.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection10.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection10.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection10.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection10.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection10.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection10.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection9.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection9.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection9.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection9.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection9.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection9.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection9.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection9.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./compiler/core/Driver/CompDriver.v", line 2174, characters 6-356:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_js_ast) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2215, characters 6-353:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_wasm_ast) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2237, characters 6-380:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := s; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := constants_config_of_tdbindings t; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_dnnrc_typed) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2258, characters 6-388:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := constants_config_of_tdbindings t; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_dnnrc) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2278, characters 6-295:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_imp_ejson) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2290, characters 6-353:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := o; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_imp_ejson) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2302, characters 6-358:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_imp_ejson) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2321, characters 6-358:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_imp_data) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2340, characters 6-321:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := existT _ L_nnrs_imp o :: nil |}) (lang := L_nnrs_imp) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2352, characters 6-337:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := s; comp_qname_lowercase := s; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_nnrs_imp) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2371, characters 6-353:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_nnrs) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2390, characters 6-270:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_nnrs_core) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2471, characters 6-331:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := existT _ L_nraenv o :: nil |}) (lang := L_nraenv) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2481, characters 6-385:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := one_constant_config_of_avoid_list l; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_nnrc_core) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2494, characters 6-343:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := one_constant_config_of_avoid_list l; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_nnrc_core) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2506, characters 6-327:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := existT _ L_nnrc o :: nil |}) (lang := L_nnrc) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2516, characters 6-375:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := one_constant_config_of_avoid_list l; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_nnrc) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2531, characters 6-325:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := v; comp_constants := constants_config_of_tdbindings x; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_nnrc) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2545, characters 6-373:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := constants_config_of_tdbindings x; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_nnrc) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2557, characters 6-334:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := Some s; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := s0; comp_optim_config := nil |}) (lang := L_nnrc) Please report.
File "./compiler/core/Driver/CompDriver.v", line 2567, characters 6-344:
Warning:
Tactician detected a printing/parsing problem for the following tactic. eapply is_postfix_plus_one with (config := {| comp_qname := ""; comp_qname_lowercase := ""; comp_class_name := None; comp_mr_vinit := ""; comp_constants := nil; comp_java_imports := ""; comp_optim_config := nil |}) (lang := L_nnrcmr) Please report.
File "./theories/stripped_odd_order_theorem.v", line 152, characters 2-73:
Warning:
Tactician detected a printing/parsing problem for the following tactic. have Ngx ?:(* typeof *) (fun x => fun _ : G x => _) : forall x, forall _ : G x, natN (g x) = rG x by rewrite inordK ?Dn ?ub_rG ?NnatK Please report.
File "./theories/PFsection8.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection8.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection8.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection8.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection8.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection8.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection8.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection8.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection12.v", line 866, characters 2-79:
Warning:
Tactician detected a printing/parsing problem for the following tactic. by rewrite dimV in  (rE   ffulE; apply : charf'_GL2_abelian (mFT_odd E) ffulE _  Please report.
File "./theories/PFsection12.v", line 894, characters 19-30:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection12.v", line 894, characters 19-30:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection12.v", line 894, characters 19-30:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection12.v", line 894, characters 19-30:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection12.v", line 894, characters 19-30:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection12.v", line 894, characters 19-30:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection12.v", line 894, characters 19-30:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 398, characters 8-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 402, characters 8-31:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 413, characters 8-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 417, characters 8-31:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 430, characters 8-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 434, characters 8-31:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 480, characters 14-36:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 498, characters 8-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 502, characters 8-31:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 549, characters 14-36:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 666, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 704, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 726, characters 14-36:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 815, characters 12-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 836, characters 12-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 881, characters 18-40:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 894, characters 24-46:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 963, characters 12-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 977, characters 12-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 993, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/NNRCtoNNRS.v", line 1035, characters 8-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./theories/PFsection9.v", line 110, characters 7-50:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 268, characters 7-43:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 305, characters 0-56:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 312, characters 0-78:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 374, characters 7-57:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 377, characters 7-56:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 425, characters 0-78:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 442, characters 0-68:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 473, characters 0-53:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 482, characters 7-45:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 495, characters 7-44:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection16.v", line 1034, characters 0-70:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection10.v", line 92, characters 34-64:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection10.v", line 104, characters 29-58:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection10.v", line 713, characters 2-80:
Warning:
Tactician detected a printing/parsing problem for the following tactic. rewrite defA in  (ddAM   cohS_A * Please report.
File "./theories/PFsection8.v", line 699, characters 0-71:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection14.v", line 574, characters 17-28:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection14.v", line 574, characters 17-28:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection14.v", line 574, characters 17-28:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection14.v", line 574, characters 17-28:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection14.v", line 574, characters 17-28:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection14.v", line 574, characters 17-28:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection14.v", line 574, characters 17-28:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./compiler/core/Driver/CompDriver.v", line 2766, characters 4-34:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/PFsection13.v", line 1357, characters 59-70:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 1357, characters 59-70:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 1357, characters 59-70:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 1357, characters 59-70:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 1357, characters 59-70:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 1357, characters 59-70:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./theories/PFsection13.v", line 1357, characters 59-70:
Warning: Notation card_matrix is deprecated since mathcomp 1.13.0.
Use card_mx instead. [deprecated-syntactic-definition,deprecated]
File "./compiler/core/Translation/Typing/TcNNRCtoCAMP.v", line 468, characters 6-71:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
repeat rewrite andb_true_iff in H0; destruct H0 as [[[[? ?] ?] ?] ?]
repeat rewrite andb_true_iff in H0;
 (try intros until H0;
   (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
     [ ..
     | destruct _tmp_tactician0 as [_tmp_tactician2 ?];
        [ ..
        | destruct _tmp_tactician2 as [_tmp_tactician4 ?];
           [ .. | destruct _tmp_tactician4 as [? ?]; [ .. | idtac ] ] ] ]))

File "./compiler/core/NNRC/Optim/TNNRCRewrite.v", line 508, characters 4-78:
Warning:
Tactician detected a printing/parsing problem for the following tactic. transitivity (let $x := e1 in unshadow sep renamer (nnrc_free_vars e1) e2) Please report.
File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1541, characters 10-117:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
case_eq (nnrs_stmt_eval h c ((v, Some d) :: σ) ψc ψd s); simpl; trivial;
 intros [[? ?] ?] eqq
case_eq (nnrs_stmt_eval h c ((v, Some d) :: σ) ψc ψd s); simpl; trivial;
 (intros _tmp_tactician0;
   (destruct _tmp_tactician0 as [_tmp_tactician2 ?];
     [ .. | destruct _tmp_tactician2 as [? ?]; [ .. | intros eqq; idtac ] ]))

File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1551, characters 10-98:
Warning: Tactician's tactical decomposition crashed. Please report.
File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1558, characters 10-115:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
case_eq (nnrs_stmt_eval h c σ ψc ((v, None) :: ψd) s1); simpl; trivial;
 intros [[? ?] ?] eqq
case_eq (nnrs_stmt_eval h c σ ψc ((v, None) :: ψd) s1); simpl; trivial;
 (intros _tmp_tactician0;
   (destruct _tmp_tactician0 as [_tmp_tactician2 ?];
     [ .. | destruct _tmp_tactician2 as [? ?]; [ .. | intros eqq; idtac ] ]))

File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1565, characters 10-109:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
case_eq (nnrs_stmt_eval h c ((v, o) :: p) m m0 s2); simpl; trivial;
 intros [[? ?] ?] eqq2
case_eq (nnrs_stmt_eval h c ((v, o) :: p) m m0 s2); simpl; trivial;
 (intros _tmp_tactician0;
   (destruct _tmp_tactician0 as [_tmp_tactician2 ?];
     [ .. | destruct _tmp_tactician2 as [? ?]; [ .. | intros eqq2; idtac ] ]))

File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1575, characters 10-97:
Warning: Tactician's tactical decomposition crashed. Please report.
File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1582, characters 10-114:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
case_eq (nnrs_stmt_eval h c σ ((v, nil) :: ψc) ψd s1); simpl; trivial;
 intros [[? ?] ?] eqq
case_eq (nnrs_stmt_eval h c σ ((v, nil) :: ψc) ψd s1); simpl; trivial;
 (intros _tmp_tactician0;
   (destruct _tmp_tactician0 as [_tmp_tactician2 ?];
     [ .. | destruct _tmp_tactician2 as [? ?]; [ .. | intros eqq; idtac ] ]))

File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1589, characters 10-122:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
case_eq (nnrs_stmt_eval h c ((v, Some (dcoll l)) :: p) m m0 s2); simpl;
 trivial; intros [[? ?] ?] eqq2
case_eq (nnrs_stmt_eval h c ((v, Some (dcoll l)) :: p) m m0 s2); simpl;
 trivial;
 (intros _tmp_tactician0;
   (destruct _tmp_tactician0 as [_tmp_tactician2 ?];
     [ .. | destruct _tmp_tactician2 as [? ?]; [ .. | intros eqq2; idtac ] ]))

File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1609, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1617, characters 10-111:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
case_eq (nnrs_stmt_eval h c ((v, Some a) :: σ) ψc ψd s); trivial;
 intros [[? ?] ?] eqq2
case_eq (nnrs_stmt_eval h c ((v, Some a) :: σ) ψc ψd s); trivial;
 (intros _tmp_tactician0;
   (destruct _tmp_tactician0 as [_tmp_tactician2 ?];
     [ .. | destruct _tmp_tactician2 as [? ?]; [ .. | intros eqq2; idtac ] ]))

File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1636, characters 12-122:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
case_eq (nnrs_stmt_eval h c ((v, Some d) :: σ) ψc ψd s1); simpl; trivial;
 intros [[? ?] ?] eqq
case_eq (nnrs_stmt_eval h c ((v, Some d) :: σ) ψc ψd s1); simpl; trivial;
 (intros _tmp_tactician0;
   (destruct _tmp_tactician0 as [_tmp_tactician2 ?];
     [ .. | destruct _tmp_tactician2 as [? ?]; [ .. | intros eqq; idtac ] ]))

File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1646, characters 12-123:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
case_eq (nnrs_stmt_eval h c ((v0, Some d) :: σ) ψc ψd s2); simpl; trivial;
 intros [[? ?] ?] eqq
case_eq (nnrs_stmt_eval h c ((v0, Some d) :: σ) ψc ψd s2); simpl; trivial;
 (intros _tmp_tactician0;
   (destruct _tmp_tactician0 as [_tmp_tactician2 ?];
     [ .. | destruct _tmp_tactician2 as [? ?]; [ .. | intros eqq; idtac ] ]))

File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1655, characters 6-94:
Warning: Benchmarking error: Forked process exited with signal -11
File "./compiler/core/NNRS/Lang/NNRSCrossShadow.v", line 1666, characters 8-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./theories/BGsection14.v", line 12, characters 0-54:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection14.v", line 12, characters 0-54:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection14.v", line 12, characters 0-54:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection14.v", line 12, characters 0-54:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection14.v", line 12, characters 0-54:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection14.v", line 12, characters 0-54:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection14.v", line 12, characters 0-54:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/BGsection14.v", line 12, characters 0-54:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./compiler/core/NNRS/Typing/TNNRSRename.v", line 568, characters 4-248:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/BGsection14.v", line 232, characters 0-27:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection14.v", line 1095, characters 0-79:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/NRAEnv/Optim/TNRAEnvRewrite.v", line 1915, characters 4-60:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/NRAEnv/Optim/TNRAEnvRewrite.v", line 1915, characters 4-60:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/PFsection7.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection7.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection7.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection7.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection7.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection7.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection7.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection7.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./compiler/core/NNRSimp/Optim/TNNRSimpUnflatten.v", line 839, characters 6-115:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/PFsection7.v", line 552, characters 7-63:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection7.v", line 822, characters 0-62:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/NRAEnv/Optim/TNRAEnvRewrite.v", line 3137, characters 4-23:
Warning: Benchmarking error: Forked process exited with code 1
File "./compiler/core/NNRS/Lang/NNRSRename.v", line 1257, characters 16-276:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
repeat match_option_in ltac:(eqs1); try contradiction;
 repeat match_option_in ltac:(eqs2); destruct p as [[? ?] ?];
 try contradiction; destruct p0 as [[? ?] ?]; try congruence
repeat match_option_in ltac:(eqs1); try contradiction;
 repeat match_option_in ltac:(eqs2);
 (try intros until p;
   (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
     [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ]));
 try contradiction;
 (try intros until p0;
   (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
     [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ]));
 try congruence

File "./compiler/core/Compiler/Enhanced/EnhancedTyping.v", line 298, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Compiler/Enhanced/EnhancedTyping.v", line 298, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/NNRS/Typing/TNNRS.v", line 252, characters 4-29:
Warning:
Benchmarking error: Anomaly
                    "Unable to handle arbitrary u+k <= v constraints."
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/NNRS/Typing/TNNRS.v", line 268, characters 6-28:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 273, characters 6-28:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 278, characters 6-28:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 284, characters 6-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 290, characters 6-28:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 295, characters 6-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 315, characters 8-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRC/Optim/NNRCRewriteUtil.v", line 280, characters 6-35:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct H1 as [_ [[? [? ?]] ?]]
try intros until H1;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician2 as [_tmp_tactician4 ?];
      [ ..
      | destruct _tmp_tactician4 as [? _tmp_tactician6];
         [ .. | destruct _tmp_tactician6 as [? ?]; [ .. | idtac ] ] ];
      try clear _tmp_tactician0 ])

File "./theories/PFsection6.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection6.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection6.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection6.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection6.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection6.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection6.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection6.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection6.v", line 97, characters 0-53:
Warning:
Tactician detected a printing/parsing problem for the following tactic. elim : n  => [|n IHn] in  (S2   S1   ccsS1S   cohA * => lb_n Please report.
File "./compiler/core/NNRC/Optim/NNRCRewriteUtil.v", line 537, characters 6-31:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct disj as [[? ?] ?]
try intros until disj;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRC/Optim/NNRCRewriteUtil.v", line 549, characters 6-31:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct disj as [[? ?] ?]
try intros until disj;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRC/Optim/NNRCRewriteUtil.v", line 558, characters 6-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct disj as [[? [? ?]] ?]
try intros until disj;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [? _tmp_tactician2];
      [ .. | destruct _tmp_tactician2 as [? ?]; [ .. | idtac ] ] ])

File "./theories/PFsection6.v", line 1283, characters 0-57:
Warning:
Tactician detected a printing/parsing problem for the following tactic. elim : n  => // [|n IHn] in  (S2   S1   ccsS1S   cohXY * => lb_n Please report.
File "./compiler/core/NNRS/Typing/TNNRS.v", line 370, characters 6-28:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 383, characters 6-28:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 388, characters 6-28:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 392, characters 6-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 414, characters 6-28:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 418, characters 6-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Typing/TNNRS.v", line 732, characters 4-26:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRSimp/Typing/TNNRSimp.v", line 1054, characters 4-29:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/BGsection11.v", line 55, characters 35-49:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection5.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection5.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection5.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection5.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection5.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection5.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection5.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection5.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./compiler/core/NNRSimp/Typing/TNNRSimp.v", line 1332, characters 4-187:
Warning: Benchmarking error: Forked process exited with code 1
File "./compiler/core/Data/OperatorsTyping/TOperatorsInfer.v", line 209, characters 6-163:
Warning:
Benchmarking error: Anomaly
                    "Unable to handle arbitrary u+k <= v constraints."
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/Data/OperatorsTyping/TOperatorsInfer.v", line 209, characters 6-163:
Warning:
Tactician detected a printing/parsing problem for the following tactic. binary_op_cases case_eq b Case; intros; simpl in *; destructer; try congruence; try (solve [ erewrite Rec_pr_irrel; reflexivity ]); eauto  3 with qcert Please report.
File "./compiler/core/NNRC/Lang/NNRCStratify.v", line 449, characters 6-22:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/BGsection10.v", line 96, characters 0-68:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection10.v", line 118, characters 7-60:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection5.v", line 264, characters 0-11:
Warning: Tactic could not be properly discharged: by
move  =>Sphi Spsi; apply : zchar_on (sub_seqInd_zchar Sphi Spsi) 
File "./theories/PFsection5.v", line 444, characters 0-16:
Warning: Tactic could not be properly discharged: by
move  =>phi Sphi; rewrite mem_zchar ?(seqInd_free calX)
File "./theories/PFsection5.v", line 444, characters 0-16:
Warning: Tactic could not be properly discharged: by
move  =>Sphi Spsi; apply : zchar_on (sub_seqInd_zchar Sphi Spsi) 
File "./theories/PFsection5.v", line 636, characters 0-19:
Warning: Tactic could not be properly discharged: have sS_ZS1:
{subset S <= 'Z[S1]} ; last  apply : (subgen_coherent sS_ZS1) 
File "./compiler/core/Data/OperatorsTyping/TOperatorsInfer.v", line 499, characters 6-231:
Warning:
Tactician detected a printing/parsing problem for the following tactic. unary_op_cases case_eq u Case Please report.
File "./compiler/core/Data/OperatorsTyping/TUnaryOperators.v", line 243, characters 4-28:
Warning: Benchmarking error: Anomaly "Variable name b could not be resolved"
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/NNRSimp/Optim/NNRSimpUnflatten.v", line 480, characters 8-126:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/PFsection5.v", line 1606, characters 0-9:
Warning: Tactic could not be properly discharged: have sS_ZS1:
{subset S <= 'Z[S1]} ; last  apply : (subgen_coherent sS_ZS1) 
File "./theories/PFsection4.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection4.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection4.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection4.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection4.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection4.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection4.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection4.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./compiler/core/Translation/Lang/cNNRCtoCAMP.v", line 1135, characters 8-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct H as [[? ?] ?]
try intros until H;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/cNNRCtoCAMP.v", line 1203, characters 8-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct H as [[? ?] ?]
try intros until H;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/Translation/Lang/cNNRCtoCAMP.v", line 1204, characters 8-40:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct H1 as [[[? ?] ?] [[? ?] ?]]
try intros until H1;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [_tmp_tactician4 ?];
      [ ..
      | destruct _tmp_tactician4 as [? ?];
         [ ..
         | destruct _tmp_tactician2 as [_tmp_tactician6 ?];
            [ .. | destruct _tmp_tactician6 as [? ?]; [ .. | idtac ] ] ] ] ])

File "./theories/PFsection4.v", line 285, characters 0-74:
Warning: Benchmarking error: Duplicate assumption H
File "./theories/PFsection4.v", line 355, characters 0-73:
Warning:
Tactician detected a printing/parsing problem for the following tactic. pose  muW  k := let 'ij := inv_dprod_Iirr defW k in d ij.2 *: mu ij.1 ij.2 Please report.
File "./compiler/core/NNRSimp/Lang/NNRSimpEval.v", line 969, characters 0-16:
Warning:
Tactic could not be properly discharged: let rec fuse_tt :=
                                          let rec fuse_t :=
                                           let rec pcong := solve
                                           [ repeat
                                              (match goal with
                                               | H:_ = _
                                                 |- _ =>
                                                 rewrite H in *; clear H
                                               end; 
                                                try tauto) ]
                                           in
                                           fun stac =>
                                             repeat
                                              progress
                                               (repeat
                                                 rewrite in_app_iff in *;
                                                 repeat
                                                 match goal with
                                                 | 
                                                 H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                                 | 
                                                 H:_ \/ _ -> False
                                                 |- _ => apply not_or in H
                                                 | 
                                                 H:_ /\ _ 
                                                 |- _ => destruct H
                                                 | 
                                                 H:_ * _ |- _ => destruct H
                                                 | 
                                                 H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                                 | 
                                                 H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                                 | 
                                                 H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                                 | 
                                                 H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                                 | 
                                                 H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                                 | 
                                                 H:~ In _ (remove _ _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                                 | 
                                                 H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 try intuition congruence;
                                                 pcong);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                                 | 
                                                 H:
                                                 nnrs_imp_stmt_eval _ _ _ ?p1 =
                                                 ?p2
                                                 |- _ =>
                                                 apply
                                                 nnrs_imp_stmt_eval_domain_stack
                                                 in H
                                                 | 
                                                 H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x1 :: ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H [x1] (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                                 end; 
                                                 simpl in *; trivial; 
                                                 intros; 
                                                 try subst; 
                                                 try contradiction;
                                                 try (solve
                                                 [ congruence
                                                 | 
                                                 f_equal; congruence ]))
                                          in
                                          fuse_t
                                           ltac:(try tauto; try congruence)
                                         in
                                         fuse_tt
File "./compiler/core/NNRSimp/Lang/NNRSimpEval.v", line 969, characters 0-16:
Warning:
Tactic could not be properly discharged: let rec fuse_tt :=
                                          let rec fuse_t :=
                                           let rec pcong := solve
                                           [ repeat
                                              (match goal with
                                               | H:_ = _
                                                 |- _ =>
                                                 rewrite H in *; clear H
                                               end; 
                                                try tauto) ]
                                           in
                                           fun stac =>
                                             repeat
                                              progress
                                               (repeat
                                                 rewrite in_app_iff in *;
                                                 repeat
                                                 match goal with
                                                 | 
                                                 H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                                 | 
                                                 H:_ \/ _ -> False
                                                 |- _ => apply not_or in H
                                                 | 
                                                 H:_ /\ _ 
                                                 |- _ => destruct H
                                                 | 
                                                 H:_ * _ |- _ => destruct H
                                                 | 
                                                 H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                                 | 
                                                 H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                                 | 
                                                 H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                                 | 
                                                 H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                                 | 
                                                 H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                                 | 
                                                 H:~ In _ (remove _ _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                                 | 
                                                 H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 try intuition congruence;
                                                 pcong);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                                 | 
                                                 H:
                                                 nnrs_imp_stmt_eval _ _ _ ?p1 =
                                                 ?p2
                                                 |- _ =>
                                                 apply
                                                 nnrs_imp_stmt_eval_domain_stack
                                                 in H
                                                 | 
                                                 H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x1 :: ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H [x1] (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                                 end; 
                                                 simpl in *; trivial; 
                                                 intros; 
                                                 try subst; 
                                                 try contradiction;
                                                 try (solve
                                                 [ congruence
                                                 | 
                                                 f_equal; congruence ]))
                                          in
                                          fuse_t
                                           ltac:(try tauto; try congruence)
                                         in
                                         fuse_tt
File "./compiler/core/NNRSimp/Lang/NNRSimpEval.v", line 969, characters 0-16:
Warning:
Tactic could not be properly discharged: let rec fuse_tt :=
                                          let rec fuse_t :=
                                           let rec pcong := solve
                                           [ repeat
                                              (match goal with
                                               | H:_ = _
                                                 |- _ =>
                                                 rewrite H in *; clear H
                                               end; 
                                                try tauto) ]
                                           in
                                           fun stac =>
                                             repeat
                                              progress
                                               (repeat
                                                 rewrite in_app_iff in *;
                                                 repeat
                                                 match goal with
                                                 | 
                                                 H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                                 | 
                                                 H:_ \/ _ -> False
                                                 |- _ => apply not_or in H
                                                 | 
                                                 H:_ /\ _ 
                                                 |- _ => destruct H
                                                 | 
                                                 H:_ * _ |- _ => destruct H
                                                 | 
                                                 H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                                 | 
                                                 H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                                 | 
                                                 H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                                 | 
                                                 H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                                 | 
                                                 H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                                 | 
                                                 H:~ In _ (remove _ _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                                 | 
                                                 H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 try intuition congruence;
                                                 pcong);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                                 | 
                                                 H:
                                                 nnrs_imp_stmt_eval _ _ _ ?p1 =
                                                 ?p2
                                                 |- _ =>
                                                 apply
                                                 nnrs_imp_stmt_eval_domain_stack
                                                 in H
                                                 | 
                                                 H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x1 :: ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H [x1] (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                                 end; 
                                                 simpl in *; trivial; 
                                                 intros; 
                                                 try subst; 
                                                 try contradiction;
                                                 try (solve
                                                 [ congruence
                                                 | 
                                                 f_equal; congruence ]))
                                          in
                                          fuse_t
                                           ltac:(try tauto; try congruence)
                                         in
                                         fuse_tt
File "./compiler/core/NNRSimp/Lang/NNRSimpEval.v", line 969, characters 0-16:
Warning:
Tactic could not be properly discharged: let rec fuse_tt :=
                                          let rec fuse_t :=
                                           let rec pcong := solve
                                           [ repeat
                                              (match goal with
                                               | H:_ = _
                                                 |- _ =>
                                                 rewrite H in *; clear H
                                               end; 
                                                try tauto) ]
                                           in
                                           fun stac =>
                                             repeat
                                              progress
                                               (repeat
                                                 rewrite in_app_iff in *;
                                                 repeat
                                                 match goal with
                                                 | 
                                                 H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                                 | 
                                                 H:_ \/ _ -> False
                                                 |- _ => apply not_or in H
                                                 | 
                                                 H:_ /\ _ 
                                                 |- _ => destruct H
                                                 | 
                                                 H:_ * _ |- _ => destruct H
                                                 | 
                                                 H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                                 | 
                                                 H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                                 | 
                                                 H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                                 | 
                                                 H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                                 | 
                                                 H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                                 | 
                                                 H:~ In _ (remove _ _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                                 | 
                                                 H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 try intuition congruence;
                                                 pcong);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                                 | 
                                                 H:
                                                 nnrs_imp_stmt_eval _ _ _ ?p1 =
                                                 ?p2
                                                 |- _ =>
                                                 apply
                                                 nnrs_imp_stmt_eval_domain_stack
                                                 in H
                                                 | 
                                                 H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x1 :: ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H [x1] (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                                 end; 
                                                 simpl in *; trivial; 
                                                 intros; 
                                                 try subst; 
                                                 try contradiction;
                                                 try (solve
                                                 [ congruence
                                                 | 
                                                 f_equal; congruence ]))
                                          in
                                          fuse_t
                                           ltac:(try tauto; try congruence)
                                         in
                                         fuse_tt
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/cNRAEnv/Context/cNRAEnvContext.v", line 1142, characters 0-19:
Warning: Tactic could not be properly discharged: solve
[ destruct (aec_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (aec_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (aec_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/Data/ModelTyping/TData.v", line 1208, characters 4-33:
Warning: Benchmarking error: Forked process exited with code 1
File "./compiler/core/TypeSystem/TBrandModel.v", line 141, characters 2-36:
Warning: Benchmarking error: Anomaly "Variable name b could not be resolved"
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1289, characters 2-15:
Warning: Benchmarking error: Forked process exited with code 1
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 268, characters 6-17:
Warning: Benchmarking error: Forked process exited with code 1
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/TypeSystem/RConsistentSubtype.v", line 1358, characters 4-21:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 501, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 502, characters 10-33:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 520, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 521, characters 10-33:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 537, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 538, characters 10-33:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 550, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 551, characters 10-33:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 564, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 565, characters 10-33:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 577, characters 10-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 578, characters 10-33:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 619, characters 12-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 620, characters 12-35:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 647, characters 12-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 648, characters 12-35:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 665, characters 12-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p as [[? ?] ?]
try intros until p;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 666, characters 12-35:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct p0 as [[? ?] ?]
try intros until p0;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [? ?]; [ .. | idtac ] ])

File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NNRS/Lang/NNRSEval.v", line 1011, characters 0-13:
Warning:
Tactic could not be properly discharged: let rec unused_inv_tac :=
                                          let rec rename_inv_tac1 :=
                                           let rec disect_tac H stac :=
                                            unfold var in *; cut_to H;
                                             unfold domain in *;
                                             [ idtac | solve [ stac ].. ];
                                             unfold lift2P in H;
                                             (repeat match_option_in H;
                                               try contradiction)
                                           in
                                           fun stac =>
                                             unfold var in *;
                                              repeat rewrite or_assoc;
                                              try
                                               match goal with
                                               | H:domain (_ ++ _) = domain _
                                                 |- _ =>
                                                 rewrite domain_app in H;
                                                 unfold domain in H; symmetry
                                                 in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:map (_ ++ _)%list = map _
                                                 |- _ =>
                                                 rewrite map_app in H;
                                                 symmetry in H;
                                                 apply map_app_break in H;
                                                 destruct H
                                                 as [? [? [? [? ?]]]]; subst;
                                                 simpl in *
                                               | H:_ :: _ = map _ ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ :: _ = domain ?x
                                                 |- _ =>
                                                 destruct x; try discriminate;
                                                 simpl in H; 
                                                 invcs H
                                               | H:_ * _ * _
                                                 |- _ =>
                                                 destruct H as [[? ?] ?];
                                                 simpl in *
                                               | H:_ * _
                                                 |- _ =>
                                                 destruct H as [? ?];
                                                 simpl in *
                                               | H:
                                                 nnrs_stmt_eval _ ?p1 _ _ _ =
                                                 Some (?p2, _, _)
                                                 |- _ =>
                                                 match p1 with
                                                 | p2 => 
                                                 fail 1
                                                 | _ =>
                                                 generalize
                                                 (nnrs_stmt_eval_domain_stack
                                                 H); 
                                                 intros [? [? ?]]
                                                 end
                                               | H:~ (_ \/ _)
                                                 |- _ => apply not_or in H
                                               | H:_ /\ _ |- _ => destruct H
                                               | H:?x = ?x |- _ => clear H
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 ?x :: ?x1 ++ ?dd :: ?x2 =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H (x :: x1) (snd dd) x2);
                                                 simpl in H;
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 forall a b c,
                                                 _ ->
                                                 (?x1 ++ ?dd :: ?x2)%list =
                                                 (_ ++ _ :: _)%list -> _
                                                 |- _ =>
                                                 specialize
                                                 (H x1 (snd dd) x2);
                                                 match dd with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ => 
                                                 destruct dd
                                                 end; 
                                                 simpl in *; 
                                                 cut_to H;
                                                 [ 
                                                 | eauto
                                                 
                                                 3
                                                 | reflexivity ]
                                               | H:
                                                 (?x ++ _)%list =
                                                 (?y ++ _)%list
                                                 |- _ =>
                                                 let HH := fresh in
                                                 assert
                                                 (HH : domain y = domain x)
                                                 by
                                                 (unfold domain in *;
                                                 intuition congruence);
                                                 apply app_inv_head_domain
                                                 in H;
                                                 [ clear HH | apply HH ]
                                               | H:_ :: _ = _ :: _
                                                 |- _ => invcs H
                                               | H:?x = (_, _)
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => idtac
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | H:(_, _) = ?x
                                                 |- _ =>
                                                 match x with
                                                 | 
                                                 (_, _) => 
                                                 fail 1
                                                 | _ =>
                                                 destruct x; simpl in H
                                                 end; 
                                                 invcs H
                                               | |- 
                                                 _ /\ _ =>
                                                 try split; [  | tauto ]
                                               | |-
                                                 lift2P _
                                                 match ?x with
                                                 | _ => _
                                                 end
                                                 match ?x with
                                                 | _ => _
                                                 end =>
                                                 destruct x; try reflexivity
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?l ++ (_, ?d) :: ?σ)%list
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _
                                                 (?x :: ?l ++ (_, ?d) :: ?σ)
                                                 ?ψc 
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?l ++ (_, ?d) :: ?ψd)%list
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ 
                                                 ?ψc
                                                 (?x :: ?l ++ (_, ?d) :: ?ψd)
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 (nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s) _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?l ++ (_, ?d) :: ?ψc)%list
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize 
                                                 (H l σ ψc ψd d);
                                                 disect_tac H stac
                                               | H:
                                                 forall l es ec ed d,
                                                 _ ->
                                                 lift2P _
                                                 (nnrs_stmt_eval _ _ _ _ ?s)
                                                 _
                                                 |-
                                                 lift2P _
                                                 match
                                                 nnrs_stmt_eval _ 
                                                 ?σ
                                                 (?x :: ?l ++ (_, ?d) :: ?ψc)
                                                 ?ψd 
                                                 ?s
                                                 with
                                                 | Some _ | _ => _
                                                 end _ =>
                                                 specialize
                                                 (H (x :: l) σ ψc ψd d);
                                                 simpl in H;
                                                 disect_tac H stac
                                               | H:
                                                 ~
                                                 In _ (remove equiv_dec _ _)
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H:
                                                 In _ (remove equiv_dec _ _) ->
                                                 False
                                                 |- _ =>
                                                 apply
                                                 not_in_remove_impl_not_in
                                                 in H; 
                                                 [  | congruence ]
                                               | H1:
                                                 ?x = Some ?y,
                                                 H2:
                                                 ?x = Some ?z
                                                 |- _ =>
                                                 rewrite H1 in H2; invcs H2
                                               | |- 
                                                 ?x = ?y \/ _ =>
                                                 destruct (x == y);
                                                 unfold equiv, complement
                                                 in *;
                                                 [ left; trivial | right ]
                                               end; 
                                              try subst; 
                                              simpl in *; 
                                              intros; 
                                              try congruence
                                          in
                                          repeat
                                           progress
                                            (try
                                              rename_inv_tac1
                                               ltac:
                                               (unused_inv_tac; intuition
                                                 unused_inv_tac);
                                              try
                                               rewrite
                                                nnrs_expr_eval_unused_env by
                                                tauto)
                                         in
                                         unused_inv_tac
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./compiler/core/NRA/Context/NRAContext.v", line 1058, characters 0-15:
Warning: Tactic could not be properly discharged: solve
[ destruct (ac_simplify c); simpl in *; trivial; match_destr; try congruence
| destruct (ac_simplify c1); simpl; try rewrite IHc2; trivial;
   destruct (ac_simplify c2); simpl in *; trivial; match_destr;
   try congruence ]
File "./theories/BGsection3.v", line 6, characters 0-94:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection3.v", line 6, characters 0-94:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection3.v", line 6, characters 0-94:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection3.v", line 6, characters 0-94:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection3.v", line 6, characters 0-94:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection3.v", line 6, characters 0-94:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection3.v", line 6, characters 0-94:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/BGsection3.v", line 6, characters 0-94:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./compiler/core/NRA/Optim/NRARewrite.v", line 117, characters 4-33:
Warning: Benchmarking error: Forked process exited with signal -11
File "./theories/BGsection7.v", line 355, characters 0-17:
Warning: Tactic could not be properly discharged: by
move  =>maxM sHM; apply : sub_proper_trans (mmax_proper maxM) 
File "./theories/BGsection7.v", line 355, characters 0-17:
Warning:
Tactic could not be properly discharged: move  =>maxM sUM; apply
                                          /idP/idP =>uU ; first  by rewrite
-(def_uniq_mmax uU)
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm (rtype_meet₀ τr τs) τs0
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm τr (rtype_meet₀ τs τs0)
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm τs τs0
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm τr τs
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lsn :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 =>
                                            rewrite
                                             (@map_rtype_meet₀_some_none _ _
                                                _ t1); qtrivial; lsimp
                                         in
                                         lsn (rtype_meet₀ τr τs)
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm τr τs
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lsn :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 =>
                                            rewrite
                                             (@map_rtype_meet₀_some_none _ _
                                                _ t1); qtrivial; lsimp
                                         in
                                         lsn τs
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm τr τs
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm τr τs0
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm τr τs0
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lsn :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 =>
                                            rewrite
                                             (@map_rtype_meet₀_some_none _ _
                                                _ t1); qtrivial; lsimp
                                         in
                                         lsn τr
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lsn :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 =>
                                            rewrite
                                             (@map_rtype_meet₀_some_none _ _
                                                _ t1); qtrivial; lsimp
                                         in
                                         lsn τr
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lsn :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 =>
                                            rewrite
                                             (@map_rtype_meet₀_some_none _ _
                                                _ t1); qtrivial; lsimp
                                         in
                                         lsn τr
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lsn :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 =>
                                            rewrite
                                             (@map_rtype_meet₀_some_none _ _
                                                _ t1); qtrivial; lsimp
                                         in
                                         lsn τr
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm τs τs0
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lmm :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 t2 =>
                                            rewrite
                                             (@map_rtype_meet₀_rtype_meets _
                                                _ _ t1 t2); qtrivial; lsimp
                                         in
                                         lmm τs τs0
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lsn :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 =>
                                            rewrite
                                             (@map_rtype_meet₀_some_none _ _
                                                _ t1); qtrivial; lsimp
                                         in
                                         lsn τs
File "./compiler/core/TypeSystem/RTypeMeetJoin.v", line 2178, characters 0-18:
Warning:
Tactic could not be properly discharged: let rec lsn :=
                                          let rec lsimp :=
                                           try
                                            rewrite
                                             @map_rtype_meet₀_domain_rec_concat_sort
                                             by eauto  2 
                                             with qcert;
                                            try rewrite lookup_app
                                          in
                                          fun t1 =>
                                            rewrite
                                             (@map_rtype_meet₀_some_none _ _
                                                _ t1); qtrivial; lsimp
                                         in
                                         lsn τs
File "./theories/PFsection3.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection3.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection3.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection3.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection3.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection3.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection3.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection3.v", line 6, characters 0-86:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/BGappendixAB.v", line 6, characters 0-81:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixAB.v", line 6, characters 0-81:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixAB.v", line 6, characters 0-81:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixAB.v", line 6, characters 0-81:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixAB.v", line 6, characters 0-81:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixAB.v", line 6, characters 0-81:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixAB.v", line 6, characters 0-81:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/BGappendixAB.v", line 6, characters 0-81:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection3.v", line 719, characters 0-66:
Warning: Benchmarking error: Anomaly "Non-functional construction."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection3.v", line 754, characters 0-53:
Warning: Benchmarking error: Anomaly "Non-functional construction."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGappendixC.v", line 6, characters 0-83:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixC.v", line 6, characters 0-83:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixC.v", line 6, characters 0-83:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixC.v", line 6, characters 0-83:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixC.v", line 6, characters 0-83:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixC.v", line 6, characters 0-83:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGappendixC.v", line 6, characters 0-83:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/BGappendixC.v", line 6, characters 0-83:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./compiler/core/TypeSystem/RSubtype.v", line 373, characters 8-58:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct (IHx2 pfr1 (exist _ _ pfr2)) as [[?| ?] ?]
<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
 [ .. | destruct _tmp_tactician0 as [?| ?]; [ .. | idtac | idtac ] ]

File "./compiler/core/TypeSystem/RSubtype.v", line 405, characters 6-56:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct (IHx1 pfl1 (exist _ _ pfl2)) as [[?| ?] ?]
<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
 [ .. | destruct _tmp_tactician0 as [?| ?]; [ .. | idtac | idtac ] ]

File "./theories/BGappendixC.v", line 80, characters 34-71:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGappendixC.v", line 135, characters 0-72:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGappendixC.v", line 225, characters 28-65:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGappendixC.v", line 243, characters 7-56:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGappendixC.v", line 471, characters 0-45:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection2.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection2.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection2.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection2.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection2.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection2.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection2.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection2.v", line 6, characters 0-88:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/premetric.v", line 92, characters 0-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/int_abs.v", line 24, characters 0-15:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/int_abs.v", line 24, characters 0-15:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/int_abs.v", line 24, characters 0-15:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/PFsection2.v", line 745, characters 0-8:
Warning: Tactic could not be properly discharged: by
move  =>a Aa; rewrite /= -{+1}[a]mul1g (DadeE _ Aa) ?mem_Dade_support1
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/int_abs.v", line 24, characters 0-15:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/theory/int_abs.v", line 24, characters 0-15:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/BGsection2.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection2.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection2.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection2.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection2.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection2.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection2.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/BGsection2.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 377, characters 4-39:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Brands/BrandRelation.v", line 858, characters 4-38:
Warning: Benchmarking error: Anomaly "Variable name b could not be resolved"
Please report at http://coq.inria.fr/bugs/.
File "./theories/Spaces/BAut/Bool.v", line 30, characters 4-16:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/Classes/implementations/natpair_integers.v", line 1117, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite naturals_initial
File "./theories/Classes/implementations/natpair_integers.v", line 1117, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite naturals_initial
File "./theories/Classes/orders/nat_int.v", line 173, characters 9-28:
Warning: Benchmarking error: Anomaly "Evar ?X309594 was not declared."
Please report at http://coq.inria.fr/bugs/.
File "./theories/Spaces/BAut/Bool.v", line 445, characters 0-21:
Warning:
Tactic could not be properly discharged: pose
                                          (c :=
                                           aut_bool_idmap_or_negb
                                             (negb_baut_bool (point _)))
File "./theories/Spaces/BAut/Bool.v", line 445, characters 0-21:
Warning:
Tactic could not be properly discharged: pose
                                          (negb_baut_bool_ne_idmap 
                                             (point _) p)
File "./theories/Classes/theory/naturals.v", line 22, characters 0-9:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/Spaces/No/Addition.v", line 385, characters 0-13:
Warning:
Tactic could not be properly discharged: abstract (
intros L R ? xL xR xcut xL_plus xR_plus xL_lt_xR_plus L' R' ? yL yR ycut
 yL_plus yR_plus yL_lt_yR_plus;
 intros xL_lt_y xL_lt_y_plus x_lt_yR x_lt_yR_plus z; 
 lazy beta zeta in *; cbn[proj1_sig] in *; pattern z; refine
 (No_ind_hprop _ _ z);
 intros L'' R'' ? zL zR zcut x_le_y_plus_zL x_le_y_plus_zR;
 destruct (plus_inner_cut xL_plus xR_plus xL_lt_xR_plus zL zR zcut)
  as [xzcut p]; rewrite p;
 destruct (plus_inner_cut yL_plus yR_plus yL_lt_yR_plus zL zR zcut)
  as [yzcut q]; rewrite q; apply le_lr; [ intros [l| l] | intros [r| r] ];
 [ specialize (xL_lt_y_plus l {{ zL | zR // zcut }});
    rewrite q in xL_lt_y_plus; exact xL_lt_y_plus
 | refine (le_lt_trans (x_le_y_plus_zL l) _); refine (lt_lopt _ _ _ (inr l))
 | specialize (x_lt_yR_plus r {{ zL | zR // zcut }});
    rewrite p in x_lt_yR_plus; exact x_lt_yR_plus
 | refine (lt_le_trans _ (x_le_y_plus_zR r)); refine (lt_ropt _ _ _ (inr r)) ])
File "./theories/Spaces/No/Addition.v", line 385, characters 0-13:
Warning:
Tactic could not be properly discharged: abstract (
intros L R ? xL xR xcut xL_plus xR_plus xL_lt_xR_plus L' R' ? yL yR ycut
 yL_plus yR_plus yL_lt_yR_plus;
 intros xL_lt_y xL_lt_y_plus x_lt_yR x_lt_yR_plus z; 
 lazy beta zeta in *; cbn[proj1_sig] in *; pattern z; refine
 (No_ind_hprop _ _ z);
 intros L'' R'' ? zL zR zcut x_le_y_plus_zL x_le_y_plus_zR;
 destruct (plus_inner_cut xL_plus xR_plus xL_lt_xR_plus zL zR zcut)
  as [xzcut p]; rewrite p;
 destruct (plus_inner_cut yL_plus yR_plus yL_lt_yR_plus zL zR zcut)
  as [yzcut q]; rewrite q; apply le_lr; [ intros [l| l] | intros [r| r] ];
 [ specialize (xL_lt_y_plus l {{ zL | zR // zcut }});
    rewrite q in xL_lt_y_plus; exact xL_lt_y_plus
 | refine (le_lt_trans (x_le_y_plus_zL l) _); refine (lt_lopt _ _ _ (inr l))
 | specialize (x_lt_yR_plus r {{ zL | zR // zcut }});
    rewrite p in x_lt_yR_plus; exact x_lt_yR_plus
 | refine (lt_le_trans _ (x_le_y_plus_zR r)); refine (lt_ropt _ _ _ (inr r)) ])
File "./theories/Spaces/No/Addition.v", line 385, characters 0-13:
Warning:
Tactic could not be properly discharged: abstract (
intros L R ? xL xR xcut xL_plus xR_plus xL_lt_xR_plus L' R' ? yL yR ycut
 yL_plus yR_plus yL_lt_yR_plus; intros l x_le_yL x_le_yL_plus z;
 lazy beta zeta in *; cbn[proj1_sig] in *; pattern z; refine
 (No_ind_hprop _ _ z);
 intros L'' R'' ? zL zR zcut x_le_y_plus_zL x_le_y_plus_zR;
 destruct (plus_inner_cut xL_plus xR_plus xL_lt_xR_plus zL zR zcut)
  as [xzcut p]; rewrite p;
 destruct (plus_inner_cut yL_plus yR_plus yL_lt_yR_plus zL zR zcut)
  as [yzcut q]; rewrite q; refine
 (le_lt_trans (x_le_yL_plus {{ zL | zR // zcut }}) _); refine
 (lt_lopt _ _ _ (inl l)))
File "./theories/Spaces/No/Addition.v", line 385, characters 0-13:
Warning:
Tactic could not be properly discharged: abstract (
intros L R ? xL xR xcut xL_plus xR_plus xL_lt_xR_plus L' R' ? yL yR ycut
 yL_plus yR_plus yL_lt_yR_plus; intros l x_le_yL x_le_yL_plus z;
 lazy beta zeta in *; cbn[proj1_sig] in *; pattern z; refine
 (No_ind_hprop _ _ z);
 intros L'' R'' ? zL zR zcut x_le_y_plus_zL x_le_y_plus_zR;
 destruct (plus_inner_cut xL_plus xR_plus xL_lt_xR_plus zL zR zcut)
  as [xzcut p]; rewrite p;
 destruct (plus_inner_cut yL_plus yR_plus yL_lt_yR_plus zL zR zcut)
  as [yzcut q]; rewrite q; refine
 (le_lt_trans (x_le_yL_plus {{ zL | zR // zcut }}) _); refine
 (lt_lopt _ _ _ (inl l)))
File "./theories/Spaces/No/Addition.v", line 385, characters 0-13:
Warning:
Tactic could not be properly discharged: abstract (
intros L R ? xL xR xcut xL_plus xR_plus xL_lt_xR_plus L' R' ? yL yR ycut
 yL_plus yR_plus yL_lt_yR_plus; intros r xR_le_y xR_le_y_plus z;
 lazy beta zeta in *; cbn[proj1_sig] in *; pattern z; refine
 (No_ind_hprop _ _ z);
 intros L'' R'' ? zL zR zcut x_le_y_plus_zL x_le_y_plus_zR;
 destruct (plus_inner_cut xL_plus xR_plus xL_lt_xR_plus zL zR zcut)
  as [xzcut p]; rewrite p;
 destruct (plus_inner_cut yL_plus yR_plus yL_lt_yR_plus zL zR zcut)
  as [yzcut q]; rewrite q; refine
 (lt_le_trans _ (xR_le_y_plus {{ zL | zR // zcut }})); refine
 (lt_ropt _ _ _ (inl r)))
File "./theories/Spaces/No/Addition.v", line 385, characters 0-13:
Warning:
Tactic could not be properly discharged: abstract (
intros L R ? xL xR xcut xL_plus xR_plus xL_lt_xR_plus L' R' ? yL yR ycut
 yL_plus yR_plus yL_lt_yR_plus; intros r xR_le_y xR_le_y_plus z;
 lazy beta zeta in *; cbn[proj1_sig] in *; pattern z; refine
 (No_ind_hprop _ _ z);
 intros L'' R'' ? zL zR zcut x_le_y_plus_zL x_le_y_plus_zR;
 destruct (plus_inner_cut xL_plus xR_plus xL_lt_xR_plus zL zR zcut)
  as [xzcut p]; rewrite p;
 destruct (plus_inner_cut yL_plus yR_plus yL_lt_yR_plus zL zR zcut)
  as [yzcut q]; rewrite q; refine
 (lt_le_trans _ (xR_le_y_plus {{ zL | zR // zcut }})); refine
 (lt_ropt _ _ _ (inl r)))
File "./compiler/core/Utils/Interleaved.v", line 293, characters 4-22:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/implementations/peano_naturals.v", line 409, characters 12-53:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct (le_lt_dec a b) as [[| ]| E]; auto
<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
 [ .. | destruct _tmp_tactician0 as [| ]; [ .. | idtac | idtac ] | idtac ];
 auto

File "./theories/HIT/V.v", line 283, characters 2-29:
Warning: Benchmarking error: Anomaly "Non-functional construction."
Please report at http://coq.inria.fr/bugs/.
File "./theories/Classes/theory/ua_first_isomorphism.v", line 124, characters 4-75:
Warning: Benchmarking error: Anomaly "Non-functional construction."
Please report at http://coq.inria.fr/bugs/.
File "./theories/Classes/theory/fields.v", line 143, characters 0-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/tactics/ring_quote.v", line 96, characters 0-11:
Warning: Tactic could not be properly discharged: apply lookup_correct
File "./theories/Classes/tactics/ring_quote.v", line 96, characters 0-11:
Warning: Tactic could not be properly discharged: apply lookup_correct
File "./theories/Classes/tactics/ring_quote.v", line 219, characters 0-10:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote n)
File "./theories/Classes/tactics/ring_quote.v", line 219, characters 0-10:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote m)
File "./theories/Classes/tactics/ring_quote.v", line 219, characters 0-10:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote n)
File "./theories/Classes/tactics/ring_quote.v", line 219, characters 0-10:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote m)
File "./theories/Classes/tactics/ring_quote.v", line 219, characters 0-10:
Warning: Tactic could not be properly discharged: exists (Neg (quote n))
File "./theories/Algebra/Group.v", line 56, characters 2-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Algebra/Group.v", line 56, characters 2-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Algebra/Group.v", line 56, characters 2-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Algebra/Group.v", line 56, characters 2-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: apply lookup_correct
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: apply lookup_correct
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote n)
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote m)
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote n)
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote m)
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: exists (Neg (quote n))
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: apply lookup_correct
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote n)
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote m)
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning:
Tactic could not be properly discharged: path_via
                                          (eval (merge v (merge v' v''))
                                             (expr_map sum_aux (quote n)))
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning:
Tactic could not be properly discharged: path_via
                                          (eval (merge v (merge v' v''))
                                             (expr_map sum_assoc (quote m)))
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote l)
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning: Tactic could not be properly discharged: rewrite <- (eval_quote r)
File "./theories/Classes/tactics/ring_quote.v", line 283, characters 0-13:
Warning:
Tactic could not be properly discharged: path_via
                                          (eval heap
                                             (expr_map sum_forget (quote l)))
File "./theories/Algebra/Group.v", line 56, characters 2-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Algebra/Group.v", line 56, characters 2-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Spaces/No/Core.v", line 978, characters 0-12:
Warning:
Tactic could not be properly discharged: abstract (
repeat split;
 [ intros y; exact (fst (fst (inner xL_let xR_let x_lt_le y).2))
 | intros y z x_le_y y_le_z; exact
    (fst (inner_le xL_let xR_let x_lt_le y z y_le_z) x_le_y)
 | intros y z x_le_y y_lt_z; exact
    (inner_lt xL_let xR_let x_lt_le y z y_lt_z x_le_y)
 | intros y z x_lt_y y_le_z; exact
    (snd (inner_le xL_let xR_let x_lt_le y z y_le_z) x_lt_y) ])
File "./theories/Spaces/No/Core.v", line 978, characters 0-12:
Warning:
Tactic could not be properly discharged: abstract (
repeat split;
 [ intros y; exact (fst (fst (inner xL_let xR_let x_lt_le y).2))
 | intros y z x_le_y y_le_z; exact
    (fst (inner_le xL_let xR_let x_lt_le y z y_le_z) x_le_y)
 | intros y z x_le_y y_lt_z; exact
    (inner_lt xL_let xR_let x_lt_le y z y_lt_z x_le_y)
 | intros y z x_lt_y y_le_z; exact
    (snd (inner_le xL_let xR_let x_lt_le y z y_le_z) x_lt_y) ])
File "./theories/Spaces/No/Core.v", line 978, characters 0-12:
Warning:
Tactic could not be properly discharged: abstract (
repeat split;
 [ intros y; exact (fst (fst (inner xL_let xR_let x_lt_le y).2))
 | intros y z x_le_y y_le_z; exact
    (fst (inner_le xL_let xR_let x_lt_le y z y_le_z) x_le_y)
 | intros y z x_le_y y_lt_z; exact
    (inner_lt xL_let xR_let x_lt_le y z y_lt_z x_le_y)
 | intros y z x_lt_y y_le_z; exact
    (snd (inner_le xL_let xR_let x_lt_le y z y_le_z) x_lt_y) ])
File "./theories/Spaces/No/Core.v", line 978, characters 0-12:
Warning:
Tactic could not be properly discharged: abstract (
repeat split;
 [ intros y; exact (fst (fst (inner xL_let xR_let x_lt_le y).2))
 | intros y z x_le_y y_le_z; exact
    (fst (inner_le xL_let xR_let x_lt_le y z y_le_z) x_le_y)
 | intros y z x_le_y y_lt_z; exact
    (inner_lt xL_let xR_let x_lt_le y z y_lt_z x_le_y)
 | intros y z x_lt_y y_le_z; exact
    (snd (inner_le xL_let xR_let x_lt_le y z y_le_z) x_lt_y) ])
File "./theories/Classes/implementations/ne_list.v", line 125, characters 3-19:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[]| C]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2| C];
   [ .. | destruct _tmp_tactician2 as []; idtac | idtac ])

File "./theories/Spaces/Finite.v", line 241, characters 6-27:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct z as [z| []]
try intros until z;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | idtac | destruct _tmp_tactician0 as []; idtac ])

File "./theories/Classes/theory/apartness.v", line 108, characters 2-31:
Warning: Benchmarking error: Anomaly "Evar ?X259501 was not declared."
Please report at http://coq.inria.fr/bugs/.
File "./src/extraction/axioms32.v", line 153, characters 2-20:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/extraction/axioms32.v", line 651, characters 2-11:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/extraction/axioms8.v", line 190, characters 2-14:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/extraction/axioms8.v", line 452, characters 2-13:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/Idempotents.v", line 704, characters 6-65:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct a as [[g I] J]; unfold quasiidempotent_pr1; simpl
try intros until a;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ .. | destruct _tmp_tactician0 as [g I]; [ .. | idtac ] ]);
 (idtac; unfold quasiidempotent_pr1); simpl

File "./theories/Idempotents.v", line 732, characters 6-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[g I] J]; simpl
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 J];
   [ .. | destruct _tmp_tactician2 as [g I]; [ .. | idtac ] ]); 
 simpl

File "./theories/Classes/theory/additional_operations.v", line 13, characters 0-22:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/Pointed/Loops.v", line 66, characters 2-26:
Warning: Benchmarking error: Anomaly "Evar ?X289771 was not declared."
Please report at http://coq.inria.fr/bugs/.
File "./src/extraction/axioms16.v", line 153, characters 2-20:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/extraction/axioms16.v", line 366, characters 2-24:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/extraction/axioms16.v", line 497, characters 2-18:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/extraction/axioms16.v", line 630, characters 2-11:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/Colimits/Quotient.v", line 201, characters 4-28:
Warning:
Benchmarking error: Anomaly
                    "Typing failure of the following tactic:
                    synth with cache (unshelve (only 1: intros ?; only 1: strip_truncations; only 1: rapply @prod_ind; only 1: intros ?; only 1: intros ?; only 1: refine b; only 1: eauto); only 1: intros ?; only 1: eauto).
                    Typing error:
                    In environment
                    H : Univalence
                    A : Type
                    R : Relation A
                    is_mere_relation0 : is_mere_relation A R
                    H0 : Transitive R
                    H1 : Symmetric R
                    H2 : Reflexive R
                    b : A / R
                    b0 :
                    Coeq (fun x : {a : A & {x : _ & R a x}} => x.1)
                      (fun x : {a : A & {x : _ & R a x}} => (x.2).1)
                    The term
                     "fun
                        _
                         _ : Coeq (fun x : {a : A & {x : _ & R a x}} => x.1)
                               (fun x : {a : A & {x : _ & R a x}} => (x.2).1)
                      => b0" has type
                     "Coeq (fun x : {a : A & {x : _ & R a x}} => x.1)
                        (fun x : {a : A & {x : _ & R a x}} => (x.2).1) ->
                      Coeq (fun x : {a : A & {x : _ & R a x}} => x.1)
                        (fun x : {a : A & {x : _ & R a x}} => (x.2).1) ->
                      Coeq (fun x : {a : A & {x : _ & R a x}} => x.1)
                        (fun x : {a : A & {x : _ & R a x}} => (x.2).1)"
                    while it is expected to have type
                     "Coeq (fun x : {a : A & {x : _ & R a x}} => x.1)
                        (fun x : {a : A & {x : _ & R a x}} => (x.2).1) ->
                      Coeq (fun x : {a : A & {x : _ & R a x}} => x.1)
                        (fun x : {a : A & {x : _ & R a x}} => (x.2).1) -> A"."
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/Utils/Fresh.v", line 111, characters 4-157:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Spaces/Nat.v", line 95, characters 4-21:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros []; simpl
intros _tmp_tactician0; (destruct _tmp_tactician0 as []; idtac); simpl

File "./theories/HIT/unique_choice.v", line 10, characters 0-24:
Warning: Benchmarking error: Anomaly "Evar ?X159174 was not declared."
Please report at http://coq.inria.fr/bugs/.
File "./theories/Categories/HomotopyPreCategory.v", line 47, characters 2-758:
Warning: Benchmarking error: Forked process exited with code 1
File "./theories/PFsection1.v", line 6, characters 0-92:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection1.v", line 6, characters 0-92:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection1.v", line 6, characters 0-92:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection1.v", line 6, characters 0-92:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection1.v", line 6, characters 0-92:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection1.v", line 6, characters 0-92:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/PFsection1.v", line 6, characters 0-92:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/PFsection1.v", line 6, characters 0-92:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/CeresRoundtrip.v", line 47, characters 2-35:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros E; injection E; intros []
intros E; idtac; injection E;
 (intros _tmp_tactician0; (destruct _tmp_tactician0 as []; idtac))

File "./theories/PFsection1.v", line 76, characters 0-76:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/bbv/Word.v", line 27, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope word_scope.". [undeclared-scope,deprecated]
File "./src/bbv/Word.v", line 170, characters 2-232:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, Nat.eq_dec) Please report.
File "./src/bbv/Word.v", line 174, characters 2-184:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto) Please report.
File "./theories/PFsection1.v", line 298, characters 0-36:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection1.v", line 456, characters 34-53:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/PFsection1.v", line 458, characters 30-48:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/CeresParserRoundtripProof.v", line 33, characters 2-109:
Warning: Tactician's tactical decomposition crashed. Please report.
File "./theories/Homotopy/Suspension.v", line 180, characters 4-21:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[N S] m]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 m];
   [ .. | destruct _tmp_tactician2 as [N S]; [ .. | idtac ] ])

File "./src/spec/operations/properties.v", line 115, characters 7-22:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/operations/properties.v", line 177, characters 7-58:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/operations/properties.v", line 262, characters 7-12:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/CeresParserRoundtripProof.v", line 373, characters 2-27:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [| c s' Hc]; auto
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [| c s' Hc]; [ .. | idtac | idtac ]); auto

File "./theories/BGsection1.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.subring_closedM; GRing.smulr_closedN] : GRing.subring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedN] : GRing.subring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection1.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedM] : GRing.subring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.subring_closedM; GRing.smulr_closedM] : GRing.subring_closed >-> GRing.mulr_closed.
New coercion path [GRing.subring_closed_semi; GRing.semiring_closedD] : GRing.subring_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subring_closedB; GRing.zmod_closedD] : GRing.subring_closed >-> GRing.addr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection1.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.sdivr_closed_div; GRing.divr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.sdivr_closedM; GRing.smulr_closedM] : GRing.sdivr_closed >-> GRing.mulr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection1.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedN] : GRing.subalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB;
                   GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB; GRing.zmod_closedD] : GRing.subalg_closed >-> GRing.addr_closed.
New coercion path [GRing.subalg_closedBM; GRing.subring_closedB] : GRing.subalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.subalg_closedZ; GRing.submod_closedB] : GRing.subalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection1.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM; GRing.smulr_closedM] : GRing.divring_closed >-> GRing.mulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM] : GRing.divring_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedM] : GRing.divring_closed >-> GRing.smulr_closed.
New coercion path [GRing.divring_closed_div; GRing.sdivr_closedM;
                   GRing.smulr_closedN] : GRing.divring_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divring_closedBM; GRing.subring_closedB; GRing.zmod_closedN] : GRing.divring_closed >-> GRing.oppr_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection1.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM] : GRing.divalg_closed >-> GRing.subring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM] : GRing.divalg_closed >-> GRing.subring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closed_semi] : GRing.divalg_closed >-> GRing.semiring_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM; GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM;
 GRing.smulr_closedM] : GRing.divalg_closed >-> GRing.mulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedBM; GRing.subring_closedM] : GRing.divalg_closed >-> GRing.smulr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedN] : GRing.divalg_closed >-> GRing.oppr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB; GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB;
 GRing.zmod_closedD] : GRing.divalg_closed >-> GRing.addr_closed.
New coercion path [GRing.divalg_closedBdiv; GRing.divring_closedBM;
                   GRing.subring_closedB] : GRing.divalg_closed >-> GRing.zmod_closed is ambiguous with existing 
[GRing.divalg_closedZ; GRing.subalg_closedZ; GRing.submod_closedB] : GRing.divalg_closed >-> GRing.zmod_closed.
[ambiguous-paths,typechecker]
File "./theories/BGsection1.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.Pred.subring_smul; GRing.Pred.smul_mul] : GRing.Pred.subring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.subring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/BGsection1.v", line 10, characters 0-88:
Warning:
New coercion path [GRing.Pred.divring_sdiv; GRing.Pred.sdiv_smul;
                   GRing.Pred.smul_mul] : GRing.Pred.divring >-> GRing.Pred.mul is ambiguous with existing 
[GRing.Pred.divring_ring; GRing.Pred.subring_semi; GRing.Pred.semiring_mul] : GRing.Pred.divring >-> GRing.Pred.mul.
[ambiguous-paths,typechecker]
File "./theories/CeresRoundtrip.v", line 277, characters 2-39:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros Eab; injection Eab; intros []
intros Eab; idtac; injection Eab;
 (intros _tmp_tactician0; (destruct _tmp_tactician0 as []; idtac))

File "./theories/CeresRoundtrip.v", line 289, characters 4-28:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
injection E2; intros []
injection E2;
 (intros _tmp_tactician0; (destruct _tmp_tactician0 as []; idtac))

File "./src/spec/operations/properties.v", line 665, characters 7-19:
Warning: Benchmarking error: Anomaly "Variable name b could not be resolved"
Please report at http://coq.inria.fr/bugs/.
File "./theories/Categories/Category/Sigma/Univalent.v", line 296, characters 4-1586:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
repeat
 match goal with
 | |- pr1 (transport ?P ?p ?z) = _ =>
       rewrite (ap_transport p (fun _ x => pr1 x))
 | |- pr1 (pr2 (transport ?P ?p ?z)) = _ =>
       rewrite (ap_transport p (fun _ x => pr1 (pr2 x)))
 | |- transport (fun _ => ?x) _ _ = _ => rewrite transport_const
 | |- transport (fun x => ?f (x^-1)%morphism) _ _ = _ =>
       rewrite (transport_compose f (fun x => (x^-1)%morphism))
 | |- transport (?f o ?g) _ _ = _ => rewrite (transport_compose f g)
 | |- transport (fun x => ?f (?g x)) _ _ = _ =>
       rewrite (transport_compose f g)
 | |-
   context [ ap (@morphism_isomorphic ?a ?b ?c) (path_isomorphic ?i ?j ?x) ]
   =>
       change (ap (@morphism_isomorphic a b c)) with (path_isomorphic i j)^-1;
        rewrite (eissect (path_isomorphic i j) x)
 | |-
   context [ ap (fun e : (_ <~=~> _)%category => morphism_inverse _)
               (path_isomorphic ?i ?j ?x) ] =>
       rewrite (ap_morphism_inverse_path_isomorphic i j x 1)
 | |- transport ?P 1 ?x = ?y => change (x = y)
 | |- pr1 (pr2 (pr2 (iso_A'_code (iso_A'_decode ?x)))) = pr1 (pr2 (pr2 ?x))
   => reflexivity
 | |- pr1 (pr2 (iso_A'_code (iso_A'_decode ?x))) = pr1 (pr2 ?x) =>
       reflexivity
 end
repeat
 match goal with
 | |- pr1 (transport ?P ?p ?z) = _ => <recording::with_runtime_info@0>
   <genarg:wit_runtime_info>
 | |- pr1 (pr2 (transport ?P ?p ?z)) = _ => <recording::with_runtime_info@0>
   <genarg:wit_runtime_info>
 | |- transport (fun _ => ?x) _ _ = _ => <recording::with_runtime_info@0>
   <genarg:wit_runtime_info>
 | |- transport (fun x => ?f (x^-1)%morphism) _ _ = _ =>
       <recording::with_runtime_info@0> <genarg:wit_runtime_info>
 | |- transport (?f o ?g) _ _ = _ => <recording::with_runtime_info@0>
   <genarg:wit_runtime_info>
 | |- transport (fun x => ?f (?g x)) _ _ = _ =>
       <recording::with_runtime_info@0> <genarg:wit_runtime_info>
 | |-
   context [ ap (@morphism_isomorphic ?a ?b ?c) (path_isomorphic ?i ?j ?x) ]
   => <recording::with_runtime_info@0> <genarg:wit_runtime_info>
 | |-
   context [ ap (fun e : (_ <~=~> _)%category => morphism_inverse _)
               (path_isomorphic ?i ?j ?x) ] =>
       <recording::with_runtime_info@0> <genarg:wit_runtime_info>
 | |- transport ?P 1 ?x = ?y => <recording::with_runtime_info@0>
   <genarg:wit_runtime_info>
 | |- pr1 (pr2 (pr2 (iso_A'_code (iso_A'_decode ?x)))) = pr1 (pr2 (pr2 ?x))
   => <recording::with_runtime_info@0> <genarg:wit_runtime_info>
 | |- pr1 (pr2 (iso_A'_code (iso_A'_decode ?x))) = pr1 (pr2 ?x) =>
       <recording::with_runtime_info@0> <genarg:wit_runtime_info>
 end

File "./theories/CeresParserRoundtripProof.v", line 618, characters 2-36:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [more s0 s1 Hi Hmore Hcur]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [more s0 s1 Hi Hmore Hcur]; [ .. | idtac ])

File "./theories/stern/fibm.v", line 18, characters 7-40:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/stern/fibm.v", line 74, characters 7-71:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/stern/fibm.v", line 144, characters 0-75:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/stern/fibm.v", line 327, characters 7-62:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/stern/fibm.v", line 390, characters 0-16:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/stern/fibm.v", line 904, characters 0-50:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./theories/BGsection1.v", line 1119, characters 0-31:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/operations/properties.v", line 1070, characters 7-21:
Warning: Benchmarking error: Anomaly "Variable name b could not be resolved"
Please report at http://coq.inria.fr/bugs/.
File "./theories/Categories/Category/Sigma/Univalent.v", line 362, characters 0-12:
Warning:
Tactic could not be properly discharged: repeat
                                          match goal with
                                          | |- pr1 (transport ?P ?p ?z) = _
                                            =>
                                                rewrite
                                                 (ap_transport p
                                                 (fun _ x => pr1 x))
                                          | |-
                                            pr1 (pr2 (transport ?P ?p ?z)) =
                                            _ =>
                                                rewrite
                                                 (ap_transport p
                                                 (fun _ x => pr1 (pr2 x)))
                                          | |-
                                            transport (fun _ => ?x) _ _ = _
                                            => rewrite transport_const
                                          | |-
                                            transport
                                              (fun x => ?f (x^-1)%morphism) _
                                              _ = _ =>
                                                rewrite
                                                 (transport_compose f
                                                 (fun x => (x^-1)%morphism))
                                          | |- transport (?f o ?g) _ _ = _ =>
                                                rewrite
                                                 (transport_compose f g)
                                          | |-
                                            transport 
                                              (fun x => ?f (?g x)) _ _ = _ =>
                                                rewrite
                                                 (transport_compose f g)
                                          | |-
                                            context [ 
                                            ap
                                              (@morphism_isomorphic ?a ?b ?c)
                                              (path_isomorphic ?i ?j ?x) ] =>
                                                change
                                                 (ap
                                                 (@morphism_isomorphic a b c))
                                                 with
                                                 (path_isomorphic i j)^-1;
                                                 rewrite
                                                 (eissect
                                                 (path_isomorphic i j) x)
                                          | |-
                                            context [ 
                                            ap
                                              (fun e : (_ <~=~> _)%category
                                               => 
                                               morphism_inverse _)
                                              (path_isomorphic ?i ?j ?x) ] =>
                                                rewrite
                                                 (ap_morphism_inverse_path_isomorphic
                                                 i j x 1)
                                          | |- transport ?P 1 ?x = ?y =>
                                                change (x = y)
                                          | |-
                                            pr1
                                              (pr2
                                                 (pr2
                                                 (iso_A'_code
                                                 (iso_A'_decode ?x)))) =
                                            pr1 (pr2 (pr2 ?x)) => reflexivity
                                          | |-
                                            pr1
                                              (pr2
                                                 (iso_A'_code
                                                 (iso_A'_decode ?x))) =
                                            pr1 (pr2 ?x) => reflexivity
                                          end
File "./theories/Categories/Category/Sigma/Univalent.v", line 362, characters 0-12:
Warning:
Tactic could not be properly discharged: repeat
                                          match goal with
                                          | |- pr1 (transport ?P ?p ?z) = _
                                            =>
                                                rewrite
                                                 (ap_transport p
                                                 (fun _ x => pr1 x))
                                          | |-
                                            pr1 (pr2 (transport ?P ?p ?z)) =
                                            _ =>
                                                rewrite
                                                 (ap_transport p
                                                 (fun _ x => pr1 (pr2 x)))
                                          | |-
                                            transport (fun _ => ?x) _ _ = _
                                            => rewrite transport_const
                                          | |-
                                            transport
                                              (fun x => ?f (x^-1)%morphism) _
                                              _ = _ =>
                                                rewrite
                                                 (transport_compose f
                                                 (fun x => (x^-1)%morphism))
                                          | |- transport (?f o ?g) _ _ = _ =>
                                                rewrite
                                                 (transport_compose f g)
                                          | |-
                                            transport 
                                              (fun x => ?f (?g x)) _ _ = _ =>
                                                rewrite
                                                 (transport_compose f g)
                                          | |-
                                            context [ 
                                            ap
                                              (@morphism_isomorphic ?a ?b ?c)
                                              (path_isomorphic ?i ?j ?x) ] =>
                                                change
                                                 (ap
                                                 (@morphism_isomorphic a b c))
                                                 with
                                                 (path_isomorphic i j)^-1;
                                                 rewrite
                                                 (eissect
                                                 (path_isomorphic i j) x)
                                          | |-
                                            context [ 
                                            ap
                                              (fun e : (_ <~=~> _)%category
                                               => 
                                               morphism_inverse _)
                                              (path_isomorphic ?i ?j ?x) ] =>
                                                rewrite
                                                 (ap_morphism_inverse_path_isomorphic
                                                 i j x 1)
                                          | |- transport ?P 1 ?x = ?y =>
                                                change (x = y)
                                          | |-
                                            pr1
                                              (pr2
                                                 (pr2
                                                 (iso_A'_code
                                                 (iso_A'_decode ?x)))) =
                                            pr1 (pr2 (pr2 ?x)) => reflexivity
                                          | |-
                                            pr1
                                              (pr2
                                                 (iso_A'_code
                                                 (iso_A'_decode ?x))) =
                                            pr1 (pr2 ?x) => reflexivity
                                          end
File "./theories/Categories/Category/Sigma/Univalent.v", line 362, characters 0-12:
Warning: Tactic could not be properly discharged: simple notypeclasses refine
(isequiv_homotopic
   (equiv_iso_A'^-1 o functor_sigma _ _ o (path_sigma_uncurried _ _ _)^-1) _)
File "./theories/Colimits/Colimit_Pushout_Flattening.v", line 34, characters 6-30:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[] x]; revert x
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 x];
   [ .. | destruct _tmp_tactician2 as []; idtac ]); revert x

File "./compiler/core/Utils/SortingAdd.v", line 282, characters 6-17:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/SortingAdd.v", line 282, characters 6-17:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Colimits/Colimit_Flattening.v", line 72, characters 4-30:
Warning: Benchmarking error: Anomaly "Variable name i could not be resolved"
Please report at http://coq.inria.fr/bugs/.
File "./theories/Colimits/Colimit_Flattening.v", line 112, characters 8-56:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
match goal with
| |- ap _ ?X @ _ = _ => set X
end
match goal with
| |- ap _ ?X @ _ = _ => <recording::with_runtime_info@0>
  <genarg:wit_runtime_info>
end

File "./theories/Colimits/Colimit_Flattening.v", line 130, characters 8-59:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
match goal with
| |- (_ @ ?pp) @ _ = _ => set pp
end
match goal with
| |- (_ @ ?pp) @ _ = _ => <recording::with_runtime_info@0>
  <genarg:wit_runtime_info>
end

File "./theories/Colimits/Colimit_Flattening.v", line 134, characters 10-75:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
match goal with
| |- transportD E' ?C _ _ _ = _ => set (C2 := C)
end
match goal with
| |- transportD E' ?C _ _ _ = _ => <recording::with_runtime_info@0>
  <genarg:wit_runtime_info>
end

File "./theories/Colimits/Colimit_Flattening.v", line 172, characters 10-111:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
match goal with
| |- ?pp1 @ _ = ?pp2 @ _ => set (p1 := pp1); set (p2 := pp2)
end; cbn in *
match goal with
| |- ?pp1 @ _ = ?pp2 @ _ => <recording::with_runtime_info@0>
  <genarg:wit_runtime_info>
end; cbn in *

File "./theories/Modalities/ReflectiveSubuniverse.v", line 666, characters 6-14:
Warning: Benchmarking error: Anomaly "Unexpected meta"
Please report at http://coq.inria.fr/bugs/.
File "./theories/Modalities/ReflectiveSubuniverse.v", line 777, characters 6-45:
Warning: Benchmarking error: Anomaly "Unexpected meta"
Please report at http://coq.inria.fr/bugs/.
File "./theories/Modalities/ReflectiveSubuniverse.v", line 856, characters 8-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[f [g h]] p]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 p];
   [ ..
   | destruct _tmp_tactician2 as [f _tmp_tactician4];
      [ .. | destruct _tmp_tactician4 as [g h]; [ .. | idtac ] ] ])

File "./theories/Modalities/ReflectiveSubuniverse.v", line 861, characters 8-33:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [f [[g p] [h q]]]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [f _tmp_tactician2];
   [ ..
   | destruct _tmp_tactician2 as [_tmp_tactician4 _tmp_tactician6];
      [ ..
      | destruct _tmp_tactician4 as [g p];
         [ .. | destruct _tmp_tactician6 as [h q]; [ .. | idtac ] ] ] ])

File "./theories/Modalities/ReflectiveSubuniverse.v", line 1174, characters 0-27:
Warning: Tactic could not be properly discharged: refine
(whiskerL _ (apD _ (to_O_natural f a)^)^ @ _)
File "./theories/Extensions.v", line 433, characters 0-15:
Warning: Tactic could not be properly discharged: refine
(trunc_equiv _ (equiv_ooextendable_pathsplit C f)^-1)
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 42, characters 4-218:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let C := match goal with | |- _ = _ => (C -> D)%category end in apply (@iso_moveL_Vp C); apply (iso_moveL_Mp _ (iso_whisker_l _ _ _ _ _ _ _)) Please report.
File "./theories/Colimits/MappingCylinder.v", line 38, characters 6-26:
Warning: Benchmarking error: Anomaly "Bad recursive type."
Please report at http://coq.inria.fr/bugs/.
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 102, characters 4-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 102, characters 4-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 102, characters 4-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/Control/Monad/Trans/Control.v", line 17, characters 38-68:
Warning: Ignoring implicit status of product binder a and following binders
[ignoring_implicit_status,implicits]
File "./src/Control/Monad/Trans/Control.v", line 111, characters 0-40:
Warning: Require inside a module is deprecated and strongly discouraged. You
can Require a module at toplevel and optionally Import it inside another one.
[require-in-module,deprecated]
File "./theories/Modalities/ReflectiveSubuniverse.v", line 1247, characters 4-46:
Warning: Benchmarking error: Anomaly "Unexpected meta"
Please report at http://coq.inria.fr/bugs/.
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 102, characters 4-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 102, characters 4-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 102, characters 4-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 102, characters 4-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 102, characters 4-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Pseudofunctor/RewriteLaws.v", line 102, characters 4-33:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/InitialTerminalCategory/Functors.v", line 79, characters 4-46:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/stern/stern.v", line 3991, characters 0-16:
Warning: Tactic could not be properly discharged: case  hd: 
(m == NaN)  ; last  apply : (pair_le_lt_trans (negbT hd) hb hc) 
File "./theories/stern/stern.v", line 3991, characters 0-16:
Warning: Tactic could not be properly discharged: case : eqP  => h ; first 
by rewrite (good_pair_prop sa sb h) eqxx
File "./theories/Categories/FunctorCategory/Morphisms.v", line 35, characters 2-18:
Warning: Benchmarking error: Anomaly "Unexpected meta"
Please report at http://coq.inria.fr/bugs/.
File "./theories/PropResizing/Nat.v", line 255, characters 4-43:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
apply hprop_inhabited_contr; intros []
apply hprop_inhabited_contr;
 (intros _tmp_tactician0; (destruct _tmp_tactician0 as []; idtac))

File "./theories/Categories/ExponentialLaws/Law4/Functors.v", line 125, characters 8-269:
Warning: Benchmarking error: Anomaly "Evar ?X32823 was not declared."
Please report at http://coq.inria.fr/bugs/.
File "./theories/Limits/Limit.v", line 121, characters 4-15:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Limits/Limit.v", line 121, characters 4-15:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Limits/Limit.v", line 121, characters 4-15:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Functorish.v", line 22, characters 2-86:
Warning: Benchmarking error: Anomaly "Unexpected meta"
Please report at http://coq.inria.fr/bugs/.
File "./theories/PropResizing/Nat.v", line 656, characters 6-22:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [] [l K]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [];
   (intros _tmp_tactician2;
     (destruct _tmp_tactician2 as [l K]; [ .. | idtac ])))

File "./theories/PropResizing/Nat.v", line 1117, characters 0-16:
Warning:
Tactic could not be properly discharged: apply (equiv_path_graph _ _)^-1 in H
File "./theories/PropResizing/Nat.v", line 1117, characters 0-16:
Warning:
Tactic could not be properly discharged: apply (equiv_path_graph _ _)^-1 in H
File "./theories/PropResizing/Nat.v", line 1117, characters 0-16:
Warning:
Tactic could not be properly discharged: abstract (
intros [[m H]| []]; cbn;
 [ generalize (N_le_eq_or_lt m n (N_lt_le m n H)); intros [H0| Hs]; cbn;
    [ apply Empty_rec; rewrite H0 in H; exact (N_lt_irref n H)
    | apply ap, ap, path_ishprop ]
 | generalize (N_le_eq_or_lt n n (reflexive_N_le n)); intros [H0| Hs];
    [ reflexivity | apply Empty_rec; exact (N_lt_irref n Hs) ] ])
File "./theories/PropResizing/Nat.v", line 1117, characters 0-16:
Warning:
Tactic could not be properly discharged: abstract (
intros [[m H]| []]; cbn;
 [ generalize (N_le_eq_or_lt m n (N_lt_le m n H)); intros [H0| Hs]; cbn;
    [ apply Empty_rec; rewrite H0 in H; exact (N_lt_irref n H)
    | apply ap, ap, path_ishprop ]
 | generalize (N_le_eq_or_lt n n (reflexive_N_le n)); intros [H0| Hs];
    [ reflexivity | apply Empty_rec; exact (N_lt_irref n Hs) ] ])
File "./theories/PropResizing/Nat.v", line 1117, characters 0-16:
Warning:
Tactic could not be properly discharged: abstract (
intros [[m H]| []]; cbn;
 [ generalize (N_le_eq_or_lt m n (N_lt_le m n H)); intros [H0| Hs]; cbn;
    [ apply Empty_rec; rewrite H0 in H; exact (N_lt_irref n H)
    | apply ap, ap, path_ishprop ]
 | generalize (N_le_eq_or_lt n n (reflexive_N_le n)); intros [H0| Hs];
    [ reflexivity | apply Empty_rec; exact (N_lt_irref n Hs) ] ])
File "./theories/PropResizing/Nat.v", line 1117, characters 0-16:
Warning:
Tactic could not be properly discharged: abstract (
intros [m H]; cbn; generalize (N_le_eq_or_lt m n H); intros [H0| Hs]; cbn;
 [ apply path_sigma_hprop; symmetry; assumption | apply ap, path_ishprop ])
File "./theories/Categories/Category/Paths.v", line 183, characters 6-16:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros []
intros _tmp_tactician0; (destruct _tmp_tactician0 as []; idtac)

File "./theories/Categories/Functor/Paths.v", line 69, characters 4-17:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Functor/Paths.v", line 69, characters 4-17:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Functor/Paths.v", line 69, characters 4-17:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Fibrations.v", line 97, characters 2-237:
Warning: Benchmarking error: Anomaly "Unexpected meta"
Please report at http://coq.inria.fr/bugs/.
File "./theories/Fibrations.v", line 118, characters 4-32:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[] []]; reflexivity
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 _tmp_tactician4];
   [ ..
   | destruct _tmp_tactician2 as []; (destruct _tmp_tactician4 as []; idtac) ]);
 reflexivity

File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Categories/Functor/Paths.v", line 128, characters 6-16:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros []
intros _tmp_tactician0; (destruct _tmp_tactician0 as []; idtac)

File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 71, characters 4-57:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/Data/Functor/Yoneda.v", line 40, characters 0-40:
Warning: Require inside a module is deprecated and strongly discouraged. You
can Require a module at toplevel and optionally Import it inside another one.
[require-in-module,deprecated]
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Types/Sum.v", line 336, characters 6-23:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[a| b] p]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 p];
   [ .. | destruct _tmp_tactician2 as [a| b]; [ .. | idtac | idtac ] ])

File "./theories/Types/Sum.v", line 359, characters 6-23:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[a| b] p]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 p];
   [ .. | destruct _tmp_tactician2 as [a| b]; [ .. | idtac | idtac ] ])

File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/OptimizerStep.v", line 147, characters 4-44:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/Data/Functor/Yoneda.v", line 182, characters 0-40:
Warning: Require inside a module is deprecated and strongly discouraged. You
can Require a module at toplevel and optionally Import it inside another one.
[require-in-module,deprecated]
File "./theories/stern/fibm.v", line 5102, characters 7-44:
Warning:
Benchmarking error: Anomaly
                    "File "pretyping/evarconv.ml", line 144, characters 33-39: Assertion failed."
Please report at http://coq.inria.fr/bugs/.
File "./theories/Diagrams/Diagram.v", line 193, characters 0-12:
Warning: Tactic could not be properly discharged: apply comm_square_inverse
File "./src/Control/Category.v", line 108, characters 0-41:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope category_scope.". [undeclared-scope,deprecated]
File "./src/Control/Category.v", line 146, characters 0-33:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 147, characters 0-34:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 149, characters 0-39:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 150, characters 0-112:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 199, characters 34-91:
Warning: Ignoring implicit status of product binder Z and following binders
[ignoring_implicit_status,implicits]
File "./src/Control/Category.v", line 200, characters 34-91:
Warning: Ignoring implicit status of product binder Z and following binders
[ignoring_implicit_status,implicits]
File "./src/Control/Category.v", line 212, characters 0-23:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 213, characters 0-23:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 214, characters 0-21:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 215, characters 0-23:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 216, characters 0-17:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 217, characters 0-18:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 218, characters 0-22:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 219, characters 0-21:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 220, characters 0-22:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./theories/Types/Sum.v", line 461, characters 4-21:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[a| b] p]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 p];
   [ .. | destruct _tmp_tactician2 as [a| b]; [ .. | idtac | idtac ] ])

File "./theories/Types/Sum.v", line 496, characters 4-21:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[a| b] p]
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 p];
   [ .. | destruct _tmp_tactician2 as [a| b]; [ .. | idtac | idtac ] ])

File "./theories/Types/Sum.v", line 709, characters 4-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[b| c] a]; reflexivity
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 a];
   [ .. | destruct _tmp_tactician2 as [b| c]; [ .. | idtac | idtac ] ]);
 reflexivity

File "./theories/Types/Sum.v", line 738, characters 4-34:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[a| b] c]; reflexivity
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 c];
   [ .. | destruct _tmp_tactician2 as [a| b]; [ .. | idtac | idtac ] ]);
 reflexivity

File "./theories/stern/fibm.v", line 5842, characters 7-36:
Warning:
Benchmarking error: Anomaly
                    "File "pretyping/evarsolve.ml", line 74, characters 9-15: Assertion failed."
Please report at http://coq.inria.fr/bugs/.
File "./src/Control/Monad/Indexed.v", line 374, characters 0-39:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope imonad_scope.". [undeclared-scope,deprecated]
File "./src/Control/Category.v", line 533, characters 0-23:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 534, characters 0-23:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 535, characters 0-21:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 536, characters 0-23:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 537, characters 0-17:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 538, characters 0-18:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 539, characters 0-22:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 540, characters 0-21:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Control/Category.v", line 541, characters 0-22:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./theories/Spaces/Int/Spec.v", line 155, characters 2-22:
Warning: Benchmarking error: Forked process exited with code 1
File "./src/Data/List.v", line 1094, characters 0-40:
Warning: Require inside a module is deprecated and strongly discouraged. You
can Require a module at toplevel and optionally Import it inside another one.
[require-in-module,deprecated]
File "./theories/Types/Prod.v", line 308, characters 4-31:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros [[] x]; reflexivity
intros _tmp_tactician0;
 (destruct _tmp_tactician0 as [_tmp_tactician2 x];
   [ .. | destruct _tmp_tactician2 as []; idtac ]); reflexivity

File "./src/Data/List.v", line 1129, characters 2-28:
Warning: Unused introduction pattern: u [unused-intro-pattern,tactics]
File "./src/Data/List.v", line 1129, characters 2-28:
Warning: Unused introduction pattern: u [unused-intro-pattern,tactics]
File "./src/spec/spec/properties.v", line 134, characters 7-31:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/spec/properties.v", line 169, characters 7-34:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/spec/properties.v", line 175, characters 7-18:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/spec/properties.v", line 270, characters 2-13:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/spec/properties.v", line 374, characters 7-19:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/spec/properties.v", line 443, characters 7-26:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/spec/properties.v", line 452, characters 0-11:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./src/spec/spec/properties.v", line 598, characters 7-18:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/Basics/Overture.v", line 250, characters 2-18:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
intros H ? ? []
intros H;
 (intros ?;
   (intros ?;
     (intros _tmp_tactician0; (destruct _tmp_tactician0 as []; idtac))))

File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/Control/Applicative.v", line 50, characters 0-40:
Warning: Require inside a module is deprecated and strongly discouraged. You
can Require a module at toplevel and optionally Import it inside another one.
[require-in-module,deprecated]
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./theories/CeresS.v", line 23, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope sexp_scope.". [undeclared-scope,deprecated]
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/ssrextra/nat.v", line 28, characters 7-19:
Warning:
Benchmarking error: Anomaly
                    "Uncaught exception Tactician_api_plugin.Neural_learner.NoSuchTactic."
Please report at http://coq.inria.fr/bugs/.
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1344, characters 6-25:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 1480, characters 6-83:
Warning: Tactician's tactical decomposition crashed. Please report.
File "./compiler/core/Utils/ListAdd.v", line 1488, characters 6-78:
Warning: Tactician's tactical decomposition crashed. Please report.
File "./theories/CeresString.v", line 35, characters 0-41:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope compare_scope.". [undeclared-scope,deprecated]
File "./theories/CeresString.v", line 77, characters 0-37:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope char2_scope.". [undeclared-scope,deprecated]
File "./theories/CeresString.v", line 138, characters 2-62:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
induction s1; intros []; split; intro H; try discriminate
try intros until s1; <recording::with_runtime_info@0>
 <genarg:wit_runtime_info>;
 (intros _tmp_tactician0; (destruct _tmp_tactician0 as []; idtac)); split;
 intros H; try discriminate

File "./theories/CeresString.v", line 391, characters 0-41:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope dstring_scope.". [undeclared-scope,deprecated]
File "./compiler/core/Utils/ListAdd.v", line 2182, characters 6-27:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2182, characters 6-27:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/ZLib.v", line 160, characters 2-18:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/Ltac.v", line 26, characters 0-26:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Ltac.v", line 31, characters 0-27:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./src/Ltac.v", line 37, characters 0-24:
Warning: Adding and removing hints in the core database implicitly is
deprecated. Please specify a hint database.
[implicit-core-hint-db,deprecated]
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 27, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope word_scope.". [undeclared-scope,deprecated]
File "./src/bbv/Word.v", line 170, characters 2-232:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, Nat.eq_dec) Please report.
File "./src/bbv/Word.v", line 174, characters 2-184:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto) Please report.
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/NatLib.v", line 197, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/NatLib.v", line 197, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 27, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope word_scope.". [undeclared-scope,deprecated]
File "./src/bbv/Word.v", line 170, characters 2-232:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, Nat.eq_dec) Please report.
File "./src/bbv/Word.v", line 174, characters 2-184:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto) Please report.
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./compiler/core/Utils/ListAdd.v", line 2224, characters 6-45:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 27, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope word_scope.". [undeclared-scope,deprecated]
File "./src/bbv/Word.v", line 170, characters 2-232:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, Nat.eq_dec) Please report.
File "./src/bbv/Word.v", line 174, characters 2-184:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto) Please report.
File "./src/bbv/Word.v", line 27, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope word_scope.". [undeclared-scope,deprecated]
File "./src/bbv/Word.v", line 170, characters 2-232:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, Nat.eq_dec) Please report.
File "./src/bbv/Word.v", line 174, characters 2-184:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto) Please report.
File "./src/bbv/Word.v", line 27, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope word_scope.". [undeclared-scope,deprecated]
File "./src/bbv/Word.v", line 170, characters 2-232:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, Nat.eq_dec) Please report.
File "./src/bbv/Word.v", line 174, characters 2-184:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto) Please report.
File "./src/bbv/Word.v", line 27, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope word_scope.". [undeclared-scope,deprecated]
File "./src/bbv/Word.v", line 170, characters 2-232:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, Nat.eq_dec) Please report.
File "./src/bbv/Word.v", line 174, characters 2-184:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto) Please report.
File "./src/bbv/Word.v", line 27, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope word_scope.". [undeclared-scope,deprecated]
File "./src/bbv/Word.v", line 170, characters 2-232:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, Nat.eq_dec) Please report.
File "./src/bbv/Word.v", line 174, characters 2-184:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto) Please report.
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 27, characters 0-35:
Warning: Declaring a scope implicitly is deprecated; use in advance an
explicit "Declare Scope word_scope.". [undeclared-scope,deprecated]
File "./src/bbv/Word.v", line 170, characters 2-232:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, Nat.eq_dec) Please report.
File "./src/bbv/Word.v", line 174, characters 2-184:
Warning:
Tactician detected a printing/parsing problem for the following tactic. let y' := constr:y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto) Please report.
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 7375, characters 4-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct P as [[k P] _]
try intros until P;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [k P];
      [ .. | idtac; try clear _tmp_tactician2 ] ])

File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 7375, characters 4-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct P as [[k P] _]
try intros until P;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [k P];
      [ .. | idtac; try clear _tmp_tactician2 ] ])

File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 7375, characters 4-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct P as [[k P] _]
try intros until P;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [k P];
      [ .. | idtac; try clear _tmp_tactician2 ] ])

File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 6328, characters 2-9:
Warning: Invalid term detected due to https://github.com/coq/coq/issues/17295
File "./src/bbv/Word.v", line 7375, characters 4-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct P as [[k P] _]
try intros until P;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [k P];
      [ .. | idtac; try clear _tmp_tactician2 ] ])

File "./src/bbv/Word.v", line 7375, characters 4-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct P as [[k P] _]
try intros until P;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [k P];
      [ .. | idtac; try clear _tmp_tactician2 ] ])

File "./src/bbv/Word.v", line 7375, characters 4-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct P as [[k P] _]
try intros until P;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [k P];
      [ .. | idtac; try clear _tmp_tactician2 ] ])

File "./src/bbv/Word.v", line 7375, characters 4-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct P as [[k P] _]
try intros until P;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [k P];
      [ .. | idtac; try clear _tmp_tactician2 ] ])

File "./src/bbv/Word.v", line 7375, characters 4-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct P as [[k P] _]
try intros until P;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [k P];
      [ .. | idtac; try clear _tmp_tactician2 ] ])

File "./src/bbv/Word.v", line 7375, characters 4-29:
Warning:
Tactician found a bug in it's tactical decomposition. Please report.
destruct P as [[k P] _]
try intros until P;
 (<recording::with_runtime_info@0> <genarg:wit_runtime_info>;
   [ ..
   | destruct _tmp_tactician0 as [k P];
      [ .. | idtac; try clear _tmp_tactician2 ] ])

