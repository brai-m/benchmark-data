coq-bbv.1.3	bbv.DepEqNat.nat_cast	300	0.066170	158	40	3.5.1	synth with cache (only 1: revert m; only 1: inversion 1; only 1: trivial).
coq-printf.2.0.0	Printf.Flags.option_identity	300	0.005133	2	1	1	synth with cache (only 1: trivial).
coq-haskell.1.0.0	Hask.Ssr.and_swap	300	0.254832	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-ceres.0.4.0	Ceres.CeresUtils.app_cons_assoc	300	2.647199	11104	259	4.99	synth with cache (only 1: rewrite <- app_assoc; only 1: f_equal).
coq-bbv.1.3	bbv.DepEq.eq_rect_word_offset_helper	300	0.008736	3	3	0.0.0	synth with cache (only 1: intros x y z; only 1: symmetry; only 1: auto).
coq-bbv.1.3	bbv.DepEq.existT_eq_rect	300	0.028457	67	13	0.4.3	synth with cache (only 1: intros A x y z H1 H2; only 1: subst; only 1: reflexivity).
coq-bbv.1.3	bbv.DepEq.eq_rect_nat_double	300	4.193115	3186	477	1.6.5.1.8.3	synth with cache (only 1: intros n IH a b Ha H; only 1: destruct H; only 1: simpl; only 1: intro H; only 1: destruct H; only 1: reflexivity).
coq-bbv.1.3	bbv.DepEq.eq_rect_existT_eq	300	3.573115	4338	1302	4.1.6.3	synth with cache (only 1: intros A eq_dec; only 1: intros; only 1: subst; only 1: firstorder).
coq-hott.8.11	HoTT.Idempotents.qidem_idmap	300	1.237043	410	31	0.0.0.25	synth with cache (only 1: unshelve econstructor; only 1: exists idmap; only 1: exact _; only 1: exact _).
coq-hott.8.11	HoTT.HIT.V.AssumingUA.mem	300	4.128257	918	203	5.2.13	synth with cache (only 1: unshelve econstructor; only 1: exact Unit; only 1: exact _).
coq-poltac.0.8.11	PolTac.ZAux.Zplus_eq_compat_l	300	0.012987	4	4	0.0.0.0	synth with cache (only 1: intros x y z; only 1: symmetry; only 1: subst; only 1: trivial).
coq-poltac.0.8.11	PolTac.ZAux.Zplus_neg_compat_l	300	0.211251	62	13	3.4	synth with cache (only 1: intros n m p; only 1: intuition).
coq-poltac.0.8.11	PolTac.ZAux.Zplus_neg_reg_l	300	0.020996	8	5	0.0.2.1.0	synth with cache (only 1: intros a b c H H1; only 1: case H; only 1: apply f_equal2 with (f := Z.add); only 1: trivial; only 1: trivial).
coq-poltac.0.8.11	PolTac.ZAux.Zplus_ge_reg_l	300	0.124980	109	28	0.1.6	synth with cache (only 1: intros n m p; only 1: Z.swap_greater; only 1: apply Z.add_le_mono_l).
coq-poltac.0.8.11	PolTac.ZAux.Zle_sign_pos_pos	300	0.015377	8	4	0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: Z.order; only 1: Z.order).
coq-poltac.0.8.11	PolTac.ZAux.Zopp_le	300	0.101553	73	15	8	synth with cache (only 1: auto with *).
coq-poltac.0.8.11	PolTac.ZAux.Zplus_ge_compat_l	300	1.704104	1462	280	0.0.18	synth with cache (only 1: intros n m p; only 1: Z.swap_greater; only 1: apply Z.add_le_mono_l).
coq-poltac.0.8.11	PolTac.ZAux.Zlt_sign_pos_pos	300	0.028318	21	5	1.2	synth with cache (only 1: intros a b Ha Hb; only 1: Z.order_pos).
coq-poltac.0.8.11	PolTac.ZAux.Zlt_sign_neg_neg	300	1.115241	1150	205	1.0.1.0.1.2.4.1	synth with cache (only 1: intros; only 1: replace (x * y) with (- x * - y); only 1: apply Z.mul_pos_pos; only 1: rewrite ?Z.opp_pos_neg; only 1: trivial; only 1: rewrite ?Z.opp_pos_neg; only 1: trivial; only 1: ring).
coq-poltac.0.8.11	PolTac.ZAux.Zge_neg_pos	300	0.012157	1	1	0	synth with cache (only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zge_sign_neg_pos	300	0.187101	72	31	0.0.1.2.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Zle_pos_neg; only 1: replace (- (x * y)) with (- x * y); only 1: auto with zarith; only 1: ring).
coq-poltac.0.8.11	PolTac.ZAux.Zle_pos_neg	300	2.124343	3037	446	21	synth with cache (only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zge_sign_pos_pos	300	0.345691	277	73	7.1.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zgt_sign_neg_neg	300	0.030389	5	4	1.0.0.0	synth with cache (only 1: intros; only 1: replace (x * y) with (- x * - y); only 1: auto with zarith; only 1: ring).
coq-poltac.0.8.11	PolTac.ZAux.Zgt_neg_pos	300	0.011991	1	1	0	synth with cache (only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zge_sign_pos_neg	300	0.723028	615	148	1.0.0.7.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Zle_pos_neg; only 1: replace (- (x * y)) with (x * - y); only 1: auto with zarith; only 1: ring).
coq-poltac.0.8.11	PolTac.NatGroundTac.le_correct	300	0.288130	277	77	0.11	synth with cache (only 1: intros a b; only 1: apply Nat.leb_le).
coq-poltac.0.8.11	PolTac.NatGroundTac.lt_correct	300	0.018724	1	1	0	synth with cache (only 1: now induction n; destruct m; auto with arith).
coq-poltac.0.8.11	PolTac.ZAux.Zgt_sign_pos_neg	300	1.634818	1074	432	1.1.0.1.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: apply Zlt_pos_neg; only 1: replace (- (x * y)) with (x * - y); only 1: apply Z.mul_pos_pos; only 1: auto with zarith; only 1: rewrite ?Z.opp_pos_neg; only 1: auto with zarith; only 1: ring).
coq-poltac.0.8.11	PolTac.ZAux.Zlt_sign_neg_pos	300	3.274298	2290	908	1.0.0.3.3.1.0	synth with cache (only 1: intros; only 1: apply Zlt_pos_neg; only 1: replace (- (x * y)) with (- x * y); only 1: apply Z.mul_pos_pos; only 1: auto with zarith; only 1: trivial; only 1: ring).
coq-poltac.0.8.11	PolTac.ZAux.Zgt_sign_neg_pos	300	2.170180	1408	491	1.1.0.2.0.1.2.0	synth with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: apply Zlt_pos_neg; only 1: replace (- (x * y)) with (- x * y); only 1: apply Z.mul_pos_pos; only 1: auto with zarith; only 1: auto with zarith; only 1: ring).
coq-poltac.0.8.11	PolTac.ZAux.Zlt_sign_pos_pos_rev	300	0.745177	304	116	1.7	synth with cache (only 1: intros n m; only 1: apply Z.mul_pos_cancel_l).
coq-poltac.0.8.11	PolTac.ZAux.Zlt_sign_pos_neg_rev	300	0.890951	567	249	0.0.0.0.2.1.1.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases 0 y); only 1: intros H3; only 1: absurd (0 <= x * y); only 1: apply Zlt_not_le; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zge_sign_neg_neg	300	6.211999	3244	669	0.0.16.1.0	synth with cache (only 1: intros; only 1: replace (x * y) with (- x * - y); only 1: Z.swap_greater; only 1: auto with zarith; only 1: ring).
coq-poltac.0.8.11	PolTac.ZAux.Zge_sign_pos_pos_rev	300	6.493179	4815	1501	0.0.3.0.1.2.1.0.2.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases 0 y); only 1: auto with zarith; only 1: intros H3; only 1: absurd (0 <= x * y); only 1: apply Zlt_not_le; only 1: apply Zlt_sign_pos_neg; only 1: auto with zarith; only 1: auto; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zgt_sign_pos_neg_rev	300	1.212141	715	303	0.0.0.2.0.1.1.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases 0 y); only 1: intros H3; only 1: absurd (x * y < 0); only 1: apply Zle_not_lt; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zge_sign_neg_pos_rev	300	8.313081	6084	1979	0.0.3.3.1.2.1.0.0.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases 0 y); only 1: auto with zarith; only 1: intros H3; only 1: absurd (x * y <= 0); only 1: apply Zlt_not_le; only 1: apply Zlt_sign_neg_neg; only 1: auto with zarith; only 1: auto; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zge_sign_neg_neg_rev	300	9.282894	6593	2322	0.0.6.1.0.1.1.0.1.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases y 0); only 1: auto with zarith; only 1: intros H3; only 1: absurd (0 <= x * y); only 1: apply Zlt_not_le; only 1: apply Zlt_sign_neg_pos; only 1: auto with zarith; only 1: auto; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zopp_lt	300	0.104648	111	19	5.3	synth with cache (only 1: intros x y H; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zgt_sign_pos_pos_rev	300	8.304925	6100	2228	0.2.1.1.0.0.3.1.1.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases y 0); only 1: intros H3; only 1: absurd (x * y <= 0); only 1: apply Zlt_not_le; only 1: auto with zarith; only 1: apply Zle_sign_pos_neg; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zopp_ge	300	0.015941	9	2	1	synth with cache (only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zge_sign_pos_neg_rev	300	10.762106	7391	2555	0.0.1.4.1.0.2.1.0.0.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases y 0); only 1: auto with zarith; only 1: intros H3; only 1: absurd (x * y <= 0); only 1: apply Zlt_not_le; only 1: apply Zlt_sign_pos_pos; only 1: elim (Z.compare_eq_iff x y); only 1: intuition; only 1: auto; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zopp_gt	300	0.017850	9	2	1	synth with cache (only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zgt_sign_neg_pos_rev	300	8.236367	6736	2235	0.0.2.2.2.2.0.1.0.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases y 0); only 1: intros H3; only 1: absurd (x * y < 0); only 1: apply Zle_not_lt; only 1: apply Zle_sign_neg_neg; only 1: auto with zarith; only 1: auto; only 1: auto with zarith; only 1: auto with zarith).
coq-poltac.0.8.11	PolTac.ZAux.Zgt_sign_neg_neg_rev	300	13.683995	8903	3259	0.0.2.2.3.1.0.1.1.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases 0 y); only 1: intros H3; only 1: absurd (0 < x * y); only 1: apply Zle_not_lt; only 1: apply Zle_sign_neg_pos; only 1: auto with zarith; only 1: auto; only 1: auto with zarith; only 1: auto with zarith).
coq-bbv.1.3	bbv.HexNotation.Unnamed_thm1	300	0.006707	1	1	0	synth with cache (only 1: reflexivity).
coq-bbv.1.3	bbv.HexNotation.Unnamed_thm3	300	0.007870	1	1	0	synth with cache (only 1: reflexivity).
coq-bbv.1.3	bbv.HexNotation.Unnamed_thm4	300	0.005067	1	1	0	synth with cache (only 1: reflexivity).
coq-bbv.1.3	bbv.BinNotation.Unnamed_thm	300	0.008027	1	1	0	synth with cache (only 1: reflexivity).
coq-bbv.1.3	bbv.BinNotation.Unnamed_thm0	300	0.007849	1	1	0	synth with cache (only 1: reflexivity).
coq-bbv.1.3	bbv.BinNotation.Unnamed_thm2	300	0.012951	2	2	0.0	synth with cache (only 1: vm_compute; only 1: easy).
coq-hott.8.11	HoTT.Classes.theory.ua_second_isomorphism.second_isomorphism.isomorphic_second_isomorphism	300	60.011029	60877	5609	0.1.0.0.35.49	synth with cache (only 1: unfold cong_trace; only 1: econstructor; only 1: intro u; only 1: apply isequiv_surj_emb; only 1: exact _; only 1: exact _).
coq-ceres.0.4.0	Ceres.CeresString.eqb_eq_bool	300	0.010485	5	3	0.1.1	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply eqb_true_iff).
coq-ceres.0.4.0	Ceres.CeresString.eqb_eq_bool'	300	1.611562	3884	315	0.1.0.14.10.1.13.6	synth with cache (only 1: destruct (Bool.eqb _ _) eqn:H; only 1: revert H; only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: right; only 1: apply eqb_false_iff; only 1: auto).
coq-hott.8.11	HoTT.HIT.epi.AssumingUA.isepi_isequiv	300	89.375587	26002	9734	0.1.0.2.1.0.2.1.0.0.2.0.0.0	synth with cache (only 1: intros ? g h H'; only 1: apply path_forall; only 1: intro y; only 1: pose (center (merely (hfiber f y))); only 1: apply Trunc_rec; only 1: intros [x p]; only 1: pose (center (merely (hfiber f y))); only 1: transitivity (g (f x)); only 1: by apply ap; only 1: transitivity (h (f x)); only 1: apply ap10 in H'; only 1: auto with path_hints; only 1: by apply ap; only 1: assumption).
coq-bbv.1.3	bbv.BinNotationZ.Unnamed_thm	300	0.013809	3	2	0.1	synth with cache (only 1: simpl; only 1: reflexivity).
coq-poltac.0.8.11	PolTac.ZAux.Zle_sign_pos_pos_rev	300	44.919117	53165	4761	17.32	synth with cache (only 1: intros a r; only 1: apply Z.div_le_upper_bound).
coq-poltac.0.8.11	PolTac.ZAux.Zmult_lt_compat_l_rev	300	3.286318	1822	495	11.3	synth with cache (only 1: intros p n m; only 1: apply Z.mul_lt_mono_pos_l).
coq-printf.2.0.0	Printf.Justify.take_spec	300	1.716602	2759	276	21.1.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: now f_equal).
coq-printf.2.0.0	Printf.Justify.replicate_uniform	300	0.674879	1217	185	2.3.0.11.1	synth with cache (only 1: intro n; only 1: induction n; only 1: induction n; only 1: constructor; only 1: easy).
coq-printf.2.0.0	Printf.Justify.replicate_length	300	0.415180	378	98	1.0.0.6.2	synth with cache (only 1: intros a n; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now Morphisms.f_equiv).
coq-printf.2.0.0	Printf.Justify.length_sn	300	0.004601	1	1	0	synth with cache (only 1: reflexivity).
coq-bbv.1.3	bbv.N_Z_nat_conversions.N_to_Z_to_nat	300	0.072469	44	21	0.0.0.0.1.3	synth with cache (only 1: intros; only 1: destruct a as [| [p| p| ]]; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: reflexivity).
coq-haskell.1.0.0	Hask.Ltac.ltn_leq_trans	300	0.013208	10	3	1	synth with cache (only 1: PeanoNat.Nat.order).
coq-haskell.1.0.0	Hask.Ltac.comp_id_left	300	0.008575	2	2	0.0	synth with cache (only 1: intros z n H; only 1: auto).
coq-haskell.1.0.0	Hask.Ltac.comp_id_right	300	0.004353	1	1	0	synth with cache (only 1: reflexivity).
coq-haskell.1.0.0	Hask.Ltac.uncompose	300	0.005549	2	1	1	synth with cache (only 1: reflexivity).
coq-poltac.0.8.11	PolTac.ZAux.Zmult_gt_neg_compat_l	300	48.753727	43782	5637	1.1.0.1.1.1.1.2.3.17.2	synth with cache (only 1: intros n m p H; only 1: Z.swap_greater; only 1: intros; only 1: replace (p * n) with (- (- p * n)); only 1: replace (p * m) with (- (- p * m)); only 1: apply Zopp_lt; only 1: apply Zmult_lt_compat_l; only 1: auto with zarith; only 1: trivial; only 1: ring; only 1: ring).
coq-haskell.1.0.0	Hask.Data.Tuple.uncurry_works	300	0.008309	6	2	3.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-haskell.1.0.0	Hask.Data.Tuple.fst_snd	300	0.016825	16	4	0.6	synth with cache (only 1: intros H1 H2 (p, Hp); only 1: auto).
coq-haskell.1.0.0	Hask.Data.Tuple.TupleLaws.prod_map_id	300	2.765072	18864	332
coq-haskell.1.0.0	Hask.Data.Tuple.TupleLaws.prod_map_comp	300	0.351181	863	68	0.2.17.12	synth with cache (only 1: vm_compute; only 1: apply functional_extensionality_dep_good; only 1: destruct x; only 1: auto).
coq-haskell.1.0.0	Hask.Data.Tuple.TupleLaws.prod_map_comp_x	300	0.007448	2	2	0.0	synth with cache (only 1: destruct x; only 1: auto).
coq-poltac.0.8.11	PolTac.ZAux.Zmult_ge_compat_l_rev	300	17.906370	12084	4094	0.2.1.0.4.1.0.0.5.0	synth with cache (only 1: intros n m p H H1; only 1: apply Z.le_ge; only 1: case (Z.le_gt_cases m n); only 1: auto; only 1: intros H2; only 1: absurd (p * n < p * m); only 1: auto with zarith; only 1: apply Zmult_lt_compat_l; only 1: auto with zarith; only 1: trivial).
coq-poltac.0.8.11	PolTac.ZAux.Zmult_gt_compat_l_rev	300	1.530902	801	294	2.0.0.2.1.1.0	synth with cache (only 1: intros n m p H H1; only 1: case (Z.le_gt_cases n m); only 1: intros H2; only 1: absurd (p * n <= p * m); only 1: auto with zarith; only 1: auto with zarith; only 1: now Z.swap_greater).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_refl	300	2.974408	2261	469	13.6.5	synth with cache (only 1: red; only 1: intro n; only 1: now destruct n).
coq-bbv.1.3	bbv.Nomega.Nneq_in	300	0.514947	527	111	0.0.0.10	synth with cache (only 1: intros ? ? H; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).
coq-poltac.0.8.11	PolTac.ZAux.Zmult_ge_neg_compat_l	300	63.285199	62386	8855	1.1.3.1.1.7.22.0	synth with cache (only 1: intros n m p H1 H2; only 1: apply Z.le_ge; only 1: replace (p * n) with (- (- p * n)); only 1: replace (p * m) with (- (- p * m)); only 1: apply Zopp_le; only 1: auto with zarith; only 1: ring; only 1: ring).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_trans	300	7.388162	5942	1132	0.2.0.0.0.5.0.0.2.10	synth with cache (only 1: intros x y z H; only 1: revert z; only 1: eapply N.compare_eq in H; only 1: red; only 1: assert (Some x = Some y); only 1: do 2 rewrite <- Byte.of_to_N; only 1: destruct H; only 1: reflexivity; only 1: injection H0; only 1: congruence).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.lt_not_eq	300	0.403484	284	64	12	synth with cache (only 1: congruence).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_dec	300	0.118431	23	7	0.4	synth with cache (only 1: unfold lt, eq, byte_cmp; only 1: decide equality).
coq-poltac.0.8.11	PolTac.ZAux.Zmult_gt_neg_compat_l_rev	300	8.236102	5292	1701	2.1.0.4.0.2.1.0.0	synth with cache (only 1: intros n m p H H1; only 1: case (Z.le_gt_cases m n); only 1: intros H2; only 1: absurd (p * n <= p * m); only 1: auto with zarith; only 1: apply Zmult_le_neg_compat_l; only 1: trivial; only 1: auto with zarith; only 1: now Z.swap_greater).
coq-bytestring.0.9.0	bedrock.bytestring.byte_cmp_refl	300	1.135992	1257	124	15.3.6	synth with cache (only 1: unfold byte_cmp; only 1: intros q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).
coq-bbv.1.3	bbv.NatLib.mod2_S_double	300	13.419192	15476	2411	10.5.0.16.0	synth with cache (only 1: intros; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: eauto).
coq-bbv.1.3	bbv.NatLib.mod2_double	300	2.178843	3169	685	5.0.0.11.0.2.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rethink).
coq-bbv.1.3	bbv.NatLib.untimes2	300	0.044332	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: now Nat.nzsimpl).
coq-poltac.0.8.11	PolTac.ZAux.Zmult_ge_neg_compat_l_rev	300	25.774153	16508	5440	0.0.0.0.3.1.0.1.8.0	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: case (Z.le_gt_cases n m); only 1: auto; only 1: intros H2; only 1: absurd (p * n < p * m); only 1: auto with zarith; only 1: apply Zmult_lt_neg_compat_l; only 1: auto; only 1: auto).
coq-iris-heap-lang.3.4.0	iris.heap_lang.locations.loc_eq_decision	300	0.013649	2	1	1	synth with cache (only 1: solve_decision).
coq-iris-heap-lang.3.4.0	iris.heap_lang.locations.loc_countable	300	0.915554	1683	51
coq-poltac.0.8.11	PolTac.ZAux.Zle_sign_pos_neg	300	144.531883	101695	7042	0.1.1.4.1.1.0.0.1.0.0.1.0.1.0.1.0.0.38.3	synth with cache (only 1: intros a b; only 1: destruct a, b; only 1: tauto; only 1: simpl; only 1: now try destruct p; only 1: simpl; only 1: now try destruct p; only 1: simpl; only 1: now try destruct p; only 1: intros H; only 1: trivial; only 1: intros H; only 1: trivial; only 1: simpl; only 1: now try destruct p; only 1: intros H; only 1: discriminate; only 1: simpl; only 1: intros H; only 1: trivial).
coq-tlc.20200328	TLC.LibTacticsDemos.IntrovTest.demo_introv_6	300	0.010106	5	3	2.0.0	synth with cache (only 1: introv; only 1: introv; only 1: demo).
coq-tlc.20200328	TLC.LibTacticsDemos.IntrovTest.demo_introv_8	300	0.011232	3	3	0.0.0	synth with cache (only 1: induction 1; only 1: demo; only 1: trivial).
coq-tlc.20200328	TLC.LibTacticsDemos.ArrowTest.demo_arrow_4	300	0.082687	38	38	0.0.1	synth with cache (only 1: introv E; only 1: =>> F; only 1: demo).
coq-tlc.20200328	TLC.LibTacticsDemos.demo_rewrite_all	300	0.283829	158	42	6.0.2	synth with cache (only 1: simpl; only 1: intros; only 1: demo).
coq-tlc.20200328	TLC.LibTacticsDemos.demo_admit	300	0.015419	13	4	0.0.3	synth with cache (only 1: intros n m p; only 1: intros; only 1: now apply Nat.le_lt_trans with m).
coq-iris-heap-lang.3.4.0	iris.heap_lang.locations.loc_add_0	300	47.913655	84155	2412	57.40.89	synth with cache (only 1: revert l; only 1: intros a; only 1: by destruct a as [[] [] [] [] [] [] [] []]).
coq-tlc.20200328	TLC.LibTacticsDemos.demo_specializes_definition_3	300	0.007970	3	2	1.0	synth with cache (only 1: introv M1 M2; only 1: demo).
coq-tlc.20200328	TLC.LibTacticsDemos.demo_exist	300	0.011234	11	2	7	synth with cache (only 1: demo).
coq-qcert.2.2.0	Qcert.Utils.Bag.Bag.remove_one_comm	300	87.952415	25165	2427	8.11.0.5.0.0.5.6.26	synth with cache (only 1: generalize 1%positive; only 1: intros x v l; only 1: induction x; only 1: auto; only 1: auto; only 1: induction x; only 1: reflexivity; only 1: tac; only 1: congruence).
coq-bbv.1.3	bbv.DepEqNat.nat_cast_same	300	303.468875	1989148	180680
coq-bbv.1.3	bbv.DepEqNat.nat_cast_fuse	300	0.155358	442	69	0.3.11.3	synth with cache (only 1: intros; only 1: subst; only 1: rewrite nat_cast_eq_rect; only 1: exact eq_refl).
coq-haskell.1.0.0	Hask.Data.Tuple.unsplit	300	171.768591	470021	27411	1.0.14.12.0.5.9.11.28.36	synth with cache (only 1: intros g c; only 1: compute; only 1: intros l; only 1: generalize dependent l; only 1: induction l as [| a l IHl]; only 1: auto; only 1: f_equal; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: auto; only 1: auto).
coq-bbv.1.3	bbv.ZLib.mod2_cases	300	300.581344	137842	19495
coq-bbv.1.3	bbv.ZLib.mod_pow2_same_bounds	300	0.027707	7	6	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply Z.mod_pos_bound; only 1: apply Z.pow_pos_nonneg; only 1: lia; only 1: trivial).
coq-bbv.1.3	bbv.ZLib.pow2_nonneg	300	0.028129	18	4	0.3	synth with cache (only 1: intros a; only 1: Z.order_pos).
coq-bbv.1.3	bbv.ZLib.pow2_pos	300	0.019878	2	2	0.0	synth with cache (only 1: intros a Ha; only 1: Z.order_pos).
coq-poltac.0.8.11	PolTac.ZAux.Zlt_sign_neg_neg_rev	300	261.109622	138285	43629	0.0.1.0.7.8.2.0.1.2.0	synth with cache (only 1: intros x y H1 H2; only 1: case (Z.le_gt_cases 0 y); only 1: intros H3; only 1: absurd (0 < x * y); only 1: apply Zle_not_lt; only 1: apply Zle_pos_neg; only 1: replace (- (x * y)) with (- x * y); only 1: auto with zarith; only 1: ring; only 1: auto with zarith; only 1: auto with zarith).
coq-bbv.1.3	bbv.NLib.Nlt_dec	300	229.383241	243147	34158	14.46.2.0	synth with cache (only 1: intros n m; only 1: unfold N.le, N.ge; only 1: unfold N.lt, N.gt; only 1: decide equality).
coq-hott.8.11	HoTT.Idempotents.Splitting.nudge_eq	300
coq-qcert.2.2.0	Qcert.Data.Operators.OperatorsUtils.OperatorsUtils.dsum_nil	300	0.007213	1	1	0	synth with cache (only 1: reflexivity).
coq-poltac.0.8.11	PolTac.ZAux.Zle_sign_neg_neg	300	300.616985	260284	34722
coq-poltac.0.8.11	PolTac.ZAux.Zlt_sign_pos_neg	300	300.436046	160060	24754
coq-poltac.0.8.11	PolTac.ZAux.Zle_sign_neg_pos	300	300.734526	262878	54535
coq-poltac.0.8.11	PolTac.ZAux.Zle_sign_neg_neg_rev	300	300.637825	206867	57645
coq-poltac.0.8.11	PolTac.ZAux.Zle_sign_pos_neg_rev	300	300.700566	220543	79969
coq-poltac.0.8.11	PolTac.ZAux.Zle_sign_neg_pos_rev	300	300.714708	239978	74272
coq-hott.8.11	HoTT.Spaces.Torus.TorusHomotopy.Pi1Torus	300	300.207925	68624	15471
coq-poltac.0.8.11	PolTac.ZAux.Zlt_sign_neg_pos_rev	300	300.507472	138880	50109
coq-topology.10.0.1	Topology.TopologicalSpaces.open_empty	300	301.159290	632757	62917
coq-poltac.0.8.11	PolTac.ZAux.Zmult_le_neg_compat_l	300	300.650874	229577	36631
coq-poltac.0.8.11	PolTac.ZAux.Zmult_lt_neg_compat_l	300	300.726308	311397	47341
coq-qcert.2.2.0	Qcert.LambdaNRA.Lang.LambdaNRA.LambdaNRA.Semantics.lambda_nra_eval_map_eq	300	0.021065	6	2	4.0	synth with cache (only 1: simpl in *; only 1: reflexivity).
coq-poltac.0.8.11	PolTac.ZAux.Zmult_le_compat_l_rev	300	301.955887	215171	30144
coq-poltac.0.8.11	PolTac.ZAux.Zmult_le_neg_compat_l_rev	300	300.722600	281702	58176
coq-ceres.0.4.0	Ceres.CeresString.eqb_eq_ascii	300	300.663067	171782	37152
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCEq.cNNRCEq.proper_cNNRCGroupBy	300	0.023063	4	4	0.0.0.0	synth with cache (only 1: unfold Proper, respectful, nnrc_core_eq; only 1: intros; only 1: simpl; only 1: reflexivity).
coq-ceres.0.4.0	Ceres.CeresString.neqb_neq_ascii	300	300.901084	316637	26632
coq-ceres.0.4.0	Ceres.CeresString.eqb_eq_ascii'	300	302.617541	1577578	32438
coq-ceres.0.4.0	Ceres.CeresString.string_app_nil_r	300	0.017244	8	4	0.0.0.4	synth with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal, IHs).
coq-ceres.0.4.0	Ceres.CeresS.eqb_eq_list	300	300.962229	209758	74940
coq-ceres.0.4.0	Ceres.CeresS.eqb_eq_atom	300	301.133692	311847	57780
coq-ceres.0.4.0	Ceres.CeresS.forall_Forall	300	0.027763	29	8	1.5.0	synth with cache (only 1: intros; only 1: apply Forall_forall with (l := xs); only 1: auto with arith).
coq-ceres.0.4.0	Ceres.CeresString.Decidable_eq_ascii	300	301.006786	446982	27899
coq-ceres.0.4.0	Ceres.CeresString.not_string_elem_singleton	300	0.265215	266	56	0.0.9.1	synth with cache (only 1: simpl; only 1: destruct (eqb_eq_ascii' c c'); only 1: now destruct 1 || (intros _; apply NilEmpty.usu); only 1: discriminate + auto).
coq-printf.2.0.0	Printf.Justify.left_justify_padding'	300	300.538344	107162	14205
coq-bytestring.0.9.0	bedrock.bytestring.Bytestring.print_parse_inv	300	300.938732	258128	34433
coq-bbv.1.3	bbv.N_Z_nat_conversions.Nat2Z.inj_pow	300	300.519194	171811	25484
coq-bbv.1.3	bbv.Nomega.nat_of_N_eq	300	300.363938	116734	28351
coq-bbv.1.3	bbv.ZLib.Z_mod_mult'	300	300.652378	324765	53330
coq-bbv.1.3	bbv.Nomega.Nlt_out	300	2.771135	1868	363	0.17.1	synth with cache (only 1: intros a b H; only 1: rewrite <- Nat.compare_lt_iff, <- N2Nat.inj_compare, N.compare_lt_iff; only 1: trivial).
coq-bytestring.0.9.0	bedrock.bytestring.to_N_inj	300	300.759331	136144	20331
coq-bbv.1.3	bbv.ZLib.add_mod_0	300	304.299035	106534	9940
coq-bbv.1.3	bbv.ZLib.mod_add_r	300	300.571068	247444	58672
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_sym	300	300.730990	165091	10818
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_refl	300	0.010681	14	3	4.1	synth with cache (only 1: intros; only 1: now reflexivity).
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_sym	300	0.008716	7	2	5.0	synth with cache (only 1: intros; only 1: auto with *).
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_trans	300	0.447451	573	122	1.7.4.1	synth with cache (only 1: intros; only 1: red; only 1: rewrite <- H0; only 1: auto).
coq-bbv.1.3	bbv.Nomega.Nlt_in	300	9.117360	13467	1870	0.0.18.14	synth with cache (only 1: intros a b; only 1: rewrite <- Nat.compare_lt_iff, <- N2Nat.inj_compare, N.compare_lt_iff; only 1: intros H; only 1: trivial).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.lt_trans	300	300.761154	183658	18438
coq-bbv.1.3	bbv.ZLib.mod_pow2_same_cases	300	301.227527	209120	24718
coq-bbv.1.3	bbv.Nomega.Nneq_out	300	301.210188	504844	57846
coq-bytestring.0.9.0	bedrock.bytestring.byte_cmp_spec	300	300.358774	93119	4719
coq-bbv.1.3	bbv.NatLib.strong.strong'	300	301.354564	634297	38315
coq-tlc.20200328	TLC.LibListSub.Prefix.prefix_cons_inverse	300	300.468886	110713	14734
coq-tlc.20200328	TLC.LibListSub.Prefix.prefix_cons_cons_inverse	300	19.194983	14829	1584	7.0.7.14.6	synth with cache (only 1: introv; only 1: destruct 1; only 1: inverts H; only 1: unfold prefix; only 1: rew_list *).
coq-iris-heap-lang.3.4.0	iris.heap_lang.locations.loc_add_assoc	300	300.251307	39372	1732
coq-tlc.20200328	TLC.LibListSub.Prefix.prefix_concat	300	1.904812	1390	329	0.0.1.13.1	synth with cache (only 1: intros; only 1: inverts H; only 1: rew_list; only 1: unfold prefix; only 1: eauto).
coq-iris-heap-lang.3.4.0	iris.heap_lang.locations.fresh_locs_fresh	300	300.674152	274366	23354
coq-qcert.2.2.0	Qcert.Utils.Bag.Bag.bminus_Forall	300	300.571831	150628	25917
coq-qcert.2.2.0	Qcert.NRA.Context.NRAContext.NRAContext.ac_substs_App	300	0.257862	43	26	0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert c1 c2; only 1: induction ps; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: destruct a; only 1: simpl; only 1: auto).
coq-qcert.2.2.0	Qcert.NRA.Context.NRAContext.NRAContext.ac_simplify_holes_product	300	3.883454	894	516	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl in H; only 1: generalize (ac_simplify_holes_preserved c1); only 1: intros pres1; only 1: generalize (ac_simplify_holes_preserved c2); only 1: intros pres2; only 1: simpl; only 1: do 2 match_destr; only 1: simpl in *; only 1: rewrite <- pres1, <- pres2 in H; only 1: simpl in H; only 1: intuition).
coq-bbv.1.3	bbv.ZLib.pow2_div2	300	300.536011	97767	20081
coq-qcert.2.2.0	Qcert.Translation.Lang.cNNRCtoCAMP.cNNRCtoCAMP.camp_eval_pletIt_eq	300	0.013161	1	1	0	synth with cache (only 1: trivial).
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.array_as_fractional	300	302.654709	693	53
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.array_nil	300	0.015863	1	1	0	synth with cache (only 1: done || apply _).
coq-topology.10.0.1	Topology.TopologicalSpaces.open_union2	300	301.149640	618362	41168
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimp.NNRSimp.Core.ext.nnrs_imp_stmtIsCore_ext	300	301.242094	338717	19875
coq-qcert.2.2.0	Qcert.Translation.Model.EJsonToEJsonMut.EJsonToEJsonMut.ListToNth.list_n_map_comm	300	300.645249	168666	27638
coq-ceres.0.4.0	Ceres.CeresString.eqb_eq_string	300	301.029074	464331	48563
coq-ceres.0.4.0	Ceres.CeresString.Decidable_eq_string	300	300.965593	521203	35108
coq-ceres.0.4.0	Ceres.CeresString.not_string_elem_app	300	300.498396	165070	26395
coq-ceres.0.4.0	Ceres.CeresS.Decidable_eq_atom	300	300.825863	393322	29760
coq-ceres.0.4.0	Ceres.CeresS.sexp__ind	300	302.984507	1740526	52277
coq-printf.2.0.0	Printf.Justify.left_justify_padding	300	300.321447	128533	33096
coq-printf.2.0.0	Printf.Justify.distribute_length	300	0.276476	197	82	1.0.2.1.0.0.3	synth with cache (only 1: induction l; only 1: intros q; only 1: simpl; only 1: reflexivity; only 1: intros n; only 1: simpl; only 1: auto).
coq-bbv.1.3	bbv.N_Z_nat_conversions.Z2Nat.inj_pow	300	300.562546	262078	37239
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.lm	300	300.343870	78582	4935
coq-bbv.1.3	bbv.ZLib.div_mul_undo_le	300	300.684105	327505	86454
coq-bbv.1.3	bbv.ZLib.Z_to_nat_neg	300	0.119965	118	34	3.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.compare	300	300.680263	105654	4776
coq-qcert.2.2.0	Qcert.Data.ModelTyping.TData.subtype.data_type_subtype_prop'	300	2.489929	193	44	16	synth with cache (only 1: auto with *).
coq-bbv.1.3	bbv.ZLib.testbit_true_nonneg	300	301.005434	364879	30490
coq-bbv.1.3	bbv.ZLib.testbit_false_nonneg	300	300.386331	187513	14202
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.lt_trans	300	300.893299	409109	82239
coq-bbv.1.3	bbv.Nomega.Nge_out	300	300.875950	445775	46282
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.lt_not_eq	300	301.310536	742331	51691
coq-bbv.1.3	bbv.ZLib.signed_bounds_to_sz_pos	300	300.765242	278028	51622
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_dec	300	300.710235	292705	26723
coq-bbv.1.3	bbv.NatLib.div2_odd	300	300.547718	186684	26389
coq-qcert.2.2.0	Qcert.Data.ModelTyping.TDBindings.TDBindings.dbindings_type_Forall_normalized	300	49.459952	10994	1784	0.0.0.4.0.32	synth with cache (only 1: induction 1; only 1: trivial; only 1: constructor; only 1: intuition; only 1: qeauto; only 1: trivial).
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TBinaryOperators.TBinaryOperators.forall_typed_bmin	300	1.032544	297	140	0.0.0.1.3.0	synth with cache (only 1: intros; only 1: apply (@TUtil.forall_typed_bminus _); only 1: apply (@TUtil.forall_typed_bminus _); only 1: assumption; only 1: assumption; only 1: assumption).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.nondet_bool.proof.nondet_bool_spec	300	301.824124	17473	1018
coq-bbv.1.3	bbv.NatLib.div2_minus_2	300	64.722660	39719	8757	1.1.0.1.0.3.0.0.0.0.0.0.0.0.1.0.0.1.2	synth with cache (only 1: induction n as [n] using strong; only 1: intros; only 1: do 2 (destruct n; simpl in *; repeat rewrite untimes2 in *; intuition); only 1: destruct k; only 1: simpl in *; only 1: trivial; only 1: destruct k; only 1: simpl in *; only 1: trivial; only 1: destruct k; only 1: trivial; only 1: simpl in *; only 1: auto; only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- plus_n_Sm; only 1: intuition).
coq-qcert.2.2.0	Qcert.Utils.Bag.Bag.MBag.groupby_mult_in_pos	300	300.907670	188269	53155
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCEq.NNRCEq.proper_NNRCGroupBy	300	301.062172	39002	15498
coq-qcert.2.2.0	Qcert.NRA.Context.NRAContext.NRAContext.equivs.substs_bdistinct_domain_rev	300
coq-bbv.1.3	bbv.ZLib.two_digits_encoding_inj_lo	300	300.707598	200521	31579
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.increment.increment_physical.incr_phy_spec	300	301.090714	3904	624
coq-qcert.2.2.0	Qcert.Translation.Lang.NRAtocNNRC.NRAtocNNRC.nra_sem_correct	300	300.612680	231523	27813
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpUsage.NNRSimpUsage.sub.stmt_var_usage_sub_pre	300	300.357196	103659	10153
coq-bits.1.1.0	Bits.ssrextra.tuple.theadCons	300	10.016903	3	2	1.0	synth with cache (only 1: intros x y; only 1: by [  ]).
coq-qcert.2.2.0	Qcert.Translation.Lang.cNNRCtoCAMP.cNNRCtoCAMP.trans_let.fresh_bindings_mapall	300	300.641512	36935	7771
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.array_singleton	300	302.007670	1233	105
coq-topology.10.0.1	Topology.TopologicalSpaces.open_indexed_union	300	300.846274	451015	43107
coq-qcert.2.2.0	Qcert.Imp.Optim.ImpEJsonRewrite.ImpEJsonRewrite.CorrectnessForRewrite.for_body	300	300.450840	69431	3451
coq-bits.1.1.0	Bits.ssrextra.tuple.mapCons	300	301.123067	1453	94
coq-bits.1.1.0	Bits.ssrextra.tuple.zipCons	300	15.544770	21236	1064	85	synth with cache (only 1: exact : val_inj ).
coq-bits.1.1.0	Bits.ssrextra.tuple.nseqCons	300	0.011102	1	1	0	synth with cache (only 1: by apply : eq_from_tnth  => i; rewrite !(tnth_nth a)).
coq-bits.1.1.0	Bits.ssrextra.tuple.catCons	300	0.015549	5	1	4	synth with cache (only 1: by apply : eq_from_tnth  => i; rewrite !(tnth_nth a)).
coq-ceres.0.4.0	Ceres.CeresS.eqb_eq_sexp_	300	301.186162	181744	22808
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.rtype_join_re.rtype_join_Rec_neq_l	300	301.125693	44958	14553
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.rtype_meet_re.rtype_meet_Float_neq_r	300	0.039831	1	1	0	synth with cache (only 1: let rec prover1 := let rec prover_simpler := repeat match goal with | H:(?A <> ?B)%type |- _ => apply rtype_nequal in H; simpl in H | H:?A = ?B -> False |- _ => apply rtype_nequal in H; simpl in H | H:(?x <> ?x)%type |- _ => elim H; trivial | H:?x = ?x -> False |- _ => elim H; trivial end in fun τ => intros; apply rtype_fequal; unfold rtype_join; simpl; (let tt := fresh "τ'" in let tpf := fresh "pf'" in destruct τ as [tt tpf]; destruct tt; simpl; prover_simpler; trivial) in prover1 τ).
coq-printf.2.0.0	Printf.Justify.alternate_max	300	300.410280	185855	58293
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TGroupBy.TGroupBy.typed_group_by_nested_eval_keys_partition_yields_typed_data	300	300.149247	27928	6282
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpRename.NNRSimpRename.involutive.nnrs_imp_stmt_rename_involutive	300	300.396010	51075	12870
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSRename.NNRSRename.rename_id.nnrs_expr_rename_env_id	300	18.774452	3761	358	4.2.2.9.2.5.0.0.1.1.0.39	synth with cache (only 1: induction e; only 1: intuition; only 1: simpl; only 1: repeat (match_destr; try congruence); only 1: eauto  3; only 1: simpl in *; only 1: congruence; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: congruence).
coq-qcert.2.2.0	Qcert.NRAEnv.Typing.TNRAEnvEq.TNRAEnvEq.nraenv_const_tproper	300	0.020924	4	4	0.0.0.0	synth with cache (only 1: unfold Proper, respectful, tnraenv_core_rewrites_to; only 1: intros; only 1: subst; only 1: reflexivity).
coq-bbv.1.3	bbv.NatLib.div2_bound	300	300.917680	374304	53423
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.aec_substs_Unop	300	300.430326	177450	36369
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.aec_substs_Either	300	0.359146	83	47	0.0.0.1.0.0.0.0.0	synth with cache (only 1: revert c1 c2; only 1: induction ps; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: destruct a; only 1: simpl; only 1: auto).
coq-qcert.2.2.0	Qcert.Utils.Bag.Bag.MBag.bags_same_mult_has_equal	300	300.587355	277288	48984
coq-qcert.2.2.0	Qcert.Utils.Bag.Bag.bdistinct_Forall	300	9.746149	5415	1208	2.0.1.0.0.1.0.3.5.0.0.0	synth with cache (only 1: induction l; only 1: eauto; only 1: simpl; only 1: match_destr; only 1: inversion 1; only 1: eauto; only 1: induction l; only 1: eauto; only 1: simpl; only 1: inversion 1; only 1: subst; only 1: intuition).
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvRewrite.ROptimEnv.app_over_unop	300	2.800241	343	186	0.0.1.0.0.0.0.4	synth with cache (only 1: unfold nraenv_core_eq; only 1: intros ? ? _ ? _ ? _; only 1: simpl; only 1: generalize (h ⊢ₑ p2 @ₑ x ⊣ c; env); only 1: intros; only 1: destruct o; only 1: reflexivity; only 1: trivial).
coq-qcert.2.2.0	Qcert.NNRSimp.Typing.TNNRSimpRename.TNNRSimpRename.nnrs_imp_expr_type_rename	300	25.817580	2665	900	0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.4	synth with cache (only 1: split; only 1: intros; only 1: eapply (nnrs_imp_expr_type_rename_in_b Γc nil Γ); only 1: simpl; only 1: tauto; only 1: eauto; only 1: eauto; only 1: eauto; only 1: intros; only 1: apply (nnrs_imp_expr_type_rename_in_f Γc nil Γ); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto; only 1: simpl; only 1: tauto).
coq-qcert.2.2.0	Qcert.Tests.CAMPTest.CAMPTest.R9_verify	300	0.240358	1	1	0	synth with cache (only 1: fast_refl).
coq-qcert.2.2.0	Qcert.Compiler.Trivial.TrivialModel.trivial_foreign_operators_typing_obligation_9	300	0.085600	125	10	16	synth with cache (only 1: tauto).
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedTypeToJSON.enhanced_foreign_type_to_JSON_obligation_2	300	1.293614	644	33	35	synth with cache (only 1: constructor).
coq-qcert.2.2.0	Qcert.Compiler.Trivial.TrivialModel.trivial_foreign_to_reduce_op_obligation_3	300	3.655842	840	56	31	synth with cache (only 1: exact None).
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TOperatorsInfer.TOperatorsInfer.b.infer_merge_tmerge	300	300.846888	38339	6934
coq-bits.1.1.0	Bits.ssrextra.tuple.mapNil	300	300.959560	1561	82
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvRewrite.ROptimEnv.app_over_merge	300	29.685626	3821	1333	0.0.6.1.1.0.0.0	synth with cache (only 1: red; only 1: intros ? ? _ ? _ ? _; only 1: simpl; only 1: generalize (h ⊢ₑ p2 @ₑ x ⊣ c; env); only 1: intros; only 1: destruct o; only 1: trivial; only 1: reflexivity).
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvRewrite.ROptimEnv.flip_env4	300	2.728232	683	230	0.0.2.3.0.0.0	synth with cache (only 1: unfold nraenv_core_eq; only 1: intros ? ? _ ? _ ? _; only 1: simpl; only 1: generalize (h ⊢ₑ p2 @ₑ x ⊣ c; env); only 1: destruct o; only 1: reflexivity; only 1: reflexivity).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.increment.increment.weak_incr_spec	300	300.714481	28663	1137
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TOperatorsInfer.TOperatorsInfer.u.empty_domain_remove	300	4.285927	940	125	19	synth with cache (only 1: now destruct l).
coq-qcert.2.2.0	Qcert.Translation.Lang.NRAtocNNRC.NRAtocNNRC.nra_to_nnrc_core_is_core	300	300.348762	135798	8324
coq-bits.1.1.0	Bits.ssrextra.tuple.beheadCons	300	301.564043	3090	358
coq-bits.1.1.0	Bits.ssrextra.tuple.behead_nseq	300	0.009823	1	1	0	synth with cache (only 1: by apply : eq_from_tnth  => i; rewrite !(tnth_nth a)).
coq-qcert.2.2.0	Qcert.NNRC.Optim.TNNRCRewrite.TNNRCRewrite.tfor_nil_arrow	300	68.238520	8247	1938	1.6.5.1.2.0.0.0	synth with cache (only 1: red; only 1: intros ? ? ? typ1; only 1: split; only 1: nnrc_inverter; only 1: econstructor; only 1: apply dtcoll; only 1: left; only 1: eauto).
coq-qcert.2.2.0	Qcert.NNRC.Optim.TNNRCRewrite.TNNRCRewrite.tflatten_nil_nnrc_arrow	300	1.625102	224	106	0.1.0.0.0.0.0.1	synth with cache (only 1: apply nnrc_rewrites_typed_with_untyped; only 1: red; only 1: trivial; only 1: intros; only 1: unfold nnrc_type, nnrc_eval in *; only 1: simpl in *; only 1: nnrc_core_inverter; only 1: repeat econstructor).
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.array_app	300	301.650455	3864	166
coq-topology.10.0.1	Topology.TopologicalSpaces.open_finite_indexed_intersection	300	301.276903	608701	46743
coq-bits.1.1.0	Bits.ssrextra.tuple.catNil	300	301.022504	1310	65
coq-printf.2.0.0	Printf.Justify.left_justify_length	300	300.585253	210080	30154
coq-printf.2.0.0	Printf.Justify.lemma_replicate	300	0.007864	2	2	0.0	synth with cache (only 1: intros n m H; only 1: split).
coq-printf.2.0.0	Printf.Justify.string_associative	300	0.009017	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-printf.2.0.0	Printf.Justify.take_replicate	300	4.797963	7211	928	4.4.0.4.1.12	synth with cache (only 1: intros a0 a; only 1: intros; only 1: induction s; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-qcert.2.2.0	Qcert.NRA.Typing.TNRAUtil.TNRAUtil.ATdot	300	300.192786	71979	6943
coq-bbv.1.3	bbv.NatLib.two_times_div2_bound	300	300.555505	207434	74065
coq-bbv.1.3	bbv.NatLib.div2_compat_lt_l	300	0.632540	526	125	0.0.0.0.0.1.5.1	synth with cache (only 1: intros ? n H; only 1: case_eq (mod2 n); only 1: intro Heq; only 1: rewrite (div2_odd _ Heq) in H; only 1: lia; only 1: intro Heq; only 1: rewrite (div2_even _ Heq) in H; only 1: lia).
coq-qcert.2.2.0	Qcert.NRA.Optim.TNRARewrite.TNRARewrite.tand_comm_arrow	300	301.016101	37058	6107
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.equivs.aec_substs_proper_part1	300	300.340076	154224	19810
coq-qcert.2.2.0	Qcert.NNRC.Typing.TNNRCStratify.TNNRCStratify.mk_expr_from_vars_stratify_aux_preserves_types_fw	300	300.170159	59639	12798
coq-qcert.2.2.0	Qcert.NRA.Typing.TNRAExt.TNRAExt.typed_nraext_total	300	300.365480	134534	27943
coq-qcert.2.2.0	Qcert.NNRSimp.Typing.TNNRSimp.TNNRSimp.nnrs_imp_stmt_type_impl_free_vars_incl	300	300.450590	112007	11578
coq-qcert.2.2.0	Qcert.Translation.Typing.TcNNRCtoCAMP.TcNNRCtoCAMP.nnrc_to_camp_in	300	21.549599	2955	839	0.0.0.0.1.0.0.1.0.2.0.1.0.0.0	synth with cache (only 1: unfold nnrc_to_camp_env; only 1: unfold domain; only 1: rewrite map_map; only 1: simpl; only 1: repeat rewrite in_map_iff; only 1: split; only 1: intros inn; only 1: destruct inn as [x [xeq xin]]; only 1: subst; only 1: eauto; only 1: intuition; only 1: destruct H as [? [? ?]]; only 1: apply loop_var_inj in H; only 1: subst; only 1: eauto).
coq-qcert.2.2.0	Qcert.Translation.Typing.TcNNRCtoCAMP.TcNNRCtoCAMP.lookup_equiv_perm_nodup	300	1.036504	270	71	1.0.6.0.1	synth with cache (only 1: unfold lookup_equiv; only 1: intros; only 1: apply (@lookup_equiv_perm_nodup _ _); only 1: trivial; only 1: eauto).
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoDNNRC.NNRCtoDNNRC.domain_lookup_none	300	300.516827	100854	8592
coq-bits.1.1.0	Bits.ssrextra.tuple.mapId	300	300.793718	420	38
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.TNRAEnvRewrite.TNRAEnvRewrite.teither_app_over_aleft_arrow	300	300.537322	38310	7743
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.increment.increment_client.incr_client_safe	300	300.286131	3628	462
coq-qcert.2.2.0	Qcert.Translation.Lang.NRAtocNNRC.NRAtocNNRC.Top.nra_to_nnrc_base_top_is_core	300	300.198916	67209	19696
coq-bits.1.1.0	Bits.ssrextra.tuple.splitTuple	300	300.385102	2834	327
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.array_cons	300	300.018964	5679	561
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.TNRAEnvRewrite.TNRAEnvRewrite.tmap_over_either	300	0.660153	41	26	0.0.0.0.0.2.0	synth with cache (only 1: apply rewrites_typed_with_untyped; only 1: unfold nraenv_core_eq; only 1: intros ? ? _ ? _ ? _; only 1: simpl; only 1: match_destr; only 1: intros; only 1: nraenv_core_inferer).
coq-qcert.2.2.0	Qcert.NNRC.Optim.TNNRCRewrite.TNNRCRewrite.tlet_inline_arrow	300	301.702651	24714	4560
coq-topology.10.0.1	Topology.TopologicalSpaces.open_finite_family_intersection	300	300.859709	420980	40597
coq-printf.2.0.0	Printf.Justify.left_padding	300	300.508287	186377	27850
coq-printf.2.0.0	Printf.Justify.drop_replicate	300	5.293644	3741	904	3.0.0.8.7	synth with cache (only 1: intros a n; only 1: induction n; only 1: intros a0; only 1: trivial; only 1: auto).
coq-bbv.1.3	bbv.NatLib.pow2_add_mul	300	300.220821	53544	14553
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.equivs.aec_substs_in_nholes	300	300.715134	247457	14422
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.equivs.nraenv_core_ctxt_equiv_preorder	300	0.712011	201	116	0.0.1.0.0.0.0.0.2	synth with cache (only 1: constructor; only 1: red; only 1: intros; only 1: reflexivity; only 1: red; only 1: intros; only 1: etransitivity; only 1: eauto; only 1: eauto).
coq-qcert.2.2.0	Qcert.NNRC.Typing.TNNRCStratify.TNNRCStratify.stratify_preserves_types	300	300.247376	79313	32284
coq-qcert.2.2.0	Qcert.Translation.Typing.TcNNRCtoCAMP.TcNNRCtoCAMP.fresh_bindings_some	300	300.706531	29957	3861
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoDNNRC.NNRCtoDNNRC.lookup_denv_local	300	300.435436	45597	5226
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSCrossShadow.NNRSCrossShadow.cross_shadow_free_alt.nnrs_stmt_cross_shadow_free_alt_under	300	300.257185	23928	4445
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.update_array	300	301.196036	39199	1163
coq-topology.10.0.1	Topology.TopologicalSpaces.closed_complement_open	300	301.330397	630217	42606
coq-qcert.2.2.0	Qcert.NNRC.Optim.TNNRCRewrite.TNNRCRewrite.tsigma_to_if_arrow	300	301.446818	30779	11442
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.TNRAEnvRewrite.TNRAEnvRewrite.tflatten_through_appenv_arrow	300	302.052945	46622	10049
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRS.NNRCtoNNRS.from_stratified.nnrs_stmt_eval_terminator	300	300.298703	115884	3801
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCOptimizer.NNRCOptimizer.engine.nnrc_map_deep_corretness	300	300.309765	55473	12630
coq-printf.2.0.0	Printf.Justify.right_justify_padding'	300	300.452337	59844	9454
coq-printf.2.0.0	Printf.Justify.right_justify_padding	300	4.888849	4640	1258	0.8.2.2.9.0	synth with cache (only 1: intros; only 1: pose proof (take_spec (replicate a (n - length s)) s) as Ha'; only 1: rewrite replicate_length in Ha'; only 1: unfold right_justify_string; only 1: rewrite Ha'; only 1: apply replicate_uniform).
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.nraenv_map_deep_correctness	300	301.989778	80614	14299
coq-qcert.2.2.0	Qcert.NRA.Typing.TNRA.TNRA.typed_nra_yields_typed_data	300	300.283084	56295	11940
coq-bbv.1.3	bbv.NatLib.mult_pow2_bound	300	300.704080	280661	35270
coq-bbv.1.3	bbv.NatLib.lt_mul_mono'	300	3.877272	2038	379	14.4	synth with cache (only 1: intros x y z; only 1: lia).
coq-bbv.1.3	bbv.NatLib.zero_lt_pow2	300	1.298342	893	175	6.2.1.4.1	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-bbv.1.3	bbv.NatLib.one_le_pow2	300	0.653703	425	98	0.0.0.2.0.0.3.2	synth with cache (only 1: intro n; only 1: induction n; only 1: trivial; only 1: induction n; only 1: Nat.order'; only 1: remember (S n); only 1: simpl; only 1: lia).
coq-bbv.1.3	bbv.NatLib.mul2_add	300	0.149731	14	4	0.3.1	synth with cache (only 1: intros; only 1: Nat.nzsimpl; only 1: now Nat.nzsimpl).
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCRewrite.NNRCRewrite.nnrcproject_over_rec_in	300	301.422113	131525	22536
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRCMR.NNRCtoNNRCMR.nnrcmr_of_nnrc_with_one_free_var_wf	300	300.436884	75635	12661
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoDNNRC.NNRCtoDNNRC.Top.wf_cdenv_rec_sort	300	300.505886	120145	28894
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.Stratified.stratified_correct	300	300.260593	111964	11797
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.Forall_app_iff	300	9.815342	1803	666	0.0.1.9.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: repeat rewrite Forall_forall; only 1: intros Finn; only 1: split; only 1: intros ? inn; only 1: apply Finn; only 1: rewrite in_app_iff; only 1: tauto; only 1: intros ? inn; only 1: apply Finn; only 1: rewrite in_app_iff; only 1: tauto; only 1: intuition; only 1: apply Forall_app; only 1: trivial; only 1: trivial).
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedData.enhanced_foreign_data_obligation_1	300	300.310857	110392	20080
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedData.enhanced_foreign_operators_obligation_4	300	0.626407	389	166	2.3.2	synth with cache (only 1: intros x y; only 1: change ({x = y} + {x <> y}); only 1: repeat decide equality).
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedData.enhanced_foreign_operators_obligation_5	300	0.068764	132	24	8.0	synth with cache (only 1: constructor; only 1: constructor).
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.twp_allocN	300	302.889760	7695	787
coq-topology.10.0.1	Topology.TopologicalSpaces.closed_empty	300	300.568423	252182	36990
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.TNRAEnvRewrite.TNRAEnvRewrite.tmapenv_over_singleton_arrow	300	302.344936	32686	5884
coq-qcert.2.2.0	Qcert.Translation.Lang.DatatoSparkDF.DatatoSparkDF.dataToJS_correctly_escapes_quote_inside_string	300	0.010367	1	1	0	synth with cache (only 1: reflexivity).
coq-qcert.2.2.0	Qcert.NNRC.Optim.TNNRCRewrite.TNNRCRewrite.tnnrcproject_over_concat_recs_in_in	300	301.302302	24227	4162
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCOptimizer.NNRCOptimizer.tnnrc_rewrites_to_trans	300	300.408816	74998	22397
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRS.NNRCtoNNRS.from_stratified.nnrc_stmt_to_nnrs_stmt_aux_assign_eq	300	300.496718	104439	6980
coq-printf.2.0.0	Printf.Justify.right_padding	300	300.616795	267358	42763
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.tmerge_empty_record_r_fun_correctness	300	300.681276	69475	12494
coq-qcert.2.2.0	Qcert.Translation.Typing.TNNRStoNNRSimp.TNNRStoNNRSimp.tnnrs_to_nnrs_imp_correct_b	300	303.362616	84894	8834
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRC.NNRC.Semantics.core_nnrc_to_nnrc_ext_idempotent_corr	300	6.415769	1687	490	0.14.20	synth with cache (only 1: SSCase "v0 = v"%string; only 1: apply core_nnrc_to_nnrc_ext_id; only 1: apply nnrc_to_nnrc_base_is_core).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.clairvoyant_coin.proof.read_coin_spec	300	300.156144	16615	479
coq-bbv.1.3	bbv.NatLib.pow2_bound_mono	300	300.787891	326867	52764
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.Effective.mk_expr_from_vars_stratified	300	300.113871	35255	6769
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.subG_tlockΣ	300	0.054578	1	1	0	synth with cache (only 1: solve_inG).
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_allocN	300	300.241005	13113	1796
coq-topology.10.0.1	Topology.TopologicalSpaces.closed_full	300	301.228251	647281	42724
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCOptimizer.NNRCOptimizer.tunshadow_preserves_fun_correctness	300	300.483280	90227	21131
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.lazy_coin.proof.prophecy_to_bool_of_bool	300	55.217277	18169	324	1.0.123	synth with cache (only 1: destruct b; only 1: reflexivity; only 1: reflexivity).
coq-printf.2.0.0	Printf.Justify.right_justify_length	300	300.300733	124199	25749
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRS.NNRCtoNNRS.Core.nnrc_stmt_to_nnrs_stmt_aux_preserves_core	300	301.349456	42683	4983
coq-qcert.2.2.0	Qcert.Translation.Lang.CAMPtoNRA.CAMPtoNRA.Top.camp_to_nra_top_correct	300	0.244391	412	38	14.3	synth with cache (only 1: intros; only 1: apply camp_trans_correct).
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.tapp_over_unop_fun_correctness	300	300.276752	94329	17268
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRC.NNRC.Semantics.nnrc_to_nnrc_ext_eq	300	300.323855	70254	11231
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.clairvoyant_coin.proof.toss_coin_spec	300	300.155612	16808	1768
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.par.proof.par_spec	300	300.772886	24063	885
coq-qcert.2.2.0	Qcert.Driver.CompDriver.CompDriver.CompDriverConfig.target_language_of_driver_is_postfix_dnnrc_typed	300
coq-bbv.1.3	bbv.NatLib.pow2_inc	300	300.675318	197965	29443
coq-bbv.1.3	bbv.NatLib.pow2_S	300	0.124460	10	3	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-qcert.2.2.0	Qcert.Translation.Lang.CAMPtoNRAEnv.CAMPtoNRAEnv.nraenv_of_camp_correct	300	300.349900	151073	44094
coq-qcert.2.2.0	Qcert.TypeSystem.TBrandModelProp.TBrandModelProp.brands_type_of_canon	300	300.911411	91804	4093
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.FreeVars.mk_expr_from_vars_growing_fv_free_fw	300	300.266149	33182	4618
coq-qcert.2.2.0	Qcert.Translation.Lang.CAMPtocNRAEnv.CAMPtocNRAEnv.Top.camp_to_nraenv_core_top_correct	300	300.522506	170036	35577
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.lock_inv_ne	300	300.344046	119209	30146
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.twp_allocN_vec	300	300.330394	11783	1915
coq-topology.10.0.1	Topology.TopologicalSpaces.closed_intersection2	300	301.059288	529432	42248
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_allocN_vec	300	9.683273	429	183	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: iIntros ( ? Φ ) "_ HΦ"; only 1: iApply (twp_wp_step with "HΦ"); only 1: iApply twp_allocN; only 1: by auto; only 1: by auto; only 1: iIntros ( l ) "H HΦ"; only 1: iApply "HΦ"; only 1: rewrite vec_to_list_replicate; only 1: iFrame; only 1: auto).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.lazy_coin.proof.new_coin_spec	300	301.667698	26978	1566
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCOptimizer.NNRCOptimizer.tfor_singleton_to_let_fun_correctness	300	301.055947	21412	5574
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spawn.subG_spawnΣ	300	0.072220	1	1	0	synth with cache (only 1: solve_inG).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.subG_lockΣ	300	0.074258	1	1	0	synth with cache (only 1: solve_inG).
coq-qcert.2.2.0	Qcert.Translation.Lang.LambdaNRAtoNRAEnv.LambdaNRAtoNRAEnv.lambda_nra_to_nraenv_const_eq	300	0.014466	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.par.proof.wp_par	300	300.350888	15113	1030
coq-bbv.1.3	bbv.NatLib.mod2_S_not	300	301.074456	521549	75208
coq-tlc.20200328	TLC.LibPer.per_empty	300	0.032139	24	11	1.2	synth with cache (only 1: intro n; only 1: easy).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.is_lock_contractive	300	300.243389	55422	9055
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.is_lock_persistent	300	0.247063	63	6	12	synth with cache (only 1: done || apply _).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.locked_timeless	300	8.373117	1	1	0	synth with cache (only 1: done || apply _).
coq-topology.10.0.1	Topology.TopologicalSpaces.closed_family_intersection	300
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.twp_load_offset	300	300.336376	19841	1881
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.twp_array_free	300	300.753920	8074	889
coq-qcert.2.2.0	Qcert.NNRCMR.Lang.NNRCMR.NNRCMR.Semantics.mr_chain_eval_progress	300	300.106481	45664	7463
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.lazy_coin.proof.read_coin_spec	300	300.065409	15356	911
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.wp_array_free	300	40.023134	1468	485	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: iIntros ( Hlen Φ ) "Hl HΦ"; only 1: iInduction vs as [| v vs] "IH" forall ( l n Hlen ); only 1: subst n; only 1: wp_rec; only 1: wp_pures; only 1: iApply "HΦ"; only 1: done; only 1: subst n; only 1: wp_rec; only 1: wp_pures; only 1: iDestruct (array_cons with "Hl") as "[Hv Hl]"; only 1: wp_free; only 1: wp_pures; only 1: iApply ("IH" with "[] Hl"); only 1: eauto with lia; only 1: eauto with lia).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spawn.proof.spawn_inv_ne	300	302.453814	56612	7657
coq-qcert.2.2.0	Qcert.Translation.Lang.OQLtoNRAEnv.OQLtoNRAEnv.correct.nraenv_of_from_clause_correct	300	300.327417	126029	23189
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.locked_exclusive	300	302.364870	1217	92
coq-qcert.2.2.0	Qcert.Translation.Lang.LambdaNRAtoNRAEnv.LambdaNRAtoNRAEnv.Translation.lambda_nra_to_nraenv_never_uses_id	300	300.542344	154884	14670
coq-bbv.1.3	bbv.NatLib.mod2_S_eq	300	300.923851	375291	38681
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.mono_proof.mcounter_persistent	300	132.262606	44	11	10	synth with cache (only 1: done || apply _).
coq-qcert.2.2.0	Qcert.NRAEnv.Lang.NRAEnvEq.NRAEnvEq.proper_NRAEnvBinop	300	300.415586	82916	14493
coq-tlc.20200328	TLC.LibOtherDemos.LibVarDemos.LibVarDemo.test_fresh_solve_6	300	0.013554	3	2	1.0	synth with cache (only 1: introv Fr Eq; only 1: subst ~).
coq-tlc.20200328	TLC.LibOtherDemos.LibVarDemos.LibVarDemo.test_notin_false_by_hand	300	1.833118	700	126	10.1.1	synth with cache (only 1: intros; only 1: introv F; only 1: notin_false).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.locked_exclusive	300	300.677520	23460	1175
coq-topology.10.0.1	Topology.TopologicalSpaces.closed_indexed_intersection	300	300.912822	491398	40897
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.twp_load_offset_vec	300	300.372445	14602	1951
coq-iris-heap-lang.3.4.0	iris.heap_lang.total_adequacy.heap_total	300	302.566973	232	94
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spawn.proof.join_handle_ne	300	8.707318	1	1	0	synth with cache (only 1: solve_proper).
coq-tlc.20200328	TLC.LibEnv.EnvOps.Concrete.empty_def	300	0.006904	4	1	3	synth with cache (only 1: auto).
coq-tlc.20200328	TLC.LibEnv.Properties.map_single	300	0.462162	75	12	0.6.0	synth with cache (only 1: intros; only 1: rew_env_defs; only 1: auto).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.assert.twp_assert	300	301.823894	37129	1224
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.twp_array_copy_to	300	300.462794	31180	2663
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.atomic_heap.derived.cas_spec	300	300.481053	32968	932
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.arith.minimum_spec	300	301.005193	35838	1998
coq-iris-heap-lang.3.4.0	iris.heap_lang.adequacy.subG_heapPreG	300
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.lock_inv_ne	300	0.758324	19	7	2	synth with cache (only 1: solve_proper).
coq-qcert.2.2.0	Qcert.cNRAEnv.Lang.cNRAEnvIgnore.cNRAEnvIgnore.nraenv_core_fixed_env_eq	300	300.539316	140588	30852
coq-tlc.20200328	TLC.LibListZ.Length.length_eq	300	0.015487	4	2	2.0	synth with cache (only 1: intros; only 1: forwards * : remove_duplicates_spec l).
coq-tlc.20200328	TLC.LibListZ.AppInversion.length_neq_inv	300	0.008647	2	2	0.0	synth with cache (only 1: introv N E; only 1: subst *).
coq-tlc.20200328	TLC.LibListZ.Index.index_eq_index_length	300	0.005869	1	1	0	synth with cache (only 1: auto).
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_wp_expr_eval	300	2.844730	6	1	5	synth with cache (only 1: naive_solver).
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_twp_expr_eval	300	2.817794	1	1	0	synth with cache (only 1: by intros ->).
coq-tlc.20200328	TLC.LibFixDemos.LogCompute.log_compute	300	300.280996	101923	10711
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.mono_proof.newcounter_mono_spec	300	300.170513	7359	505
coq-tlc.20200328	TLC.LibFix.partial_fixed_point_definitions'	300	300.390919	153028	31083
coq-tlc.20200328	TLC.LibListAssoc.Rem.rem_cons	300	300.182703	63750	6561
coq-tlc.20200328	TLC.LibFix.fix_dep_eq_with_proof_irrelevance	300	3.365087	1787	734	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: introv Cont; only 1: intros; only 1: unfold fix_dep; only 1: match goal with | |- ?g x (W x) = _ => sets G : g end; only 1: asserts : (forall x (Ac1 Ac2 : Acc R x), G x Ac1 = G x Ac2); only 1: clears x; only 1: intros x Ac1; only 1: induction Ac1 using Acc_inv_dep; only 1: intros Ac2; only 1: dependent inversion Ac2; only 1: simpl; only 1: apply ~ Cont; only 1: case (W x); only 1: intros; only 1: simpl; only 1: apply ~ Cont).
coq-tlc.20200328	TLC.LibFix.make_COFE	300	0.319511	19	8	2.3	synth with cache (only 1: introv Equi; only 1: dauto).
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_load_offset_vec	300	21.961222	195	52	0.2.0.1.1.2	synth with cache (only 1: iIntros ( Φ ) ">H HΦ"; only 1: iApply (twp_wp_step with "HΦ"); only 1: iApply (twp_load_offset with "H"); only 1: by apply vlookup_lookup; only 1: iIntros "H HΦ"; only 1: by iApply "HΦ").
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spawn.proof.spawn_spec	300	302.368110	41349	1709
coq-tlc.20200328	TLC.LibEnv.Properties.map_push	300	300.379559	50900	3929
coq-tlc.20200328	TLC.LibEnv.Properties.get_empty	300	0.065441	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rew_env_defs; only 1: simpl; only 1: reflexivity).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.atomic_heap.proof.primitive_free_spec	300	303.063465	8162	424
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.arith.maximum_spec	300	300.233381	34413	2332
coq-tlc.20200328	TLC.LibListAssoc.Rem.disjoint_rem	300	119.334152	46407	5620	2.1.5.0.7.17.5.0	synth with cache (only 1: introv M; only 1: intros y; only 1: intros H J; only 1: do 2 rewrite get_opt_rem; only 1: case_if ~; only 1: introv E; only 1: easy; only 1: simple *).
coq-iris-heap-lang.3.4.0	iris.heap_lang.adequacy.heap_adequacy	300	300.106859	2430	447
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.is_lock_contractive	300	302.593385	5844	857
coq-tlc.20200328	TLC.LibListZ.Read.read_zero	300	300.356002	83870	11933
coq-tlc.20200328	TLC.LibListZ.Read.eq_of_extens	300	13.567588	3737	1642	0.0.0.0.3.0.0.0.0.0.1	synth with cache (only 1: introv HL HR; only 1: do 2 rewrite length_eq in HL; only 1: unfold read, read_inst, read_impl in HR; only 1: applys ~ eq_of_extens l1 l2; only 1: intros n L; only 1: forwards M : (rm HR) (nat_to_Z n); only 1: rewrite ~ index_eq_inbound; only 1: case_if; only 1: false; only 1: math; only 1: rewrite ~ abs_nat in M).
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_wp_pure	300	301.740478	5655	388
coq-qcert.2.2.0	Qcert.NRA.Optim.NRARewrite.NRARewrite.dot_from_duplicate_bind_r	300	300.622833	88639	13196
coq-tlc.20200328	TLC.LibVar.notin_singleton_swap	300	5.722970	5526	914	0.0.1.16.1.2	synth with cache (only 1: intros; only 1: rewrite ~ notin_singleton; only 1: intro H1; only 1: subst *; only 1: apply H; only 1: apply * in_singleton_self).
coq-tlc.20200328	TLC.LibFixDemos.fix_ack	300	300.418260	141227	18754
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRS.NNRS.dec.nnrs_stmt_eqdec	300	301.230281	286934	31038
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.mono_proof.read_mono_spec	300	300.618339	16594	4171
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.subG_ccounterΣ	300	0.062029	1	1	0	synth with cache (only 1: solve_inG).
coq-qcert.2.2.0	Qcert.Translation.Model.DataToEJson.DataToEJson.toData.ejson_is_either_some_left	300	300.777401	51452	13200
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.diverge.wp_diverge	300	300.884562	7638	260
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.is_lock_iff	300	300.353953	53215	4215
coq-tlc.20200328	TLC.LibFix.mixed_fixed_point_generally_consistent	300	300.229609	63990	16133
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.twp_store_offset	300	300.653661	30250	1848
coq-qcert.2.2.0	Qcert.Data.Operators.GroupBy.GroupBy.tableform.group_of_key_destruct_drec_inv	300	301.267101	48091	2094
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.assert.wp_assert	300	302.914318	18721	1452
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.wp_array_copy_to	300	300.165587	15240	2786
coq-qcert.2.2.0	Qcert.TypeSystem.TBrandContext.TBrandContext.Brand_Context.brand_context_fequal	300	300.520482	77347	4788
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spawn.proof.join_spec	300	300.172587	20551	1704
coq-tlc.20200328	TLC.LibEnv.SinglesProperties.values_singles	300	300.127578	38203	13822
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.atomic_heap.proof.primitive_load_spec	300	300.191890	34770	1261
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.arith.maximum_spec_nat	300	300.179030	30100	2024
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.is_lock_persistent	300	302.778632	5401	424
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.locked_timeless	300	11.467135	2	1	1	synth with cache (only 1: done || apply _).
coq-hott.8.11	HoTT.Classes.theory.premetric.contents.cauchy.equiv_lim_lim	300	300.507276	185530	13231
coq-qcert.2.2.0	Qcert.Translation.Model.DataToEJson.DataToEJson.RuntimeLemmas.ejson_to_data_object_not_string	300	160.416222	6018	2430	0.3.4.2.1.2.0.0.0.0	synth with cache (only 1: destruct l; only 1: simpl; only 1: congruence; only 1: simpl; only 1: destruct l; only 1: destruct p; only 1: destruct (string_dec s "$right"); only 1: repeat match_destr; only 1: repeat match_destr; only 1: repeat match_destr).
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_twp_pure	300	300.211692	49251	5205
coq-tlc.20200328	TLC.LibListZ.UpdateNoInhab.update_app_r	300	300.416345	45636	13076
coq-tlc.20200328	TLC.LibListZ.Filter.filter_length_partition	300	2.566834	520	202	0.0.0.0.0.0.3.0.0.0	synth with cache (only 1: introv; only 1: induction l; only 1: rew_list; only 1: math; only 1: repeat rewrite filter_cons; only 1: repeat case_if; only 1: rew_list; only 1: math; only 1: rew_list; only 1: math).
coq-qcert.2.2.0	Qcert.Translation.Model.DataToEJson.DataToEJson.RuntimeLemmas.bunion_ejson_to_data_comm	300	0.014188	3	2	1.0	synth with cache (only 1: unfold bunion; only 1: apply map_app).
coq-tlc.20200328	TLC.LibFixDemos.McCarthy_fix_post	300	300.198756	83655	8612
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.contrib_spec.ccounter_op	300	300.829050	90639	7275
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.newlock_spec	300	301.138435	1291	84
coq-qcert.2.2.0	Qcert.Imp.Lang.ImpEq.NNRSimpEq.imp_equiv	300	0.990081	665	89	6.6.5.8	synth with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).
coq-tlc.20200328	TLC.LibFix.Fix_prop_of_optimal	300	300.568266	240121	62489
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_store_offset	300	300.714347	18765	2350
coq-tlc.20200328	TLC.LibChoice.functional_choice	300	301.874456	199072	42222
coq-tlc.20200328	TLC.LibFix.Fix_prop_to_gc	300	20.548125	9687	2636	4.0.11.6.1.0	synth with cache (only 1: introv [Gf Uf]; only 1: split; only 1: rewrite ~ partial_fixed_point_definitions; only 1: rewrite ~ partial_fixed_point_definitions; only 1: intros g Fixg; only 1: applys ~ Uf).
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_wp_value_nofupd	300
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_twp_value_nofupd	300	1.164835	62	10	0.8.0	synth with cache (only 1: rewrite envs_entails_eq => ->; only 1: rewrite twp_value_fupd'; only 1: auto).
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_wp_value	300	2.398698	142	19	5.6.0	synth with cache (only 1: rewrite envs_entails_eq => ->; only 1: rewrite wp_unfold /wp_pre; only 1: by auto).
coq-hott.8.11	HoTT.Classes.theory.rationals.contents.Qlt_join	300	300.415054	78840	8944
coq-tlc.20200328	TLC.LibContainerDemos.Basic.my_read_write	300	300.326202	153281	12103
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.twp_array_clone	300	300.100054	21177	2231
coq-tlc.20200328	TLC.LibEnv.SinglesProperties.concat_singles	300	300.633348	23978	3435
coq-hott.8.11	HoTT.Classes.theory.rationals.contents.Qpos_neg_le	300	47.135739	19484	1494	0.1.1.1.13.0.2.36	synth with cache (unshelve (only 1: assert (Hrw : 4 = 2 * 2) by ring_with_nat; only 1: repeat (unfold cast; simpl); only 1: intros x; only 1: transitivity (0 : Q); only 1: apply flip_nonneg_negate; only 1: solve_propholds; only 1: solve_propholds); only 1: exact (fun _ => 1)).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.atomic_heap.proof.primitive_store_spec	300	302.754182	4602	337
coq-hott.8.11	HoTTBookExercises.Book_1_3_sig.Book_1_3_sig_refl	300	0.006186	1	1	0	synth with cache (only 1: reflexivity).
coq-tlc.20200328	TLC.LibMap.binds_inst	300	300.554811	231916	34321
coq-tlc.20200328	TLC.LibMap.remove_inst	300	0.205722	157	32	1.8.0	synth with cache (only 1: split; only 1: intros; only 1: rapply (empty_impl (A:=A) B)).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.is_lock_iff	300	302.221884	4300	270
coq-qcert.2.2.0	Qcert.Data.Operators.SortBy.SortByProps.sortable_data_normalized	300	300.419183	224045	8869
coq-tlc.20200328	TLC.LibListZ.Remove.length_remove_mem	300	300.332576	42629	10613
coq-tlc.20200328	TLC.LibStream.Bisimilar.equiv_bisimilar_mod_upto	300
coq-tlc.20200328	TLC.LibFixDemos.McCarthy_spec_gt100	300	300.451906	63691	9263
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.contrib_spec.newcounter_contrib_spec	300	300.374431	15531	2102
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.wait_loop_spec	300	300.203215	27673	1110
coq-tlc.20200328	TLC.LibMultiset.fold_inst	300	0.009430	2	2	0.0	synth with cache (only 1: constructor; only 1: rapply (LibSet.fold_impl (A:=A) (B:=B))).
coq-hott.8.11	HoTT.Classes.theory.integers.contents.int_nontrivial	300	300.739464	397883	18406
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.twp_store_offset_vec	300	300.164293	16045	841
coq-qcert.2.2.0	Qcert.Data.Operators.BinaryOperators.BinaryOperators.nat_arith_binary_op_eqdec	300	300.652126	122802	18749
coq-tlc.20200328	TLC.LibChoice.guarded_rel_choice	300	300.463251	139414	22877
coq-tlc.20200328	TLC.LibFix.FixVal_fix_inv	300	300.328818	74175	21567
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_wp_bind	300	301.175677	10841	1515
coq-tlc.20200328	TLC.LibContainerDemos.Internal.test_resolution_3	300	300.650446	304376	51473
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.array_init.wp_array_init	300	300.185740	28932	2172
coq-tlc.20200328	TLC.LibEnv.SinglesProperties.singles_keys_values	300	300.195631	67721	3361
coq-tlc.20200328	TLC.LibEnv.StructProperties.concat_empty_l	300	0.325605	27	10	0.0.0	synth with cache (only 1: intros; only 1: rew_env_defs; only 1: rew_list ~).
coq-smtcoq.2.0+8.11	SMTCoq.Trace.trace._checker__correct	300	303.679506	104916	9839
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.atomic_heap.proof.primitive_cmpxchg_spec	300	300.710410	22355	1471
coq-tlc.20200328	TLC.LibMap.Properties.dom_empty_inv	300	300.336026	126335	16736
coq-hott.8.11	HoTTBookExercises.Book_4_6_i.isequiv_qinv	300	300.355121	49800	9250
coq-hott.8.11	HoTTBookExercises.Book_6_9.Book_6_9	300	0.249327	7	3	2.2.0	synth with cache (only 1: intros A; only 1: intro nna; only 1: assumption).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.newlock_spec	300	300.976353	21488	1066
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.brand_ops.collapse_brands_nosub	300	300.851244	157071	15253
coq-tlc.20200328	TLC.LibListZ.Take.take_is_prefix	300	300.217100	77264	26059
coq-tlc.20200328	TLC.LibListZ.Take.take_full_length	300	0.037711	3	3	0.0.0	synth with cache (only 1: intros; only 1: lets H : (LibList.take_prefix_length nil); only 1: rew_list ~ in H).
coq-tlc.20200328	TLC.LibMultiset.Instances.empty_incl_inst	300	185.618733	90880	18420	1.18.10.20.2.0	synth with cache (only 1: constructor; only 1: intros n; only 1: unfold union_impl, empty_impl, multiset; only 1: introv; only 1: unfold union_inst, union_impl, union, empty_impl, empty_inst, empty, empty_impl, multiset; only 1: math).
coq-tlc.20200328	TLC.LibMultiset.ForeachProp.foreach_union	300	0.015892	2	2	0.0	synth with cache (only 1: intros_all; only 1: destruct ~ (in_union_inv H1)).
coq-tlc.20200328	TLC.LibMultiset.ForeachProp.foreach_union_inv	300	0.052033	14	13	0.0.0.0.1.0	synth with cache (only 1: introv H; only 1: apply ~ foreach_union_inv; only 1: introv K; only 1: apply H; only 1: rewrite ~ @in_union_eq; only 1: typeclass).
coq-tlc.20200328	TLC.LibMultiset.ForeachProp.foreach_union_eq	300	0.046908	10	10	0.1.0.0.0	synth with cache (only 1: intros; only 1: extens; only 1: iff; only 1: apply ~ LibSet.foreach_union_inv; only 1: intuition eauto using LibSet.foreach_union).
coq-tlc.20200328	TLC.LibFixDemos.eventually_to_dist	300	300.180867	69673	11795
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.contrib_spec.incr_contrib_spec	300	302.415149	8223	717
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.empty_list_length	300	0.216815	26	13	2.0.1.0	synth with cache (only 1: intros A a; only 1: induction a; only 1: intuition; only 1: easy).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.acquire_spec	300	300.371261	25434	2438
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_store_offset_vec	300	302.864960	3757	493
coq-tlc.20200328	TLC.LibFix.FixValModMut2_fix	300	300.366928	114003	10837
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_twp_bind	300	300.268399	11273	1138
coq-hott.8.11	HoTT.Classes.implementations.natpair_integers.NatPair.contents.plus_strict_order_preserving_l'	300	300.135898	40798	13791
coq-tlc.20200328	TLC.LibListZ.Drop.drop_cons_pos	300	179.170591	37188	8804	0.0.2.6.15.0	synth with cache (only 1: intros; only 1: math_rewrite (n = n - 1 + 1); only 1: rewrite LibList.drop_cons; only 1: fequals_rec; only 1: math; only 1: forwards ~ : lt_to_nat_to_nat 0 n).
coq-tlc.20200328	TLC.LibListZ.Drop.drop_app_length	300	0.062329	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite LibList.drop_app_r; only 1: math_rewrite (forall a, (a - a)%nat = 0%nat); only 1: rewrite LibList.drop_zero; only 1: rew_list ~; only 1: math).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.array_init.twp_array_init	300	300.169022	17216	1446
coq-tlc.20200328	TLC.LibListZ.Count.count_nonneg	300	3.036026	1128	134	20	synth with cache (only 1: gowith LibList.count_eq_length_filter).
coq-tlc.20200328	TLC.LibListZ.Count.Exists_of_count_pos	300	0.021679	2	2	0.0	synth with cache (only 1: introv; only 1: rewrite ~ LibList.Exists_eq_count_pos).
coq-smtcoq.2.0+8.11	SMTCoq.array.Array_checker.certif.Correct.def_t_form	300
coq-tlc.20200328	TLC.LibEnv.MoreProperties.dom_map	300	300.135328	49403	4603
coq-smtcoq.2.0+8.11	SMTCoq.Trace.Sat_Checker.valid_add_roots	300
coq-hott.8.11	HoTT.Spaces.BAut.Bool.AssumeUnivalence.aut_baut_bool_idmap_or_negb	300	300.398912	179628	22656
coq-tlc.20200328	TLC.LibMap.Properties.dom_update	300	300.250840	68007	15446
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.try_acquire_spec	300	300.505219	27764	1164
coq-tlc.20200328	TLC.LibMap.Properties.dom_update_at_indom	300	6.633656	2689	993	0.1.1.1.0.0.1.2.0.0.2	synth with cache (only 1: intros; only 1: rewrite update_impl_eq; only 1: simpl; only 1: unfold dom_impl, union_impl, binds_impl in *; only 1: apply in_extens; only 1: intros x; only 1: rew_set; only 1: iff R; only 1: case_if ~; only 1: congruence; only 1: case_if ~).
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.brand_ops.collapse_brands_proper	300	300.856820	32242	8289
coq-tlc.20200328	TLC.LibMultiset.for_multiset_union_assoc	300	300.324791	134162	17141
coq-tlc.20200328	TLC.LibMultiset.PermutationTactic.permut_tactic_keep	300	0.252262	26	8	0.1.2	synth with cache (only 1: intros; only 1: rews_permut_simpl; only 1: eauto).
coq-tlc.20200328	TLC.LibFixDemos.itree_similar_upto_equiv	300	300.508471	222081	34899
coq-tlc.20200328	TLC.LibFun.fupdate_neq	300	0.009701	3	3	0.0.0	synth with cache (only 1: intros; only 1: unfold fupdate; only 1: case_if *).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.contrib_spec.read_contrib_spec	300	300.678350	7783	1229
coq-tlc.20200328	TLC.LibFun.FunctionImage.in_image_prove_eq	300	17.424936	8172	901	0.12.7.20	synth with cache (only 1: intros A eq_dec; only 1: intros m f l1; only 1: constructors; only 1: eauto using remove_disjoint with finite).
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.wf_t_atom	300
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.def_t_atom	300	0.017825	7	2	3.2	synth with cache (only 1: destruct (check_atom_correct _ ch_atom); only 1: auto).
coq-qcert.2.2.0	Qcert.EJson.Model.EJsonNorm.EJsonNorm.ejnobject_sort	300	1.365605	476	156	10.0.0.4	synth with cache (only 1: econstructor; only 1: apply Forall_sorted; only 1: trivial; only 1: eauto  1 with qcert).
coq-qcert.2.2.0	Qcert.EJson.Model.EJsonNorm.EJsonNorm.ejson_normalized_jarray_Forall	300	2.948064	1180	197	1.2.6.0.8.1	synth with cache (only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: econstructor; only 1: trivial).
coq-iris-heap-lang.3.4.0	iris.heap_lang.primitive_laws.lifting.wp_rec_löb	300	300.462214	18817	1039
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.release_spec	300	300.294789	8632	2475
coq-tlc.20200328	TLC.LibEnv.binds_get_or_arbitrary	300	215.032274	73617	8383	7.36	synth with cache (only 1: introv; only 1: fequals).
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.twp_cmpxchg_suc_offset	300	300.345969	28280	1902
coq-tlc.20200328	TLC.LibFix.FixFunMod_fix_partial	300	300.454108	93222	23371
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.heap.tac_wp_allocN	300	302.345729	50941	3042
coq-hott.8.11	HoTT.Classes.implementations.natpair_integers.NatPair.contents.Zmult_pos'	300	300.247035	78907	20297
coq-hott.8.11	HoTT.Spaces.BAut.Rigid.aut_homomorphism_end	300	0.129344	221	33	12.0	synth with cache (only 1: intro e; only 1: make_equiv).
coq-qcert.2.2.0	Qcert.Imp.Lang.ImpEval.ImpEval.Evaluation.imp_decls_erase_none	300
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.array_init_fmap.big_sepL_exists_eq	300
coq-smtcoq.2.0+8.11	SMTCoq.array.Array_checker.certif.Correct.rho_interp	300	301.304471	124157	24123
coq-tlc.20200328	TLC.LibUnit.Inhab_unit	300	0.011809	7	2	5.0	synth with cache (only 1: constructor; only 1: tautob).
coq-tlc.20200328	TLC.LibFset.FsetImpl.Operations.finite_empty	300	0.010853	2	1	1	synth with cache (only 1: applys finite_empty).
coq-smtcoq.2.0+8.11	SMTCoq.Trace.Sat_Checker.theorem_checker	300	303.338412	350216	41345
coq-tlc.20200328	TLC.LibSet.Instances.disjoint_eq_inter_empty	300	0.007566	3	2	1.0	synth with cache (only 1: intros; only 1: constructor).
coq-tlc.20200328	TLC.LibSet.Instances.in_set_st_eq	300	0.430858	87	17	6.2	synth with cache (only 1: intros a b; only 1: reflexivity).
coq-tlc.20200328	TLC.LibSet.Instances.set_ext_eq	300	2.630664	1104	338	3.0.0.0.0.2.3.0.0	synth with cache (only 1: intros; only 1: extens; only 1: constructor; only 1: split; only 1: red; only 1: subst *; only 1: red; only 1: subst *; only 1: extens *).
coq-tlc.20200328	TLC.LibSet.Instances.set_ext	300	0.041798	23	7	0.2	synth with cache (only 1: intros; only 1: extens *).
coq-tlc.20200328	TLC.LibSet.Instances.in_remove_eq_inst	300	0.020767	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: set_unf; only 1: apply * prop_ext).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.acquire_spec	300	300.279821	7201	1501
coq-tlc.20200328	TLC.LibMap.Properties.read_update_same	300	300.594149	268015	25854
coq-tlc.20200328	TLC.LibFixDemos.text_sub_wf	300	300.396195	164900	63233
