
Coq.Init.Wf.Well_founded.Acc_inv	40	0.3.6	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.109430074692	179
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.1.1	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0124549865723	6
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.011255979538	5
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.33	synth with cache (only 1: intros f [x]; only 1: auto).	0.343501091003	1496
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: auto).	0.00998210906982	2
Coq.Init.Peano.not_eq_S	40	0	synth with cache (only 1: auto).	0.0104529857635	1
Coq.Init.Peano.O_S	40	0	synth with cache (only 1: discriminate).	0.0101351737976	1
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.12.0.5	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.521832942963	971
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0185761451721	6
Coq.Init.Peano.plus_n_Sm	40	1.0.0.3	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0184118747711	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0216579437256	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.2	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0193018913269	8
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.11	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0527341365814	86
Coq.Init.Peano.le_n_S	40	0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.0154139995575	3
Coq.Init.Peano.nat_case	40	1.3.2	synth with cache (only 1: induction n; only 1: auto; only 1: trivial).	0.0212309360504	14
Coq.Init.Peano.nat_double_ind	40	1.1.16.1.2	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	1.71053791046	3100
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.3.2.0.2.0.2.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: auto; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	17.9964749813	15355
Coq.Init.Peano.min_l	40	0.0.2.0.2.0.2.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	7.14766097069	4878
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.30615782738	2370
Coq.Init.Peano.nat_rect_succ_r	40	0.13.2.0.10	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).	7.18889904022	10313
Coq.Init.Peano.nat_rect_plus	40	1.0.1.3.1.2	synth with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	1.221585989	959
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	0.19.16	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	0.280768871307	1450
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0114061832428	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0115938186646	3
Coq.Init.Datatypes.surjective_pairing	40	2.25	synth with cache (only 1: destruct p; only 1: trivial).	0.174597978592	529
Coq.Init.Datatypes.injective_projections	40	0.27.15.1.0.26	synth with cache (only 1: intros A P H; only 1: intros [? ?]; only 1: simpl; only 1: destruct 1; only 1: destruct H, 1; only 1: reflexivity).	16.1163761616	98047
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.8	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0192830562592	19
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.0	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.016205072403	5
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.4	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	36.9089488983	79160
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	3.1.0.3.1.0.3.1.0.5	synth with cache (only 1: destruct c; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto).	1.48623609543	3384
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.00295901298523	3
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	1.1.2.3.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0205769538879	126
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.2.4	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00590705871582	15
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	1.0.0.4.1.0.2.0.1.1.4	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: auto; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption).	0.124386072159	1793
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.2.0.0.1.1.0.2.0.1.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.120867013931	2034
Coq.Init.Logic.imp_iff_compat_l	40	9.9.7.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0547480583191	802
Coq.Init.Logic.imp_iff_compat_r	40	0.1.4.0.0.1.3.0.3.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.0727651119232	1149
Coq.Init.Logic.not_iff_compat	40	4.4.7.6	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0686399936676	924
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.0.5.0.1.1.0.1.0.2.2.1.0.2.0.1.3.0.0.0.0.0.2.0.1.1.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: assumption).	26.5423829556	313670
Coq.Init.Logic.and_comm	40	0.0.0.4.0.0.0.4.5	synth with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption).	0.290419101715	2034
Coq.Init.Logic.and_assoc	40	0.0.0.0.0.5.0.0.0.0.0.0.3.6.8.2.8.5	synth with cache (only 1: intro A; only 1: intro H; only 1: split; only 1: intro H1; only 1: elim H1; only 1: intros [? ?]; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: elim H1; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	19.1384460926	241936
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.3.0.3.7.0.2.0.2.7.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	1.00436377525	10466
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.00582385063171	3
Coq.Init.Logic.iff_to_and	40	0.0.3.1	synth with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.00605297088623	8
Coq.Init.Logic.universal_quantification.inst	40	5	synth with cache (only 1: trivial).	0.00624203681946	14
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.00423502922058	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.7.16	synth with cache (only 1: intro H; only 1: intros A B []; only 1: assumption).	0.0674278736115	652
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.20.15	synth with cache (only 1: intro H1; only 1: elim H1; only 1: auto).	0.194099903107	1859
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	1.0.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00765490531921	7
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00527286529541	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.6	synth with cache (only 1: destruct 1; only 1: trivial).	0.00769996643066	17
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	4.1	synth with cache (only 1: destruct 2; only 1: auto).	0.00818705558777	16
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.4	synth with cache (only 1: destruct 2; only 1: trivial).	0.0066659450531	6
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.00653195381165	4
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.00588011741638	4
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00617480278015	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	1.2.5	synth with cache (only 1: destruct H; only 1: destruct 1; only 1: trivial).	0.0177719593048	27
Coq.Init.Logic.rew_opp_r	40	1.2.8	synth with cache (only 1: intros A C h1 h2; only 1: destruct H; only 1: reflexivity).	0.0297620296478	124
Coq.Init.Logic.rew_opp_l	40	1.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00714993476868	5
Coq.Init.Logic.f_equal2	40	1.1.12.1	synth with cache (only 1: intros A x P H y H0; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.202173948288	617
Coq.Init.Logic.f_equal3	40	0.1.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00884509086609	5
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00924515724182	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00995087623596	6
Coq.Init.Logic.f_equal_compose	40	0.22.10.2	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.419428110123	3126
Coq.Init.Logic.eq_trans_refl_l	40	1.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00504779815674	3
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00457215309143	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00449395179749	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00475716590881	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00473999977112	2
Coq.Init.Logic.eq_trans_assoc	40	1.6.10.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.17910194397	970
Coq.Init.Logic.rew_map	40	2.9	synth with cache (only 1: destruct H; only 1: trivial).	0.0337071418762	111
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00548601150513	3
Coq.Init.Logic.map_subst_map	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00512290000916	2
Coq.Init.Logic.rew_swap	40	1.4.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00635313987732	8
Coq.Init.Logic.rew_compose	40	1.2.2	synth with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.00598502159119	8
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.00538015365601	2
Coq.Init.Logic.eq_trans_map_distr	40	0.2.2.10	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.118972063065	444
Coq.Init.Logic.eq_sym_map_distr	40	0.0	synth with cache (only 1: destruct e; only 1: trivial).	0.0059289932251	2
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.0	synth with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	0.00645399093628	4
Coq.Init.Logic.eq_trans_rew_distr	40	1.5	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.012039899826	23
Coq.Init.Logic.rew_const	40	1.2	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00754809379578	14
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	5.4.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0183079242706	64
Coq.Init.Logic.inhabited_covariant	40	3.20	synth with cache (only 1: destruct 2; only 1: auto).	0.0644900798798	444
Coq.Init.Logic.eq_stepl	40	0.1.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.00700783729553	7
Coq.Init.Logic.iff_stepl	40	6.0.7.0.4.3.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.817426919937	4461
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.1.15.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.27786397934	910
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.00844216346741	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0066089630127	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00621294975281	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00623393058777	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.1	synth with cache (only 1: destruct 2; only 1: auto).	0.00852394104004	12
Coq.Init.Logic_Type.identity_ind_r	40	0.13	synth with cache (only 1: destruct 2; only 1: auto).	0.0543320178986	192
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.00807785987854	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.00801706314087	3
Coq.Init.Specif.sigT_eta	40	0.22	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0701150894165	255
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.012787103653	2
Coq.Init.Specif.sigT2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0146341323853	3
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0144917964935	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.3.6.5.4	synth with cache (only 1: intros H; only 1: inversion_clear H; only 1: constructor; only 1: exists x; only 1: auto).	0.31470489502	900
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0193159580231	5
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0167191028595	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.2	synth with cache (only 1: destruct p, q; only 1: auto).	0.0613071918488	4
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	1.25.2	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).	0.728549003601	1604
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.24.1	synth with cache (only 1: intro H; only 1: subst; only 1: reflexivity).	3.29306602478	4846
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0166051387787	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.2.1.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0203409194946	7
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.1.0.1.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.029541015625	8
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	23.0.0.0.2.0.1.0.0.1	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried; only 1: trivial).	20.5157389641	41590
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0168931484222	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.1.1.3.7	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.580796003342	477
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0676620006561	3
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.1.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0213799476624	4
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.2.1.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0376119613647	8
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0208969116211	3
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	1.1.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0160620212555	5