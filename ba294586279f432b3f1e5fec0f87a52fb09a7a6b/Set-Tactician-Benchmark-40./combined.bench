
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	7.20.18.35.0	search with cache (only 1: intros x y H; only 1: intro H0; only 1: apply H; only 1: symmetry; only 1: trivial).	5.80770087242	33372
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0116748809814	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	17.2	search with cache (only 1: intro; only 1: ring).	0.160307884216	319
Coq.micromega.OrderedRing.Rplus_comm	40	5.20	search with cache (only 1: intros; only 1: ring).	0.174931049347	348
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0130231380463	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.0	search with cache (only 1: intros; only 1: ring).	0.1084420681	2
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.3.11	search with cache (only 1: intros; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.0928201675415	157
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	0.0.0.3.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.127049922943	30
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now destruct H; only 1: now destruct H).	0.0138101577759	4
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40
Coq.micromega.Ztac.elim_concl_lt	40
Coq.micromega.Ztac.Zlt_le_add_1	40
Coq.micromega.Ztac.add_le	40	10.0	search with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.0574190616608	52
Coq.micromega.Ztac.mul_le	40	4.0.0	search with cache (only 1: intros; only 1: change 0 with (0 + 0); only 1: Z.order_pos).	0.0213229656219	7
Coq.micromega.ZifyInst.PropAnd	40
Coq.micromega.ZifyInst.PropOr	40	0.147	search with cache (only 1: constructor; only 1: tauto).	4.92968988419	11315
Coq.micromega.ZifyInst.PropArrow	40	0.147	search with cache (only 1: constructor; only 1: tauto).	4.3188829422	11315
Coq.micromega.ZifyInst.PropIff	40	0.146	search with cache (only 1: constructor; only 1: tauto).	5.04281306267	11166
Coq.micromega.ZifyInst.PropNot	40	3.146	search with cache (only 1: constructor; only 1: tauto).	3.31951284409	11757
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	1.2.0.0.5	search with cache (only 1: destruct x; only 1: simpl; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).	0.131376981735	125
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40
Coq.micromega.ZCoeff.rtimes_morph_Proper	40
Coq.micromega.ZCoeff.ropp_morph_Proper	40
Coq.micromega.ZCoeff.rle_morph_Proper	40
Coq.micromega.ZCoeff.rlt_morph_Proper	40
Coq.micromega.ZCoeff.rminus_morph_Proper	40
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.1.0.0.1	search with cache (only 1: intros x z H'; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).	0.0530598163605	42
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	3.14.2.11.64	search with cache (only 1: compute; only 1: intro l; only 1: intros; only 1: rewrite Rplus_comm; only 1: intuition subst; try ring; auto with real).	13.1029980183	48212
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.2.0.1.0.0	search with cache (only 1: intros x H; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: red; only 1: auto with real).	0.0437960624695	14
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.2.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.0441999435425	6
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	11.11.2.0.1.1.0	search with cache (only 1: destruct x; only 1: split; only 1: now destruct 1 || trivial; only 1: intros; only 1: tauto; only 1: easy; only 1: easy).	15.6364750862	39500
Coq.micromega.ZMicromega.lt_le_iff	40
Coq.micromega.ZMicromega.le_0_iff	40	3.1.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: now rewrite Z.le_0_sub; only 1: apply Z.le_0_sub).	0.088711977005	20
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	3.67570710182	5869
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	2.3.0	search with cache (only 1: intros; only 1: simpl; only 1: tauto).	0.00826096534729	8
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	1.1.1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	0.0568170547485	21
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	3.3.21.0.18.100.17.1	search with cache (only 1: induction p; only 1: constructor; only 1: intuition; only 1: constructor; only 1: trivial; only 1: constructor; only 1: easy; only 1: easy).	15.7157590389	85798
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.0.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: auto).	0.00996208190918	3
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	4.0.0.0.4.0.0.0.0.0.48.1.1	search with cache (only 1: intros x y; only 1: symmetry; only 1: split; only 1: intros; only 1: intuition congruence; only 1: destruct x; only 1: intros; only 1: intuition subst; easy; only 1: destruct y; only 1: intros; only 1: intuition subst; easy; only 1: intros; only 1: intuition subst; easy).	17.4147040844	39801
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	3.3.7	search with cache (only 1: destruct x; only 1: intuition try easy; only 1: intuition try easy).	0.919675111771	540
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	2.3.8.5	search with cache (only 1: destruct x; only 1: intuition try easy; only 1: intuition try easy; only 1: intuition try easy).	1.76323223114	1193
Coq.micromega.ZifyBool.leZeroSpec_ok	40	1.1.0.1	search with cache (only 1: destruct x; only 1: intuition try congruence; compute; congruence; only 1: intuition try easy; only 1: intuition try easy).	0.163908004761	37
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	0.0.4.0	search with cache (only 1: unfold tail; only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0172021389008	8
Coq.micromega.Env.nth_pred_double	40	0.0.4.0	search with cache (only 1: unfold tail; only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0241391658783	13
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.2	search with cache (only 1: induction l as [| a l IH]; only 1: reflexivity; only 1: reflexivity).	0.0205430984497	14
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	0.0.16.4.37	search with cache (only 1: intros x H2; only 1: intros; only 1: elim H2; only 1: congruence; only 1: congruence).	4.05150508881	9472
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	1	search with cache (only 1: reflexivity).	0.0107841491699	2
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0102601051331	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	0.0.1.5.43	search with cache (only 1: intros l; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: congruence).	3.60273694992	8334
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	1.1.5	search with cache (only 1: destruct f; only 1: reflexivity; only 1: reflexivity).	0.0244798660278	18
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	2.0.0.8.6.0.8	search with cache (only 1: destruct f; only 1: reflexivity; only 1: destruct c; only 1: destruct f; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	6.84215688705	13174
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.2.17	search with cache (only 1: destruct f; only 1: reflexivity; only 1: reflexivity).	0.918913125992	1303
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	0.6.31.3.35	search with cache (only 1: constructor; only 1: intros; only 1: apply H; only 1: reflexivity; only 1: tauto).	33.5053501129	55410
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.026859998703	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.4.1.0.0.1	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold make_conj at 2; only 1: rewrite !make_conj_cons in *; only 1: unfold eval_clause in *; only 1: tauto).	1.08954405785	176
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0692009925842	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	0.0.0.0.1.0.1.1.0.0.6	search with cache (only 1: destruct x; only 1: split; only 1: easy; only 1: auto with zarith; only 1: simpl; only 1: split; only 1: auto with zarith; only 1: auto with zarith; only 1: split; only 1: easy; only 1: reflexivity).	1.13082408905	1522
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0141448974609	1
Coq.micromega.EnvRing.rmul_ext_Proper	40	2	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0157799720764	3
Coq.micromega.EnvRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0136909484863	1
Coq.micromega.EnvRing.rsub_ext_Proper	40	0.60	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	2.94819903374	6252
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40	2.0.9.0.1	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: easy).	0.59237909317	321
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	8.72025299072	2301
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	2.1.0.0.0.0.0.1.0.0.0.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	6.54811406136	2477
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0317461490631	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.059201002121	8
Coq.micromega.EnvRing.mkZmon_ok	40
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.rtimes_morph_Proper	40
Coq.micromega.RingMicromega.ropp_morph_Proper	40
Coq.micromega.RingMicromega.rle_morph_Proper	40
Coq.micromega.RingMicromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	8.3.2.0	search with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	1.0319519043	479
Coq.micromega.RingMicromega.eval_pol_mul	40	8.5.3.0	search with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	1.34759497643	726
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	13.10.24	search with cache (only 1: intros l l'; only 1: intro Ha; only 1: now elim Ha).	1.31717300415	3958
Coq.micromega.Refl.make_impl_map	40
Coq.micromega.Refl.make_conj_cons	40	0.1.0.28	search with cache (only 1: destruct l as [| x l]; only 1: simpl; only 1: intuition; only 1: reflexivity).	1.99233102798	3383
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.4.0.4.0	search with cache (only 1: induction 1; only 1: rewrite make_conj_cons; only 1: tauto; only 1: rewrite make_conj_cons; only 1: tauto).	0.399839878082	159
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	3.2.0.0	search with cache (only 1: intros p; only 1: rewrite Rinv_1; only 1: rewrite Rmult_1_r; only 1: auto with real arith).	0.0844619274139	9
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	43	search with cache (only 1: apply Rmult_0_l).	0.872097969055	945
Coq.micromega.RMicromega.Q2R_1	40	7	search with cache (only 1: apply RIneq.Rinv_1).	0.0872981548309	8
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40
Coq.rtauto.Bintree.length_map	40	0.1.9.2.0	search with cache (only 1: induction l; only 1: trivial; only 1: simpl; only 1: apply f_equal; only 1: apply IHl).	0.369156122208	628
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	0.0.0.23.3	search with cache (only 1: intros; only 1: destruct p; only 1: auto; only 1: auto; only 1: auto).	0.396632909775	1037
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	1.1.1.2.5	search with cache (only 1: intros; only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity || congruence).	0.122446060181	132
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40
Coq.rtauto.Rtauto.compose3	40	0.0.0.0.6.4.0.6.0	search with cache (only 1: induction F; only 1: intro h; only 1: intros A B C H; only 1: auto; only 1: intro h; only 1: intros A B C H; only 1: simpl; only 1: apply IHF; only 1: auto).	5.60926604271	10311
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	0.2.0	search with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	0.0853548049927	5
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	11.1	search with cache (only 1: intros; only 1: auto).	0.60261797905	199
Coq.nsatz.Nsatz.Rext	40
Coq.nsatz.Nsatz.Rset	40	0.0.0.3.1.1.1.0.2.5.1.0.1.0	search with cache (only 1: constructor; only 1: intro; only 1: cring; only 1: intro; only 1: intros; only 1: setoid_rewrite H; only 1: cring; only 1: intro; only 1: intros; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: cring; only 1: cring).	17.5633280277	4349
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	59.0.11.59.0.8.101.53.227	search with cache (only 1: split; only 1: red; only 1: reflexivity; only 1: intros eps H9; only 1: intros; only 1: Lra.lra; only 1: intros h H12 H13; only 1: intros; only 1: Lra.lra).	25.852807045	622766
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	2	search with cache (only 1: auto with real).	0.00944018363953	3
Coq.nsatz.Nsatz.Rcri	40	21.0.0.2.7	search with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: auto with real).	1.4074678421	4266
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	search with cache (only 1: auto with *).	0.02419090271	1
Coq.nsatz.Nsatz.Zcri	40	27.4.0.3.0	search with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: auto with *).	1.31378102303	5923
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40
Coq.omega.OmegaLemmas.Zred_factor1	40
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	1	search with cache (only 1: now Z.nzsimpl).	0.287760019302	13
Coq.omega.OmegaLemmas.Zred_factor4	40	1.0	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	0.0473849773407	3
Coq.omega.OmegaLemmas.Zred_factor5	40	0	search with cache (only 1: now Z.nzsimpl).	0.0641760826111	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.0639231204987	1
Coq.omega.OmegaLemmas.new_var	40	4.1.53	search with cache (only 1: intros; only 1: exists x; only 1: now f_equal).	1.94262886047	2912
Coq.omega.OmegaLemmas.OMEGA1	40	0	search with cache (only 1: congruence).	0.0134651660919	1
Coq.omega.OmegaLemmas.OMEGA2	40	8.1	search with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.739939928055	33
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	28.3	search with cache (only 1: intros; only 1: now subst).	15.71965909	5652
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0237658023834	3
Coq.omega.OmegaLemmas.OMEGA12	40	3.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.311411142349	11
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0829129219055	3
Coq.omega.OmegaLemmas.OMEGA15	40	1.2.6	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite Z.add_shuffle1; only 1: f_equal).	0.795169115067	204
Coq.omega.OmegaLemmas.OMEGA16	40	1.4	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: f_equal).	0.0648550987244	28
Coq.omega.OmegaLemmas.OMEGA17	40	0.1	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0926251411438	3
Coq.omega.OmegaLemmas.OMEGA18	40	0.1.0.1.8	search with cache (only 1: intros H; only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.412730932236	142
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0697438716888	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.mod_0_r_ext	40	2.1.0.58.5.0	search with cache (only 1: intros; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	4.95739412308	17540
Coq.omega.PreOmega.div_0_r_ext	40	0.1.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0224659442902	7
Coq.omega.PreOmega.rem_0_r_ext	40	1.1.1.63.1.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	6.46054387093	24111
Coq.omega.PreOmega.quot_0_r_ext	40	0.1.1.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0220420360565	8
Coq.omega.PreOmega.rem_bound_pos_pos	40
Coq.omega.PreOmega.rem_bound_neg_pos	40
Coq.omega.PreOmega.rem_bound_pos_neg	40
Coq.omega.PreOmega.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	3.3.3.16	search with cache (only 1: destruct H; only 1: simpl; only 1: intros; only 1: tauto).	0.655496120453	1703
Coq.btauto.Algebra.Decidable_complete	40	5.7.16.0	search with cache (only 1: intros P H Hp; only 1: destruct H; only 1: simpl; only 1: tauto).	0.601399183273	1326
Coq.btauto.Algebra.Decidable_sound_alt	40
Coq.btauto.Algebra.Decidable_complete_alt	40	12.5.2.18	search with cache (only 1: destruct H; only 1: simpl; only 1: intros; only 1: intuition subst; easy).	2.57948684692	8511
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40	0.2.0.3.8.18.23.4.0.13.2	search with cache (only 1: intros; only 1: destruct H; only 1: first [ intuition congruence | auto ]; only 1: constructor; only 1: zify; only 1: eapply Z.lt_le_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	28.3078691959	85165
Coq.btauto.Algebra.linear_le_compat	40	5.5.0.7.0.0.13.0	search with cache (only 1: intros k l p H Hl; only 1: destruct H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: auto; only 1: auto; only 1: auto).	2.47561693192	6102
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	1.0.0.1.4	search with cache (only 1: intros [] ?; only 1: inversion 1; only 1: simpl in *; only 1: intuition; only 1: inversion 1).	0.13260102272	58
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	2	search with cache (only 1: tauto).	0.00953984260559	3
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	1.1.4.1.2.6.1.4.0.0	search with cache (only 1: intros A n; only 1: induction n using Pos.peano_rect; only 1: tauto; only 1: induction n using Pos.peano_rect; only 1: reflexivity; only 1: zify; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: rewrite list_nth_succ; only 1: apply IHn).	8.92270898819	15974
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	0.5	search with cache (only 1: right; only 1: auto with arith).	0.0245981216431	7
Coq.funind.Recdef.Splus_lt	40	8	search with cache (only 1: auto with arith).	0.0252487659454	13
Coq.funind.Recdef.SSplus_lt	40	3	search with cache (only 1: auto with arith).	0.0161340236664	4
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0109858512878	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	3	search with cache (only 1: now Z.nzsimpl).	0.0241239070892	4
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	0	search with cache (only 1: trivial).	0.0131039619446	1
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0124559402466	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	1.0.1	search with cache (only 1: intros; only 1: simpl; only 1: Esimpl2).	0.139715909958	5
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	2.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.08167505264	34
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	14	search with cache (only 1: trivial).	0.083575963974	114
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	2.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: eauto).	0.0498108863831	11
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	12	search with cache (only 1: eauto).	0.453727960587	101
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	1.1.0.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	0.143596887589	11
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40	0.3.0.3.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	6.8465089798	213
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40	1.0.0.4.0.0.3.0.4.9.2	search with cache (only 1: intros; only 1: induction p as [p IH| p IH| ]; only 1: apply field_is_integral_domain; only 1: trivial; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: trivial).	13.5576081276	6988
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.140331029892	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0596661567688	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	5.3.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	2.39261221886	103
Coq.setoid_ring.Field_theory.PEpow_0_r	40	2.0.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite !rpow_pow; only 1: rewrite phi_1; only 1: trivial).	0.131615877151	7
Coq.setoid_ring.Field_theory.PEpow_1_r	40	1.3.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite !rpow_pow; only 1: simpl; only 1: trivial).	0.069011926651	9
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40	1.18.7.0.3.4.4.4.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: rewrite !rpow_pow; only 1: trivial; only 1: simpl; only 1: rewrite !rpow_pow; only 1: pose proof (pow_pos_nz p H) as nz; only 1: trivial).	30.8485589027	21950
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	0.0	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.07652592659	2
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	20	search with cache (only 1: now f_equiv).	2.40657901764	521
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	20.0.7.36.36.187	search with cache (only 1: split; only 1: easy; only 1: easy; only 1: intros l subst_l_ok res P p; only 1: destruct P; only 1: trivial).	39.6980519295	82687
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	7.7.7.5	search with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	2.49660897255	2737
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	0.16.0	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	3.56062507629	1674
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	59.0.11.59.0.8.101.53.227	search with cache (only 1: split; only 1: red; only 1: reflexivity; only 1: intros eps H9; only 1: intros; only 1: Lra.lra; only 1: intros h H12 H13; only 1: intros; only 1: Lra.lra).	31.9634809494	622766
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	20.0.0.2.6	search with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: auto with real).	1.90074491501	3784
Coq.setoid_ring.Rings_R.R_one_zero	40	6.0.0	search with cache (only 1: red; only 1: intros; only 1: Lra.lra).	0.0398209095001	9
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	1	search with cache (only 1: reflexivity).	0.038153886795	2
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	4.5.88	search with cache (only 1: repeat split; only 1: intros a b; only 1: discriminate).	0.485337972641	5155
Coq.setoid_ring.Ring_theory.IDmorph	40	123	search with cache (only 1: now N.nzsimpl').	38.2323307991	204331
Coq.setoid_ring.Ring_theory.Eqsth	40	7.0.26.8.2.2	search with cache (only 1: constructor; only 1: constructor; only 1: now repeat split; only 1: intros a b; only 1: intros; only 1: now destruct H).	4.36921691895	13789
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	0.0.3	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.0728750228882	6
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0849559307098	4
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	12.2	search with cache (only 1: intros n m H; only 1: trivial).	0.138935089111	227
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.0.6	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0389270782471	10
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	5	search with cache (only 1: solve_proper).	0.0161111354828	12
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0113589763641	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0114228725433	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	8.47.3	search with cache (only 1: intros x y H; only 1: f_equiv; only 1: exact H).	3.55320692062	6381
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0242059230804	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	5	search with cache (only 1: mrewrite).	0.0280351638794	6
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0147268772125	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	0.22.7	search with cache (only 1: intros x y; only 1: inversion_clear 1; only 1: rrefl).	10.1990439892	13197
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0154201984406	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0174179077148	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0143299102783	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0145881175995	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0142409801483	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0144670009613	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40	4.0.0.8.0.1.0.1.0.5.6.0	search with cache (only 1: intros; only 1: destruct n; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl; only 1: destruct w; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: now rewrite ?local_mkpow_ok; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl; only 1: destruct w; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite_sr Rsth Reqe ARth in norm; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	28.6481921673	16706
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.2.0.0.4	search with cache (only 1: induction x; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).	0.128687858582	61
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.014986038208	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.015095949173	1
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0148057937622	1
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.015289068222	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	32	search with cache (only 1: let rec Esimpl3 := let rec Esimpl2 := let rec Esimpl := let rec rsimpl := repeat gen_rewrite || rewrite phiCR_comm in repeat progress match goal with | |- context [ @Pphi ?l ?P ] => match P with | P0 => rewrite (Pphi0 (C:=l)) | P1 => rewrite (Pphi1 (C:=l)) | @mkPX ?P ?i ?n ?Q => rewrite (@mkPX_ok l P i n Q) end | |- context [ [?c] ] => match c with | 0 => rewrite ring_morphism0 | 1 => rewrite ring_morphism1 | ?x + ?y => rewrite ring_morphism_add | ?x * ?y => rewrite ring_morphism_mul | ?x - ?y => rewrite ring_morphism_sub | - ?x => rewrite ring_morphism_opp end end; simpl; rsimpl in Esimpl; repeat progress match goal with | |- context [ @Pphi ?l (@PaddCl ?c ?P) ] => rewrite (@PaddCl_ok c P l) | |- context [ @Pphi ?l (@PmulC ?P ?c) ] => rewrite (@PmulC_ok c P l) | |- context [ @Pphi ?l (@Popp ?P) ] => rewrite (@Popp_ok P l) end; Esimpl in repeat match goal with | |- context [ @Pphi ?l (@Padd ?P1 ?P2) ] => rewrite (@Padd_ok P1 P2 l) | |- context [ @Pphi ?l (@Psub ?P1 ?P2) ] => rewrite (@Psub_ok P1 P2 l) end; try Esimpl2; try reflexivity; try apply ring_add_comm in now Esimpl3).	4.07561087608	516
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0135178565979	1
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	2	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0153551101685	3
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0158259868622	3
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	0.61	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	3.32030701637	6051
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	11.3.1	search with cache (only 1: red; only 1: unfold Pequiv; only 1: solve_proper).	2.74193096161	1251
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	12.4	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	1.94608211517	562
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	9.4440279007	2625
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	2.1.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	6.59442687035	2628
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	9	search with cache (only 1: reflexivity).	0.0327920913696	17
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.0.0.0	search with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.024600982666	4
Coq.setoid_ring.Ncring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.0.1.3.0	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.0489919185638	9
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	2.1.3.0	search with cache (only 1: intros x y H7; only 1: pose proof (Zeq_bool_eq x y H7) as H10; only 1: rewrite H10; only 1: reflexivity).	0.020672082901	10
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	7.1.32	search with cache (only 1: intros Hcrossprod (Hc1, Hc2); only 1: rewrite Qmult_comm; only 1: apply Q_Setoid).	0.844320058823	1625
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0147950649261	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	1	search with cache (only 1: tauto).	0.00525093078613	2
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.134	search with cache (only 1: unlock; only 1: discriminate).	9.55394697189	69221
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	172	search with cache (only 1: by case : k ).	3.70271921158	38674
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.6	search with cache (only 1: destruct 1; only 1: tauto).	0.0115828514099	21
Coq.ssr.ssreflect.iffLR	40	1	search with cache (only 1: tauto).	0.00701284408569	2
Coq.ssr.ssreflect.iffRL	40	1	search with cache (only 1: tauto).	0.00712394714355	2
Coq.ssr.ssreflect.iffLRn	40	1.0	search with cache (only 1: intro H; only 1: tauto).	0.00830483436584	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0066020488739	1
Coq.ssr.ssreflect.abstract_context	40	1.105.11	search with cache (only 1: intro H; only 1: apply H; only 1: tauto).	1.9570069313	19171
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0124080181122	1
Coq.ssr.ssrbool.is_true_true	40	25	search with cache (only 1: by [  ]).	0.0508399009705	306
Coq.ssr.ssrbool.not_false_is_true	40	3	search with cache (only 1: discriminate).	0.00865912437439	4
Coq.ssr.ssrbool.is_true_locked_true	40	25.5	search with cache (only 1: unlock; only 1: by [  ]).	0.171904087067	802
Coq.ssr.ssrbool.negbT	40	12	search with cache (only 1: by move ->).	0.0491049289703	110
Coq.ssr.ssrbool.negbTE	40	179	search with cache (only 1: Bool.destr_bool).	22.9481229782	256061
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.011430978775	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.0113470554352	1
Coq.ssr.ssrbool.negbK	40	0.0.7.14	search with cache (only 1: intro H; only 1: destruct H; only 1: trivial; only 1: trivial).	0.141384124756	326
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.00990200042725	1
Coq.ssr.ssrbool.negb_inj	40	0.14	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0330028533936	91
Coq.ssr.ssrbool.negbLR	40	0.0.122.9	search with cache (only 1: inversion 1; only 1: destruct c; only 1: trivial; only 1: trivial).	21.9557819366	182254
Coq.ssr.ssrbool.negbRL	40	56.11.4	search with cache (only 1: intros; only 1: destruct H; only 1: by case : b ).	3.96760296822	22445
Coq.ssr.ssrbool.contra	40
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0165798664093	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.016655921936	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.016478061676	1
Coq.ssr.ssrbool.contraT	40
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : b  => // ->).	0.0139629840851	1
Coq.ssr.ssrbool.contraFT	40
Coq.ssr.ssrbool.contraFN	40	5.52.22.6.22	search with cache (only 1: intro H; only 1: intros; only 1: subst; only 1: red; only 1: intuition).	22.8396809101	99359
Coq.ssr.ssrbool.contraTF	40
Coq.ssr.ssrbool.contraNF	40	0.5.132	search with cache (only 1: destruct c; only 1: by case : b  => // ->; only 1: by case : b  => //; case : c ).	34.4821410179	168080
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40
Coq.ssr.ssrbool.ifT	40	2	search with cache (only 1: by case : b ).	0.0791869163513	12
Coq.ssr.ssrbool.ifF	40	0	search with cache (only 1: by move ->).	0.0115818977356	1
Coq.ssr.ssrbool.ifN	40	0	search with cache (only 1: by case : b ).	0.0704281330109	1
Coq.ssr.ssrbool.if_same	40	4	search with cache (only 1: by case : b  => //; case : c ).	0.0721070766449	5
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.0113589763641	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.0131390094757	1
Coq.ssr.ssrbool.if_arg	40	4	search with cache (only 1: by case : b  => //; case : c ).	0.0172281265259	5
Coq.ssr.ssrbool.ifE	40	2	search with cache (only 1: tauto).	0.0153779983521	3
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0173468589783	1
Coq.ssr.ssrbool.elimNTF	40
Coq.ssr.ssrbool.elimTF	40	7	search with cache (only 1: by move <-; case Hb).	0.0314149856567	14
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	11.17	search with cache (only 1: intros [Hl Hr]; only 1: by case : Pb ; constructor; auto).	0.465075016022	486
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	16	search with cache (only 1: by case Pb).	0.125006198883	108
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	2.8.27	search with cache (only 1: intro H; only 1: destruct H; only 1: tauto).	0.464128017426	844
Coq.ssr.ssrbool.impliesPn	40	2.8.13.28	search with cache (only 1: intro H; only 1: intros h1 h2; only 1: destruct H; only 1: tauto).	1.08979010582	2078
Coq.ssr.ssrbool.unlessL	40	2.0.56.63	search with cache (only 1: repeat split; only 1: red; only 1: intros; only 1: tauto).	1.82903194427	11074
Coq.ssr.ssrbool.unlessR	40	2.0.57.64	search with cache (only 1: repeat split; only 1: red; only 1: intros; only 1: tauto).	1.89608192444	11431
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40	4.17.4.17.2.0.2.0.146.15	search with cache (only 1: intuition; only 1: apply H; only 1: intro z; only 1: tauto; only 1: intro z; only 1: tauto; only 1: intro H; only 1: tauto; only 1: intro H; only 1: tauto).	21.8035678864	151962
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	14	search with cache (only 1: by move  =>b b' ->).	0.0505309104919	75
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	3.0.2.3.0.2.53	search with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	1.22418999672	3935
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0167460441589	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0201559066772	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0224590301514	1
Coq.ssr.ssrbool.pair_andP	40	4.4.15	search with cache (only 1: split; only 1: by case; only 1: by case).	0.215461969376	361
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	3	search with cache (only 1: by case b1; constructor).	0.0137989521027	4
Coq.ssr.ssrbool.idPn	40	5	search with cache (only 1: by case b1; constructor).	0.0151870250702	6
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0138700008392	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.0116040706635	1
Coq.ssr.ssrbool.negPf	40	3	search with cache (only 1: by case b1; constructor).	0.0141909122467	4
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	5	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0998220443726	6
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0203590393066	1
Coq.ssr.ssrbool.implyP	40	12	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0295729637146	46
Coq.ssr.ssrbool.andTb	40	1.19	search with cache (only 1: intro H; only 1: trivial).	0.0942161083221	209
Coq.ssr.ssrbool.andFb	40	1.19	search with cache (only 1: intro H; only 1: intuition).	0.0728490352631	209
Coq.ssr.ssrbool.andbT	40	1.3.15.19	search with cache (only 1: intro H; only 1: destruct H; only 1: tauto; only 1: intuition).	0.501577138901	1126
Coq.ssr.ssrbool.andbF	40	0.1.11.19	search with cache (only 1: intro H; only 1: destruct H; only 1: intuition; only 1: reflexivity).	0.310086011887	693
Coq.ssr.ssrbool.andbb	40	0.3.9.19	search with cache (only 1: intro H; only 1: destruct H; only 1: tauto; only 1: reflexivity).	0.313174962997	700
Coq.ssr.ssrbool.andbC	40	0.19	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0803079605103	186
Coq.ssr.ssrbool.andbA	40	8	search with cache (only 1: by do 2!case).	0.0186688899994	9
Coq.ssr.ssrbool.andbCA	40	8	search with cache (only 1: by do 2!case).	0.0183999538422	9
Coq.ssr.ssrbool.andbAC	40	0.20	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.15376996994	208
Coq.ssr.ssrbool.andbACA	40	0.20	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.171242952347	208
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.0105359554291	1
Coq.ssr.ssrbool.orFb	40	0.20	search with cache (only 1: intro H; only 1: trivial).	0.116619110107	208
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.0143539905548	3
Coq.ssr.ssrbool.orbF	40	7.20	search with cache (only 1: intro H; only 1: intuition).	0.215240955353	418
Coq.ssr.ssrbool.orbb	40	0.0.13.20	search with cache (only 1: intro H; only 1: destruct H; only 1: trivial; only 1: reflexivity).	0.363124847412	779
Coq.ssr.ssrbool.orbC	40	8	search with cache (only 1: by do 2!case).	0.0166280269623	9
Coq.ssr.ssrbool.orbA	40	8	search with cache (only 1: by do 2!case).	0.0173101425171	9
Coq.ssr.ssrbool.orbCA	40	8	search with cache (only 1: by do 2!case).	0.0174119472504	9
Coq.ssr.ssrbool.orbAC	40	0.20	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.161063909531	208
Coq.ssr.ssrbool.orbACA	40	0.20	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.178992033005	208
Coq.ssr.ssrbool.andbN	40	9	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.014771938324	10
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.0120530128479	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : b ).	0.0118918418884	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.0121479034424	1
Coq.ssr.ssrbool.andb_orl	40	0.20	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.160557985306	208
Coq.ssr.ssrbool.andb_orr	40	8	search with cache (only 1: by do 2!case).	0.0174810886383	9
Coq.ssr.ssrbool.orb_andl	40	0.20	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.136495113373	208
Coq.ssr.ssrbool.orb_andr	40	8	search with cache (only 1: by do 2!case).	0.0172998905182	9
Coq.ssr.ssrbool.andb_idl	40	2.5.5.7.82.31	search with cache (only 1: intro H; only 1: destruct a, b; only 1: tauto; only 1: intuition; only 1: intuition; only 1: reflexivity).	11.066683054	40945
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0181510448456	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0207920074463	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0266759395599	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0188338756561	1
Coq.ssr.ssrbool.orb_idr	40	1	search with cache (only 1: by case : a ; case : b  => // ->).	0.021509885788	2
Coq.ssr.ssrbool.orb_id2l	40	8	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0705368518829	9
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0261461734772	1
Coq.ssr.ssrbool.negb_and	40	0.0.0.0.94	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	1.56247615814	5862
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : a ; case : b ).	0.0147330760956	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0143189430237	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0147368907928	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.014237165451	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0145618915558	1
Coq.ssr.ssrbool.implybT	40	3	search with cache (only 1: by case : b ).	0.0127110481262	4
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : b ).	0.0319180488586	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.0114932060242	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.0116510391235	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case  def_b: b ; constructor).	0.0144538879395	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.0146861076355	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : a ; case : b ).	0.0147860050201	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0148777961731	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0148169994354	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0146989822388	1
Coq.ssr.ssrbool.implyb_idl	40	14	search with cache (only 1: by case : a ; case : b  => // ->).	0.280907154083	75
Coq.ssr.ssrbool.implyb_idr	40	2	search with cache (only 1: by case : a ; case : b  => // ->).	0.0237169265747	3
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0259330272675	1
Coq.ssr.ssrbool.addFb	40	0.19	search with cache (only 1: intro H; only 1: trivial).	0.0873999595642	186
Coq.ssr.ssrbool.addbF	40	0.0.20.19	search with cache (only 1: intro H; only 1: destruct H; only 1: intuition; only 1: reflexivity).	0.506509780884	1170
Coq.ssr.ssrbool.addbb	40	0.0.20.19	search with cache (only 1: intro H; only 1: destruct H; only 1: intuition; only 1: reflexivity).	0.469964027405	1170
Coq.ssr.ssrbool.addbC	40	7	search with cache (only 1: by do 2!case).	0.0168600082397	8
Coq.ssr.ssrbool.addbA	40	1.19	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.164432048798	209
Coq.ssr.ssrbool.addbCA	40	7	search with cache (only 1: by do 2!case).	0.0178439617157	8
Coq.ssr.ssrbool.addbAC	40	1.19	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.163661956787	209
Coq.ssr.ssrbool.addbACA	40	0.19	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.168214082718	186
Coq.ssr.ssrbool.andb_addl	40	0.19	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.154106140137	186
Coq.ssr.ssrbool.andb_addr	40	7	search with cache (only 1: by do 2!case).	0.0172030925751	8
Coq.ssr.ssrbool.addKb	40	8	search with cache (only 1: by do 2!case).	0.0188498497009	9
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by do 2!case).	0.0137448310852	1
Coq.ssr.ssrbool.addIb	40	0.1.19	search with cache (only 1: intro H; only 1: red; only 1: Bool.destr_bool).	0.192615032196	234
Coq.ssr.ssrbool.addbI	40	3.15.8.19	search with cache (only 1: intro H; only 1: destruct H; only 1: by do 2!case; only 1: by [  ]).	0.884809970856	1848
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.0530600547791	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : b ).	0.0142378807068	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0147571563721	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0143659114838	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.110	search with cache (only 1: destruct a, b; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	4.30110001564	7416
Coq.ssr.ssrbool.subrelUl	40	8.1.77	search with cache (only 1: intros n m; only 1: simpl; only 1: by move ->).	3.40722703934	14724
Coq.ssr.ssrbool.subrelUr	40	19.0.0.69	search with cache (only 1: red; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	3.8279838562	16040
Coq.ssr.ssrbool.sub_refl	40	6.19	search with cache (only 1: intro H; only 1: by move ->).	0.134551048279	354
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	2	search with cache (only 1: by case : pT pp ).	0.0148689746857	3
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  => _ /= ->).	0.0140221118927	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.0140118598938	5
Coq.ssr.ssrbool.simpl_predE	40	1	search with cache (only 1: by [  ]).	0.011579990387	2
Coq.ssr.ssrbool.mem_simpl	40	6	search with cache (only 1: by [  ]).	0.0129039287567	7
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	2	search with cache (only 1: by [  ]).	0.0119030475616	3
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	10	search with cache (only 1: trivial).	0.0180048942566	21
Coq.ssr.ssrbool.in1W	40	37.18	search with cache (only 1: intro H; only 1: by [  ]).	1.7090408802	2501
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.0136048793793	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.0144548416138	1
Coq.ssr.ssrbool.in1T	40	106	search with cache (only 1: intuition).	11.8386969566	16261
Coq.ssr.ssrbool.in2T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0138468742371	1
Coq.ssr.ssrbool.in3T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0146820545197	1
Coq.ssr.ssrbool.sub_in1	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0130009651184	1
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0178101062775	2
Coq.ssr.ssrbool.sub_in111	40	2	search with cache (only 1: by move  =>? ?; auto).	0.0217931270599	3
Coq.ssr.ssrbool.on1W	40	3	search with cache (only 1: by move  =>? ?).	0.0182449817657	4
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.0135238170624	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.0136730670929	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0187819004059	2
Coq.ssr.ssrbool.on1lT	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0137519836426	1
Coq.ssr.ssrbool.on2T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0140869617462	1
Coq.ssr.ssrbool.subon1	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0134000778198	1
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0137159824371	1
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0185289382935	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	5	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0417370796204	6
Coq.ssr.ssrbool.canLR_on	40	5	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0249290466309	6
Coq.ssr.ssrbool.canRL_on	40	8	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0262770652771	9
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0177819728851	1
Coq.ssr.ssrbool.inT_bij	40	6	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0233900547028	7
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0223541259766	1
Coq.ssr.ssrbool.sub_in_bij	40	0.33	search with cache (only 1: intro H; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.798542976379	585
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0268549919128	1
Coq.ssr.ssrbool.sub_in2	40	1.67.76	search with cache (only 1: intros; only 1: red; only 1: auto).	19.0844848156	64677
Coq.ssr.ssrbool.sub_in3	40	1.74.77	search with cache (only 1: intros; only 1: intro x; only 1: auto).	27.777671814	78724
Coq.ssr.ssrbool.sub_in12	40	0.37	search with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.834129095078	735
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0168898105621	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	14	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0776591300964	75
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0133399963379	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0160439014435	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40	9.21.37.3.9	search with cache (only 1: move  =>mf mg x y; only 1: red; only 1: intro H; only 1: inversion 1; only 1: intuition).	10.6128938198	21708
Coq.ssr.ssrbool.mono2W_in	40	15	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.248527050018	101
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0260140895844	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1.1	search with cache (only 1: intros; only 1: exact H).	0.00641489028931	4
Coq.ssr.ssrfun.unitE	40	1.6.11	search with cache (only 1: intro H; only 1: destruct H; only 1: tauto).	0.0540928840637	223
Coq.ssr.ssrfun.frefl	40	0.11	search with cache (only 1: intro H; only 1: trivial).	0.0179421901703	46
Coq.ssr.ssrfun.fsym	40	21.11	search with cache (only 1: intro H; only 1: by [  ]).	0.276386976242	836
Coq.ssr.ssrfun.ftrans	40	1.10.11.48	search with cache (only 1: intros n m; only 1: intro H; only 1: elim m; only 1: trivial).	2.242882967	10671
Coq.ssr.ssrfun.rrefl	40	1.12	search with cache (only 1: intro H; only 1: reflexivity).	0.0302860736847	77
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	1.0.0.0.0.0.1.0	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: destruct (H z); only 1: destruct (H z); only 1: destruct (H z); only 1: assumption).	0.0330259799957	11
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0188949108124	1
Coq.ssr.ssrfun.svalP	40	3	search with cache (only 1: apply proj2_sig).	0.0102529525757	4
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : u ).	0.0102338790894	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.0104119777679	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0146880149841	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0181820392609	1
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.0147998332977	2
Coq.ssr.ssrfun.canLR	40	0.10.22	search with cache (only 1: intro H; only 1: inversion 1; only 1: trivial).	0.618433952332	1917
Coq.ssr.ssrfun.canRL	40	25.8	search with cache (only 1: destruct 2; only 1: auto).	0.505429029465	1440
Coq.ssr.ssrfun.Some_inj	40	1.94	search with cache (only 1: inversion 1; only 1: tauto).	8.94253802299	43562
Coq.ssr.ssrfun.of_voidK	40	3.16	search with cache (only 1: intro H; only 1: tauto).	0.0760140419006	192
Coq.ssr.ssrfun.esymK	40	0.1.55	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.494085073471	1728
Coq.ssr.ssrfun.etrans_id	40	3.38	search with cache (only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.33638215065	907
Coq.ssr.ssrfun.inj_id	40	1.0.0	search with cache (only 1: red; only 1: intros; only 1: tauto).	0.0147588253021	4
Coq.ssr.ssrfun.inj_can_sym	40	2.45.5	search with cache (only 1: intros Hfst Hsnd; only 1: intro x; only 1: auto).	1.14662098885	4095
Coq.ssr.ssrfun.inj_comp	40	3.56.2	search with cache (only 1: intros Hfst Hsnd; only 1: intro H; only 1: auto).	1.13036513329	4784
Coq.ssr.ssrfun.inj_compr	40	1.8.30.27.1.22	search with cache (only 1: intros h1 h2; only 1: Bool.destr_bool; only 1: apply h1; only 1: simpl in *; only 1: rewrite H; only 1: reflexivity).	17.2579159737	105571
Coq.ssr.ssrfun.can_comp	40	3.22.63	search with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	3.40287899971	13589
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	1.1.179	search with cache (only 1: exists f; only 1: tauto; only 1: tauto).	3.1496078968	29543
Coq.ssr.ssrunder.Under_rel_from_rel	40	2.1	search with cache (only 1: intros; only 1: trivial).	0.00457096099854	5
Coq.ssr.ssrunder.Under_relE	40	0	search with cache (only 1: split).	0.00262594223022	1
Coq.ssr.ssrunder.over_rel	40	0	search with cache (only 1: split).	0.00285196304321	1
Coq.ssr.ssrunder.over_rel_done	40	2	search with cache (only 1: now trivial).	0.00488185882568	12
Coq.ssr.ssrunder.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00292992591858	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	5.10.6.1	search with cache (only 1: intros P Hrec p; only 1: intros; only 1: destruct H; only 1: now f_equal).	0.86536693573	1749
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.0.5	search with cache (only 1: refine (@rectS _ _ _ _); only 1: simpl; only 1: auto; only 1: now simpl).	0.258625984192	111
Coq.Vectors.VectorSpec.const_nth	40	0.0.5.8	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	0.221905231476	205
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.4.2.0	search with cache (only 1: intros P Hrec p; only 1: simpl; only 1: intros; only 1: reflexivity).	0.0113739967346	10
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	0.0.0.0.0.0.2.0.3.1.0	search with cache (only 1: intros P Hrec p; only 1: induction p; only 1: intros; only 1: auto; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.908971786499	1034
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.1.0.1.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.917662858963	439
Coq.Vectors.VectorSpec.uncons_cons	40	3.0	search with cache (only 1: intros; only 1: auto).	0.00865602493286	5
Coq.Vectors.VectorSpec.append_comm_cons	40	0.1.0.0	search with cache (only 1: intros; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.0121579170227	5
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	5.11.0	search with cache (only 1: intros; only 1: destruct H; only 1: now f_equal).	0.334444999695	616
Coq.Setoids.Setoid.Seq_refl	40	248	search with cache (only 1: firstorder).	26.7959830761	301228
Coq.Setoids.Setoid.Seq_sym	40	1	search with cache (only 1: firstorder).	0.00904011726379	2
Coq.Setoids.Setoid.Seq_trans	40	5	search with cache (only 1: firstorder).	0.117172956467	38
Coq.Setoids.Setoid.gen_st	40	0	search with cache (only 1: CRelationClasses.simpl_crelation).	0.00819492340088	1
Coq.Bool.IfProp.Iftrue_inv	40	3.1.2.0.12	search with cache (only 1: intro H; only 1: destruct 1; only 1: intros; only 1: tauto; only 1: discriminate).	0.12283205986	364
Coq.Bool.IfProp.Iffalse_inv	40	1.1.4.0	search with cache (only 1: destruct 1; only 1: discriminate; only 1: intros; only 1: tauto).	0.0075569152832	18
Coq.Bool.IfProp.IfProp_true	40	1.85	search with cache (only 1: inversion 1; only 1: tauto).	9.78374290466	111033
Coq.Bool.IfProp.IfProp_false	40	1.85	search with cache (only 1: inversion 1; only 1: tauto).	7.68460011482	87679
Coq.Bool.IfProp.IfProp_or	40	1.1.0	search with cache (only 1: destruct 1; only 1: tauto; only 1: tauto).	0.00605583190918	5
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	0.7.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00867605209351	10
Coq.Bool.Zerob.zerob_true_elim	40	19.0.3	search with cache (only 1: destruct n; only 1: auto; only 1: inversion 1).	1.10248994827	4328
Coq.Bool.Zerob.zerob_false_intro	40	0.0.1.10.2.1.2	search with cache (only 1: destruct n; only 1: intro H; only 1: simpl; only 1: now elim H; only 1: intro H; only 1: simpl; only 1: trivial).	0.360821008682	1145
Coq.Bool.Zerob.zerob_false_elim	40	9.4.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: auto).	0.215338945389	528
Coq.Bool.DecBool.ifdec_left	40	14.6.0.0.11	search with cache (only 1: destruct H; only 1: intros H ?; only 1: reflexivity; only 1: destruct 1; only 1: trivial).	3.46351408958	19696
Coq.Bool.DecBool.ifdec_right	40	0.0.15.1.1.12	search with cache (only 1: destruct H; only 1: intro H; only 1: intros n m; only 1: contradiction; only 1: intros H ?; only 1: auto).	2.25120520592	15956
Coq.Bool.Sumbool.sumbool_of_bool	40	1.0.27.19	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.566442966461	4647
Coq.Bool.Sumbool.bool_eq_rec	40
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0104689598083	3
Coq.Bool.Sumbool.sumbool_and	40	9.9.0.9.0.86.18	search with cache (only 1: destruct H2; only 1: elim H1; only 1: intro z; only 1: auto; only 1: intro z; only 1: auto; only 1: auto).	16.4228169918	248640
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0160341262817	7
Coq.Bool.Sumbool.sumbool_not	40	0.0.0.0.0.0.2	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0142059326172	9
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	5	search with cache (only 1: discriminate).	0.00878810882568	6
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00725388526917	1
Coq.Bool.Bool.eq_true_false_abs	40	7.4.2.5.23	search with cache (only 1: intro H; only 1: destruct H; only 1: destruct 1; only 1: discriminate; only 1: discriminate).	3.04369091988	29813
Coq.Bool.Bool.not_true_is_false	40	4.14.1.5.21.14	search with cache (only 1: intro H; only 1: destruct H; only 1: intro H; only 1: destruct H; only 1: trivial; only 1: repeat split).	1.60955405235	13056
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0110399723053	2
Coq.Bool.Bool.not_true_iff_false	40	0.3.2.0.0.2.7.4.17	search with cache (only 1: intro H; only 1: split; only 1: intros; only 1: destruct H; only 1: intuition; only 1: intuition; only 1: intros; only 1: subst; only 1: discriminate).	1.85110187531	12327
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0153958797455	3
Coq.Bool.Bool.leb_implb	40	0.1.0.0.0.3	search with cache (only 1: destruct b1; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intro z; only 1: intuition).	0.0267989635468	20
Coq.Bool.Bool.eqb_subst	40	1.0.1.15	search with cache (only 1: intro H; only 1: destruct b1; only 1: destr_bool; only 1: destr_bool).	0.178337097168	475
Coq.Bool.Bool.eqb_reflx	40	1.14.8.16	search with cache (only 1: intro H; only 1: destruct H; only 1: trivial; only 1: intuition).	0.489669084549	2629
Coq.Bool.Bool.eqb_prop	40	0.0.1.1.1.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: intros; only 1: intuition; only 1: intros; only 1: assumption; only 1: repeat split).	0.0205478668213	10
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0304517745972	22
Coq.Bool.Bool.eqb_false_iff	40	1.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0250561237335	7
Coq.Bool.Bool.negb_orb	40	0.1.2.1.0	search with cache (only 1: intros n m; only 1: induction n; only 1: intuition; only 1: simpl; only 1: auto).	0.0182318687439	14
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0110628604889	1
Coq.Bool.Bool.negb_involutive	40	1	search with cache (only 1: destr_bool).	0.00934290885925	2
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00939297676086	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0127420425415	1
Coq.Bool.Bool.no_fixpoint_negb	40	2	search with cache (only 1: destr_bool).	0.0104939937592	3
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00952196121216	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00948810577393	1
Coq.Bool.Bool.if_negb	40	3.17.16	search with cache (only 1: intro H; only 1: intro H1; only 1: destr_bool).	0.264221191406	1205
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0162220001221	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0163071155548	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0288331508636	5
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0274229049683	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0559029579163	5
Coq.Bool.Bool.orb_prop	40	0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0286338329315	17
Coq.Bool.Bool.orb_true_intro	40	0.1.1.0	search with cache (only 1: destruct b1; only 1: destr_bool; only 1: destr_bool; only 1: intuition).	0.128697872162	108
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.0143711566925	1
Coq.Bool.Bool.orb_false_elim	40	0.0.1.0.2	search with cache (only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: auto).	0.0341181755066	25
Coq.Bool.Bool.orb_diag	40	0	search with cache (only 1: destr_bool).	0.0122981071472	1
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.0103149414062	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.0111939907074	1
Coq.Bool.Bool.orb_false_r	40	0	search with cache (only 1: destr_bool).	0.0101730823517	1
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0101270675659	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0102591514587	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0142540931702	1
Coq.Bool.Bool.orb_assoc	40	3	search with cache (only 1: destr_bool).	0.0225389003754	13
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0278608798981	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0300440788269	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0241549015045	9
Coq.Bool.Bool.andb_false_intro1	40	0.1.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.0126581192017	4
Coq.Bool.Bool.andb_false_intro2	40	1.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0158817768097	4
Coq.Bool.Bool.andb_false_r	40	1	search with cache (only 1: destr_bool).	0.0103251934052	2
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.010134935379	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.0100319385529	1
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.0099790096283	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.0106360912323	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.1	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0320370197296	15
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0104060173035	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0123000144958	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0164411067963	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0167551040649	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0166981220245	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0167410373688	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0164830684662	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0123820304871	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0122802257538	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00995802879333	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.0100598335266	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.0101420879364	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00886297225952	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.0101969242096	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.0347831249237	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0166780948639	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0131330490112	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0172159671783	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0183489322662	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0176138877869	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0174970626831	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.0123579502106	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.017826795578	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.0127000808716	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0355868339539	5
Coq.Bool.Bool.eq_true_iff_eq	40	2.2.5	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.35400891304	387
Coq.Bool.Bool.eq_true_negb_classical	40	0.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0141699314117	3
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0137259960175	2
Coq.Bool.Bool.absurd_eq_bool	40	6.1	search with cache (only 1: intros; only 1: destruct H).	0.016725063324	20
Coq.Bool.Bool.absurd_eq_true	40	6.1	search with cache (only 1: destr_bool; only 1: destruct H).	0.0123660564423	9
Coq.Bool.Bool.trans_eq_bool	40	0	search with cache (only 1: destr_bool).	0.0168628692627	1
Coq.Bool.Bool.Is_true_eq_true	40	6.10	search with cache (only 1: destr_bool; only 1: destruct H).	0.127403974533	288
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.0104598999023	1
Coq.Bool.Bool.Is_true_eq_right	40	1	search with cache (only 1: destr_bool).	0.0148119926453	12
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.0100128650665	1
Coq.Bool.Bool.eqb_eq	40	2.2.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0165100097656	7
Coq.Bool.Bool.orb_prop_elim	40	2.2.2.2.3	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.282167196274	457
Coq.Bool.Bool.orb_prop_intro	40	2.5	search with cache (only 1: destr_bool; only 1: tauto).	0.0299851894379	29
Coq.Bool.Bool.andb_prop_intro	40	2.2.2.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0184609889984	10
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0341670513153	29
Coq.Bool.Bool.eq_bool_prop_intro	40	2.2.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0214519500732	8
Coq.Bool.Bool.eq_bool_prop_elim	40	2.2.3	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0782248973846	39
Coq.Bool.Bool.negb_prop_elim	40	2.2.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0626721382141	7
Coq.Bool.Bool.negb_prop_intro	40	2.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0146980285645	4
Coq.Bool.Bool.negb_prop_classical	40	2.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0133740901947	4
Coq.Bool.Bool.negb_prop_involutive	40	2.2.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0138618946075	7
Coq.Bool.Bool.andb_if	40	4	search with cache (only 1: destr_bool).	0.0147120952606	5
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.010556936264	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.0134418010712	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.00901985168457	1
Coq.Bool.Bool.reflect_iff	40	3.1.1.23.0.1.6.13	search with cache (only 1: intro H; only 1: intro x; only 1: destruct 1; only 1: intuition; only 1: split; only 1: destr_bool; only 1: tauto; only 1: discriminate).	9.8041100502	54715
Coq.Bool.Bool.iff_reflect	40	2.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0238969326019	15
Coq.Bool.Bool.reflect_dec	40	0.0.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0170459747314	3
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.138	search with cache (only 1: destruct b, b'; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	1.60762500763	15112
Coq.Bool.BoolEq.beq_eq_true	40	22.5.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.299363851547	1735
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	0.0.7.1.2.0.0	search with cache (only 1: simple induction x; only 1: easy; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	2.23081994057	2401
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.1.6.0.0.3.0.0.3.2.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: intro eq; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec b a0); only 1: left; only 1: now subst; only 1: right; only 1: auto with datatypes).	28.9158699512	35108
Coq.Lists.ListSet.set_add_intro	40	0.8	search with cache (only 1: intros a0 l; only 1: firstorder).	0.391463041306	166
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.0.0.1.1.1.1.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: left; only 1: tauto; only 1: tauto).	6.28623700142	4765
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40	0.0.0.0.1.0.0.2.0.7	search with cache (only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	0.769944906235	556
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.1.0.2.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.0624330043793	16
Coq.Lists.ListSet.set_union_intro	40	0.0.0	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.0228941440582	3
Coq.Lists.ListSet.set_union_elim	40	3.1.0.3.2.0.0.0.4	search with cache (only 1: simple induction y; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: rewrite set_add_iff; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: tauto).	14.780230999	11312
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.1.0.2.2.0.0.1.0	search with cache (only 1: simple induction x; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	3.12473106384	1844
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0266199111938	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	0.0.1.0.1.2	search with cache (only 1: simple induction x; only 1: simpl; only 1: unfold set_In; only 1: tauto; only 1: intros a0 l Hrec y; only 1: eauto with datatypes).	0.716773986816	171
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40	0.2.0.0.5	search with cache (only 1: intros a x H; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	2.58017802238	648
Coq.Lists.ListDec.In_decidable	40	1.0.4.2	search with cache (only 1: induction l as [| a l' Hrec]; only 1: intuition; only 1: simpl in *; only 1: intuition).	0.0450999736786	55
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	0.3.2	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.0127789974213	8
Coq.Lists.Streams.tl_nth_tl	40	0.3.0.0.0.4	search with cache (only 1: induction n; only 1: intro x; only 1: reflexivity; only 1: intro x; only 1: simpl; only 1: auto).	0.211051940918	245
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	1.0.3.3.1.0.2	search with cache (only 1: intro x; only 1: intro; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: destruct H; only 1: reflexivity; only 1: exact H).	0.305245876312	699
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40
Coq.Lists.Streams.Str_nth_tl_map	40	0.1.0.0.3	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0254139900208	17
Coq.Lists.Streams.Str_nth_map	40	0.0.3.0.0.0	search with cache (only 1: induction n; only 1: intros s; only 1: unfold Str_nth; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.021614074707	9
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	1.2.0.3.2	search with cache (only 1: simple induction n; only 1: intros S; only 1: reflexivity; only 1: simpl; only 1: auto).	0.264886140823	272
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: apply IHn).	0.0187249183655	4
Coq.Lists.List.nil_cons	40	8.2.0	search with cache (only 1: intros a b; only 1: intros H'; only 1: discriminate).	0.171190977097	181
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	1.2.1.0.0	search with cache (only 1: destruct l as [| x xs]; only 1: intros n IH; only 1: discriminate; only 1: intros EQ; only 1: firstorder  discriminate).	0.0286271572113	18
Coq.Lists.List.length_zero_iff_nil	40	0.0.1.0.0.74.3	search with cache (only 1: split; only 1: destruct l; only 1: firstorder  discriminate; only 1: inversion 1; only 1: inversion 1; only 1: subst; only 1: auto).	18.0225040913	133295
Coq.Lists.List.hd_error_nil	40	1	search with cache (only 1: reflexivity).	0.00968384742737	2
Coq.Lists.List.hd_error_cons	40	1.0.0.1.0.0.0	search with cache (only 1: destruct l; only 1: intros; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: reflexivity).	0.0213630199432	9
Coq.Lists.List.in_eq	40	7.5.0	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.246681928635	555
Coq.Lists.List.in_cons	40	3.4.2	search with cache (only 1: intros EQ; only 1: simpl; only 1: auto).	0.259366035461	332
Coq.Lists.List.not_in_cons	40
Coq.Lists.List.in_nil	40	8.0	search with cache (only 1: intros; only 1: auto).	0.0161330699921	18
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0108001232147	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	2.0.0.0.0	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.0199499130249	7
Coq.Lists.List.app_nil_r	40	0.1.1.0.1	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.0204558372498	8
Coq.Lists.List.app_nil_end	40	0.0.0.1.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.0200369358063	6
Coq.Lists.List.app_assoc	40	1.0.1.4.0.0.3.8	search with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: simpl; only 1: f_equal; only 1: intros; only 1: simpl; only 1: apply f_equal; only 1: auto).	7.40200591087	13005
Coq.Lists.List.app_assoc_reverse	40	0.0.1.0.1.1.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0928001403809	27
Coq.Lists.List.app_comm_cons	40	0.0.0.0.0.0.1	search with cache (only 1: destruct x as [| a l]; only 1: intros; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: f_equal).	0.025398015976	8
Coq.Lists.List.app_eq_nil	40	6.3.2.5	search with cache (only 1: destruct l; only 1: auto using app_assoc; only 1: intros; only 1: discriminate H).	0.629359006882	944
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	0.0.0.0.0.1.0.0.2.1.0	search with cache (only 1: destruct l as [| x l]; only 1: reflexivity; only 1: symmetry; only 1: simpl; only 1: f_equal; only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: f_equal; only 1: auto).	1.43938398361	1611
Coq.Lists.List.in_app_or	40	10.1.1.2.0.1.7	search with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: intros; only 1: generalize H; only 1: generalize (app_nil_r l); only 1: firstorder  discriminate).	7.44234204292	14510
Coq.Lists.List.in_or_app	40	0.3.3.1.2.0.2.0.7.1	search with cache (only 1: intros l m a; only 1: elim l; only 1: firstorder  discriminate; only 1: simpl; only 1: intros a0 y H H0; only 1: elim H0; only 1: intros [Hc1| Hc2]; only 1: auto; only 1: auto; only 1: auto).	7.9048371315	16580
Coq.Lists.List.in_app_iff	40	10.0.0.0.4.4	search with cache (only 1: intros l m a; only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	9.68571305275	8738
Coq.Lists.List.app_inv_head	40	1.2.1.5.1.0.12.1	search with cache (only 1: intros l m n; only 1: elim l; only 1: simpl; only 1: now destruct l; only 1: intros a r; only 1: intros EQ; only 1: inversion 1; only 1: auto).	25.080493927	45899
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	1.1.0.0	search with cache (only 1: intros n l d; only 1: intros a H; only 1: simpl; only 1: auto).	0.0179138183594	6
Coq.Lists.List.nth_default_eq	40	2.3.2.1.0.0.0.1.2.0.0.0	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: intros [| n]; only 1: auto; only 1: auto; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (IHl n); only 1: auto).	9.56429409981	15142
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	2.1.0.0.0.2.1.5.1.12.0.0	search with cache (only 1: induction l; only 1: intros a b c0; only 1: inversion 1; only 1: Nat.induct ltac:(n); only 1: auto; only 1: induction n as [| n hn]; only 1: intros; only 1: simpl; only 1: apply IHl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	28.8332288265	70350
Coq.Lists.List.app_nth1	40
Coq.Lists.List.app_nth2	40	0.2.0.2.1.0.1.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: split; only 1: split; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	2.27366805077	1853
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.3.0.0.0.0.0.0.0.0.1	search with cache (only 1: revert l; only 1: induction n as [| n IH]; only 1: intros [| a l] H; only 1: f_equal; only 1: simpl; only 1: easy; only 1: now simpl; only 1: intros [| a l] H; only 1: easy; only 1: simpl; only 1: auto with arith).	4.25711393356	2164
Coq.Lists.List.nth_error_app2	40	0.0.0.1.0.1.1.0.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: solve [ inversion H ]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	0.932454109192	533
Coq.Lists.List.nth_error_nth	40	0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: induction l; only 1: intros [| n] d d'; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).	0.8697078228	568
Coq.Lists.List.nth_error_nth'	40	3.0.0.1.0.0.1.0.1.0.0	search with cache (only 1: induction l; only 1: destruct n; only 1: intros a H; only 1: solve [ inversion H ]; only 1: intros; only 1: solve [ inversion H ]; only 1: destruct n; only 1: intros; only 1: auto; only 1: simpl; only 1: auto with arith).	2.91430807114	2888
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	1	search with cache (only 1: intuition).	0.0126440525055	2
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	11.0.18.1.1	search with cache (only 1: intros H; only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	7.68188309669	16405
Coq.Lists.List.count_occ_cons_neq	40	0.1.2	search with cache (only 1: intro HF; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0445561408997	31
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	2.2.0.9.6.2	search with cache (only 1: induction l as [| x l]; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	6.86844396591	11638
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	0.2.3	search with cache (only 1: induction l as [| x l]; only 1: auto with arith; only 1: firstorder).	0.0499699115753	36
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0	search with cache (only 1: auto).	0.01069688797	1
Coq.Lists.List.concat_cons	40	0	search with cache (only 1: auto).	0.0110549926758	1
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0137829780579	2
Coq.Lists.List.in_map	40	1.1.8.1.5.0.1.1	search with cache (only 1: induction l as [| x l]; only 1: trivial; only 1: intros a H; only 1: simpl; only 1: inversion_clear H; only 1: elim H0; only 1: intuition; only 1: intuition).	32.1392569542	44685
Coq.Lists.List.in_map_iff	40
Coq.Lists.List.map_length	40	1.0.1.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	0.0701911449432	39
Coq.Lists.List.map_nth	40	2.0.0.8.0.1.0.4.3	search with cache (only 1: induction l as [| x l]; only 1: induction n as [| n IH]; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: induction n as [| n IH]; only 1: reflexivity; only 1: simpl; only 1: auto).	18.7667460442	33219
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	2.3.0.0.2.1	search with cache (only 1: induction l; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	1.36061406136	1138
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	4.0.4	search with cache (only 1: induction l; only 1: auto; only 1: now auto with arith).	0.131588935852	92
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.0.0.1.1	search with cache (only 1: induction l as [| x l]; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0234251022339	7
Coq.Lists.List.concat_map	40	0.3.2.4.0.3	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: reflexivity).	1.32686805725	1475
Coq.Lists.List.map_id	40	0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0234749317169	6
Coq.Lists.List.map_map	40	0.4.1.0.1	search with cache (only 1: induction l as [| x l]; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.118146181107	89
Coq.Lists.List.map_ext_in	40	0.0.11.3.0.1.1.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: intros H; only 1: simpl; only 1: rewrite IHl; only 1: f_equal; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	9.24744105339	9748
Coq.Lists.List.ext_in_map	40	0.9.0.2.0	search with cache (only 1: induction l; only 1: intros H; only 1: firstorder  (subst; auto); only 1: inversion 1; only 1: firstorder  (subst; auto)).	2.49985098839	2168
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.0295450687408	8
Coq.Lists.List.fold_left_app	40	3.3.0.0.6	search with cache (only 1: induction l; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: auto).	1.16621994972	1046
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.3.0.0.0.1.0.0	search with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.14653110504	752
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.500138044357	272
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	0.0.0.0.0.0.0.0.2.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto; only 1: intros; only 1: auto).	0.585435152054	356
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0182490348816	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.2.1.0.0.0.0.0.0	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto; only 1: auto).	0.768894910812	419
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40
Coq.Lists.List.filter_ext	40	0.0.3.1	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0829300880432	52
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.1.3.6.2.0.0.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (split l); only 1: simpl in *; only 1: destruct a; only 1: simpl; only 1: now f_equal).	7.92705607414	10327
Coq.Lists.List.split_length_r	40	0.0.0.0.0.1.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.139910936356	31
Coq.Lists.List.split_combine	40	3.7.2.5.6.0	search with cache (only 1: induction l; only 1: now f_equal; only 1: simpl in *; only 1: destruct (split l); only 1: subst; only 1: tauto).	6.75753998756	8930
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40	3.0.0.0.1.3.0.0.1.1.1	search with cache (only 1: induction l, l'; only 1: inversion 1; only 1: inversion 1; only 1: intros; only 1: destruct H; only 1: simpl; only 1: intros; only 1: destruct H; only 1: injection H; only 1: auto; only 1: firstorder).	25.91065979	26843
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.0.0.2.2.3.5	search with cache (only 1: induction l, l'; only 1: auto; only 1: auto; only 1: auto; only 1: simpl in *; only 1: rewrite IHl; only 1: auto).	4.44324398041	4700
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	6.0.0.3.26.0	search with cache (only 1: intros; only 1: revert x; only 1: induction l as [| a l' Hrec]; only 1: intros; only 1: auto; only 1: firstorder  (subst; auto)).	37.9137790203	61564
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	90	search with cache (only 1: left).	6.86066889763	16397
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40	1.9.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: now auto with arith).	0.879332780838	380
Coq.Lists.List.lel_cons	40	1.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0163309574127	4
Coq.Lists.List.lel_tail	40	0.0.3.1	search with cache (only 1: intros; only 1: apply Nat.le_trans with (length m); only 1: auto with arith; only 1: auto with arith).	0.0213558673859	8
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	6.0.0	search with cache (only 1: induction l as [| x l]; only 1: auto; only 1: firstorder).	0.025221824646	13
Coq.Lists.List.incl_tl	40	7	search with cache (only 1: firstorder  (subst; auto)).	0.0675601959229	37
Coq.Lists.List.incl_tran	40	1.0	search with cache (only 1: intros f g l H; only 1: auto).	0.0138540267944	3
Coq.Lists.List.incl_appl	40	1.2.0.5.2.1	search with cache (only 1: induction l as [| a l' Hrec]; only 1: intros l1 l2; only 1: easy; only 1: intros l1 l2; only 1: intros; only 1: firstorder).	1.00169110298	692
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0158908367157	1
Coq.Lists.List.incl_cons	40	8	search with cache (only 1: firstorder  (subst; auto)).	0.0486810207367	27
Coq.Lists.List.incl_app	40	3.1.1.2.3	search with cache (only 1: induction l as [| a l' Hrec]; only 1: auto with datatypes; only 1: intros l1 l2 Eq x; only 1: simpl; only 1: firstorder).	2.26511096954	659
Coq.Lists.List.firstn_nil	40	0.0.0.99	search with cache (only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto).	1.29268598557	5315
Coq.Lists.List.firstn_cons	40	1.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0156400203705	3
Coq.Lists.List.firstn_all	40	0.0.0.28	search with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: now rewrite IH).	5.24705696106	5413
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.0123269557953	1
Coq.Lists.List.firstn_le_length	40	1.0.5.4.0.1.13	search with cache (only 1: induction n; only 1: intros; only 1: now simpl; only 1: induction l; only 1: firstorder; only 1: simpl in *; only 1: auto with arith).	33.1022219658	38398
Coq.Lists.List.firstn_length_le	40	3.0.1.0.2.0.0.3.0.3	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: inversion H; only 1: now simpl; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: simpl in H; only 1: auto; only 1: simpl in *; only 1: auto with arith).	17.9326031208	17078
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0.0	search with cache (only 1: intro y; only 1: now simpl).	0.0137369632721	2
Coq.Lists.List.skipn_nil	40	0.0.0.1	search with cache (only 1: intro; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0205779075623	5
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.0129828453064	1
Coq.Lists.List.skipn_none	40	0.0.0.6	search with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: now simpl).	0.0415527820587	24
Coq.Lists.List.skipn_all2	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: inversion 1 as [H1| ?]; only 1: rewrite (length_zero_iff_nil l) in H1; only 1: subst; only 1: now simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	1.80261611938	1059
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40	4.0.1.0.0.0.0.0.0.3	search with cache (only 1: induction n; only 1: induction l; only 1: now simpl; only 1: simpl; only 1: now simpl; only 1: simpl; only 1: destruct l as [| x xs]; only 1: auto; only 1: simpl; only 1: auto).	7.18102884293	7595
Coq.Lists.List.skipn_length	40	2.0.1.0.0.0.2.0.10	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	15.2976560593	8308
Coq.Lists.List.skipn_all	40	0.0.0.11	search with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: now simpl).	0.511982917786	112
Coq.Lists.List.skipn_app	40	0.0.0.3.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.607042074203	251
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	0.0.0.0.5	search with cache (only 1: induction l; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: f_equal).	0.0380620956421	19
Coq.Lists.List.combine_firstn_l	40	2.0.0.1.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: destruct l'; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.34130001068	753
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	3.64377188683	2431
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	2.1.2	search with cache (only 1: induction 1; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.532509088516	216
Coq.Lists.List.Add_length	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: auto).	0.0229208469391	5
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0162038803101	2
Coq.Lists.List.NoDup_cons_iff	40	0.1.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: now constructor).	0.0414199829102	5
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	1.4.2.0.40.44	search with cache (only 1: intros l; only 1: induction l as [| x xs Hl]; only 1: now intros []; only 1: intro; only 1: simpl; only 1: auto).	19.5362670422	60218
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	6.1.1.1.0.0	search with cache (only 1: induction len; only 1: auto; only 1: simpl; only 1: intro; only 1: rewrite IHlen; only 1: auto).	1.14276409149	1023
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	4.4.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now intros []).	0.0614688396454	66
Coq.Lists.List.Exists_cons	40	1.1.3.1.3.1.1.1.0.12	search with cache (only 1: split; only 1: inversion_clear 1; only 1: induction l as [| a l' Hrec]; only 1: tauto; only 1: intuition; only 1: right; only 1: tauto; only 1: destruct 1 as [H1| ]; only 1: auto; only 1: auto).	3.35766506195	3540
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40
Coq.Lists.List.Forall_inv	40	0.0.6	search with cache (only 1: intros x l; only 1: inversion 1; only 1: auto).	0.0244779586792	9
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40	3.2.1.0.11.1.3.0.5.2.1.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: left; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: auto; only 1: right; only 1: abstract now inversion 1; only 1: right; only 1: abstract now inversion 1).	28.22447896	56896
Coq.Lists.List.Forall_inv_tail	40	0.0.3	search with cache (only 1: intros f g l H; only 1: inversion H; only 1: trivial).	0.0264728069305	16
Coq.Lists.List.Exists_impl	40	7.2.7.0.3.0	search with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: right; only 1: auto).	7.56718301773	12008
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.1.0.0.0.0.1	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	1.18583202362	753
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40
Coq.Lists.List.Forall2_refl	40	1	search with cache (only 1: constructor).	0.0111649036407	2
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	1.2.4.1.1.3.1.1.0	search with cache (only 1: induction l1; only 1: induction l1'; only 1: auto with arith; only 1: intro l'; only 1: easy; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto).	32.0573670864	29525
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	6.0.2.24.18	search with cache (only 1: rewrite <- app_nil_r  at 1; only 1: induction n; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith).	2.17773485184	3239
Coq.Lists.List.repeat_spec	40	6.2.0.2.0.18	search with cache (only 1: induction n; only 1: simpl; only 1: now intros []; only 1: simpl; only 1: intros; only 1: intuition).	1.75854992867	3279
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	6.1	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.0539638996124	46
Coq.Lists.SetoidPermutation.PermutationA_app_head	40
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).	0.368222951889	274
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0140850543976	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	1.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: now constructor).	0.0123429298401	4
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.0.6.6.6.0.9.10.0.2	search with cache (only 1: intros; only 1: induction l as [| a l' Hrec]; only 1: now simpl; only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: intuition; only 1: inversion 1; only 1: intuition; only 1: intuition).	39.1997108459	58844
Coq.Lists.SetoidList.InA_cons	40	0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.0348339080811	10
Coq.Lists.SetoidList.InA_nil	40	0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: inversion 1).	0.0200350284576	4
Coq.Lists.SetoidList.InA_alt	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.0439851284027	10
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	2.1.24	search with cache (only 1: intro Ha; only 1: firstorder using StronglySorted_inv; only 1: invlist InA).	0.162440061569	447
Coq.Lists.SetoidList.eqlistA_altdef	40
Coq.Lists.SetoidList.equivlist_equiv	40	108	search with cache (only 1: firstorder).	3.93754601479	6016
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	1.10.1	search with cache (only 1: intros P x0 xs H; only 1: rewrite 2!InA_alt; only 1: firstorder).	4.0313668251	571
Coq.Lists.SetoidList.In_InA	40	0.6.1	search with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).	0.0255000591278	10
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	1.7.0.0.4	search with cache (only 1: split; only 1: intros; only 1: invlist InA; only 1: now subst; only 1: auto).	11.552533865	454
Coq.Lists.SetoidList.InA_double_head	40	1.0.2.1.0.3.5	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: subst; only 1: trivial; only 1: intros; only 1: auto).	0.967487096786	511
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0734009742737	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.1	search with cache (only 1: constructor; only 1: intro; only 1: inversion H; only 1: auto using Sorted, LocallySorted, HdRel).	0.0242989063263	6
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.0.4.0.1.5	search with cache (only 1: constructor; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	0.775887966156	456
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.1.7	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.114633083344	23
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.29	search with cache (only 1: red; only 1: intros; only 1: rewrite InA_app_iff; only 1: tauto).	0.636651039124	745
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	4.0.6.0.0.0.2.0.3.1.2	search with cache (only 1: induction s1; only 1: intros; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	21.483907938	24944
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40	0.0.1.0.2.0.1.36	search with cache (only 1: intros ND Incl FOP; only 1: intros y Hy; only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	11.7958161831	29921
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	5.2.6.2.17.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: destruct IHl; only 1: auto).	30.1078391075	45034
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	2.13.4.1.68	search with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: inv; only 1: eauto).	4.91665506363	21110
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	6.6.1	search with cache (only 1: destruct l; only 1: intuition; only 1: intuition).	1.6469180584	845
Coq.Lists.SetoidList.InA_InfA	40	1.1.7.0	search with cache (only 1: simple induction l; only 1: intuition; only 1: intros; only 1: auto).	0.420814990997	239
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	1.8.8.0.0.1.25	search with cache (only 1: induction l1; only 1: intros; only 1: intuition; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto).	20.1326560974	32435
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	0.0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: simpl; only 1: auto with relations).	0.186154127121	4
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.1.3.0.5.1.6	search with cache (only 1: intros x l' H H0; only 1: induction H; only 1: intros; only 1: intuition; only 1: intros; only 1: simpl; only 1: intuition).	1.61995697021	1354
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0.2.0.0.1	search with cache (only 1: intros; only 1: induction l1 in l1', H, H0 |- *; only 1: inversion H; only 1: intuition; only 1: inversion H; only 1: subst; only 1: simpl; only 1: auto).	0.69414305687	188
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.0.3.1.0.1	search with cache (only 1: induction 1; only 1: intuition; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: intuition).	0.165668010712	82
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.eq_dec	40
Coq.NArith.BinNat.discr	40
Coq.NArith.BinNat.peano_rect_base	40	0	search with cache (only 1: auto).	0.0101230144501	1
Coq.NArith.BinNat.peano_rect_succ	40
Coq.NArith.BinNat.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0100750923157	1
Coq.NArith.BinNat.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0219700336456	5
Coq.NArith.BinNat.bi_induction	40
Coq.NArith.BinNat.recursion_wd	40
Coq.NArith.BinNat.recursion_0	40	0	search with cache (only 1: trivial).	0.0100438594818	1
Coq.NArith.BinNat.recursion_succ	40
Coq.NArith.BinNat.one_succ	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0124249458313	2
Coq.NArith.BinNat.two_succ	40	0	search with cache (only 1: trivial).	0.0108411312103	1
Coq.NArith.BinNat.pred_0	40	8	search with cache (only 1: now f_equal).	0.0112099647522	9
Coq.NArith.BinNat.pos_pred_spec	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0125210285187	3
Coq.NArith.BinNat.succ_pos_spec	40	0.0.7	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0447402000427	36
Coq.NArith.BinNat.pos_pred_succ	40
Coq.NArith.BinNat.succ_pos_pred	40
Coq.NArith.BinNat.pred_succ	40	0.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: apply Pos.pred_N_succ).	0.0158948898315	7
Coq.NArith.BinNat.pred_sub	40	0.1.0.5	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.0204720497131	10
Coq.NArith.BinNat.succ_0_discr	40	3.6.6.4	search with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: now destruct p).	0.252343177795	439
Coq.NArith.BinNat.add_0_l	40	0	search with cache (only 1: trivial).	0.010922908783	1
Coq.NArith.BinNat.add_succ_l	40
Coq.NArith.BinNat.sub_0_r	40	3.8.39	search with cache (only 1: induction n; only 1: now f_equal; only 1: auto).	0.459879875183	1474
Coq.NArith.BinNat.sub_succ_r	40
Coq.NArith.BinNat.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.0100719928741	1
Coq.NArith.BinNat.mul_succ_l	40
Coq.NArith.BinNat.eqb_eq	40
Coq.NArith.BinNat.ltb_lt	40
Coq.NArith.BinNat.leb_le	40
Coq.NArith.BinNat.compare_eq_iff	40
Coq.NArith.BinNat.compare_lt_iff	40	6	search with cache (only 1: auto with *).	0.179693937302	142
Coq.NArith.BinNat.compare_le_iff	40	3.0.1.0.0	search with cache (only 1: split; only 1: intro H; only 1: now destr_eq H; only 1: intro H; only 1: easy').	0.0304250717163	17
Coq.NArith.BinNat.compare_antisym	40
Coq.NArith.BinNat.min_l	40
Coq.NArith.BinNat.min_r	40	2.5.2.0.31.4.0	search with cache (only 1: unfold min, le; only 1: intro H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: case Pos.compare_spec; only 1: auto; only 1: now destr_eq H; only 1: congruence).	32.1134190559	97005
Coq.NArith.BinNat.max_l	40
Coq.NArith.BinNat.max_r	40	0.1.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.113343954086	66
Coq.NArith.BinNat.lt_succ_r	40
Coq.NArith.BinNat.double_spec	40	9	search with cache (only 1: now split).	0.0129051208496	10
Coq.NArith.BinNat.succ_double_spec	40
Coq.NArith.BinNat.double_add	40
Coq.NArith.BinNat.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0146479606628	1
Coq.NArith.BinNat.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.0144050121307	1
Coq.NArith.BinNat.succ_double_mul	40
Coq.NArith.BinNat.div2_double	40
Coq.NArith.BinNat.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0120739936829	1
Coq.NArith.BinNat.double_inj	40
Coq.NArith.BinNat.succ_double_inj	40
Coq.NArith.BinNat.succ_double_lt	40
Coq.NArith.BinNat.double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0303678512573	11
Coq.NArith.BinNat.double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0278570652008	9
Coq.NArith.BinNat.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.03005194664	11
Coq.NArith.BinNat.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0264008045197	9
Coq.NArith.BinNat.compare_0_r	40	25.12	search with cache (only 1: intro H; only 1: now elim (nlt_0_r n)).	0.712244987488	1084
Coq.NArith.BinNat.pow_0_r	40	1	search with cache (only 1: trivial).	0.0124020576477	2
Coq.NArith.BinNat.pow_succ_r	40
Coq.NArith.BinNat.pow_neg_r	40	1.6.0.0.6.2.2.1	search with cache (only 1: intros LT; only 1: destruct n, p; only 1: simpl; only 1: easy; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: easy).	32.8226771355	4289
Coq.NArith.BinNat.square_spec	40
Coq.NArith.BinNat.size_log2	40
Coq.NArith.BinNat.size_gt	40
Coq.NArith.BinNat.size_le	40
Coq.NArith.BinNat.log2_spec	40
Coq.NArith.BinNat.log2_nonpos	40	0.0.0.2.0.2.0.0.6	search with cache (only 1: destruct n as [| [p| p| ]]; only 1: intros _; only 1: trivial; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.981958150864	1234
Coq.NArith.BinNat.even_spec	40
Coq.NArith.BinNat.odd_spec	40
Coq.NArith.BinNat.pos_div_eucl_spec	40
Coq.NArith.BinNat.div_eucl_spec	40
Coq.NArith.BinNat.div_mod'	40
Coq.NArith.BinNat.div_mod	40	0.0.0.0	search with cache (only 1: intros H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0187940597534	4
Coq.NArith.BinNat.pos_div_eucl_remainder	40
Coq.NArith.BinNat.mod_lt	40
Coq.NArith.BinNat.mod_bound_pos	40
Coq.NArith.BinNat.sqrtrem_sqrt	40
Coq.NArith.BinNat.sqrtrem_spec	40
Coq.NArith.BinNat.sqrt_spec	40
Coq.NArith.BinNat.sqrt_neg	40	1.0.0.0.0	search with cache (only 1: destruct n; only 1: intros Hn; only 1: trivial; only 1: intros Hn; only 1: easy).	0.0239040851593	6
Coq.NArith.BinNat.ggcd_gcd	40
Coq.NArith.BinNat.ggcd_correct_divisors	40
Coq.NArith.BinNat.gcd_divide_l	40
Coq.NArith.BinNat.gcd_divide_r	40
Coq.NArith.BinNat.gcd_greatest	40
Coq.NArith.BinNat.gcd_nonneg	40	1	search with cache (only 1: apply le_0_l).	0.215990066528	82
Coq.NArith.BinNat.testbit_even_0	40
Coq.NArith.BinNat.testbit_odd_0	40	0.1	search with cache (only 1: simpl; only 1: now destruct a).	0.102606058121	3
Coq.NArith.BinNat.testbit_succ_r_div2	40
Coq.NArith.BinNat.testbit_odd_succ	40
Coq.NArith.BinNat.testbit_even_succ	40	2.3.2.2	search with cache (only 1: intros H; only 1: simpl; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: now destruct a).	1.07106804848	1026
Coq.NArith.BinNat.testbit_neg_r	40	2	search with cache (only 1: now destruct n).	0.153345108032	168
Coq.NArith.BinNat.shiftr_succ_r	40
Coq.NArith.BinNat.shiftl_succ_r	40
Coq.NArith.BinNat.shiftr_spec	40
Coq.NArith.BinNat.shiftl_spec_high	40
Coq.NArith.BinNat.shiftl_spec_low	40
Coq.NArith.BinNat.div2_spec	40	0	search with cache (only 1: trivial).	0.0103540420532	1
Coq.NArith.BinNat.pos_lxor_spec	40
Coq.NArith.BinNat.lxor_spec	40
Coq.NArith.BinNat.pos_lor_spec	40
Coq.NArith.BinNat.lor_spec	40
Coq.NArith.BinNat.pos_land_spec	40
Coq.NArith.BinNat.land_spec	40
Coq.NArith.BinNat.pos_ldiff_spec	40
Coq.NArith.BinNat.ldiff_spec	40
Coq.NArith.BinNat.gt_lt_iff	40
Coq.NArith.BinNat.gt_lt	40
Coq.NArith.BinNat.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0108289718628	1
Coq.NArith.BinNat.ge_le_iff	40
Coq.NArith.BinNat.ge_le	40
Coq.NArith.BinNat.le_ge	40	1	search with cache (only 1: apply ge_le_iff).	0.0123670101166	2
Coq.NArith.BinNat.pos_pred_shiftl_low	40
Coq.NArith.BinNat.pos_pred_shiftl_high	40
Coq.NArith.BinNat.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0392801761627	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	1	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0405931472778	2
Coq.NArith.Ndec.Neqb_complete	40	1	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0395140647888	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40	1.0.1.11.0.5.1.4.6.0	search with cache (only 1: intro H; only 1: destruct a; only 1: intros m; only 1: inversion H; only 1: intros [| n]; only 1: trivial; only 1: destruct p; only 1: reflexivity; only 1: discriminate H; only 1: reflexivity).	15.4990270138	44024
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	3.0.0.9.4.1.0.1.1.1	search with cache (only 1: intro H; only 1: intros m; only 1: eqb2eq; only 1: intros <-; only 1: destruct m; only 1: discriminate; only 1: induction p as [| p IHp| ]; only 1: discriminate || simpl; only 1: auto using IHp; only 1: discriminate || simpl).	6.24157691002	16214
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	1.1.2.2	search with cache (only 1: intros Heqn; only 1: eqb2eq; only 1: subst; only 1: reflexivity).	0.0433850288391	14
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.045825958252	4
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.2.0.2	search with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.240775823593	83
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	26.1.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: intros; only 1: now try rewrite H).	39.3858230114	64672
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	1.0.1.2.0.0.0.0.1	search with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intro H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: rewrite !N2Nat.inj_double; only 1: trivial).	1.05908894539	1195
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0.9.1	search with cache (only 1: intro H0; only 1: eqb2eq; only 1: now rewrite Nleb_alt, N.leb_le).	0.465265035629	312
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.0	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0701258182526	3
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	2.2.0.4.0.0.0	search with cache (only 1: induction a as [| p]; only 1: intro H; only 1: trivial; only 1: simpl in *; only 1: intro H; only 1: exfalso; only 1: congruence).	0.920502901077	1600
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.0.0.3.1	search with cache (only 1: unfold ni_min; only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0364210605621	10
Coq.NArith.Ndist.ni_min_O_r	40	0.0.1.2.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.03626704216	9
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: trivial).	0.0256969928741	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.0.0.5	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: intros; only 1: trivial).	0.0443940162659	24
Coq.NArith.Ndist.ni_le_refl	40	0.0.0.2.1.1.0.3.4.29	search with cache (only 1: compute; only 1: simple induction d; only 1: now f_equal; only 1: simple induction n; only 1: trivial; only 1: intros; only 1: inversion H; only 1: rewrite H1; only 1: rewrite H1; only 1: reflexivity).	1.40490102768	2652
Coq.NArith.Ndist.ni_le_antisym	40	4.0.11.1.1.5	search with cache (only 1: simple induction d'; only 1: trivial; only 1: intros; only 1: inversion H; only 1: rewrite ni_min_comm; only 1: trivial).	4.43448591232	7990
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.0.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0400390625	14
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.0.2.0.1	search with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.0531079769135	31
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.3.1.0	search with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: trivial).	0.0317709445953	8
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.023188829422	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.2	search with cache (only 1: simpl; only 1: reflexivity).	0.0248939990997	4
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0231070518494	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.1.1.11.3.0.0.8.4	search with cache (only 1: intros; only 1: case n; only 1: trivial; only 1: intros m; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: constructor).	10.936011076	33279
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0303549766541	7
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0290520191193	3
Coq.NArith.Ndigits.Ndiv2_double	40	3.1.2.1.1.0.0.0.18	search with cache (only 1: induction n; only 1: intros; only 1: now try rewrite H; only 1: case p; only 1: intros n0 H; only 1: now try rewrite H; only 1: auto; only 1: intros; only 1: now try rewrite H).	4.41325306892	7125
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.0.1.0.1.0.0.0.1.0	search with cache (only 1: destruct n; only 1: intros; only 1: discriminate H; only 1: destruct p; only 1: intro H; only 1: reflexivity; only 1: intros; only 1: discriminate H; only 1: intro H; only 1: reflexivity).	1.24358320236	1493
Coq.NArith.Ndigits.Ndiv2_correct	40	1.0.0.0.0.13.0.2.1.1	search with cache (only 1: destruct a; only 1: trivial; only 1: intros m; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	7.05110788345	17950
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.3	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0310888290405	7
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	2.08445715904	3031
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.849252939224	660
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.867848157883	763
Coq.NArith.Ndigits.Nless_def_4	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.67069196701	567
Coq.NArith.Ndigits.Nless_z	40	0.0.0.17.6.4.2.0.11	search with cache (only 1: intros [| n]; only 1: unfold Nless; only 1: reflexivity; only 1: symmetry; only 1: unfold Nless; only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	6.73707580566	30264
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	2.0.2.0.0.2.0.0.0.0.0.17	search with cache (only 1: induction a; only 1: simpl; only 1: trivial; only 1: induction p; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: auto).	23.7887160778	38930
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	1.0.0.4.0.0.4.0.0.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: auto).	7.48237013817	11668
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.2.0.0.2.10.0.0.11	search with cache (only 1: destruct a; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	9.15558981895	11040
Coq.NArith.NArith.test	40
Coq.NArith.Nnat.id	40
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	0.0.0.1.0.1	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: now f_equal).	0.0387830734253	8
Coq.NArith.Nnat.inj_double	40	2.4.0.4.28.5.0.14.0.105	search with cache (only 1: symmetry; only 1: simpl; only 1: destruct a as [| p]; only 1: now rewrite Nat.add_0_r; only 1: simpl; only 1: unfold Pos.to_nat; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: now rewrite Nat.add_0_r).	11.3153319359	44836
Coq.NArith.Nnat.inj_succ_double	40	0.2.0.4.6.2.1.0.0.5	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: f_equal; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	1.96820116043	4264
Coq.NArith.Nnat.inj_succ	40	6.0.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.368858098984	166
Coq.NArith.Nnat.inj_add	40
Coq.NArith.Nnat.inj_mul	40
Coq.NArith.Nnat.inj_sub	40
Coq.NArith.Nnat.inj_pred	40
Coq.NArith.Nnat.inj_div2	40
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_max	40
Coq.NArith.Nnat.inj_min	40
Coq.NArith.Nnat.inj_iter	40
Coq.NArith.Nnat.id	40	0.7.0.76	search with cache (only 1: induction n as [| n H]; only 1: now subst; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	3.83858895302	18203
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	0.0.0.1.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.177076816559	7
Coq.NArith.Nnat.inj_double	40
Coq.NArith.Nnat.inj_succ_double	40	11	search with cache (only 1: nat2N).	0.101278781891	36
Coq.NArith.Nnat.inj_succ	40	7	search with cache (only 1: nat2N).	0.0400099754333	18
Coq.NArith.Nnat.inj_pred	40	0	search with cache (only 1: nat2N).	0.0293891429901	1
Coq.NArith.Nnat.inj_add	40	0	search with cache (only 1: nat2N).	0.0317599773407	1
Coq.NArith.Nnat.inj_sub	40	0	search with cache (only 1: nat2N).	0.0317029953003	1
Coq.NArith.Nnat.inj_mul	40	0	search with cache (only 1: nat2N).	0.031879901886	1
Coq.NArith.Nnat.inj_div2	40	0	search with cache (only 1: nat2N).	0.0288801193237	1
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_min	40	0	search with cache (only 1: nat2N).	0.0314199924469	1
Coq.NArith.Nnat.inj_max	40	0	search with cache (only 1: nat2N).	0.078987121582	1
Coq.NArith.Nnat.inj_iter	40	0.3.17.3.0.21.2.0.98	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: destruct n as [| n]; only 1: trivial; only 1: simpl; only 1: rewrite Pos.iter_succ; only 1: f_equal; only 1: trivial).	12.5592000484	50181
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	1	search with cache (only 1: t_eqb).	0.019602060318	2
Coq.Strings.Ascii.eqb_eq	40	2	search with cache (only 1: t_eqb).	0.0206458568573	3
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0197129249573	1
Coq.Strings.Ascii.eqb_compat	40	15	search with cache (only 1: t_eqb).	0.0679891109467	91
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0285987854004	1
Coq.Strings.String.eqb_eq	40	0.0.2.1	search with cache (only 1: constructor; only 1: t_eqb; only 1: intros ->; only 1: t_eqb).	0.0334670543671	7
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0291080474854	1
Coq.Strings.String.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.0232439041138	1
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	1.2.2.6.0.129	search with cache (only 1: elim s; only 1: constructor; only 1: simpl; only 1: intros m s1; only 1: intros ->; only 1: easy).	3.85034012794	43623
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.0.2.0	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal, IHs).	0.0265800952911	6
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.to_N_of_pos	40	7	search with cache (only 1: auto).	0.00982809066772	8
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.to_N_of_pos	40	7	search with cache (only 1: auto).	0.0103611946106	8
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.to_N_of_pos	40	7	search with cache (only 1: auto).	0.0167281627655	8
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	4.1	search with cache (only 1: intros; only 1: lra).	0.104771137238	7
Coq.Reals.Ratan.pos_half_prf	40	2	search with cache (only 1: intuition).	0.108060121536	11
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	5.1	search with cache (only 1: intros x x_cond; only 1: lra).	0.139337778091	17
Coq.Reals.Ratan.pos_opp_lt	40	1.1	search with cache (only 1: intros eps eps_pos; only 1: lra).	0.100172042847	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	8.5.5	search with cache (only 1: intros; only 1: unfold Datan_seq; only 1: intuition).	13.5420789719	6763
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	4.6.0.1.7	search with cache (only 1: symmetry; only 1: unfold Ratan_seq; only 1: rewrite pow1; only 1: rewrite <- Rmult_1_l; only 1: reflexivity).	5.74749803543	5485
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40	2.1.2.1.18	search with cache (only 1: reg; only 1: intro n; only 1: solve [ apply Rgt_not_eq, plus_Rsqr_gt_0 ]; only 1: intro n; only 1: solve [ apply Rgt_not_eq, plus_Rsqr_gt_0 ]).	2.13930797577	5813
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	1.7.0.1.0.2.1.1	search with cache (only 1: intros; only 1: induction l as [| r0 l Hrecl0]; only 1: elim H; only 1: simpl in H; only 1: simpl; only 1: auto; only 1: auto with zarith; only 1: reflexivity).	2.7279419899	4894
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	4.5.1.2.0.4	search with cache (only 1: simple induction l; only 1: intro; only 1: split; only 1: intros n m; only 1: simpl; only 1: auto with zarith).	3.15739989281	4978
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	3.0.0.1.4.0	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	0.471288919449	526
Coq.Reals.RList.RList_P19	40	0.6.0.2.6.2	search with cache (only 1: simple induction l; only 1: tauto; only 1: intros; only 1: exists r; only 1: exists r0; only 1: split).	0.660408973694	1569
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	1.6.0	search with cache (only 1: intros; only 1: elim H; only 1: reflexivity).	0.0247058868408	10
Coq.Reals.RList.RList_P22	40	3.1.0.4.0.0	search with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: elim H; only 1: reflexivity; only 1: elim (RList_P9 (cons r l1) l2 (pos_Rl (cons r l1) 0)); only 1: reflexivity).	0.844134092331	951
Coq.Reals.RList.RList_P23	40	1.0.0.12.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: apply INR_eq; only 1: rewrite S_INR; only 1: ring).	14.8324048519	18078
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40	4.2.4.0.0.2.0	search with cache (only 1: simple induction l1; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	1.76934504509	2181
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	1.2.1.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.300379991531	135
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.0372080802917	7
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	10.5.0.0.0.1	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: elim (base_fp r2); only 1: auto with zarith real).	3.39003896713	4828
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.1.0.0.6.0.0.0	search with cache (only 1: intros r1 r2 r; only 1: intro; only 1: unfold Rmin; only 1: elim H; only 1: intros; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto).	3.17056488991	3041
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.4.0.3.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro H1; only 1: auto with real).	0.191998004913	140
Coq.Reals.Rbasic_fun.Rmin_left	40	0.0.5.0.0.1	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro H1; only 1: auto with real).	0.430095911026	256
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto with real).	0.0948131084442	6
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.2.0.0.0.2.1.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.860191106796	978
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	0.1.12.0.3.3.1.1.5	search with cache (only 1: intros z t; only 1: unfold IZR; only 1: destruct t; only 1: apply Rmin_case_strong; only 1: destruct z; only 1: intro; only 1: assumption; only 1: intro; only 1: trivial).	10.3279790878	24760
Coq.Reals.Rbasic_fun.Rmin_pos	40	9.10.0	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: auto with zarith real).	7.92308115959	12136
Coq.Reals.Rbasic_fun.Rmin_glb	40	1.0.3.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto with real).	0.126169204712	25
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.3.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro; only 1: assumption).	0.129697799683	31
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.2.0.3.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.152200937271	35
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40	0.0.0.0.0.0.0.0.1.0.0.14.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: case (Rle_dec y x); only 1: intro H1; only 1: auto using Rle_antisym; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: case (Rle_dec y x); only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	1.98541498184	2723
Coq.Reals.Rbasic_fun.Rmax_l	40	2.0.1.0.2.1	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto with real).	0.499505996704	384
Coq.Reals.Rbasic_fun.Rmax_r	40	2.0.15.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro H1; only 1: auto with real).	1.36031508446	4216
Coq.Reals.Rbasic_fun.Rmax_left	40	0.1.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro H1; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.118484020233	16
Coq.Reals.Rbasic_fun.Rmax_right	40	0.1.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro H1; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.120046854019	15
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40
Coq.Reals.Rbasic_fun.RmaxRmult	40	2.1.1.1.4.0.5	search with cache (only 1: intros p q; only 1: intros z H; only 1: do 2 (apply Rmax_case_strong; intro); only 1: auto with zarith real; only 1: auto with zarith real; only 1: auto with zarith real; only 1: auto with zarith real).	8.22534608841	7636
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	1.0.2.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro H1; only 1: assumption).	0.109206914902	19
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	1.0.2.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro; only 1: assumption).	0.11207818985	20
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	4.4.4.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: auto; only 1: auto).	1.71001696587	1909
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	7.1.1.0.0.2.1.1.0.1.0	search with cache (only 1: intros; only 1: case H; only 1: intros H1; only 1: rewrite Rabs_right; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: left; only 1: assumption; only 1: intros H1; only 1: rewrite Rabs_right; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: auto with real).	21.1130590439	23742
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	1.0.0.0.2.0.7.0.0	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: unfold Rmin; only 1: case (Rle_dec p q); only 1: auto; only 1: case (Rle_dec q p); only 1: auto; only 1: intros H1 H2; only 1: auto with real).	2.13094902039	4096
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.lt_strorder	40
Coq.Reals.ROrderedType.lt_compat	40	0.9.2.44	search with cache (only 1: intros l; only 1: intros; only 1: destruct H; only 1: auto with *).	0.870231866837	3246
Coq.Reals.ROrderedType.le_lteq	40	3	search with cache (only 1: reflexivity).	0.0129990577698	20
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.11.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.355808973312	546
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.1.10.0	search with cache (only 1: intro; only 1: unfold sin_n; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.617901802063	800
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	4.1	search with cache (only 1: intros f a b; only 1: tauto).	0.0143311023712	7
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40	9.6.0	search with cache (only 1: unfold IZR at 1; only 1: fix even_odd_double 1; only 1: auto with arith).	0.789196968079	2085
Coq.Reals.Rfunctions.fact_simpl	40	0.1.0.0.0.2.0	search with cache (only 1: intros; only 1: simpl; only 1: revert n; only 1: destruct n as [| [| n]]; only 1: split; only 1: split; only 1: split).	0.106300115585	10
Coq.Reals.Rfunctions.simpl_fact	40	10.8	search with cache (only 1: fix even_odd_double 1; only 1: auto with arith).	0.817997932434	1102
Coq.Reals.Rfunctions.pow_O	40	0.3	search with cache (only 1: intros z; only 1: ring_Rsqr).	0.134768009186	25
Coq.Reals.Rfunctions.pow_1	40	0.4.1	search with cache (only 1: intro; only 1: simpl; only 1: ring_Rsqr).	0.103631019592	8
Coq.Reals.Rfunctions.pow_add	40
Coq.Reals.Rfunctions.Rpow_mult_distr	40	2.11.0	search with cache (only 1: intros x n; only 1: fix even_odd_double 1; only 1: auto with real).	1.11650800705	731
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40	3.0.2.0.14.0.0	search with cache (only 1: intros x n; only 1: intros; only 1: induction n; only 1: auto with real; only 1: simpl; only 1: rewrite IHn; only 1: auto with real).	31.7058300972	26241
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0955169200897	3
Coq.Reals.Rfunctions.tech_pow_Rplus	40	2.12.0	search with cache (only 1: intros x n; only 1: fix even_odd_double 1; only 1: auto with real).	7.77422308922	4677
Coq.Reals.Rfunctions.poly	40	0.0.51	search with cache (only 1: fix even_equiv 1; only 1: intros x n; only 1: auto with real).	11.1914660931	35770
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40	1.6.13	search with cache (only 1: intro; only 1: fix even_equiv 1; only 1: auto with real).	9.46395683289	10692
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40	1.5.0.1	search with cache (only 1: intro; only 1: simpl; only 1: fix even_odd_double 1; only 1: auto with real).	0.328515052795	122
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.13515496254	9
Coq.Reals.Rfunctions.pow_1_even	40	1.7.5	search with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: auto with real).	0.794665813446	560
Coq.Reals.Rfunctions.pow_1_odd	40	2.7	search with cache (only 1: fix even_odd_double 1; only 1: auto with real).	0.430748939514	116
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40	2.6.0	search with cache (only 1: intros x n; only 1: fix even_equiv 1; only 1: auto with real).	0.754036903381	267
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.1.0.4.2.3.1.0	search with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: intros; only 1: replace 1 with (1 * 1); only 1: auto with real; only 1: auto with real).	7.86525177956	8167
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.7	search with cache (only 1: fix even_odd_double 1; only 1: auto with real).	0.134899139404	25
Coq.Reals.Rfunctions.pow_Rabs	40	0.7.0	search with cache (only 1: intro; only 1: fix even_odd_double 1; only 1: auto with real).	0.185545921326	50
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	0.0.0.0	search with cache (only 1: simpl; only 1: intro; only 1: rewrite Rmult_1_r; only 1: reflexivity).	0.0976810455322	4
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.0915179252625	1
Coq.Reals.Rfunctions.powerRZ_1	40	0.2	search with cache (only 1: simpl; only 1: auto with real).	0.111050844193	12
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	2.1.2.2.0.1.2	search with cache (only 1: destruct z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	5.57995891571	8476
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.120022058487	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	3.12.0.0.2	search with cache (only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	2.44418287277	3012
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	20.11.6.0.1	search with cache (only 1: intros n; only 1: unfold R_dist; only 1: split_Rabs; only 1: ring; only 1: auto with real).	13.4530620575	24821
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	6.0	search with cache (only 1: intro; only 1: lia).	0.0787949562073	8
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40
Coq.Reals.Exp_prop.div2_S_double	40	0.0.0.0.0.2.4.3.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: replace (2 * S N)%nat with (S (S (2 * N))); only 1: simpl; only 1: simpl in HrecN; only 1: rewrite HrecN; only 1: reflexivity; only 1: ring).	1.19676399231	1104
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	1.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros f1 f2 X X0 H x; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	0.85471200943	595
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	0.0.0.1.0.0.0.0.0.1.0.0	search with cache (only 1: intros f g D D1 x H; only 1: unfold D_in; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: rewrite <- H; only 1: split; only 1: auto; only 1: auto).	1.96016383171	1597
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40
Coq.Reals.RIneq.Rge_refl	40
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	1.0.1.1.0.23.1	search with cache (only 1: intros; only 1: destruct H; only 1: apply Rlt_not_eq; only 1: exact H; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: exact H).	11.2479891777	11582
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.4.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.189848899841	33
Coq.Reals.RIneq.Rdichotomy	40	0.5.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.12117600441	23
Coq.Reals.RIneq.Rlt_le	40	1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: left; only 1: exact H).	0.095841884613	5
Coq.Reals.RIneq.Rgt_ge	40	0.0.1	search with cache (only 1: red; only 1: intros; only 1: tauto).	0.109460115433	13
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	3.0.2.2	search with cache (only 1: red; only 1: destruct 1; only 1: tauto; only 1: auto with real).	0.258414983749	112
Coq.Reals.RIneq.Rlt_gt	40	1.0	search with cache (only 1: intros; only 1: exact H).	0.0892260074615	3
Coq.Reals.RIneq.Rgt_lt	40	1.0	search with cache (only 1: intros; only 1: exact H).	0.0872399806976	3
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.2.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0979769229889	5
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0975701808929	3
Coq.Reals.RIneq.Rnot_lt_le	40	2.0.0.1	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition eauto  3).	0.141713857651	28
Coq.Reals.RIneq.Rnot_gt_le	40	1.0.0.2	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.165253162384	46
Coq.Reals.RIneq.Rnot_gt_ge	40	1.4.5.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.81125497818	598
Coq.Reals.RIneq.Rnot_lt_ge	40	5.0	search with cache (only 1: intros; only 1: eauto using Rnot_lt_le with rorders).	0.13379406929	31
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0.0.0	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0999159812927	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	10	search with cache (only 1: auto using Rnot_lt_le with real).	0.386986017227	158
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.4	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.168523073196	57
Coq.Reals.RIneq.Rge_not_lt	40	1.0.1.0.2.2	search with cache (only 1: red; only 1: destruct 1; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.60037779808	302
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.107727050781	4
Coq.Reals.RIneq.Rge_not_gt	40	1.1.1.1.2.2	search with cache (only 1: red; only 1: destruct 1; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	1.06637191772	654
Coq.Reals.RIneq.Req_le	40	0.0.3	search with cache (only 1: red; only 1: intros; only 1: tauto).	0.122408866882	23
Coq.Reals.RIneq.Req_ge	40	0.5	search with cache (only 1: red; only 1: tauto).	0.113837003708	20
Coq.Reals.RIneq.Req_le_sym	40	3.1.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.100193023682	16
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: auto).	0.09308385849	3
Coq.Reals.RIneq.Rgt_asym	40	1.2.0	search with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0979249477386	6
Coq.Reals.RIneq.Rle_antisym	40	0.0.1.2	search with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.140993118286	24
Coq.Reals.RIneq.Rge_antisym	40	1.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.103307008743	4
Coq.Reals.RIneq.Rle_le_eq	40	9	search with cache (only 1: intuition).	0.344218015671	69
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.104795217514	1
Coq.Reals.RIneq.Rlt_eq_compat	40
Coq.Reals.RIneq.Rgt_eq_compat	40
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	1.1.11	search with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	0.861968994141	673
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.1	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.122484922409	13
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.1	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.121681928635	14
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	1.1.3.0.0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: right; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.77708697319	293
Coq.Reals.RIneq.Rle_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.179347991943	3
Coq.Reals.RIneq.Rgt_dec	40	1.0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.178235054016	5
Coq.Reals.RIneq.Rge_dec	40	1.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.25537109375	11
Coq.Reals.RIneq.Rlt_le_dec	40	1.3.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.14030790329	20
Coq.Reals.RIneq.Rgt_ge_dec	40	0.5.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.14230298996	17
Coq.Reals.RIneq.Rle_lt_dec	40	0.5.0	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.207789897919	26
Coq.Reals.RIneq.Rge_gt_dec	40	1.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.177772045135	4
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.12802195549	3
Coq.Reals.RIneq.Rgt_or_ge	40	1.7.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.516605138779	252
Coq.Reals.RIneq.Rle_or_lt	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.173678159714	3
Coq.Reals.RIneq.Rge_or_gt	40	1.3.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.328565120697	51
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.4.4	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.868377923965	184
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	0.671164035797	24
Coq.Reals.RIneq.Rplus_ne	40	7	search with cache (only 1: auto with real).	0.194198131561	30
Coq.Reals.RIneq.Rplus_opp_l	40	0.0.2.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rplus_comm; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: apply CReal_plus_opp_r).	1.11690187454	14
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.8	search with cache (only 1: intros m n p; only 1: auto with real).	0.243888139725	65
Coq.Reals.RIneq.Rplus_eq_compat_r	40	9.2	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	12.9243781567	465
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40	9.2	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	1.77546000481	674
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.0.0.3.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.116762876511	8
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.104536056519	5
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.103148937225	3
Coq.Reals.RIneq.Rmult_0_r	40	3.1.1.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: field).	0.140229940414	15
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0914371013641	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.110922813416	9
Coq.Reals.RIneq.Rmult_1_r	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0992770195007	5
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	search with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0850219726562	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	8.4	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	10.6131157875	615
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40	8.9	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	9.14039611816	3090
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros r b; only 1: intro Hz; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: auto with real).	0.113920927048	13
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0861489772797	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	2	search with cache (only 1: intuition).	0.127849817276	15
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	2.1	search with cache (only 1: intros; only 1: auto with real).	0.154028177261	5
Coq.Reals.RIneq.Rmult_plus_distr_r	40	2.1.0.0.0	search with cache (only 1: intros m n p; only 1: rewrite Rmult_comm; only 1: rewrite (Rmult_comm n p); only 1: rewrite (Rmult_comm m p); only 1: apply Rmult_plus_distr_l).	0.097088098526	8
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0.7	search with cache (only 1: intros r b; only 1: apply f_equal).	0.139853000641	35
Coq.Reals.RIneq.Ropp_0	40	1	search with cache (only 1: ring).	0.090950012207	2
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.4.1	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.107409954071	8
Coq.Reals.RIneq.Ropp_involutive	40	0.0	search with cache (only 1: intro; only 1: ring).	0.093080997467	2
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0985419750214	3
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0981340408325	2
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	2.0	search with cache (only 1: intros; only 1: ring).	1.19544911385	16
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0970230102539	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0977559089661	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0976240634918	2
Coq.Reals.RIneq.Rminus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0930140018463	2
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0945100784302	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0952360630035	2
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0965988636017	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.0.5	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.108502149582	8
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.1	search with cache (only 1: intros; only 1: ring).	1.48127698898	17
Coq.Reals.RIneq.Rminus_eq_contra	40	2.0	search with cache (only 1: intros; only 1: auto with real).	0.16933298111	4
Coq.Reals.RIneq.Rminus_not_eq	40	0.1.0.0.0	search with cache (only 1: intros r1 r2 H; only 1: red; only 1: intro; only 1: apply H; only 1: auto with real).	0.138520956039	6
Coq.Reals.RIneq.Rminus_not_eq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.145544052124	11
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	search with cache (only 1: intros; only 1: ring).	1.65275096893	17
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.1.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.175347089767	17
Coq.Reals.RIneq.Rinv_mult_distr	40	0.0.0.5.3	search with cache (only 1: intros; only 1: field; only 1: split; only 1: trivial; only 1: trivial).	1.39430999756	187
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.106091976166	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.2.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.110876083374	5
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.6.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.153702020645	18
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.6.0.0.0	search with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: transitivity (r2 * (r1 * / r1)); only 1: ring; only 1: auto with real; only 1: auto with real).	1.10967206955	391
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	1.4.1	search with cache (only 1: intros r r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.110331058502	18
Coq.Reals.RIneq.Rplus_lt_compat_r	40	6.0.4	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: eauto with real).	7.36084294319	437
Coq.Reals.RIneq.Rplus_gt_compat_r	40	4.1.0.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.101698160172	10
Coq.Reals.RIneq.Rplus_le_compat_l	40	0.0.4.2	search with cache (only 1: do 3 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.144098997116	18
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.2.0.1.1.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	2.22570991516	561
Coq.Reals.RIneq.Rplus_ge_compat_r	40	1.6.3	search with cache (only 1: do 3 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.472889184952	184
Coq.Reals.RIneq.Rplus_lt_compat	40	10.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	9.40106487274	1011
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0902228355408	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40	9.1.7	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  4 with real).	15.0047519207	4281
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.2	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.26566195488	16
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.2.3	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.287216901779	29
Coq.Reals.RIneq.Rplus_lt_0_compat	40	0.1.0.0.5.0	search with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto using Rplus_lt_compat_l with real).	0.308236837387	177
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.0.0.1	search with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	0.238790988922	74
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.0.6	search with cache (only 1: intros n m p q; only 1: intros a b; only 1: auto with real).	0.366067171097	84
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	3.0.4	search with cache (only 1: red; only 1: intros; only 1: auto with real).	0.123782873154	25
Coq.Reals.RIneq.Ropp_lt_contravar	40	4.0	search with cache (only 1: intros; only 1: auto with real).	0.210717916489	34
Coq.Reals.RIneq.Ropp_gt_contravar	40	4.0.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.520957946777	30
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.4.4.4	search with cache (only 1: unfold Rge; only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	1.57183003426	1150
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	4.0	search with cache (only 1: intros; only 1: auto with real).	0.0887711048126	6
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0	search with cache (only 1: unfold Rle; only 1: intuition).	0.135941028595	2
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0.2.0.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: intro; only 1: auto with real; only 1: intro; only 1: auto with real).	0.211977005005	15
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.120166063309	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.17.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	4.08990716934	1008
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0859868526459	3
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0910670757294	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0935189723969	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.0	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0899038314819	4
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.0	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0901339054108	4
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.1.0	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.096510887146	5
Coq.Reals.RIneq.Rmult_lt_compat_r	40	13.2	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	5.53450608253	2526
Coq.Reals.RIneq.Rmult_gt_compat_r	40	2	search with cache (only 1: eauto using Rplus_lt_compat_l with rorders).	0.321938991547	86
Coq.Reals.RIneq.Rmult_gt_compat_l	40	2.0.5	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.274071931839	63
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40	6.4.3.0	search with cache (only 1: intros r r1 r2 H H0; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: auto with real).	33.8350610733	6047
Coq.Reals.RIneq.Rmult_ge_compat_l	40	1.9.3	search with cache (only 1: intros r r1 r2 H; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	1.05365920067	805
Coq.Reals.RIneq.Rmult_ge_compat_r	40	1.9.4	search with cache (only 1: intros r r1 r2 H; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	1.64475297928	1910
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	1.3.2.2.16	search with cache (only 1: do 3 intro; only 1: intros a b; only 1: intro Hz; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	7.89290094376	11455
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	11.11	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	17.5629107952	8677
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.0.7.3	search with cache (only 1: intros r r1 r2 H; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.715820074081	484
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.2.0.11.2	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	1.80305600166	894
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	6.0.2.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: exact H0).	0.587446928024	278
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.1.3.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.235967159271	16
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.1.2	search with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.23367190361	27
Coq.Reals.RIneq.Rge_minus	40	0.0.4.3.0.4	search with cache (only 1: unfold Rge; only 1: intuition; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	2.78291201591	990
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.2.0	search with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.107548952103	8
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.3	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0868098735809	6
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.1	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0896039009094	5
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.0.6.0	search with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.120313167572	18
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40	0.0.2.0.0.0.1	search with cache (only 1: intros x y; only 1: intros Lt0; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.105745077133	19
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	0.3.4.2.3	search with cache (only 1: unfold Rle; only 1: simple induction 1; only 1: auto with arith; only 1: intros a b; only 1: intuition).	1.56323194504	1639
Coq.Reals.RIneq.INR_not_0	40	4.1.2.2	search with cache (only 1: intros r H H0; only 1: elim H; only 1: rewrite H0; only 1: auto with real).	1.16825795174	901
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	4.0.0.0	search with cache (only 1: intros; only 1: red; only 1: intro; only 1: now apply not_INR in H).	0.104869842529	8
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.1.0.0.0.1	search with cache (only 1: intros; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: trivial).	0.476598024368	57
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	17.263780117	20860
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	search with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.149742126465	56
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	31.4	search with cache (only 1: intro t; only 1: ring).	6.5536339283	8610
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	1.1.1.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.184383869171	50
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	8.4.2.8.2	search with cache (only 1: intros x y; only 1: intros H1; only 1: intro; only 1: apply Rmult_lt_0_compat with (1 := H1); only 1: auto with real).	18.2534599304	34677
Coq.Reals.RIneq.Rdiv_plus_distr	40	1.1.2	search with cache (only 1: intros; only 1: unfold Rdiv; only 1: ring).	0.123368024826	7
Coq.Reals.RIneq.Rdiv_minus_distr	40	1.1.0	search with cache (only 1: intros a b c; only 1: unfold Rdiv; only 1: ring).	0.0973060131073	5
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	0.2.49	search with cache (only 1: fix even_equiv 1; only 1: intros a b; only 1: auto with arith).	2.85830211639	17043
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	14.1	search with cache (only 1: intros; only 1: auto with arith).	0.807405948639	1191
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	51.0	search with cache (only 1: intros; only 1: split).	2.23742604256	4983
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.2.0.28	search with cache (only 1: assert (Hyp : 0 < 2); only 1: prove_sup0; only 1: intro; only 1: ring).	0.18509221077	611
Coq.Reals.Ranalysis2.quadruple_var	40	54.0	search with cache (only 1: intro; only 1: field).	11.6312890053	16777
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.1	search with cache (only 1: intros; only 1: exact H).	0.08656001091	33
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	4.0.16	search with cache (only 1: intros P exnot allP; only 1: red; only 1: auto).	0.62219786644	1502
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	9.40	search with cache (only 1: intro n; only 1: tauto).	0.277271986008	1326
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40
Coq.Reals.Rseries.Un_bound_imp	40	0.10.27.0.10.1.1	search with cache (only 1: intros N; only 1: intros; only 1: intro l; only 1: intros; only 1: inversion H0; only 1: subst; only 1: trivial).	4.47906184196	24045
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.0.1.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros; only 1: apply Pn; only 1: auto with arith).	0.0676989555359	36
Coq.Reals.Rseries.Un_growing_shift	40
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40	9.0.2.3.18.6	search with cache (only 1: intros x (P, H3); only 1: unfold Boule; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	1.54292201996	3399
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.0.0.0.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.0473940372467	7
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	0.2	search with cache (only 1: intros; only 1: reflexivity).	0.0291178226471	4
Coq.Reals.Ranalysis1.continuity_pt_div	40	0.0.1.0.1.0.0.0	search with cache (only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: apply limit_inv; only 1: assumption; only 1: assumption).	0.0730938911438	10
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40	3.1.1.5.11	search with cache (only 1: unfold continuity_pt, opp_fct; only 1: unfold continuity; only 1: intros; only 1: apply limit_Ropp; only 1: apply H).	22.5739839077	24250
Coq.Reals.Ranalysis1.continuity_minus	40	5.5.0.0.0.1	search with cache (only 1: unfold continuity_pt, minus_fct; only 1: unfold continuity; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	1.20423293114	1004
Coq.Reals.Ranalysis1.continuity_mult	40	6.6.0.0.0.6	search with cache (only 1: unfold continuity_pt, mult_fct; only 1: unfold continuity; only 1: intros; only 1: apply limit_mul; only 1: apply H; only 1: apply H0).	5.45439291	4640
Coq.Reals.Ranalysis1.continuity_const	40	0.0.0.2.0.0.1.1.0.0.0.2.0.2.0	search with cache (only 1: unfold continuity; only 1: intros; only 1: intros a b; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: generalize (H x x0); only 1: intro; only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	8.31511807442	8777
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	0.0.4.5.1.0.2.0.1.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: intros; only 1: replace (/ f)%F with (fun x : R => / f x); only 1: unfold continue_in; only 1: apply limit_inv; only 1: apply H; only 1: auto; only 1: unfold inv_fct; only 1: reflexivity).	6.22700619698	6991
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.434831857681	195
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	1.0.0.1.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0491778850555	19
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	1.0.0.0	search with cache (only 1: intros a b; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.040452003479	13
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	1.0.0.0.74	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	20.8541150093	18078
Coq.Reals.Ranalysis1.derivable_Rsqr	40	1.0.0.0.74	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.761385917664	4098
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40	3.0.0.12.0.3.0.1	search with cache (only 1: unfold derivable_pt; only 1: intros f x X; only 1: elim X; only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_opp; only 1: unfold derive_pt; only 1: assumption).	14.9545907974	16062
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	1.6.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	0.0379550457001	11
Coq.Reals.Ranalysis1.derive_pt_scal	40	4.0.4.3.5.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_scal; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: assumption).	2.78252696991	3813
Coq.Reals.Ranalysis1.derive_pt_id	40	1.7.1	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.109157085419	132
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.11.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.326182126999	227
Coq.Reals.Ranalysis1.derive_pt_comp	40	0.1.0.9.2.0.0.9.0.0	search with cache (only 1: unfold derivable_pt; only 1: intros f1 f2 x X X0; only 1: elim X; only 1: intros; only 1: elim X0; only 1: intros l1 H; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_comp; only 1: assumption; only 1: assumption).	37.1848990917	35439
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.1	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0580451488495	26
Coq.Reals.Ranalysis1.derive_pt_pow	40	1.0.14.0.0	search with cache (only 1: intros; only 1: set (f := fun y : R => y ^ n); only 1: apply derive_pt_eq_0; only 1: unfold f; only 1: apply derivable_pt_lim_pow).	4.75238895416	4879
Coq.Reals.Ranalysis1.pr_nu	40	2.4.1.1.0.0.1.0.0	search with cache (only 1: unfold derivable_pt; only 1: intros f x X; only 1: elim X; only 1: intros; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: apply derive_pt_eq_0; only 1: assumption).	2.142318964	2525
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	11.30.0.14.17	search with cache (only 1: pattern PI at 1; only 1: apply Rlt_mult_inv_pos; only 1: apply PI_RGT_0; only 1: apply IZR_lt; only 1: split).	33.5434708595	56483
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.4	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0640399456024	9
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40	0.1.0.0.0.0.0.0.0.1.0.1.1.0.2.0.1.0.0.0.4	search with cache (only 1: rewrite sin_PI3_cos_PI6; only 1: apply Rsqr_inj; only 1: apply cos_ge_0; only 1: left; only 1: apply (Rlt_trans (- (PI / 2)) 0 (PI / 6) _PI2_RLT_0 PI6_RGT_0); only 1: left; only 1: apply PI6_RLT_PI2; only 1: left; only 1: apply (Rmult_lt_0_compat (sqrt 3) (/ 2)); only 1: apply Rlt_sqrt3_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0; only 1: rewrite Rsqr_div; only 1: rewrite cos2; only 1: unfold Rsqr; only 1: rewrite sin_PI6; only 1: rewrite sqrt_def; only 1: field; only 1: left; only 1: prove_sup0; only 1: discrR).	35.8014669418	30636
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	3.3.1.0.1.5.2.7.2.10.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite double_var; only 1: rewrite double_var; only 1: field_simplify; only 1: rewrite sin_PI4; only 1: field; only 1: apply sqrt2_neq_0; only 1: apply sqrt2_neq_0).	28.3995559216	11789
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.1.8.2.3.3	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_sin; only 1: rewrite neg_cos; only 1: pattern (cos (PI / 4)) at 1; only 1: rewrite <- sin_cos_PI4; only 1: ring).	3.61351680756	1609
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.1.13	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	2.21937203407	1962
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	4.0.55.0.79	search with cache (only 1: red; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	6.87030220032	26668
Coq.Reals.Ranalysis4.derivable_cosh	40
Coq.Reals.Ranalysis4.derivable_sinh	40
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.2883040905	100
Coq.Reals.Ranalysis4.derive_pt_sinh	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.280084848404	101
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40
Coq.Reals.DiscrR.IZR_eq	40	6.1.0.2	search with cache (only 1: intros g c0; only 1: intros; only 1: ZMicromega.inv H; only 1: tauto).	0.147854089737	181
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40
Coq.Reals.ConstructiveReals.CReq_sym	40	0.0.1.11	search with cache (only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption).	1.10966205597	1537
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40	1.5.2.3.11.1.0.13	search with cache (only 1: intro p; only 1: intros H2 H3 H4; only 1: intros H1; only 1: red; only 1: intuition; only 1: apply CRplus_lt_reg_l in H; only 1: contradict H2; only 1: intuition).	22.0508840084	70655
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	2.2.3.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.453340053558	296
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	5.4.3.6.3.1.4.0.7.6.0.16	search with cache (only 1: intro n; only 1: intros; only 1: rewrite Pos2Nat.inj_mul; only 1: simpl; only 1: rewrite max_l; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: rewrite <- (Nat.add_0_r (Pos.to_nat n)); only 1: apply Nat.le_0_l; only 1: apply H; only 1: apply Nat.le_refl).	33.9547820091	98860
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	324	search with cache (only 1: auto).	18.1918029785	193380
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	2	search with cache (only 1: apply CReal_isRingExt).	10.5995459557	113
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	search with cache (only 1: apply CReal_isRingExt).	10.1473100185	112
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.0.1	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.0526258945465	5
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0245261192322	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	1.2	search with cache (only 1: intro; only 1: ring).	0.589302062988	76
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0301470756531	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.4.0.7	search with cache (only 1: intros x y; only 1: intros; only 1: apply CReal_mult_proper_l; only 1: exact H).	0.596936941147	601
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0282819271088	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	21.3	search with cache (only 1: intros p q; only 1: ring_Rsqr).	1.24138021469	3458
Coq.Reals.R_sqr.Rsqr_plus	40	9.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.138178825378	54
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.114953994751	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	4.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.1068110466	6
Coq.Reals.R_sqr.Rsqr_1	40	3	search with cache (only 1: apply Rmult_1_l).	0.201542139053	32
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	22.1	search with cache (only 1: intro; only 1: auto with real).	5.1818561554	10863
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	5.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.14018201828	21
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.102232933044	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	1.0.0.3.11.0	search with cache (only 1: intros; only 1: rewrite (Rsqr_neg x); only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: ring_Rsqr; only 1: ring_Rsqr).	1.35000491142	1841
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.0.5.0.0.0	search with cache (only 1: intro; only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: auto; only 1: auto).	0.325638055801	224
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	7.2	search with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intuition).	0.836019992828	184
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0219950675964	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0218369960785	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.2.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: case (Rle_dec y x); only 1: intuition auto; ROrder.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.124193906784	88
Coq.Reals.Rminmax.Rmin_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: unfold Rmin; only 1: intros; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: case (Rle_dec y x); only 1: auto; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0631580352783	13
Coq.Reals.Rminmax.plus_max_distr_l	40
Coq.Reals.Rminmax.plus_max_distr_r	40
Coq.Reals.Rminmax.plus_min_distr_l	40	0.0.0.6.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: intros x y; only 1: apply Rplus_le_compat_l).	1.60323309898	76
Coq.Reals.Rminmax.plus_min_distr_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0293829441071	6
Coq.Reals.Rminmax.opp_max_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0222918987274	4
Coq.Reals.Rminmax.opp_min_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0227200984955	4
Coq.Reals.Rminmax.minus_max_distr_l	40
Coq.Reals.Rminmax.minus_max_distr_r	40
Coq.Reals.Rminmax.minus_min_distr_l	40
Coq.Reals.Rminmax.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	2.1	search with cache (only 1: intros n; only 1: field).	0.0484209060669	5
Coq.Reals.Rlimit.eps4	40	10.0	search with cache (only 1: intro esp; only 1: field).	0.192653894424	77
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0285789966583	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0293130874634	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40	0.1.0.0.0.3.4.4.0.12.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Rsqr_inj; only 1: assumption; only 1: apply sqrt_pos; only 1: pattern y at 1; only 1: rewrite <- Rmult_1_r; only 1: unfold Rsqr; only 1: rewrite sqrt_sqrt; only 1: rewrite Rmult_1_r; only 1: assumption; only 1: assumption).	6.23198080063	6194
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0278339385986	6
Coq.Reals.R_sqrt.sqrt_square	40	0.0.4.2.4.0.7.3.0	search with cache (only 1: intros; only 1: apply Rsqr_inj; only 1: apply sqrt_pos; only 1: assumption; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: apply Rmult_le_pos; only 1: assumption; only 1: assumption).	8.16943287849	17303
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0208737850189	4
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.7.1.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.427619934082	336
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0176608562469	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	1.0.0.0.0.2	search with cache (only 1: intros x y Hx; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: exact Hx; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.0786590576172	83
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.0.2.0	search with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: auto with real; only 1: auto with real).	0.0363030433655	18
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.1.1.0.1.1.1	search with cache (only 1: intros x H1; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).	3.86875391006	2377
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	1.7.0.3.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.nlt_0_r _ H); only 1: simpl; only 1: reflexivity).	2.23444700241	1224
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0772130489349	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0424230098724	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40	1.12.0.14	search with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: discrR; only 1: destruct pi2_int; only 1: lra).	7.7425839901	4505
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	1.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: ring).	0.059662103653	6
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.1.1.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	0.179733991623	30
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.1.2.4.1.1.0.1.7.0	search with cache (only 1: intro x; only 1: symmetry in  |- *; only 1: rewrite sin_cos; only 1: rewrite Ropp_involutive; only 1: rewrite cos_plus; only 1: rewrite cos_PI2; only 1: rewrite sin_antisym; only 1: symmetry in  |- *; only 1: rewrite sin_PI2; only 1: ring).	18.1564309597	8999
Coq.Reals.Rtrigo1.cos_neg	40	4.16.0	search with cache (only 1: intro x; only 1: rewrite <- cos_sym; only 1: ring).	0.686648845673	828
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40	2.0.2.3.2	search with cache (only 1: rewrite double; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	1.74647402763	860
Coq.Reals.Rtrigo1.cos_2PI	40	0.0.0.21.3	search with cache (only 1: repeat rewrite double; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	30.6097271442	16481
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.1.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0526070594788	6
Coq.Reals.Rtrigo1.sin_PI_x	40	4.2.2.0.0.0.1.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_PI; only 1: rewrite sin_antisym; only 1: rewrite cos_PI; only 1: ring).	4.80729603767	2390
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	2.0.5.2.8.1.11.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite cos_PI2; only 1: rewrite sin_cos; only 1: rewrite cos_plus; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring).	9.32079696655	8955
Coq.Reals.Rtrigo1.PI2_RGT_0	40
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	2.4	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0523629188538	28
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.116590023041	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	5.06456685066	1020
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	1.5.1	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.034129858017	10
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	5.12.1	search with cache (only 1: intros; only 1: red; only 1: assumption).	0.953331947327	1625
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	0.1.5.1.2.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: simpl; only 1: rewrite HrecN; only 1: ring).	0.329837083817	363
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0749640464783	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	1.0.0.10.0.1.6.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	38.6832900047	15649
Coq.Reals.PartSum.Rabs_triang_gen	40	0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.322679042816	188
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	2.2.6.1.1.3.3	search with cache (only 1: intros a b; only 1: unfold Qred, Qeq; only 1: intros z; only 1: f_equal; only 1: simpl; only 1: rewrite <- (Z.mul_1_l a)  at 1; only 1: split).	11.1694951057	2745
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	8.24.17.19.4	search with cache (only 1: intros [xn xd] [yn yd] H; only 1: destruct H; only 1: red; only 1: exists x; only 1: apply q).	14.6759839058	61036
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40	2.3.11.1.2.10	search with cache (only 1: intro n; only 1: apply CRealLe_not_lt; only 1: intros x; only 1: rewrite Qle_minus_iff; only 1: ring_simplify; only 1: abstract (compute; discriminate)).	11.9263160229	2483
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.1.5	search with cache (only 1: split; only 1: apply H; only 1: apply H).	0.0644309520721	43
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40	1.0.2.15.1.4	search with cache (only 1: intros x y H [n q]; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: pose proof (CRealLe_not_lt x y) as [_ H2]; only 1: assumption).	6.97605705261	11662
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	2.1.0.15.1.4	search with cache (only 1: intros x y H [n q]; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: pose proof (CRealLe_not_lt x y) as [_ H2]; only 1: assumption; only 1: contradiction).	6.92672514915	11631
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	11.14.3	search with cache (only 1: intros x y lpo; only 1: apply CRealLe_morph; only 1: now subst).	10.3503899574	19717
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	2.2.38.0.12	search with cache (only 1: intros x y H; only 1: intros; only 1: unfold Qminus; only 1: rewrite Qplus_opp_r; only 1: reflexivity).	18.3929820061	23702
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.7.0.8	search with cache (only 1: intro q; only 1: intros; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	5.15543794632	3328
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	1.216	search with cache (only 1: pose proof (CRealLe_not_lt x y) as [_ H2]; only 1: assumption).	4.13347196579	47476
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.1.5	search with cache (only 1: intros x y H [n q]; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction).	6.35278201103	4666
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	0	search with cache (only 1: apply CReal_plus_0_l).	0.0168769359589	1
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	10	search with cache (only 1: reflexivity).	0.0511028766632	24
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	0.0.0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: split; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate).	0.671667098999	391
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	4.0.0.0.93	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.908607959747	6236
Coq.Reals.Rtrigo_reg.derivable_cos	40	3.0.0.0.94	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.848838090897	6084
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	3.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.0785269737244	22
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: repeat rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	3.38038492203	4231
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.3.0	search with cache (only 1: intros; only 1: apply pow_nonzero; only 1: discrR).	0.0429491996765	30
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.1.0.1.1.0.0.0.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	0.791108846664	390
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.height_non_negative	40
Coq.FSets.FMapFullAVL.avl_node	40	0.0.0.0	search with cache (only 1: inversion_clear 1; only 1: intros; only 1: intuition; only 1: intuition).	0.0592091083527	4
Coq.FSets.FMapFullAVL.height_0	40
Coq.FSets.FMapFullAVL.empty_avl	40	8	search with cache (only 1: auto using map_option_bst).	0.0254368782043	9
Coq.FSets.FMapFullAVL.create_avl	40
Coq.FSets.FMapFullAVL.create_height	40	0	search with cache (only 1: auto).	0.0266790390015	1
Coq.FSets.FMapFullAVL.bal_avl	40
Coq.FSets.FMapFullAVL.bal_height_1	40
Coq.FSets.FMapFullAVL.bal_height_2	40
Coq.FSets.FMapFullAVL.add_avl_1	40
Coq.FSets.FMapFullAVL.add_avl	40
Coq.FSets.FMapFullAVL.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.remove_min_avl	40
Coq.FSets.FMapFullAVL.merge_avl_1	40
Coq.FSets.FMapFullAVL.merge_avl	40
Coq.FSets.FMapFullAVL.remove_avl_1	40
Coq.FSets.FMapFullAVL.remove_avl	40
Coq.FSets.FMapFullAVL.join_avl_1	40
Coq.FSets.FMapFullAVL.join_avl	40
Coq.FSets.FMapFullAVL.concat_avl	40
Coq.FSets.FMapFullAVL.split_avl	40
Coq.FSets.FMapFullAVL.map_height	40
Coq.FSets.FMapFullAVL.map_avl	40
Coq.FSets.FMapFullAVL.mapi_height	40	1.1.0	search with cache (only 1: destruct m; only 1: constructor; only 1: constructor).	0.0415899753571	19
Coq.FSets.FMapFullAVL.mapi_avl	40
Coq.FSets.FMapFullAVL.map_option_avl	40
Coq.FSets.FMapFullAVL.map2_opt_avl	40
Coq.FSets.FMapFullAVL.map2_avl	40
Coq.FSets.FMapFullAVL.MapsTo_1	40
Coq.FSets.FMapFullAVL.mem_1	40
Coq.FSets.FMapFullAVL.mem_2	40
Coq.FSets.FMapFullAVL.empty_1	40	56.5.22	search with cache (only 1: intros z Hz; only 1: intuition; only 1: inversion_clear H).	10.1797881126	25884
Coq.FSets.FMapFullAVL.is_empty_1	40
Coq.FSets.FMapFullAVL.is_empty_2	40
Coq.FSets.FMapFullAVL.add_1	40
Coq.FSets.FMapFullAVL.add_2	40
Coq.FSets.FMapFullAVL.add_3	40
Coq.FSets.FMapFullAVL.remove_1	40
Coq.FSets.FMapFullAVL.remove_2	40
Coq.FSets.FMapFullAVL.remove_3	40
Coq.FSets.FMapFullAVL.find_1	40
Coq.FSets.FMapFullAVL.find_2	40
Coq.FSets.FMapFullAVL.fold_1	40
Coq.FSets.FMapFullAVL.elements_1	40
Coq.FSets.FMapFullAVL.elements_2	40
Coq.FSets.FMapFullAVL.elements_3	40
Coq.FSets.FMapFullAVL.elements_3w	40
Coq.FSets.FMapFullAVL.cardinal_1	40
Coq.FSets.FMapFullAVL.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.equal_1	40
Coq.FSets.FMapFullAVL.equal_2	40
Coq.FSets.FMapFullAVL.map_1	40
Coq.FSets.FMapFullAVL.map_2	40
Coq.FSets.FMapFullAVL.mapi_1	40
Coq.FSets.FMapFullAVL.mapi_2	40
Coq.FSets.FMapFullAVL.map2_1	40
Coq.FSets.FMapFullAVL.map2_2	40
Coq.FSets.FMapFullAVL.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.cons_Cmp	40	6.0.6.0.6.0.8.15	search with cache (only 1: intro H; only 1: destruct H; only 1: intros; only 1: LO.cmp_solve; only 1: intros; only 1: LO.cmp_solve; only 1: intros; only 1: LO.cmp_solve).	2.77651309967	6648
Coq.FSets.FMapFullAVL.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.compare_Cmp	40
Coq.FSets.FMapFullAVL.compare	40
Coq.FSets.FMapFullAVL.eq_seq	40	0.1	search with cache (only 1: intros; only 1: intuition).	0.0286841392517	3
Coq.FSets.FMapFullAVL.lt_slt	40	1	search with cache (only 1: intuition).	0.0271708965302	2
Coq.FSets.FMapFullAVL.eq_1	40
Coq.FSets.FMapFullAVL.eq_2	40
Coq.FSets.FMapFullAVL.eq_refl	40
Coq.FSets.FMapFullAVL.eq_sym	40
Coq.FSets.FMapFullAVL.eq_trans	40
Coq.FSets.FMapFullAVL.lt_trans	40
Coq.FSets.FMapFullAVL.lt_not_eq	40
Coq.FSets.FMapAVL.MapsTo_In	40
Coq.FSets.FMapAVL.In_MapsTo	40
Coq.FSets.FMapAVL.In_alt	40
Coq.FSets.FMapAVL.MapsTo_1	40
Coq.FSets.FMapAVL.In_1	40	0.0.0.0.1.0	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.421909093857	7
Coq.FSets.FMapAVL.In_node_iff	40	1.0.0.4.4.6	search with cache (only 1: intros; only 1: split; only 1: intuition_in; only 1: inversion_clear 1; only 1: auto; only 1: intuition).	1.00982093811	1391
Coq.FSets.FMapAVL.lt_leaf	40	89	search with cache (only 1: inversion 1).	1.70184397697	12106
Coq.FSets.FMapAVL.gt_leaf	40	0.14	search with cache (only 1: intros m x f; only 1: intuition_in).	0.0579571723938	91
Coq.FSets.FMapAVL.lt_tree_node	40
Coq.FSets.FMapAVL.gt_tree_node	40	3.1.49	search with cache (only 1: red; only 1: intuition_in; only 1: order).	33.22362113	6832
Coq.FSets.FMapAVL.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0266990661621	2
Coq.FSets.FMapAVL.lt_right	40	0	search with cache (only 1: intuition_in).	0.0216109752655	1
Coq.FSets.FMapAVL.gt_left	40	0	search with cache (only 1: intuition_in).	0.0219709873199	1
Coq.FSets.FMapAVL.gt_right	40	0	search with cache (only 1: intuition_in).	0.0216159820557	1
Coq.FSets.FMapAVL.lt_tree_not_in	40	3.10.16	search with cache (only 1: intros m x f; only 1: intuition; only 1: order).	0.380080938339	597
Coq.FSets.FMapAVL.lt_tree_trans	40	2.1.43.1	search with cache (only 1: intuition_in; only 1: red; only 1: intros; only 1: order).	5.68335294724	14103
Coq.FSets.FMapAVL.gt_tree_not_in	40	2.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0209300518036	5
Coq.FSets.FMapAVL.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0376942157745	1
Coq.FSets.FMapAVL.empty_bst	40	3	search with cache (only 1: trivial).	0.0142970085144	4
Coq.FSets.FMapAVL.empty_1	40	0.44.0	search with cache (only 1: unfold empty; only 1: intros m x f; only 1: intuition_in).	0.625636100769	2589
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40	6.0.9.5.0.3	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: unfold empty, Empty; only 1: intuition_in; only 1: inversion 1).	2.48166179657	4527
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40	1.1.0.1.0.0.7.1.3	search with cache (only 1: intros m x; only 1: induction m; only 1: inversion 1; only 1: simpl; only 1: L.MX.elim_comp; only 1: auto; only 1: intros; only 1: eauto with ordered_type; only 1: auto).	2.23265099525	2314
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.find_iff	40
Coq.FSets.FMapAVL.find_in	40
Coq.FSets.FMapAVL.in_find	40
Coq.FSets.FMapAVL.find_in_iff	40
Coq.FSets.FMapAVL.not_find_iff	40
Coq.FSets.FMapAVL.find_find	40
Coq.FSets.FMapAVL.find_mapsto_equiv	40
Coq.FSets.FMapAVL.find_in_equiv	40
Coq.FSets.FMapAVL.create_bst	40
Coq.FSets.FMapAVL.create_in	40	0.2	search with cache (only 1: unfold create; only 1: intuition_in).	0.165175914764	13
Coq.FSets.FMapAVL.bal_bst	40
Coq.FSets.FMapAVL.bal_in	40
Coq.FSets.FMapAVL.bal_mapsto	40
Coq.FSets.FMapAVL.bal_find	40
Coq.FSets.FMapAVL.add_in	40
Coq.FSets.FMapAVL.add_bst	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.add_find	40
Coq.FSets.FMapAVL.remove_min_in	40
Coq.FSets.FMapAVL.remove_min_mapsto	40
Coq.FSets.FMapAVL.remove_min_bst	40
Coq.FSets.FMapAVL.remove_min_gt_tree	40
Coq.FSets.FMapAVL.remove_min_find	40
Coq.FSets.FMapAVL.merge_in	40
Coq.FSets.FMapAVL.merge_mapsto	40
Coq.FSets.FMapAVL.merge_bst	40
Coq.FSets.FMapAVL.remove_in	40
Coq.FSets.FMapAVL.remove_bst	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.join_in	40
Coq.FSets.FMapAVL.join_bst	40
Coq.FSets.FMapAVL.join_find	40
Coq.FSets.FMapAVL.split_in_1	40
Coq.FSets.FMapAVL.split_in_2	40
Coq.FSets.FMapAVL.split_in_3	40
Coq.FSets.FMapAVL.split_bst	40
Coq.FSets.FMapAVL.split_lt_tree	40
Coq.FSets.FMapAVL.split_gt_tree	40
Coq.FSets.FMapAVL.split_find	40
Coq.FSets.FMapAVL.concat_in	40
Coq.FSets.FMapAVL.concat_bst	40
Coq.FSets.FMapAVL.concat_find	40
Coq.FSets.FMapAVL.elements_aux_mapsto	40
Coq.FSets.FMapAVL.elements_mapsto	40
Coq.FSets.FMapAVL.elements_in	40
Coq.FSets.FMapAVL.elements_aux_sort	40
Coq.FSets.FMapAVL.elements_sort	40
Coq.FSets.FMapAVL.elements_nodup	40
Coq.FSets.FMapAVL.elements_aux_cardinal	40
Coq.FSets.FMapAVL.elements_cardinal	40
Coq.FSets.FMapAVL.elements_app	40
Coq.FSets.FMapAVL.elements_node	40
Coq.FSets.FMapAVL.fold_equiv_aux	40
Coq.FSets.FMapAVL.fold_equiv	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.flatten_e_elements	40	0.0.2.1.0	search with cache (only 1: unfold elements; only 1: intros; only 1: simpl; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0613842010498	8
Coq.FSets.FMapAVL.cons_1	40	0.0.3.5.4.3.12	search with cache (only 1: induction s as [| l Hl x e r Hr h]; only 1: intros Bs; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite Hl; only 1: apply elements_node).	8.10109996796	11992
Coq.FSets.FMapAVL.cons_IfEq	40
Coq.FSets.FMapAVL.equal_end_IfEq	40
Coq.FSets.FMapAVL.equal_more_IfEq	40
Coq.FSets.FMapAVL.equal_cont_IfEq	40
Coq.FSets.FMapAVL.equal_IfEq	40
Coq.FSets.FMapAVL.Equivb_elements	40
Coq.FSets.FMapAVL.equal_Equivb	40
Coq.FSets.FMapAVL.map_1	40
Coq.FSets.FMapAVL.map_2	40	1.1.1.2.1.0.5.1.2.13	search with cache (only 1: simple induction m; only 1: simpl; only 1: intros; only 1: intuition_in; only 1: intros s s' B B'; only 1: intros m1 m2; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	6.34066104889	9572
Coq.FSets.FMapAVL.map_bst	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0844750404358	8
Coq.FSets.FMapAVL.mapi_bst	40
Coq.FSets.FMapAVL.map_option_2	40
Coq.FSets.FMapAVL.map_option_bst	40
Coq.FSets.FMapAVL.map_option_find	40
Coq.FSets.FMapAVL.map2_opt_2	40
Coq.FSets.FMapAVL.map2_opt_bst	40
Coq.FSets.FMapAVL.map2_opt_1	40
Coq.FSets.FMapAVL.map2_bst	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.MapsTo_1	40
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40
Coq.FSets.FMapAVL.empty_1	40	8.7.0.39	search with cache (only 1: intro y1; only 1: intros; only 1: red; only 1: inversion_clear 1).	1.62081503868	3399
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.elements_1	40
Coq.FSets.FMapAVL.elements_2	40
Coq.FSets.FMapAVL.elements_3	40	2.0.0.2.7.3	search with cache (only 1: intros; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion_clear H).	0.399925947189	454
Coq.FSets.FMapAVL.elements_3w	40	2.0.0.2.0.0.0.7.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion_clear H).	0.707545042038	899
Coq.FSets.FMapAVL.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0177109241486	1
Coq.FSets.FMapAVL.Equivb_Equivb	40
Coq.FSets.FMapAVL.equal_1	40
Coq.FSets.FMapAVL.equal_2	40
Coq.FSets.FMapAVL.map_1	40
Coq.FSets.FMapAVL.map_2	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.cons_Cmp	40
Coq.FSets.FMapAVL.compare_end_Cmp	40	14.16.0	search with cache (only 1: destruct e2; only 1: constructor; only 1: reflexivity).	0.947764158249	4246
Coq.FSets.FMapAVL.compare_more_Cmp	40
Coq.FSets.FMapAVL.compare_cont_Cmp	40
Coq.FSets.FMapAVL.compare_Cmp	40
Coq.FSets.FMapAVL.compare	40
Coq.FSets.FMapAVL.eq_seq	40	38	search with cache (only 1: auto with *).	0.233616828918	978
Coq.FSets.FMapAVL.lt_slt	40	1	search with cache (only 1: intuition).	0.0241701602936	2
Coq.FSets.FMapAVL.eq_1	40
Coq.FSets.FMapAVL.eq_2	40
Coq.FSets.FMapAVL.eq_refl	40
Coq.FSets.FMapAVL.eq_sym	40
Coq.FSets.FMapAVL.eq_trans	40
Coq.FSets.FMapAVL.lt_trans	40
Coq.FSets.FMapAVL.lt_not_eq	40
Coq.FSets.FSetFacts.In_eq_iff	40
Coq.FSets.FSetFacts.mem_iff	40
Coq.FSets.FSetFacts.not_mem_iff	40	1.17.2.7.13	search with cache (only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).	1.07058000565	2387
Coq.FSets.FSetFacts.equal_iff	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.1781270504	68
Coq.FSets.FSetFacts.subset_iff	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.177705049515	66
Coq.FSets.FSetFacts.empty_iff	40
Coq.FSets.FSetFacts.is_empty_iff	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.209089040756	64
Coq.FSets.FSetFacts.singleton_iff	40	7	search with cache (only 1: intuition).	0.0386929512024	20
Coq.FSets.FSetFacts.add_iff	40
Coq.FSets.FSetFacts.add_neq_iff	40	1.1.3.0.0.2.5.2.0.11	search with cache (only 1: intros EQ; only 1: split; only 1: destruct (eq_dec x y) as [E| E]; only 1: apply subset_2; only 1: auto; only 1: intro H; only 1: exact (add_3 E H); only 1: intro H; only 1: apply add_2; only 1: auto).	5.54728198051	27426
Coq.FSets.FSetFacts.remove_iff	40
Coq.FSets.FSetFacts.remove_neq_iff	40	0.1.17.1	search with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	1.06024885178	3745
Coq.FSets.FSetFacts.union_iff	40	2	search with cache (only 1: intuition).	0.446243047714	161
Coq.FSets.FSetFacts.inter_iff	40
Coq.FSets.FSetFacts.diff_iff	40
Coq.FSets.FSetFacts.filter_iff	40
Coq.FSets.FSetFacts.for_all_iff	40	86	search with cache (only 1: intuition).	6.07397985458	26999
Coq.FSets.FSetFacts.exists_iff	40	87	search with cache (only 1: intuition).	5.74333190918	27509
Coq.FSets.FSetFacts.elements_iff	40	1	search with cache (only 1: intuition).	0.0353181362152	11
Coq.FSets.FSetFacts.mem_b	40
Coq.FSets.FSetFacts.empty_b	40
Coq.FSets.FSetFacts.add_b	40
Coq.FSets.FSetFacts.add_neq_b	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.149583101273	10
Coq.FSets.FSetFacts.remove_b	40
Coq.FSets.FSetFacts.remove_neq_b	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.732484102249	154
Coq.FSets.FSetFacts.singleton_b	40
Coq.FSets.FSetFacts.union_b	40
Coq.FSets.FSetFacts.inter_b	40
Coq.FSets.FSetFacts.diff_b	40
Coq.FSets.FSetFacts.elements_b	40
Coq.FSets.FSetFacts.filter_b	40
Coq.FSets.FSetFacts.for_all_b	40
Coq.FSets.FSetFacts.exists_b	40
Coq.FSets.FSetFacts.E_ST	40	0.13.93.12.149	search with cache (only 1: constructor; only 1: now subst; only 1: intuition; only 1: intros x y H; only 1: eauto).	35.1786980629	269444
Coq.FSets.FSetFacts.Equal_ST	40
Coq.FSets.FSetFacts.In_m	40
Coq.FSets.FSetFacts.is_empty_m	40
Coq.FSets.FSetFacts.Empty_m	40
Coq.FSets.FSetFacts.mem_m	40
Coq.FSets.FSetFacts.singleton_m	40
Coq.FSets.FSetFacts.add_m	40
Coq.FSets.FSetFacts.remove_m	40
Coq.FSets.FSetFacts.union_m	40
Coq.FSets.FSetFacts.inter_m	40
Coq.FSets.FSetFacts.diff_m	40
Coq.FSets.FSetFacts.Subset_m	40
Coq.FSets.FSetFacts.subset_m	40
Coq.FSets.FSetFacts.equal_m	40
Coq.FSets.FSetFacts.Subset_refl	40	10.23.2	search with cache (only 1: intros EQ; only 1: intro H; only 1: auto).	0.343540906906	1846
Coq.FSets.FSetFacts.Subset_trans	40	14.0.4	search with cache (only 1: intros; only 1: intros EQ; only 1: auto).	0.200313806534	523
Coq.FSets.FSetFacts.In_s_m	40	1.0.8.2.1	search with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite (In_eq_iff s' H); only 1: intros EQ; only 1: auto).	7.84886980057	1959
Coq.FSets.FSetFacts.Empty_s_m_Proper	40	2.25.0.1.12.0	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: intros EQ; only 1: rewrite H; only 1: auto).	3.98949408531	17035
Coq.FSets.FSetFacts.add_s_m_Proper	40
Coq.FSets.FSetFacts.remove_s_m_Proper	40
Coq.FSets.FSetFacts.union_s_m_Proper	40
Coq.FSets.FSetFacts.inter_s_m_Proper	40
Coq.FSets.FSetFacts.diff_s_m_Proper	40
Coq.FSets.FSetFacts.filter_equal	40
Coq.FSets.FSetFacts.filter_ext	40
Coq.FSets.FSetFacts.filter_subset	40
Coq.FSets.FSetPositive.In_1	40
Coq.FSets.FSetPositive.eq_refl	40	8.0	search with cache (only 1: intros EQ; only 1: now subst).	0.0978000164032	10
Coq.FSets.FSetPositive.eq_sym	40	8.0	search with cache (only 1: intros x y H; only 1: now subst).	0.105222940445	20
Coq.FSets.FSetPositive.eq_trans	40	0.1.14.1.11.2.7	search with cache (only 1: unfold eq, Equal; only 1: intros EQ; only 1: intros x y H; only 1: symmetry; only 1: rewrite H; only 1: symmetry; only 1: trivial).	14.3395729065	36758
Coq.FSets.FSetPositive.mem_1	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.0228431224823	2
Coq.FSets.FSetPositive.mem_2	40	0	search with cache (only 1: trivial).	0.0214350223541	1
Coq.FSets.FSetPositive.mem_Leaf	40	4.3	search with cache (only 1: intros; only 1: auto with arith).	0.0252001285553	14
Coq.FSets.FSetPositive.empty_1	40	8	search with cache (only 1: now subst).	0.026230096817	18
Coq.FSets.FSetPositive.mem_node	40
Coq.FSets.FSetPositive.is_empty_spec	40
Coq.FSets.FSetPositive.is_empty_1	40
Coq.FSets.FSetPositive.is_empty_2	40
Coq.FSets.FSetPositive.subset_Leaf_s	40	11	search with cache (only 1: now subst).	0.0491240024567	54
Coq.FSets.FSetPositive.subset_spec	40
Coq.FSets.FSetPositive.subset_1	40
Coq.FSets.FSetPositive.subset_2	40
Coq.FSets.FSetPositive.equal_subset	40
Coq.FSets.FSetPositive.equal_spec	40
Coq.FSets.FSetPositive.equal_1	40	2.4.0.1.0.0.0.3.5.0.2	search with cache (only 1: intros; only 1: rewrite equal_subset; only 1: symmetry; only 1: rewrite eq_iff_eq_true; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: split; only 1: intros; only 1: firstorder; only 1: intuition discriminate).	7.4888689518	14962
Coq.FSets.FSetPositive.equal_2	40
Coq.FSets.FSetPositive.eq_dec	40
Coq.FSets.FSetPositive.lex_Opp	40
Coq.FSets.FSetPositive.compare_bool_inv	40
Coq.FSets.FSetPositive.compare_inv	40
Coq.FSets.FSetPositive.lex_Eq	40
Coq.FSets.FSetPositive.compare_bool_Eq	40	1.0.0.0.2	search with cache (only 1: intros [| ] [| ]; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.0599339008331	26
Coq.FSets.FSetPositive.compare_equal	40
Coq.FSets.FSetPositive.compare_gt	40
Coq.FSets.FSetPositive.compare_eq	40
Coq.FSets.FSetPositive.compare	40
Coq.FSets.FSetPositive.ct_cxe	40
Coq.FSets.FSetPositive.ct_xce	40	3.3.3.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.122134923935	103
Coq.FSets.FSetPositive.ct_lxl	40
Coq.FSets.FSetPositive.ct_gxg	40
Coq.FSets.FSetPositive.ct_xll	40
Coq.FSets.FSetPositive.ct_xgg	40
Coq.FSets.FSetPositive.ct_lex	40
Coq.FSets.FSetPositive.ct_compare_bool	40
Coq.FSets.FSetPositive.compare_x_Leaf	40	2.0.1.2	search with cache (only 1: intros [| l' o' r']; only 1: trivial; only 1: unfold compare_fun; only 1: trivial).	0.0581970214844	41
Coq.FSets.FSetPositive.compare_empty_x	40
Coq.FSets.FSetPositive.compare_x_empty	40
Coq.FSets.FSetPositive.ct_compare_fun	40
Coq.FSets.FSetPositive.lt_trans	40
Coq.FSets.FSetPositive.lt_not_eq	40
Coq.FSets.FSetPositive.add_spec	40
Coq.FSets.FSetPositive.add_1	40
Coq.FSets.FSetPositive.add_2	40	1.3.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: right; only 1: tauto).	0.035325050354	15
Coq.FSets.FSetPositive.add_3	40
Coq.FSets.FSetPositive.remove_spec	40
Coq.FSets.FSetPositive.remove_1	40
Coq.FSets.FSetPositive.remove_2	40	4.17.2.7	search with cache (only 1: intros EQ; only 1: intros y z H1 H2; only 1: rewrite remove_spec; only 1: intuition congruence).	32.8179490566	37484
Coq.FSets.FSetPositive.remove_3	40
Coq.FSets.FSetPositive.singleton_1	40
Coq.FSets.FSetPositive.singleton_2	40	1.0.12.2	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: tauto).	1.19668412209	3029
Coq.FSets.FSetPositive.union_spec	40
Coq.FSets.FSetPositive.union_1	40
Coq.FSets.FSetPositive.union_2	40
Coq.FSets.FSetPositive.union_3	40	0.6.0.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: tauto).	0.072958946228	38
Coq.FSets.FSetPositive.inter_spec	40
Coq.FSets.FSetPositive.inter_1	40
Coq.FSets.FSetPositive.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0331280231476	3
Coq.FSets.FSetPositive.inter_3	40	1.1.7	search with cache (only 1: intros s x y H; only 1: rewrite inter_spec; only 1: eauto).	0.203269958496	115
Coq.FSets.FSetPositive.diff_spec	40
Coq.FSets.FSetPositive.diff_1	40
Coq.FSets.FSetPositive.diff_2	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0456719398499	13
Coq.FSets.FSetPositive.diff_3	40	8.2.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.445681095123	287
Coq.FSets.FSetPositive.fold_1	40
Coq.FSets.FSetPositive.cardinal_1	40
Coq.FSets.FSetPositive.xfilter_spec	40
Coq.FSets.FSetPositive.filter_1	40
Coq.FSets.FSetPositive.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0376448631287	4
Coq.FSets.FSetPositive.filter_3	40	10.2.0.1	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	1.37314605713	1746
Coq.FSets.FSetPositive.xforall_spec	40
Coq.FSets.FSetPositive.for_all_1	40
Coq.FSets.FSetPositive.for_all_2	40
Coq.FSets.FSetPositive.xexists_spec	40
Coq.FSets.FSetPositive.exists_1	40
Coq.FSets.FSetPositive.exists_2	40
Coq.FSets.FSetPositive.partition_filter	40
Coq.FSets.FSetPositive.partition_1	40
Coq.FSets.FSetPositive.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0268359184265	3
Coq.FSets.FSetPositive.xelements_spec	40
Coq.FSets.FSetPositive.elements_1	40
Coq.FSets.FSetPositive.elements_2	40
Coq.FSets.FSetPositive.lt_rev_append	40
Coq.FSets.FSetPositive.elements_3	40
Coq.FSets.FSetPositive.elements_3w	40
Coq.FSets.FSetPositive.choose_1	40
Coq.FSets.FSetPositive.choose_2	40
Coq.FSets.FSetPositive.choose_empty	40
Coq.FSets.FSetPositive.choose_3'	40
Coq.FSets.FSetPositive.choose_3	40
Coq.FSets.FSetPositive.min_elt_1	40
Coq.FSets.FSetPositive.min_elt_3	40
Coq.FSets.FSetPositive.min_elt_2	40
Coq.FSets.FSetPositive.max_elt_1	40
Coq.FSets.FSetPositive.max_elt_3	40
Coq.FSets.FSetPositive.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct j; only 1: simpl; only 1: rewrite (IHi j~1); only 1: auto; only 1: simpl; only 1: rewrite (IHi j~0); only 1: auto; only 1: simpl; only 1: rewrite <- (IHi 1); only 1: auto; only 1: intros; only 1: destruct j; only 1: simpl; only 1: rewrite (IHi j~1); only 1: auto; only 1: simpl; only 1: rewrite (IHi j~0); only 1: auto; only 1: simpl; only 1: rewrite <- (IHi 1); only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	7.30351209641	20034
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	2.1	search with cache (only 1: intros; only 1: constructor).	0.0214381217957	67
Coq.FSets.FMapPositive.gempty	40	1.2.2.3	search with cache (only 1: induction i; only 1: auto; only 1: auto; only 1: auto).	0.0316779613495	116
Coq.FSets.FMapPositive.gss	40
Coq.FSets.FMapPositive.gleaf	40	0.0.0.0.0	search with cache (only 1: destruct i; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	0.0115389823914	5
Coq.FSets.FMapPositive.gso	40
Coq.FSets.FMapPositive.rleaf	40	1.1.0.0.0	search with cache (only 1: destruct i; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	0.0112030506134	7
Coq.FSets.FMapPositive.grs	40
Coq.FSets.FMapPositive.gro	40
Coq.FSets.FMapPositive.xelements_correct	40
Coq.FSets.FMapPositive.elements_correct	40
Coq.FSets.FMapPositive.xfind_left	40
Coq.FSets.FMapPositive.xelements_ii	40
Coq.FSets.FMapPositive.xelements_io	40
Coq.FSets.FMapPositive.xelements_oo	40
Coq.FSets.FMapPositive.xelements_oi	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	15.295361042	12951
Coq.FSets.FMapPositive.xelements_ih	40
Coq.FSets.FMapPositive.xelements_oh	40
Coq.FSets.FMapPositive.xelements_hi	40
Coq.FSets.FMapPositive.xelements_ho	40
Coq.FSets.FMapPositive.find_xfind_h	40	3.1.1.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: destruct i; only 1: auto; only 1: auto; only 1: auto; only 1: destruct i; only 1: auto; only 1: auto; only 1: auto).	0.628088951111	621
Coq.FSets.FMapPositive.xelements_complete	40
Coq.FSets.FMapPositive.elements_complete	40
Coq.FSets.FMapPositive.cardinal_1	40
Coq.FSets.FMapPositive.mem_find	40
Coq.FSets.FMapPositive.Empty_alt	40
Coq.FSets.FMapPositive.Empty_Node	40
Coq.FSets.FMapPositive.mem_1	40
Coq.FSets.FMapPositive.mem_2	40
Coq.FSets.FMapPositive.MapsTo_1	40	7.0.1	search with cache (only 1: red; only 1: intros; only 1: congruence).	0.0311670303345	66
Coq.FSets.FMapPositive.find_1	40	1	search with cache (only 1: auto).	0.00731801986694	2
Coq.FSets.FMapPositive.find_2	40	0	search with cache (only 1: auto).	0.00514483451843	1
Coq.FSets.FMapPositive.empty_1	40	2.67	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	35.70414114	104133
Coq.FSets.FMapPositive.is_empty_1	40
Coq.FSets.FMapPositive.is_empty_2	40
Coq.FSets.FMapPositive.add_1	40
Coq.FSets.FMapPositive.add_2	40
Coq.FSets.FMapPositive.add_3	40	0.0.5.12.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.307909011841	984
Coq.FSets.FMapPositive.remove_1	40
Coq.FSets.FMapPositive.remove_2	40
Coq.FSets.FMapPositive.remove_3	40
Coq.FSets.FMapPositive.elements_1	40
Coq.FSets.FMapPositive.elements_2	40
Coq.FSets.FMapPositive.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.xelements_sort	40
Coq.FSets.FMapPositive.elements_3	40
Coq.FSets.FMapPositive.elements_3w	40
Coq.FSets.FMapPositive.xgmapi	40
Coq.FSets.FMapPositive.gmapi	40
Coq.FSets.FMapPositive.mapi_1	40
Coq.FSets.FMapPositive.mapi_2	40
Coq.FSets.FMapPositive.map_1	40
Coq.FSets.FMapPositive.map_2	40	0.3.1.1.0.0.0.1.0.0.4.0.7	search with cache (only 1: unfold map; only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	33.9983549118	58553
Coq.FSets.FMapPositive.xgmap2_l	40
Coq.FSets.FMapPositive.xgmap2_r	40	1.0.1.0.0.0.0.1.0.0.0.0.0.1.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	32.1312050819	25877
Coq.FSets.FMapPositive.gmap2	40
Coq.FSets.FMapPositive.map2_1	40
Coq.FSets.FMapPositive.map2_2	40
Coq.FSets.FMapPositive.xfoldi_1	40
Coq.FSets.FMapPositive.fold_1	40
Coq.FSets.FMapPositive.equal_1	40
Coq.FSets.FMapPositive.equal_2	40
Coq.FSets.FMapPositive.gsspec	40
Coq.FSets.FMapPositive.gsident	40
Coq.FSets.FMapPositive.xmap2_lr	40
Coq.FSets.FMapPositive.map2_commut	40
Coq.FSets.FMapFacts.eq_bool_alt	40
Coq.FSets.FMapFacts.eq_option_alt	40
Coq.FSets.FMapFacts.MapsTo_fun	40
Coq.FSets.FMapFacts.In_iff	40
Coq.FSets.FMapFacts.MapsTo_iff	40
Coq.FSets.FMapFacts.mem_in_iff	40	4.6.1.5	search with cache (only 1: intros EQ; only 1: intros; only 1: symmetry; only 1: intuition).	4.36727309227	1542
Coq.FSets.FMapFacts.not_mem_in_iff	40	1.16.2.13.0.1.6	search with cache (only 1: intros EQ; only 1: intros; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).	13.2070930004	43319
Coq.FSets.FMapFacts.In_dec	40
Coq.FSets.FMapFacts.find_mapsto_iff	40	0.4.1.1	search with cache (only 1: intros; only 1: generalize (mem_in_iff m x); only 1: intros; only 1: intuition).	0.0569019317627	17
Coq.FSets.FMapFacts.not_find_in_iff	40
Coq.FSets.FMapFacts.in_find_iff	40
Coq.FSets.FMapFacts.equal_iff	40
Coq.FSets.FMapFacts.empty_mapsto_iff	40
Coq.FSets.FMapFacts.empty_in_iff	40
Coq.FSets.FMapFacts.is_empty_iff	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.127077102661	15
Coq.FSets.FMapFacts.add_mapsto_iff	40
Coq.FSets.FMapFacts.add_in_iff	40
Coq.FSets.FMapFacts.add_neq_mapsto_iff	40	0.1.8.0.0	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto with map).	0.634471893311	496
Coq.FSets.FMapFacts.add_neq_in_iff	40	3.3.0.0.1.0.3.2.2.0	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: auto with map).	6.19014310837	8603
Coq.FSets.FMapFacts.remove_mapsto_iff	40
Coq.FSets.FMapFacts.remove_in_iff	40
Coq.FSets.FMapFacts.remove_neq_mapsto_iff	40	0.2.1.2	search with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.109133958817	50
Coq.FSets.FMapFacts.remove_neq_in_iff	40
Coq.FSets.FMapFacts.elements_mapsto_iff	40
Coq.FSets.FMapFacts.elements_in_iff	40
Coq.FSets.FMapFacts.map_mapsto_iff	40
Coq.FSets.FMapFacts.map_in_iff	40
Coq.FSets.FMapFacts.mapi_in_iff	40
Coq.FSets.FMapFacts.mapi_inv	40
Coq.FSets.FMapFacts.mapi_1bis	40
Coq.FSets.FMapFacts.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.mem_find_b	40
Coq.FSets.FMapFacts.mem_b	40
Coq.FSets.FMapFacts.find_o	40
Coq.FSets.FMapFacts.empty_o	40	0.1.12.0.1.0.4.1.0	search with cache (only 1: intro e; only 1: rewrite eq_option_alt; only 1: intros EQ; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: elim H; only 1: discriminate).	5.86133408546	10823
Coq.FSets.FMapFacts.empty_a	40
Coq.FSets.FMapFacts.add_eq_o	40	0.0.2	search with cache (only 1: intros; only 1: rewrite <- find_mapsto_iff; only 1: auto with map).	0.0310778617859	5
Coq.FSets.FMapFacts.add_neq_o	40	0.0.0.0.2.2.1.2.3	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).	1.2473180294	868
Coq.FSets.FMapFacts.add_o	40	0.0.0.0.0.0.1.15.1	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite <- find_mapsto_iff; only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	9.86394906044	8908
Coq.FSets.FMapFacts.add_eq_b	40
Coq.FSets.FMapFacts.add_neq_b	40
Coq.FSets.FMapFacts.add_b	40
Coq.FSets.FMapFacts.remove_eq_o	40
Coq.FSets.FMapFacts.remove_neq_o	40	0.1.0.1.3	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0688610076904	12
Coq.FSets.FMapFacts.remove_o	40	1.1.0.3	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	0.0802500247955	19
Coq.FSets.FMapFacts.remove_eq_b	40
Coq.FSets.FMapFacts.remove_neq_b	40
Coq.FSets.FMapFacts.remove_b	40
Coq.FSets.FMapFacts.map_o	40
Coq.FSets.FMapFacts.map_b	40
Coq.FSets.FMapFacts.mapi_b	40
Coq.FSets.FMapFacts.mapi_o	40
Coq.FSets.FMapFacts.map2_1bis	40
Coq.FSets.FMapFacts.elements_o	40
Coq.FSets.FMapFacts.elements_b	40
Coq.FSets.FMapFacts.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.Equal_Equiv	40
Coq.FSets.FMapFacts.Equiv_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.Equal_refl	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: intros EQ; only 1: rewrite eq_option_alt; only 1: intro e; only 1: split; only 1: auto; only 1: auto).	0.048152923584	8
Coq.FSets.FMapFacts.Equal_sym	40	1.2.1	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.0715839862823	20
Coq.FSets.FMapFacts.Equal_trans	40	1.10.0.4	search with cache (only 1: intros; only 1: intros EQ; only 1: rewrite H; only 1: auto with map).	8.04529285431	5278
Coq.FSets.FMapFacts.Equal_ST	40	0.3	search with cache (only 1: intros; only 1: auto with map).	0.0281391143799	5
Coq.FSets.FMapFacts.In_m_Proper	40
Coq.FSets.FMapFacts.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.Empty_m_Proper	40
Coq.FSets.FMapFacts.is_empty_m_Proper	40
Coq.FSets.FMapFacts.mem_m_Proper	40
Coq.FSets.FMapFacts.find_m_Proper	40	0.0.2.0.0.0	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	0.20183801651	22
Coq.FSets.FMapFacts.add_m_Proper	40
Coq.FSets.FMapFacts.remove_m_Proper	40
Coq.FSets.FMapFacts.map_m_Proper	40
Coq.FSets.FMapFacts.eqk_equiv	40	15.0.4	search with cache (only 1: compute; only 1: dintuition; only 1: eauto with map).	0.969205856323	608
Coq.FSets.FMapFacts.eqke_equiv	40
Coq.FSets.FMapFacts.InA_eqke_eqk	40
Coq.FSets.FMapFacts.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.findA_rev	40
Coq.FSets.FMapFacts.elements_Empty	40
Coq.FSets.FMapFacts.elements_empty	40
Coq.FSets.FMapFacts.of_list_1	40
Coq.FSets.FMapFacts.of_list_1b	40
Coq.FSets.FMapFacts.of_list_2	40
Coq.FSets.FMapFacts.of_list_3	40	3.2.1.4.7.0.0.5.0.9	search with cache (only 1: red; only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, elements_mapsto_iff; only 1: rewrite <- find_mapsto_iff, elements_mapsto_iff; only 1: rewrite <- elements_mapsto_iff, of_list_1; only 1: dintuition; only 1: unfold eq_key; only 1: apply elements_3w).	36.8609359264	32256
Coq.FSets.FMapFacts.fold_spec_right	40
Coq.FSets.FMapFacts.fold_rec	40
Coq.FSets.FMapFacts.fold_rec_bis	40
Coq.FSets.FMapFacts.fold_rec_nodep	40	1.0.4.0.1.0.4	search with cache (only 1: intros s k; only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: eauto).	0.871329069138	795
Coq.FSets.FMapFacts.fold_rec_weak	40
Coq.FSets.FMapFacts.fold_rel	40
Coq.FSets.FMapFacts.map_induction	40
Coq.FSets.FMapFacts.map_induction_bis	40
Coq.FSets.FMapFacts.fold_identity	40
Coq.FSets.FMapFacts.fold_init	40
Coq.FSets.FMapFacts.fold_Empty	40
Coq.FSets.FMapFacts.fold_commutes	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Equal2	40
Coq.FSets.FMapFacts.fold_Add	40
Coq.FSets.FMapFacts.fold_add	40
Coq.FSets.FMapFacts.cardinal_fold	40
Coq.FSets.FMapFacts.cardinal_Empty	40
Coq.FSets.FMapFacts.Equal_cardinal	40
Coq.FSets.FMapFacts.cardinal_1	40
Coq.FSets.FMapFacts.cardinal_2	40
Coq.FSets.FMapFacts.cardinal_inv_1	40
Coq.FSets.FMapFacts.cardinal_inv_2	40
Coq.FSets.FMapFacts.cardinal_inv_2b	40
Coq.FSets.FMapFacts.filter_iff	40
Coq.FSets.FMapFacts.for_all_iff	40
Coq.FSets.FMapFacts.exists_iff	40
Coq.FSets.FMapFacts.Disjoint_alt	40	5.0	search with cache (only 1: intros m1 m2; only 1: firstorder).	0.12477517128	44
Coq.FSets.FMapFacts.partition_iff_1	40
Coq.FSets.FMapFacts.partition_iff_2	40
Coq.FSets.FMapFacts.partition_Partition	40
Coq.FSets.FMapFacts.Partition_In	40
Coq.FSets.FMapFacts.Disjoint_sym	40	2.11.5	search with cache (only 1: unfold Disjoint; only 1: intros m1 m2; only 1: firstorder).	0.937783002853	1299
Coq.FSets.FMapFacts.Partition_sym	40	16	search with cache (only 1: firstorder).	0.872656822205	750
Coq.FSets.FMapFacts.Partition_Empty	40
Coq.FSets.FMapFacts.Partition_Add	40
Coq.FSets.FMapFacts.Partition_fold	40
Coq.FSets.FMapFacts.Partition_cardinal	40
Coq.FSets.FMapFacts.Partition_partition	40
Coq.FSets.FMapFacts.update_mapsto_iff	40
Coq.FSets.FMapFacts.update_dec	40
Coq.FSets.FMapFacts.update_in_iff	40
Coq.FSets.FMapFacts.diff_mapsto_iff	40
Coq.FSets.FMapFacts.diff_in_iff	40
Coq.FSets.FMapFacts.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.restrict_in_iff	40
Coq.FSets.FMapFacts.cardinal_m_Proper	40	2.0.0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto with map).	0.425791978836	294
Coq.FSets.FMapFacts.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.Partition_m_Proper	40
Coq.FSets.FMapFacts.update_m_Proper	40
Coq.FSets.FMapFacts.restrict_m_Proper	40
Coq.FSets.FMapFacts.diff_m_Proper	40
Coq.FSets.FMapFacts.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.gtb_1	40
Coq.FSets.FMapFacts.leb_1	40
Coq.FSets.FMapFacts.gtb_compat	40
Coq.FSets.FMapFacts.leb_compat	40
Coq.FSets.FMapFacts.elements_split	40
Coq.FSets.FMapFacts.elements_Add	40
Coq.FSets.FMapFacts.elements_Add_Above	40
Coq.FSets.FMapFacts.elements_Add_Below	40
Coq.FSets.FMapFacts.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.max_elt_Above	40
Coq.FSets.FMapFacts.max_elt_MapsTo	40
Coq.FSets.FMapFacts.max_elt_Empty	40
Coq.FSets.FMapFacts.min_elt_Below	40
Coq.FSets.FMapFacts.min_elt_MapsTo	40
Coq.FSets.FMapFacts.min_elt_Empty	40	0.0.0.0.21.0.0	search with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_Empty; only 1: destruct (elements m); only 1: auto; only 1: destruct p; only 1: discriminate).	21.4752891064	25901
Coq.FSets.FMapFacts.map_induction_max	40
Coq.FSets.FMapFacts.map_induction_min	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Add_Above	40
Coq.FSets.FMapFacts.fold_Add_Below	40
Coq.FSets.FMapWeakList.empty_1	40	20.0.45	search with cache (only 1: compute; only 1: intros; only 1: invlist InA).	1.60106706619	3574
Coq.FSets.FMapWeakList.empty_NoDup	40	17	search with cache (only 1: left).	0.0482549667358	126
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40	0.0.6.4.24.5.8	search with cache (only 1: intros p l inlist; only 1: intuition; only 1: destruct H; only 1: intuition; only 1: induction H; only 1: intuition; only 1: intuition).	8.92081785202	26106
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_eq	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.add_3'	40
Coq.FSets.FMapWeakList.add_NoDup	40
Coq.FSets.FMapWeakList.add_eq	40
Coq.FSets.FMapWeakList.add_not_eq	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40
Coq.FSets.FMapWeakList.remove_3'	40
Coq.FSets.FMapWeakList.remove_NoDup	40
Coq.FSets.FMapWeakList.elements_1	40	2.0	search with cache (only 1: intros; only 1: auto).	0.0156359672546	4
Coq.FSets.FMapWeakList.elements_2	40	0.0.0	search with cache (only 1: intros m x; only 1: intros e' eqfind; only 1: auto).	0.0174407958984	3
Coq.FSets.FMapWeakList.elements_3w	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0160870552063	3
Coq.FSets.FMapWeakList.fold_1	40
Coq.FSets.FMapWeakList.submap_1	40
Coq.FSets.FMapWeakList.submap_2	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.map_NoDup	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.mapi_NoDup	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.3	search with cache (only 1: induction m; only 1: constructor; only 1: intros; only 1: inversion_clear Hm; only 1: destruct a as (x', e'); only 1: simpl; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	36.9484949112	18323
Coq.FSets.FMapWeakList.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.combine_NoDup	40
Coq.FSets.FMapWeakList.combine_l_1	40
Coq.FSets.FMapWeakList.combine_r_1	40
Coq.FSets.FMapWeakList.combine_1	40
Coq.FSets.FMapWeakList.map2_NoDup	40
Coq.FSets.FMapWeakList.map2_0	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FMapWeakList.MapsTo_1	40
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.empty_1	40	1.8.35	search with cache (only 1: compute; only 1: intros a e; only 1: inversion_clear 1).	0.723255157471	1802
Coq.FSets.FMapWeakList.is_empty_1	40	9.0.14.1.39.0	search with cache (only 1: intros m; only 1: compute; only 1: case m; only 1: inversion_clear 1; only 1: auto; only 1: eauto).	9.24476504326	26631
Coq.FSets.FMapWeakList.is_empty_2	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.elements_1	40	1.3.0	search with cache (only 1: intros m; only 1: intros; only 1: auto).	0.0216069221497	7
Coq.FSets.FMapWeakList.elements_2	40	0.2.0	search with cache (only 1: intros m; only 1: intros; only 1: intuition congruence).	0.0221600532532	5
Coq.FSets.FMapWeakList.elements_3w	40	1.11	search with cache (only 1: induction m; only 1: auto).	0.0782358646393	111
Coq.FSets.FMapWeakList.cardinal_1	40	2.1	search with cache (only 1: intros m; only 1: auto).	0.0176830291748	5
Coq.FSets.FMapWeakList.fold_1	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FSetToFiniteSet.In_In	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0204138755798	5
Coq.FSets.FSetToFiniteSet.Subset_Included	40	0.2	search with cache (only 1: compute; only 1: auto with extcore).	0.0198152065277	17
Coq.FSets.FSetToFiniteSet.Equal_Same_set	40	21	search with cache (only 1: firstorder).	7.15566802025	6831
Coq.FSets.FSetToFiniteSet.empty_Empty_Set	40	46.3.50	search with cache (only 1: simpl_relation; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition Dec.fsetdec).	2.63343286514	12205
Coq.FSets.FSetToFiniteSet.Empty_Empty_set	40	1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	0.0354471206665	10
Coq.FSets.FSetToFiniteSet.singleton_Singleton	40	0.1.1.5.1.0.10.0	search with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1; only 1: Dec.fsetdec).	1.61867904663	1280
Coq.FSets.FSetToFiniteSet.union_Union	40
Coq.FSets.FSetToFiniteSet.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	0.810348033905	544
Coq.FSets.FSetToFiniteSet.add_Add	40	0.0.0.1.0.3.1.0.3.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 2; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto; only 1: intuition).	32.0534739494	26415
Coq.FSets.FSetToFiniteSet.Add_Add	40
Coq.FSets.FSetToFiniteSet.remove_Subtract	40	0.0.0.0.0.2.3.2.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto with sets; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	16.4771611691	5407
Coq.FSets.FSetToFiniteSet.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.mem_eq	40	5.0	search with cache (only 1: intros; only 1: Dec.fsetdec).	0.614735126495	151
Coq.FSets.FSetEqProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.subset_mem_2	40	4	search with cache (only 1: eauto with set).	0.478958129883	14
Coq.FSets.FSetEqProperties.empty_mem	40
Coq.FSets.FSetEqProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.choose_mem_1	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0424089431763	2
Coq.FSets.FSetEqProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0246181488037	1
Coq.FSets.FSetEqProperties.add_mem_1	40	7	search with cache (only 1: auto with set).	0.0413649082184	8
Coq.FSets.FSetEqProperties.add_mem_2	40
Coq.FSets.FSetEqProperties.remove_mem_1	40	0.8	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.596209049225	10
Coq.FSets.FSetEqProperties.remove_mem_2	40
Coq.FSets.FSetEqProperties.singleton_equal_add	40	3.1	search with cache (only 1: rewrite (singleton_equal_add x); only 1: auto with set).	0.0909221172333	14
Coq.FSets.FSetEqProperties.union_mem	40
Coq.FSets.FSetEqProperties.inter_mem	40
Coq.FSets.FSetEqProperties.diff_mem	40
Coq.FSets.FSetEqProperties.mem_3	40	0.0.5	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.0526309013367	8
Coq.FSets.FSetEqProperties.mem_4	40	0.0.1.9.2	search with cache (only 1: intros; only 1: generalize (FM.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.878643989563	455
Coq.FSets.FSetEqProperties.equal_refl	40	1	search with cache (only 1: auto with set).	0.0257620811462	11
Coq.FSets.FSetEqProperties.equal_sym	40	1.3.0.1.3.0.0.1	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.898104190826	552
Coq.FSets.FSetEqProperties.equal_trans	40	8	search with cache (only 1: eauto with set).	0.221562147141	37
Coq.FSets.FSetEqProperties.equal_equal	40	0.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0304510593414	4
Coq.FSets.FSetEqProperties.equal_cardinal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0288579463959	3
Coq.FSets.FSetEqProperties.subset_refl	40	2	search with cache (only 1: auto with set).	0.028480052948	12
Coq.FSets.FSetEqProperties.subset_antisym	40	3.0	search with cache (only 1: intros; only 1: auto with set).	0.0350570678711	11
Coq.FSets.FSetEqProperties.subset_trans	40	10	search with cache (only 1: eauto with set).	0.265097856522	73
Coq.FSets.FSetEqProperties.subset_equal	40	3.2.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0345458984375	8
Coq.FSets.FSetEqProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.add_mem_3	40	0.3	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.0655581951141	5
Coq.FSets.FSetEqProperties.add_equal	40	0	search with cache (only 1: auto with set).	0.0237319469452	1
Coq.FSets.FSetEqProperties.remove_mem_3	40
Coq.FSets.FSetEqProperties.remove_equal	40
Coq.FSets.FSetEqProperties.add_remove	40	1.1.0.18	search with cache (only 1: generalize (FM.mem_iff s x), (FM.mem_iff s' y); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	20.6068389416	1138
Coq.FSets.FSetEqProperties.remove_add	40
Coq.FSets.FSetEqProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.0235860347748	1
Coq.FSets.FSetEqProperties.singleton_mem_2	40	2.1.3	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0626480579376	9
Coq.FSets.FSetEqProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.union_sym	40	1	search with cache (only 1: auto with set).	0.0413801670074	2
Coq.FSets.FSetEqProperties.union_subset_equal	40	7.0	search with cache (only 1: intros; only 1: auto with set).	0.0414390563965	12
Coq.FSets.FSetEqProperties.union_equal_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0283019542694	2
Coq.FSets.FSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.026535987854	1
Coq.FSets.FSetEqProperties.union_assoc	40	3	search with cache (only 1: auto with set).	0.046884059906	4
Coq.FSets.FSetEqProperties.add_union_singleton	40	4	search with cache (only 1: intuition).	0.0599219799042	5
Coq.FSets.FSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0242328643799	1
Coq.FSets.FSetEqProperties.union_subset_1	40	4	search with cache (only 1: auto with set).	0.0430951118469	5
Coq.FSets.FSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0234389305115	1
Coq.FSets.FSetEqProperties.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.126159906387	2
Coq.FSets.FSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0244040489197	1
Coq.FSets.FSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0280151367188	1
Coq.FSets.FSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0255959033966	1
Coq.FSets.FSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0254900455475	1
Coq.FSets.FSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0237498283386	1
Coq.FSets.FSetEqProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.023766040802	1
Coq.FSets.FSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0236959457397	1
Coq.FSets.FSetEqProperties.inter_add_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0272929668427	2
Coq.FSets.FSetEqProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.inter_subset_1	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0682499408722	2
Coq.FSets.FSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0218691825867	1
Coq.FSets.FSetEqProperties.inter_subset_3	40	2.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0736060142517	5
Coq.FSets.FSetEqProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.0218780040741	1
Coq.FSets.FSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0260081291199	1
Coq.FSets.FSetEqProperties.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0221259593964	1
Coq.FSets.FSetEqProperties.diff_inter_empty	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.182414054871	2
Coq.FSets.FSetEqProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0220880508423	1
Coq.FSets.FSetEqProperties.set_rec	40
Coq.FSets.FSetEqProperties.exclusive_set	40
Coq.FSets.FSetEqProperties.fold_empty	40	9.0	search with cache (only 1: apply fold_1b; only 1: auto with *).	0.0837459564209	57
Coq.FSets.FSetEqProperties.fold_equal	40	3.0.0.0.11.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).	6.64778804779	4882
Coq.FSets.FSetEqProperties.fold_add	40	2.0.0.3.3.3.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	1.44780421257	1278
Coq.FSets.FSetEqProperties.add_fold	40
Coq.FSets.FSetEqProperties.remove_fold_1	40	1.2.1.1.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.90106010437	657
Coq.FSets.FSetEqProperties.remove_fold_2	40
Coq.FSets.FSetEqProperties.fold_union	40
Coq.FSets.FSetEqProperties.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.0239660739899	1
Coq.FSets.FSetEqProperties.add_cardinal_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0427839756012	8
Coq.FSets.FSetEqProperties.remove_cardinal_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0427770614624	8
Coq.FSets.FSetEqProperties.remove_cardinal_2	40	4.0.0.0.10.8.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	1.37884402275	1884
Coq.FSets.FSetEqProperties.union_cardinal	40	0.0.0.0.4.0.0.1.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: intros; only 1: auto).	0.487437009811	343
Coq.FSets.FSetEqProperties.subset_cardinal	40	1	search with cache (only 1: auto with set fset).	0.0601699352264	27
Coq.FSets.FSetEqProperties.Comp'	40	0.7.33.14	search with cache (only 1: simpl_relation; only 1: symmetry; only 1: rewrite H; only 1: auto).	4.22187399864	2943
Coq.FSets.FSetEqProperties.filter_mem	40
Coq.FSets.FSetEqProperties.for_all_filter	40
Coq.FSets.FSetEqProperties.exists_filter	40
Coq.FSets.FSetEqProperties.partition_filter_1	40	21	search with cache (only 1: auto with set).	16.3207781315	17462
Coq.FSets.FSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0292990207672	1
Coq.FSets.FSetEqProperties.filter_add_1	40
Coq.FSets.FSetEqProperties.filter_add_2	40
Coq.FSets.FSetEqProperties.add_filter_1	40
Coq.FSets.FSetEqProperties.add_filter_2	40
Coq.FSets.FSetEqProperties.union_filter	40
Coq.FSets.FSetEqProperties.filter_union	40	0.0.0.1.6.0.0.0.1	search with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: tauto; only 1: tauto; only 1: tauto).	6.74452209473	1385
Coq.FSets.FSetEqProperties.for_all_mem_1	40	22.2.3.5.0.4	search with cache (only 1: intro H; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	19.7116160393	29394
Coq.FSets.FSetEqProperties.for_all_mem_2	40	2.1.4.5.5.10	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: red; only 1: auto).	5.84335494041	7660
Coq.FSets.FSetEqProperties.for_all_mem_3	40
Coq.FSets.FSetEqProperties.for_all_mem_4	40
Coq.FSets.FSetEqProperties.for_all_exists	40
Coq.FSets.FSetEqProperties.Comp'	40	0.0.0.0	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros; only 1: f_equal; only 1: auto).	0.0274150371552	4
Coq.FSets.FSetEqProperties.exists_mem_1	40
Coq.FSets.FSetEqProperties.exists_mem_2	40
Coq.FSets.FSetEqProperties.exists_mem_3	40
Coq.FSets.FSetEqProperties.exists_mem_4	40
Coq.FSets.FSetEqProperties.sum_plus	40
Coq.FSets.FSetEqProperties.sum_filter	40
Coq.FSets.FSetEqProperties.fold_compat	40
Coq.FSets.FSetEqProperties.sum_compat	40
Coq.FSets.FSetBridge.empty	40
Coq.FSets.FSetBridge.is_empty	40
Coq.FSets.FSetBridge.mem	40
Coq.FSets.FSetBridge.add	40
Coq.FSets.FSetBridge.singleton	40
Coq.FSets.FSetBridge.remove	40
Coq.FSets.FSetBridge.union	40
Coq.FSets.FSetBridge.inter	40
Coq.FSets.FSetBridge.diff	40
Coq.FSets.FSetBridge.equal	40
Coq.FSets.FSetBridge.subset	40
Coq.FSets.FSetBridge.elements	40	116.45	search with cache (only 1: compute; only 1: eauto with set).	11.8132009506	85980
Coq.FSets.FSetBridge.fold	40	116.44	search with cache (only 1: compute; only 1: eauto with set).	10.0890200138	66365
Coq.FSets.FSetBridge.cardinal	40	115.44	search with cache (only 1: compute; only 1: eauto with set).	14.7650170326	105246
Coq.FSets.FSetBridge.compat_P_aux	40
Coq.FSets.FSetBridge.filter	40
Coq.FSets.FSetBridge.for_all	40
Coq.FSets.FSetBridge.exists_	40
Coq.FSets.FSetBridge.partition	40
Coq.FSets.FSetBridge.choose_aux	40
Coq.FSets.FSetBridge.choose	40
Coq.FSets.FSetBridge.choose_ok1	40
Coq.FSets.FSetBridge.choose_ok2	40	0.0.0.0.0.14.2.0.0.0.0.3	search with cache (only 1: intros; only 1: unfold choose; only 1: split; only 1: intros; only 1: destruct (choose_aux s) as [(y, Hy)| H']; only 1: congruence; only 1: eauto; only 1: intros; only 1: destruct H; only 1: destruct (choose_aux s) as [(y, Hy)| H']; only 1: congruence; only 1: congruence).	7.30814409256	12516
Coq.FSets.FSetBridge.choose_equal	40
Coq.FSets.FSetBridge.min_elt	40
Coq.FSets.FSetBridge.max_elt	40
Coq.FSets.FSetBridge.empty_1	40
Coq.FSets.FSetBridge.is_empty_1	40
Coq.FSets.FSetBridge.is_empty_2	40
Coq.FSets.FSetBridge.mem_1	40
Coq.FSets.FSetBridge.mem_2	40
Coq.FSets.FSetBridge.equal_1	40
Coq.FSets.FSetBridge.equal_2	40
Coq.FSets.FSetBridge.subset_1	40
Coq.FSets.FSetBridge.subset_2	40
Coq.FSets.FSetBridge.choose_1	40
Coq.FSets.FSetBridge.choose_2	40	1.4.0.0.0.0.0	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.169033050537	184
Coq.FSets.FSetBridge.choose_3	40
Coq.FSets.FSetBridge.elements_1	40
Coq.FSets.FSetBridge.elements_2	40
Coq.FSets.FSetBridge.elements_3	40	0.0.0.66	search with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	5.21861100197	16079
Coq.FSets.FSetBridge.elements_3w	40	11.0.0.0	search with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: intuition).	0.473238945007	564
Coq.FSets.FSetBridge.min_elt_1	40
Coq.FSets.FSetBridge.min_elt_2	40
Coq.FSets.FSetBridge.min_elt_3	40	0.5.0.0.0.1.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	15.9187970161	364
Coq.FSets.FSetBridge.max_elt_1	40
Coq.FSets.FSetBridge.max_elt_2	40	0.0.0.0.0.1.0.0.0.1.1.0	search with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	20.0526990891	1001
Coq.FSets.FSetBridge.max_elt_3	40	0.0.0.0.1.2.0	search with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.360209941864	19
Coq.FSets.FSetBridge.add_1	40
Coq.FSets.FSetBridge.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0237250328064	5
Coq.FSets.FSetBridge.add_3	40
Coq.FSets.FSetBridge.remove_1	40
Coq.FSets.FSetBridge.remove_2	40
Coq.FSets.FSetBridge.remove_3	40
Coq.FSets.FSetBridge.singleton_1	40
Coq.FSets.FSetBridge.singleton_2	40	0.14.17.3	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	2.34501791	8020
Coq.FSets.FSetBridge.union_1	40
Coq.FSets.FSetBridge.union_2	40	0.5.4.1	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	1.29360198975	571
Coq.FSets.FSetBridge.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0208380222321	4
Coq.FSets.FSetBridge.inter_1	40
Coq.FSets.FSetBridge.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0215888023376	4
Coq.FSets.FSetBridge.inter_3	40	0.4.5.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.310178995132	293
Coq.FSets.FSetBridge.diff_1	40
Coq.FSets.FSetBridge.diff_2	40	0.0.1.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0220670700073	5
Coq.FSets.FSetBridge.diff_3	40	0.7.6.1	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	1.68261313438	1246
Coq.FSets.FSetBridge.cardinal_1	40
Coq.FSets.FSetBridge.fold_1	40
Coq.FSets.FSetBridge.f_dec	40
Coq.FSets.FSetBridge.compat_P_aux	40	0.0.0.51.1	search with cache (only 1: intros; only 1: compute; only 1: intros; only 1: rewrite <- (H _ _ H0); only 1: auto).	4.10364603996	5538
Coq.FSets.FSetBridge.filter_1	40
Coq.FSets.FSetBridge.filter_2	40	0.0.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.292735099792	6
Coq.FSets.FSetBridge.filter_3	40	0.0.0.2.1.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	1.06680297852	59
Coq.FSets.FSetBridge.for_all_1	40
Coq.FSets.FSetBridge.for_all_2	40	2.0.0.2.3.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.332073926926	208
Coq.FSets.FSetBridge.exists_1	40
Coq.FSets.FSetBridge.exists_2	40	0.0.0.2.5.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.56325507164	392
Coq.FSets.FSetBridge.partition_1	40
Coq.FSets.FSetBridge.partition_2	40
Coq.FSets.FSetCompat.lt_not_eq	40
Coq.FSets.FSetCompat.compare	40
Coq.FSets.FSetCompat.In_compat	40	2.0.38.0	search with cache (only 1: simpl_relation; only 1: rewrite H; only 1: red; only 1: tauto).	9.25488996506	22864
Coq.FSets.FSetCompat.mem_spec	40	1.27	search with cache (only 1: compute in *; only 1: intuition).	0.458635091782	1566
Coq.FSets.FSetCompat.equal_spec	40
Coq.FSets.FSetCompat.subset_spec	40
Coq.FSets.FSetCompat.is_empty_spec	40
Coq.FSets.FSetCompat.add_spec	40
Coq.FSets.FSetCompat.remove_spec	40
Coq.FSets.FSetCompat.singleton_spec	40
Coq.FSets.FSetCompat.elements_spec1	40	55.2.1	search with cache (only 1: symmetry; only 1: intuition; only 1: simpl_relation).	18.2108800411	108104
Coq.FSets.FSetCompat.for_all_spec	40
Coq.FSets.FSetCompat.exists_spec	40
Coq.FSets.FSetCompat.lt_strorder	40
Coq.FSets.FSetCompat.lt_compat	40
Coq.FSets.FSetCompat.compare_spec	40
Coq.FSets.FSetProperties.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.126436948776	5
Coq.FSets.FSetProperties.Add_Equal	40
Coq.FSets.FSetProperties.equal_refl	40	2.14	search with cache (only 1: unfold Equal; only 1: fsetdec).	0.463494062424	258
Coq.FSets.FSetProperties.equal_sym	40	4	search with cache (only 1: fsetdec).	0.0673999786377	13
Coq.FSets.FSetProperties.equal_trans	40	2	search with cache (only 1: fsetdec).	0.0716290473938	11
Coq.FSets.FSetProperties.subset_refl	40	18	search with cache (only 1: simpl_relation).	0.587033033371	356
Coq.FSets.FSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0561618804932	1
Coq.FSets.FSetProperties.subset_antisym	40	1	search with cache (only 1: fsetdec).	0.0558400154114	2
Coq.FSets.FSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0472011566162	1
Coq.FSets.FSetProperties.subset_empty	40	2.4.0.11	search with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: rewrite InA_alt; only 1: destruct 1; only 1: fsetdec).	1.01011610031	633
Coq.FSets.FSetProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0720620155334	1
Coq.FSets.FSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0631258487701	1
Coq.FSets.FSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0818960666656	1
Coq.FSets.FSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0533559322357	1
Coq.FSets.FSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.0509541034698	1
Coq.FSets.FSetProperties.double_inclusion	40
Coq.FSets.FSetProperties.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0653541088104	1
Coq.FSets.FSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0544691085815	1
Coq.FSets.FSetProperties.add_equal	40	5	search with cache (only 1: fsetdec).	0.0901560783386	6
Coq.FSets.FSetProperties.add_add	40	1.1.1.1.3	search with cache (only 1: split; only 1: do 2 rewrite add_iff; only 1: intuition; only 1: do 2 rewrite add_iff; only 1: intuition).	7.10801196098	1643
Coq.FSets.FSetProperties.remove_equal	40	2.3.3	search with cache (only 1: intro H; only 1: intuition; only 1: fsetdec).	0.159296035767	36
Coq.FSets.FSetProperties.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.133960008621	1
Coq.FSets.FSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.139971971512	1
Coq.FSets.FSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.144158840179	1
Coq.FSets.FSetProperties.singleton_equal_add	40	5	search with cache (only 1: fsetdec).	0.120619058609	12
Coq.FSets.FSetProperties.remove_singleton_empty	40	2	search with cache (only 1: fsetdec).	0.284451007843	3
Coq.FSets.FSetProperties.union_sym	40	0.0.0.0.2	search with cache (only 1: split; only 1: do 2 rewrite union_iff; only 1: intuition; only 1: do 2 rewrite union_iff; only 1: intuition).	0.096969127655	7
Coq.FSets.FSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0794050693512	1
Coq.FSets.FSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.11378288269	1
Coq.FSets.FSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.110955953598	1
Coq.FSets.FSetProperties.union_assoc	40	2	search with cache (only 1: fsetdec).	0.169482946396	3
Coq.FSets.FSetProperties.add_union_singleton	40	2.4.0	search with cache (only 1: generalize (mem_iff s x); only 1: destruct 1; only 1: fsetdec).	0.540387153625	181
Coq.FSets.FSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.175137996674	1
Coq.FSets.FSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.310661077499	1
Coq.FSets.FSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.274578094482	1
Coq.FSets.FSetProperties.union_subset_1	40	2	search with cache (only 1: fsetdec).	0.0419299602509	3
Coq.FSets.FSetProperties.union_subset_2	40	2	search with cache (only 1: fsetdec).	0.0423328876495	3
Coq.FSets.FSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0635178089142	1
Coq.FSets.FSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0691840648651	1
Coq.FSets.FSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0656790733337	1
Coq.FSets.FSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0795950889587	1
Coq.FSets.FSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0769140720367	1
Coq.FSets.FSetProperties.not_in_union	40	0	search with cache (only 1: fsetdec).	0.0637400150299	1
Coq.FSets.FSetProperties.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0881190299988	1
Coq.FSets.FSetProperties.inter_subset_equal	40	1	search with cache (only 1: fsetdec).	0.0771729946136	2
Coq.FSets.FSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.108581066132	1
Coq.FSets.FSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.103345870972	1
Coq.FSets.FSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.14618396759	1
Coq.FSets.FSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.195865869522	1
Coq.FSets.FSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.206600904465	1
Coq.FSets.FSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.17977809906	1
Coq.FSets.FSetProperties.inter_add_2	40	0.0	search with cache (only 1: intros; only 1: fsetdec).	0.146078824997	2
Coq.FSets.FSetProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0574581623077	1
Coq.FSets.FSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0556948184967	1
Coq.FSets.FSetProperties.inter_subset_1	40	1	search with cache (only 1: fsetdec).	0.0477969646454	2
Coq.FSets.FSetProperties.inter_subset_2	40	1	search with cache (only 1: fsetdec).	0.0432639122009	2
Coq.FSets.FSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0600221157074	1
Coq.FSets.FSetProperties.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0675210952759	1
Coq.FSets.FSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0804030895233	1
Coq.FSets.FSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0507519245148	1
Coq.FSets.FSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.1144490242	1
Coq.FSets.FSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.115836143494	1
Coq.FSets.FSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.173779964447	1
Coq.FSets.FSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.14608001709	1
Coq.FSets.FSetProperties.Add_add	40	2.0	search with cache (only 1: red; only 1: fsetdec).	0.369540929794	55
Coq.FSets.FSetProperties.Add_remove	40	0.0.7.6	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: fsetdec).	0.753288030624	281
Coq.FSets.FSetProperties.union_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.234611988068	3
Coq.FSets.FSetProperties.inter_Add	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.383807182312	5
Coq.FSets.FSetProperties.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.329344034195	2
Coq.FSets.FSetProperties.inter_Add_2	40
Coq.FSets.FSetProperties.elements_Empty	40
Coq.FSets.FSetProperties.elements_empty	40
Coq.FSets.FSetProperties.of_list_1	40
Coq.FSets.FSetProperties.of_list_2	40
Coq.FSets.FSetProperties.of_list_3	40
Coq.FSets.FSetProperties.fold_spec_right	40
Coq.FSets.FSetProperties.fold_rec	40
Coq.FSets.FSetProperties.fold_rec_bis	40
Coq.FSets.FSetProperties.fold_rec_nodep	40	1.0.0.4.0.2.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with *; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.95596408844	861
Coq.FSets.FSetProperties.fold_rec_weak	40
Coq.FSets.FSetProperties.fold_rel	40
Coq.FSets.FSetProperties.set_induction	40
Coq.FSets.FSetProperties.set_induction_bis	40
Coq.FSets.FSetProperties.fold_identity	40	2.2.1.15.5.5.0	search with cache (only 1: intro x; only 1: apply fold_rec_bis; only 1: fsetdec; only 1: unfold Equal; only 1: intros; only 1: intuition; only 1: fsetdec).	15.2753918171	28817
Coq.FSets.FSetProperties.fold_0	40
Coq.FSets.FSetProperties.fold_1	40	2.20.0.4.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec_bis; only 1: auto; only 1: simpl_relation; only 1: fsetdec).	8.51631498337	30262
Coq.FSets.FSetProperties.fold_2	40
Coq.FSets.FSetProperties.fold_1b	40	2.2.0.5.0	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto with *; only 1: fsetdec).	0.438225030899	449
Coq.FSets.FSetProperties.fold_commutes	40
Coq.FSets.FSetProperties.fold_init	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.fold_empty	40	4.2.21.1	search with cache (only 1: intro x; only 1: apply fold_rec; only 1: eauto; only 1: fsetdec).	2.17269897461	6402
Coq.FSets.FSetProperties.fold_add	40	1.0.3.3.3.2.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto; only 1: auto with *).	2.84730887413	3443
Coq.FSets.FSetProperties.add_fold	40
Coq.FSets.FSetProperties.remove_fold_1	40
Coq.FSets.FSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0286099910736	3
Coq.FSets.FSetProperties.fold_union_inter	40
Coq.FSets.FSetProperties.fold_diff_inter	40
Coq.FSets.FSetProperties.fold_union	40
Coq.FSets.FSetProperties.fold_plus	40
Coq.FSets.FSetProperties.cardinal_fold	40
Coq.FSets.FSetProperties.cardinal_0	40
Coq.FSets.FSetProperties.cardinal_1	40
Coq.FSets.FSetProperties.cardinal_2	40
Coq.FSets.FSetProperties.cardinal_Empty	40
Coq.FSets.FSetProperties.cardinal_inv_1	40
Coq.FSets.FSetProperties.cardinal_inv_2	40
Coq.FSets.FSetProperties.cardinal_inv_2b	40
Coq.FSets.FSetProperties.Equal_cardinal	40
Coq.FSets.FSetProperties.cardinal_m_Proper	40	2.4.4.0.6.10.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: tauto).	17.8448848724	16773
Coq.FSets.FSetProperties.empty_cardinal	40
Coq.FSets.FSetProperties.singleton_cardinal	40
Coq.FSets.FSetProperties.diff_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal_lt	40
Coq.FSets.FSetProperties.union_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal_inter	40
Coq.FSets.FSetProperties.union_cardinal_le	40	19.1.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	4.58223795891	5926
Coq.FSets.FSetProperties.add_cardinal_1	40	0.0.0.7.1	search with cache (only 1: symmetry; only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.271065950394	128
Coq.FSets.FSetProperties.add_cardinal_2	40	0.0.1.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with fset; only 1: auto with set).	0.028028011322	5
Coq.FSets.FSetProperties.remove_cardinal_1	40	0.0.0.0.0.0.0.1.2	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: auto with set).	0.176769018173	113
Coq.FSets.FSetProperties.remove_cardinal_2	40	6.0	search with cache (only 1: intros; only 1: intuition).	0.0507278442383	21
Coq.FSets.FSetProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.gtb_1	40
Coq.FSets.FSetProperties.leb_1	40
Coq.FSets.FSetProperties.gtb_compat	40
Coq.FSets.FSetProperties.leb_compat	40
Coq.FSets.FSetProperties.elements_split	40
Coq.FSets.FSetProperties.elements_Add	40
Coq.FSets.FSetProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.set_induction_max	40
Coq.FSets.FSetProperties.set_induction_min	40
Coq.FSets.FSetProperties.fold_3	40
Coq.FSets.FSetProperties.fold_4	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0270879268646	3
Coq.FSets.FSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0280690193176	3
Coq.FSets.FSetProperties.choose_equal	40
Coq.FSets.FSetDecide.test_push	40	1.0	search with cache (only 1: intros EQ; only 1: tauto).	0.454545974731	3
Coq.FSets.FSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.207499027252	3
Coq.FSets.FSetDecide.eq_refl_iff	40	1	search with cache (only 1: intuition).	0.021388053894	2
Coq.FSets.FSetDecide.dec_In	40
Coq.FSets.FSetDecide.dec_eq	40
Coq.FSets.FSetDecide.test_eq_trans_1	40
Coq.FSets.FSetDecide.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.111645936966	1
Coq.FSets.FSetDecide.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0751969814301	1
Coq.FSets.FSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.278333902359	1
Coq.FSets.FSetDecide.test_In_singleton	40	29	search with cache (only 1: simpl_relation).	0.14594912529	735
Coq.FSets.FSetDecide.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0639390945435	1
Coq.FSets.FSetDecide.test_Subset_add_remove	40	2.2	search with cache (only 1: red; only 1: fsetdec).	0.0701351165771	6
Coq.FSets.FSetDecide.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0945670604706	1
Coq.FSets.FSetDecide.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.139765024185	1
Coq.FSets.FSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.144021987915	1
Coq.FSets.FSetDecide.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.076963186264	1
Coq.FSets.FSetDecide.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.241059064865	1
Coq.FSets.FSetDecide.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.292645931244	1
Coq.FSets.FSetDecide.test_too_complex	40	11.3.4	search with cache (only 1: intros x y; only 1: unfold Subset; only 1: firstorder).	1.44966506958	1023
Coq.FSets.FSetDecide.function_test_1	40	0.15	search with cache (only 1: intros x y H; only 1: fsetdec).	0.475788831711	528
Coq.FSets.FSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0905318260193	1
Coq.FSets.FSetDecide.test_baydemir	40	1	search with cache (only 1: fsetdec).	0.0797429084778	2
Coq.FSets.FMapList.empty_1	40	6.0.0.18	search with cache (only 1: intro H; only 1: intros; only 1: red; only 1: inversion 1).	0.683750867844	691
Coq.FSets.FMapList.empty_sorted	40	10	search with cache (only 1: constructor).	0.0182249546051	21
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.add_Inf	40
Coq.FSets.FMapList.add_sorted	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.remove_Inf	40
Coq.FSets.FMapList.remove_sorted	40	0.0.0.0.1.0.0.0.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion_clear Hm; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: intuition).	0.850457191467	274
Coq.FSets.FMapList.elements_1	40	3.0	search with cache (only 1: intros; only 1: auto with ordered_type).	0.0136001110077	5
Coq.FSets.FMapList.elements_2	40	1.0.0	search with cache (only 1: intros m x; only 1: intros e' eqfind; only 1: intuition).	0.0138931274414	4
Coq.FSets.FMapList.elements_3	40	0.0.1.2.3.0	search with cache (only 1: induction m; only 1: intuition; only 1: inversion_clear 1; only 1: constructor; only 1: auto; only 1: auto).	0.642287969589	231
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.fold_1	40
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.equal_cons	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.map_lelistA	40	1.0.2.0.4.2.3.3.0.1	search with cache (only 1: intros m x e f; only 1: induction m; only 1: inversion 1; only 1: simpl in *; only 1: auto; only 1: inversion 1; only 1: destruct a as (x'', e''); only 1: simpl; only 1: inversion_clear H; only 1: auto).	14.64427495	15885
Coq.FSets.FMapList.map_sorted	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.mapi_lelistA	40	0.1.0.0.3.0.0.2.2.2	search with cache (only 1: induction m; only 1: intros; only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	5.16625905037	4685
Coq.FSets.FMapList.mapi_sorted	40	2.0.0.0.0.5.1.2	search with cache (only 1: induction m; only 1: intros sorted hyp; only 1: constructor; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion_clear Hm; only 1: auto).	1.72737216949	1171
Coq.FSets.FMapList.map2_alt_equiv	40
Coq.FSets.FMapList.combine_lelistA	40
Coq.FSets.FMapList.combine_sorted	40
Coq.FSets.FMapList.map2_sorted	40
Coq.FSets.FMapList.combine_1	40
Coq.FSets.FMapList.map2_0	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.MapsTo_1	40
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.empty_1	40	9.0.31	search with cache (only 1: compute; only 1: intros; only 1: inversion H).	0.537233114243	1666
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.elements_1	40	0.2.0	search with cache (only 1: intros m; only 1: intros; only 1: auto).	0.0185360908508	5
Coq.FSets.FMapList.elements_2	40	1.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0149521827698	3
Coq.FSets.FMapList.elements_3	40	0.7	search with cache (only 1: induction m; only 1: auto).	0.028128862381	32
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.cardinal_1	40	3.0	search with cache (only 1: intros m; only 1: auto).	0.0150971412659	5
Coq.FSets.FMapList.fold_1	40
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.eq_equal	40
Coq.FSets.FMapList.eq_1	40
Coq.FSets.FMapList.eq_2	40
Coq.FSets.FMapList.eq_refl	40
Coq.FSets.FMapList.eq_sym	40
Coq.FSets.FMapList.eq_trans	40
Coq.FSets.FMapList.lt_trans	40
Coq.FSets.FMapList.lt_not_eq	40
Coq.FSets.FMapList.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.17.11	search with cache (only 1: intros Hfst Hsnd; only 1: intro H; only 1: auto with sets).	0.364130973816	1165
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	9.4.6	search with cache (only 1: intros x y; only 1: destruct 1; only 1: firstorder).	10.4361028671	3200
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.6.4.5.2	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.463617801666	1251
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	1.16	search with cache (only 1: left; only 1: exact H).	0.0251958370209	146
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.0.3.6.3.3.0.0.13	search with cache (only 1: intro H; only 1: intros y H2; only 1: destruct 1; only 1: apply Acc_intro; only 1: induction H2; only 1: apply Acc_inv with y; only 1: apply Acc_intro; only 1: trivial; only 1: auto with sets; only 1: auto with sets).	9.81927490234	21633
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	1.14	search with cache (only 1: intros Hfst Hsnd; only 1: auto with sets).	2.09210205078	397
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	2.4.0.2.4	search with cache (only 1: inversion 1; only 1: rewrite <- (rev_rev d); only 1: symmetry; only 1: rewrite H; only 1: apply rev_revapp).	0.514472961426	475
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.2.2	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	3.36064720154	996
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.1.4	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.73547577858	1505
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.1.3	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.74472308159	1504
Coq.Numbers.DecimalFacts.unorm_invol	40	2	search with cache (only 1: now induction d).	0.0194342136383	12
Coq.Numbers.DecimalFacts.norm_invol	40	11.11.21	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	28.5425789356	28520
Coq.Numbers.DecimalPos.of_lu_eqn	40
Coq.Numbers.DecimalPos.of_lu_revapp	40
Coq.Numbers.DecimalPos.Nadd_simpl	40	1.1.14.0	search with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: trivial).	0.860126972198	1319
Coq.Numbers.DecimalPos.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.of_uint_alt	40
Coq.Numbers.DecimalPos.of_lu_rev	40
Coq.Numbers.DecimalPos.of_lu_double_gen	40
Coq.Numbers.DecimalPos.of_lu_double	40
Coq.Numbers.DecimalPos.of_lu_succ_double	40	0	search with cache (only 1: apply of_lu_double_gen).	0.0222611427307	1
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.succ_double_alt	40
Coq.Numbers.DecimalPos.double_succ	40
Coq.Numbers.DecimalPos.to_lu_succ	40
Coq.Numbers.DecimalPos.nat_iter_S	40	0.4.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto using succ_double_alt; only 1: auto).	0.0299520492554	8
Coq.Numbers.DecimalPos.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.0207991600037	1
Coq.Numbers.DecimalPos.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.of_lu_0	40
Coq.Numbers.DecimalPos.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Nadd_alt	40
Coq.Numbers.DecimalPos.to_of_lu	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_uint_nonzero	40
Coq.Numbers.DecimalPos.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0329151153564	3
Coq.Numbers.DecimalPos.to_uint_inj	40
Coq.Numbers.DecimalPos.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.of_uint_norm	40	26	search with cache (only 1: now induction d).	39.3992750645	42991
Coq.Numbers.DecimalPos.of_inj	40
Coq.Numbers.DecimalPos.of_iff	40
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_int_inj	40
Coq.Numbers.DecimalPos.to_int_pos_surj	40
Coq.Numbers.DecimalPos.of_int_norm	40
Coq.Numbers.DecimalPos.of_inj_pos	40
Coq.Numbers.DecimalNat.to_lu_succ	40	3.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0111329555511	5
Coq.Numbers.DecimalNat.to_little_uint_succ	40
Coq.Numbers.DecimalNat.to_lu_equiv	40
Coq.Numbers.DecimalNat.to_uint_alt	40
Coq.Numbers.DecimalNat.of_lu_eqn	40
Coq.Numbers.DecimalNat.of_lu_succ	40
Coq.Numbers.DecimalNat.of_to_lu	40
Coq.Numbers.DecimalNat.of_lu_revapp	40
Coq.Numbers.DecimalNat.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.of_uint_alt	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_lu_tenfold	40
Coq.Numbers.DecimalNat.of_lu_0	40
Coq.Numbers.DecimalNat.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.to_of_lu	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_uint_inj	40
Coq.Numbers.DecimalNat.to_uint_surj	40
Coq.Numbers.DecimalNat.of_uint_norm	40
Coq.Numbers.DecimalNat.of_inj	40
Coq.Numbers.DecimalNat.of_iff	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_int_inj	40
Coq.Numbers.DecimalNat.to_int_pos_surj	40	4.0.0.0	search with cache (only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: rewrite Unsigned.to_of; only 1: now induction d).	0.0217521190643	8
Coq.Numbers.DecimalNat.of_int_norm	40
Coq.Numbers.DecimalNat.of_inj_pos	40
Coq.Numbers.DecimalN.of_to	40
Coq.Numbers.DecimalN.to_of	40	1.16.2	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: trivial).	1.26693105698	2300
Coq.Numbers.DecimalN.to_uint_inj	40
Coq.Numbers.DecimalN.to_uint_surj	40
Coq.Numbers.DecimalN.of_uint_norm	40	0	search with cache (only 1: now induction d).	0.0115389823914	1
Coq.Numbers.DecimalN.of_inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0129818916321	3
Coq.Numbers.DecimalN.of_iff	40	0.0.0.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.0177521705627	7
Coq.Numbers.DecimalN.of_to	40
Coq.Numbers.DecimalN.to_of	40
Coq.Numbers.DecimalN.to_int_inj	40
Coq.Numbers.DecimalN.to_int_pos_surj	40	0.0.0.2.2	search with cache (only 1: exists (N.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold N.to_int, N.of_int, norm; only 1: f_equal; only 1: now induction d).	0.0999660491943	9
Coq.Numbers.DecimalN.of_int_norm	40
Coq.Numbers.DecimalN.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_add_opp	40	3.2.0	search with cache (only 1: intro n; only 1: intro m; only 1: split).	0.00833606719971	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_wd	40	8.2.2.0.0.13.50	search with cache (only 1: unfold Z.eq; only 1: intros m IH; only 1: intro H; only 1: simpl in *; only 1: rewrite add_succ_l; only 1: nzsimpl; only 1: now rewrite H).	21.1231110096	48206
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_wd	40	0.8.6.1.0.15.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros m IH; only 1: intro H; only 1: simpl; only 1: rewrite add_succ_r; only 1: nzsimpl; only 1: now rewrite H).	3.78065800667	7988
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_wd	40	3.10.0.0.7.18.0	search with cache (only 1: unfold Z.pred, Z.eq; only 1: intros m IH; only 1: rewrite add_comm; only 1: intro H; only 1: simpl; only 1: rewrite add_comm; only 1: now rewrite H).	16.4750797749	28888
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.100574970245	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.one_succ	40	6.0	search with cache (only 1: unfold Z.succ, Z.pred, Z.eq; only 1: now nzsimpl).	0.129976034164	23
Coq.Numbers.Integer.NatPairs.ZNatPairs.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.0586941242218	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_0	40	22	search with cache (only 1: solve_proper).	1.68656015396	724
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_succ	40	2.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl in *; only 1: now nzsimpl).	0.0938439369202	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_0_l	40	0.2.0.0	search with cache (only 1: intro n; only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl).	0.119410991669	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_succ_l	40	5.0.2.4.1	search with cache (only 1: intro n; only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro m; only 1: simpl in *; only 1: now nzsimpl).	0.654201984406	548
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_0_r	40	0.2.0.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.123216867447	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_succ_r	40	0.0.0.0	search with cache (only 1: intros n m; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.144931077957	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_0_l	40	1.0.1.0	search with cache (only 1: intro n; only 1: unfold Z.opp, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.0852379798889	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_irrefl	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_nonpos	40	8.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.66349196434	143
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_neg	40	9.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	1.24587202072	331
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_nonpos	40	7.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0885741710663	10
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_0	40	0.1.17	search with cache (only 1: intro z; only 1: intro n; only 1: now rewrite (add_lt_mono_r _ _ n), add_0_l, sub_simpl_r).	18.3426959515	7067
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_0	40	0.0.17	search with cache (only 1: intro z; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	6.02802300453	3243
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_m1_0	40	0.5.32.12	search with cache (only 1: rewrite <- (add_0_l 0); only 1: apply le_succ_l; only 1: nzsimpl; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	2.69018697739	2528
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_l	40	0.5.10	search with cache (only 1: intros p n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	0.974140167236	509
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_l	40	0.5.10	search with cache (only 1: intros p n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	2.42831611633	1219
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_r	40	0.4.18	search with cache (only 1: intro LS'; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	8.43186402321	4400
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_r	40	0.3.18	search with cache (only 1: intro LS'; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	5.42680692673	3247
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.odd_pred	40	6.0.2.0.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: now rewrite <- even_spec, even_succ, odd_spec).	3.96881008148	1868
Coq.Numbers.Integer.Abstract.ZParity.even_pred	40
Coq.Numbers.Integer.Abstract.ZParity.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonneg_nonpos	40	4.2.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	1.37444210052	60
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_false	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now nzsimpl).	0.0509841442108	11
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_bit0	40	0.11.0.6.0	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	5.51051807404	2432
Coq.Numbers.Integer.Abstract.ZBits.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_mod	40	0.3.9.4	search with cache (only 1: intros EQ; only 1: rewrite testbit_spec' by order; only 1: symmetry; only 1: now nzsimpl).	15.8021159172	6338
Coq.Numbers.Integer.Abstract.ZBits.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff'	40	6.1.0.1.20.0.1.1.0.0	search with cache (only 1: split; only 1: intros EQ; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite EQ; only 1: now rewrite 2!testbit_neg_r; only 1: intros EQ; only 1: intros; only 1: now rewrite EQ).	32.2612061501	50596
Coq.Numbers.Integer.Abstract.ZBits.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.div2_wd	40	3.3.3.2.0.4.0.0.10	search with cache (only 1: intros EQ; only 1: intros a Ha; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: symmetry; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: now try order'; only 1: now try order'; only 1: now try order').	21.6167719364	10951
Coq.Numbers.Integer.Abstract.ZBits.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0975790023804	3
Coq.Numbers.Integer.Abstract.ZBits.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0644919872284	3
Coq.Numbers.Integer.Abstract.ZBits.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0526900291443	3
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.021066904068	4
Coq.Numbers.Integer.Abstract.ZBits.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_0_l	40	6.0.1	search with cache (only 1: intros n; only 1: bitwise; only 1: trivial).	0.076406955719	34
Coq.Numbers.Integer.Abstract.ZBits.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0226609706879	4
Coq.Numbers.Integer.Abstract.ZBits.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.land_0_l	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0227539539337	6
Coq.Numbers.Integer.Abstract.ZBits.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_l	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0220038890839	5
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_r	40	7.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0229930877686	10
Coq.Numbers.Integer.Abstract.ZBits.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_wd	40	0.1.1.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.131661891937	26
Coq.Numbers.Integer.Abstract.ZBits.clearbit_wd	40	9.1.1.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	1.93737316132	865
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_r	40	4.4.0.6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: now try order'; only 1: now try order').	2.1890540123	2721
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_l	40	3.1.2	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.185507059097	51
Coq.Numbers.Integer.Abstract.ZBits.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_neg	40	2.1.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.026624917984	6
Coq.Numbers.Integer.Abstract.ZBits.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.div2_neg	40	0.2.0	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0380580425262	5
Coq.Numbers.Integer.Abstract.ZBits.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj_wd	40	3.4.1.0.0.0.1.2	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intro EQ; only 1: rewrite EQ; only 1: order).	2.10787796974	3019
Coq.Numbers.Integer.Abstract.ZBase.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_l	40	0.0.4.0.0.0.2.1.0.0.0.0.1.0.1.1	search with cache (only 1: intros a b; only 1: destruct (abs_spec a) as [[LE EQ]| [LT EQ]]; only 1: rewrite EQ; only 1: clear EQ; only 1: now split; only 1: rewrite EQ; only 1: clear EQ; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_l, mul_opp_r; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_opp).	38.1745471954	45619
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_r	40	1.2.0.2.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.394330024719	172
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_l	40	1.0.1.9.0.2.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: destruct_max n; only 1: apply gcd_divide_iff; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	10.0878698826	10016
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_r	40	3.0.0.0.5.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	1.09898090363	848
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r_nonneg	40	2.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: tauto).	0.0404670238495	6
Coq.Numbers.Integer.Abstract.ZGcd.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag_nonneg	40	9.6.8.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: tauto; only 1: tauto).	1.12323021889	2816
Coq.Numbers.Integer.Abstract.ZLcm.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_r	40	0.1.0.3.0.0.2	search with cache (only 1: intros a b; only 1: apply lcm_unique_alt; only 1: unfold lcm; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.729584932327	544
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_l	40	0.0.0.15.3.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	27.3319220543	28988
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_r	40	3.0.0.0.5.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.680648088455	610
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag	40	6.5.2.2.4.6.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	6.28262686729	7801
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r_nonneg	40	6.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: tauto).	0.323291063309	53
Coq.Numbers.Integer.Abstract.ZLcm.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_min_distr	40	2.0.0.3.2.0.0.4.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: order'; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: order').	29.0611271858	16303
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_r	40	1.2.0.1.1.2.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: order'; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: order'; only 1: now rewrite <- ?add_le_mono_r).	23.7559669018	12598
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_l	40	1.2.0.1.1.2.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order'; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order'; only 1: now apply mul_le_mono_nonneg_l).	35.5281150341	16726
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_r	40	4.0.0.0.5.0.0.2.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r).	24.2916429043	13738
Coq.Numbers.Integer.Abstract.ZLt.neg_pos_cases	40	1.1.1.6.0	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.896169900894	699
Coq.Numbers.Integer.Abstract.ZLt.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.neg_nonneg_cases	40	4.4.4.13.0	search with cache (only 1: intro; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	4.60866785049	4687
Coq.Numbers.Integer.Abstract.ZLt.nonpos_nonneg_cases	40	17.0.0	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	2.26603889465	2023
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.le_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.nle_pred_r	40	0.0.18.0	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.952991008759	778
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_le	40	8.9.2.1	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).	6.43435502052	4663
Coq.Numbers.Integer.Abstract.ZLt.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.le_le_pred	40	6.0.6.0	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: tauto).	1.08566784859	990
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.pred_le_mono	40	4.12.2.4	search with cache (only 1: intros n1 n2; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: apply lt_pred_le).	9.42441010475	7231
Coq.Numbers.Integer.Abstract.ZLt.lt_succ_lt_pred	40	0.0.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0170719623566	3
Coq.Numbers.Integer.Abstract.ZLt.le_succ_le_pred	40	0.0.0.2.2.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0471818447113	10
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt_succ	40	0.0.0.2.1.3.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite lt_le_pred; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: rewrite pred_succ; only 1: apply le_succ_l).	1.63250398636	940
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt_succ	40	2.4.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.343540906906	225
Coq.Numbers.Integer.Abstract.ZLt.neq_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos	40	1.23.39.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: solve_proper; only 1: order).	17.000082016	53182
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg	40	0.1.1.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: now f_equiv).	0.0173029899597	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_nonneg	40	2.3.2.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: tauto; only 1: rewrite opp_nonneg_nonpos; only 1: tauto).	0.30443406105	250
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0	40	18.18.2	search with cache (only 1: rewrite abs_eq; only 1: solve_proper; only 1: solve_proper).	0.506860017776	1669
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_or_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_or_opp_abs	40	0.20.4.0.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: apply eq_opp_l; only 1: reflexivity).	7.92524600029	10007
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_involutive	40	3.13.5	search with cache (only 1: intro m; only 1: apply abs_eq; only 1: apply abs_nonneg).	3.97309589386	4962
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case_strong	40	15.11.8.28.1	search with cache (only 1: intros EQ; only 1: intros n m p Hp; only 1: destruct_max n; only 1: tauto; only 1: auto).	11.7134790421	26872
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case	40	0.7.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0544018745422	53
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_square	40	2.14.4.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply eq_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	1.12708687782	1902
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_0	40	7.13.7.13.2	search with cache (only 1: rewrite sgn_null; only 1: rewrite <- abs_0_iff; only 1: now apply abs_eq; only 1: rewrite <- abs_0_iff; only 1: now apply abs_eq).	1.95780396461	6291
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_sgn	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_pos	40	2.2.10.0	search with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: tauto; only 1: tauto).	1.77384781837	1706
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt_upper_bound	40	1.6.6.4.1.1.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: now try split; only 1: now try split; only 1: now try split).	14.0911381245	13546
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_lower_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_l	40	0.0.0.0.7.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	2.27768492699	1157
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_pos	40	0.0.1.0.1.2.0.16	search with cache (only 1: intros n m EQ; only 1: intros a b; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: intuition).	8.62991786003	11262
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_neg	40	0.1.8.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: trivial).	0.49347281456	309
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique	40	0.1.0.0.0.1.0.0.1.0.0.1.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	3.70627999306	3387
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_pos	40	0.0.0.0.1.2.3.1.1.10.0	search with cache (only 1: intros; only 1: intuition; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	13.1614677906	17735
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_neg	40	0.0.10.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.584390878677	511
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0367851257324	7
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0372250080109	7
Coq.Numbers.Integer.Abstract.ZDivFloor.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mul	40	0.0.0.1.2.1.1.0.6.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	15.7005748749	20992
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_exact	40	0.0.0.0.2.0.1.0.7.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	6.86199617386	5999
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_le	40	2.2.6.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: tauto; only 1: tauto).	0.693243980408	740
Coq.Numbers.Integer.Abstract.ZDivFloor.div_pos	40	0.0.4.0	search with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: trivial).	0.178659915924	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_str_pos	40	0.16.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	1.00458598137	1016
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_le	40	0.2.5.0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: tauto; only 1: order).	0.924248218536	686
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_ge	40	0.2.4.5.11.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_neg_bound a b); only 1: tauto; only 1: order).	9.64592003822	7451
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_gt	40	11.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.952208042145	513
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0285880565643	4
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt_upper_bound	40	0.6.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: now try split).	0.496683835983	254
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_upper_bound	40	0.1.1.1.1.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: trivial; only 1: trivial).	0.0441558361053	12
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_lower_bound	40	3.2.0.7.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: order; only 1: now rewrite mul_comm).	7.64736580849	5860
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_add	40	0.0.5.0.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.630021095276	408
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add	40	0.1.0.0.2.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0819630622864	10
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_l	40	0.0.2.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	0.86171579361	139
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_l	40	0.0.0.1.0.1.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: tauto; only 1: tauto).	0.709099054337	211
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_r	40	0.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto).	0.223376989365	50
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_r	40	1.1.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.308098077774	63
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod	40	1.1.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0327119827271	8
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_r	40	1.2.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.201939105988	43
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod	40	1.1.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0329279899597	8
Coq.Numbers.Integer.Abstract.ZDivFloor.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.rem_mul_r	40	1.0.0.0.0.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.0700900554657	8
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_le	40	2.2.0.0.2.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: tauto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: tauto; only 1: now apply mul_div_le).	0.723702192307	522
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_r	40	3.4.0.1.19	search with cache (only 1: intro z; only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now nzsimpl).	31.7812399864	15155
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_l	40	5.1.1	search with cache (only 1: intros n1 n2; only 1: rewrite <- 2!add_opp_r; only 1: apply add_pred_l).	0.0574479103088	44
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_r	40	0.15.19.0	search with cache (only 1: intro n; only 1: symmetry; only 1: rewrite add_comm; only 1: now rewrite add_comm, add_opp_r, sub_diag).	15.422809124	12534
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_l	40	0.9.5.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	5.15964889526	2494
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj_wd	40	0.0.0.1.1.0.0	search with cache (only 1: intros n1 n2; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	0.0233631134033	9
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0120429992676	2
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_l	40	13.5.2	search with cache (only 1: symmetry; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	3.22176384926	2502
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_r	40	3.1.3	search with cache (only 1: intros n1 n2; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.300197124481	81
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_swap	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_r	40	4.0.0.1.7.3.8	search with cache (only 1: intro z; only 1: symmetry; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	11.7200200558	12258
Coq.Numbers.Integer.Abstract.ZAdd.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_r	40	2.3.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0285260677338	8
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_r	40	3.14.0	search with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	0.886482000351	769
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_r	40	3.2.2.2	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro p; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.303833961487	185
Coq.Numbers.Integer.Abstract.ZAdd.sub_add	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0178320407867	2
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_l	40	2.12.0	search with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	0.961876153946	455
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_r	40	0.1.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.037211894989	4
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_same	40	0.0.1.11.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.695262908936	740
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.0452010631561	23
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small	40	0.3.3.0	search with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).	0.243514060974	111
Coq.Numbers.Integer.Abstract.ZDivEucl.div_0_l	40	0.0.1.1.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.045284986496	22
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_0_l	40	0.0.1.10.7.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	3.96233797073	3998
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_r	40	1.30.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition order; only 1: now nzsimpl).	27.6172699928	46559
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_l	40	56.1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: intuition; only 1: apply le_0_1).	26.9860460758	61558
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_l	40	57.1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: intuition; only 1: apply le_0_1).	5.20831203461	16357
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul	40	5.0.0.2.4.2.0.9	search with cache (only 1: intros b; only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: rewrite abs_pos; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm).	5.2632598877	8008
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul	40	0.0.0.2.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: rewrite abs_pos; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm).	0.340470075607	174
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique_exact	40	0.0.0.4.6.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: rewrite abs_pos; only 1: intuition; only 1: nzsimpl; only 1: now try split).	1.02355408669	1009
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_pos	40	3.0	search with cache (only 1: intros; only 1: auto using div_pos).	0.0131850242615	5
Coq.Numbers.Integer.Abstract.ZDivEucl.div_str_pos	40	0.18.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	1.22022294998	1275
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_div_le	40	0.1.6.2.8.2.0	search with cache (only 1: intros a b Hb; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: destruct (mod_always_pos a b); only 1: intuition order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: intuition order).	5.80482196808	6298
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_exact	40	0.0.1.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0651521682739	5
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt_upper_bound	40	0.3.1.1.4.4	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: order).	4.42607212067	2579
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_upper_bound	40	0.0.2.0.1.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: trivial).	0.0224349498749	9
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_lower_bound	40	0.3.1.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: order; only 1: now rewrite mul_comm; only 1: order).	0.379992008209	108
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_add	40	0.0.0.0.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0363240242004	8
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add	40	0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0599229335785	9
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_l	40	1.0.1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: trivial; only 1: tauto).	0.37763094902	86
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_l	40	1.0.0.1.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: trivial; only 1: tauto).	0.690165042877	244
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_r	40	0.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: trivial).	0.209280014038	46
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mod	40	1.0.22.1	search with cache (only 1: intros a b Hb; only 1: destruct (mod_always_pos a b); only 1: trivial; only 1: now rewrite Private_NZDiv.mod_small_iff).	27.3305649757	24213
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_r	40	1.1.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: trivial).	0.357175827026	71
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod	40	1.1.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0245578289032	8
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_r	40	1.2.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: trivial).	0.246675014496	48
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod	40	1.1.1.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0245358943939	9
Coq.Numbers.Integer.Abstract.ZDivEucl.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul_r	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.0753581523895	9
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_le	40	3.4.4.0.0.4.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: tauto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: tauto; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition order).	7.23452806473	6417
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	25.0	search with cache (only 1: intros a b Ha H; only 1: Z.order').	0.886049032211	4851
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40
Coq.Numbers.Cyclic.Int31.Ring31.test	40	12.8	search with cache (only 1: intros ih1 il1; only 1: ring).	1.1157579422	728
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	1.21.47	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	1.4385008812	7174
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0400969982147	3
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	1.0.2	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.0394060611725	6
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.4	search with cache (only 1: destruct x; only 1: split).	1.03427791595	6
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0.0.0.0.0.0.0	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.0456328392029	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.0.0.0.0.0.1	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.0483839511871	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0494730472565	6
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0421869754791	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	2.0.0	search with cache (only 1: destruct x; only 1: simpl in *; only 1: tauto).	0.045361995697	5
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	2.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: tauto).	0.0447261333466	5
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	0.0.4.0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: intro H; only 1: injection H; only 1: intros; only 1: auto).	1.13404607773	98
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	1.1.0.1.1	search with cache (only 1: destruct x; only 1: compute; only 1: intros; only 1: rewrite H; only 1: auto).	5.11326909065	22
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40	2.2.1	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.0673949718475	24
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	0.0.0	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.0339300632477	3
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	2.3	search with cache (only 1: intros; only 1: now f_equal).	0.0327320098877	7
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	2.0	search with cache (only 1: intros; only 1: auto with arith).	0.0310671329498	4
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	2.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.0390260219574	6
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0436770915985	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0282220840454	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.0289280414581	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: reflexivity).	0.0281779766083	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.0286180973053	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: auto).	0.0275948047638	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	3	search with cache (only 1: auto with zarith).	0.033499956131	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	0.1	search with cache (only 1: destruct x; only 1: auto).	0.0340859889984	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	5.1.8	search with cache (only 1: simpl; only 1: intros; only 1: apply phi_phi_inv).	22.6471719742	1011
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0308051109314	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.2	search with cache (only 1: unfold sub31c, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.07652592659	18
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.030925989151	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	1.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.122986793518	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	6.0.0	search with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0934488773346	9
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0310080051422	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0490100383759	8
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40	1.0.15.0	search with cache (only 1: intros Hi Hj Hd; only 1: apply Zdiv_lt_upper_bound; only 1: auto with zarith; only 1: nia).	18.7856678963	13199
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	5	search with cache (only 1: lia).	0.036731004715	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0	search with cache (only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.019161939621	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.2.1.0	search with cache (only 1: intros; only 1: unfold wB, base; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0232350826263	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	1.0	search with cache (only 1: unfold to_Z, zdigits; only 1: auto).	0.0160667896271	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40	0.0.2.2.0.0.1.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: apply Z.pow_gt_1; only 1: auto with zarith; only 1: auto with zarith).	0.536434173584	433
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.3.0	search with cache (only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.0378708839417	16
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.1	search with cache (only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0202541351318	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	5.1.2.15.1	search with cache (only 1: unfold to_Z; only 1: unfold wB, base; only 1: intros; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	36.0446510315	29020
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	1.24.0.0	search with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	34.7268538475	30966
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	0.0.1.10.0.0	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite <- Zminus_mod_idemp_l; only 1: rewrite <- Zminus_mod_idemp_r; only 1: generalize wB_pos, (Z_mod_lt x wB wB_pos), (Z_mod_lt y wB wB_pos); only 1: lia).	2.10654497147	1558
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40	0.0.0.0.6.0.3.5.1.3.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: apply Zmod_small; only 1: unfold Z.modulo, Z.div; only 1: assert ([|b|] > 0) by lia; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: fold [|b|]; only 1: lia).	18.4565160275	13687
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	1	search with cache (only 1: reflexivity).	0.18045592308	77
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	1.92066693306	641
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	1.3	search with cache (only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg).	0.0611221790314	22
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	5.15	search with cache (only 1: intro; only 1: now f_equal).	0.416105985641	223
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	5	search with cache (only 1: now f_equal).	0.0280320644379	6
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0475790500641	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: now Z.nzsimpl).	0.0491690635681	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	96	search with cache (only 1: congruence).	2.67543506622	4708
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.2.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0387279987335	5
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	1.0.10	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: apply f_equal).	0.122673988342	64
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	1	search with cache (only 1: apply subc_spec).	0.0267639160156	2
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	search with cache (only 1: apply sub_spec).	0.0404329299927	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0287179946899	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	4	search with cache (only 1: now intros ->).	0.0417609214783	13
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	0.47.5.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite !add_spec; only 1: f_equal; only 1: lia).	13.507461071	16385
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0504839420319	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	6.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: auto with zarith).	0.0343058109283	9
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	1.0	search with cache (only 1: unfold is_even; only 1: auto).	0.0273671150208	3
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.2.0.1.0.10.7	search with cache (only 1: intros x y; only 1: case eqbP; only 1: intros h; only 1: apply to_Z_inj in h; only 1: easy || Lia.lia; only 1: intros Heq; only 1: easy || Lia.lia).	2.70248603821	4425
Coq.Numbers.Cyclic.Int63.Ring63.test	40	10.1.12.14.0	search with cache (only 1: intros x y; only 1: remember φ (digits - 1) as m; only 1: ring_simplify; only 1: subst; only 1: auto with zarith).	1.40391993523	2897
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_comm	40	7.34.0.0	search with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: auto with zarith).	2.21064996719	3552
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_1	40	2.0.1	search with cache (only 1: apply Z.pow_gt_1; only 1: easy; only 1: lia).	0.0560719966888	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_0	40	0.1	search with cache (only 1: unfold base; only 1: auto with zarith).	0.0584051609039	26
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.two_succ	40	4.0.0	search with cache (only 1: zify; only 1: simpl Z.add; only 1: auto with zarith).	0.0303750038147	7
Coq.Numbers.Cyclic.Abstract.NZCyclic.B0	40	1	search with cache (only 1: easy).	0.0169320106506	2
Coq.Numbers.Cyclic.Abstract.NZCyclic.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_0_l	40	0.0.0.0	search with cache (only 1: intro n; only 1: zify; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.029669046402	4
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_0_l	40	14.0.11.0	search with cache (only 1: intro n; only 1: symmetry; only 1: zify; only 1: auto with zarith).	0.577348947525	1064
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.DecimalString.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.usu_nil	40	0	search with cache (only 1: auto).	0.00805592536926	1
Coq.Numbers.DecimalString.usu_gen	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.isi_posnil	40	4.0	search with cache (only 1: simpl; only 1: auto).	0.0110828876495	6
Coq.Numbers.DecimalString.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.00664591789246	1
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_0_succ	40	10.2.0.7	search with cache (only 1: induct ltac:(n); only 1: apply lt_succ_diag_r; only 1: intros; only 1: now apply lt_lt_succ_r).	4.08159613609	4100
Coq.Numbers.Natural.Abstract.NOrder.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.eq_0_gt_0_cases	40	6.0.0.7.0	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.707856178284	911
Coq.Numbers.Natural.Abstract.NOrder.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.succ_pred_pos	40	0.0.0.0.32.5	search with cache (only 1: intros n H; only 1: elim H using lt_ind; only 1: solve_proper; only 1: now rewrite pred_succ; only 1: intros m H1 H2; only 1: now rewrite pred_succ).	1.74238419533	6092
Coq.Numbers.Natural.Abstract.NOrder.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_l	40	1.0.2.5.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.719972848892	1000
Coq.Numbers.Natural.Abstract.NOrder.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.le_succ_le_pred	40	2.2.0.2.0.0.1.0.1.0	search with cache (only 1: intros n m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: solve_proper; only 1: intros k H1 H2; only 1: apply le_succ_l in H1; only 1: apply lt_le_incl in H1; only 1: rewrite pred_succ; only 1: auto).	2.36764883995	2601
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt_succ	40
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique_exact	40	1.0.5.8.4	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	1.84051299095	3293
Coq.Numbers.Natural.Abstract.NDiv.div_same	40
Coq.Numbers.Natural.Abstract.NDiv.mod_same	40	1.1.7.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.446809053421	547
Coq.Numbers.Natural.Abstract.NDiv.div_small	40	3.3.1	search with cache (only 1: intros; only 1: apply div_small; only 1: auto').	0.0308380126953	31
Coq.Numbers.Natural.Abstract.NDiv.mod_small	40	0.0.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.00753998756409	3
Coq.Numbers.Natural.Abstract.NDiv.div_0_l	40	1.5.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0158021450043	16
Coq.Numbers.Natural.Abstract.NDiv.mod_0_l	40	1.6.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0197911262512	18
Coq.Numbers.Natural.Abstract.NDiv.div_1_r	40	19.1.9.2.2.1	search with cache (only 1: intro m; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order'; only 1: nzsimpl; only 1: solve_proper).	4.58569407463	14409
Coq.Numbers.Natural.Abstract.NDiv.mod_1_r	40
Coq.Numbers.Natural.Abstract.NDiv.div_1_l	40	3.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: tauto).	0.00939893722534	6
Coq.Numbers.Natural.Abstract.NDiv.mod_1_l	40	3.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: tauto).	0.0102300643921	6
Coq.Numbers.Natural.Abstract.NDiv.div_mul	40	3.1.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto; only 1: apply mul_comm).	0.0217070579529	16
Coq.Numbers.Natural.Abstract.NDiv.mod_mul	40	1.1.2.0	search with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.120499134064	33
Coq.Numbers.Natural.Abstract.NDiv.mod_le	40	1.1.9.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.26019692421	404
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos	40	0.20.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	2.78193187714	3017
Coq.Numbers.Natural.Abstract.NDiv.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.mul_div_le	40	1.1.0.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0982899665833	6
Coq.Numbers.Natural.Abstract.NDiv.mul_succ_div_gt	40	2.2.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.284952878952	80
Coq.Numbers.Natural.Abstract.NDiv.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0198390483856	4
Coq.Numbers.Natural.Abstract.NDiv.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_lower_bound	40	0.0.0.0.8.6.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: rewrite mul_comm; only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: auto'; only 1: auto').	2.33982491493	2495
Coq.Numbers.Natural.Abstract.NDiv.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.mod_add	40	0.0.0.0.3.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.194789886475	132
Coq.Numbers.Natural.Abstract.NDiv.div_add	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0448391437531	8
Coq.Numbers.Natural.Abstract.NDiv.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_r	40
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_l	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.072646856308	32
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_r	40	1.1.0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	1.20827507973	657
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_l	40	1.1.0.1.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	0.890495061874	545
Coq.Numbers.Natural.Abstract.NDiv.mod_mod	40	1.20.4.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: apply le_0_l; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	4.16653895378	6814
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0131578445435	5
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_r	40	0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.0219509601593	5
Coq.Numbers.Natural.Abstract.NDiv.mul_mod	40	0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0211448669434	6
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_l	40	1.1.1.1.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0119252204895	9
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_r	40	0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.022304058075	5
Coq.Numbers.Natural.Abstract.NDiv.add_mod	40	0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0202660560608	6
Coq.Numbers.Natural.Abstract.NDiv.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.mod_mul_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.0514929294586	7
Coq.Numbers.Natural.Abstract.NDiv.div_mul_le	40	4.0.2.0.0.4.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	1.83094501495	1587
Coq.Numbers.Natural.Abstract.NDiv.mod_divides	40	0.0.0.0.2.0.0.0.0.4.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	0.809205055237	971
Coq.Numbers.Natural.Abstract.NBase.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.induction	40
Coq.Numbers.Natural.Abstract.NBase.case_analysis	40
Coq.Numbers.Natural.Abstract.NBase.neq_0	40	82.17	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	1.890873909	14702
Coq.Numbers.Natural.Abstract.NBase.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.succ_pred	40
Coq.Numbers.Natural.Abstract.NBase.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.double_induction	40	0.8.10.0.0.6.0.0	search with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: trivial; only 1: intros; only 1: now apply H3).	15.699215889	13545
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_0_r	40	1.0.48	search with cache (only 1: unfold def_mul; only 1: intro n; only 1: now rewrite recursion_0).	2.0685069561	10855
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_step	40	0.2.0.1.2.2.0	search with cache (only 1: intros; only 1: unfold ltb; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	27.4771800041	336
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0_succ	40	1.2.4.0.0	search with cache (only 1: intro n; only 1: unfold ltb; only 1: rewrite recursion_0; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.283133983612	233
Coq.Numbers.Natural.Abstract.NDefOps.succ_ltb_mono	40	0.5.0.1.3.2	search with cache (only 1: intros x y; only 1: rewrite ltb_step; only 1: rewrite recursion_succ; only 1: split; only 1: tauto; only 1: f_equiv').	11.0844409466	2161
Coq.Numbers.Natural.Abstract.NDefOps.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.even_succ	40	5.1.1	search with cache (only 1: intro; only 1: unfold even; only 1: now rewrite recursion_succ).	0.0373711585999	31
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.half_0	40	0.1.0.78	search with cache (only 1: unfold half; only 1: unfold half_aux in *; only 1: rewrite recursion_0; only 1: f_equiv').	0.903880834579	6152
Coq.Numbers.Natural.Abstract.NDefOps.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_r	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.b2n_proper	40	3.3.3.6.3	search with cache (only 1: intros x x' Hx; only 1: symmetry; only 1: apply eqb_eq; only 1: rewrite Hx in *; only 1: now apply eqb_eq).	14.7511060238	18772
Coq.Numbers.Natural.Abstract.NBits.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.testbit_false	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now nzsimpl).	0.0584659576416	11
Coq.Numbers.Natural.Abstract.NBits.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.b2n_bit0	40	0.6.0.6.0	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	3.9905230999	1560
Coq.Numbers.Natural.Abstract.NBits.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.bits_0	40	0.0.7.7.2.0.0.1	search with cache (only 1: intros a; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: f_equiv; only 1: order'; only 1: order_nz).	36.4184160233	37846
Coq.Numbers.Natural.Abstract.NBits.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.bit0_mod	40	1.0.3.2	search with cache (only 1: intros a0; only 1: rewrite testbit_spec' by trivial; only 1: symmetry; only 1: now nzsimpl).	0.36284995079	78
Coq.Numbers.Natural.Abstract.NBits.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.double_bits_succ	40	0.1	search with cache (only 1: intros a m; only 1: apply testbit_even_succ, le_0_l).	0.0135281085968	3
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.testbit_eqf	40	0.0.5.0.4.1.1	search with cache (only 1: repeat red; only 1: intros a b H; only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite H  at 1; only 1: rewrite testbit_spec'; only 1: f_equiv).	5.78405594826	4952
Coq.Numbers.Natural.Abstract.NBits.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_r	40	0.0.1.5.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: symmetry; only 1: now nzsimpl).	0.210533857346	65
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_l	40	0.3.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0632970333099	16
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0	40
Coq.Numbers.Natural.Abstract.NBits.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.land_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0672399997711	5
Coq.Numbers.Natural.Abstract.NBits.lor_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0682058334351	5
Coq.Numbers.Natural.Abstract.NBits.ldiff_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0791509151459	5
Coq.Numbers.Natural.Abstract.NBits.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0250568389893	4
Coq.Numbers.Natural.Abstract.NBits.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_0_l	40	7.0.4	search with cache (only 1: intros a0; only 1: bitwise; only 1: now nzsimpl).	0.672847032547	454
Coq.Numbers.Natural.Abstract.NBits.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0262348651886	4
Coq.Numbers.Natural.Abstract.NBits.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.land_0_l	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0260860919952	6
Coq.Numbers.Natural.Abstract.NBits.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_l	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.150662899017	5
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_r	40	7.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.377562999725	159
Coq.Numbers.Natural.Abstract.NBits.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.setbit_wd	40	0.1.3.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.12403512001	14
Coq.Numbers.Natural.Abstract.NBits.clearbit_wd	40	4.3.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: now rewrite 2!shiftl_mul_pow2, Ha, Hb).	0.469979047775	76
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.lnot_0_l	40	2.0.13.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: unfold lnot; only 1: bitwise; only 1: symmetry; only 1: apply xorb_false_l).	8.68614196777	7871
Coq.Numbers.Natural.Abstract.NBits.lnot_ones	40	4.1.1.2	search with cache (only 1: intros a; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.68492603302	462
Coq.Numbers.Natural.Abstract.NBits.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag	40	21.2.2.0	search with cache (only 1: intros a n; only 1: unfold lnot; only 1: bitwise; only 1: now destruct a.[m]).	18.2082080841	32675
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_r	40	0.0.14.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	4.21855592728	4807
Coq.Numbers.Natural.Abstract.NBits.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.hom_nat_iso	40	0.0.1.11.0.0.0.0.0.0.63	search with cache (only 1: constructor 1; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: solve_proper; only 1: repeat red; only 1: intros; only 1: now f_equiv).	2.9497859478	12438
Coq.Numbers.Natural.Abstract.NIso.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.add_pred_l	40	0.0.1.0.1.0.5.1	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: rewrite pred_succ; only 1: now nzsimpl).	0.96112203598	709
Coq.Numbers.Natural.Abstract.NAdd.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.even_pred	40
Coq.Numbers.Natural.Abstract.NParity.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_l	40	2.1.1.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.561967134476	111
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_r	40	2.1.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.303894042969	83
Coq.Numbers.Natural.Abstract.NPow.pow_succ_r'	40
Coq.Numbers.Natural.Abstract.NPow.pow_0_l	40	2.1.3.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.18625497818	86
Coq.Numbers.Natural.Abstract.NPow.pow_1_l	40	48.1.10.12.0	search with cache (only 1: intros; only 1: nzsimpl; only 1: nzsimpl'; only 1: now nzsimpl; only 1: apply le_0_l).	28.3800098896	46593
Coq.Numbers.Natural.Abstract.NPow.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_mul_l	40	0.0.0.1.1.0.0.1.0.0.0.0.1.2.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	8.40672898293	3322
Coq.Numbers.Natural.Abstract.NPow.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0	40	0.7.21.0	search with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).	8.93087482452	24806
Coq.Numbers.Natural.Abstract.NPow.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono	40	2.0.2.2.0.0.1	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: trivial; only 1: order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: order).	0.890915155411	871
Coq.Numbers.Natural.Abstract.NPow.pow_inj_l	40	0.3.0.0.1.6.6	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	2.30456781387	3664
Coq.Numbers.Natural.Abstract.NPow.pow_inj_r	40	0.2.0.0.3.7.0.0	search with cache (only 1: intros a b c Hc; only 1: intro LE; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	5.95345807076	3288
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r_iff	40	0.0.8.1.0.0.0.0.1	search with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	4.38387608528	4218
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_r	40	2.1.2.0.0.2.2.2.0.2.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: tauto; only 1: rewrite <- add_le_mono_r; only 1: tauto; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: tauto; only 1: rewrite <- add_le_mono_r; only 1: tauto).	28.2305798531	21137
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_r	40	1.2.0.1.1.2.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: tauto; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: tauto; only 1: now rewrite <- ?add_le_mono_r).	9.59758615494	5038
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_l	40	1.2.0.1.2.2.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: tauto; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: tauto; only 1: now apply mul_le_mono_l).	12.9132258892	5899
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_r	40	0.2.0.1.0.2.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: tauto; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: tauto; only 1: now apply mul_le_mono_r).	6.49556303024	2703
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_alt	40	4	search with cache (only 1: tauto).	0.00789999961853	5
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0_any	40	1.1.0.1.1.3	search with cache (only 1: intros m' Hm'; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.288190126419	270
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_l	40	7.1	search with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.0439059734344	42
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_l	40	0.9.2	search with cache (only 1: intros q; only 1: unfold lcm; only 1: now nzsimpl).	0.177358865738	349
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_r	40	0.10.9.2	search with cache (only 1: intros q; only 1: unfold lcm; only 1: rewrite <- gcd_div_swap; only 1: now nzsimpl).	2.46678805351	2868
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_l	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_r	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_diag	40	3.10.5.2	search with cache (only 1: intros EQ; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_r).	0.997861862183	2093
Coq.Numbers.Natural.Abstract.NLcm.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_eq_r	40	1.14.8.0	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_r).	2.49658489227	3988
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_r	40	0.10.3.3	search with cache (only 1: intros n m p LE; only 1: apply le_sub_le_add_r; only 1: rewrite LE; only 1: auto using sub_add_le).	11.5772578716	7657
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_0	40	0.23.3.8	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl; only 1: rewrite add_comm; only 1: now nzsimpl).	1.98320794106	2886
Coq.Numbers.NatInt.NZSqrt.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn	40	0.0.0.0.1.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0158967971802	7
Coq.Numbers.NatInt.NZSqrt.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_nonneg	40	0.3.1.0.0.0.2	search with cache (only 1: intros EQ; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.341637849808	488
Coq.Numbers.NatInt.NZSqrt.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_0	40	11	search with cache (only 1: now rewrite sqrt_up_eqn0).	0.148810863495	113
Coq.Numbers.NatInt.NZSqrt.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.div_unique	40
Coq.Numbers.NatInt.NZDiv.mod_unique	40	0.0.0.1.0.0.1.0.1.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.735311985016	483
Coq.Numbers.NatInt.NZDiv.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.div_same	40
Coq.Numbers.NatInt.NZDiv.mod_same	40
Coq.Numbers.NatInt.NZDiv.div_small	40
Coq.Numbers.NatInt.NZDiv.mod_small	40
Coq.Numbers.NatInt.NZDiv.div_0_l	40	0.0.13.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: now apply eq_le_incl; only 1: intuition; only 1: now nzsimpl).	1.08374786377	2511
Coq.Numbers.NatInt.NZDiv.mod_0_l	40	0.0.13.0.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: now apply eq_le_incl; only 1: intuition; only 1: now nzsimpl).	0.505313873291	974
Coq.Numbers.NatInt.NZDiv.div_1_r	40
Coq.Numbers.NatInt.NZDiv.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.div_1_l	40
Coq.Numbers.NatInt.NZDiv.mod_1_l	40
Coq.Numbers.NatInt.NZDiv.div_mul	40
Coq.Numbers.NatInt.NZDiv.mod_mul	40
Coq.Numbers.NatInt.NZDiv.mod_le	40
Coq.Numbers.NatInt.NZDiv.div_pos	40
Coq.Numbers.NatInt.NZDiv.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.div_lt	40
Coq.Numbers.NatInt.NZDiv.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.div_exact	40
Coq.Numbers.NatInt.NZDiv.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.mod_add	40
Coq.Numbers.NatInt.NZDiv.div_add	40
Coq.Numbers.NatInt.NZDiv.div_add_l	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.mod_mod	40
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.mul_mod	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.add_mod	40
Coq.Numbers.NatInt.NZDiv.div_div	40
Coq.Numbers.NatInt.NZDiv.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.mod_divides	40
Coq.Numbers.NatInt.NZAdd.add_0_r	40
Coq.Numbers.NatInt.NZAdd.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.add_succ_comm	40	1.0.0.1.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0679590702057	8
Coq.Numbers.NatInt.NZAdd.add_comm	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0598058700562	6
Coq.Numbers.NatInt.NZAdd.add_1_l	40
Coq.Numbers.NatInt.NZAdd.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0190889835358	2
Coq.Numbers.NatInt.NZAdd.add_assoc	40	0.0.0.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0519969463348	6
Coq.Numbers.NatInt.NZAdd.add_cancel_l	40	0.1.0.4.0.12.5	search with cache (only 1: intros n m; only 1: apply bi_induction; only 1: solve_proper; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	12.6806240082	12588
Coq.Numbers.NatInt.NZAdd.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0551009178162	6
Coq.Numbers.NatInt.NZAdd.add_shuffle0	40	0.0.0.0.3.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.122395038605	23
Coq.Numbers.NatInt.NZAdd.add_shuffle1	40	0.0.0.0.4.2.0.0	search with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.50776195526	584
Coq.Numbers.NatInt.NZAdd.add_shuffle2	40	1.0.0.0.2.8.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: apply add_shuffle0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.31329989433	1525
Coq.Numbers.NatInt.NZAdd.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.061665058136	6
Coq.Numbers.NatInt.NZAdd.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0190780162811	2
Coq.Numbers.NatInt.NZOrder.le_wd	40
Coq.Numbers.NatInt.NZOrder.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.le_refl	40
Coq.Numbers.NatInt.NZOrder.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.nle_succ_diag_l	40	7.0.1.0	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: now f_equiv).	0.586502075195	108
Coq.Numbers.NatInt.NZOrder.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.lt_trans	40
Coq.Numbers.NatInt.NZOrder.le_trans	40
Coq.Numbers.NatInt.NZOrder.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.le_preorder	40
Coq.Numbers.NatInt.NZOrder.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.lt_neq	40
Coq.Numbers.NatInt.NZOrder.le_neq	40
Coq.Numbers.NatInt.NZOrder.eq_le_incl	40	7	search with cache (only 1: order).	0.0412938594818	30
Coq.Numbers.NatInt.NZOrder.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0205760002136	3
Coq.Numbers.NatInt.NZOrder.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0227241516113	3
Coq.Numbers.NatInt.NZOrder.le_stepl	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.020681142807	4
Coq.Numbers.NatInt.NZOrder.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0229449272156	3
Coq.Numbers.NatInt.NZOrder.le_lt_trans	40	2	search with cache (only 1: order).	0.108647108078	61
Coq.Numbers.NatInt.NZOrder.lt_le_trans	40	1	search with cache (only 1: order).	0.0256021022797	22
Coq.Numbers.NatInt.NZOrder.le_antisymm	40	8	search with cache (only 1: order).	0.0532789230347	28
Coq.Numbers.NatInt.NZOrder.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.lt_succ_l	40	0.8.2	search with cache (only 1: intros; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0866498947144	198
Coq.Numbers.NatInt.NZOrder.le_le_succ_r	40	3.7.4.0.2	search with cache (only 1: intros x y; only 1: intro H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: tauto).	3.49292111397	2899
Coq.Numbers.NatInt.NZOrder.lt_lt_succ_r	40	2.3.14.5.4.0	search with cache (only 1: intros n m LE; only 1: generalize (le_gt_cases n m); only 1: intuition; only 1: rewrite lt_succ_r; only 1: tauto; only 1: order).	15.0615139008	29581
Coq.Numbers.NatInt.NZOrder.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.succ_le_mono	40	0.9.4.0	search with cache (only 1: intros n m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite <- le_succ_l; only 1: reflexivity).	3.32557797432	1688
Coq.Numbers.NatInt.NZOrder.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.le_0_1	40
Coq.Numbers.NatInt.NZOrder.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.lt_0_2	40
Coq.Numbers.NatInt.NZOrder.le_0_2	40
Coq.Numbers.NatInt.NZOrder.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.lt_ge_cases	40	0.0.1.0.0.3	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.186546087265	45
Coq.Numbers.NatInt.NZOrder.le_ge_cases	40	1.1.2.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0656659603119	24
Coq.Numbers.NatInt.NZOrder.lt_gt_cases	40
Coq.Numbers.NatInt.NZOrder.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.eq_dne	40	0.8.7.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	7.44274401665	3056
Coq.Numbers.NatInt.NZOrder.le_ngt	40	0.4.0.0.1	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intro H; only 1: intuition order).	0.384906053543	110
Coq.Numbers.NatInt.NZOrder.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0172560214996	1
Coq.Numbers.NatInt.NZOrder.lt_decidable	40	4.9.2.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: (right; order) || (left; order); only 1: now left).	13.5285348892	7673
Coq.Numbers.NatInt.NZOrder.lt_dne	40	0.4.0.2.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intro H; only 1: intuition order).	0.58194899559	240
Coq.Numbers.NatInt.NZOrder.nle_gt	40	2	search with cache (only 1: intuition order).	0.259994983673	108
Coq.Numbers.NatInt.NZOrder.lt_nge	40	0	search with cache (only 1: intuition order).	0.0542948246002	1
Coq.Numbers.NatInt.NZOrder.le_decidable	40	0.9.10.2.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: (right; order) || (left; order); only 1: right; only 1: intuition order).	30.5005629063	6820
Coq.Numbers.NatInt.NZOrder.le_dne	40	2.2.0.1.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order).	0.371629953384	46
Coq.Numbers.NatInt.NZOrder.nlt_succ_r	40	3.2.16.0	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: intuition order).	13.1014060974	11561
Coq.Numbers.NatInt.NZOrder.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.rbase	40
Coq.Numbers.NatInt.NZOrder.A'A_right	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.lbase	40
Coq.Numbers.NatInt.NZOrder.A'A_left	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.order_induction	40
Coq.Numbers.NatInt.NZOrder.order_induction'	40
Coq.Numbers.NatInt.NZOrder.lt_ind	40
Coq.Numbers.NatInt.NZOrder.le_ind	40	15	search with cache (only 1: apply right_induction).	0.807891130447	1395
Coq.Numbers.NatInt.NZOrder.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.lt_wf	40
Coq.Numbers.NatInt.NZOrder.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.initial_alt	40
Coq.Numbers.NatInt.NZDomain.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.initial_unique	40
Coq.Numbers.NatInt.NZDomain.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_zero	40	10	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0315458774567	21
Coq.Numbers.NatInt.NZDomain.ofnat_succ	40	1.1	search with cache (only 1: intros; only 1: reflexivity).	0.0138890743256	4
Coq.Numbers.NatInt.NZDomain.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_gt_0	40	5.22.6.3	search with cache (only 1: simpl; only 1: induction n as [| n IH]; only 1: apply lt_succ_diag_r; only 1: now apply lt_lt_succ_r).	4.16154980659	9685
Coq.Numbers.NatInt.NZDomain.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.ofnat_add	40	0.2.0.0.1.3.0.2.7	search with cache (only 1: induction n; only 1: simpl; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	1.27126407623	2442
Coq.Numbers.NatInt.NZDomain.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.pow_0_l	40
Coq.Numbers.NatInt.NZPow.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.pow_1_r	40	22.22.22.1	search with cache (only 1: intros; only 1: nzsimpl'; only 1: solve_proper; only 1: solve_proper).	5.22147393227	10813
Coq.Numbers.NatInt.NZPow.pow_1_l	40
Coq.Numbers.NatInt.NZPow.pow_2_r	40
Coq.Numbers.NatInt.NZPow.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.pow_add_r	40
Coq.Numbers.NatInt.NZPow.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.divide_wd	40
Coq.Numbers.NatInt.NZGcd.divide_1_l	40	19.43.1.72.18	search with cache (only 1: intro n; only 1: compute; only 1: exists n; only 1: nzsimpl'; only 1: solve_proper).	18.5142621994	86359
Coq.Numbers.NatInt.NZGcd.divide_0_r	40	28.1.71.0	search with cache (only 1: intros n; only 1: compute; only 1: exists 0; only 1: now nzsimpl).	14.9794609547	40420
Coq.Numbers.NatInt.NZGcd.divide_0_l	40	2.13.16.9	search with cache (only 1: intros n H; only 1: destruct H; only 1: rewrite mul_0_r in H; only 1: tauto).	1.52099895477	4463
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.divide_refl	40
Coq.Numbers.NatInt.NZGcd.divide_trans	40
Coq.Numbers.NatInt.NZGcd.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_r	40	0.0.6.0	search with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	0.0490870475769	18
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_r	40	0.0.0.0.0.4.1.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	1.53073906898	1208
Coq.Numbers.NatInt.NZGcd.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.divide_factor_r	40	7.11.0	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.277184009552	515
Coq.Numbers.NatInt.NZGcd.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.gcd_comm	40	3.1.6.7.0.1.0	search with cache (only 1: intros n m; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: trivial using gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	3.65178704262	8632
Coq.Numbers.NatInt.NZGcd.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.gcd_0_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.gcd_1_l	40
Coq.Numbers.NatInt.NZGcd.gcd_1_r	40
Coq.Numbers.NatInt.NZGcd.gcd_diag_nonneg	40	6.0.2.8.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: tauto; only 1: intros; only 1: now split).	0.502145051956	929
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_r	40	0.7.4.5.0.0	search with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	6.7465429306	7046
Coq.Numbers.NatInt.NZGcd.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.gcd_mul_diag_l	40
Coq.Numbers.NatInt.NZGcd.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.Even_wd	40
Coq.Numbers.NatInt.NZParity.Odd_wd	40
Coq.Numbers.NatInt.NZParity.even_wd	40
Coq.Numbers.NatInt.NZParity.odd_wd	40
Coq.Numbers.NatInt.NZParity.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.double_below	40
Coq.Numbers.NatInt.NZParity.double_above	40
Coq.Numbers.NatInt.NZParity.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.negb_odd	40
Coq.Numbers.NatInt.NZParity.negb_even	40	0.0.0.0.0.0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.51499795914	1115
Coq.Numbers.NatInt.NZParity.even_0	40
Coq.Numbers.NatInt.NZParity.odd_0	40
Coq.Numbers.NatInt.NZParity.odd_1	40
Coq.Numbers.NatInt.NZParity.even_1	40
Coq.Numbers.NatInt.NZParity.even_2	40
Coq.Numbers.NatInt.NZParity.odd_2	40
Coq.Numbers.NatInt.NZParity.Odd_succ	40
Coq.Numbers.NatInt.NZParity.odd_succ	40
Coq.Numbers.NatInt.NZParity.even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.even_succ_succ	40	0.11.4	search with cache (only 1: intros x; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.565952062607	573
Coq.Numbers.NatInt.NZParity.odd_succ_succ	40	0.12.4	search with cache (only 1: intros x; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.95064997673	1071
Coq.Numbers.NatInt.NZParity.even_add	40
Coq.Numbers.NatInt.NZParity.odd_add	40
Coq.Numbers.NatInt.NZParity.even_mul	40
Coq.Numbers.NatInt.NZParity.odd_mul	40
Coq.Numbers.NatInt.NZParity.even_add_even	40	0.3.5.2.1	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite <- even_spec in H; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	18.4428300858	7788
Coq.Numbers.NatInt.NZParity.odd_add_even	40	0.1.4.2.0	search with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	0.788949966431	418
Coq.Numbers.NatInt.NZParity.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_2	40	2.9.2.0.3.0	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: nzsimpl'; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	31.8615648746	8435
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.134097099304	6
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.105666160583	6
Coq.Numbers.NatInt.NZAddOrder.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_l	40	10.1.0.0.7.10	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	9.18953585625	10259
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_r	40	10.1.0.0.7.10	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	13.4289548397	16176
Coq.Numbers.NatInt.NZAddOrder.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_cases	40	4.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0421679019928	7
Coq.Numbers.NatInt.NZAddOrder.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0283918380737	3
Coq.Numbers.NatInt.NZAddOrder.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.mul_0_r	40	2.0.0.0.1.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.0737218856812	9
Coq.Numbers.NatInt.NZMul.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.mul_comm	40	2.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0883300304413	8
Coq.Numbers.NatInt.NZMul.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.mul_assoc	40
Coq.Numbers.NatInt.NZMul.mul_1_l	40	0.0.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl'; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0610599517822	5
Coq.Numbers.NatInt.NZMul.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0345020294189	2
Coq.Numbers.NatInt.NZMul.mul_shuffle0	40	0.0.0.1.0.11.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	10.7142648697	3008
Coq.Numbers.NatInt.NZMul.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.log2_unique	40
Coq.Numbers.NatInt.NZLog.log2_wd	40
Coq.Numbers.NatInt.NZLog.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.log2_unique'	40
Coq.Numbers.NatInt.NZLog.log2_pow2	40
Coq.Numbers.NatInt.NZLog.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.log2_1	40	0.6.6.0.10.1.10.13	search with cache (only 1: apply log2_unique' with 0; only 1: order_pos; only 1: split; only 1: order_pos; only 1: order_pos; only 1: nzsimpl; only 1: nzsimpl'; only 1: now nzsimpl).	8.37736701965	6593
Coq.Numbers.NatInt.NZLog.log2_2	40	0.1.3.1.7.10.1.3.0.3.0	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: order_pos; only 1: rewrite two_succ  at 2; only 1: split; only 1: order_pos; only 1: order_pos; only 1: rewrite two_succ  at 2; only 1: rewrite two_succ  at 2; only 1: nzsimpl; only 1: now nzsimpl').	22.4424271584	14266
Coq.Numbers.NatInt.NZLog.log2_pos	40
Coq.Numbers.NatInt.NZLog.log2_null	40
Coq.Numbers.NatInt.NZLog.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_double	40
Coq.Numbers.NatInt.NZLog.log2_same	40
Coq.Numbers.NatInt.NZLog.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn	40	0.0.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0227901935577	6
Coq.Numbers.NatInt.NZLog.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_up_nonpos	40	0.2.1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	0.0258979797363	10
Coq.Numbers.NatInt.NZLog.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.log2_up_nonneg	40	0.12.2.0.1.1.0	search with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intro LE; only 1: order_pos; only 1: order).	5.6478331089	5494
Coq.Numbers.NatInt.NZLog.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_1	40	2.3	search with cache (only 1: apply log2_up_eqn0; only 1: now nzsimpl').	0.050793170929	28
Coq.Numbers.NatInt.NZLog.log2_up_2	40
Coq.Numbers.NatInt.NZLog.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.log2_up_null	40
Coq.Numbers.NatInt.NZLog.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_double	40
Coq.Numbers.NatInt.NZLog.log2_up_same	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.eq_sym_iff	40	5.0	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	0.0171720981598	25
Coq.Numbers.NatInt.NZBase.neq_sym	40	21.0	search with cache (only 1: intros; only 1: simpl_relation).	0.228691101074	649
Coq.Numbers.NatInt.NZBase.eq_stepl	40	3.58.14.0	search with cache (only 1: intros; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: setoid_rewrite  <- H; only 1: tauto).	11.4933750629	56793
Coq.Numbers.NatInt.NZBase.succ_inj	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_r	40	0.0.0.4.0.8	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	10.2618699074	5710
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_r	40	0.0.0.0.0.5.0.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: tauto).	1.65860581398	768
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_neg	40	7.5.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.837567090988	431
Coq.Numbers.NatInt.NZMulOrder.mul_neg_pos	40	6.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0624639987946	9
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_r	40	0.0.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: tauto; only 1: tauto).	0.0141570568085	5
Coq.Numbers.NatInt.NZMulOrder.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_lt_mono_nonneg	40	18.0	search with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	1.00549316406	987
Coq.Numbers.NatInt.NZMulOrder.square_le_mono_nonneg	40	0.0.0.0.20.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	4.59865903854	3926
Coq.Numbers.NatInt.NZMulOrder.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.eq_refl	40	8.0	search with cache (only 1: intros; only 1: solve_proper).	0.0117139816284	10
Coq.Structures.OrdersTac.le_refl	40
Coq.Structures.OrdersTac.lt_irrefl	40	2.40.18.0	search with cache (only 1: Bool.destr_bool; only 1: simpl_relation; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: tauto).	3.56557297707	12407
Coq.Structures.OrdersTac.eq_sym	40	1	search with cache (only 1: now symmetry).	0.0115480422974	11
Coq.Structures.OrdersTac.le_antisym	40
Coq.Structures.OrdersTac.neq_sym	40	0	search with cache (only 1: auto with *).	0.00963306427002	1
Coq.Structures.OrdersTac.trans	40
Coq.Structures.OrdersTac.eq_neq	40
Coq.Structures.OrdersTac.neq_eq	40	1	search with cache (only 1: eauto using eq_trans, eq_sym).	1.02150797844	42
Coq.Structures.OrdersTac.not_neq_eq	40
Coq.Structures.OrdersTac.not_ge_lt	40
Coq.Structures.OrdersTac.not_gt_le	40	0.2.0.5.14.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	1.49440383911	5214
Coq.Structures.OrdersTac.le_neq_lt	40	0.1.0	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition).	0.0170590877533	4
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.lt_compat	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrdersEx.bits_lt_antirefl	40
Coq.Structures.OrdersEx.bits_lt_trans	40
Coq.Structures.OrdersEx.lt_compat	40	21	search with cache (only 1: solve_proper).	0.745097160339	2145
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrderedTypeEx.lt_trans	40	25.1.12	search with cache (only 1: intros Heq; only 1: intros; only 1: now try rewrite H).	2.31613087654	2039
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_trans	40	24.1	search with cache (only 1: intros; only 1: now try rewrite H).	0.89506983757	648
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_refl	40	6.0	search with cache (only 1: intros; only 1: now subst).	0.0374989509583	8
Coq.Structures.OrderedTypeEx.eq_sym	40	8.8.2	search with cache (only 1: intros x y H; only 1: destruct H; only 1: now subst).	0.586221933365	540
Coq.Structures.OrderedTypeEx.eq_trans	40
Coq.Structures.OrderedTypeEx.lt_trans	40	1.41.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: compute; only 1: intuition eauto with ordered_type).	13.7773478031	32545
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.le_lteq	40	3.1.0	search with cache (only 1: Bool.destr_bool; only 1: compute; only 1: tauto).	0.0216290950775	7
Coq.Structures.Orders.lt_total	40
Coq.Structures.Orders.leb_le	40
Coq.Structures.Orders.leb_total	40
Coq.Structures.Orders.leb_trans	40
Coq.Structures.Orders.compare_spec	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.eq_equiv	40
Coq.Structures.Orders.lt_strorder	40
Coq.Structures.Orders.lt_compat	40
Coq.Structures.Orders.le_lteq	40
Coq.Structures.DecidableTypeEx.eq_refl	40	8.0	search with cache (only 1: intros EQ; only 1: now subst).	0.0348529815674	10
Coq.Structures.DecidableTypeEx.eq_sym	40	19.1.1.0.0.0.5	search with cache (only 1: induction x; only 1: intros y LT; only 1: red; only 1: simpl; only 1: inversion LT; only 1: inversion LT; only 1: auto).	2.24973416328	7211
Coq.Structures.DecidableTypeEx.eq_trans	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.Equalities.eq_equiv	40	4.29.18.18.119	search with cache (only 1: constructor; only 1: simpl_relation; only 1: simpl_relation; only 1: intros x y EQ WF; only 1: eauto).	9.28232121468	55944
Coq.Structures.Equalities.eqb_eq	40
Coq.Structures.Equalities.eq_dec	40
Coq.Structures.Equalities.eqb_compat	40
Coq.Structures.Equalities.eqb_spec	40
Coq.Structures.Equalities.eqb_neq	40
Coq.Structures.Equalities.eqb_refl	40
Coq.Structures.Equalities.eqb_sym	40
Coq.Structures.OrderedType.eq_dec	40
Coq.Structures.OrderedType.eq_equiv	40
Coq.Structures.OrderedType.lt_antirefl	40
Coq.Structures.OrderedType.lt_strorder	40
Coq.Structures.OrderedType.lt_eq	40
Coq.Structures.OrderedType.eq_lt	40
Coq.Structures.OrderedType.lt_compat	40
Coq.Structures.OrderedType.lt_total	40
Coq.Structures.OrderedType.le_lteq	40	6.1.0.0.2	search with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	3.43942189217	1729
Coq.Structures.OrderedType.le_eq	40
Coq.Structures.OrderedType.eq_le	40	0.4	search with cache (only 1: intros H; only 1: order).	1.030823946	23
Coq.Structures.OrderedType.neq_eq	40	0	search with cache (only 1: order).	0.0152831077576	1
Coq.Structures.OrderedType.eq_neq	40	0	search with cache (only 1: order).	0.0154910087585	1
Coq.Structures.OrderedType.le_lt_trans	40	0	search with cache (only 1: order).	0.0146980285645	1
Coq.Structures.OrderedType.lt_le_trans	40	0	search with cache (only 1: order).	0.0139391422272	1
Coq.Structures.OrderedType.le_neq	40	0	search with cache (only 1: order).	0.0143489837646	1
Coq.Structures.OrderedType.le_trans	40	0	search with cache (only 1: order).	0.0150208473206	1
Coq.Structures.OrderedType.le_antisym	40	0	search with cache (only 1: order).	0.014365196228	1
Coq.Structures.OrderedType.neq_sym	40	0	search with cache (only 1: order).	0.0141530036926	1
Coq.Structures.OrderedType.lt_le	40	0	search with cache (only 1: order).	0.0133709907532	1
Coq.Structures.OrderedType.gt_not_eq	40	0	search with cache (only 1: order).	0.013955116272	1
Coq.Structures.OrderedType.eq_not_lt	40	0	search with cache (only 1: order).	0.0142569541931	1
Coq.Structures.OrderedType.eq_not_gt	40	0	search with cache (only 1: order).	0.0139150619507	1
Coq.Structures.OrderedType.lt_not_gt	40	0	search with cache (only 1: order).	0.0137679576874	1
Coq.Structures.OrderedType.elim_compare_eq	40
Coq.Structures.OrderedType.elim_compare_lt	40	1.1.0.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: order; only 1: order).	0.105932950974	21
Coq.Structures.OrderedType.elim_compare_gt	40	0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: order; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.117100954056	43
Coq.Structures.OrderedType.lt_dec	40
Coq.Structures.OrderedType.eqb_alt	40
Coq.Structures.OrderedType.In_eq	40	8.2.12.2.0.0.1.0.1.1	search with cache (only 1: simple induction l; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intros x l' H H0; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: generalize H3; only 1: order; only 1: eauto).	29.2703299522	67625
Coq.Structures.OrderedType.ListIn_In	40
Coq.Structures.OrderedType.Inf_lt	40
Coq.Structures.OrderedType.Inf_eq	40	4.1.5.0.2	search with cache (only 1: destruct l; only 1: constructor; only 1: intros x y; only 1: intros H; only 1: now rewrite H).	3.08145499229	2448
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.ListIn_Inf	40	1.0.0.0.0.0.0.0	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.0269870758057	9
Coq.Structures.OrderedType.In_Inf	40	6.2.0.0.1	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros x l' H H0; only 1: intuition).	0.404608011246	437
Coq.Structures.OrderedType.Inf_alt	40
Coq.Structures.OrderedType.Sort_NoDup	40
Coq.Structures.OrderedType.eqke_eqk	40	21.10	search with cache (only 1: induction 1; only 1: auto).	0.446799993515	999
Coq.Structures.OrderedType.ltk_right_r	40	0	search with cache (only 1: intuition).	0.0156438350677	1
Coq.Structures.OrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0113320350647	1
Coq.Structures.OrderedType.eqk_refl	40	0	search with cache (only 1: intuition).	0.0169849395752	1
Coq.Structures.OrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.0115900039673	1
Coq.Structures.OrderedType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0182089805603	2
Coq.Structures.OrderedType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0249018669128	2
Coq.Structures.OrderedType.eqk_trans	40	23.4.0.1	search with cache (only 1: intuition; only 1: compute in H; only 1: compute; only 1: now rewrite H).	1.95554900169	5034
Coq.Structures.OrderedType.eqke_trans	40
Coq.Structures.OrderedType.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.0182979106903	2
Coq.Structures.OrderedType.ltk_not_eqk	40	1.2	search with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0177900791168	5
Coq.Structures.OrderedType.ltk_not_eqke	40	1.0.4.17.0.1.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: compute in H; only 1: destruct H0; only 1: destruct H1; only 1: contradict H0; only 1: eauto with ordered_type).	4.08048391342	7083
Coq.Structures.OrderedType.eqk_equiv	40	1.1.1.146	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	2.13411402702	18141
Coq.Structures.OrderedType.eqke_equiv	40	1.1.0.0.0.0	search with cache (only 1: constructor; only 1: constructor; only 1: eauto with ordered_type; only 1: congruence; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.502843856812	16
Coq.Structures.OrderedType.ltk_strorder	40	2.3.21.5.38.0	search with cache (only 1: constructor; only 1: intro H; only 1: destruct H; only 1: compute; only 1: order; only 1: eauto with ordered_type).	1.73262000084	10261
Coq.Structures.OrderedType.ltk_compat	40
Coq.Structures.OrderedType.ltk_compat'	40
Coq.Structures.OrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0152788162231	2
Coq.Structures.OrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.0152730941772	1
Coq.Structures.OrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0150661468506	1
Coq.Structures.OrderedType.InA_eqke_eqk	40	1.9.22.0	search with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: eauto with ordered_type).	12.533618927	16050
Coq.Structures.OrderedType.In_alt	40
Coq.Structures.OrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.In_eq	40
Coq.Structures.OrderedType.Inf_eq	40
Coq.Structures.OrderedType.Inf_lt	40
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.In_inv	40
Coq.Structures.OrderedType.In_inv_2	40	0.0.1.0.3.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: invlist InA; only 1: eauto with ordered_type; only 1: intros; only 1: eauto with ordered_type).	0.100224018097	30
Coq.Structures.OrderedType.In_inv_3	40	1.0.10.3	search with cache (only 1: unfold eqke; only 1: inversion 1; only 1: intuition; only 1: intuition).	1.67460799217	1208
Coq.Structures.OrdersFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.compare_eq	40	5.5.1.1.1.0.45	search with cache (only 1: apply Build_equivalence; only 1: case compare_spec; only 1: easy; only 1: CRelationClasses.simpl_crelation; only 1: CRelationClasses.simpl_crelation; only 1: firstorder; only 1: firstorder).	13.2508769035	26026
Coq.Structures.OrdersFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.compare_compat	40
Coq.Structures.OrdersFacts.compare_refl	40
Coq.Structures.OrdersFacts.compare_antisym	40
Coq.Structures.OrdersFacts.le_compat	40
Coq.Structures.OrdersFacts.le_preorder	40
Coq.Structures.OrdersFacts.le_order	40
Coq.Structures.OrdersFacts.le_antisym	40	7.24	search with cache (only 1: hnf; only 1: iorder).	0.36806178093	971
Coq.Structures.OrdersFacts.le_not_gt_iff	40	12	search with cache (only 1: iorder).	0.693339824677	594
Coq.Structures.OrdersFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0161759853363	1
Coq.Structures.OrdersFacts.le_or_gt	40
Coq.Structures.OrdersFacts.lt_or_ge	40	1.1.3.0.4.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.710124015808	477
Coq.Structures.OrdersFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0188798904419	1
Coq.Structures.OrdersFacts.compare_le_iff	40	10.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.690778017044	392
Coq.Structures.OrdersFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0197858810425	3
Coq.Structures.OrdersFacts.lt_dec	40
Coq.Structures.OrdersFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.eqb_alt	40
Coq.Structures.OrdersFacts.eqb_compat	40
Coq.Structures.OrdersFacts.lt_not_eq	40	7.2	search with cache (only 1: intro H; only 1: order).	0.0654890537262	49
Coq.Structures.OrdersFacts.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.020613193512	1
Coq.Structures.OrdersFacts.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0182139873505	1
Coq.Structures.OrdersFacts.le_eq	40	12.6	search with cache (only 1: reduce; only 1: order).	9.58871412277	891
Coq.Structures.OrdersFacts.eq_le	40	0.1	search with cache (only 1: intro H; only 1: order).	1.01233291626	3
Coq.Structures.OrdersFacts.neq_eq	40	0	search with cache (only 1: order).	0.0125639438629	1
Coq.Structures.OrdersFacts.eq_neq	40	0	search with cache (only 1: order).	0.0125410556793	1
Coq.Structures.OrdersFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0114469528198	1
Coq.Structures.OrdersFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.011547088623	1
Coq.Structures.OrdersFacts.le_trans	40	0	search with cache (only 1: order).	0.0123889446259	1
Coq.Structures.OrdersFacts.le_antisym	40	0	search with cache (only 1: order).	0.0120658874512	1
Coq.Structures.OrdersFacts.le_neq	40	0	search with cache (only 1: order).	0.0120050907135	1
Coq.Structures.OrdersFacts.neq_sym	40	1	search with cache (only 1: order).	0.0148408412933	11
Coq.Structures.OrdersFacts.lt_le	40	0	search with cache (only 1: order).	0.0108399391174	1
Coq.Structures.OrdersFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0114588737488	1
Coq.Structures.OrdersFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0115599632263	1
Coq.Structures.OrdersFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0113799571991	1
Coq.Structures.OrdersFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0109250545502	1
Coq.Structures.OrdersFacts.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.lt_strorder	40
Coq.Structures.OrdersFacts.lt_compat	40
Coq.Structures.OrdersFacts.le_lteq	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_eq	40	1.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0125198364258	3
Coq.Structures.OrdersFacts.compare_refl	40
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.compare_ngt_iff	40	3	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.104398965836	53
Coq.Structures.OrdersFacts.compare_nlt_iff	40	4	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.114243030548	41
Coq.Structures.OrdersFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.leb_spec0	40
Coq.Structures.OrdersFacts.leb_spec	40
Coq.Structures.OrdersFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.ltb_spec	40
Coq.Structures.OrdersFacts.leb_nle	40	0.1.0.1.13	search with cache (only 1: case leb_spec0; only 1: CRelationClasses.simpl_crelation; only 1: constructor; only 1: trivial; only 1: constructor).	4.07409596443	2593
Coq.Structures.OrdersFacts.leb_gt	40
Coq.Structures.OrdersFacts.ltb_nlt	40	0.1.1.1.19	search with cache (only 1: case ltb_spec0; only 1: CRelationClasses.simpl_crelation; only 1: constructor; only 1: trivial; only 1: constructor).	3.89404511452	4008
Coq.Structures.OrdersFacts.ltb_ge	40	0.13.13	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	4.76744008064	6282
Coq.Structures.OrdersFacts.leb_refl	40
Coq.Structures.OrdersFacts.leb_antisym	40
Coq.Structures.OrdersFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.eqb_compare	40
Coq.Structures.OrdersFacts.ltb_compare	40
Coq.Structures.OrdersFacts.leb_compare	40
Coq.Structures.OrdersLists.In_eq	40	1.0.4	search with cache (only 1: induction 1; only 1: intros; only 1: tauto).	0.0206990242004	32
Coq.Structures.OrdersLists.ListIn_In	40
Coq.Structures.OrdersLists.Inf_lt	40	14.13.0.0.1	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now rewrite H).	20.3042638302	27205
Coq.Structures.OrdersLists.Inf_eq	40	14.1	search with cache (only 1: intros; only 1: now rewrite H).	1.36924409866	1167
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.ListIn_Inf	40	1.0.0.0.0.0.0.0	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.0198998451233	9
Coq.Structures.OrdersLists.In_Inf	40	9.2.0.0.1	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros x l' H H0; only 1: intuition).	0.854343891144	1461
Coq.Structures.OrdersLists.Inf_alt	40
Coq.Structures.OrdersLists.Sort_NoDup	40
Coq.Structures.OrdersLists.ltk_compat	40
Coq.Structures.OrdersLists.ltk_compat'	40
Coq.Structures.OrdersLists.pair_compat	40	0	search with cache (only 1: firstorder).	0.00922894477844	1
Coq.Structures.OrdersLists.ltk_not_eqk	40
Coq.Structures.OrdersLists.ltk_not_eqke	40
Coq.Structures.OrdersLists.Inf_eq	40	0	search with cache (only 1: now intros <-).	0.0220940113068	1
Coq.Structures.OrdersLists.Inf_lt	40
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.Sort_NoDupA	40
Coq.Structures.OrdersLists.Sort_In_cons_1	40
Coq.Structures.OrdersLists.Sort_In_cons_2	40
Coq.Structures.OrdersLists.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.eqke_eqk	40	13	search with cache (only 1: firstorder).	0.0250010490417	60
Coq.Structures.EqualitiesFacts.eqke_def	40	0	search with cache (only 1: firstorder).	0.0103619098663	1
Coq.Structures.EqualitiesFacts.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.010244846344	1
Coq.Structures.EqualitiesFacts.eqke_1	40	1.0.0.0	search with cache (only 1: intros; only 1: compute in H; only 1: destruct H; only 1: tauto).	0.0171580314636	5
Coq.Structures.EqualitiesFacts.eqke_2	40	0	search with cache (only 1: now destruct 1).	0.0120079517365	1
Coq.Structures.EqualitiesFacts.eqk_def	40	0	search with cache (only 1: reflexivity).	0.0101070404053	1
Coq.Structures.EqualitiesFacts.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.00998091697693	1
Coq.Structures.EqualitiesFacts.eqk_1	40	1.0.1	search with cache (only 1: intros; only 1: compute in H; only 1: tauto).	0.0145111083984	5
Coq.Structures.EqualitiesFacts.InA_eqke_eqk	40	0.2.8	search with cache (only 1: do 2 rewrite InA_alt; only 1: intros; only 1: firstorder).	0.367269039154	170
Coq.Structures.EqualitiesFacts.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0255169868469	3
Coq.Structures.EqualitiesFacts.InA_eqk	40
Coq.Structures.EqualitiesFacts.In_alt	40
Coq.Structures.EqualitiesFacts.In_alt'	40
Coq.Structures.EqualitiesFacts.In_alt2	40
Coq.Structures.EqualitiesFacts.In_nil	40	1.0.0	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: now compute).	0.0290138721466	4
Coq.Structures.EqualitiesFacts.In_cons	40
Coq.Structures.EqualitiesFacts.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.In_compat	40
Coq.Structures.EqualitiesFacts.MapsTo_eq	40	5	search with cache (only 1: now intros <-).	0.110538005829	39
Coq.Structures.EqualitiesFacts.In_eq	40	0	search with cache (only 1: now intros <-).	0.0221881866455	1
Coq.Structures.EqualitiesFacts.In_inv	40	0.9	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: trivial).	0.380764007568	63
Coq.Structures.EqualitiesFacts.In_inv_2	40
Coq.Structures.EqualitiesFacts.In_inv_3	40	1.2.9.2	search with cache (only 1: intros; only 1: invlist InA; only 1: firstorder; only 1: auto).	1.20022392273	484
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.DecidableType.eqke_eqk	40	22.1	search with cache (only 1: induction 1; only 1: auto).	0.445194005966	751
Coq.Structures.DecidableType.eqk_refl	40	0	search with cache (only 1: intuition).	0.0140450000763	1
Coq.Structures.DecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.0126550197601	1
Coq.Structures.DecidableType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0185120105743	2
Coq.Structures.DecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.025829076767	2
Coq.Structures.DecidableType.eqk_trans	40	29.1	search with cache (only 1: intuition; only 1: eauto).	2.19603991508	5256
Coq.Structures.DecidableType.eqke_trans	40
Coq.Structures.DecidableType.eqk_equiv	40	1.1.1.133	search with cache (only 1: repeat constructor; only 1: eauto; only 1: eauto; only 1: eauto).	1.44641590118	13087
Coq.Structures.DecidableType.eqke_equiv	40	0.0.0.1	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0400218963623	5
Coq.Structures.DecidableType.InA_eqke_eqk	40	0.0.3.8.2	search with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: destruct H; only 1: eauto; only 1: eauto).	2.27434110641	1112
Coq.Structures.DecidableType.InA_eqk	40	1.2.0.37.1.2	search with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: elim H0; only 1: intuition; only 1: eauto; only 1: intuition).	20.4127988815	26394
Coq.Structures.DecidableType.In_alt	40
Coq.Structures.DecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.In_eq	40
Coq.Structures.DecidableType.In_inv	40
Coq.Structures.DecidableType.In_inv_2	40	0.1.0.1.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: invlist InA; only 1: eauto; only 1: congruence).	0.101962804794	27
Coq.Structures.DecidableType.In_inv_3	40	0.0.19.0.1	search with cache (only 1: unfold eqke; only 1: intros; only 1: invlist InA; only 1: intuition; only 1: intuition).	6.11245393753	6544
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.lt_not_eq	40
Coq.Structures.OrdersAlt.lt_trans	40	1.3.1.0.45	search with cache (only 1: compute; only 1: intros x y L E; only 1: intros; only 1: rewrite E; only 1: tauto).	0.439035177231	1753
Coq.Structures.OrdersAlt.compare	40
Coq.Structures.OrdersAlt.eq_equiv	40
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_eq	40
Coq.Structures.OrdersAlt.eq_lt	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.eq_dec	40
Coq.Structures.OrdersAlt.compare_sym	40
Coq.Structures.OrdersAlt.compare_Eq	40
Coq.Structures.OrdersAlt.compare_Lt	40
Coq.Structures.OrdersAlt.compare_Gt	40
Coq.Structures.OrdersAlt.compare_trans	40
Coq.Structures.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.min_r	40
Coq.Structures.GenericMinMax.max_spec	40
Coq.Structures.GenericMinMax.max_spec_le	40
Coq.Structures.GenericMinMax.Proper_instance_0	40
Coq.Structures.GenericMinMax.max_compat	40
Coq.Structures.GenericMinMax.max_unicity	40
Coq.Structures.GenericMinMax.max_unicity_ext	40
Coq.Structures.GenericMinMax.max_mono	40
Coq.Structures.GenericMinMax.max_id	40	11.6	search with cache (only 1: apply max_r; only 1: intuition order).	0.0869519710541	208
Coq.Structures.GenericMinMax.max_assoc	40
Coq.Structures.GenericMinMax.max_comm	40
Coq.Structures.GenericMinMax.le_max_l	40
Coq.Structures.GenericMinMax.le_max_r	40	4	search with cache (only 1: solve_max).	0.0330221652985	12
Coq.Structures.GenericMinMax.max_l_iff	40	0.1.2.0.14	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition).	2.01671791077	1828
Coq.Structures.GenericMinMax.max_r_iff	40	0	search with cache (only 1: solve_max).	0.031641960144	1
Coq.Structures.GenericMinMax.max_le	40	1.0.3.4.0.3.10.25	search with cache (only 1: simpl_relation; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order).	4.95920205116	7021
Coq.Structures.GenericMinMax.max_le_iff	40
Coq.Structures.GenericMinMax.max_lt_iff	40	0.1.0.0.0.0.0.3.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.613470077515	427
Coq.Structures.GenericMinMax.max_lub_l	40	4	search with cache (only 1: solve_max).	0.0526638031006	18
Coq.Structures.GenericMinMax.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0210590362549	1
Coq.Structures.GenericMinMax.max_lub	40	6	search with cache (only 1: solve_max).	0.0317029953003	13
Coq.Structures.GenericMinMax.max_lub_iff	40	0.4.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0743360519409	13
Coq.Structures.GenericMinMax.max_lub_lt	40	0	search with cache (only 1: solve_max).	0.0209732055664	1
Coq.Structures.GenericMinMax.max_lub_lt_iff	40	3.3.1	search with cache (only 1: destruct (max_spec n m); only 1: solve_max; only 1: solve_max).	0.500560998917	124
Coq.Structures.GenericMinMax.max_le_compat_l	40
Coq.Structures.GenericMinMax.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0319039821625	3
Coq.Structures.GenericMinMax.max_le_compat	40	0.0.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0641469955444	4
Coq.Structures.GenericMinMax.min_spec	40
Coq.Structures.GenericMinMax.min_spec_le	40	0.0.0.1.3.1.0.1.3	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: apply min_l; only 1: order || (right; order) || (left; order); only 1: right; only 1: intuition; only 1: now apply min_r).	10.285834074	8082
Coq.Structures.GenericMinMax.min_compat	40
Coq.Structures.GenericMinMax.min_unicity	40
Coq.Structures.GenericMinMax.min_unicity_ext	40
Coq.Structures.GenericMinMax.min_mono	40
Coq.Structures.GenericMinMax.min_id	40	9.4	search with cache (only 1: apply min_l; only 1: intuition order).	0.0489339828491	110
Coq.Structures.GenericMinMax.min_assoc	40
Coq.Structures.GenericMinMax.min_comm	40
Coq.Structures.GenericMinMax.le_min_r	40	2.1.0.112	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	33.5897271633	112200
Coq.Structures.GenericMinMax.le_min_l	40	15	search with cache (only 1: solve_min).	0.127540111542	100
Coq.Structures.GenericMinMax.min_l_iff	40	1.2.0.3.0.24	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: order).	5.71455788612	7225
Coq.Structures.GenericMinMax.min_r_iff	40	1	search with cache (only 1: solve_min).	0.023952960968	2
Coq.Structures.GenericMinMax.min_le	40	0.0.0.0.1.18.6	search with cache (only 1: intros; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: right; only 1: intuition; only 1: order || (right; order) || (left; order)).	11.9703130722	17630
Coq.Structures.GenericMinMax.min_le_iff	40
Coq.Structures.GenericMinMax.min_lt_iff	40	0.0.0.0.1.0.0.3.3	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	2.86374211311	2074
Coq.Structures.GenericMinMax.min_glb_l	40	7	search with cache (only 1: solve_min).	0.0340061187744	17
Coq.Structures.GenericMinMax.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0213859081268	1
Coq.Structures.GenericMinMax.min_glb	40	6.1	search with cache (only 1: intros Hnm Hpq; only 1: solve_min).	0.0436940193176	14
Coq.Structures.GenericMinMax.min_glb_iff	40	0.6.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0508348941803	16
Coq.Structures.GenericMinMax.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.0217299461365	2
Coq.Structures.GenericMinMax.min_glb_lt_iff	40	4	search with cache (only 1: solve_min).	0.34120798111	88
Coq.Structures.GenericMinMax.min_le_compat_l	40
Coq.Structures.GenericMinMax.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0318109989166	3
Coq.Structures.GenericMinMax.min_le_compat	40	0.0.0	search with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: solve_min).	0.0348329544067	3
Coq.Structures.GenericMinMax.min_max_absorption	40	0.22	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.842031002045	695
Coq.Structures.GenericMinMax.max_min_absorption	40	5.24	search with cache (only 1: apply min_r || apply min_l; only 1: solve_max).	4.50158500671	5342
Coq.Structures.GenericMinMax.max_min_distr	40
Coq.Structures.GenericMinMax.min_max_distr	40
Coq.Structures.GenericMinMax.max_min_modular	40
Coq.Structures.GenericMinMax.min_max_modular	40
Coq.Structures.GenericMinMax.max_min_disassoc	40
Coq.Structures.GenericMinMax.max_min_antimono	40	0.0.0.1.0.0.0.0.1.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	1.5088660717	881
Coq.Structures.GenericMinMax.min_max_antimono	40
Coq.Structures.GenericMinMax.max_case_strong	40
Coq.Structures.GenericMinMax.max_case	40
Coq.Structures.GenericMinMax.max_dec	40
Coq.Structures.GenericMinMax.min_case_strong	40
Coq.Structures.GenericMinMax.min_case	40
Coq.Structures.GenericMinMax.min_dec	40
Coq.Structures.GenericMinMax.max_monotone	40	1.0.12.12	search with cache (only 1: intros x y H; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).	0.351845979691	525
Coq.Structures.GenericMinMax.min_monotone	40	0.0.13.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	0.22392821312	255
Coq.Structures.GenericMinMax.min_max_antimonotone	40
Coq.Structures.GenericMinMax.max_min_antimonotone	40
Coq.Structures.GenericMinMax.max_case_strong	40
Coq.Structures.GenericMinMax.max_case	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0190041065216	5
Coq.Structures.GenericMinMax.max_dec	40	0.0.0.2	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0191161632538	6
Coq.Structures.GenericMinMax.min_case_strong	40	0.0.0.13.0	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.9901471138	1091
Coq.Structures.GenericMinMax.min_case	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0189418792725	6
Coq.Structures.GenericMinMax.min_dec	40	0.0.0.3	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0190539360046	7
Coq.Structures.GenericMinMax.compare_spec	40
Coq.Structures.OrderedTypeAlt.eq_refl	40
Coq.Structures.OrderedTypeAlt.eq_sym	40
Coq.Structures.OrderedTypeAlt.lt_not_eq	40	20.6.1.0	search with cache (only 1: unfold eq; only 1: intros; only 1: red; only 1: now rewrite H).	3.45459008217	4541
Coq.Structures.OrderedTypeAlt.compare	40
Coq.Structures.OrderedTypeAlt.eq_dec	40
Coq.Structures.OrderedTypeAlt.compare_sym	40
Coq.Structures.OrderedTypeAlt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.0.17	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.175036907196	190
Coq.ZArith.Znat.N_nat_Z	40	0.0.0.0.0.0.1.0.0.94	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	2.3105070591	5807
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0231561660767	5
Coq.ZArith.Znat.positive_N_Z	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0140390396118	2
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: reflexivity).	0.0112600326538	1
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0268170833588	8
Coq.ZArith.Znat.Z_N_nat	40	15	search with cache (only 1: now destruct n).	0.0480618476868	100
Coq.ZArith.Znat.Z_nat_N	40	1.1.0.0.0.1.2.1.13	search with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: reflexivity).	1.2791697979	1059
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0140180587769	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.3.0	search with cache (only 1: destruct n; only 1: repeat split; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.175108909607	68
Coq.ZArith.Znat.id	40	0.0.5.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity).	0.020525932312	10
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	9.3.0	search with cache (only 1: split; only 1: apply Nat2N.inj; only 1: congruence).	2.3425090313	2707
Coq.ZArith.Znat.is_nonneg	40	2	search with cache (only 1: now destruct n).	0.0896499156952	3
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: now f_equal).	0.0117290019989	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.011500120163	1
Coq.ZArith.Znat.inj_compare	40	0.1.2.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: split; only 1: trivial; only 1: trivial).	0.0271468162537	17
Coq.ZArith.Znat.inj_le	40	5	search with cache (only 1: now destruct n, m).	0.0399971008301	13
Coq.ZArith.Znat.inj_lt	40	1.3	search with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).	0.0159900188446	6
Coq.ZArith.Znat.inj_ge	40	7	search with cache (only 1: now destruct n, m).	0.0175518989563	8
Coq.ZArith.Znat.inj_gt	40	8	search with cache (only 1: now destruct n, m).	0.017735004425	9
Coq.ZArith.Znat.inj_abs_N	40
Coq.ZArith.Znat.inj_add	40	23	search with cache (only 1: now destruct n, m).	0.213479995728	259
Coq.ZArith.Znat.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.0159299373627	1
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_succ	40	0.0.0.0.65	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.38700008392	2451
Coq.ZArith.Znat.inj_pred_max	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40
Coq.ZArith.Znat.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0184669494629	4
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40	0.0.1.18.0.0.8.25	search with cache (only 1: destruct a; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct n; only 1: now destruct p; only 1: simpl; only 1: trivial).	35.1569890976	67371
Coq.ZArith.Znat.id	40	0.0	search with cache (only 1: intros; only 1: now destruct n).	0.0173840522766	2
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	1.0.5.0	search with cache (only 1: split; only 1: now apply Z2Pos.inj; only 1: intros; only 1: now f_equal).	0.28878903389	110
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: reflexivity).	0.011766910553	1
Coq.ZArith.Znat.inj_pos	40	0.3	search with cache (only 1: simpl; only 1: trivial).	0.0223269462585	5
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0120780467987	1
Coq.ZArith.Znat.inj_add	40	4.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0435590744019	20
Coq.ZArith.Znat.inj_mul	40	3.1	search with cache (only 1: intros; only 1: now destruct n, m).	0.543661117554	217
Coq.ZArith.Znat.inj_succ	40	0.5.0.0.4	search with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: easy).	0.542238950729	264
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	2.8.6.12	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: reflexivity).	1.2207159996	1172
Coq.ZArith.Znat.inj_compare	40	4.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0528171062469	30
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40	5.5.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now destruct n, m).	0.560350179672	343
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	5.0.20.5.0.10	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: simpl; only 1: now f_equal).	3.06120491028	5773
Coq.ZArith.Znat.inj_quot2	40	2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0278511047363	11
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40
Coq.ZArith.Znat.abs_N_spec	40	1	search with cache (only 1: now destruct n).	0.0166158676147	2
Coq.ZArith.Znat.abs_N_nonneg	40	0.0	search with cache (only 1: intros; only 1: now destruct n).	0.0170290470123	2
Coq.ZArith.Znat.id_abs	40	1	search with cache (only 1: now destruct n).	0.0138540267944	2
Coq.ZArith.Znat.id	40	0	search with cache (only 1: now destruct n).	0.0132350921631	1
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0113041400909	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.0117428302765	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0113699436188	1
Coq.ZArith.Znat.inj_opp	40	0.0.0.0.3.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0231311321259	10
Coq.ZArith.Znat.inj_succ	40	0.5.0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: easy).	0.30051612854	191
Coq.ZArith.Znat.inj_add	40	5.2	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.683295965195	210
Coq.ZArith.Znat.inj_mul	40	6	search with cache (only 1: now destruct n, m).	0.0872821807861	62
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	0.1.5.1.1	search with cache (only 1: destruct n; only 1: easy; only 1: intros _; only 1: now destruct p; only 1: easy).	0.927556037903	547
Coq.ZArith.Znat.inj_compare	40	3.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.0687968730927	25
Coq.ZArith.Znat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0175929069519	3
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0175361633301	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_succ_abs	40
Coq.ZArith.Znat.inj_add_abs	40	39	search with cache (only 1: now destruct n, m).	2.13297605515	3504
Coq.ZArith.Znat.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0189647674561	1
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.0113391876221	1
Coq.ZArith.Znat.inj_succ	40	6.4.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.626024961472	831
Coq.ZArith.Znat.is_nonneg	40	4.1.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.0630929470062	52
Coq.ZArith.Znat.id	40	1.0.1.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0181159973145	7
Coq.ZArith.Znat.inj	40	0.1.4	search with cache (only 1: intros H; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0633599758148	82
Coq.ZArith.Znat.inj_iff	40	3.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now f_equal).	0.0258679389954	8
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_ge	40
Coq.ZArith.Znat.inj_gt	40
Coq.ZArith.Znat.inj_abs_nat	40
Coq.ZArith.Znat.inj_add	40
Coq.ZArith.Znat.inj_mul	40
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred_max	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.id	40	0.1.0.0.0.1.0.4.0.0	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: intros _; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	2.15811014175	2423
Coq.ZArith.Znat.inj	40	0.2.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0241742134094	5
Coq.ZArith.Znat.inj_iff	40	1.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now f_equal).	0.0204720497131	6
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0108091831207	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0110430717468	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0111320018768	1
Coq.ZArith.Znat.inj_add	40	0.1.0.1.1.2.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	14.5465099812	12724
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.0.2.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	6.63132309914	5257
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0131330490112	1
Coq.ZArith.Znat.abs_nat_nonneg	40	0.0	search with cache (only 1: intros; only 1: now destruct n).	0.016350030899	2
Coq.ZArith.Znat.id_abs	40	1.0.0.0.1.0.1.0.0.0.1.0.2.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	1.8508939743	2866
Coq.ZArith.Znat.id	40	1.0.2.6	search with cache (only 1: induction n; only 1: now f_equal; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.14332485199	73
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0107879638672	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0112180709839	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0114178657532	1
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_add	40	1.1.0.1.1.2.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	22.4747540951	18645
Coq.ZArith.Znat.inj_mul	40	0.2.0.2.0.0.2.0.2.0.0.0.1.7	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	5.23317599297	9359
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0187909603119	3
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0187768936157	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_succ_abs	40	4.4.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.451489925385	334
Coq.ZArith.Znat.inj_add_abs	40	1.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.2.39	search with cache (only 1: destruct n, m; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).	36.3589420319	37396
Coq.ZArith.Znat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.3.3.3.11	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	6.17357110977	10351
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0165960788727	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40	0.1.0.1.5.3.5.1.0.0.0.0.1.0.0	search with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: intros Hz; only 1: destruct z; only 1: apply Ho; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: now destruct Hz).	30.2626760006	67705
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.0.0.0.1.1.0.1.0.3.2.0.6.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	11.4416739941	22219
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.0.1.1.0.1.3.2.0.4.0.1.0.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: now destruct Hx).	6.65572190285	11607
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0173981189728	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.1.1.1.0.0.0.5.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	6.38565397263	10234
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.1.1.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.0138490200043	8
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0104629993439	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0145220756531	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0223228931427	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.022852897644	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.0.0	search with cache (only 1: intros Ha H; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.0402770042419	3
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.0448091030121	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.2.1.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0509729385376	7
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.1.0.3.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.14939904213	24
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.6.0.0	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.561883926392	177
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.2.0	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.02943110466	5
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40
Coq.ZArith.Zdigits.two_compl_value	40
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	1	search with cache (only 1: auto).	0.0275809764862	2
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	2.3.0.0	search with cache (only 1: simple induction n; only 1: intros; only 1: auto; only 1: tauto).	0.0587921142578	12
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	0.1	search with cache (only 1: intros; only 1: auto).	0.0280799865723	3
Coq.ZArith.Zdigits.Z_div2_value	40
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0304279327393	3
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	0.0.0.0.0.0.0.0.0.0.3.5.0	search with cache (only 1: destruct z; only 1: simpl; only 1: tauto; only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).	2.49772405624	3524
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.0.2.0.0.0.1.0.4.2	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	1.7530810833	1943
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.eq_dec	40
Coq.ZArith.BinInt.pos_sub_spec	40
Coq.ZArith.BinInt.pos_sub_discr	40
Coq.ZArith.BinInt.pos_sub_diag	40	16.0.1.1.0.1.1.0.158	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: solve_proper).	3.65081691742	23475
Coq.ZArith.BinInt.pos_sub_lt	40
Coq.ZArith.BinInt.pos_sub_gt	40
Coq.ZArith.BinInt.pos_sub_opp	40
Coq.ZArith.BinInt.add_0_r	40
Coq.ZArith.BinInt.mul_0_r	40	1.287	search with cache (only 1: symmetry; only 1: now destruct n).	4.25740408897	42151
Coq.ZArith.BinInt.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.00474810600281	1
Coq.ZArith.BinInt.add_comm	40
Coq.ZArith.BinInt.opp_add_distr	40
Coq.ZArith.BinInt.opp_inj	40
Coq.ZArith.BinInt.pos_sub_add	40
Coq.ZArith.BinInt.add_assoc_pos	40
Coq.ZArith.BinInt.add_assoc	40
Coq.ZArith.BinInt.add_opp_diag_r	40	0.0.0.0.1.3	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.0127980709076	15
Coq.ZArith.BinInt.mul_opp_r	40	0.0.0.0.3.1.0.0.0.0.6.2.1.5.0.4.15	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: apply opp_inj; only 1: now destruct pos_sub; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: apply opp_inj; only 1: now destruct pos_sub; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	26.1259460449	85883
Coq.ZArith.BinInt.mul_add_distr_pos	40
Coq.ZArith.BinInt.mul_add_distr_r	40
Coq.ZArith.BinInt.one_succ	40	1	search with cache (only 1: trivial).	0.00515818595886	2
Coq.ZArith.BinInt.two_succ	40	0	search with cache (only 1: trivial).	0.00340819358826	1
Coq.ZArith.BinInt.add_0_l	40	0	search with cache (only 1: now destruct n).	0.00490093231201	1
Coq.ZArith.BinInt.add_succ_l	40
Coq.ZArith.BinInt.opp_0	40	5.1	search with cache (only 1: simpl; only 1: now f_equal).	0.00536608695984	8
Coq.ZArith.BinInt.opp_succ	40	4.5.1	search with cache (only 1: unfold succ; only 1: rewrite !opp_add_distr; only 1: reflexivity).	0.0558331012726	106
Coq.ZArith.BinInt.succ_pred	40
Coq.ZArith.BinInt.pred_succ	40	0.2	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.011302947998	13
Coq.ZArith.BinInt.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.00592088699341	1
Coq.ZArith.BinInt.sub_succ_r	40
Coq.ZArith.BinInt.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00578498840332	1
Coq.ZArith.BinInt.mul_succ_l	40
Coq.ZArith.BinInt.eqb_eq	40
Coq.ZArith.BinInt.ltb_lt	40
Coq.ZArith.BinInt.leb_le	40
Coq.ZArith.BinInt.compare_eq_iff	40
Coq.ZArith.BinInt.compare_sub	40
Coq.ZArith.BinInt.compare_antisym	40
Coq.ZArith.BinInt.compare_lt_iff	40	0.1	search with cache (only 1: unfold ltb, lt; only 1: now rewrite N.compare_antisym, CompOpp_iff).	0.133796930313	116
Coq.ZArith.BinInt.compare_le_iff	40	4	search with cache (only 1: easy').	0.229770898819	52
Coq.ZArith.BinInt.lt_succ_r	40
Coq.ZArith.BinInt.max_l	40
Coq.ZArith.BinInt.max_r	40
Coq.ZArith.BinInt.min_l	40
Coq.ZArith.BinInt.min_r	40	0.0.0.3.1.1	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.385344982147	356
Coq.ZArith.BinInt.peano_ind	40
Coq.ZArith.BinInt.bi_induction	40
Coq.ZArith.BinInt.abs_eq	40
Coq.ZArith.BinInt.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.00823903083801	5
Coq.ZArith.BinInt.sgn_null	40	27.27.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?succ_le_mono).	12.0751879215	26170
Coq.ZArith.BinInt.sgn_pos	40	4.6.0.0.0.1	search with cache (only 1: destruct n; only 1: intros; only 1: now subst; only 1: trivial; only 1: intro H; only 1: now f_equiv).	0.457987070084	769
Coq.ZArith.BinInt.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.00906586647034	1
Coq.ZArith.BinInt.pow_0_r	40	14	search with cache (only 1: now subst).	0.0319559574127	75
Coq.ZArith.BinInt.pow_succ_r	40
Coq.ZArith.BinInt.pow_neg_r	40	0.18.3.0	search with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: now destruct n; only 1: now destruct 1 || intros _).	2.68482899666	6485
Coq.ZArith.BinInt.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.00464105606079	1
Coq.ZArith.BinInt.square_spec	40
Coq.ZArith.BinInt.sqrtrem_spec	40
Coq.ZArith.BinInt.sqrt_spec	40
Coq.ZArith.BinInt.sqrt_neg	40	2	search with cache (only 1: now destruct n).	0.0122230052948	11
Coq.ZArith.BinInt.sqrtrem_sqrt	40
Coq.ZArith.BinInt.log2_spec	40
Coq.ZArith.BinInt.log2_nonpos	40	1	search with cache (only 1: now destruct n).	0.0113270282745	11
Coq.ZArith.BinInt.even_spec	40
Coq.ZArith.BinInt.odd_spec	40
Coq.ZArith.BinInt.double_spec	40	3.2	search with cache (only 1: simpl; only 1: now rewrite <- ?succ_le_mono).	0.0175459384918	32
Coq.ZArith.BinInt.succ_double_spec	40	0.0.1.1.0.0.1.1.0.1.7	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: split; only 1: split; only 1: simpl; only 1: easy; only 1: split; only 1: split; only 1: simpl; only 1: easy).	0.738932847977	1361
Coq.ZArith.BinInt.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.00540494918823	1
Coq.ZArith.BinInt.pos_div_eucl_eq	40
Coq.ZArith.BinInt.div_eucl_eq	40
Coq.ZArith.BinInt.div_mod	40
Coq.ZArith.BinInt.pos_div_eucl_bound	40
Coq.ZArith.BinInt.mod_pos_bound	40
Coq.ZArith.BinInt.mod_neg_bound	40
Coq.ZArith.BinInt.quotrem_eq	40
Coq.ZArith.BinInt.quot_rem'	40
Coq.ZArith.BinInt.quot_rem	40	0.0.0.1.0	search with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.0689148902893	27
Coq.ZArith.BinInt.rem_bound_pos	40
Coq.ZArith.BinInt.rem_opp_l'	40
Coq.ZArith.BinInt.rem_opp_r'	40
Coq.ZArith.BinInt.rem_opp_l	40
Coq.ZArith.BinInt.rem_opp_r	40
Coq.ZArith.BinInt.divide_Zpos	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.ggcd_gcd	40
Coq.ZArith.BinInt.ggcd_correct_divisors	40
Coq.ZArith.BinInt.gcd_divide_l	40
Coq.ZArith.BinInt.gcd_divide_r	40
Coq.ZArith.BinInt.gcd_greatest	40
Coq.ZArith.BinInt.gcd_nonneg	40	0.0.0.0.0.0.0.1.2.2	search with cache (only 1: destruct a, b; only 1: easy; only 1: easy; only 1: now subst; only 1: easy; only 1: now subst; only 1: now subst; only 1: easy; only 1: easy; only 1: now subst).	1.60165882111	1594
Coq.ZArith.BinInt.ggcd_opp	40
Coq.ZArith.BinInt.testbit_of_N	40
Coq.ZArith.BinInt.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.3.0.5	search with cache (only 1: intros; only 1: destruct a as [| a], n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	4.84504699707	9678
Coq.ZArith.BinInt.testbit_Zpos	40	1.0.0.0.0.0.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0130050182343	8
Coq.ZArith.BinInt.testbit_Zneg	40
Coq.ZArith.BinInt.div2_spec	40	0	search with cache (only 1: trivial).	0.00574207305908	1
Coq.ZArith.BinInt.testbit_0_l	40	3.3.5.1.3	search with cache (only 1: destruct n as [| n| n]; only 1: easy; only 1: split; only 1: unfold testbit; only 1: now f_equal).	0.772558927536	1502
Coq.ZArith.BinInt.testbit_neg_r	40	0.0	search with cache (only 1: intro Hn; only 1: now destruct n).	0.00795698165894	2
Coq.ZArith.BinInt.testbit_odd_0	40	2.0.3.0.2.21	search with cache (only 1: destruct a as [| a| a]; only 1: split; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now destruct a).	0.676024913788	1413
Coq.ZArith.BinInt.testbit_even_0	40	0.10	search with cache (only 1: simpl; only 1: now destruct a as [| [| | ]| ]).	0.0112819671631	33
Coq.ZArith.BinInt.testbit_odd_succ	40
Coq.ZArith.BinInt.testbit_even_succ	40
Coq.ZArith.BinInt.shiftr_spec_aux	40
Coq.ZArith.BinInt.shiftl_spec_low	40
Coq.ZArith.BinInt.shiftl_spec_high	40
Coq.ZArith.BinInt.shiftr_spec	40
Coq.ZArith.BinInt.lor_spec	40
Coq.ZArith.BinInt.land_spec	40
Coq.ZArith.BinInt.ldiff_spec	40
Coq.ZArith.BinInt.lxor_spec	40
Coq.ZArith.BinInt.gt_lt_iff	40
Coq.ZArith.BinInt.gt_lt	40	13.13.58	search with cache (only 1: destruct (le_gt_cases n m); only 1: now nzsimpl; only 1: now nzsimpl).	7.55586600304	14753
Coq.ZArith.BinInt.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0043830871582	1
Coq.ZArith.BinInt.ge_le_iff	40
Coq.ZArith.BinInt.ge_le	40
Coq.ZArith.BinInt.le_ge	40	1	search with cache (only 1: apply ge_le_iff).	0.00571489334106	2
Coq.ZArith.BinInt.gtb_ltb	40
Coq.ZArith.BinInt.geb_leb	40
Coq.ZArith.BinInt.gtb_lt	40
Coq.ZArith.BinInt.geb_le	40
Coq.ZArith.BinInt.gtb_spec	40
Coq.ZArith.BinInt.geb_spec	40
Coq.ZArith.BinInt.add_reg_l	40
Coq.ZArith.BinInt.mul_reg_l	40
Coq.ZArith.BinInt.mul_reg_r	40
Coq.ZArith.BinInt.opp_eq_mul_m1	40
Coq.ZArith.BinInt.add_diag	40	24	search with cache (only 1: now nzsimpl').	0.529221057892	280
Coq.ZArith.BinInt.compare_opp	40
Coq.ZArith.BinInt.add_compare_mono_l	40
Coq.ZArith.BinInt.testbit_mod_pow2	40
Coq.ZArith.BinInt.testbit_ones	40
Coq.ZArith.BinInt.testbit_ones_nonneg	40
Coq.ZArith.BinInt.id	40	5	search with cache (only 1: trivial).	0.0190589427948	6
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40
Coq.ZArith.BinInt.is_pos	40	0	search with cache (only 1: now f_equal).	0.00596618652344	1
Coq.ZArith.BinInt.is_nonneg	40	0	search with cache (only 1: now f_equal).	0.00746178627014	1
Coq.ZArith.BinInt.inj_1	40	0	search with cache (only 1: Z.order').	0.00467205047607	1
Coq.ZArith.BinInt.inj_xO	40	0.4	search with cache (only 1: simpl; only 1: split).	0.00522899627686	6
Coq.ZArith.BinInt.inj_xI	40	10	search with cache (only 1: trivial).	0.0061559677124	21
Coq.ZArith.BinInt.inj_succ	40
Coq.ZArith.BinInt.inj_add	40	1.0	search with cache (only 1: simpl; only 1: split).	0.0064070224762	3
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_sub_max	40
Coq.ZArith.BinInt.inj_pred	40
Coq.ZArith.BinInt.inj_mul	40	0	search with cache (only 1: reflexivity).	0.00543904304504	1
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_pow	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00653195381165	2
Coq.ZArith.BinInt.inj_square	40	0	search with cache (only 1: reflexivity).	0.00475811958313	1
Coq.ZArith.BinInt.inj_compare	40	0	search with cache (only 1: trivial).	0.00473093986511	1
Coq.ZArith.BinInt.inj_leb	40	0	search with cache (only 1: reflexivity).	0.00469207763672	1
Coq.ZArith.BinInt.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.00464606285095	1
Coq.ZArith.BinInt.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.00468993186951	1
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	1	search with cache (only 1: reflexivity).	0.00485491752625	2
Coq.ZArith.BinInt.inj_gcd	40	1	search with cache (only 1: reflexivity).	0.00416803359985	2
Coq.ZArith.BinInt.inj_divide	40
Coq.ZArith.BinInt.inj_testbit	40
Coq.ZArith.BinInt.inj_neg	40	0	search with cache (only 1: now injection 1).	0.00510406494141	1
Coq.ZArith.BinInt.inj_neg_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.00721001625061	4
Coq.ZArith.BinInt.inj_pos	40	0	search with cache (only 1: now injection 1).	0.00461292266846	1
Coq.ZArith.BinInt.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.00725197792053	4
Coq.ZArith.BinInt.neg_is_neg	40	0	search with cache (only 1: now f_equal).	0.00473999977112	1
Coq.ZArith.BinInt.neg_is_nonpos	40	1	search with cache (only 1: now f_equal).	0.00757098197937	2
Coq.ZArith.BinInt.pos_is_pos	40	0	search with cache (only 1: now f_equal).	0.0048999786377	1
Coq.ZArith.BinInt.pos_is_nonneg	40	0	search with cache (only 1: now f_equal).	0.00669503211975	1
Coq.ZArith.BinInt.neg_le_pos	40	0	search with cache (only 1: now f_equal).	0.00786900520325	1
Coq.ZArith.BinInt.neg_lt_pos	40	0	search with cache (only 1: easy).	0.00596618652344	1
Coq.ZArith.BinInt.neg_le_neg	40	1.3.0.110	search with cache (only 1: unfold Z.le, Z.ge; only 1: intros; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	35.8104379177	86824
Coq.ZArith.BinInt.neg_lt_neg	40
Coq.ZArith.BinInt.pos_le_pos	40	0.0	search with cache (only 1: intros; only 1: now f_equal).	0.00645208358765	2
Coq.ZArith.BinInt.pos_lt_pos	40	0.0	search with cache (only 1: intros; only 1: now f_equal).	0.00525784492493	2
Coq.ZArith.BinInt.neg_xO	40	0	search with cache (only 1: reflexivity).	0.00408005714417	1
Coq.ZArith.BinInt.neg_xI	40	0	search with cache (only 1: reflexivity).	0.00462794303894	1
Coq.ZArith.BinInt.pos_xO	40	0	search with cache (only 1: reflexivity).	0.00457000732422	1
Coq.ZArith.BinInt.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00457811355591	1
Coq.ZArith.BinInt.opp_neg	40	0	search with cache (only 1: split).	0.00448608398438	1
Coq.ZArith.BinInt.opp_pos	40	0	search with cache (only 1: reflexivity).	0.00441408157349	1
Coq.ZArith.BinInt.add_neg_neg	40	0	search with cache (only 1: split).	0.00397706031799	1
Coq.ZArith.BinInt.add_pos_neg	40	0	search with cache (only 1: split).	0.00432705879211	1
Coq.ZArith.BinInt.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.00395512580872	1
Coq.ZArith.BinInt.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.00429391860962	1
Coq.ZArith.BinInt.divide_pos_neg_r	40
Coq.ZArith.BinInt.divide_pos_neg_l	40
Coq.ZArith.BinInt.testbit_neg	40
Coq.ZArith.BinInt.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.00525903701782	1
Coq.ZArith.BinInt.id	40
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40
Coq.ZArith.BinInt.to_pos_nonpos	40	1	search with cache (only 1: now destruct x).	0.0163540840149	11
Coq.ZArith.BinInt.inj_1	40	0	search with cache (only 1: reflexivity).	0.00458908081055	1
Coq.ZArith.BinInt.inj_double	40	2.0.3.0	search with cache (only 1: destruct x; only 1: easy; only 1: trivial; only 1: easy).	0.0153551101685	16
Coq.ZArith.BinInt.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0103430747986	1
Coq.ZArith.BinInt.inj_succ	40	2.0.0.0.5.4.1	search with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: trivial; only 1: easy).	0.589578866959	832
Coq.ZArith.BinInt.inj_add	40
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_pred	40	0.0.4.4.14.0.9	search with cache (only 1: destruct x; only 1: trivial; only 1: destruct p; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy; only 1: easy).	5.73873806	9207
Coq.ZArith.BinInt.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0266261100769	4
Coq.ZArith.BinInt.inj_pow	40
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_compare	40	0.0.0.2	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0320570468903	14
Coq.ZArith.BinInt.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0269329547882	4
Coq.ZArith.BinInt.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.027517080307	4
Coq.ZArith.BinInt.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0274248123169	4
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	0.0115790367126	7
Coq.ZArith.BinInt.inj_gcd	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0685479640961	58
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.0	search with cache (only 1: intros a n Ha; only 1: now f_equal).	0.00693106651306	2
Coq.ZArith.BinInt.ZL0	40	8	search with cache (only 1: now f_equal).	0.0051600933075	9
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.10.0	search with cache (only 1: change 2 with (1 + 1); only 1: symmetry; only 1: now Z.nzsimpl').	0.208076000214	76
Coq.ZArith.BinInt.Z_eq_mult	40	0.74.0	search with cache (only 1: intros EQ; only 1: rewrite EQ in *; only 1: split).	2.6594171524	12827
Coq.ZArith.Zcomplements.floor_gt0	40	3.2	search with cache (only 1: intros; only 1: reflexivity).	0.012619972229	7
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	4.5.4.5.4.2.31	search with cache (only 1: case n; only 1: Z.nzsimpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	6.57677102089	7182
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	4.1.0	search with cache (only 1: unfold Zlength; only 1: simpl Zlength_aux; only 1: now f_equal).	0.013659954071	8
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	1.97178196907	1508
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	1.1.5.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: discriminate; only 1: discriminate).	0.308362007141	188
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40
Coq.ZArith.Zeven.Zodd_div2	40	3.4.1.1.10.8.0	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: intuition; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: change 2 with (1 + 1); only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H; only 1: repeat split).	29.6261599064	18743
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	2.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.093768119812	7
Coq.ZArith.Zeven.Zodd_quot2	40	3.0.3	search with cache (only 1: intros; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0722570419312	9
Coq.ZArith.Zeven.Zodd_quot2_neg	40	3.0.0	search with cache (only 1: intros Hn Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0560750961304	6
Coq.ZArith.Zeven.Zquot2_opp	40	1.9.27.3	search with cache (only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: symmetry; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.85392904282	2899
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	3.0.0.0	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0317370891571	7
Coq.ZArith.Zeven.Zodd_ex	40	4.0.0	search with cache (only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0303890705109	7
Coq.ZArith.Zeven.Zeven_2p	40	14.14.9.53	search with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	10.0940339565	9502
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.0.1.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.182574033737	20
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.1.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0604989528656	13
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.1.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0613219738007	13
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	1	search with cache (only 1: apply Z.divide_opp_r).	0.0167851448059	11
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	4	search with cache (only 1: apply Z.divide_opp_l).	0.0308518409729	28
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	4	search with cache (only 1: apply Z.divide_abs_l).	0.0255670547485	24
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.0.1.23.0.1	search with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.mod_divide; only 1: intros (c, Hc); only 1: subst; only 1: auto with zarith; only 1: trivial).	30.2938430309	31702
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.0.0.3.3.6	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: subst; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	0.730515003204	511
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	4.2	search with cache (only 1: intros Hb; only 1: Z.order).	0.0157971382141	8
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	3.0.3.1.2.3	search with cache (only 1: intros Hb; only 1: intros (c, Hc); only 1: rewrite Z.div_exact; only 1: subst; only 1: apply Z_mod_mult; only 1: Z.order).	3.47143697739	4073
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.1.3.1	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0305421352386	30
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	47	search with cache (only 1: easy).	0.542509078979	3332
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.1.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0473160743713	6
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.1.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.133557081223	6
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40	0.5.6.1.1.0.1.4.0.13.40	search with cache (only 1: case a; only 1: easy; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith; only 1: constructor; only 1: simpl; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	15.4056608677	27032
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	3.3.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.169723987579	44
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	1.0.0.11.2	search with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intuition).	0.666049003601	1105
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	0.0.0.0.0	search with cache (only 1: constructor; only 1: auto with zarith; only 1: apply Z.divide_1_l; only 1: intros x Ha Hb; only 1: trivial).	0.0179188251495	5
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.0.5.0	search with cache (only 1: intros a b; only 1: simple induction 1; only 1: intros H1 H2 H3; only 1: intuition).	0.0302729606628	15
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	40.43	search with cache (only 1: intros (c, Hc); only 1: discriminate).	1.77882909775	7409
Coq.ZArith.Znumtheory.not_prime_1	40	2.45	search with cache (only 1: intros (c, Hc); only 1: discriminate).	0.523681879044	1820
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	3.3.2.3	search with cache (only 1: intros; only 1: apply Zgcd_is_gcd; only 1: tauto; only 1: tauto).	3.5435769558	740
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.0.0.0.0.0.0.0.0.5.0	search with cache (only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	6.75417709351	3893
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	0.3.0.13.0.0	search with cache (only 1: intros Hb; only 1: rewrite Z.mul_comm; only 1: destruct b; only 1: now apply Z.mod_eq; only 1: now apply Z.mod_eq; only 1: now apply Z.mod_eq).	1.84014296532	2322
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	2	search with cache (only 1: auto with zarith).	0.0233061313629	20
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0205800533295	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0208399295807	5
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0206501483917	4
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	1.1.6.1.3.3	search with cache (only 1: intros x y H; only 1: Z.swap_greater; only 1: intros Hb; only 1: apply Z.div_pos; only 1: tauto; only 1: tauto).	1.81428003311	1822
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	2.2.0.1.2.5	search with cache (only 1: intros x y H; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_le_mono; only 1: tauto; only 1: tauto).	1.10355496407	1093
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.2.0.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0368499755859	13
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0196361541748	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0194628238678	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0196800231934	3
Coq.ZArith.Zdiv.eqm_refl	40	0	search with cache (only 1: reflexivity).	0.0142469406128	1
Coq.ZArith.Zdiv.eqm_sym	40	18.0	search with cache (only 1: intros; only 1: now subst).	0.428009033203	796
Coq.ZArith.Zdiv.eqm_trans	40
Coq.ZArith.Zdiv.eqm_setoid	40
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40	7.7.1.2	search with cache (only 1: unfold eqm; only 1: intros; only 1: repeat rewrite Zmod_mod; only 1: auto).	0.580943822861	1317
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.0.0.1	search with cache (only 1: intros a b; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: auto).	0.0229980945587	5
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.0.1	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: auto).	0.0253131389618	5
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.4.2	search with cache (only 1: intros a b; only 1: intros Hb; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.517294883728	290
Coq.ZArith.Zdiv.Z_div_exact_2	40	3.0.0.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: now destruct b).	0.0499050617218	11
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.1	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0269129276276	6
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.mod_wd	40	1	search with cache (only 1: solve_proper).	0.0505211353302	2
Coq.ZArith.Zeuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0128600597382	1
Coq.ZArith.Zeuclid.div_mod	40
Coq.ZArith.Zeuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	0.0.0.1.3.15	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.332507133484	934
Coq.ZArith.Zabs.Zabs_dec	40	4.4.3.17.35	search with cache (only 1: intro H1; only 1: case H1; only 1: now left || now right; only 1: auto; only 1: auto).	3.0219810009	6040
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.eqb_eq	40
Coq.ZArith.Int.eqb_neq	40
Coq.ZArith.Int.ltb_lt	40
Coq.ZArith.Int.ltb_nlt	40
Coq.ZArith.Int.leb_le	40
Coq.ZArith.Int.leb_nle	40
Coq.ZArith.Int.norm_ei_correct	40
Coq.ZArith.Int.norm_ez_correct	40
Coq.ZArith.Int.norm_ep_correct	40
Coq.ZArith.Int.norm_ep_correct2	40
Coq.ZArith.Int.gt_le_dec	40
Coq.ZArith.Int.ge_lt_dec	40
Coq.ZArith.Int.i2z_eq	40	5	search with cache (only 1: easy || now destruct 1).	0.0115067958832	6
Coq.ZArith.Int.i2z_0	40	2	search with cache (only 1: now Z.nzsimpl).	0.0603210926056	3
Coq.ZArith.Int.i2z_1	40	1	search with cache (only 1: reflexivity).	0.011390209198	2
Coq.ZArith.Int.i2z_2	40	3	search with cache (only 1: trivial).	0.0160899162292	4
Coq.ZArith.Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0109050273895	1
Coq.ZArith.Int.i2z_add	40	8	search with cache (only 1: reflexivity).	0.0145099163055	9
Coq.ZArith.Int.i2z_opp	40	0	search with cache (only 1: reflexivity).	0.0114889144897	1
Coq.ZArith.Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0111470222473	1
Coq.ZArith.Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.0109331607819	1
Coq.ZArith.Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0110418796539	1
Coq.ZArith.Int.i2z_eqb	40	1	search with cache (only 1: reflexivity).	0.0130560398102	2
Coq.ZArith.Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0109720230103	1
Coq.ZArith.Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0110211372375	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: trivial).	0.0132207870483	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	search with cache (only 1: reflexivity).	0.013571023941	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40	0.1.5.0.1.8.12.6.1.23	search with cache (only 1: intros x y H; only 1: generalize x, y; only 1: clear x y; only 1: induction x; only 1: auto with zarith; only 1: simpl; only 1: intros; only 1: rewrite IHx; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial).	32.8059999943	102720
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.0.0.4.0.0.0.21	search with cache (only 1: induction n; only 1: intros H; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: intros; only 1: now f_equal).	0.742347002029	710
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	2	search with cache (only 1: trivial).	0.0137228965759	3
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0136950016022	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	13	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0770020484924	79
Coq.ZArith.Zpower.two_p_equiv	40	4.0.0.3.2.1.2.10.13	search with cache (only 1: generalize 1; only 1: destruct x; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: now apply Pos.iter_swap_gen; only 1: simpl; only 1: auto with zarith).	2.87130594254	4772
Coq.ZArith.Zpower.two_power_nat_S	40	2	search with cache (only 1: reflexivity).	0.0151469707489	3
Coq.ZArith.Zpower.shift_nat_plus	40	9.0.2.23	search with cache (only 1: induction n; only 1: auto with zarith; only 1: simpl; only 1: now f_equal).	1.77540802956	4138
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	0	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0141201019287	1
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0240678787231	15
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40
Coq.ZArith.auxiliary.Zle_left	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0124659538269	1
Coq.ZArith.auxiliary.Zle_left_rev	40	7	search with cache (only 1: apply Z.le_0_sub).	0.0242259502411	8
Coq.ZArith.auxiliary.Zlt_left_rev	40	9	search with cache (only 1: apply Z.lt_0_sub).	0.0269830226898	10
Coq.ZArith.auxiliary.Zlt_left_lt	40	40	search with cache (only 1: apply Z.lt_0_sub).	2.87969017029	2750
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.9	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0613131523132	38
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.7	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.294309139252	131
Coq.ZArith.auxiliary.Zgt_left_gt	40	2.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0328841209412	6
Coq.ZArith.auxiliary.Zgt_left_rev	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0325791835785	4
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	0.0.0.12	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.233216047287	130
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	1.0.0.22.4	search with cache (only 1: symmetry; only 1: destruct p; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).	0.674733877182	1113
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	1.0.1.0.2.1.0.0.0	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.702851057053	740
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40	11.1.1.1.11.0.0.1.0	search with cache (only 1: unfold Z.le, Z.ge; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: left; only 1: now Z.swap_greater; only 1: right; only 1: auto; only 1: left; only 1: now Z.swap_greater).	16.9452421665	19834
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	22	search with cache (only 1: Z.order).	0.480633020401	545
Coq.ZArith.Zorder.Zlt_not_le	40	19	search with cache (only 1: Z.order).	0.391762971878	331
Coq.ZArith.Zorder.Zle_not_gt	40	7	search with cache (only 1: auto with arith).	0.0456647872925	26
Coq.ZArith.Zorder.Zgt_not_le	40	2.5	search with cache (only 1: intros; only 1: auto).	0.0193400382996	9
Coq.ZArith.Zorder.Znot_ge_lt	40
Coq.ZArith.Zorder.Znot_lt_ge	40	2.13	search with cache (only 1: intros; only 1: auto).	0.308170795441	196
Coq.ZArith.Zorder.Znot_gt_le	40	1	search with cache (only 1: trivial).	0.0129370689392	2
Coq.ZArith.Zorder.Znot_le_gt	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0265109539032	5
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	21.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	2.56977510452	1994
Coq.ZArith.Zorder.Zgt_irrefl	40	13	search with cache (only 1: now f_equal).	0.0677618980408	100
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	5.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.118247032166	15
Coq.ZArith.Zorder.Zle_gt_trans	40	8.9.0	search with cache (only 1: Z.swap_greater; only 1: intros le_mn2; only 1: Z.order).	2.04502010345	856
Coq.ZArith.Zorder.Zgt_le_trans	40	1.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0904431343079	11
Coq.ZArith.Zorder.Zge_trans	40	0.2	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0736899375916	13
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0318880081177	4
Coq.ZArith.Zorder.Zsucc_gt_reg	40	34.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	8.56621313095	12475
Coq.ZArith.Zorder.Zsucc_le_reg	40	16	search with cache (only 1: apply Z.succ_le_mono).	0.231734991074	200
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0120139122009	1
Coq.ZArith.Zorder.Zgt_succ	40	0.7	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0209701061249	12
Coq.ZArith.Zorder.Znot_le_succ	40	0.0.53	search with cache (only 1: induction 1; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	3.32741904259	5210
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0117998123169	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0120530128479	1
Coq.ZArith.Zorder.Zgt_succ_le	40
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0122718811035	1
Coq.ZArith.Zorder.Zle_succ_gt	40
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0131888389587	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	2.1.0.0.7.1.60	search with cache (only 1: induction n; only 1: apply Z.le_succ_l; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: now destruct 1; only 1: easy).	22.871117115	36056
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0229711532593	3
Coq.ZArith.Zorder.Zle_neg_pos	40	0.0	search with cache (only 1: intros; only 1: easy).	0.0206310749054	2
Coq.ZArith.Zorder.Zgt_pos_0	40	2	search with cache (only 1: now f_equal).	0.0130019187927	3
Coq.ZArith.Zorder.Zle_0_pos	40	0	search with cache (only 1: easy).	0.0203862190247	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0126979351044	1
Coq.ZArith.Zorder.Zle_0_nat	40	4.1.1.8.18	search with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.06080698967	944
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.013069152832	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0149102210999	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	24	search with cache (only 1: apply Z.add_le_mono_l).	0.524694919586	512
Coq.ZArith.Zorder.Zplus_le_reg_r	40	23	search with cache (only 1: apply Z.add_le_mono_r).	0.467589855194	422
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.13.10.13	search with cache (only 1: intros; only 1: symmetry; only 1: destruct H; only 1: apply Z.add_compare_mono_l).	2.13540005684	1999
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	62	search with cache (only 1: apply Z.add_lt_mono_r).	14.1511540413	26433
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.03648686409	7
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0310111045837	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0493640899658	12
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0256330966949	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0131769180298	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0508639812469	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0415740013123	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	1.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0557520389557	14
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0410709381104	4
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	3.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0267970561981	5
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0241038799286	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0123620033264	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0266208648682	4
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0121510028839	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0395450592041	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0410418510437	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	1.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0245130062103	4
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0244271755219	3
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0617799758911	2
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	44	search with cache (only 1: apply Z.le_0_sub).	2.14822816849	2901
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	0.0	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0396709442139	2
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	3	search with cache (only 1: auto).	0.0136229991913	4
Coq.ZArith.Zbool.Zone_min_pos	40	1.0.0.0.16.1.31.1.0	search with cache (only 1: intros H; only 1: apply Z.leb_gt in H; only 1: destruct n; only 1: now apply Z.leb_le, Z.lt_le_incl; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: discriminate).	27.0643801689	61928
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.21	search with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	0.415409088135	815
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.0.7	search with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.0259618759155	19
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.2.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0398440361023	23
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40
Coq.ZArith.ZArith_dec.Zcompare_rect	40	1.10.0.10.0.10.0	search with cache (only 1: destruct (n ?= m); only 1: intros x y H; only 1: auto; only 1: intros x y H; only 1: auto; only 1: intros x y H; only 1: auto).	12.1240639687	16543
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.012316942215	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.1.1	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.137549877167	29
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.1.1.0.1.7	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || (right; tauto); only 1: now left || (right; tauto); only 1: now left || (right; tauto)).	3.7584400177	1372
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.0.0.2.5	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.4239051342	490
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	1.1.4	search with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).	0.0537438392639	31
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.1.1.0.0.1.1.0.0.1.0	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: right; only 1: auto).	3.60541605949	4414
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	3.10.2.10.1.50.31	search with cache (only 1: intro H; only 1: destruct H; only 1: now left || now right; only 1: right; only 1: now subst; only 1: right; only 1: now subst).	25.2086830139	80396
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: split).	0.0117959976196	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.0.3.0.1.0.1	search with cache (only 1: destruct b as [| b| b]; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: now elim Hb).	0.667804002762	412
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0159459114075	2
Coq.Program.Wf.Fix_F_inv	40	0.7.6.2.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	1.17665600777	1448
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0288090705872	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.2	search with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.016058921814	4
Coq.Program.Wf.Fix_F_sub_rect	40	2.9.0.4.4	search with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Fix_F_eq; only 1: auto).	0.725745916367	1342
Coq.Program.Wf.eq_Fix_F_sub	40	8.5	search with cache (only 1: apply Fix_F_inv; only 1: auto).	0.322818994522	220
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	3.0.0.10	search with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	0.105448007584	237
Coq.Program.Equality.JMeq_eq_refl	40	6.0.0.0.0.3	search with cache (only 1: assert (UIP : forall y' y'' : x = x, y' = y''); only 1: intros; only 1: apply eq_trans_r with eq_refl; only 1: apply UIP_refl; only 1: apply UIP_refl; only 1: auto).	0.459087848663	561
Coq.Program.Equality.UIP_refl_refl	40	6	search with cache (only 1: apply UIP).	0.0356299877167	28
Coq.Program.Equality.inj_pairT2_refl	40	1	search with cache (only 1: apply UIP_refl).	0.00698590278625	2
Coq.Program.Equality.solution_left	40	1.0.1	search with cache (only 1: intros H ?; only 1: destruct 1; only 1: exact H).	0.00944995880127	5
Coq.Program.Equality.solution_right	40	1.0.2	search with cache (only 1: intros H ?; only 1: destruct 1; only 1: exact H).	0.0120720863342	17
Coq.Program.Equality.deletion	40	1	search with cache (only 1: auto).	0.00521683692932	2
Coq.Program.Equality.simplification_heq	40	21.41.6.13	search with cache (only 1: intro H; only 1: intro UIP_refl; only 1: subst; only 1: auto).	2.82371497154	26851
Coq.Program.Equality.simplification_existT2	40	0.0.0.47.0	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	1.21344709396	6388
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.0.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0104019641876	3
Coq.Program.Combinators.compose_id_left	40	0.2	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.0101270675659	4
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00963497161865	2
Coq.Program.Combinators.compose_assoc	40	0.0.0	search with cache (only 1: intros A B C Hl Hr; only 1: intros Hfst Hsnd; only 1: reflexivity).	0.0123128890991	3
Coq.Program.Combinators.flip_flip	40	17.0	search with cache (only 1: intros; only 1: trivial).	0.0514211654663	262
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.010528087616	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0.0	search with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0388579368591	6
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40	0.10.3.5.1	search with cache (only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: intro H; only 1: rewrite H; only 1: auto).	5.56833195686	3986
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sorted_merge	40
Coq.Sorting.Mergesort.Permuted_merge	40
Coq.Sorting.Mergesort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sorted_merge_stack	40	2.1.2.1.1.0.1.2.0.0.0	search with cache (only 1: induction stack as [| []]; only 1: firstorder using StronglySorted_inv; only 1: destruct H; only 1: constructor; only 1: intros; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: intros; only 1: auto).	7.72705793381	11298
Coq.Sorting.Mergesort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sorted_sort	40
Coq.Sorting.Mergesort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Permuted_sort	40
Coq.Sorting.Mergesort.StronglySorted_sort	40
Coq.Sorting.Mergesort.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40
Coq.Sorting.Permutation.Permutation_cons	40	1.6.3.7	search with cache (only 1: intro y; only 1: intros n [=<-] le_mn1 le_mn2; only 1: intros Ij; only 1: auto).	0.495020151138	524
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40	0.0.0.0.0.4.0.1.0.0.0.0.0.4.0.0.5.0.6.3.8	search with cache (only 1: intro y; only 1: intros n [=<-] le_mn1 le_mn2; only 1: revert le_mn1 le_mn2; only 1: intros l l' Hperm; only 1: constructor; only 1: induction Hperm; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto; only 1: induction Hperm; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	27.6926870346	65669
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.1.1.0.9	search with cache (only 1: induction l; only 1: intros l l' Hperm; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	0.922142982483	1456
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.1.2	search with cache (only 1: intros l l' Hperm; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0438179969788	6
Coq.Sorting.Permutation.Permutation_rev	40	2.14.4.0.3	search with cache (only 1: induction l; only 1: repeat constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	5.76703000069	4165
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.1.0.5	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.28594994545	228
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	8.3	search with cache (only 1: intros; only 1: congruence).	0.0696549415588	127
Coq.Sorting.PermutSetoid.permut_sym	40	1.2	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0145251750946	5
Coq.Sorting.PermutSetoid.permut_trans	40	12.1	search with cache (only 1: intros; only 1: congruence).	1.66448402405	1402
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	1.0.1.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0268878936768	16
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	0.0.2.0.3	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.0595090389252	17
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40	2.2.0.0.2.0.2.15.1	search with cache (only 1: unfold permutation, meq in *; only 1: intro a; only 1: simpl; only 1: intros; only 1: generalize (H a0); only 1: clear H; only 1: destruct (eqA_dec a a0); only 1: auto with arith; only 1: auto with arith).	28.2562901974	32946
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	5.1.79.0	search with cache (only 1: intros; only 1: destruct (eqA_dec a a'); only 1: trivial; only 1: intuition).	20.9674298763	77157
Coq.Sorting.PermutSetoid.permut_app_inv2	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	0.789423942566	198
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	2.2.1.0.9	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: trivial; only 1: contradict NEQ; only 1: eauto using permut_remove_hd_eq, Equivalence_Reflexive).	0.259899139404	255
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	3.5.1.0.5.1	search with cache (only 1: intros l a; only 1: induction l; only 1: inversion 1; only 1: rewrite multiplicity_InA; only 1: intros H; only 1: trivial).	6.6597430706	4429
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.1.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: trivial; only 1: trivial; only 1: trivial).	0.0215740203857	7
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.1	search with cache (only 1: inversion 1; only 1: trivial).	0.0187368392944	12
Coq.Sorting.Sorted.Sorted_inv	40	1.0.7	search with cache (only 1: intros x l; only 1: inversion_clear 1; only 1: auto).	0.0616400241852	56
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.3.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.041491985321	20
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0138459205627	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	2.29	search with cache (only 1: simpl; only 1: trivial).	0.38794708252	816
Coq.Sorting.Heap.leA_Tree_Node	40	0	search with cache (only 1: auto with datatypes).	0.0170319080353	1
Coq.Sorting.Heap.invert_heap	40	0.11.11	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto with datatypes).	0.325002908707	379
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.1.1.0.0.1.1.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	1.14969110489	676
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	2.7.1.1.0.0	search with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	1.19542503357	704
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	1.17	search with cache (only 1: fix merge0 1; only 1: auto using Sorted_cons, HdRel_cons with datatypes).	0.345751047134	323
Coq.Sorting.Heap.list_to_heap	40	1.0.1	search with cache (only 1: fix merge0 1; only 1: intros; only 1: auto with datatypes).	0.0371840000153	14
Coq.Sorting.Heap.heap_to_list	40	4.30	search with cache (only 1: fix merge0 1; only 1: auto using Sorted_cons, HdRel_cons with datatypes).	0.904913187027	1851
Coq.Sorting.Heap.treesort	40	0.0.4	search with cache (only 1: fix merge0 1; only 1: intros; only 1: auto with datatypes).	0.049259185791	22
Coq.Init.Wf.Acc_inv	40	9.1.1.12	search with cache (only 1: intro H1; only 1: intros H ?; only 1: destruct H; only 1: auto).	6.06379079819	686
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0148918628693	12
Coq.Init.Wf.well_founded_ind	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0172121524811	12
Coq.Init.Wf.Fix_F_eq	40	1.3.15.18	search with cache (only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: auto).	0.386671066284	2261
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	1.6.9.10.8.0	search with cache (only 1: intro; only 1: intros [?| ?]; only 1: trivial; only 1: intro H; only 1: induction n; only 1: exact H).	1.02734208107	7125
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0113849639893	6
Coq.Init.Peano.pred_Sn	40	0	search with cache (only 1: reflexivity).	0.00433993339539	1
Coq.Init.Peano.not_eq_S	40	11.2.0.30	search with cache (only 1: intros Hfst Hsnd; only 1: red; only 1: intro H; only 1: auto).	3.05925321579	27922
Coq.Init.Peano.O_S	40	1.9	search with cache (only 1: intro H; only 1: discriminate).	0.00998687744141	34
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.62.9.2	search with cache (only 1: induction n; only 1: trivial; only 1: simpl in *; only 1: auto).	19.0866091251	73431
Coq.Init.Peano.plus_O_n	40	1	search with cache (only 1: reflexivity).	0.00749015808105	19
Coq.Init.Peano.plus_n_Sm	40	0.0.16.2.8	search with cache (only 1: induction n; only 1: reflexivity; only 1: intro H; only 1: simpl; only 1: auto).	4.12225103378	7356
Coq.Init.Peano.plus_Sn_m	40	0.0	search with cache (only 1: intros n m; only 1: auto).	0.00647592544556	2
Coq.Init.Peano.mult_n_O	40	0.9.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: auto).	0.0155050754547	103
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.11.0	search with cache (only 1: induction n; only 1: trivial; only 1: auto).	0.0168559551239	103
Coq.Init.Peano.le_n_S	40	0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.00744605064392	3
Coq.Init.Peano.nat_case	40	11.11.7	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.219156980515	1509
Coq.Init.Peano.nat_double_ind	40	1.0.11.30.15.8	search with cache (only 1: induction n; only 1: exact H; only 1: intros; only 1: destruct m; only 1: auto; only 1: auto).	2.48484897614	28553
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.2.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.30277395248	3369
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.26964402199	2534
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.747190952301	1534
Coq.Init.Peano.nat_rect_succ_r	40	0.5.3.0.4	search with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: reflexivity).	0.54784488678	1157
Coq.Init.Peano.nat_rect_plus	40	0.0.1.3.0.2	search with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.0708518028259	123
Coq.Init.Datatypes.andb_prop	40	0.11.0.11.3.6.1.16.3.6	search with cache (only 1: intro H; only 1: destruct H; only 1: repeat split; only 1: exact H; only 1: intro H; only 1: destruct H; only 1: intro H; only 1: auto; only 1: intro H; only 1: auto).	5.9233109951	92339
Coq.Init.Datatypes.andb_true_intro	40	7.7.3.4.8.7	search with cache (only 1: intro H; only 1: intro H1; only 1: intros [? ?]; only 1: destruct H; only 1: trivial; only 1: trivial).	0.701295137405	7457
Coq.Init.Datatypes.eq_true_ind_r	40	7.3.6.8.43	search with cache (only 1: intros h1 h2; only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: trivial).	1.10745000839	25080
Coq.Init.Datatypes.eq_true_rec_r	40	1.36.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: exact H).	0.262737035751	3239
Coq.Init.Datatypes.eq_true_rect_r	40	7.3.20	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.157727003098	1954
Coq.Init.Datatypes.surjective_pairing	40	0.0.0	search with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	0.00628209114075	3
Coq.Init.Datatypes.injective_projections	40	0.6.1.58.1.2	search with cache (only 1: intros A B [H1 H2]; only 1: intros [? ?]; only 1: simpl in *; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	24.3776772022	256518
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00855898857117	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	8.8.8.3.8	search with cache (only 1: intro H; only 1: destruct H; only 1: trivial; only 1: trivial; only 1: trivial).	0.259659051895	2325
Coq.Init.Datatypes.CompOpp_inj	40
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00352001190186	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.3.1.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0201489925385	114
Coq.Init.Logic.iff_sym	40	0.0.4.2	search with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.00446891784668	10
Coq.Init.Logic.and_iff_compat_l	40	4.0.5.0.4.0.5.0.5.3	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.129302024841	1913
Coq.Init.Logic.and_iff_compat_r	40	0.6.7.0.0.0.1.7.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: trivial).	0.375076055527	6862
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.5.8.2.0.0.5.0.1.2.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: trivial; only 1: right; only 1: trivial; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: trivial).	0.689480066299	16022
Coq.Init.Logic.imp_iff_compat_l	40	8.8.9.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0776309967041	1086
Coq.Init.Logic.imp_iff_compat_r	40	9.9.10.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.106619119644	1595
Coq.Init.Logic.not_iff_compat	40	11.11.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.109607934952	1723
Coq.Init.Logic.neg_false	40	0.0.10.0.2.0	search with cache (only 1: split; only 1: split; only 1: trivial; only 1: destruct 1; only 1: intros [? ?]; only 1: trivial).	0.054829120636	865
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.3.22.0.0.3.22.0.0.0.4	search with cache (only 1: intro H1; only 1: intro A; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: exact H; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: exact H).	9.30096411705	187177
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.13.0.19.0.0.13.0.19.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: exact H; only 1: left; only 1: exact H; only 1: intros [?| ?]; only 1: right; only 1: exact H; only 1: left; only 1: exact H).	33.856235981	652508
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	search with cache (only 1: intros; only 1: exact H).	0.00584101676941	14
Coq.Init.Logic.iff_to_and	40	0.8.3.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: exact H; only 1: trivial; only 1: intro H; only 1: exact H).	0.370056867599	3774
Coq.Init.Logic.inst	40	3	search with cache (only 1: trivial).	0.00606298446655	11
Coq.Init.Logic.gen	40	32.4.8	search with cache (only 1: intros; only 1: intro H1; only 1: auto).	0.673182964325	12769
Coq.Init.Logic.absurd	40	3.10.9.4	search with cache (only 1: intro H; only 1: intros; only 1: elim H1; only 1: trivial).	0.103559017181	1933
Coq.Init.Logic.eq_sym	40	3.4	search with cache (only 1: destruct 1; only 1: trivial).	0.00716185569763	16
Coq.Init.Logic.eq_trans	40	3.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00523495674133	6
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: exact H).	0.00431299209595	2
Coq.Init.Logic.f_equal	40	3.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00484800338745	5
Coq.Init.Logic.not_eq_sym	40	3.11.0.3.10	search with cache (only 1: intro H1; only 1: unfold not; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.215219020844	2472
Coq.Init.Logic.eq_sind_r	40	3.0.39	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: trivial).	0.403441905975	7934
Coq.Init.Logic.eq_ind_r	40	0.14.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: exact H).	0.0254929065704	366
Coq.Init.Logic.eq_rec_r	40	0.14.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: exact H).	0.0252318382263	366
Coq.Init.Logic.eq_rect_r	40	0.14.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: exact H).	0.025584936142	366
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	4.1.1	search with cache (only 1: destruct H; only 1: destruct 1; only 1: trivial).	0.0084400177002	9
Coq.Init.Logic.rew_opp_r	40	0.9.3	search with cache (only 1: destruct H; only 1: intro H; only 1: reflexivity).	0.0378329753876	181
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00547313690186	3
Coq.Init.Logic.f_equal2	40	0.2.15.14	search with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: destruct H; only 1: trivial).	0.635005950928	8532
Coq.Init.Logic.f_equal3	40	0.0.0.0.4	search with cache (only 1: intro H; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00934600830078	26
Coq.Init.Logic.f_equal4	40	0.0.0.0.0.3	search with cache (only 1: intro H; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00795483589172	9
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0.3	search with cache (only 1: intro H; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00918006896973	10
Coq.Init.Logic.f_equal_compose	40	4.7.27.39	search with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	4.79205608368	67495
Coq.Init.Logic.eq_trans_refl_l	40	0.1.5.25.6	search with cache (only 1: intro H1; only 1: intros h1 h2; only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.316908121109	4752
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0054030418396	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00526189804077	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00539684295654	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00580596923828	2
Coq.Init.Logic.eq_trans_assoc	40	0.1.15.0.11.0	search with cache (only 1: destruct e; only 1: intro H; only 1: destruct H; only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.424116134644	3608
Coq.Init.Logic.rew_map	40	1.3.2	search with cache (only 1: destruct H; only 1: intro H; only 1: reflexivity).	0.00749683380127	9
Coq.Init.Logic.eq_trans_map	40	0.1.1.0.5.2.5.45.5.27	search with cache (only 1: intros h1 h2; only 1: intro H1; only 1: intros ? ? ? Fl Fr; only 1: intro H; only 1: destruct H; only 1: intro H; only 1: destruct H; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	27.6013021469	312211
Coq.Init.Logic.map_subst	40	0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0125668048859	25
Coq.Init.Logic.map_subst_map	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.00706601142883	3
Coq.Init.Logic.rew_swap	40	0.1.1	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0083110332489	20
Coq.Init.Logic.rew_compose	40	1.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.00642395019531	4
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros A C h1 h2; only 1: reflexivity).	0.00583219528198	2
Coq.Init.Logic.eq_trans_map_distr	40	0.1.1.59.2	search with cache (only 1: intros; only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	2.50493884087	34507
Coq.Init.Logic.eq_sym_map_distr	40	0.18.13.9.8	search with cache (only 1: intros A C h1 h2; only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.918473005295	12779
Coq.Init.Logic.eq_trans_sym_distr	40	0.3.17.1	search with cache (only 1: destruct e; only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.202514886856	1079
Coq.Init.Logic.eq_trans_rew_distr	40	0.3	search with cache (only 1: destruct e'; only 1: reflexivity).	0.00702404975891	13
Coq.Init.Logic.rew_const	40	0.4.1	search with cache (only 1: destruct e; only 1: intro H; only 1: reflexivity).	0.0063169002533	8
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	7.15.3.3	search with cache (only 1: intros; only 1: destruct H; only 1: repeat split; only 1: trivial).	0.195583105087	3043
Coq.Init.Logic.inhabited_covariant	40	69.2	search with cache (only 1: destruct 2; only 1: auto).	1.77675390244	51249
Coq.Init.Logic.eq_stepl	40	1.1.45	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: destruct 2; only 1: exact H).	0.314095020294	6275
Coq.Init.Logic.iff_stepl	40	1.0.2.8.20	search with cache (only 1: red; only 1: intro H; only 1: intros A B [H1 H2]; only 1: intros [Hl Hr]; only 1: auto).	0.992586135864	12535
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.5.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0108299255371	21
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00733184814453	2
Coq.Init.Logic_Type.identity_sym	40	8.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00682687759399	10
Coq.Init.Logic_Type.identity_trans	40	1.0	search with cache (only 1: destruct 2; only 1: exact H).	0.00686192512512	3
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00645184516907	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.1.0.0	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.00953888893127	13
Coq.Init.Logic_Type.identity_ind_r	40	1.42.0	search with cache (only 1: intros A x P H y H0; only 1: destruct H0 in H; only 1: exact H).	0.347827911377	4607
Coq.Init.Logic_Type.identity_rec_r	40	1.42.0	search with cache (only 1: intros A x P H y H0; only 1: destruct H0 in H; only 1: exact H).	0.355968952179	4607
Coq.Init.Logic_Type.identity_rect_r	40	8.3.25	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.286089897156	3038
Coq.Init.Specif.sigT_eta	40	0.13	search with cache (only 1: destruct p; only 1: split).	0.013279914856	75
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0068359375	2
Coq.Init.Specif.sigT2_eta	40	2.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00866913795471	4
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00769591331482	2
Coq.Init.Specif.exists_to_inhabited_sig	40	1.1.4.5	search with cache (only 1: intros [? ?]; only 1: split; only 1: exists x; only 1: exact H).	0.042366027832	171
Coq.Init.Specif.inhabited_sig_to_exists	40	2.1.0.33.19	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: trivial).	0.422073841095	7277
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0103099346161	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0104880332947	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0149111747742	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.13.6.1	search with cache (only 1: destruct r, q, p; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.952166795731	1810
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0115900039673	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0118288993835	3
Coq.Init.Specif.eq_sig_uncurried	40	0.6.3.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.182522058487	209
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	11.0.0.0.1.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried; only 1: trivial).	2.95569205284	6485
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0105469226837	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.2.3.2.9.1	search with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.837963104248	1241
Coq.Init.Specif.eq_sigT2_uncurried_iff	40
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0150809288025	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0139319896698	4
Coq.Init.Specif.eq_sig2_uncurried	40	0.4.8.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.614946126938	705
Coq.Init.Specif.eq_sig2_uncurried_iff	40
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0147018432617	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	22.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.204710960388	1315
Coq.QArith.QOrderedType.lt_strorder	40
Coq.QArith.QOrderedType.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0542349815369	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0139620304108	3
Coq.QArith.Qreduction.Qminus'_correct	40	4.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0161428451538	6
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	0.0.4.0	search with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H, H0; only 1: auto with qarith).	0.0359480381012	8
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	0.0.5.0	search with cache (only 1: intros; only 1: unfold Qminus'; only 1: rewrite H, H0; only 1: auto with qarith).	0.0367329120636	9
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	18.11.1	search with cache (only 1: intros a b; only 1: symmetry; only 1: now rewrite !Qred_correct).	5.93020915985	4030
Coq.QArith.Qreduction.Qred_le	40	5	search with cache (only 1: now rewrite !Qred_correct).	0.284862041473	49
Coq.QArith.Qreduction.Qred_lt	40	6	search with cache (only 1: now rewrite !Qred_correct).	0.244146108627	43
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40	1.2.5.0.0.0.16	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: set (K := canon [x]); only 1: simpl in K; only 1: rewrite !Qred_correct in *; only 1: clear K; only 1: apply Qabs_triangle).	7.16942691803	3901
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	22	search with cache (only 1: apply Qle_Qabs).	0.307536840439	587
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	2.3.0.2.7.1	search with cache (only 1: unfold Qcle, Qcabs, Qcminus, Qcplus, Qcopp, Q2Qc, this; only 1: repeat rewrite Qred_correct; only 1: rewrite Qabs_Qle_condition; only 1: fold (this x) (this y); only 1: case (canon y); only 1: intuition).	10.7422981262	5705
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: reflexivity).	0.0384409427643	7
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40	5.0.0.4.0.0.1.6.3.0.0.36.3	search with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: rewrite Qinv_mult_distr; only 1: ring; only 1: simpl; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: reflexivity; only 1: simpl; only 1: ring).	18.9709150791	18268
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	4.0.1.0.0.0.5	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: simpl; only 1: auto with *; only 1: simpl; only 1: reflexivity).	0.269341945648	358
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.00769901275635	1
Coq.QArith.Qfield.ex2	40	0	search with cache (only 1: exact Qplus_comm).	0.00744080543518	1
Coq.QArith.Qfield.ex3	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0173099040985	2
Coq.QArith.Qfield.ex4	40	0	search with cache (only 1: ring).	0.0122709274292	1
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0127139091492	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0127758979797	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0145211219788	3
Coq.QArith.Qfield.ex8	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0149018764496	2
Coq.QArith.Qfield.ex9	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0149891376495	2
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0317788124084	5
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0181450843811	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.2.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.0815711021423	9
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.1.0.0	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: split; only 1: now intros <-; only 1: auto).	0.035973072052	6
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	0.1.1.0	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.113454818726	6
Coq.QArith.Qcanon.Qcge_alt	40	4.4.8.2.3	search with cache (only 1: split; only 1: intro H; only 1: apply Zle_not_lt; only 1: intuition idtac; only 1: intuition).	5.22516417503	8668
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	15	search with cache (only 1: discriminate).	0.0847280025482	91
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	0.3.1.1.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	0.122726917267	19
Coq.QArith.Qcanon.Qcplus_0_r	40	24.1.3	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	9.61370706558	9724
Coq.QArith.Qcanon.Qcplus_comm	40	6.26.0.0	search with cache (only 1: intros x y; only 1: qc; only 1: ring_simplify; only 1: auto with qarith).	6.28512811661	6439
Coq.QArith.Qcanon.Qcopp_involutive	40	26.42.2.3	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring_simplify; only 1: split).	4.13398814201	15624
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.1.22.1.2	search with cache (only 1: intros n; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	11.2189209461	4999
Coq.QArith.Qcanon.Qcmult_assoc	40	8.50.0.3	search with cache (only 1: intros a b; only 1: intros (x, y); only 1: qc; only 1: ring).	17.5028641224	33706
Coq.QArith.Qcanon.Qcmult_0_l	40	10.0	search with cache (only 1: intros; only 1: now intuition; apply Z.lt_le_incl).	0.526005029678	239
Coq.QArith.Qcanon.Qcmult_0_r	40	2.1.10.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	1.91938710213	1478
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0368740558624	5
Coq.QArith.Qcanon.Qcmult_comm	40	7.4.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	0.620173931122	375
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	23.1.1.3	search with cache (only 1: intros a b; only 1: intros (x, y); only 1: qc; only 1: ring).	19.4488270283	12705
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	15.1.1.3	search with cache (only 1: intros a b; only 1: intros (x, y); only 1: qc; only 1: ring).	5.95290017128	3404
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.2.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.0395081043243	7
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	2.0.86	search with cache (only 1: red; only 1: intros; only 1: auto with qarith).	4.35060691833	18593
Coq.QArith.Qcanon.Qcle_antisym	40	3.2	search with cache (only 1: intros a b H; only 1: intuition).	0.0272109508514	24
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	1.0.4.0	search with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	0.0487849712372	41
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	6.0.2.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with qarith).	0.348886966705	370
Coq.QArith.Qcanon.Qcnot_lt_le	40	1.2.1.0	search with cache (only 1: intros; only 1: eapply Qle_trans; only 1: auto with qarith; only 1: auto with qarith).	0.0259199142456	8
Coq.QArith.Qcanon.Qcnot_le_lt	40	4.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.030296087265	15
Coq.QArith.Qcanon.Qclt_not_le	40	3.0.1	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.0721027851105	60
Coq.QArith.Qcanon.Qcle_not_lt	40	4.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.0217361450195	7
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	2.3.28	search with cache (only 1: induction n; only 1: intuition; only 1: intuition).	5.38816905022	4946
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.0.0.0.0.1.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_l; only 1: auto).	0.0329930782318	10
Coq.QArith.Qreals.IZR_nz	40	1.0	search with cache (only 1: intro t; only 1: now apply not_0_IZR).	0.0920169353485	3
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	3.0.1.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0373771190643	16
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	0	search with cache (only 1: reflexivity).	0.0133049488068	1
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	1.3	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: trivial).	0.0311388969421	29
Coq.QArith.QArith_base.Qeq_sym	40	13.0	search with cache (only 1: intros H; only 1: now subst).	0.27193903923	416
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	0.0.0.0.0.15.0.0.13.151	search with cache (only 1: constructor; only 1: now subst; only 1: intros a b; only 1: auto with qarith; only 1: intros x y H; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	32.9776318073	104522
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	2.9.5.0	search with cache (only 1: intros H0; only 1: destruct x; only 1: apply Zeq_is_eq_bool; only 1: trivial).	1.10632491112	1152
Coq.QArith.QArith_base.Qeq_eq_bool	40	2.0	search with cache (only 1: unfold Qeq; only 1: apply Qeq_bool_iff).	0.0679929256439	4
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	2.9.5.3	search with cache (only 1: intros H0; only 1: destruct x; only 1: apply Zle_is_le_bool; only 1: trivial).	0.379690885544	748
Coq.QArith.QArith_base.Qnot_eq_sym	40	3.0.7	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros a b; only 1: auto with qarith).	0.646767854691	199
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	2.3.0.0	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: symmetry; only 1: now symmetry).	0.0503170490265	24
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.21.6	search with cache (only 1: intros H0; only 1: rewrite <- H0; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	3.13268208504	4932
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.1	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.0536608695984	7
Coq.QArith.QArith_base.Qmake_Qdiv	40	0.0.0.2	search with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: reflexivity).	0.0216479301453	6
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	0.16.0.0.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: rewrite Hx, Hy; only 1: now symmetry).	8.41950798035	7211
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0.1.4	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl in *; only 1: auto with qarith).	0.0199339389801	8
Coq.QArith.QArith_base.Qplus_assoc	40	2.1.0.0.1.6.0	search with cache (only 1: destruct x; only 1: unfold Qeq, Qlt, Qcompare; only 1: destruct y; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	5.01398301125	596
Coq.QArith.QArith_base.Qplus_0_l	40	2.0.0.4	search with cache (only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: ring).	0.430687904358	10
Coq.QArith.QArith_base.Qplus_0_r	40	1.1.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: ring).	0.075474023819	8
Coq.QArith.QArith_base.Qplus_comm	40	1.0.0.0.0.2	search with cache (only 1: destruct x; only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.114324092865	11
Coq.QArith.QArith_base.Qopp_involutive	40	0.1.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0310468673706	5
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0334768295288	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.6.1.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring_simplify; only 1: simpl_mult; only 1: ring).	1.93344712257	210
Coq.QArith.QArith_base.Qmult_0_l	40	8.0	search with cache (only 1: red; only 1: reflexivity).	0.108541965485	75
Coq.QArith.QArith_base.Qmult_0_r	40	2.0.1.0	search with cache (only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: ring).	0.108112096786	21
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.1.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.0874321460724	8
Coq.QArith.QArith_base.Qmult_comm	40
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.2.0.0.0.1	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl_mult; only 1: ring).	0.283895015717	29
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.114447116852	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	0.0.10.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: f_equal).	0.533753871918	805
Coq.QArith.QArith_base.inject_Z_opp	40	1	search with cache (only 1: reflexivity).	0.0195009708405	12
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	5.0.0.0.1	search with cache (only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.257187843323	68
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0599310398102	6
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	70	search with cache (only 1: auto with *).	5.86145496368	2626
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40	0.0.0.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: now rewrite !Z.mul_1_r).	0.0217790603638	4
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40
Coq.QArith.QArith_base.Qle_not_lt	40
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.2.0.0.0.0.0.9	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	12.822247982	5886
Coq.QArith.QArith_base.Qmult_lt_compat_r	40	1.3.0.2.1.0.0.2	search with cache (only 1: unfold Qle, Qlt; only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: simpl; only 1: simpl_mult; only 1: rewrite Z.mul_1_r; only 1: intros LT LE; only 1: match goal with | |- (?a < ?b)%Z => ring_simplify x1 y1 (Z.pos x2) (Z.pos y2) a b end; only 1: do 2 (apply Z.mul_lt_mono_pos_r; try easy)).	22.8502929211	8645
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	1.0.3.3.0.0.0.0	search with cache (only 1: intros (a1, a2) (b1, b2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: intros LT LE; only 1: auto with zarith).	4.02999806404	2658
Coq.QArith.QArith_base.Qinv_le_0_compat	40	4.0.0.0.2.1.9.0.2.5.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qle, Qlt; only 1: intros; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl in *; only 1: destruct x1; only 1: simpl; only 1: trivial; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: auto).	28.219465971	37915
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0200548171997	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.plus_max_distr_l	40
Coq.QArith.Qminmax.plus_max_distr_r	40
Coq.QArith.Qminmax.plus_min_distr_l	40
Coq.QArith.Qminmax.plus_min_distr_r	40	1.1.2.1.1.2.1.0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: destruct (max_spec n p) as [(C, E)| (C, E)]; only 1: auto with *; only 1: auto with *; only 1: destruct (max_spec n p) as [(C, E)| (C, E)]; only 1: auto with *; only 1: auto with *).	27.43313694	11152
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	1.2.255	search with cache (only 1: simpl in *; only 1: intros n; only 1: auto with zarith).	14.4443349838	116253
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40	1.1.0.7.1.1.0.1.0	search with cache (only 1: intros [xn xd] [yn yd] Hxy; only 1: simpl in *; only 1: rewrite <- (Zdiv_mult_cancel_r xn (Z.pos xd) (Z.pos yd)); only 1: rewrite <- (Zdiv_mult_cancel_r yn (Z.pos yd) (Z.pos xd)); only 1: rewrite (Z.mul_comm (Z.pos yd) (Z.pos xd)); only 1: f_equal; only 1: auto with *; only 1: auto with *; only 1: auto with *).	4.10758900642	6796
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.3.1.3.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	1.06915903091	1223
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	2.0.0.1.0.31	search with cache (only 1: destruct x as [[| xn| xn] xd]; only 1: unfold Qred, Qeq in *; only 1: auto; only 1: unfold Qred, Qeq in *; only 1: auto; only 1: intuition).	1.7743229866	2585
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: intros H0; only 1: reflexivity).	0.312190055847	223
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.0.0.1.29	search with cache (only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: simpl in *; only 1: abstract (compute; discriminate); only 1: simpl in *; only 1: abstract (compute; discriminate)).	2.06977891922	2684
Coq.QArith.Qabs.Zabs_Qabs	40	0	search with cache (only 1: split).	0.0132842063904	1
Coq.QArith.Qabs.Qabs_opp	40	3.4.0.7.2	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	6.89661693573	8457
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	2.5.1.3.0	search with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq in *; only 1: simpl; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).	0.638403892517	604
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	0.0.14.3.0.0	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: auto with *; only 1: simpl; only 1: abstract (compute; discriminate)).	19.4775481224	14326
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	0	search with cache (only 1: reflexivity).	0.00791192054749	1
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	18.15	search with cache (only 1: hnf; only 1: trivial).	0.174292802811	792
Coq.Classes.CMorphisms.proper_proper_proxy	40	1	search with cache (only 1: exact H).	0.00689792633057	2
Coq.Classes.CMorphisms.pointwise_pointwise	40	7.1.20.11.6	search with cache (only 1: split; only 1: destruct 2; only 1: trivial; only 1: intros h1 h2; only 1: auto).	1.42563295364	5402
Coq.Classes.CMorphisms.subrelation_id_proper	40	23	search with cache (only 1: exact H).	0.0558338165283	255
Coq.Classes.CMorphisms.subrelation_respectful	40	2	search with cache (only 1: firstorder).	0.0115389823914	3
Coq.Classes.CMorphisms.subrelation_refl	40	0.16	search with cache (only 1: intro H; only 1: trivial).	0.0382947921753	130
Coq.Classes.CMorphisms.subrelation_proper	40	2.48	search with cache (only 1: hnf; only 1: auto).	0.253726959229	1336
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	4.1.16	search with cache (only 1: intro H; only 1: destruct 2; only 1: firstorder).	0.428647041321	378
Coq.Classes.CMorphisms.pointwise_subrelation	40	2	search with cache (only 1: simpl_crelation).	0.0170140266418	3
Coq.Classes.CMorphisms.forall_subrelation	40	12.1	search with cache (only 1: intro H; only 1: firstorder).	0.228116989136	214
Coq.Classes.CMorphisms.iff_impl_subrelation	40	3.0.16	search with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: tauto).	0.0819988250732	236
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.0100309848785	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00987195968628	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.0102529525757	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	12	search with cache (only 1: firstorder).	0.0266880989075	46
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	0.0955381393433	3
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	3.3.127	search with cache (only 1: transitivity y; only 1: tauto; only 1: tauto).	1.92488884926	18735
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	3.09391903877	136
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	0.0.2	search with cache (only 1: constructor; only 1: simpl_crelation; only 1: firstorder).	0.0462560653687	39
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	21	search with cache (only 1: firstorder).	0.0836071968079	208
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	3.1	search with cache (only 1: reduce; only 1: simpl_crelation).	0.0485010147095	6
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	24	search with cache (only 1: simpl_crelation).	0.209634065628	283
Coq.Classes.CMorphisms.flip_respectful	40	8	search with cache (only 1: firstorder).	0.0552530288696	34
Coq.Classes.CMorphisms.flip1	40	1	search with cache (only 1: tauto).	0.0141689777374	2
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.0101599693298	1
Coq.Classes.CMorphisms.eq_subrelation	40	43	search with cache (only 1: simpl_crelation).	0.3332259655	1180
Coq.Classes.CMorphisms.reflexive_proper	40	20.17	search with cache (only 1: hnf; only 1: trivial).	0.227173089981	1000
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: reflexivity).	0.0102739334106	1
Coq.Classes.CMorphisms.proper_proper	40	3.13.0.23	search with cache (only 1: intro H1; only 1: reduce; only 1: destruct H; only 1: firstorder).	2.10569810867	5387
Coq.Classes.CMorphisms.proper_normalizes_proper	40	3.123	search with cache (only 1: apply H; only 1: tauto).	2.94833683968	27195
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0112800598145	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.3	search with cache (only 1: intros; only 1: simpl_crelation).	0.0264008045197	5
Coq.Classes.CMorphisms.proper_sym_flip_2	40	5.8.3.0.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: red; only 1: intros; only 1: unfold respectful, relation_equivalence in *; only 1: simpl_crelation).	6.993060112	2400
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	21.3.5.5	search with cache (only 1: intro; only 1: intro; only 1: simpl_crelation; only 1: firstorder).	17.8152179718	21224
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0222780704498	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0265619754791	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	5.11	search with cache (only 1: intros A B []; only 1: tauto).	0.279616832733	780
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	2.1	search with cache (only 1: reduce; only 1: auto).	0.00699090957642	5
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00476694107056	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00795698165894	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.248692035675	1
Coq.Classes.CRelationClasses.complement_inverse	40	3	search with cache (only 1: trivial).	0.00799703598022	4
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	0.1.45	search with cache (only 1: intros n m; only 1: intros; only 1: auto).	0.301143884659	1760
Coq.Classes.CRelationClasses.flip_Reflexive	40	1.0	search with cache (only 1: hnf; only 1: exact H).	0.00917220115662	3
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	10.0.1	search with cache (only 1: hnf; only 1: intros x y H'; only 1: auto).	0.0571448802948	175
Coq.Classes.CRelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.017373085022	2
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.018492937088	2
Coq.Classes.CRelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0270488262177	2
Coq.Classes.CRelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0284371376038	2
Coq.Classes.CRelationClasses.complement_Irreflexive	40	2.43	search with cache (only 1: red; only 1: firstorder).	0.424782991409	2086
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00828289985657	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	2.2.0.14	search with cache (only 1: hnf; only 1: split; only 1: tauto; only 1: tauto).	0.107658147812	262
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.007404088974	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00904011726379	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	2.0.2.0.2	search with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.0291271209717	49
Coq.Classes.CRelationClasses.partial_order_antisym	40
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	1	search with cache (only 1: firstorder).	0.0431771278381	2
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	4.2.6	search with cache (only 1: intro; only 1: intros f [x]; only 1: tauto).	0.213468074799	380
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.0139651298523	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00863885879517	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0138659477234	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.33684015274	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	3	search with cache (only 1: trivial).	0.00448083877563	4
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0.1.45	search with cache (only 1: intros n m; only 1: intros; only 1: auto).	0.252530097961	2183
Coq.Classes.RelationClasses.flip_Reflexive	40	1.0	search with cache (only 1: hnf; only 1: exact H).	0.00397109985352	3
Coq.Classes.RelationClasses.flip_Antisymmetric	40	3.48.19	search with cache (only 1: intro H1; only 1: intros n m; only 1: auto).	2.05144095421	18779
Coq.Classes.RelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0187978744507	2
Coq.Classes.RelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0152361392975	2
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0249907970428	2
Coq.Classes.RelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0232470035553	2
Coq.Classes.RelationClasses.complement_Irreflexive	40	2.43	search with cache (only 1: red; only 1: firstorder).	0.320465087891	2478
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00410318374634	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.2.7.0	search with cache (only 1: induction l; only 1: destruct H; only 1: tauto; only 1: firstorder).	0.0338821411133	82
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.2.13.0	search with cache (only 1: induction l; only 1: hnf; only 1: tauto; only 1: firstorder).	0.081013917923	271
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	3.2.62.0.8.61.17	search with cache (only 1: split; only 1: hnf; only 1: intros Hfst Hsnd; only 1: trivial; only 1: intro H; only 1: intros ? ? ? Fl Fr; only 1: auto).	31.0826730728	437505
Coq.Classes.RelationClasses.partial_order_antisym	40	1.108.0.13	search with cache (only 1: hnf; only 1: intros; only 1: apply H; only 1: firstorder).	28.9927489758	281938
Coq.Classes.RelationClasses.PartialOrder_inverse	40	1	search with cache (only 1: firstorder).	0.0442638397217	2
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	30	search with cache (only 1: firstorder).	0.0458261966705	452
Coq.Classes.Morphisms.eq_proper_proxy	40	0	search with cache (only 1: reflexivity).	0.00813484191895	1
Coq.Classes.Morphisms.reflexive_proper_proxy	40	16.13	search with cache (only 1: hnf; only 1: trivial).	0.155737876892	602
Coq.Classes.Morphisms.proper_proper_proxy	40	1	search with cache (only 1: exact H).	0.00749182701111	2
Coq.Classes.Morphisms.pointwise_pointwise	40	1.0.4.0.0.10.1.11	search with cache (only 1: unfold relation_equivalence in *; only 1: compute; only 1: split; only 1: intro H; only 1: induction 1; only 1: auto; only 1: intros H ?; only 1: auto).	1.49783802032	4179
Coq.Classes.Morphisms.subrelation_id_proper	40	3.6	search with cache (only 1: compute; only 1: exact H).	0.019828081131	29
Coq.Classes.Morphisms.subrelation_respectful	40	2	search with cache (only 1: firstorder).	0.0115950107574	3
Coq.Classes.Morphisms.subrelation_refl	40	0.14	search with cache (only 1: intro H; only 1: trivial).	0.0326778888702	95
Coq.Classes.Morphisms.subrelation_proper	40	4	search with cache (only 1: firstorder).	0.0101690292358	5
Coq.Classes.Morphisms.proper_subrelation_proper	40	3.1.15	search with cache (only 1: intro H; only 1: destruct 2; only 1: firstorder).	0.585098981857	294
Coq.Classes.Morphisms.pointwise_subrelation	40	0.2	search with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.012001991272	4
Coq.Classes.Morphisms.forall_subrelation	40	4.4	search with cache (only 1: reduce; only 1: firstorder).	0.0204520225525	21
Coq.Classes.Morphisms.iff_impl_subrelation	40	2.13	search with cache (only 1: hnf; only 1: firstorder).	0.0439691543579	116
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00968980789185	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	11	search with cache (only 1: firstorder).	0.0230939388275	33
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.0637528896332	11
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	2.2.129	search with cache (only 1: transitivity y; only 1: tauto; only 1: tauto).	2.01675605774	19076
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	3.14863610268	466
Coq.Classes.Morphisms.symmetric_equiv_flip	40	1	search with cache (only 1: firstorder).	0.0142328739166	2
Coq.Classes.Morphisms.compose_proper_obligation_1	40	25	search with cache (only 1: firstorder).	0.121579885483	306
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	2.1	search with cache (only 1: reduce; only 1: simpl_relation).	0.0208730697632	5
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	19	search with cache (only 1: simpl_relation).	0.0995259284973	165
Coq.Classes.Morphisms.flip_respectful	40	2.0.2	search with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl_relation).	0.0788769721985	26
Coq.Classes.Morphisms.flip1	40	1	search with cache (only 1: tauto).	0.012845993042	2
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.0100030899048	1
Coq.Classes.Morphisms.eq_subrelation	40	26	search with cache (only 1: simpl_relation).	0.0966138839722	333
Coq.Classes.Morphisms.reflexive_proper	40	15	search with cache (only 1: simpl_relation).	0.0360181331635	91
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: reflexivity).	0.0100660324097	1
Coq.Classes.Morphisms.proper_proper	40	1.0.3.15	search with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: firstorder).	0.371438026428	354
Coq.Classes.Morphisms.proper_normalizes_proper	40	7.15	search with cache (only 1: reduce in H; only 1: firstorder).	0.210083007812	364
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0116579532623	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.2	search with cache (only 1: intros; only 1: simpl_relation).	0.0217399597168	4
Coq.Classes.Morphisms.proper_sym_flip_2	40	3.0.1.0.0.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: red; only 1: red; only 1: unfold respectful; only 1: red; only 1: auto).	0.224187135696	37
Coq.Classes.Morphisms.proper_sym_impl_iff	40
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	21.24	search with cache (only 1: compute; only 1: trivial).	0.511919975281	1692
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00783705711365	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0284190177917	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00655603408813	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	5.14	search with cache (only 1: compute; only 1: intuition).	0.175350904465	306
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0159049034119	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.234225988388	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0.23	search with cache (only 1: symmetry; only 1: firstorder).	0.171543836594	326
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.00903487205505	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00793123245239	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0080029964447	1
Coq.Classes.RelationPairs.pair_compat	40	0.0	search with cache (only 1: repeat red; only 1: auto).	0.00966000556946	2
Coq.Classes.RelationPairs.fst_compat	40	1.0.0	search with cache (only 1: repeat red; only 1: induction 1; only 1: auto).	0.0116391181946	4
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0113868713379	3
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.17.1.2	search with cache (only 1: repeat red; only 1: intros; only 1: compute in *; only 1: auto).	1.27348685265	787
Coq.Classes.DecidableClass.Decidable_sound	40	16.15.1	search with cache (only 1: intro; only 1: intros (x, (Hx, Huni)); only 1: auto).	0.830289840698	7029
Coq.Classes.DecidableClass.Decidable_complete	40	25.10.2	search with cache (only 1: intro; only 1: intros (x, (Hx, Huni)); only 1: trivial).	0.882251024246	7461
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	5.13.4.12.4.76	search with cache (only 1: generalize x, y; only 1: destruct x; only 1: destruct y; only 1: destruct x; only 1: destruct y; only 1: now BinInt.Z.swap_greater).	1.84678912163	15217
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	1	search with cache (only 1: now f_equal).	0.014829158783	2
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0123200416565	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0121719837189	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	1.12.7.19.0	search with cache (only 1: intros A eq_dec; only 1: intros Heq; only 1: intros n m v; only 1: intros <-; only 1: now simpl).	14.5308699608	19921
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	9.2.23	search with cache (only 1: intros m n v1; only 1: intros; only 1: now rewrite H).	8.20585298538	15912
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.382447004318	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	5	search with cache (only 1: now f_equal).	0.00961303710938	6
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.00787115097046	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.00717306137085	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	6.0	search with cache (only 1: intro; only 1: now f_equal).	0.0143809318542	8
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	5	search with cache (only 1: now f_equal).	0.00957894325256	6
Coq.PArith.Pnat.inj_succ	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_1	40	0	search with cache (only 1: trivial).	0.0107080936432	1
Coq.PArith.Pnat.inj_xO	40
Coq.PArith.Pnat.inj_xI	40
Coq.PArith.Pnat.is_succ	40
Coq.PArith.Pnat.is_pos	40	0.0.12.0.1.19.81	search with cache (only 1: induction p using peano_ind; only 1: now left; only 1: unfold to_nat; only 1: rewrite iter_op_succ; only 1: right; only 1: trivial; only 1: apply Nat.add_assoc).	10.1820249557	29961
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	2.7.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros ->; only 1: trivial).	0.187150001526	222
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_lt	40
Coq.PArith.Pnat.inj_le	40
Coq.PArith.Pnat.inj_gt	40
Coq.PArith.Pnat.inj_ge	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_sub_max	40
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_pred_max	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.inj_iter	40
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.id_max	40	4.0.0.0.1.0.2.14	search with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	0.607249975204	939
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	0.2.19	search with cache (only 1: intros a b; only 1: intuition; only 1: now rewrite <- (id n), <- (id m), H).	2.44964909554	5301
Coq.PArith.Pnat.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0181889533997	4
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.id_succ	40
Coq.PArith.Pnat.pred_id	40
Coq.PArith.Pnat.id_succ	40	5.3.0.0.8	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	0.614235162735	1506
Coq.PArith.Pnat.pred_id	40	0.0.0.18.2.0.46	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	11.3297240734	28599
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	1.1.3	search with cache (only 1: split; only 1: now apply Nat2Pos.inj; only 1: auto).	0.0322549343109	25
Coq.PArith.Pnat.inv	40
Coq.PArith.Pnat.inj_succ	40	7.0	search with cache (only 1: apply Pos2Nat.inj; only 1: f_equal).	0.0343039035797	30
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.eq_dec	40
Coq.PArith.BinPos.xI_succ_xO	40	18	search with cache (only 1: solve_proper).	0.0331659317017	145
Coq.PArith.BinPos.succ_discr	40
Coq.PArith.BinPos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0105810165405	1
Coq.PArith.BinPos.succ_pred_double	40
Coq.PArith.BinPos.pred_double_succ	40	0.0.2.1.0.4	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.261548042297	123
Coq.PArith.BinPos.double_succ	40	0.1	search with cache (only 1: simpl; only 1: now f_equal).	0.0166690349579	3
Coq.PArith.BinPos.pred_double_xO_discr	40	0.0.0.0.1.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0388140678406	8
Coq.PArith.BinPos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0275850296021	1
Coq.PArith.BinPos.pred_succ	40	0.0.0.0.0.0.0.0.0.1.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	1.084004879	524
Coq.PArith.BinPos.succ_pred_or	40
Coq.PArith.BinPos.succ_pred	40	2.1.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).	1.34874391556	947
Coq.PArith.BinPos.succ_inj	40
Coq.PArith.BinPos.pred_N_succ	40	0.0.0.0.2.11.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	2.20364618301	1629
Coq.PArith.BinPos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.0120251178741	1
Coq.PArith.BinPos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0118989944458	1
Coq.PArith.BinPos.add_carry_spec	40
Coq.PArith.BinPos.add_comm	40
Coq.PArith.BinPos.add_succ_r	40
Coq.PArith.BinPos.add_succ_l	40
Coq.PArith.BinPos.add_no_neutral	40
Coq.PArith.BinPos.add_carry_add	40
Coq.PArith.BinPos.add_reg_r	40
Coq.PArith.BinPos.add_reg_l	40
Coq.PArith.BinPos.add_cancel_r	40
Coq.PArith.BinPos.add_cancel_l	40
Coq.PArith.BinPos.add_carry_reg_r	40
Coq.PArith.BinPos.add_carry_reg_l	40
Coq.PArith.BinPos.add_assoc	40
Coq.PArith.BinPos.add_xO	40	0.1	search with cache (only 1: simpl; only 1: f_equal).	0.012923002243	3
Coq.PArith.BinPos.add_xI_pred_double	40
Coq.PArith.BinPos.add_xO_pred_double	40
Coq.PArith.BinPos.add_diag	40	0.0.2.0.1.3.1.7.0.27	search with cache (only 1: induction p; only 1: simpl; only 1: change p~1 with (p~0 + 1); only 1: f_equal; only 1: rewrite ?add_carry_spec, ?add_succ_r, ?add_succ_l, ?add_1_r; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	16.8226349354	22514
Coq.PArith.BinPos.peano_rect_succ	40
Coq.PArith.BinPos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0131120681763	2
Coq.PArith.BinPos.peano_case	40
Coq.PArith.BinPos.eq_dep_eq_positive	40
Coq.PArith.BinPos.PeanoViewUnique	40
Coq.PArith.BinPos.peano_equiv	40
Coq.PArith.BinPos.mul_1_l	40	4.1.1.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: reflexivity; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: now f_equal).	0.0882208347321	85
Coq.PArith.BinPos.mul_1_r	40	0.2.0.4.1.0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: reflexivity).	0.48893904686	396
Coq.PArith.BinPos.mul_xO_r	40
Coq.PArith.BinPos.mul_xI_r	40
Coq.PArith.BinPos.mul_comm	40
Coq.PArith.BinPos.mul_add_distr_l	40
Coq.PArith.BinPos.mul_add_distr_r	40
Coq.PArith.BinPos.mul_assoc	40
Coq.PArith.BinPos.mul_succ_l	40
Coq.PArith.BinPos.mul_succ_r	40
Coq.PArith.BinPos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.mul_xO_discr	40
Coq.PArith.BinPos.mul_reg_r	40
Coq.PArith.BinPos.mul_reg_l	40
Coq.PArith.BinPos.mul_cancel_r	40	0.1.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.172477960587	93
Coq.PArith.BinPos.mul_cancel_l	40	0.1.2.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.16751408577	105
Coq.PArith.BinPos.mul_eq_1_l	40	0.0.1.0.0.0.1.2.1.8.0	search with cache (only 1: destruct p; only 1: revert q; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: reflexivity || apply f_equal || exfalso; only 1: destr_eq H; only 1: intros; only 1: destr_eq H; only 1: intros; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	12.6716969013	18175
Coq.PArith.BinPos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0368309020996	1
Coq.PArith.BinPos.square_xO	40	2.0.0	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0413770675659	18
Coq.PArith.BinPos.square_xI	40
Coq.PArith.BinPos.iter_swap_gen	40
Coq.PArith.BinPos.iter_swap	40	0.0.0.0.0.0.0.0.0.29	search with cache (only 1: intros p q H; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: trivial).	3.45165610313	9342
Coq.PArith.BinPos.iter_succ	40
Coq.PArith.BinPos.iter_add	40
Coq.PArith.BinPos.iter_invariant	40
Coq.PArith.BinPos.pow_1_r	40
Coq.PArith.BinPos.pow_succ_r	40
Coq.PArith.BinPos.square_spec	40
Coq.PArith.BinPos.sub_mask_succ_r	40
Coq.PArith.BinPos.sub_mask_carry_spec	40
Coq.PArith.BinPos.sub_mask_spec	40
Coq.PArith.BinPos.sub_mask_nul_iff	40
Coq.PArith.BinPos.sub_mask_diag	40	2.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now f_equal).	0.0230619907379	9
Coq.PArith.BinPos.sub_mask_add	40
Coq.PArith.BinPos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.sub_mask_pos_iff	40
Coq.PArith.BinPos.sub_mask_add_diag_r	40	1.0.1.0.1.5.5.0.0	search with cache (only 1: case sub_mask_spec; only 1: intros H; only 1: contradict H; only 1: rewrite add_comm; only 1: auto using add_no_neutral; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).	9.28069281578	12242
Coq.PArith.BinPos.sub_mask_neg_iff	40
Coq.PArith.BinPos.eqb_eq	40
Coq.PArith.BinPos.ltb_lt	40
Coq.PArith.BinPos.leb_le	40
Coq.PArith.BinPos.compare_cont_spec	40
Coq.PArith.BinPos.compare_cont_Eq	40
Coq.PArith.BinPos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_Lt	40	0.5.1.1	search with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	1.30179095268	382
Coq.PArith.BinPos.compare_cont_Gt_Lt	40	0.0.0.0.1.2	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.180936813354	28
Coq.PArith.BinPos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_not_Lt	40
Coq.PArith.BinPos.compare_cont_Lt_not_Gt	40
Coq.PArith.BinPos.compare_cont_Gt_not_Lt	40
Coq.PArith.BinPos.compare_cont_Gt_not_Gt	40
Coq.PArith.BinPos.compare_xO_xO	40	0	search with cache (only 1: trivial).	0.0110590457916	1
Coq.PArith.BinPos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0110721588135	1
Coq.PArith.BinPos.compare_xI_xO	40
Coq.PArith.BinPos.compare_xO_xI	40
Coq.PArith.BinPos.compare_sub_mask	40
Coq.PArith.BinPos.lt_iff_add	40
Coq.PArith.BinPos.gt_iff_add	40
Coq.PArith.BinPos.compare_cont_refl	40	3.3.3.4	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: now f_equal; only 1: trivial).	0.252382040024	359
Coq.PArith.BinPos.compare_cont_antisym	40
Coq.PArith.BinPos.compare_eq_iff	40
Coq.PArith.BinPos.compare_antisym	40
Coq.PArith.BinPos.compare_lt_iff	40	0.3	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.0163240432739	5
Coq.PArith.BinPos.compare_le_iff	40	0.0.0.0.4	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0270540714264	9
Coq.PArith.BinPos.gt_lt_iff	40	2.0	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0189468860626	4
Coq.PArith.BinPos.gt_lt	40	1.4	search with cache (only 1: intros H; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.0434710979462	7
Coq.PArith.BinPos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0105578899384	1
Coq.PArith.BinPos.ge_le_iff	40	3.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite compare_antisym, CompOpp_iff).	0.224169969559	24
Coq.PArith.BinPos.ge_le	40	23.5	search with cache (only 1: intros H; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	3.20134806633	4686
Coq.PArith.BinPos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.010843038559	1
Coq.PArith.BinPos.compare_succ_r	40
Coq.PArith.BinPos.compare_succ_l	40
Coq.PArith.BinPos.lt_succ_r	40
Coq.PArith.BinPos.lt_succ_diag_r	40
Coq.PArith.BinPos.compare_succ_succ	40
Coq.PArith.BinPos.le_1_l	40	2.1.1.14.4	search with cache (only 1: apply ltb_ge; only 1: induction p; only 1: now f_equal; only 1: now f_equal; only 1: trivial).	2.72293996811	4336
Coq.PArith.BinPos.nlt_1_r	40	20.0	search with cache (only 1: unfold lt, le; only 1: now destruct compare || now destruct p).	1.23988485336	1188
Coq.PArith.BinPos.lt_1_succ	40	0.2.2.1.4.1.1	search with cache (only 1: cut (succ p = succ p); only 1: intro; only 1: destruct p; only 1: reflexivity || apply f_equal || exfalso; only 1: reflexivity || apply f_equal || exfalso; only 1: reflexivity || apply f_equal || exfalso; only 1: trivial).	2.19705986977	3465
Coq.PArith.BinPos.le_nlt	40	1.7	search with cache (only 1: unfold ltb, lt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.113224983215	80
Coq.PArith.BinPos.lt_nle	40	0.2	search with cache (only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.20663714409	168
Coq.PArith.BinPos.lt_le_incl	40	2	search with cache (only 1: congruence).	0.014454126358	3
Coq.PArith.BinPos.lt_lt_succ	40
Coq.PArith.BinPos.succ_lt_mono	40
Coq.PArith.BinPos.succ_le_mono	40
Coq.PArith.BinPos.lt_trans	40
Coq.PArith.BinPos.lt_ind	40
Coq.PArith.BinPos.lt_strorder	40
Coq.PArith.BinPos.lt_compat	40
Coq.PArith.BinPos.lt_total	40
Coq.PArith.BinPos.le_refl	40	9.4	search with cache (only 1: apply ltb_ge; only 1: now induction p).	0.573832035065	354
Coq.PArith.BinPos.le_lt_trans	40
Coq.PArith.BinPos.lt_le_trans	40
Coq.PArith.BinPos.le_trans	40
Coq.PArith.BinPos.le_succ_l	40
Coq.PArith.BinPos.le_antisym	40
Coq.PArith.BinPos.le_preorder	40
Coq.PArith.BinPos.le_partorder	40
Coq.PArith.BinPos.add_compare_mono_l	40
Coq.PArith.BinPos.add_compare_mono_r	40
Coq.PArith.BinPos.lt_add_diag_r	40
Coq.PArith.BinPos.add_lt_mono_l	40
Coq.PArith.BinPos.add_lt_mono_r	40	0.0.0.11	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.760132074356	437
Coq.PArith.BinPos.add_lt_mono	40
Coq.PArith.BinPos.add_le_mono_l	40
Coq.PArith.BinPos.add_le_mono_r	40	0.0.0.12	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	1.28885507584	335
Coq.PArith.BinPos.add_le_mono	40
Coq.PArith.BinPos.mul_compare_mono_l	40
Coq.PArith.BinPos.mul_compare_mono_r	40
Coq.PArith.BinPos.mul_lt_mono_l	40
Coq.PArith.BinPos.mul_lt_mono_r	40	0.0.0.14	search with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	1.13048887253	1330
Coq.PArith.BinPos.mul_lt_mono	40
Coq.PArith.BinPos.mul_le_mono_l	40
Coq.PArith.BinPos.mul_le_mono_r	40	0.0.0.14	search with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	1.3869831562	720
Coq.PArith.BinPos.mul_le_mono	40
Coq.PArith.BinPos.lt_add_r	40	0.1	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0151059627533	3
Coq.PArith.BinPos.lt_not_add_l	40
Coq.PArith.BinPos.pow_gt_1	40
Coq.PArith.BinPos.sub_1_r	40	1	search with cache (only 1: now destruct p).	0.0123269557953	2
Coq.PArith.BinPos.pred_sub	40	2	search with cache (only 1: now destruct compare || now destruct p).	0.017333984375	3
Coq.PArith.BinPos.sub_succ_r	40
Coq.PArith.BinPos.sub_mask_pos'	40
Coq.PArith.BinPos.sub_mask_pos	40	1.1.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0282490253448	6
Coq.PArith.BinPos.sub_add	40
Coq.PArith.BinPos.add_sub	40
Coq.PArith.BinPos.mul_sub_distr_l	40
Coq.PArith.BinPos.mul_sub_distr_r	40
Coq.PArith.BinPos.sub_lt_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_r	40
Coq.PArith.BinPos.sub_lt_mono_r	40
Coq.PArith.BinPos.sub_decr	40
Coq.PArith.BinPos.add_sub_assoc	40
Coq.PArith.BinPos.sub_add_distr	40
Coq.PArith.BinPos.sub_sub_distr	40
Coq.PArith.BinPos.sub_xO_xO	40
Coq.PArith.BinPos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0194199085236	4
Coq.PArith.BinPos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0191860198975	4
Coq.PArith.BinPos.sub_xO_xI	40
Coq.PArith.BinPos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.sub_mask_neg	40	0.0.10	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.41676402092	178
Coq.PArith.BinPos.sub_le	40
Coq.PArith.BinPos.sub_lt	40
Coq.PArith.BinPos.sub_diag	40	0.1.3.3.0.54.7	search with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: congruence; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: trivial).	10.5695967674	23629
Coq.PArith.BinPos.size_nat_monotone	40
Coq.PArith.BinPos.size_gt	40
Coq.PArith.BinPos.size_le	40
Coq.PArith.BinPos.max_l	40
Coq.PArith.BinPos.max_r	40	23.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	38.411509037	59380
Coq.PArith.BinPos.min_l	40
Coq.PArith.BinPos.min_r	40
Coq.PArith.BinPos.max_1_l	40
Coq.PArith.BinPos.max_1_r	40
Coq.PArith.BinPos.min_1_l	40
Coq.PArith.BinPos.min_1_r	40
Coq.PArith.BinPos.succ_max_distr	40
Coq.PArith.BinPos.succ_min_distr	40	0.0.0.6.0	search with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).	0.259878873825	118
Coq.PArith.BinPos.add_max_distr_l	40	2.1.2.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply add_le_mono_l).	0.118924856186	36
Coq.PArith.BinPos.add_max_distr_r	40
Coq.PArith.BinPos.add_min_distr_l	40	0.0.3	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0191640853882	6
Coq.PArith.BinPos.add_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0221619606018	5
Coq.PArith.BinPos.mul_max_distr_l	40	2.2.0.1	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply mul_le_mono_l).	0.02751994133	9
Coq.PArith.BinPos.mul_max_distr_r	40
Coq.PArith.BinPos.mul_min_distr_l	40	0.0.3	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0470519065857	6
Coq.PArith.BinPos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0499300956726	5
Coq.PArith.BinPos.iter_op_succ	40
Coq.PArith.BinPos.of_nat_succ	40
Coq.PArith.BinPos.pred_of_succ_nat	40
Coq.PArith.BinPos.succ_of_nat	40	2.0.0.0.1.1.3.9.1	search with cache (only 1: intros; only 1: intuition; only 1: symmetry; only 1: induction n; only 1: simpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: apply of_nat_succ).	1.20665216446	2303
Coq.PArith.BinPos.sqrtrem_step_spec	40
Coq.PArith.BinPos.sqrtrem_spec	40
Coq.PArith.BinPos.sqrt_spec	40
Coq.PArith.BinPos.divide_add_cancel_l	40
Coq.PArith.BinPos.divide_xO_xI	40
Coq.PArith.BinPos.divide_xO_xO	40
Coq.PArith.BinPos.divide_mul_l	40
Coq.PArith.BinPos.divide_mul_r	40
Coq.PArith.BinPos.ggcdn_gcdn	40
Coq.PArith.BinPos.ggcd_gcd	40
Coq.PArith.BinPos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.ggcd_correct_divisors	40
Coq.PArith.BinPos.gcd_divide_l	40
Coq.PArith.BinPos.gcd_divide_r	40	1.1.2.24	search with cache (only 1: intros EQ; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: easy).	22.0568180084	36184
Coq.PArith.BinPos.gcdn_greatest	40
Coq.PArith.BinPos.gcd_greatest	40
Coq.PArith.BinPos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	0.207	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	11.3679609299	98681
Coq.PArith.BinPos.Pcompare_eq_Gt	40	2.4.4.0	search with cache (only 1: split; only 1: trivial; only 1: intros; only 1: easy).	0.095057964325	187
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	3.2.2.22.0	search with cache (only 1: intros; only 1: destruct r; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	1.36587405205	2754
Coq.Arith.Le.le_n_0_eq	40
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	2.0	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.0298819541931	24
Coq.Arith.Even.even_or_odd	40	6.52.5.296	search with cache (only 1: Morphisms.f_equiv; only 1: intros EQ; only 1: fix even_equiv 1; only 1: trivial).	10.1964659691	104070
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0224108695984	5
Coq.Arith.Even.not_even_and_odd	40	1.53	search with cache (only 1: fix even_equiv 1; only 1: auto with arith).	4.32483887672	28175
Coq.Arith.Even.even_plus_split	40	2.54	search with cache (only 1: fix even_equiv 1; only 1: auto with arith).	11.8859810829	29818
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.128921985626	1
Coq.Arith.Even.even_even_plus	40	5	search with cache (only 1: parity_binop).	0.183573961258	45
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0687210559845	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0699210166931	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.06831407547	1
Coq.Arith.Even.even_plus_aux	40
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0684261322021	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0695152282715	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0686330795288	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.10800909996	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0683619976044	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.068412065506	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0709400177002	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0692191123962	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.195741891861	1
Coq.Arith.Even.even_mult_l	40	1.0.1	search with cache (only 1: induction n; only 1: constructor; only 1: parity_binop).	0.0506329536438	5
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0445981025696	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0670812129974	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0668997764587	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0670030117035	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0462810993195	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0469517707825	1
Coq.Arith.Minus.minus_n_O	40	16.8	search with cache (only 1: symmetry; only 1: now Nat.nzsimpl).	0.190070152283	512
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	8	search with cache (only 1: now Nat.nzsimpl').	0.0347890853882	13
Coq.Arith.Minus.minus_diag_reverse	40	2.5.29	search with cache (only 1: induction n; only 1: reflexivity; only 1: trivial).	0.517663002014	2094
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	11	search with cache (only 1: now apply Nat.add_sub_eq_l).	0.0320019721985	51
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40	4.16.19.18.6	search with cache (only 1: intros a b; only 1: intro n; only 1: induction n; only 1: Morphisms.solve_proper; only 1: auto with arith).	14.9838209152	38241
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.10.10	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	1.03637099266	5191
Coq.Arith.Between.exists_le_S	40	1.1.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.01176404953	5
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40
Coq.Arith.Between.in_int_lt	40
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	1.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.00970005989075	11
Coq.Arith.Between.in_int_Sp_q	40	5.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0132548809052	12
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	0.0.2.3.5	search with cache (only 1: induction 1 as [| * [| ]]; only 1: intros EQ; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.349828004837	416
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40	7.0.1.15.15	search with cache (only 1: induction 1 as [| * [| ]]; only 1: Morphisms.solve_proper; only 1: apply le_S_n; only 1: auto with arith; only 1: eauto with arith).	15.9583210945	27178
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	0.2.1.1.7.0	search with cache (only 1: destruct n; only 1: intros EQ; only 1: now left; only 1: destruct m as [| m]; only 1: auto; only 1: now left).	0.477658033371	652
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	2.57.2.0.5.1	search with cache (only 1: intros a b; only 1: intros EQ; only 1: clear EQ; only 1: intros EQ; only 1: fix even_equiv 1; only 1: trivial).	10.5661828518	102496
Coq.Arith.Div2.lt_div2	40	4.60	search with cache (only 1: fix even_equiv 1; only 1: auto with arith).	4.97643089294	23222
Coq.Arith.Div2.even_div2	40	1.0.55	search with cache (only 1: fix even_equiv 1; only 1: intros EQ; only 1: auto with arith).	38.5982511044	100902
Coq.Arith.Div2.odd_div2	40	0.57	search with cache (only 1: fix even_equiv 1; only 1: auto with arith).	7.28658699989	23853
Coq.Arith.Div2.div2_even	40	0.61	search with cache (only 1: fix even_equiv 1; only 1: trivial).	3.44085407257	11824
Coq.Arith.Div2.div2_odd	40	1.67	search with cache (only 1: fix even_equiv 1; only 1: trivial).	5.36143898964	32903
Coq.Arith.Div2.even_odd_div2	40	0.0.0.0.0.3.1.2.0.0.0.0.3.0.2.0.0.0.0.1.1	search with cache (only 1: split; only 1: split; only 1: rewrite even_equiv; only 1: intros (p, ->); only 1: rewrite Nat.div2_succ_double; only 1: apply Nat.div2_double; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: trivial; only 1: apply odd_div2 in Od; only 1: rewrite <- Od; only 1: intro Od'; only 1: elim (n_Sn _ Od'); only 1: split; only 1: auto with arith; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: apply even_div2 in Ev; only 1: rewrite <- Ev; only 1: intro Ev'; only 1: symmetry in Ev'; only 1: elim (n_Sn _ Ev'); only 1: trivial).	19.9524009228	37849
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40	1.5.12	search with cache (only 1: revert m; only 1: fix even_equiv 1; only 1: trivial).	0.201761007309	299
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.0.47	search with cache (only 1: fix even_equiv 1; only 1: intros LT; only 1: auto using div2_odd, div2_even, odd_div2, even_div2).	1.92462897301	6323
Coq.Arith.Div2.odd_S2n	40	0.1.48	search with cache (only 1: fix even_equiv 1; only 1: intros LT; only 1: auto using div2_odd, div2_even, odd_div2, even_div2).	2.3612549305	9058
Coq.Arith.Div2.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.0110311508179	2
Coq.Arith.Div2.div2_double_plus_one	40	0.5.6.0.7.12	search with cache (only 1: symmetry; only 1: Nat.bitwise; only 1: simpl; only 1: revert m; only 1: fix even_equiv 1; only 1: trivial).	1.49434494972	1578
Coq.Arith.Plus.plus_assoc_reverse	40	1.6.3.1.1.1.27	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: trivial; only 1: intros; only 1: simpl; only 1: f_equal; only 1: trivial).	3.15234589577	8064
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	3	search with cache (only 1: apply Nat.add_le_mono_l).	0.0168330669403	12
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	7	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0218241214752	14
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	search with cache (only 1: apply Nat.add_le_mono).	0.0110120773315	2
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40	2.41.6	search with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: apply Nat.le_add_r).	3.18316817284	10277
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	3.1	search with cache (only 1: intros EQ; only 1: trivial).	0.0121941566467	6
Coq.Arith.Lt.lt_n_Sm_le	40
Coq.Arith.Lt.le_lt_n_Sm	40	4	search with cache (only 1: apply Nat.lt_succ_r).	0.0195691585541	12
Coq.Arith.Lt.le_not_lt	40	5	search with cache (only 1: Nat.order).	0.0229229927063	28
Coq.Arith.Lt.lt_not_le	40	26.4	search with cache (only 1: intros EQ; only 1: now Nat.order).	0.320326805115	1533
Coq.Arith.Lt.neq_0_lt	40
Coq.Arith.Lt.lt_0_neq	40	0.0	search with cache (only 1: intros H; only 1: Nat.order).	0.0148930549622	2
Coq.Arith.Lt.lt_n_S	40	1	search with cache (only 1: apply Nat.lt_succ_r).	0.0131199359894	2
Coq.Arith.Lt.lt_S_n	40	1	search with cache (only 1: apply Nat.lt_succ_r).	0.0187840461731	11
Coq.Arith.Lt.S_pred	40
Coq.Arith.Lt.S_pred_pos	40	1.0.0.0.5.5.31.39.0	search with cache (only 1: intros; only 1: Nat.bitwise; only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros; only 1: Nat.order'; only 1: simpl; only 1: trivial).	38.0106871128	344338
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.158356904984	108
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00587916374207	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00578999519348	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00619196891785	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00595211982727	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.1.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0987901687622	8
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	55.8.10.63	search with cache (only 1: induction n; only 1: Nat.order'; only 1: simpl; only 1: auto with arith).	4.75155305862	22107
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	1.3.16.4	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: auto with arith).	0.359931945801	861
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	1.1.1.0.2.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	2.05956697464	1456
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	3.0.0.0.0.0.0.1.1.2.1.11.6.1	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: destruct m; only 1: left; only 1: Nat.order'; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: auto with arith).	4.30022382736	12013
Coq.Arith.Compare_dec.le_ge_dec	40	0.1.0.0.0.0.0.0.1.2.0.7.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	2.80650687218	6526
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0133121013641	23
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.3	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.01305103302	20
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	0	search with cache (only 1: apply le_dec).	0.0048999786377	1
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.00441217422485	2
Coq.Arith.Compare_dec.dec_le	40	7.3.6.5	search with cache (only 1: destruct (le_gt_dec n m); only 1: now left; only 1: right; only 1: now apply gt_not_le).	2.55241799355	7721
Coq.Arith.Compare_dec.dec_lt	40	8	search with cache (only 1: apply Nat.le_decidable).	0.0398941040039	77
Coq.Arith.Compare_dec.dec_gt	40	4	search with cache (only 1: apply Nat.lt_decidable).	0.0164890289307	15
Coq.Arith.Compare_dec.dec_ge	40	4	search with cache (only 1: apply Nat.le_decidable).	0.00590896606445	5
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.00534796714783	1
Coq.Arith.Compare_dec.not_le	40	9	search with cache (only 1: Nat.order).	0.0358030796051	27
Coq.Arith.Compare_dec.not_gt	40	11	search with cache (only 1: Nat.order).	0.176197052002	90
Coq.Arith.Compare_dec.not_ge	40	1	search with cache (only 1: apply Nat.nle_gt).	0.00557422637939	2
Coq.Arith.Compare_dec.not_lt	40	0	search with cache (only 1: apply Nat.nlt_ge).	0.00511384010315	1
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40
Coq.Arith.Compare_dec.leb_correct_conv	40
Coq.Arith.Compare_dec.leb_complete_conv	40
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	5.15.239	search with cache (only 1: induction n as [| n IH]; only 1: Morphisms.solve_proper; only 1: trivial).	2.52804708481	34664
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	1.1.0.7.0.0.3.0.6.0.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: split; only 1: simpl; only 1: discriminate; only 1: destruct m; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: intros H; only 1: contradiction || auto).	2.66200208664	13100
Coq.Arith.EqNat.eq_nat_eq	40	3	search with cache (only 1: apply eq_nat_is_eq).	0.449580907822	115
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	4.6.15.3.19	search with cache (only 1: induction n; only 1: simpl; only 1: Morphisms.solve_proper; only 1: simpl; only 1: trivial).	0.34784913063	2359
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.bi_induction	40
Coq.Arith.PeanoNat.recursion_wd	40
Coq.Arith.PeanoNat.recursion_0	40	0	search with cache (only 1: destr_bool).	0.00510191917419	1
Coq.Arith.PeanoNat.recursion_succ	40	0.0.0.2.0.0.21	search with cache (only 1: unfold Basics.flip, respectful; only 1: intros; only 1: simpl; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	4.14862012863	13228
Coq.Arith.PeanoNat.pred_succ	40	0	search with cache (only 1: auto).	0.00506591796875	1
Coq.Arith.PeanoNat.pred_0	40	0	search with cache (only 1: reflexivity).	0.00324296951294	1
Coq.Arith.PeanoNat.one_succ	40	0	search with cache (only 1: auto).	0.00356698036194	1
Coq.Arith.PeanoNat.two_succ	40	1	search with cache (only 1: reflexivity).	0.00372815132141	2
Coq.Arith.PeanoNat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.0031590461731	1
Coq.Arith.PeanoNat.add_succ_l	40	0	search with cache (only 1: auto).	0.00372314453125	1
Coq.Arith.PeanoNat.sub_0_r	40	1.3.17	search with cache (only 1: induction n; only 1: tauto; only 1: reflexivity).	0.0654299259186	282
Coq.Arith.PeanoNat.sub_succ_r	40
Coq.Arith.PeanoNat.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.00512313842773	1
Coq.Arith.PeanoNat.mul_succ_l	40
Coq.Arith.PeanoNat.lt_succ_r	40
Coq.Arith.PeanoNat.eqb_eq	40
Coq.Arith.PeanoNat.leb_le	40
Coq.Arith.PeanoNat.ltb_lt	40
Coq.Arith.PeanoNat.eq_dec	40
Coq.Arith.PeanoNat.compare_eq_iff	40	0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	12.6488518715	25176
Coq.Arith.PeanoNat.compare_lt_iff	40
Coq.Arith.PeanoNat.compare_le_iff	40
Coq.Arith.PeanoNat.compare_antisym	40	2.3.3.0.4.2.0.0.2	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto).	3.20092487335	8197
Coq.Arith.PeanoNat.compare_succ	40	0	search with cache (only 1: reflexivity).	0.00421094894409	1
Coq.Arith.PeanoNat.max_l	40
Coq.Arith.PeanoNat.max_r	40
Coq.Arith.PeanoNat.min_l	40
Coq.Arith.PeanoNat.min_r	40
Coq.Arith.PeanoNat.pow_neg_r	40	1.0	search with cache (only 1: intro; only 1: false_hyp ltac:(H) nle_succ_0).	0.00621700286865	3
Coq.Arith.PeanoNat.pow_0_r	40	13	search with cache (only 1: split).	0.0146579742432	60
Coq.Arith.PeanoNat.pow_succ_r	40	1.0.0	search with cache (only 1: inversion 1; only 1: reflexivity; only 1: reflexivity).	0.00731492042542	4
Coq.Arith.PeanoNat.square_spec	40	36	search with cache (only 1: trivial).	0.176841020584	658
Coq.Arith.PeanoNat.Even_1	40
Coq.Arith.PeanoNat.Even_2	40
Coq.Arith.PeanoNat.Odd_0	40	1.0.15.49	search with cache (only 1: intro H; only 1: destruct H; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.524024963379	3226
Coq.Arith.PeanoNat.Odd_2	40
Coq.Arith.PeanoNat.even_spec	40
Coq.Arith.PeanoNat.odd_spec	40	4.2.0	search with cache (only 1: fix even_spec 1; only 1: intro H; only 1: trivial).	0.0996959209442	61
Coq.Arith.PeanoNat.divmod_spec	40
Coq.Arith.PeanoNat.div_mod	40
Coq.Arith.PeanoNat.mod_bound_pos	40
Coq.Arith.PeanoNat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.sqrt_specif	40
Coq.Arith.PeanoNat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.00682711601257	1
Coq.Arith.PeanoNat.log2_iter_spec	40
Coq.Arith.PeanoNat.log2_spec	40
Coq.Arith.PeanoNat.log2_nonpos	40	4.0	search with cache (only 1: inversion 1; only 1: auto).	0.0102469921112	6
Coq.Arith.PeanoNat.gcd_divide	40
Coq.Arith.PeanoNat.gcd_divide_l	40	4.15	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.181243896484	459
Coq.Arith.PeanoNat.gcd_divide_r	40	1.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.00527715682983	3
Coq.Arith.PeanoNat.gcd_greatest	40	1.2.22	search with cache (only 1: fix gcd_divide 1; only 1: intros x y z; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	2.61471700668	4868
Coq.Arith.PeanoNat.gcd_nonneg	40	33	search with cache (only 1: apply le_0_l).	0.222134113312	826
Coq.Arith.PeanoNat.div2_double	40
Coq.Arith.PeanoNat.div2_succ_double	40	0.0.0.1.1.0.3.4	search with cache (only 1: simpl mul; only 1: induction n; only 1: simpl; only 1: auto using Private_Tac.eq_sym; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.230139017105	389
Coq.Arith.PeanoNat.le_div2	40
Coq.Arith.PeanoNat.lt_div2	40
Coq.Arith.PeanoNat.div2_decr	40	0.0.0.0.12.0	search with cache (only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: destruct n; only 1: trivial; only 1: trivial).	0.17879486084	402
Coq.Arith.PeanoNat.double_twice	40	2.0.2	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: trivial).	0.0283410549164	51
Coq.Arith.PeanoNat.testbit_0_l	40	7.0.17	search with cache (only 1: induction n; only 1: split; only 1: trivial).	0.346257209778	758
Coq.Arith.PeanoNat.testbit_odd_0	40
Coq.Arith.PeanoNat.testbit_even_0	40
Coq.Arith.PeanoNat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.testbit_even_succ'	40
Coq.Arith.PeanoNat.shiftr_specif	40	1.0.9	search with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: auto).	4.2103202343	290
Coq.Arith.PeanoNat.shiftl_specif_high	40	0.6	search with cache (only 1: fix gcd_greatest 1; only 1: intuition).	2.09621906281	52
Coq.Arith.PeanoNat.shiftl_spec_low	40	6.6	search with cache (only 1: fix gcd_greatest 1; only 1: eauto using Private_Tac.eq_trans, Private_Tac.eq_sym).	10.9184119701	1487
Coq.Arith.PeanoNat.div2_bitwise	40	0.0.3.0.9	search with cache (only 1: intros x y H; only 1: simpl; only 1: fix le_div2 1; only 1: intros; only 1: trivial).	0.332065105438	186
Coq.Arith.PeanoNat.odd_bitwise	40
Coq.Arith.PeanoNat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.land_spec	40
Coq.Arith.PeanoNat.ldiff_spec	40	1.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: auto using Private_Tac.eq_sym).	0.00840592384338	5
Coq.Arith.PeanoNat.lor_spec	40
Coq.Arith.PeanoNat.lxor_spec	40
Coq.Arith.PeanoNat.div2_spec	40	2	search with cache (only 1: trivial).	0.0056939125061	3
Coq.Arith.PeanoNat.testbit_neg_r	40	20	search with cache (only 1: inversion H).	0.0616521835327	226
Coq.Arith.PeanoNat.tail_add_spec	40
Coq.Arith.PeanoNat.tail_addmul_spec	40
Coq.Arith.PeanoNat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	3.0	search with cache (only 1: intros n m H; only 1: Nat.order).	0.00782608985901	13
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0120849609375	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0114140510559	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	4.0	search with cache (only 1: intro; only 1: auto with arith).	0.0183730125427	6
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0124938488007	1
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0129680633545	1
Coq.Arith.Gt.le_S_gt	40	0.2	search with cache (only 1: intro; only 1: auto with arith).	0.0164120197296	4
Coq.Arith.Gt.gt_S_le	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0129368305206	1
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0120890140533	1
Coq.Arith.Gt.le_gt_S	40	2	search with cache (only 1: apply Nat.lt_succ_r).	0.0148849487305	3
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	32.0.134	search with cache (only 1: induction n; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: auto with arith).	11.9798531532	50377
Coq.Arith.Gt.plus_gt_reg_l	40	1	search with cache (only 1: apply Nat.add_lt_mono_l).	0.013356924057	2
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0127699375153	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	14.6.4	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.134444952011	854
Coq.Logic.JMeq.JMeq_trans	40	14.6.1.18	search with cache (only 1: intro H1; only 1: intros; only 1: destruct H; only 1: trivial).	0.27622795105	2540
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	1.57.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: exact H).	0.855270862579	12780
Coq.Logic.JMeq.JMeq_rect	40	1.57.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: exact H).	0.71595287323	10387
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	1.133.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: exact H).	18.2985329628	276256
Coq.Logic.JMeq.JMeq_rect_r	40	1.133.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: exact H).	16.469725132	239908
Coq.Logic.JMeq.JMeq_congr	40	1.65.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	1.67413115501	19599
Coq.Logic.JMeq.JMeq_eq_dep_id	40	14.2	search with cache (only 1: intros * []; only 1: trivial).	0.0725708007812	397
Coq.Logic.JMeq.eq_dep_id_JMeq	40	14.2	search with cache (only 1: destruct 1; only 1: trivial).	0.0681550502777	424
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0.2.1	search with cache (only 1: intros; only 1: symmetry; only 1: destruct H; only 1: reflexivity).	0.00726890563965	7
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.6.1	search with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: apply eq_dep_intro).	0.0615150928497	170
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	14.2.1.2.0	search with cache (only 1: intro; only 1: intro H; only 1: destruct H; only 1: simpl in *; only 1: trivial).	0.386771917343	1534
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0150299072266	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.0187480449677	9
Coq.Logic.Classical_Prop.not_imply_elim	40	0.0	search with cache (only 1: intros a b; only 1: tauto).	0.0230441093445	2
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.0.3.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: auto).	0.0337889194489	23
Coq.Logic.Classical_Prop.imply_to_or	40	0.0.1	search with cache (only 1: intros EQ; only 1: intros a b; only 1: tauto).	0.0342750549316	33
Coq.Logic.Classical_Prop.imply_to_and	40	7.1	search with cache (only 1: intros; only 1: tauto).	0.058357000351	34
Coq.Logic.Classical_Prop.or_to_imply	40	0.0.2.0.1	search with cache (only 1: intros EQ; only 1: unfold not; only 1: intro A; only 1: intro HAB; only 1: tauto).	0.0337579250336	38
Coq.Logic.Classical_Prop.not_and_or	40	0.0.0.0	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0201120376587	4
Coq.Logic.Classical_Prop.or_not_and	40	0	search with cache (only 1: tauto).	0.0170691013336	1
Coq.Logic.Classical_Prop.not_or_and	40	0.0.0.0	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0202720165253	4
Coq.Logic.Classical_Prop.and_not_or	40	4.1.0	search with cache (only 1: simple induction 1; only 1: red; only 1: tauto).	0.0400719642639	31
Coq.Logic.Classical_Prop.imply_and_or	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.016667842865	9
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0186488628387	1
Coq.Logic.Classical_Prop.eq_rect_eq	40
Coq.Logic.Hurkens.Omega	40
Coq.Logic.Hurkens.lemma1	40
Coq.Logic.Hurkens.lemma2	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.strength	40
Coq.Logic.Hurkens.modal	40	2.12.22	search with cache (only 1: intro H; only 1: destruct H; only 1: eauto).	0.25258898735	904
Coq.Logic.Hurkens.Forall	40	4.60	search with cache (only 1: red; only 1: eauto).	0.379750967026	2176
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.mparadox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.up_down	40	0.5.2	search with cache (only 1: intro x; only 1: subst; only 1: reflexivity).	0.0212419033051	10
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	0.6.50.8.32	search with cache (only 1: intro H1; only 1: intro x; only 1: intro H; only 1: destruct H; only 1: reflexivity).	7.00846505165	54615
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.1.0.0.0.4.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: trivial; only 1: right; only 1: assumption; only 1: trivial).	0.335108041763	341
Coq.Logic.Eqdep_dec.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	0.1.1.28.2	search with cache (only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: auto; only 1: exists f; only 1: auto).	6.97886300087	11934
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.1.12.0.0.1.10.4.2.0	search with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: auto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: firstorder; only 1: firstorder).	11.3027079105	16736
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	3.0.4.5.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: auto).	0.276188135147	503
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	1.0.3.6.0	search with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.164000034332	248
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.1.1.0	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0205240249634	6
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.56	search with cache (only 1: repeat split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	4.96620702744	11718
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.3.0	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0195269584656	7
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	4.1.0.0	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	0.0392968654633	9
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.2.0.0.0.1	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	0.0437400341034	10
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	4.12.6.85	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: reflexivity).	0.804054021835	7762
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	156	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	30.7966680527	421709
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	156	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	27.5680279732	360590
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.1.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0195579528809	6
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	6.2.6.3	search with cache (only 1: unfold not; only 1: intros EQ; only 1: simple induction 2; only 1: trivial).	0.871243000031	2481
Coq.Logic.ProofIrrelevanceFacts.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.subsetT_eq_compat	40	0.0.2.1	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0185010433197	16
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.extend_ok	40
Coq.Logic.FinFun.extend_f2n	40
Coq.Logic.FinFun.extend_n2f	40
Coq.Logic.FinFun.restrict_f2n	40
Coq.Logic.FinFun.restrict_n2f	40
Coq.Logic.FinFun.extend_surjective	40
Coq.Logic.FinFun.extend_injective	40
Coq.Logic.FinFun.restrict_surjective	40
Coq.Logic.FinFun.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40	0.0.0.0.0.1.0.0.0.0.0.0.2.2.0.0.0.0.1.0.0.1.0.0	search with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: Notations.split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: Notations.split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	7.99710583687	15037
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40	24.12	search with cache (only 1: red; only 1: eauto).	0.215766906738	996
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0156729221344	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.1.4	search with cache (only 1: destruct 1; only 1: intro x; only 1: trivial).	0.0122418403625	31
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.1.3	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0123698711395	15
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00787591934204	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00797986984253	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	8.9.0.1	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.219285964966	556
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	8	search with cache (only 1: reflexivity).	0.00670599937439	9
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	search with cache (only 1: eauto using @functional_extensionality_dep).	0.00844502449036	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	2.0.51	search with cache (only 1: red; only 1: intros A B C Hl Hr; only 1: eauto using @functional_extensionality_dep).	2.30966997147	19264
Coq.Logic.HLevels.false_hprop	40	4.20	search with cache (only 1: intros p q; only 1: destruct p, q).	0.128183841705	518
Coq.Logic.HLevels.true_hprop	40	18.4.20	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.648072004318	6063
Coq.Logic.HLevels.not_hprop	40	13.0.3.1.20	search with cache (only 1: intros p q; only 1: intro H; only 1: apply functional_extensionality; only 1: intro x; only 1: destruct H).	0.807867050171	4301
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	3.0.0.1.20.1	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.553336858749	1044
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	14.0.0.4.0.12	search with cache (only 1: intro H; only 1: intro x; only 1: intro; only 1: intro; only 1: destruct 1; only 1: trivial).	0.488695144653	2734
Coq.Logic.EqdepFacts.eq_dep_trans	40	1.2.0	search with cache (only 1: destruct 1; only 1: intros; only 1: exact H).	0.0126559734344	14
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	0.36.0	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.699074029922	4244
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	1.93	search with cache (only 1: inversion 1; only 1: apply eq_dep_intro).	23.4554450512	233198
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	4.8.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0852179527283	151
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.3.0.1.1.6	search with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.25527215004	422
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0140571594238	4
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0123717784882	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.4.0.1.2.0	search with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.124526977539	174
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	1.0.1.0	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0185549259186	14
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.0.3.6.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.213037014008	333
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	20.2.3.0.25	search with cache (only 1: intro H1; only 1: intros; only 1: destruct H; only 1: rewrite H; only 1: auto).	2.98382687569	16894
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	2.3	search with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0222609043121	25
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	19.14.0.20.6	search with cache (only 1: intros; only 1: intro H1; only 1: intros; only 1: rewrite H; only 1: trivial).	2.528247118	21318
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	15.12.5	search with cache (only 1: intros eq_rect_eq; only 1: intro H; only 1: auto).	2.16776895523	10848
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.12.0	search with cache (only 1: intros eq_rect_eq; only 1: intro H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0775139331818	227
Coq.Logic.EqdepFacts.f_eq_dep	40	0.3.3	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0244870185852	26
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	14.9	search with cache (only 1: destruct 1; only 1: trivial).	0.22381401062	751
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: intros * []; only 1: reflexivity).	0.0129289627075	3
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	8.1.12	search with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.294763088226	575
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	140	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	20.3983950615	286238
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.1	search with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0188419818878	18
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	3.18.20	search with cache (only 1: intro H; only 1: destruct H; only 1: assumption).	9.35403108597	39283
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	0.4.9.0	search with cache (only 1: intros; only 1: destruct H; only 1: exact H; only 1: contradiction).	0.0668590068817	286
Coq.Logic.Decidable.dec_True	40	3.0.40	search with cache (only 1: red; only 1: unfold not; only 1: tauto).	0.18418097496	1328
Coq.Logic.Decidable.dec_False	40	1.40	search with cache (only 1: red; only 1: auto).	0.140000104904	1113
Coq.Logic.Decidable.dec_or	40	2.14	search with cache (only 1: unfold decidable, not; only 1: tauto).	0.056440114975	130
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0244379043579	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0131640434265	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.019161939621	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0275490283966	2
Coq.Logic.Decidable.not_not	40	2.0.0	search with cache (only 1: unfold decidable; only 1: intros; only 1: tauto).	0.0134949684143	5
Coq.Logic.Decidable.not_or	40	3	search with cache (only 1: tauto).	0.0130059719086	4
Coq.Logic.Decidable.not_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0177838802338	2
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0211470127106	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0160639286041	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0711019039154	2
Coq.Logic.Decidable.not_true_iff	40	2.2.1	search with cache (only 1: split; only 1: tauto; only 1: tauto).	0.0125181674957	8
Coq.Logic.Decidable.not_false_iff	40	1	search with cache (only 1: tauto).	0.00945806503296	2
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0165820121765	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0202071666718	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0239241123199	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0238299369812	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0232419967651	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.023885011673	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.025486946106	2
Coq.Logic.Decidable.not_or_iff	40	2.0	search with cache (only 1: intros; only 1: tauto).	0.0186450481415	4
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.0148329734802	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.049654006958	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0301058292389	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.singleton_spec	40
Coq.MSets.MSetRBT.singleton_ok	40	9	search with cache (only 1: intuition).	0.0187039375305	10
Coq.MSets.MSetRBT.makeBlack_spec	40
Coq.MSets.MSetRBT.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0784749984741	5
Coq.MSets.MSetRBT.makeBlack_ok	40	0.0.1.0.5	search with cache (only 1: induction s; only 1: intuition_in; only 1: intuition_in; only 1: simpl; only 1: auto).	0.842602968216	39
Coq.MSets.MSetRBT.makeRed_ok	40	0.0.0.5	search with cache (only 1: induction s; only 1: intuition_in; only 1: simpl; only 1: ok).	0.542912960052	9
Coq.MSets.MSetRBT.rmatch	40
Coq.MSets.MSetRBT.rrmatch	40
Coq.MSets.MSetRBT.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.712335824966	684
Coq.MSets.MSetRBT.lbal_match	40
Coq.MSets.MSetRBT.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0113880634308	1
Coq.MSets.MSetRBT.rbal'_match	40
Coq.MSets.MSetRBT.lbalS_match	40
Coq.MSets.MSetRBT.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0115871429443	1
Coq.MSets.MSetRBT.lbal_spec	40
Coq.MSets.MSetRBT.lbal_ok	40
Coq.MSets.MSetRBT.rbal_spec	40
Coq.MSets.MSetRBT.rbal_ok	40
Coq.MSets.MSetRBT.rbal'_spec	40
Coq.MSets.MSetRBT.rbal'_ok	40
Coq.MSets.MSetRBT.ins_spec	40
Coq.MSets.MSetRBT.ins_ok	40
Coq.MSets.MSetRBT.add_spec'	40
Coq.MSets.MSetRBT.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0406279563904	2
Coq.MSets.MSetRBT.add_ok	40	0.0.0.0.0	search with cache (only 1: induct s x; only 1: intuition_in; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.140146970749	5
Coq.MSets.MSetRBT.lbalS_spec	40
Coq.MSets.MSetRBT.lbalS_ok	40
Coq.MSets.MSetRBT.rbalS_spec	40
Coq.MSets.MSetRBT.rbalS_ok	40
Coq.MSets.MSetRBT.append_rr_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0211760997772	1
Coq.MSets.MSetRBT.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0123989582062	1
Coq.MSets.MSetRBT.append_spec	40
Coq.MSets.MSetRBT.append_ok	40
Coq.MSets.MSetRBT.del_spec	40
Coq.MSets.MSetRBT.del_ok	40
Coq.MSets.MSetRBT.remove_spec	40
Coq.MSets.MSetRBT.remove_ok	40	0.0.0.0.0	search with cache (only 1: induct s x; only 1: ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.150161981583	5
Coq.MSets.MSetRBT.delmin_spec	40
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40	3.0.0.0.0.0.0	search with cache (only 1: unfold remove_min; only 1: destruct s as [| c l y r]; only 1: easy; only 1: generalize (delmin_spec l y r c); only 1: destruct delmin as (x0, s0); only 1: intros D; only 1: inversion_clear 1).	0.0422089099884	10
Coq.MSets.MSetRBT.remove_min_ok	40
Coq.MSets.MSetRBT.treeify_zero_spec	40	16	search with cache (only 1: do 4 (split; trivial)).	0.0756549835205	184
Coq.MSets.MSetRBT.treeify_one_spec	40	2.3.6.18.31	search with cache (only 1: intro H; only 1: destruct H; only 1: easy; only 1: simpl; only 1: auto).	1.81841421127	5622
Coq.MSets.MSetRBT.treeify_cont_spec	40
Coq.MSets.MSetRBT.treeify_aux_spec	40
Coq.MSets.MSetRBT.plength_aux_spec	40
Coq.MSets.MSetRBT.plength_spec	40
Coq.MSets.MSetRBT.treeify_elements	40
Coq.MSets.MSetRBT.treeify_spec	40
Coq.MSets.MSetRBT.treeify_ok	40
Coq.MSets.MSetRBT.filter_aux_elements	40
Coq.MSets.MSetRBT.filter_elements	40
Coq.MSets.MSetRBT.filter_spec	40
Coq.MSets.MSetRBT.filter_ok	40
Coq.MSets.MSetRBT.partition_aux_spec	40
Coq.MSets.MSetRBT.partition_spec	40
Coq.MSets.MSetRBT.partition_spec1	40	0.2.0	search with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0454320907593	5
Coq.MSets.MSetRBT.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0177450180054	1
Coq.MSets.MSetRBT.partition_ok1	40
Coq.MSets.MSetRBT.partition_ok2	40	0.1	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.029639005661	12
Coq.MSets.MSetRBT.INV_init	40
Coq.MSets.MSetRBT.INV_sym	40	1.112	search with cache (only 1: inversion 1; only 1: now inA).	18.3305809498	20151
Coq.MSets.MSetRBT.INV_drop	40
Coq.MSets.MSetRBT.INV_eq	40
Coq.MSets.MSetRBT.INV_lt	40
Coq.MSets.MSetRBT.INV_rev	40
Coq.MSets.MSetRBT.union_list_ok	40
Coq.MSets.MSetRBT.linear_union_ok	40
Coq.MSets.MSetRBT.fold_add_ok	40
Coq.MSets.MSetRBT.union_ok	40
Coq.MSets.MSetRBT.union_list_spec	40
Coq.MSets.MSetRBT.linear_union_spec	40
Coq.MSets.MSetRBT.fold_add_spec	40
Coq.MSets.MSetRBT.union_spec'	40
Coq.MSets.MSetRBT.union_spec	40	0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	0.101535081863	10
Coq.MSets.MSetRBT.inter_list_ok	40
Coq.MSets.MSetRBT.linear_inter_ok	40
Coq.MSets.MSetRBT.inter_ok	40
Coq.MSets.MSetRBT.inter_list_spec	40
Coq.MSets.MSetRBT.linear_inter_spec	40
Coq.MSets.MSetRBT.mem_proper	40
Coq.MSets.MSetRBT.inter_spec	40
Coq.MSets.MSetRBT.diff_list_ok	40
Coq.MSets.MSetRBT.diff_inter_ok	40
Coq.MSets.MSetRBT.fold_remove_ok	40	0.0.0.3.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: trivial; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0697920322418	35
Coq.MSets.MSetRBT.diff_ok	40
Coq.MSets.MSetRBT.diff_list_spec	40
Coq.MSets.MSetRBT.linear_diff_spec	40
Coq.MSets.MSetRBT.fold_remove_spec	40
Coq.MSets.MSetRBT.diff_spec	40
Coq.MSets.MSetRBT.rr_nrr_rb	40
Coq.MSets.MSetRBT.arb_nrr_rb	40	0.2.0.2.102	search with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).	6.47659802437	16507
Coq.MSets.MSetRBT.arb_nr_rb	40
Coq.MSets.MSetRBT.rb_maxdepth	40
Coq.MSets.MSetRBT.rb_mindepth	40
Coq.MSets.MSetRBT.maxdepth_upperbound	40
Coq.MSets.MSetRBT.maxdepth_lowerbound	40
Coq.MSets.MSetRBT.singleton_rb	40
Coq.MSets.MSetRBT.makeBlack_rb	40
Coq.MSets.MSetRBT.makeRed_rr	40	0.1.1.0.8	search with cache (only 1: inversion 1; only 1: destruct 1; only 1: destruct 1; only 1: simpl; only 1: auto).	0.31512093544	260
Coq.MSets.MSetRBT.lbal_rb	40
Coq.MSets.MSetRBT.rbal_rb	40
Coq.MSets.MSetRBT.rbal'_rb	40
Coq.MSets.MSetRBT.lbalS_rb	40
Coq.MSets.MSetRBT.lbalS_arb	40
Coq.MSets.MSetRBT.rbalS_rb	40
Coq.MSets.MSetRBT.rbalS_arb	40
Coq.MSets.MSetRBT.ifred_notred	40
Coq.MSets.MSetRBT.ifred_or	40	0.0.0.0.0.1.2.2	search with cache (only 1: destruct s; only 1: invrb; only 1: tauto; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.261953830719	156
Coq.MSets.MSetRBT.ins_rr_rb	40
Coq.MSets.MSetRBT.ins_arb	40
Coq.MSets.MSetRBT.add_rb	40
Coq.MSets.MSetRBT.append_arb_rb	40
Coq.MSets.MSetRBT.del_arb	40	0.2	search with cache (only 1: invrb; only 1: intuition).	0.0229179859161	4
Coq.MSets.MSetRBT.remove_rb	40
Coq.MSets.MSetRBT.treeify_zero_rb	40	16	search with cache (only 1: now auto_tc).	0.055125951767	108
Coq.MSets.MSetRBT.treeify_one_rb	40
Coq.MSets.MSetRBT.treeify_cont_rb	40
Coq.MSets.MSetRBT.treeify_aux_rb	40
Coq.MSets.MSetRBT.treeify_rb	40
Coq.MSets.MSetRBT.filter_rb	40	103	search with cache (only 1: eauto with *).	4.33771800995	13144
Coq.MSets.MSetRBT.partition_rb1	40	0.25.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	1.2666580677	2678
Coq.MSets.MSetRBT.partition_rb2	40	1.2.2.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0241351127625	9
Coq.MSets.MSetRBT.fold_add_rb	40
Coq.MSets.MSetRBT.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.034511089325	10
Coq.MSets.MSetRBT.union_rb	40	1.1.9.0.0.0.0	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.671908855438	1127
Coq.MSets.MSetRBT.inter_rb	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0270249843597	8
Coq.MSets.MSetRBT.diff_rb	40	1.0.0.0.17.0.0	search with cache (only 1: intros; only 1: unfold diff; only 1: unfold linear_diff; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.955809831619	2262
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40
Coq.MSets.MSetPositive.In_compat	40	0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0361320972443	3
Coq.MSets.MSetPositive.eq_equiv	40
Coq.MSets.MSetPositive.mem_spec	40	12.3	search with cache (only 1: intros a n; only 1: now split).	0.258984088898	619
Coq.MSets.MSetPositive.mem_Leaf	40	1.2	search with cache (only 1: intros EQ; only 1: trivial).	0.0124869346619	5
Coq.MSets.MSetPositive.empty_spec	40	0.1	search with cache (only 1: intros EQ; only 1: intuition).	0.0151541233063	12
Coq.MSets.MSetPositive.mem_node	40
Coq.MSets.MSetPositive.is_empty_spec	40
Coq.MSets.MSetPositive.subset_Leaf_s	40	0.58.0	search with cache (only 1: intros a b; only 1: unfold Empty, In; only 1: discriminate).	2.33771085739	24133
Coq.MSets.MSetPositive.subset_spec	40
Coq.MSets.MSetPositive.equal_subset	40
Coq.MSets.MSetPositive.equal_spec	40
Coq.MSets.MSetPositive.eq_dec	40
Coq.MSets.MSetPositive.lex_Opp	40
Coq.MSets.MSetPositive.compare_bool_inv	40
Coq.MSets.MSetPositive.compare_inv	40
Coq.MSets.MSetPositive.lex_Eq	40
Coq.MSets.MSetPositive.compare_bool_Eq	40	4.0.0.0.0.1.7	search with cache (only 1: intros [| ] [| ]; only 1: intuition discriminate; only 1: simpl; only 1: intuition discriminate; only 1: simpl; only 1: intuition discriminate; only 1: intuition discriminate).	0.739867210388	1323
Coq.MSets.MSetPositive.compare_equal	40
Coq.MSets.MSetPositive.compare_gt	40
Coq.MSets.MSetPositive.compare_eq	40
Coq.MSets.MSetPositive.compare_spec	40
Coq.MSets.MSetPositive.ct_cxe	40
Coq.MSets.MSetPositive.ct_xce	40	2.2.6.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.118227005005	133
Coq.MSets.MSetPositive.ct_lxl	40
Coq.MSets.MSetPositive.ct_gxg	40
Coq.MSets.MSetPositive.ct_xll	40
Coq.MSets.MSetPositive.ct_xgg	40
Coq.MSets.MSetPositive.ct_lex	40
Coq.MSets.MSetPositive.ct_compare_bool	40
Coq.MSets.MSetPositive.compare_x_Leaf	40	2.0.1.2	search with cache (only 1: intros [| l' o' r']; only 1: trivial; only 1: unfold compare; only 1: trivial).	0.0289220809937	39
Coq.MSets.MSetPositive.compare_empty_x	40
Coq.MSets.MSetPositive.compare_x_empty	40
Coq.MSets.MSetPositive.ct_compare	40
Coq.MSets.MSetPositive.lt_strorder	40
Coq.MSets.MSetPositive.compare_compat_1	40
Coq.MSets.MSetPositive.compare_compat	40
Coq.MSets.MSetPositive.lt_compat	40
Coq.MSets.MSetPositive.add_spec	40
Coq.MSets.MSetPositive.remove_spec	40
Coq.MSets.MSetPositive.singleton_spec	40
Coq.MSets.MSetPositive.union_spec	40
Coq.MSets.MSetPositive.inter_spec	40
Coq.MSets.MSetPositive.diff_spec	40
Coq.MSets.MSetPositive.fold_spec	40
Coq.MSets.MSetPositive.cardinal_spec	40
Coq.MSets.MSetPositive.xfilter_spec	40
Coq.MSets.MSetPositive.filter_spec	40
Coq.MSets.MSetPositive.xforall_spec	40
Coq.MSets.MSetPositive.for_all_spec	40
Coq.MSets.MSetPositive.xexists_spec	40
Coq.MSets.MSetPositive.exists_spec	40
Coq.MSets.MSetPositive.partition_filter	40
Coq.MSets.MSetPositive.partition_spec1	40
Coq.MSets.MSetPositive.partition_spec2	40	0.2.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.02073097229	5
Coq.MSets.MSetPositive.xelements_spec	40
Coq.MSets.MSetPositive.elements_spec1	40
Coq.MSets.MSetPositive.lt_rev_append	40
Coq.MSets.MSetPositive.elements_spec2	40
Coq.MSets.MSetPositive.elements_spec2w	40
Coq.MSets.MSetPositive.choose_spec1	40
Coq.MSets.MSetPositive.choose_spec2	40
Coq.MSets.MSetPositive.choose_empty	40
Coq.MSets.MSetPositive.choose_spec3'	40
Coq.MSets.MSetPositive.choose_spec3	40
Coq.MSets.MSetPositive.min_elt_spec1	40
Coq.MSets.MSetPositive.min_elt_spec3	40
Coq.MSets.MSetPositive.min_elt_spec2	40
Coq.MSets.MSetPositive.max_elt_spec1	40
Coq.MSets.MSetPositive.max_elt_spec3	40
Coq.MSets.MSetPositive.max_elt_spec2	40
Coq.MSets.MSetFacts.In_1	40	88	search with cache (only 1: now intros <-).	1.64765787125	16897
Coq.MSets.MSetFacts.mem_1	40
Coq.MSets.MSetFacts.mem_2	40
Coq.MSets.MSetFacts.equal_1	40
Coq.MSets.MSetFacts.equal_2	40
Coq.MSets.MSetFacts.subset_1	40
Coq.MSets.MSetFacts.subset_2	40
Coq.MSets.MSetFacts.is_empty_1	40
Coq.MSets.MSetFacts.is_empty_2	40
Coq.MSets.MSetFacts.add_1	40
Coq.MSets.MSetFacts.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0281050205231	3
Coq.MSets.MSetFacts.add_3	40
Coq.MSets.MSetFacts.remove_1	40
Coq.MSets.MSetFacts.remove_2	40
Coq.MSets.MSetFacts.remove_3	40
Coq.MSets.MSetFacts.singleton_1	40
Coq.MSets.MSetFacts.singleton_2	40	0.6	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0491349697113	27
Coq.MSets.MSetFacts.union_1	40
Coq.MSets.MSetFacts.union_2	40	0.0.5	search with cache (only 1: rewrite union_spec; only 1: intros; only 1: auto with relations).	0.0549669265747	17
Coq.MSets.MSetFacts.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0323188304901	2
Coq.MSets.MSetFacts.inter_1	40
Coq.MSets.MSetFacts.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0317749977112	2
Coq.MSets.MSetFacts.inter_3	40	0.6.0	search with cache (only 1: intros E; only 1: rewrite inter_spec; only 1: auto).	0.0840198993683	15
Coq.MSets.MSetFacts.diff_1	40
Coq.MSets.MSetFacts.diff_2	40	0.1	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0676920413971	3
Coq.MSets.MSetFacts.diff_3	40	0.2.6	search with cache (only 1: rewrite diff_spec; only 1: intros; only 1: auto with relations).	0.151259899139	56
Coq.MSets.MSetFacts.filter_1	40
Coq.MSets.MSetFacts.filter_2	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0391569137573	4
Coq.MSets.MSetFacts.filter_3	40	0.1.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: auto; only 1: intuition).	0.0462319850922	5
Coq.MSets.MSetFacts.for_all_1	40
Coq.MSets.MSetFacts.for_all_2	40
Coq.MSets.MSetFacts.exists_1	40
Coq.MSets.MSetFacts.exists_2	40
Coq.MSets.MSetFacts.elements_1	40
Coq.MSets.MSetFacts.elements_2	40
Coq.MSets.MSetFacts.In_eq_iff	40	9.1.20.3	search with cache (only 1: intros E; only 1: red; only 1: rewrite E; only 1: now subst).	2.38212013245	4071
Coq.MSets.MSetFacts.mem_iff	40	3	search with cache (only 1: intuition).	0.0441470146179	4
Coq.MSets.MSetFacts.not_mem_iff	40	1.22.2.12.0	search with cache (only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).	2.48108410835	3559
Coq.MSets.MSetFacts.equal_iff	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.170763969421	29
Coq.MSets.MSetFacts.subset_iff	40	3	search with cache (only 1: intuition).	0.141891956329	19
Coq.MSets.MSetFacts.empty_iff	40
Coq.MSets.MSetFacts.is_empty_iff	40	4	search with cache (only 1: intuition).	0.0687160491943	14
Coq.MSets.MSetFacts.singleton_iff	40	8	search with cache (only 1: intuition).	0.0303130149841	9
Coq.MSets.MSetFacts.add_iff	40
Coq.MSets.MSetFacts.add_neq_iff	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite add_spec; only 1: rewrite <- mem_spec; only 1: intuition).	0.0651528835297	14
Coq.MSets.MSetFacts.remove_iff	40	0.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.039391040802	2
Coq.MSets.MSetFacts.remove_neq_iff	40	0.1.2	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.123265981674	40
Coq.MSets.MSetFacts.for_all_iff	40	2.0	search with cache (only 1: intros P; only 1: intuition).	0.0506861209869	4
Coq.MSets.MSetFacts.exists_iff	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.0535800457001	5
Coq.MSets.MSetFacts.elements_iff	40	2	search with cache (only 1: intuition).	0.0292060375214	3
Coq.MSets.MSetFacts.mem_b	40
Coq.MSets.MSetFacts.empty_b	40
Coq.MSets.MSetFacts.add_b	40
Coq.MSets.MSetFacts.add_neq_b	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.919699192047	281
Coq.MSets.MSetFacts.remove_b	40
Coq.MSets.MSetFacts.remove_neq_b	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.823184967041	188
Coq.MSets.MSetFacts.singleton_b	40
Coq.MSets.MSetFacts.union_b	40
Coq.MSets.MSetFacts.inter_b	40
Coq.MSets.MSetFacts.diff_b	40
Coq.MSets.MSetFacts.elements_b	40
Coq.MSets.MSetFacts.filter_b	40
Coq.MSets.MSetFacts.for_all_b	40
Coq.MSets.MSetFacts.exists_b	40
Coq.MSets.MSetFacts.In_m	40
Coq.MSets.MSetFacts.Empty_m	40
Coq.MSets.MSetFacts.is_empty_m	40
Coq.MSets.MSetFacts.mem_m	40
Coq.MSets.MSetFacts.singleton_m	40
Coq.MSets.MSetFacts.add_m	40
Coq.MSets.MSetFacts.remove_m	40
Coq.MSets.MSetFacts.union_m	40
Coq.MSets.MSetFacts.inter_m	40
Coq.MSets.MSetFacts.diff_m	40
Coq.MSets.MSetFacts.Subset_m	40	5.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.0522398948669	26
Coq.MSets.MSetFacts.subset_m	40
Coq.MSets.MSetFacts.equal_m	40
Coq.MSets.MSetFacts.SubsetSetoid	40	3.0.3.8.3.17.0.157	search with cache (only 1: constructor; only 1: intros EQ; only 1: intros P; only 1: auto; only 1: intros x y H; only 1: intros; only 1: intros EQ; only 1: auto).	6.1373770237	34740
Coq.MSets.MSetFacts.In_s_m	40	1.14.0.1	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: red; only 1: auto).	8.73903107643	4194
Coq.MSets.MSetFacts.Empty_s_m	40	6	search with cache (only 1: firstorder).	0.110373020172	83
Coq.MSets.MSetFacts.add_s_m	40
Coq.MSets.MSetFacts.remove_s_m	40	0.3.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite remove_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	0.241645097733	34
Coq.MSets.MSetFacts.union_s_m	40	1.5.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite union_spec; only 1: intuition).	0.0989890098572	11
Coq.MSets.MSetFacts.inter_s_m	40	0.3.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite inter_spec; only 1: intuition).	0.0454828739166	6
Coq.MSets.MSetFacts.diff_s_m	40	0.4.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite diff_spec; only 1: intuition).	0.045881986618	7
Coq.MSets.MSetFacts.filter_equal	40
Coq.MSets.MSetFacts.filter_subset	40	0.0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0537829399109	4
Coq.MSets.MSetFacts.filter_ext	40
Coq.MSets.MSetProperties.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.164114952087	5
Coq.MSets.MSetProperties.Add_Equal	40
Coq.MSets.MSetProperties.equal_refl	40	1.10	search with cache (only 1: intros P; only 1: intuition).	0.167593955994	120
Coq.MSets.MSetProperties.equal_sym	40	3	search with cache (only 1: fsetdec).	0.06960105896	22
Coq.MSets.MSetProperties.equal_trans	40	1	search with cache (only 1: fsetdec).	0.0873210430145	20
Coq.MSets.MSetProperties.subset_refl	40	1.10	search with cache (only 1: intros P; only 1: auto).	0.0973649024963	120
Coq.MSets.MSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0588059425354	1
Coq.MSets.MSetProperties.subset_antisym	40	0.1	search with cache (only 1: intros E; only 1: fsetdec).	0.0817630290985	21
Coq.MSets.MSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0612390041351	1
Coq.MSets.MSetProperties.subset_empty	40	2.10	search with cache (only 1: intros P; only 1: fsetdec).	0.145755052567	169
Coq.MSets.MSetProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.06720495224	1
Coq.MSets.MSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0657949447632	1
Coq.MSets.MSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.088888168335	1
Coq.MSets.MSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0581359863281	1
Coq.MSets.MSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.054918050766	1
Coq.MSets.MSetProperties.double_inclusion	40
Coq.MSets.MSetProperties.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0712089538574	1
Coq.MSets.MSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0664670467377	1
Coq.MSets.MSetProperties.add_equal	40	1.0.0	search with cache (only 1: intros; only 1: red; only 1: fsetdec).	0.104312896729	11
Coq.MSets.MSetProperties.add_add	40	1.10	search with cache (only 1: red; only 1: fsetdec).	18.5448842049	3783
Coq.MSets.MSetProperties.remove_equal	40	4.2.2	search with cache (only 1: intros; only 1: intuition; only 1: fsetdec).	0.172801971436	40
Coq.MSets.MSetProperties.Equal_remove	40	1	search with cache (only 1: fsetdec).	0.141825199127	2
Coq.MSets.MSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.150413990021	1
Coq.MSets.MSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.154806852341	1
Coq.MSets.MSetProperties.singleton_equal_add	40	7	search with cache (only 1: fsetdec).	0.101450204849	8
Coq.MSets.MSetProperties.remove_singleton_empty	40	1.0	search with cache (only 1: intuition; only 1: fsetdec).	0.310992002487	3
Coq.MSets.MSetProperties.union_sym	40
Coq.MSets.MSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0874400138855	1
Coq.MSets.MSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.126713991165	1
Coq.MSets.MSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.120197057724	1
Coq.MSets.MSetProperties.union_assoc	40	0	search with cache (only 1: fsetdec).	0.176244974136	1
Coq.MSets.MSetProperties.add_union_singleton	40	1.3	search with cache (only 1: red; only 1: fsetdec).	1.10879898071	358
Coq.MSets.MSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.188095092773	1
Coq.MSets.MSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.325800180435	1
Coq.MSets.MSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.299093961716	1
Coq.MSets.MSetProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0462000370026	1
Coq.MSets.MSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0471520423889	1
Coq.MSets.MSetProperties.union_subset_3	40	1	search with cache (only 1: fsetdec).	0.0729720592499	2
Coq.MSets.MSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0715939998627	1
Coq.MSets.MSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0704979896545	1
Coq.MSets.MSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.085550069809	1
Coq.MSets.MSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0860080718994	1
Coq.MSets.MSetProperties.not_in_union	40	2	search with cache (only 1: fsetdec).	0.0707139968872	3
Coq.MSets.MSetProperties.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0961940288544	1
Coq.MSets.MSetProperties.inter_subset_equal	40	0.0	search with cache (only 1: intros; only 1: fsetdec).	0.0890789031982	2
Coq.MSets.MSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.11243891716	1
Coq.MSets.MSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.112623929977	1
Coq.MSets.MSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.152790784836	1
Coq.MSets.MSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.202465057373	1
Coq.MSets.MSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.216948986053	1
Coq.MSets.MSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.18807888031	1
Coq.MSets.MSetProperties.inter_add_2	40	0.1	search with cache (only 1: intros; only 1: fsetdec).	0.15452504158	3
Coq.MSets.MSetProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0633268356323	1
Coq.MSets.MSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0621328353882	1
Coq.MSets.MSetProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0483920574188	1
Coq.MSets.MSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0481240749359	1
Coq.MSets.MSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0661001205444	1
Coq.MSets.MSetProperties.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0769979953766	1
Coq.MSets.MSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0869128704071	1
Coq.MSets.MSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0554518699646	1
Coq.MSets.MSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.127977848053	1
Coq.MSets.MSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.118411064148	1
Coq.MSets.MSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.187638044357	1
Coq.MSets.MSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.154675006866	1
Coq.MSets.MSetProperties.Add_add	40	0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.0555121898651	4
Coq.MSets.MSetProperties.Add_remove	40	0.0.5.1	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: fsetdec).	0.182296991348	10
Coq.MSets.MSetProperties.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.243801116943	4
Coq.MSets.MSetProperties.inter_Add	40	0.0.3	search with cache (only 1: intros E; only 1: expAdd; only 1: fsetdec).	1.01278495789	100
Coq.MSets.MSetProperties.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.349670886993	2
Coq.MSets.MSetProperties.inter_Add_2	40
Coq.MSets.MSetProperties.elements_Empty	40
Coq.MSets.MSetProperties.elements_empty	40
Coq.MSets.MSetProperties.of_list_1	40
Coq.MSets.MSetProperties.of_list_2	40
Coq.MSets.MSetProperties.of_list_3	40
Coq.MSets.MSetProperties.fold_spec_right	40
Coq.MSets.MSetProperties.fold_rec	40
Coq.MSets.MSetProperties.fold_rec_bis	40
Coq.MSets.MSetProperties.fold_rec_nodep	40	1.0.0.1.2.0.2.1	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: set (l := rev (elements s)); only 1: auto with *; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	1.93465590477	1300
Coq.MSets.MSetProperties.fold_rec_weak	40
Coq.MSets.MSetProperties.fold_rel	40
Coq.MSets.MSetProperties.set_induction	40
Coq.MSets.MSetProperties.set_induction_bis	40
Coq.MSets.MSetProperties.fold_identity	40	2.12.3.6.0	search with cache (only 1: intro x; only 1: apply fold_rec_bis; only 1: fsetdec; only 1: intuition fsetdec; only 1: fsetdec).	10.9521620274	9799
Coq.MSets.MSetProperties.fold_0	40
Coq.MSets.MSetProperties.fold_1	40	2.18.0.4.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec_bis; only 1: auto; only 1: simpl_relation; only 1: fsetdec).	8.67431092262	7162
Coq.MSets.MSetProperties.fold_2	40
Coq.MSets.MSetProperties.fold_1b	40	2.2.0.6.0	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto with *; only 1: fsetdec).	0.969554185867	1081
Coq.MSets.MSetProperties.fold_commutes	40
Coq.MSets.MSetProperties.fold_init	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.fold_empty	40	7.16.0.2	search with cache (only 1: intros; only 1: apply fold_1; only 1: intuition; only 1: intuition).	1.39518094063	2718
Coq.MSets.MSetProperties.fold_add	40	9.0.5.0.5.3.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: intuition; only 1: auto; only 1: intuition; only 1: auto; only 1: intuition).	34.796680212	39694
Coq.MSets.MSetProperties.add_fold	40
Coq.MSets.MSetProperties.remove_fold_1	40
Coq.MSets.MSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0354650020599	3
Coq.MSets.MSetProperties.fold_union_inter	40
Coq.MSets.MSetProperties.fold_diff_inter	40
Coq.MSets.MSetProperties.fold_union	40
Coq.MSets.MSetProperties.fold_plus	40
Coq.MSets.MSetProperties.cardinal_fold	40
Coq.MSets.MSetProperties.cardinal_0	40
Coq.MSets.MSetProperties.cardinal_1	40
Coq.MSets.MSetProperties.cardinal_2	40
Coq.MSets.MSetProperties.cardinal_Empty	40
Coq.MSets.MSetProperties.cardinal_inv_1	40	0.0.2.7.0.1.1.2.3.0.8.16	search with cache (only 1: intros P; only 1: rewrite elements_Empty, cardinal_spec; only 1: intros; only 1: rewrite <- elements_Empty; only 1: red; only 1: intro a; only 1: red; only 1: intros; only 1: rewrite elements_iff in H0; only 1: destruct H0; only 1: discriminate; only 1: discriminate).	20.7326421738	12002
Coq.MSets.MSetProperties.cardinal_inv_2	40
Coq.MSets.MSetProperties.cardinal_inv_2b	40
Coq.MSets.MSetProperties.Equal_cardinal	40	1.3.0.0.6.4.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_equal; only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: tauto).	3.29670000076	4789
Coq.MSets.MSetProperties.cardinal_m	40
Coq.MSets.MSetProperties.empty_cardinal	40	14.0	search with cache (only 1: apply cardinal_1; only 1: intuition fsetdec).	0.369879961014	471
Coq.MSets.MSetProperties.singleton_cardinal	40
Coq.MSets.MSetProperties.diff_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal_lt	40
Coq.MSets.MSetProperties.union_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal_inter	40
Coq.MSets.MSetProperties.union_cardinal_le	40	19.1.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	5.53472185135	7365
Coq.MSets.MSetProperties.add_cardinal_1	40	4.1	search with cache (only 1: intros; only 1: auto with set).	0.118647098541	31
Coq.MSets.MSetProperties.add_cardinal_2	40	0.0.1.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto with set).	0.0657539367676	5
Coq.MSets.MSetProperties.remove_cardinal_1	40	0.0.0.0.0.0.0.2.0.0.1.1	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto with set relations; only 1: auto with set).	0.752555131912	816
Coq.MSets.MSetProperties.remove_cardinal_2	40	8.0	search with cache (only 1: intros; only 1: intuition).	0.0604820251465	26
Coq.MSets.MSetProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.gtb_1	40
Coq.MSets.MSetProperties.leb_1	40
Coq.MSets.MSetProperties.gtb_compat	40	1.11.0.1.0	search with cache (only 1: red; only 1: unfold gtb; only 1: red; only 1: intros s Hsame; only 1: Dec.fsetdec).	8.7322909832	1852
Coq.MSets.MSetProperties.leb_compat	40	1.11.0.0.1	search with cache (only 1: red; only 1: unfold leb, gtb; only 1: red; only 1: intros s Hsame; only 1: Dec.fsetdec).	9.73176980019	4284
Coq.MSets.MSetProperties.elements_split	40
Coq.MSets.MSetProperties.elements_Add	40
Coq.MSets.MSetProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.set_induction_max	40
Coq.MSets.MSetProperties.set_induction_min	40
Coq.MSets.MSetProperties.fold_3	40
Coq.MSets.MSetProperties.fold_4	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0351409912109	3
Coq.MSets.MSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0359280109406	3
Coq.MSets.MSetProperties.choose_equal	40
Coq.MSets.MSetAVL.singleton_spec	40
Coq.MSets.MSetAVL.singleton_ok	40	6	search with cache (only 1: intuition).	0.016284942627	7
Coq.MSets.MSetAVL.create_spec	40
Coq.MSets.MSetAVL.create_ok	40
Coq.MSets.MSetAVL.bal_spec	40
Coq.MSets.MSetAVL.bal_ok	40
Coq.MSets.MSetAVL.add_spec'	40
Coq.MSets.MSetAVL.add_spec	40	1.0.0.1.0.0.1.0.0.0	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	2.3332798481	552
Coq.MSets.MSetAVL.add_ok	40
Coq.MSets.MSetAVL.join_spec	40
Coq.MSets.MSetAVL.join_ok	40
Coq.MSets.MSetAVL.remove_min_spec	40
Coq.MSets.MSetAVL.remove_min_ok	40
Coq.MSets.MSetAVL.remove_min_gt_tree	40
Coq.MSets.MSetAVL.merge_spec	40
Coq.MSets.MSetAVL.merge_ok	40
Coq.MSets.MSetAVL.remove_spec	40
Coq.MSets.MSetAVL.remove_ok	40
Coq.MSets.MSetAVL.concat_spec	40
Coq.MSets.MSetAVL.concat_ok	40
Coq.MSets.MSetAVL.split_spec1	40
Coq.MSets.MSetAVL.split_spec2	40
Coq.MSets.MSetAVL.split_spec3	40
Coq.MSets.MSetAVL.split_ok	40
Coq.MSets.MSetAVL.split_ok1	40
Coq.MSets.MSetAVL.split_ok2	40	0.20.2	search with cache (only 1: destruct (@split_ok s x); only 1: trivial; only 1: auto).	0.711508989334	914
Coq.MSets.MSetAVL.inter_spec_ok	40
Coq.MSets.MSetAVL.inter_spec	40
Coq.MSets.MSetAVL.inter_ok	40
Coq.MSets.MSetAVL.diff_spec_ok	40
Coq.MSets.MSetAVL.diff_spec	40
Coq.MSets.MSetAVL.diff_ok	40
Coq.MSets.MSetAVL.union_spec	40
Coq.MSets.MSetAVL.union_ok	40
Coq.MSets.MSetAVL.filter_spec	40
Coq.MSets.MSetAVL.filter_weak_spec	40
Coq.MSets.MSetAVL.filter_ok	40
Coq.MSets.MSetAVL.partition_spec1'	40
Coq.MSets.MSetAVL.partition_spec2'	40	0.1.0.2.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: eauto using concat_ok, join_ok; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0715041160583	16
Coq.MSets.MSetAVL.partition_spec1	40
Coq.MSets.MSetAVL.partition_spec2	40
Coq.MSets.MSetAVL.partition_ok1	40
Coq.MSets.MSetAVL.partition_ok2	40
Coq.MSets.MSetEqProperties.mem_eq	40	0	search with cache (only 1: Dec.fsetdec).	0.0464868545532	1
Coq.MSets.MSetEqProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.subset_mem_2	40	8	search with cache (only 1: eauto with set relations).	0.803256034851	24
Coq.MSets.MSetEqProperties.empty_mem	40
Coq.MSets.MSetEqProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.choose_mem_1	40	0.2	search with cache (only 1: intros; only 1: intuition).	0.0470590591431	4
Coq.MSets.MSetEqProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0316879749298	1
Coq.MSets.MSetEqProperties.add_mem_1	40	0.0.1.5	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (diff_spec s s' x); only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: intuition).	0.366494178772	17
Coq.MSets.MSetEqProperties.add_mem_2	40
Coq.MSets.MSetEqProperties.remove_mem_1	40	0.10	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	2.95112991333	140
Coq.MSets.MSetEqProperties.remove_mem_2	40
Coq.MSets.MSetEqProperties.singleton_equal_add	40	2.1	search with cache (only 1: rewrite (singleton_equal_add x); only 1: auto with set).	0.0567028522491	5
Coq.MSets.MSetEqProperties.union_mem	40	0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: generalize (FM.mem_iff (union s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	19.6440820694	2848
Coq.MSets.MSetEqProperties.inter_mem	40	0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	12.8959951401	2420
Coq.MSets.MSetEqProperties.diff_mem	40
Coq.MSets.MSetEqProperties.mem_3	40	0.0.2	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).	0.0269598960876	5
Coq.MSets.MSetEqProperties.mem_4	40	0.0.4.8.2	search with cache (only 1: intros; only 1: generalize (FM.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	2.59466290474	1205
Coq.MSets.MSetEqProperties.equal_refl	40	1	search with cache (only 1: auto with set).	0.0287189483643	14
Coq.MSets.MSetEqProperties.equal_sym	40	1.3.0.1.3.0.0.1	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	1.4040389061	579
Coq.MSets.MSetEqProperties.equal_trans	40	11	search with cache (only 1: eauto with set relations).	0.643156051636	167
Coq.MSets.MSetEqProperties.equal_equal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0311300754547	3
Coq.MSets.MSetEqProperties.equal_cardinal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0289671421051	3
Coq.MSets.MSetEqProperties.subset_refl	40	2	search with cache (only 1: auto with set).	0.0288610458374	15
Coq.MSets.MSetEqProperties.subset_antisym	40	3.0	search with cache (only 1: intros; only 1: auto with set).	0.0375771522522	11
Coq.MSets.MSetEqProperties.subset_trans	40	11	search with cache (only 1: eauto with set relations).	0.58171415329	129
Coq.MSets.MSetEqProperties.subset_equal	40	3.2.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0778110027313	8
Coq.MSets.MSetEqProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.add_mem_3	40	0.2	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.0648970603943	4
Coq.MSets.MSetEqProperties.add_equal	40	0	search with cache (only 1: auto with set).	0.0226800441742	1
Coq.MSets.MSetEqProperties.remove_mem_3	40	16.1	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	4.404722929	1274
Coq.MSets.MSetEqProperties.remove_equal	40
Coq.MSets.MSetEqProperties.add_remove	40
Coq.MSets.MSetEqProperties.remove_add	40
Coq.MSets.MSetEqProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.singleton_mem_1	40	0	search with cache (only 1: auto with set relations).	0.0245580673218	1
Coq.MSets.MSetEqProperties.singleton_mem_2	40	3.1.3	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.105303049088	10
Coq.MSets.MSetEqProperties.singleton_mem_3	40
Coq.MSets.MSetEqProperties.union_sym	40	1	search with cache (only 1: auto with set).	0.0376660823822	2
Coq.MSets.MSetEqProperties.union_subset_equal	40	7.0	search with cache (only 1: intros; only 1: auto with set).	0.045058965683	12
Coq.MSets.MSetEqProperties.union_equal_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0258860588074	2
Coq.MSets.MSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0232229232788	1
Coq.MSets.MSetEqProperties.union_assoc	40	3	search with cache (only 1: auto with set).	0.0419328212738	4
Coq.MSets.MSetEqProperties.add_union_singleton	40	5	search with cache (only 1: intuition).	0.0572149753571	6
Coq.MSets.MSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0214259624481	1
Coq.MSets.MSetEqProperties.union_subset_1	40	14	search with cache (only 1: auto with set).	0.195523023605	75
Coq.MSets.MSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0210099220276	1
Coq.MSets.MSetEqProperties.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.157110929489	2
Coq.MSets.MSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0219581127167	1
Coq.MSets.MSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0260899066925	1
Coq.MSets.MSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0238988399506	1
Coq.MSets.MSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0240390300751	1
Coq.MSets.MSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.022253036499	1
Coq.MSets.MSetEqProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0886340141296	1
Coq.MSets.MSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0218839645386	1
Coq.MSets.MSetEqProperties.inter_add_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0254950523376	2
Coq.MSets.MSetEqProperties.inter_add_2	40	0.0.1.1.22.0.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: symmetry; only 1: apply inter_Add_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	28.4528419971	3389
Coq.MSets.MSetEqProperties.inter_subset_1	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0469419956207	2
Coq.MSets.MSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0216488838196	1
Coq.MSets.MSetEqProperties.inter_subset_3	40	2.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0592060089111	5
Coq.MSets.MSetEqProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.0214319229126	1
Coq.MSets.MSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0269198417664	1
Coq.MSets.MSetEqProperties.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.02192902565	1
Coq.MSets.MSetEqProperties.diff_inter_empty	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.215401172638	2
Coq.MSets.MSetEqProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0218720436096	1
Coq.MSets.MSetEqProperties.set_rec	40
Coq.MSets.MSetEqProperties.exclusive_set	40
Coq.MSets.MSetEqProperties.fold_empty	40	13.0	search with cache (only 1: apply fold_1b; only 1: intuition).	1.24246001244	803
Coq.MSets.MSetEqProperties.fold_equal	40
Coq.MSets.MSetEqProperties.fold_add	40
Coq.MSets.MSetEqProperties.add_fold	40
Coq.MSets.MSetEqProperties.remove_fold_1	40	0.1.1.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	0.285439968109	126
Coq.MSets.MSetEqProperties.remove_fold_2	40
Coq.MSets.MSetEqProperties.fold_union	40
Coq.MSets.MSetEqProperties.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.0212051868439	1
Coq.MSets.MSetEqProperties.add_cardinal_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0446779727936	8
Coq.MSets.MSetEqProperties.remove_cardinal_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0435841083527	8
Coq.MSets.MSetEqProperties.remove_cardinal_2	40	4.0.0.0.11.7.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_equal; only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto with set).	2.96621084213	2129
Coq.MSets.MSetEqProperties.union_cardinal	40	0.0.0.0.4.2.2.5.0.0.1.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: intros; only 1: auto).	3.13080596924	4851
Coq.MSets.MSetEqProperties.subset_cardinal	40	1	search with cache (only 1: auto with set).	0.0581600666046	28
Coq.MSets.MSetEqProperties.Comp'	40	0.19.8.0.0	search with cache (only 1: red; only 1: red; only 1: symmetry; only 1: rewrite H; only 1: auto).	2.29971718788	2288
Coq.MSets.MSetEqProperties.filter_mem	40
Coq.MSets.MSetEqProperties.for_all_filter	40
Coq.MSets.MSetEqProperties.exists_filter	40
Coq.MSets.MSetEqProperties.partition_filter_1	40	20	search with cache (only 1: auto with set).	9.97916221619	11258
Coq.MSets.MSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0301988124847	1
Coq.MSets.MSetEqProperties.filter_add_1	40
Coq.MSets.MSetEqProperties.filter_add_2	40
Coq.MSets.MSetEqProperties.add_filter_1	40
Coq.MSets.MSetEqProperties.add_filter_2	40
Coq.MSets.MSetEqProperties.union_filter	40
Coq.MSets.MSetEqProperties.filter_union	40	0.0.0.1.4.0.0.0.1	search with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	18.2938480377	984
Coq.MSets.MSetEqProperties.for_all_mem_1	40	22.2.0.5.0.3	search with cache (only 1: intro H; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	23.8991229534	30083
Coq.MSets.MSetEqProperties.for_all_mem_2	40	0.2.7.10.11	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	4.90929198265	5436
Coq.MSets.MSetEqProperties.for_all_mem_3	40
Coq.MSets.MSetEqProperties.for_all_mem_4	40
Coq.MSets.MSetEqProperties.for_all_exists	40
Coq.MSets.MSetEqProperties.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.029659986496	4
Coq.MSets.MSetEqProperties.exists_mem_1	40
Coq.MSets.MSetEqProperties.exists_mem_2	40
Coq.MSets.MSetEqProperties.exists_mem_3	40	6.19.0.0.5.0	search with cache (only 1: intros; only 1: apply exists_1; only 1: auto; only 1: red; only 1: exists x; only 1: auto with set).	19.9049379826	27031
Coq.MSets.MSetEqProperties.exists_mem_4	40
Coq.MSets.MSetEqProperties.sum_plus	40
Coq.MSets.MSetEqProperties.sum_filter	40
Coq.MSets.MSetEqProperties.fold_compat	40
Coq.MSets.MSetEqProperties.sum_compat	40
Coq.MSets.MSetDecide.test_push	40	0.12	search with cache (only 1: intros x y H; only 1: eauto).	0.124042987823	115
Coq.MSets.MSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.13409113884	3
Coq.MSets.MSetDecide.eq_refl_iff	40	1	search with cache (only 1: intuition).	0.00870585441589	2
Coq.MSets.MSetDecide.dec_In	40
Coq.MSets.MSetDecide.dec_eq	40
Coq.MSets.MSetDecide.test_eq_trans_1	40
Coq.MSets.MSetDecide.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.0437819957733	1
Coq.MSets.MSetDecide.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0527610778809	1
Coq.MSets.MSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.181805849075	1
Coq.MSets.MSetDecide.test_In_singleton	40	29	search with cache (only 1: simpl_relation).	0.724740982056	1332
Coq.MSets.MSetDecide.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0300920009613	1
Coq.MSets.MSetDecide.test_Subset_add_remove	40	0.0	search with cache (only 1: red; only 1: fsetdec).	0.0314691066742	2
Coq.MSets.MSetDecide.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0821459293365	1
Coq.MSets.MSetDecide.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0647478103638	1
Coq.MSets.MSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0815379619598	1
Coq.MSets.MSetDecide.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0377399921417	1
Coq.MSets.MSetDecide.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.126644849777	1
Coq.MSets.MSetDecide.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.156042814255	1
Coq.MSets.MSetDecide.test_too_complex	40	8.1.4.3	search with cache (only 1: intros x y; only 1: intros s s' E; only 1: rewrite singleton_spec; only 1: intuition).	3.94429707527	1054
Coq.MSets.MSetDecide.function_test_1	40	0.13	search with cache (only 1: intros x y H; only 1: fsetdec).	0.133281946182	144
Coq.MSets.MSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.047632932663	1
Coq.MSets.MSetDecide.test_baydemir	40	1	search with cache (only 1: fsetdec).	0.0321171283722	2
Coq.MSets.MSetGenTree.ltb_tree_iff	40
Coq.MSets.MSetGenTree.gtb_tree_iff	40
Coq.MSets.MSetGenTree.isok_iff	40
Coq.MSets.MSetGenTree.isok_Ok	40
Coq.MSets.MSetGenTree.In_1	40
Coq.MSets.MSetGenTree.In_compat	40
Coq.MSets.MSetGenTree.In_node_iff	40	0.3.4	search with cache (only 1: intros x y z; only 1: intros; only 1: intuition_in).	0.140192985535	16
Coq.MSets.MSetGenTree.In_leaf_iff	40	0.21	search with cache (only 1: intro H; only 1: intuition_in).	0.10623717308	231
Coq.MSets.MSetGenTree.lt_leaf	40	44	search with cache (only 1: easy).	0.726900815964	2241
Coq.MSets.MSetGenTree.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0155608654022	2
Coq.MSets.MSetGenTree.lt_tree_node	40
Coq.MSets.MSetGenTree.gt_tree_node	40
Coq.MSets.MSetGenTree.lt_tree_not_in	40	45.0	search with cache (only 1: intuition_in; only 1: order).	33.3842189312	32096
Coq.MSets.MSetGenTree.lt_tree_trans	40	11	search with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.202241897583	145
Coq.MSets.MSetGenTree.gt_tree_not_in	40	45.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	16.0140578747	25499
Coq.MSets.MSetGenTree.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.0161981582642	1
Coq.MSets.MSetGenTree.lt_tree_compat	40
Coq.MSets.MSetGenTree.gt_tree_compat	40
Coq.MSets.MSetGenTree.empty_spec	40	45	search with cache (only 1: easy).	0.581923961639	1612
Coq.MSets.MSetGenTree.empty_ok	40	39	search with cache (only 1: intuition_in).	0.223982095718	775
Coq.MSets.MSetGenTree.is_empty_spec	40
Coq.MSets.MSetGenTree.mem_spec	40
Coq.MSets.MSetGenTree.min_elt_spec1	40
Coq.MSets.MSetGenTree.min_elt_spec2	40
Coq.MSets.MSetGenTree.min_elt_spec3	40
Coq.MSets.MSetGenTree.max_elt_spec1	40
Coq.MSets.MSetGenTree.max_elt_spec2	40
Coq.MSets.MSetGenTree.max_elt_spec3	40	0.0.0.0.0.0.0.1	search with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.14338684082	79
Coq.MSets.MSetGenTree.choose_spec1	40
Coq.MSets.MSetGenTree.choose_spec2	40
Coq.MSets.MSetGenTree.choose_spec3	40
Coq.MSets.MSetGenTree.elements_spec1'	40
Coq.MSets.MSetGenTree.elements_spec1	40
Coq.MSets.MSetGenTree.elements_spec2'	40
Coq.MSets.MSetGenTree.elements_spec2	40
Coq.MSets.MSetGenTree.elements_spec2w	40
Coq.MSets.MSetGenTree.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.elements_cardinal	40
Coq.MSets.MSetGenTree.elements_app	40
Coq.MSets.MSetGenTree.elements_node	40
Coq.MSets.MSetGenTree.rev_elements_app	40
Coq.MSets.MSetGenTree.rev_elements_node	40
Coq.MSets.MSetGenTree.rev_elements_rev	40
Coq.MSets.MSetGenTree.sorted_app_inv	40
Coq.MSets.MSetGenTree.elements_sort_ok	40
Coq.MSets.MSetGenTree.for_all_spec	40
Coq.MSets.MSetGenTree.exists_spec	40
Coq.MSets.MSetGenTree.fold_spec'	40
Coq.MSets.MSetGenTree.fold_spec	40
Coq.MSets.MSetGenTree.subsetl_spec	40
Coq.MSets.MSetGenTree.subsetr_spec	40
Coq.MSets.MSetGenTree.subset_spec	40
Coq.MSets.MSetGenTree.eq_equiv	40
Coq.MSets.MSetGenTree.eq_Leq	40
Coq.MSets.MSetGenTree.lt_strorder	40
Coq.MSets.MSetGenTree.lt_compat	40
Coq.MSets.MSetGenTree.flatten_e_elements	40
Coq.MSets.MSetGenTree.cons_1	40	0.0.1.0.2.2.21	search with cache (only 1: induction s as [| c l Hl x r Hr]; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite Hl; only 1: now rewrite elements_node, app_assoc_reverse).	1.49898195267	3120
Coq.MSets.MSetGenTree.compare_end_Cmp	40	1.2.0.0.2.8.38.35	search with cache (only 1: intro H; only 1: destruct H; only 1: constructor 1; only 1: constructor 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: simpl; only 1: auto).	5.33312892914	16486
Coq.MSets.MSetGenTree.compare_more_Cmp	40
Coq.MSets.MSetGenTree.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.compare_Cmp	40
Coq.MSets.MSetGenTree.compare_spec	40
Coq.MSets.MSetGenTree.equal_spec	40
Coq.MSets.MSetGenTree.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.mindepth_cardinal	40
Coq.MSets.MSetGenTree.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.In_compat	40	14.4.26.0.44	search with cache (only 1: intros x l' H H0; only 1: intros; only 1: compute in *; only 1: destruct H1; only 1: now rewrite H).	25.3006820679	112186
Coq.MSets.MSetInterface.eq_equiv	40
Coq.MSets.MSetInterface.eq_dec	40
Coq.MSets.MSetInterface.mem_spec	40
Coq.MSets.MSetInterface.equal_spec	40
Coq.MSets.MSetInterface.subset_spec	40
Coq.MSets.MSetInterface.empty_spec	40
Coq.MSets.MSetInterface.is_empty_spec	40
Coq.MSets.MSetInterface.add_spec	40
Coq.MSets.MSetInterface.remove_spec	40
Coq.MSets.MSetInterface.singleton_spec	40
Coq.MSets.MSetInterface.union_spec	40
Coq.MSets.MSetInterface.inter_spec	40
Coq.MSets.MSetInterface.diff_spec	40
Coq.MSets.MSetInterface.fold_spec	40
Coq.MSets.MSetInterface.cardinal_spec	40
Coq.MSets.MSetInterface.filter_spec	40
Coq.MSets.MSetInterface.for_all_spec	40
Coq.MSets.MSetInterface.exists_spec	40
Coq.MSets.MSetInterface.partition_spec1	40
Coq.MSets.MSetInterface.partition_spec2	40
Coq.MSets.MSetInterface.elements_spec1	40
Coq.MSets.MSetInterface.elements_spec2w	40
Coq.MSets.MSetInterface.choose_spec1	40
Coq.MSets.MSetInterface.choose_spec2	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.compare_spec	40
Coq.MSets.MSetInterface.elements_spec2	40
Coq.MSets.MSetInterface.min_elt_spec1	40
Coq.MSets.MSetInterface.min_elt_spec2	40
Coq.MSets.MSetInterface.min_elt_spec3	40
Coq.MSets.MSetInterface.max_elt_spec1	40
Coq.MSets.MSetInterface.max_elt_spec2	40
Coq.MSets.MSetInterface.max_elt_spec3	40
Coq.MSets.MSetInterface.choose_spec3	40
Coq.MSets.MSetInterface.eq_equiv	40	226	search with cache (only 1: firstorder).	21.2861220837	94070
Coq.MSets.MSetInterface.Proper_instance_0	40
Coq.MSets.MSetInterface.Proper_instance_1	40
Coq.MSets.MSetInterface.Proper_instance_2	40
Coq.MSets.MSetInterface.Proper_instance_3	40
Coq.MSets.MSetInterface.Proper_instance_4	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_empty_r	40
Coq.MSets.MSetInterface.lt_empty_l	40
Coq.MSets.MSetInterface.lt_add_lt	40
Coq.MSets.MSetInterface.lt_add_eq	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat'	40
Coq.MSets.MSetInterface.eq_cons	40	0.0.10	search with cache (only 1: intros l1 l1' l2 l2' H H'; only 1: rewrite H, H'; only 1: reflexivity).	2.11867499352	1139
Coq.MSets.MSetInterface.cons_CompSpec	40	6.2.2.3.1	search with cache (only 1: intros x y z; only 1: induction 2; only 1: auto; only 1: auto; only 1: auto with *).	4.44659900665	2441
Coq.MSets.MSetToFiniteSet.In_In	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0488040447235	5
Coq.MSets.MSetToFiniteSet.Subset_Included	40	0.2	search with cache (only 1: compute; only 1: auto with extcore).	0.0377190113068	14
Coq.MSets.MSetToFiniteSet.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.empty_Empty_Set	40	1.1.0.45.0.5.46	search with cache (only 1: simpl_relation; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: split; only 1: intro H2; only 1: Dec.fsetdec; only 1: intros; only 1: tauto).	3.54701399803	16044
Coq.MSets.MSetToFiniteSet.Empty_Empty_set	40	1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	0.0953640937805	10
Coq.MSets.MSetToFiniteSet.singleton_Singleton	40	3.0.3.1.0.11.0	search with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intros; only 1: auto with *).	2.37671399117	1050
Coq.MSets.MSetToFiniteSet.union_Union	40
Coq.MSets.MSetToFiniteSet.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	1.16813993454	531
Coq.MSets.MSetToFiniteSet.add_Add	40	0.0.0.1.0.3.1.0.3.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 2; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto; only 1: intuition).	34.3656280041	20759
Coq.MSets.MSetToFiniteSet.Add_Add	40
Coq.MSets.MSetToFiniteSet.remove_Subtract	40	0.0.0.0.0.2.3.1.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto with sets; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	13.7064781189	4121
Coq.MSets.MSetToFiniteSet.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.Ens_to_MSet	40
Coq.MSets.MSetWeakList.In_compat	40
Coq.MSets.MSetWeakList.mem_spec	40
Coq.MSets.MSetWeakList.isok_iff	40
Coq.MSets.MSetWeakList.isok_Ok	40
Coq.MSets.MSetWeakList.add_spec	40
Coq.MSets.MSetWeakList.add_ok	40
Coq.MSets.MSetWeakList.remove_spec	40
Coq.MSets.MSetWeakList.remove_ok	40
Coq.MSets.MSetWeakList.singleton_ok	40	12.60	search with cache (only 1: intros; only 1: intuition).	0.61585187912	3482
Coq.MSets.MSetWeakList.singleton_spec	40
Coq.MSets.MSetWeakList.empty_ok	40	1.45	search with cache (only 1: compute; only 1: intuition).	0.224637985229	1132
Coq.MSets.MSetWeakList.empty_spec	40	6.0.45	search with cache (only 1: compute; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv).	0.260140895844	1505
Coq.MSets.MSetWeakList.is_empty_spec	40
Coq.MSets.MSetWeakList.elements_spec1	40	3.3	search with cache (only 1: intros; only 1: intuition).	0.0522451400757	47
Coq.MSets.MSetWeakList.elements_spec2w	40	2.0	search with cache (only 1: intros; only 1: intuition).	0.0178740024567	4
Coq.MSets.MSetWeakList.fold_spec	40	0.38	search with cache (only 1: intros x l' H H0; only 1: intuition).	0.170095920563	775
Coq.MSets.MSetWeakList.union_ok	40
Coq.MSets.MSetWeakList.union_spec	40
Coq.MSets.MSetWeakList.inter_ok	40
Coq.MSets.MSetWeakList.inter_spec	40
Coq.MSets.MSetWeakList.diff_ok	40
Coq.MSets.MSetWeakList.diff_spec	40
Coq.MSets.MSetWeakList.subset_spec	40
Coq.MSets.MSetWeakList.equal_spec	40
Coq.MSets.MSetWeakList.choose_spec1	40
Coq.MSets.MSetWeakList.choose_spec2	40	3.0.3.0.1.5.49	search with cache (only 1: compute; only 1: induction s; only 1: intros Hm; only 1: intros; only 1: inversion H; only 1: intros; only 1: congruence).	4.26839089394	18886
Coq.MSets.MSetWeakList.cardinal_spec	40	6.0	search with cache (only 1: intros; only 1: intuition).	0.0166981220245	8
Coq.MSets.MSetWeakList.filter_spec'	40
Coq.MSets.MSetWeakList.filter_spec	40
Coq.MSets.MSetWeakList.filter_ok	40
Coq.MSets.MSetWeakList.for_all_spec	40
Coq.MSets.MSetWeakList.exists_spec	40
Coq.MSets.MSetWeakList.partition_spec1	40
Coq.MSets.MSetWeakList.partition_spec2	40
Coq.MSets.MSetWeakList.partition_ok1'	40
Coq.MSets.MSetWeakList.partition_ok2'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	16.0211489201	7243
Coq.MSets.MSetWeakList.partition_ok1	40
Coq.MSets.MSetWeakList.partition_ok2	40
Coq.MSets.MSetList.inf_iff	40
Coq.MSets.MSetList.isok_iff	40
Coq.MSets.MSetList.isok_Ok	40	0	search with cache (only 1: tauto).	0.0119109153748	1
Coq.MSets.MSetList.mem_spec	40
Coq.MSets.MSetList.add_inf	40
Coq.MSets.MSetList.add_ok	40
Coq.MSets.MSetList.add_spec	40
Coq.MSets.MSetList.remove_inf	40
Coq.MSets.MSetList.remove_ok	40	0.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	9.24236512184	2492
Coq.MSets.MSetList.remove_spec	40
Coq.MSets.MSetList.singleton_ok	40	14	search with cache (only 1: intuition).	0.0358381271362	75
Coq.MSets.MSetList.singleton_spec	40
Coq.MSets.MSetList.union_inf	40
Coq.MSets.MSetList.union_ok	40
Coq.MSets.MSetList.union_spec	40
Coq.MSets.MSetList.inter_inf	40
Coq.MSets.MSetList.inter_ok	40
Coq.MSets.MSetList.inter_spec	40
Coq.MSets.MSetList.diff_inf	40
Coq.MSets.MSetList.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.113957881927	3
Coq.MSets.MSetList.diff_spec	40
Coq.MSets.MSetList.equal_spec	40
Coq.MSets.MSetList.subset_spec	40
Coq.MSets.MSetList.empty_ok	40	4	search with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0172629356384	5
Coq.MSets.MSetList.empty_spec	40	28	search with cache (only 1: easy).	0.852441072464	1229
Coq.MSets.MSetList.is_empty_spec	40
Coq.MSets.MSetList.elements_spec1	40	1.5.1	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.022577047348	13
Coq.MSets.MSetList.elements_spec2	40	2.8.0	search with cache (only 1: intros; only 1: inv; only 1: intuition).	0.096107006073	100
Coq.MSets.MSetList.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0231149196625	3
Coq.MSets.MSetList.min_elt_spec1	40
Coq.MSets.MSetList.min_elt_spec2	40
Coq.MSets.MSetList.min_elt_spec3	40	7.5.0.2	search with cache (only 1: intros [| x' s'] Hs Hs'; only 1: intuition; only 1: inv; only 1: discriminate).	1.65772509575	1202
Coq.MSets.MSetList.max_elt_spec1	40	2.1.0.0.1.0.0.0.6	search with cache (only 1: induction s; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: auto).	17.4198789597	9329
Coq.MSets.MSetList.max_elt_spec2	40
Coq.MSets.MSetList.max_elt_spec3	40
Coq.MSets.MSetList.choose_spec3	40
Coq.MSets.MSetList.fold_spec	40	2	search with cache (only 1: tauto).	0.0143740177155	3
Coq.MSets.MSetList.cardinal_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.013298034668	2
Coq.MSets.MSetList.filter_inf	40
Coq.MSets.MSetList.filter_ok	40
Coq.MSets.MSetList.filter_spec	40
Coq.MSets.MSetList.for_all_spec	40
Coq.MSets.MSetList.exists_spec	40
Coq.MSets.MSetList.partition_inf1	40
Coq.MSets.MSetList.partition_inf2	40
Coq.MSets.MSetList.partition_ok1	40
Coq.MSets.MSetList.partition_ok2	40
Coq.MSets.MSetList.partition_spec1	40
Coq.MSets.MSetList.partition_spec2	40
Coq.MSets.MSetList.In_compat	40
Coq.MSets.MSetList.lt_strorder	40
Coq.MSets.MSetList.lt_compat	40
Coq.MSets.MSetList.compare_spec_aux	40
Coq.MSets.MSetList.compare_spec	40
Coq.MSets.MSetList.eq_leibniz_list	40
Coq.MSets.MSetList.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	8	search with cache (only 1: auto with zarith).	0.0889880657196	9
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	46.46.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	6.51776409149	75277
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	4.4.0.0.2	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.329115867615	574
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	1.3.0.0.3.0.0.1.0.2.14.2	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: red; only 1: intro x; only 1: trivial; only 1: red; only 1: intros x y z H1 H2; only 1: eauto; only 1: red; only 1: intros x y H; only 1: eauto).	1.70736289024	6074
Coq.Relations.Relations.inverse_image_of_eq	40	0.6.2.3.0.2.1.1.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: red; only 1: induction 1; only 1: auto; only 1: red; only 1: induction 1; only 1: trivial).	1.41900801659	3549
Coq.Sets.Uniset.leb_refl	40	3.3.24.55.30	search with cache (only 1: intro H; only 1: red; only 1: destruct H; only 1: trivial; only 1: trivial).	4.06656002998	40070
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	0.1.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0138108730316	5
Coq.Sets.Uniset.seq_refl	40	3	search with cache (only 1: auto).	0.00844812393188	4
Coq.Sets.Uniset.seq_trans	40	1.10.12.8.4.0	search with cache (only 1: intros s1 s2 E a; only 1: unfold seq; only 1: intro H; only 1: intro z; only 1: destruct (H z); only 1: auto).	8.07803702354	31872
Coq.Sets.Uniset.seq_sym	40	0.0.1	search with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0127019882202	4
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0131590366364	3
Coq.Sets.Uniset.union_empty_right	40	6.6.9.14.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destr_bool; only 1: destruct b; only 1: auto; only 1: auto).	18.1669769287	84021
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	0.7.1.0.0.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: unfold charac; only 1: destruct z; only 1: auto with bool).	1.39972305298	2194
Coq.Sets.Uniset.seq_left	40	0.1.1.0.0.0.1.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.349138975143	263
Coq.Sets.Uniset.seq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0289490222931	10
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	1.1.1.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	2.4623439312	2094
Coq.Sets.Multiset.meq_refl	40	1.8.3	search with cache (only 1: intros; only 1: intros EQ; only 1: trivial).	0.0774359703064	144
Coq.Sets.Multiset.meq_trans	40	3.3.0.0.3	search with cache (only 1: intros; only 1: destruct x; only 1: unfold meq; only 1: intro m; only 1: now rewrite H).	0.472717046738	495
Coq.Sets.Multiset.meq_sym	40	0.2.0.1.0	search with cache (only 1: destruct x; only 1: intros; only 1: unfold meq; only 1: intros; only 1: auto).	0.0212190151215	8
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0160219669342	3
Coq.Sets.Multiset.munion_empty_right	40	1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0179331302643	5
Coq.Sets.Multiset.munion_comm	40
Coq.Sets.Multiset.munion_ass	40	0.5.0.2.0.1	search with cache (only 1: destruct x; only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: auto with arith).	1.28082299232	1368
Coq.Sets.Multiset.meq_left	40	0.0.0.1.0.3.0.2	search with cache (only 1: unfold munion; only 1: unfold meq; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: auto).	2.74029898643	2732
Coq.Sets.Multiset.meq_right	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: auto with arith).	0.0310258865356	8
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	0.4.2.1.0.2	search with cache (only 1: destruct x; only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intros; only 1: auto with arith).	1.00048089027	849
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	0.1.0.1.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	1.83924484253	945
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	42.11	search with cache (only 1: intro H'3; only 1: trivial with sets arith).	0.585803031921	3616
Coq.Sets.Integers.le_antisym	40	3.0.11	search with cache (only 1: intro H'3; only 1: intros n H'0; only 1: auto with sets arith).	0.165358066559	196
Coq.Sets.Integers.le_trans	40	0.12.10.12	search with cache (only 1: intros x H'4; only 1: intros InAz E; only 1: rewrite E; only 1: auto with sets arith).	2.34253692627	7585
Coq.Sets.Integers.le_Order	40
Coq.Sets.Integers.triv_nat	40
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	3.39.18.0	search with cache (only 1: intros; only 1: intro H1; only 1: red; only 1: auto).	4.39566993713	45744
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	5.5	search with cache (only 1: intros A B [H1 H2]; only 1: auto  10 with sets).	0.158331871033	246
Coq.Sets.Relations_1_facts.contains_is_preorder	40	13.45	search with cache (only 1: intro x; only 1: auto  10 with sets).	0.962733983994	11092
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.8.7	search with cache (only 1: intro; only 1: intros A B [H1 H2]; only 1: auto  10 with sets).	0.313271999359	849
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0107328891754	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	4.1.0.0	search with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: auto with sets).	0.0503339767456	39
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	2.0	search with cache (only 1: intro; only 1: auto  10 with sets).	0.0123732089996	12
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto with sets).	0.00847387313843	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	0.0.2.0.1.0.2.0.4.0.0.0.2.0.2	search with cache (only 1: intros; only 1: red; only 1: generalize Rstar_contains_R; only 1: intro T; only 1: red in T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	12.4306070805	37124
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.2.0.1.0.2.0.4.0.0.0.3.1.0	search with cache (only 1: intuition; only 1: red; only 1: generalize Rstar_contains_R; only 1: intro T; only 1: red in T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	12.07127285	30136
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	3.2.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0334920883179	30
Coq.Sets.Permut.comm_left	40	1.1.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0131759643555	5
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	8.0.1.5.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: apply op_comm).	17.0738489628	20827
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.0.18.0.0.16.2.0	search with cache (only 1: intros X Y x H'; only 1: red; only 1: generalize (Inclusion_is_transitive U); only 1: intro H'4; only 1: red in H'4; only 1: exists x; only 1: auto using add_soustr_2 with sets; only 1: auto using add_soustr_2 with sets).	22.03937006	59541
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	6.1.3.4.2.1.0.3	search with cache (only 1: intro H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: tauto; only 1: auto using Im_def with sets).	5.47209000587	9337
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	0.0.4.7	search with cache (only 1: induction 1; only 1: exists x; only 1: rewrite H0; only 1: auto using Im_def with sets).	0.807199001312	867
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	41.2	search with cache (only 1: intro H; only 1: induction 1).	1.41773509979	11747
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40	0.0.0.47	search with cache (only 1: repeat split; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.619606018066	1511
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00534796714783	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0	search with cache (only 1: auto with sets).	0.0048930644989	1
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40	0.2.2.0.0.0.8.8.0	search with cache (only 1: intro X; only 1: split; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intro A; only 1: simpl; only 1: auto with sets).	5.51552796364	7616
Coq.Sets.Powerset.Union_minimal	40	1.1.2.0.0.9.6	search with cache (only 1: intros H'0 H'1; only 1: intuition; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: trivial; only 1: trivial).	3.10454082489	4243
Coq.Sets.Powerset.Intersection_maximal	40	0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: auto with sets).	0.00820302963257	3
Coq.Sets.Powerset.Union_increases_l	40	0	search with cache (only 1: auto with sets).	0.00569796562195	1
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00528192520142	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.4.1.2.3	search with cache (only 1: intros H'0 H'1; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.217581987381	231
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0105500221252	6
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	0.1.1.0.1	search with cache (only 1: intros X Y I NI; only 1: intro H; only 1: apply Setminus_intro; only 1: auto with sets; only 1: auto with sets).	0.0201330184937	18
Coq.Sets.Classical_sets.Subtract_inv	40	2.5.4	search with cache (only 1: intros A NI; only 1: intros n' (HPn', Hn'); only 1: auto with sets).	0.35923409462	543
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.5.13	search with cache (only 1: red; only 1: simple destruct 1; only 1: auto with sets).	0.543257951736	1729
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.1.0.7.3.0.1	search with cache (only 1: generalize Rstar_transitive; only 1: intro T1; only 1: generalize Rstar_transitive; only 1: intros x y H'; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	2.3863940239	5466
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	5.7.1	search with cache (only 1: intros A x y H'; only 1: intro UIP; only 1: apply UIP).	0.621786117554	923
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.0.0.0.1	search with cache (only 1: intros X Y I NI; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0283451080322	30
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40	2.1.8.3.1.0.1.3	search with cache (only 1: unfold Subtract at 1; only 1: intros X x H'; only 1: intro H'0; only 1: elim H'0; only 1: intro H'3; only 1: elim H'3; only 1: tauto; only 1: tauto).	6.05398106575	13390
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	1.0.0.0.0.0.4.9.3.1	search with cache (only 1: intros X x; only 1: intros H'1 H'2; only 1: intro H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	13.7135419846	38668
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	6.0	search with cache (only 1: intro A; only 1: auto  6 with sets).	0.019623041153	8
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0123288631439	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40
Coq.Sets.Powerset_facts.less_than_empty	40	0.0	search with cache (only 1: intros X H'; only 1: auto using Noone_in_empty with sets).	0.0132780075073	2
Coq.Sets.Powerset_facts.Union_commutative	40	0.0	search with cache (only 1: intros X H'; only 1: auto with sets).	0.0146799087524	2
Coq.Sets.Powerset_facts.Union_associative	40	13	search with cache (only 1: auto  10 with sets).	0.272550106049	123
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0138700008392	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  9 with sets).	0.0168941020966	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.1.0.0.0.0.1.0.2.0.0.1	search with cache (only 1: intros n m; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	2.0105638504	3059
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.3.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	27.9099190235	23583
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.2.0.0.0.2.0.0.4.0.2.1	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	1.13937687874	1663
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	9.48600697517	10873
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.1.0.0.0.1.2.0.1.0.0.0.2	search with cache (only 1: unfold Add at 1; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: red; only 1: auto with sets).	3.17718791962	3875
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.0.1.0.11.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: intros t H'1; only 1: auto with sets).	0.494042158127	644
Coq.Sets.Powerset_facts.incl_add	40	3.1.3	search with cache (only 1: intros B C x H'; only 1: unfold Add; only 1: auto with sets).	0.225124120712	85
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	13.1.1.1.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	7.16418981552	7046
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40	8.0.2.6	search with cache (only 1: unfold Included; only 1: intros B C x H'; only 1: unfold Add; only 1: auto  10 with sets).	3.28911709785	2029
Coq.Sets.Powerset_facts.setcover_intro	40	0.0	search with cache (only 1: intros x y z H' H'0; only 1: auto with sets).	0.0125939846039	2
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1	search with cache (only 1: auto with sets).	0.0294170379639	31
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0164520740509	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	3.0.2.1.0.0.0.0.3	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.980965137482	1438
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	0.3.2.0.0.1.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: auto with sets; only 1: red; only 1: auto with sets).	0.765721082687	763
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.2.3.5.1.2.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: contradict H1; only 1: intuition; only 1: inversion H0; only 1: intuition; only 1: intuition).	1.90129804611	3012
Coq.Sets.Constructive_sets.Extension	40
Coq.Sets.Constructive_sets.Noone_in_empty	40	6.24.2	search with cache (only 1: intro x; only 1: intro H; only 1: destruct H, u).	0.25190615654	1329
Coq.Sets.Constructive_sets.Included_Empty	40	31.1	search with cache (only 1: intro H; only 1: induction 1).	0.41530919075	2273
Coq.Sets.Constructive_sets.Add_intro1	40	1.1.0.0	search with cache (only 1: intros B C H'; only 1: intro; only 1: left; only 1: exact H).	0.0116751194	6
Coq.Sets.Constructive_sets.Add_intro2	40	0.1	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0110840797424	3
Coq.Sets.Constructive_sets.Inhabited_add	40	2.45.3.3.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro x; only 1: exists x; only 1: auto with sets).	1.78343105316	18188
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	0.1.18.9.37.5	search with cache (only 1: intros; only 1: intro H1; only 1: destruct H; only 1: subst; only 1: elim (Noone_in_empty x); only 1: auto with sets).	6.67319393158	63746
Coq.Sets.Constructive_sets.Add_not_Empty	40	0.9.5.1.0.2.1	search with cache (only 1: unfold Add at 1; only 1: intros A x; only 1: red; only 1: intros; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Noone_in_empty with sets).	1.082695961	5135
Coq.Sets.Constructive_sets.not_Empty_Add	40	0.1.5.0.1.0.2	search with cache (only 1: unfold Add at 1; only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Noone_in_empty with sets).	0.45778298378	1048
Coq.Sets.Constructive_sets.Singleton_inv	40	14.1.15	search with cache (only 1: intro H; only 1: destruct 1; only 1: trivial).	0.419149875641	1222
Coq.Sets.Constructive_sets.Singleton_intro	40	0.1	search with cache (only 1: induction 1; only 1: auto using Add_intro2 with sets).	0.0178470611572	13
Coq.Sets.Constructive_sets.Union_inv	40	0.0.1.1	search with cache (only 1: intros X H'; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.0435209274292	35
Coq.Sets.Constructive_sets.Add_inv	40	1.2.0.0.4	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).	0.328999042511	314
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0118041038513	3
Coq.Sets.Constructive_sets.Couple_inv	40	0.3.0.0.13	search with cache (only 1: intro H; only 1: intros x y H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets; only 1: auto).	0.457810878754	1000
Coq.Sets.Constructive_sets.Setminus_intro	40	0.2.4.0	search with cache (only 1: intros B C x H'; only 1: red; only 1: intro H; only 1: auto with sets).	0.0153520107269	13
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.00998711585999	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.6.0.2.0	search with cache (only 1: intro; only 1: red; only 1: intro H; only 1: destruct H; only 1: auto with sets).	0.0885260105133	209
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	1.0.1.22.6.4	search with cache (only 1: intros a b; only 1: intro H'5; only 1: elim H'5; only 1: auto with sets; only 1: intros X x H'; only 1: auto using incl_soustr_add_l with sets).	2.61539912224	14853
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40	0.4.0.7.28.1.0.22.1.0	search with cache (only 1: intro H'5; only 1: intro H'3; only 1: apply H'3; only 1: auto with sets; only 1: intros X H'0; only 1: elim H'0; only 1: clear H'0; only 1: intros H'0 H'1; only 1: elim H'1; only 1: auto with sets).	10.5837669373	61197
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	5.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: apply Inhabited_add).	0.0166001319885	12