coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	12.428122	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	12.558090	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	12.246027	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	120	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	12.522408	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	13.340073	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	12.812544	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	120	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	13.073589	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	13.116410	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	120	0.6	synth with cache (only 1: destruct p; only 1: reflexivity).	13.692694	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	13.645633	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	120	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	13.817091	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.2.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	14.400156	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	14.063041	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.2.0.3	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	14.808308	32
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	120	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	14.887679	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	2.882845	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	3.052941	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	2.958060	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	120	0.5.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	16.168995	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	120	3.0.0.2.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	16.798094	33
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	120	0.3.3	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	4.772028	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.907080	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	120	0.0.0.0.4.1	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	17.300858	34
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	120	0.0.0.2.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	18.004031	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.5.8	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	5.639719	41
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.1.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	6.090058	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	120	0.0.0.0.3.1	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	5.554383	32
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	6.460598	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	8.177718	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	120	0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim identity_sym with (1 := H0); only 1: trivial).	5.770636	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	21.087077	45
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	120	2.0	synth with cache (only 1: unfold all; only 1: auto).	3.712761	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	120	0.1.1.0.0.0.0.2.3	synth with cache (only 1: intros; only 1: destruct b1; only 1: destruct b2; only 1: destruct H; only 1: split; only 1: destruct H; only 1: assumption; only 1: destruct H; only 1: assumption).	21.971173	205
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	120	0.2.0.3	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	4.840749	31
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	23.632299	66
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	2.696835	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	120	0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	5.800877	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	120	17.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_pred).	7.815716	78
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	120	17.0.1.0.0.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: auto).	25.911762	167
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.1.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: auto).	3.878077	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	11.744583	44
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	5.488716	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	120	0.1	synth with cache (only 1: unfold all; only 1: auto).	5.681553	42
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	120	0.2.6.0.0.0.1.6.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	27.253496	129
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	1.0	synth with cache (only 1: destruct 1; only 1: trivial).	3.504017	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0.1.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: trivial).	3.600793	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	120	0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	27.604108	95
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	120	0.0.0.5.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	27.964995	100
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	3.470234	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	17.161706	69
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.224110	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	120	0.4.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.658574	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	120	0.8.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	4.210882	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.1.0.0.2	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: destruct H; only 1: trivial).	6.451032	34
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.5.7.3	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	5.112307	44
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.422841	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	120	10.0.13	synth with cache (only 1: intros ?; only 1: destruct H; only 1: auto).	7.209482	146
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	120	3.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: exact X).	13.993300	105
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.459007	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	120	0.0.6.5	synth with cache (only 1: intros ?; only 1: induction n; only 1: auto; only 1: auto).	6.260030	79
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: reflexivity).	2.593333	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.762277	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	120	0.1.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.889867	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	120	0.1.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.716889	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	120	0.22.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: apply H0; only 1: destruct n; only 1: assumption).	38.284939	374
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	120	0.1.4	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	4.160352	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	0.25.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	13.019676	147
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	120	0.4.1	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.787227	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	120	0.1.4	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	4.244038	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	120	0.1.9	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	4.674601	36
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	120	0.3.10	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	4.755049	46
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	2.601652	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	120	0.5.2	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.993917	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	120	1.3.7.9.0	synth with cache (only 1: intros; only 1: destruct H1'; only 1: destruct H2'; only 1: destruct H2; only 1: reflexivity).	8.046775	85
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	120	2.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	6.737207	28
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	120	1.4.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	5.334669	29
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	2.23.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	19.942979	191
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	120	0.4.8.0	synth with cache (only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	7.325269	50
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	120	0.7.2	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	4.296088	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	1.25.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	20.787954	241
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	120	0.2.2	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	4.162640	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	120	0.11.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: assumption).	32.524009	575
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	2.865101	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.11.11	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	36.309393	1074
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	120	2.3.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	5.903115	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	120	0.6.11.0	synth with cache (only 1: intros; only 1: apply eq_sym; only 1: destruct e; only 1: reflexivity).	9.603979	169
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	3.4.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact X).	29.730975	229
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	120	6.3.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	6.393104	53
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	7.131903	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	120	3.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	7.783386	31
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	120	0.3.0.3	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct H; only 1: reflexivity).	5.110640	32
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	120	0.4.9	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	5.340006	41
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	120	1.13.4.20	synth with cache (only 1: destruct q in |- * at 1 2; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).	51.049332	1602
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.5.0.9.6	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct x; only 1: destruct H; only 1: simpl in *; only 1: reflexivity).	8.101754	111
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	120	0.0.1.0.0.0.1.0.0.0.0.0.0.1.4.0	synth with cache (only 1: intros; only 1: destruct b; only 1: destruct a; only 1: split; only 1: split; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: destruct a; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption).	65.045040	433
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	120	0.4.9	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	14.594796	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	120	0.0.0.0.2.0.0.7.0.0.0.0.0.2.2.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H0; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	63.768713	575
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	120	0.6.7	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	14.896755	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.4.7.4	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	16.427205	58
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	120	3.4.0.1.0.2.0.15.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply H; only 1: assumption; only 1: apply False_rec; only 1: intros ?; only 1: destruct H; only 1: auto).	82.248762	1598
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	120	1.0.13.7.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: constructor; only 1: exists x; only 1: exact H).	86.975055	2004
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	10.5.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: auto).	23.399927	278
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	120	0.5.6	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	4.894545	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	120	1.0.0.2.0.0.0.7.0.0.0.0.2.2.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	83.913349	695
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.4.6.4	synth with cache (only 1: destruct pqr; only 1: destruct e; only 1: destruct e0; only 1: destruct x; only 1: simpl; only 1: reflexivity).	9.050687	116
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	120	0.5.9.34.12	synth with cache (only 1: apply eq_sym; only 1: pattern eq_trans_refl_l; only 1: destruct H; only 1: destruct u; only 1: reflexivity).	55.940326	2797
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	14.658922	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	120	0.5.6	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	15.218619	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	3.209333	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	120	5.2.0.0.0.3	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	9.183545	63
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	120	0.4.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	7.526976	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	120	0.4.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: intros; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl; only 1: rewrite IHn; only 1: trivial).	8.904742	39
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	120	0.0.1.0.0.0.0.0.6.6.0.0.0.0	synth with cache (only 1: revert n; only 1: induction m; only 1: inversion 1; only 1: auto; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHm; only 1: apply le_S_n; only 1: trivial).	40.586033	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
