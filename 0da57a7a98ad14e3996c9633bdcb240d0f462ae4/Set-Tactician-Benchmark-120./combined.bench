coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1b	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: cring).	0.236003	5
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.P0Z_correct	120	0	synth with cache (only 1: trivial).	0.021189	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	120	0.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.054912	4
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rset	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rtheory	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.R_power_theory	120	0.0.0.0.0	synth with cache (only 1: apply mkpow_th; only 1: unfold pow; only 1: intros; only 1: rewrite Nnat.N2Nat.id; only 1: reflexivity).	0.026710	5
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.norm_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.mult_l_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.check_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: subst; only 1: trivial; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: trivial).	0.025491	10
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).	0.091698	49
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.R_one_zero	120	1	synth with cache (only 1: exact R1_neq_R0).	0.021469	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	120	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).	0.023283	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).	0.024822	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).	0.183826	17
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Q_one_zero	120	0	synth with cache (only 1: discriminate).	0.021463	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	120	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).	0.029678	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).	0.031998	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Z_one_zero	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zcri	120	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.023380	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).	0.026143	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rsth	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: subst; only 1: trivial; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: trivial).	0.058809	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).	0.266606	49
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	120	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).	0.020094	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.R_one_zero	120	1	synth with cache (only 1: exact R1_neq_R0).	0.019655	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).	0.022757	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTCN_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTC_Newton	120	0.0.0	synth with cache (only 1: intros; only 1: unfold NewtonInt; only 1: reflexivity).	0.021272	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold NewtonInt; only 1: destruct NewtonInt_P1; only 1: clear o; only 1: apply Rminus_diag_eq; only 1: easy).	0.024661	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P3	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Newton_integrable; only 1: intros; only 1: elim X; only 1: intros ?; only 1: intros ?; only 1: exists x; only 1: tauto).	0.030648	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct pr; only 1: unfold NewtonInt; only 1: unfold NewtonInt_P3; only 1: simpl; only 1: ring).	0.060882	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P9	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.atan_sub_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3_7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.PI_2_3_7_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ropp_div	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: reflexivity).	0.020471	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_half_prf	120	0	synth with cache (only 1: lra).	0.205459	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Boule; only 1: unfold pos_half; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply Rabs_def2 in H; only 1: destruct H; only 1: split; only 1: lra; only 1: lra).	0.032132	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Un_cv_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_first_term_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_CVU	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold derivable_pt; only 1: unfold tan; only 1: apply derivable_pt_div; only 1: reg; only 1: reg; only 1: apply Rgt_not_eq; only 1: apply cos_gt_0; only 1: rewrite <- Ropp_div; only 1: tauto; only 1: tauto).	0.030739	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_tan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_increasing_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_3_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_1	120	0.0	synth with cache (only 1: pose proof PI2_3_2; only 1: lra).	0.025094	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_is_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ub_opp	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Ropp_div; only 1: apply Ropp_lt_contravar; only 1: assumption).	0.027455	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_opp_lt	120	0.0	synth with cache (only 1: intros; only 1: lra).	0.027480	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tech_opp_tan	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite tan_neg; only 1: assumption).	0.028025	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pre_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_bound	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H0; only 1: exact H).	0.036386	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H; only 1: exact H0).	0.033401	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_0	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply tan_is_inj; only 1: apply atan_bound; only 1: pose proof PI_RGT_0; only 1: rewrite Ropp_div; only 1: split; only 1: lra; only 1: lra; only 1: rewrite atan_right_inv; only 1: rewrite tan_0; only 1: easy).	0.045310	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_converging	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_01	120
