coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	300	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.006328	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.011119	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	0.018721	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	0.020290	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	0.016875	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	0.017699	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	0.026154	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	0.027195	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	0.014416	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	0.019124	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	0.032225	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	0.029297	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.016675	14
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: apply H0; only 1: assumption).	0.012865	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: apply H0; only 1: assumption).	0.018668	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	300	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.007001	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	0.117324	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	0.010266	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	300	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.006937	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	300	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.007128	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	300	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.007706	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	300	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	0.009780	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.012807	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.013642	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	300	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.012090	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	0.015461	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	300	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.010488	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	300	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.013969	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	300	0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: auto).	0.008209	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	300	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.013909	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	300	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.010225	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	300	0.0	synth with cache (only 1: red; only 1: auto).	0.008157	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	300	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.009778	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	300	0	synth with cache (only 1: discriminate).	0.006610	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	300	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.012167	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	300	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.011995	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: apply p).	0.011542	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	300	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.014337	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	300	0	synth with cache (only 1: trivial).	0.006485	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	300	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.020159	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	300	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	0.014087	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.013106	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	300	0	synth with cache (only 1: reflexivity).	0.007278	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	300	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT_uncurried; only 1: exact pq).	0.028473	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	300	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.013003	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	300	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.024935	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	300	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	0.010132	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	300	0.0.0	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	0.036214	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	300	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	0.049226	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	300	0	synth with cache (only 1: reflexivity).	0.016528	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	300	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	0.029622	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	300	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.012057	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	0.014634	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	300	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.025587	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.017661	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	300	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	0.015051	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	300	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.020221	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	300	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	0.021757	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	300	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.024193	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	300	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.010992	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	0.018490	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.014809	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	0.011618	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	300	0	synth with cache (only 1: exact well_founded_induction_type).	0.007814	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	300	0	synth with cache (only 1: exact well_founded_induction_type).	0.007853	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	300	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.008244	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	300	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.007900	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	300	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.007970	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	300	0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: auto).	0.014702	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	300	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	0.012507	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	300	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	0.018293	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Fix; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.016561	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.013364	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	0.026931	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Fix_F_2; only 1: auto; only 1: auto).	0.013717	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	300	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist_uncurried; only 1: exact pq).	0.099355	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	0.019067	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	300	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	0.014074	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	300	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.023151	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	300	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.013278	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	300	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.022331	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	300	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT2_uncurried; only 1: exact pqr).	0.072255	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	300	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.038380	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	300	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.030089	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	300	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist2_uncurried; only 1: exact pqr).	0.086758	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.tl_nth_tl	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_plus	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Str_nth; only 1: rewrite Str_nth_tl_plus; only 1: trivial with datatypes).	0.015465	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.EqSt_reflex	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.sym_EqSt	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.trans_EqSt	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.StrictProp.Spr1_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.bool_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_true_false	300	0.0	synth with cache (only 1: intros ?; only 1: discriminate).	0.012237	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	300	0	synth with cache (only 1: trivial).	0.013637	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.eqst_ntheq	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_false_true	300	0.0	synth with cache (only 1: intros ?; only 1: discriminate).	0.020483	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	300	0	synth with cache (only 1: trivial).	0.012367	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H0; only 1: easy).	0.042443	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.ntheq_eqst	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel	300	0	synth with cache (only 1: trivial).	0.021595	1
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.sumbool_of_bool	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_is_false	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	300	0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: apply Acc_inverse_image; only 1: auto).	0.012786	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	300	0.0	synth with cache (only 1: unfold Over_rel; only 1: trivial).	0.033170	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not_not	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	300	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.014955	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_rec	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	300	0	synth with cache (only 1: trivial).	0.024860	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	300	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.043190	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: intros ?; only 1: apply H; only 1: easy).	0.096711	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_False	300	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: auto).	0.019724	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	300	0.0.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: apply op_comm).	0.026642	3
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_ind	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	300	0.0	synth with cache (only 1: unfold well_founded; only 1: auto with sets).	0.033279	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_iff_false	300	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.051693	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_and	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_left	300	0.0.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.032866	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_map	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Str_nth; only 1: rewrite Str_nth_tl_map; only 1: reflexivity).	0.027538	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_or	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold decidable; only 1: intros; only 1: elim H; only 1: left; only 1: left; only 1: assumption; only 1: elim H0; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: intros ?; only 1: elim H3; only 1: assumption; only 1: assumption).	0.079169	15
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_or	300	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.037424	7
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	300	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.030981	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_right	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_left	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_not	300	0.0.0	synth with cache (only 1: case H1; only 1: auto; only 1: auto).	0.015683	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.ForAll_map	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_and	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold decidable; only 1: intros; only 1: elim H; only 1: elim H0; only 1: left; only 1: split; only 1: assumption; only 1: assumption; only 1: right; only 1: intros ?; only 1: apply H1; only 1: elim H3; only 1: intros; only 1: assumption; only 1: right; only 1: intros ?; only 1: apply H1; only 1: elim H2; only 1: intros; only 1: assumption).	0.049371	20
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	300	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.052002	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Exists_map	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: left; only 1: firstorder; only 1: right; only 1: firstorder).	0.052062	8
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_of_sumbool	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: exists true; only 1: assumption; only 1: intros ?; only 1: exists false; only 1: assumption).	0.033047	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold decidable; only 1: intros; only 1: elim H; only 1: right; only 1: intros ?; only 1: apply H1; only 1: assumption; only 1: left; only 1: assumption).	0.016872	9
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_subst	300	0	synth with cache (only 1: destr_bool).	0.027942	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_reflx	300	0	synth with cache (only 1: destr_bool).	0.014097	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_imp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold decidable; only 1: intros; only 1: elim H; only 1: elim H0; only 1: left; only 1: intros; only 1: assumption; only 1: right; only 1: intros ?; only 1: apply H1; only 1: apply H3; only 1: assumption; only 1: left; only 1: intros; only 1: elim H1; only 1: assumption).	0.040338	16
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: split; only 1: trivial; only 1: trivial).	0.090201	7
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	300	0	synth with cache (only 1: destr_bool).	0.019243	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.twist	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_true_iff	300	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.024461	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_iff	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.048500	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	300	0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: intros *; only 1: intros ?; only 1: destruct H0; only 1: intros ?; only 1: destruct H2; only 1: apply H; only 1: intros; only 1: congruence; only 1: intros ?; only 1: apply FunctExt_iff_EqDeltaProjs; only 1: apply UniqInverse_EqDeltaProjs; only 1: trivial).	0.082639	16
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Str_nth; only 1: rewrite Str_nth_tl_zipWith; only 1: reflexivity).	0.024772	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_false_iff	300	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.030218	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: split; only 1: easy; only 1: easy).	0.115272	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.024554	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_orb	300	0	synth with cache (only 1: destr_bool).	0.028085	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or	300	0	synth with cache (only 1: tauto).	0.018026	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros *; only 1: intros ?; only 1: destruct H0; only 1: split; only 1: unfold action; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H1; only 1: reflexivity; only 1: unfold action; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H0; only 1: reflexivity).	0.092596	17
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	300	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.017844	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_andb	300	0	synth with cache (only 1: destr_bool).	0.018917	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	300	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.017751	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive	300	0	synth with cache (only 1: destr_bool).	0.014945	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive_reverse	300	0	synth with cache (only 1: destr_bool).	0.014654	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.086612	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	300	0	synth with cache (only 1: destr_bool).	0.017545	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	300	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct h using eq_indd; only 1: rewrite H; only 1: apply eq_dep_intro).	0.026637	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	300	0	synth with cache (only 1: destr_bool).	0.024575	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.034624	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb1	300	0	synth with cache (only 1: destr_bool).	0.014723	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb2	300	0	synth with cache (only 1: destr_bool).	0.014758	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	300	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.128009	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_simp	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.018135	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.if_negb	300	0	synth with cache (only 1: destr_bool).	0.015061	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intuition; only 1: intuition).	0.026848	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	300	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.023230	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_iff	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.057405	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_false_iff	300	0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.023295	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_true_iff	300	0	synth with cache (only 1: tauto).	0.008075	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_left	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.011503	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	300	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.025664	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_false_iff	300	0	synth with cache (only 1: tauto).	0.017034	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_right	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.026277	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_iff	300	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.038035	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	300	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.030702	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not_iff	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.019930	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.014367	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	300	0.0.0	synth with cache (only 1: split; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	0.025269	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_iff	300	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.033116	9
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.016790	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.contrapositive	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.021815	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_uncurry_curry	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.015324	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_elim	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_1	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.029422	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop	300	0.0.0	synth with cache (only 1: intros; only 1: apply orb_true_iff; only 1: trivial).	0.020319	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_2	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.021007	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_intro	300	0.0.0	synth with cache (only 1: intros; only 1: apply orb_true_iff; only 1: trivial).	0.016918	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	300	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.015598	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_1	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.027626	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_curry_uncurry	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_elim	300	0.0.0	synth with cache (only 1: intros; only 1: apply orb_false_iff; only 1: trivial).	0.015234	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_diag	300	0	synth with cache (only 1: destr_bool).	0.010886	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_2	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.030757	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	300	0	synth with cache (only 1: destr_bool).	0.012946	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	300	0	synth with cache (only 1: reflexivity).	0.011067	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_r	300	0	synth with cache (only 1: destr_bool).	0.012528	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_l	300	0	synth with cache (only 1: destr_bool).	0.013024	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.forall_hprop	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply H).	0.028680	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_fst	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_negb_r	300	0	synth with cache (only 1: destr_bool).	0.015753	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_not_l	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.102384	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: destruct q; only 1: replace p0 with p; only 1: replace q0 with q; only 1: reflexivity; only 1: apply H0; only 1: apply H).	0.034664	10
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_comm	300	0	synth with cache (only 1: destr_bool).	0.019380	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.impl_hprop	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality; only 1: intros; only 1: apply H).	0.022148	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_snd	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_assoc	300	0	synth with cache (only 1: destr_bool).	0.027363	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.false_hprop	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: contradiction).	0.014176	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or_iff	300	0	synth with cache (only 1: tauto).	0.025588	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: destruct q; only 1: trivial).	0.031193	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and_iff	300	0	synth with cache (only 1: tauto).	0.018527	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_iff	300	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.043177	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality; only 1: intros; only 1: contradiction).	0.016972	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_iff	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.030649	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp2	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_iff	300	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.059465	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hprop	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: symmetry; only 1: apply H).	0.024975	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	300	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.034466	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	300	0.0	synth with cache (only 1: destr_bool; only 1: auto).	0.024142	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	300	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: exists A; only 1: exists x; only 1: auto).	0.049532	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.eq_trans_cancel	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp0	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: rewrite H; only 1: assumption).	0.035337	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro1	300	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.016586	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: trivial with sets; only 1: trivial with sets).	0.024426	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto  10 with sets).	0.044828	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: apply H; only 1: reflexivity).	0.028969	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro2	300	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.026145	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	300	0	synth with cache (only 1: auto  10 with sets).	0.019513	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_r	300	0	synth with cache (only 1: destr_bool).	0.018985	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkrel	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_l	300	0	synth with cache (only 1: reflexivity).	0.020241	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hprop	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	300	0	synth with cache (only 1: destr_bool).	0.032541	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hset	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply hset_hOneType; only 1: exact p).	0.035673	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_r	300	1	synth with cache (only 1: destr_bool).	0.024432	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: apply H; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.039908	6
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_l	300	0.0.1	synth with cache (only 1: simpl; only 1: intros; only 1: auto).	0.023397	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H2; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets).	0.042751	18
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_negb_r	300	0	synth with cache (only 1: destr_bool).	0.015702	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Strict_Rel_of at 1; only 1: red; only 1: elim D; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim PO_cond4; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply H0 with (y := y); only 1: tauto; only 1: tauto; only 1: red; only 1: intros ?; only 1: elim H3; only 1: intros ?; only 1: intros ?; only 1: apply H6; only 1: clear H3; only 1: apply H1; only 1: auto; only 1: rewrite <- H4; only 1: auto).	0.099624	32
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_comm	300	0	synth with cache (only 1: destr_bool).	0.016339	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	300	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.018144	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_assoc	300	0	synth with cache (only 1: destr_bool).	0.018727	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	300	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.018154	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	300	0	synth with cache (only 1: destr_bool).	0.017468	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	300	0	synth with cache (only 1: destr_bool).	0.017417	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_r	300	0	synth with cache (only 1: destr_bool).	0.019966	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_l	300	0	synth with cache (only 1: destr_bool).	0.015507	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_functional_relation	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_andb	300	0	synth with cache (only 1: destr_bool).	0.015208	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_orb	300	0	synth with cache (only 1: destr_bool).	0.015348	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	300	0	synth with cache (only 1: destr_bool).	0.014983	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	300	0	synth with cache (only 1: destr_bool).	0.013857	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	300	0	synth with cache (only 1: reflexivity).	0.013213	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_r	300	0	synth with cache (only 1: reflexivity).	0.030817	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_nilpotent	300	0	synth with cache (only 1: destr_bool).	0.023554	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_comm	300	0	synth with cache (only 1: destr_bool).	0.015993	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	300	0	synth with cache (only 1: destr_bool).	0.020533	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	300	0	synth with cache (only 1: destr_bool).	0.018456	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_1	300	0	synth with cache (only 1: destr_bool).	0.025681	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_2	300	0	synth with cache (only 1: destr_bool).	0.016401	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	300	0	synth with cache (only 1: destr_bool).	0.021121	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	300	0	synth with cache (only 1: destr_bool).	0.023333	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_l	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_r	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_negb_negb	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	300	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: intros ?; only 1: destruct b2; only 1: intuition; only 1: intuition; only 1: intros ?; only 1: destruct b2; only 1: intuition; only 1: intuition).	0.051663	14
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_iff_eq	300	0	synth with cache (only 1: apply eq_iff_eq_true).	0.014961	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	300	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.022033	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_not_negb	300	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.019355	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	300	0	synth with cache (only 1: contradiction).	0.017741	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	300	0	synth with cache (only 1: contradiction).	0.013127	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.trans_eq_bool	300	0	synth with cache (only 1: apply eq_trans).	0.034342	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_left	300	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: constructor).	0.015994	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	300	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.023328	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_refl	300	0	synth with cache (only 1: destr_bool).	0.012300	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_eq	300	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.041191	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_elim	300	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.033766	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_intro	300	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.018948	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_intro	300	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.027937	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_elim	300	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.021108	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_intro	300	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.025607	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	300	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.022956	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_elim	300	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.018613	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_intro	300	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.021517	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_classical	300	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.015176	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	300	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.019767	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_if	300	0	synth with cache (only 1: destr_bool).	0.020784	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_if	300	0	synth with cache (only 1: destr_bool).	0.016132	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_lazy_alt	300	0	synth with cache (only 1: reflexivity).	0.019299	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_lazy_alt	300	0	synth with cache (only 1: reflexivity).	0.013152	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_iff	300	0.0.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.024126	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	300	0.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.017603	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.iff_reflect	300	1.1.0.0	synth with cache (only 1: intros; only 1: destr_bool; only 1: intuition; only 1: intuition).	0.044948	9
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: destruct b'; only 1: constructor; only 1: trivial; only 1: constructor; only 1: intros ?; only 1: discriminate; only 1: destruct b'; only 1: constructor; only 1: intros ?; only 1: discriminate; only 1: constructor; only 1: trivial).	0.027619	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	300	0.0	synth with cache (only 1: red; only 1: destruct 1).	0.013826	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H).	0.016775	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	300	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.016379	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Inhabited_not_empty; only 1: apply Inhabited_add).	0.022825	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.019051	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: trivial with sets).	0.027421	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_right	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intros ?; only 1: absurd A; only 1: trivial; only 1: trivial; only 1: auto).	0.024011	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	300	0.0.0	synth with cache (only 1: apply @functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.023759	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets).	0.026720	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	300	0.0.0	synth with cache (only 1: apply @functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.019847	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: left; only 1: assumption; only 1: right; only 1: apply Singleton_inv; only 1: assumption).	0.060611	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.022855	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets).	0.040346	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	300	0.0.0	synth with cache (only 1: unfold Setminus at 1; only 1: red; only 1: auto with sets).	0.032726	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	300	0	synth with cache (only 1: auto with sets).	0.014700	1
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets).	0.023129	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	300	0.0.0.0.0	synth with cache (only 1: unfold forall_eq_rect; only 1: unfold forall_sig_eq_rect; only 1: simpl; only 1: rewrite @functional_extensionality_dep_good_refl; only 1: reflexivity).	0.063906	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	300	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: apply Acc_inv with y; only 1: assumption; only 1: assumption; only 1: auto with sets).	0.023599	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	300	0.0	synth with cache (only 1: unfold well_founded; only 1: auto with sets).	0.013402	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	300	0.0.0	synth with cache (only 1: apply @functional_extensionality_dep_good; only 1: intros ?; only 1: apply @f_equal__functional_extensionality_dep_good).	0.023855	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	300	0	synth with cache (only 1: reflexivity).	0.015364	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	300	0	synth with cache (only 1: apply @eta_expansion_dep).	0.012262	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	300	0	synth with cache (only 1: reflexivity).	0.016471	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply eq_dep_eq__inj_pairT2; only 1: apply eq_rect_eq__eq_dep_eq; only 1: unfold Eq_rect_eq; only 1: unfold Eq_rect_eq_on; only 1: intros; only 1: apply eq_rect_eq_dec; only 1: apply X).	0.056068	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold abs; only 1: apply max_l; only 1: apply le_trans with 0; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: auto).	0.034415	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_opp; only 1: easy).	0.038752	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Bezout; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: easy).	0.125883	14
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold abs; only 1: apply max_r; only 1: apply le_trans with 0; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.022759	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite even_add; only 1: rewrite even_opp; only 1: easy).	0.033082	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite odd_add; only 1: rewrite odd_opp; only 1: easy).	0.027753	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold strong_rec0; only 1: rewrite @recursion_0; only 1: auto).	0.027803	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite gcd_div_factor; only 1: rewrite <- H0; only 1: rewrite div_same; only 1: easy; only 1: trivial; only 1: trivial; only 1: rewrite H0; only 1: apply gcd_divide_l; only 1: rewrite H0; only 1: apply gcd_divide_r).	0.064447	15
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.117320	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: f_equiv'; only 1: rewrite strong_rec0_0; only 1: reflexivity).	0.041207	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	300	0.0	synth with cache (only 1: unfold lcm; only 1: solve_proper).	0.053777	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	300	0	synth with cache (only 1: wrap pow_0_l).	0.020755	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	300	0	synth with cache (only 1: wrap pow_1_l).	0.013925	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	300	0	synth with cache (only 1: wrap pow_add_r).	0.020581	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	300	0	synth with cache (only 1: wrap pow_mul_l).	0.054216	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite divide_div_mul_exact; only 1: easy; only 1: easy; only 1: apply gcd_divide_r).	0.033088	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	300	0	synth with cache (only 1: wrap pow_mul_r).	0.020079	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	300	0	synth with cache (only 1: wrap pow_nonzero).	0.018999	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply add_sub_eq_l; only 1: symmetry; only 1: apply div_mod; only 1: easy).	0.051202	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mod_unique with b; only 1: auto'; only 1: auto'; only 1: auto').	0.033220	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto'; only 1: auto'; only 1: auto').	0.036501	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	300	0	synth with cache (only 1: wrap pow_lt_mono_l).	0.021241	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	300	0	synth with cache (only 1: wrap pow_le_mono_l).	0.026897	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto'; only 1: auto'; only 1: auto').	0.055519	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	300	0	synth with cache (only 1: wrap pow_gt_1).	0.020215	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique_exact; only 1: auto'; only 1: auto'; only 1: auto').	0.027177	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	300	0	synth with cache (only 1: wrap pow_lt_mono_r).	0.027148	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	300	0.0.0	synth with cache (only 1: intros; only 1: apply div_same; only 1: auto').	0.034517	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	300	0	synth with cache (only 1: wrap pow_le_mono_r).	0.019452	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	300	0.0.0	synth with cache (only 1: intros; only 1: apply mod_same; only 1: auto').	0.031176	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	300	0	synth with cache (only 1: wrap pow_le_mono).	0.033596	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	300	0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: auto').	0.034070	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	300	0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.017366	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply div_0_l; only 1: auto').	0.020097	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_sub; only 1: destruct even; only 1: destruct even; only 1: easy; only 1: easy; only 1: destruct even; only 1: easy; only 1: easy; only 1: assumption).	0.057784	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	300	0	synth with cache (only 1: wrap pow_lt_mono_l_iff).	0.029130	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply mod_0_l; only 1: auto').	0.051207	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	300	0	synth with cache (only 1: wrap pow_le_mono_l_iff).	0.028849	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	300	0.0.0	synth with cache (only 1: intros; only 1: apply div_1_r; only 1: auto').	0.020444	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	300	0.0.0	synth with cache (only 1: intros; only 1: apply mod_1_r; only 1: auto').	0.017339	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	300	0	synth with cache (only 1: wrap pow_lt_mono_r_iff).	0.024831	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	300	0	synth with cache (only 1: exact div_1_l).	0.014990	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	300	0	synth with cache (only 1: wrap pow_le_mono_r_iff).	0.021230	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	300	0	synth with cache (only 1: exact mod_1_l).	0.018231	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	300	0	synth with cache (only 1: wrap pow_gt_lin_r).	0.021023	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul; only 1: auto'; only 1: auto').	0.028187	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	300	0	synth with cache (only 1: wrap pow_add_lower).	0.027945	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.033500	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	300	0	synth with cache (only 1: wrap pow_add_upper).	0.019081	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.024002	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply divide_1_r_nonneg; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: easy).	0.036848	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	300	0	synth with cache (only 1: exact div_str_pos).	0.015279	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_small_iff; only 1: auto'; only 1: auto').	0.033824	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: rewrite mul_comm in H; only 1: apply eq_mul_1 with x; only 1: easy).	0.042878	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small_iff; only 1: auto'; only 1: auto').	0.031699	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply abs_nonneg; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy).	0.063099	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_str_pos_iff; only 1: auto'; only 1: auto').	0.028193	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	300	0	synth with cache (only 1: exact div_lt).	0.028645	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_eq_cases; only 1: apply divide_antisym_nonneg; only 1: apply abs_nonneg; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy).	0.049355	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_mono; only 1: auto'; only 1: auto').	0.027361	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: apply divide_add_r; only 1: trivial; only 1: apply divide_opp_r; only 1: easy).	0.056571	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.034059	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_r; only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.048687	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_pow; only 1: easy; only 1: assumption).	0.045758	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_succ_div_gt; only 1: auto'; only 1: auto').	0.031847	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: intros ?; only 1: rewrite <- add_0_r; only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.048861	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_exact; only 1: auto'; only 1: auto').	0.037818	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.019758	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.031840	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_nonneg_pos; only 1: apply le_0_l; only 1: assumption).	0.025515	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_lt_upper_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.052144	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_upper_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.029663	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_max n; only 1: rewrite max_l; only 1: auto with relations; only 1: apply le_trans with 0; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: auto; only 1: rewrite max_r; only 1: auto with relations; only 1: apply le_trans with 0; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.042536	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_opp_l; only 1: rewrite gcd_comm; only 1: easy).	0.049501	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_neq; only 1: rewrite <- opp_nonneg_nonpos; only 1: easy).	0.020193	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_abs_l; only 1: rewrite gcd_comm; only 1: easy).	0.037748	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_lower_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.156382	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_0_l_nonneg; only 1: apply abs_nonneg).	0.022215	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	300	0	synth with cache (only 1: wrap sqrt_square).	0.020109	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply le_ngt; only 1: apply le_0_l).	0.021488	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_compat_l; only 1: auto'; only 1: auto).	0.027017	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_0_l; only 1: easy).	0.035169	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	300	0	synth with cache (only 1: wrap sqrt_le_square).	0.014663	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r).	0.023648	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_add; only 1: auto'; only 1: auto'; only 1: auto').	0.029585	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	300	0	synth with cache (only 1: wrap sqrt_lt_square).	0.025716	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_l; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_diag_nonneg; only 1: apply abs_nonneg).	0.040043	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intros ?; only 1: apply eq_le_incl; only 1: assumption).	0.023703	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.039412	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	300	0	synth with cache (only 1: wrap sqrt_le_lin).	0.027646	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	300	0	synth with cache (only 1: wrap sqrt_mul_above).	0.022076	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite <- H; only 1: apply abs_nonneg; only 1: apply abs_eq).	0.069307	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	300	0	synth with cache (only 1: wrap sqrt_succ_le).	0.024708	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_add_l; only 1: auto'; only 1: auto'; only 1: auto').	0.053943	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply mul_nonneg_nonpos; only 1: easy; only 1: easy).	0.037594	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	300	0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- H; only 1: apply abs_nonneg; only 1: apply abs_neq).	0.050372	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	300	0	synth with cache (only 1: wrap sqrt_succ_or).	0.033629	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.026522	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	300	0	synth with cache (only 1: wrap add_sqrt_le).	0.025257	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_l; only 1: auto'; only 1: auto'; only 1: auto').	0.027632	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_move_l; only 1: symmetry; only 1: apply div_mod; only 1: assumption).	0.033005	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: rewrite opp_involutive; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.048987	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_distr_r; only 1: auto'; only 1: auto'; only 1: auto').	0.030580	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply square_lt_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: intros ?; only 1: apply square_lt_simpl_nonneg; only 1: apply le_0_l; only 1: assumption).	0.023746	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	300	0.0	synth with cache (only 1: apply abs_eq; only 1: apply le_refl).	0.023651	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_distr_l; only 1: auto'; only 1: auto'; only 1: auto').	0.021225	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply square_le_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: intros ?; only 1: apply square_le_simpl_nonneg; only 1: apply le_0_l; only 1: assumption).	0.025556	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- lt_0_sub; only 1: rewrite <- add_opp_l; only 1: rewrite <- sub_opp_r; only 1: rewrite lt_0_sub; only 1: easy).	0.135007	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.044160	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_mod; only 1: auto'; only 1: auto').	0.037916	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_move_l; only 1: symmetry; only 1: apply quot_rem; only 1: assumption).	0.060575	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: assumption).	0.034481	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.030804	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct_max n; only 1: auto; only 1: rewrite eq_opp_l; only 1: rewrite opp_0; only 1: easy; only 1: intros ?; only 1: rewrite H; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.117840	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- le_0_sub; only 1: rewrite <- add_opp_l; only 1: rewrite <- sub_opp_r; only 1: rewrite le_0_sub; only 1: easy).	0.045625	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_opp_r; only 1: rewrite rem_opp_l; only 1: easy; only 1: assumption; only 1: assumption).	0.030465	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_lt_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: apply le_0_l; only 1: assumption).	0.023181	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_r; only 1: auto'; only 1: auto'; only 1: auto').	0.027961	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: apply le_0_l; only 1: assumption).	0.024882	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Bezout; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: easy).	0.096656	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_pow; only 1: easy; only 1: easy).	0.027260	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod; only 1: auto'; only 1: auto'; only 1: auto').	0.033544	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply lt_0_mul in H; only 1: destruct H; only 1: destruct H; only 1: split; only 1: easy; only 1: easy; only 1: destruct H; only 1: false_hyp H nlt_0_r; only 1: intros ?; only 1: destruct H; only 1: apply mul_pos_pos; only 1: easy; only 1: easy).	0.064144	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.024103	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induct n; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_succ_l; only 1: easy).	0.031104	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_r; only 1: auto'; only 1: auto'; only 1: auto').	0.035375	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: apply divide_add_r; only 1: apply divide_mul_r; only 1: easy; only 1: apply divide_mul_r; only 1: easy).	0.062573	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_1_l with m; only 1: apply le_lt_trans with n; only 1: apply le_0_l; only 1: auto; only 1: auto).	0.024106	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	300	0.0	synth with cache (only 1: apply opp_neg_pos; only 1: apply lt_0_1).	0.015908	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_mod; only 1: auto'; only 1: auto'; only 1: auto').	0.025666	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_lt_mono_l; only 1: rewrite opp_lt_mono; only 1: easy).	0.043210	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_div; only 1: auto'; only 1: auto'; only 1: auto').	0.030441	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply div_unique with 0; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: easy).	0.048649	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	300	0.0.0	synth with cache (only 1: unfold natural_isomorphism; only 1: rewrite @N1.recursion_0; only 1: easy).	0.027192	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite quot_opp_r; only 1: rewrite quot_opp_l; only 1: rewrite opp_involutive; only 1: easy; only 1: assumption; only 1: assumption).	0.042373	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_mul_r; only 1: auto'; only 1: auto'; only 1: auto').	0.047113	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_lt_mono_r; only 1: easy).	0.046002	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	300	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	0.042404	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induct p; only 1: intros ?; only 1: rewrite sub_0_r; only 1: rewrite sub_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite sub_succ_r; only 1: rewrite sub_succ_r; only 1: rewrite <- H; only 1: rewrite add_pred_r; only 1: reflexivity; only 1: apply sub_gt; only 1: apply le_succ_l; only 1: easy; only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: easy).	0.101111	22
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold natural_isomorphism; only 1: intros ?; only 1: rewrite @N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).	0.063445	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul_le; only 1: auto'; only 1: auto'; only 1: auto').	0.028148	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: trivial; only 1: nzsimpl; only 1: order).	0.047788	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_divides; only 1: auto'; only 1: auto').	0.021695	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: auto with relations).	0.077058	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_1_l; only 1: rewrite <- add_1_l; only 1: symmetry; only 1: apply add_sub_assoc; only 1: assumption).	0.035290	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold homomorphism; only 1: unfold natural_isomorphism; only 1: split; only 1: exact natural_isomorphism_0; only 1: intros ?; only 1: rewrite @N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).	0.084631	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply succ_pred; only 1: intros ?; only 1: rewrite H0 in H; only 1: false_hyp H lt_irrefl).	0.058763	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 1; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: order).	0.081088	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_le_mono_l; only 1: rewrite opp_le_mono; only 1: easy).	0.107103	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy; only 1: apply le_refl).	0.055486	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_move_l; only 1: symmetry; only 1: apply div_mod; only 1: assumption).	0.062911	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_eq; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.051097	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with a; only 1: intuition; only 1: intuition; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.060086	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_sub_assoc; only 1: rewrite add_comm; only 1: apply add_sub; only 1: assumption).	0.042013	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_le_mono_r; only 1: easy).	0.040533	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: assumption).	0.025560	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply succ_wd in H; only 1: rewrite succ_pred in H; only 1: rewrite succ_pred in H; only 1: easy).	0.048283	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	300	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.053950	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: intuition; only 1: intuition; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.050093	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_lt_trans with n; only 1: apply le_pred_l; only 1: assumption).	0.040891	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_unique with r; only 1: easy; only 1: easy; only 1: easy).	0.038903	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply succ_wd in H; only 1: rewrite succ_pred in H; only 1: rewrite succ_pred in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	0.064331	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition).	0.051965	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NZQuot.mod_unique with q; only 1: easy; only 1: easy; only 1: easy).	0.029458	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm in H; only 1: apply add_sub_eq_l; only 1: easy).	0.037109	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: intuition).	0.019984	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply max_r; only 1: apply le_0_l).	0.034771	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	300	0.0.0.0.0	synth with cache (only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: rewrite succ_pred; only 1: easy).	0.033391	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite pow_even_abs; only 1: apply pow_nonneg; only 1: apply abs_nonneg; only 1: trivial).	0.048540	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	300	0.0.0	synth with cache (only 1: intros; only 1: apply max_l; only 1: apply le_0_l).	0.017097	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: trivial; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.027307	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases n; only 1: rewrite pred_0; only 1: intros ?; only 1: apply lt_le_incl; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite pred_succ in H; only 1: apply le_succ_l; only 1: easy).	0.052383	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply min_l; only 1: apply le_0_l).	0.026954	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	300	1.0.0	synth with cache (only 1: intros ?; only 1: apply neq_sym; only 1: apply neq_succ_0).	0.042604	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	300	0.0.0	synth with cache (only 1: intros; only 1: apply min_r; only 1: apply le_0_l).	0.051542	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: trivial; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.061399	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_case_strong; only 1: easy; only 1: easy; only 1: easy).	0.324866	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	300	0.0	synth with cache (only 1: intros ?; only 1: apply lt_gt_cases).	0.029912	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.037757	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.040607	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	300	0.0	synth with cache (only 1: intros ?; only 1: apply le_gt_cases).	0.016327	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.018280	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply induction; only 1: auto; only 1: auto; only 1: auto).	0.040629	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H using le_ind_rel; only 1: solve_proper; only 1: intros ?; only 1: rewrite pred_0; only 1: apply le_0_l; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H1; only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: easy).	0.095969	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	300	0.0	synth with cache (only 1: intros ?; only 1: apply lt_ge_cases).	0.029200	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: easy; only 1: easy).	0.072124	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	300	0	synth with cache (only 1: exact NZQuot.div_small).	0.022400	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: apply mul_nonneg_nonneg; only 1: auto; only 1: order; only 1: auto; only 1: apply mul_comm).	0.040495	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	300	0.0	synth with cache (only 1: intros ?; only 1: apply le_ge_cases).	0.029357	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite <- add_sub_assoc; only 1: rewrite add_comm; only 1: easy; only 1: assumption).	0.043104	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	300	0	synth with cache (only 1: exact NZQuot.mod_small).	0.018663	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_add_lt_sub_r).	0.025085	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: auto; only 1: order; only 1: split; only 1: order; only 1: auto; only 1: nzsimpl; only 1: apply mul_comm).	0.054734	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply NZQuot.div_0_l; only 1: order; only 1: rewrite <- quot_opp_opp; only 1: rewrite opp_0; only 1: apply NZQuot.div_0_l; only 1: easy; only 1: trivial).	0.072618	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_le_incl; only 1: apply lt_pred_l).	0.036059	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_add_le_sub_r).	0.042963	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: apply le_ind; only 1: solve_proper; only 1: nzsimpl; only 1: easy; only 1: intros; only 1: nzsimpl; only 1: easy; only 1: easy).	0.075578	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_0_l; only 1: nzsimpl; only 1: easy; only 1: trivial; only 1: trivial).	0.085788	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply lt_nge in H; only 1: apply H; only 1: apply square_nonneg).	0.035904	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite pred_lt_mono; only 1: rewrite pred_succ; only 1: easy; only 1: apply neq_succ_0).	0.033367	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- lt_le_pred; only 1: apply lt_irrefl).	0.020694	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_le_pred; only 1: apply le_succ_l; only 1: easy).	0.021362	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_lt_mono_nonpos; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.056646	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite two_succ; only 1: nzsimpl; only 1: order'; only 1: order').	0.091054	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_sub_lt_add_r).	0.062979	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_succ_r; only 1: apply lt_pred_le; only 1: easy).	0.037651	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply NZQuot.div_1_r; only 1: trivial; only 1: apply opp_inj; only 1: rewrite <- quot_opp_l; only 1: apply NZQuot.div_1_r; only 1: order; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.064363	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_nonpos; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.043939	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_pred_le; only 1: apply lt_le_incl; only 1: easy).	0.026729	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.029059	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases n; only 1: rewrite pred_0; only 1: split; only 1: intros ?; only 1: apply le_0_l; only 1: intros ?; only 1: apply le_0_l; only 1: intros ?; only 1: rewrite pred_succ; only 1: apply succ_le_mono).	0.052081	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_sub_le_add_r).	0.037828	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: trivial).	0.036408	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.039300	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_1_r; only 1: nzsimpl; only 1: auto using sub_diag; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.071034	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite lt_sub_lt_add_l; only 1: rewrite add_sub_assoc; only 1: rewrite <- lt_add_lt_sub_r; only 1: easy).	0.051617	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_le_pred; only 1: easy).	0.026714	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: rewrite pow_0_r; only 1: order'; only 1: clear b H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite pow_succ_r; only 1: intros ?; only 1: apply eq_mul_0 in H1; only 1: destruct H1; only 1: trivial; only 1: apply H0; only 1: easy; only 1: trivial).	0.101723	19
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.prop_congr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_true	300	0	synth with cache (only 1: by [  ]).	0.017298	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	300	0	synth with cache (only 1: exact NZQuot.div_1_l).	0.017378	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: symmetry; only 1: apply lt_pred_le).	0.032671	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	300	0.0	synth with cache (only 1: unfold Even; only 1: solve_proper).	0.032615	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite le_sub_le_add_l; only 1: rewrite add_sub_assoc; only 1: rewrite <- le_add_le_sub_r; only 1: easy).	0.054681	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases n; only 1: intros ?; only 1: elim H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: easy).	0.112056	12
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.not_false_is_true	300	0.0	synth with cache (only 1: intros ?; only 1: discriminate).	0.024631	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	300	0	synth with cache (only 1: exact NZQuot.mod_1_l).	0.022332	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	300	0.0	synth with cache (only 1: unfold Odd; only 1: solve_proper).	0.021425	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite lt_le_pred; only 1: easy).	0.036669	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.036136	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold divide; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: easy).	0.057562	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: contradict H; only 1: apply pow_eq_0 with b; only 1: easy; only 1: easy).	0.028850	8
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_locked_true	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite pred_lt_mono; only 1: rewrite pred_succ; only 1: easy).	0.028134	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.028379	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbT	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite even_spec; only 1: f_equiv; only 1: easy).	0.057734	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: exists n; only 1: nzsimpl; only 1: easy).	0.034046	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite pred_le_mono; only 1: rewrite pred_succ; only 1: easy).	0.029078	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbTE	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_sub_le_add_r).	0.032158	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbF	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: pos_or_neg b; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: rewrite <- quot_opp_opp; only 1: rewrite <- mul_opp_r; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: order; only 1: pos_or_neg b; only 1: rewrite <- opp_inj_wd; only 1: rewrite <- quot_opp_l; only 1: rewrite <- mul_opp_l; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: order; only 1: rewrite <- opp_inj_wd; only 1: rewrite <- quot_opp_r; only 1: rewrite <- mul_opp_opp; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: order).	0.139461	27
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- succ_lt_mono; only 1: easy).	0.181697	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_pred_le; only 1: symmetry; only 1: apply lt_succ_r).	0.028035	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: exists 0; only 1: nzsimpl; only 1: easy).	0.033291	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbK	300	0	synth with cache (only 1: by case).	0.018627	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_iff_eq_true; only 1: rewrite odd_spec; only 1: rewrite odd_spec; only 1: f_equiv; only 1: easy).	0.054589	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_lt_cases; only 1: apply lt_sub_lt_add; only 1: easy).	0.031565	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbNE	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_sub_lt_add_r).	0.038564	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: revert H; only 1: nzsimpl; only 1: easy).	0.054724	6
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_inj	300	0	synth with cache (only 1: exact : can_inj negbK ).	0.021769	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_le_cases; only 1: apply le_sub_le_add; only 1: easy).	0.027775	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_neq; only 1: apply lt_pred_l).	0.025883	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbLR	300	1	synth with cache (only 1: exact : canLR negbK ).	0.020352	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_mul; only 1: rewrite mul_comm; only 1: apply sub_diag; only 1: assumption; only 1: assumption).	0.044057	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbRL	300	0	synth with cache (only 1: exact : canRL negbK ).	0.021109	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_neg_pos; only 1: apply add_neg_cases; only 1: rewrite add_opp_r; only 1: easy).	0.039296	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_opp_r; only 1: rewrite div_opp_l_z; only 1: rewrite opp_involutive; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.091640	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: symmetry; only 1: apply quot_mul; only 1: easy).	0.036957	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contra	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_add_le_sub_r).	0.046864	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_pos_neg; only 1: apply add_pos_cases; only 1: rewrite add_opp_r; only 1: easy).	0.058030	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraL	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_opp_r; only 1: rewrite div_opp_l_nz; only 1: rewrite opp_sub_distr; only 1: rewrite opp_involutive; only 1: easy; only 1: order; only 1: trivial; only 1: order).	0.061884	9
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraR	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonpos_nonneg; only 1: apply add_nonpos_cases; only 1: rewrite add_opp_r; only 1: easy).	0.050472	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm in H0; only 1: apply and_comm; only 1: apply eq_mul_1_nonneg; only 1: easy; only 1: easy).	0.046685	9
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraLR	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply opp_nonneg_nonpos; only 1: apply opp_nonneg_nonpos in H0; only 1: rewrite <- rem_opp_l; only 1: apply rem_nonneg; only 1: trivial; only 1: easy; only 1: trivial).	0.056760	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	300	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite mod_opp_r; only 1: rewrite mod_opp_l_z; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.044958	9
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.wlog_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonneg_nonpos; only 1: apply add_nonneg_cases; only 1: rewrite add_opp_r; only 1: easy).	0.049687	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold isomorphism; only 1: split; only 1: apply Hom12.hom_nat_iso; only 1: split; only 1: apply Hom21.hom_nat_iso; only 1: split; only 1: apply Inverse12.inverse_nat_iso; only 1: apply Inverse21.inverse_nat_iso).	0.032899	8
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- abs_mul; only 1: apply abs_eq; only 1: apply square_nonneg).	0.042607	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_opp_r; only 1: rewrite mod_opp_l_nz; only 1: easy; only 1: order; only 1: trivial; only 1: order).	0.040167	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_add_lt_sub_r).	0.125675	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: trivial; only 1: nzsimpl; only 1: easy).	0.060076	10
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFN	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: trivial; only 1: nzsimpl; only 1: easy).	0.051867	9
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraTF	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraNF	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: symmetry; only 1: auto; only 1: symmetry; only 1: auto).	0.032049	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: assumption; only 1: apply sub_add_le).	0.033354	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: exists 1; only 1: nzsimpl; only 1: easy).	0.035392	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	300	0	synth with cache (only 1: apply compare_eq_iff).	0.021107	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFF	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_same; only 1: nzsimpl; only 1: apply sub_diag; only 1: trivial; only 1: trivial).	0.097513	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: easy).	0.026420	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_sym	300	0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: assumption).	0.019128	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_sgn n; only 1: left; only 1: auto with relations; only 1: right; only 1: left; only 1: auto with relations; only 1: right; only 1: right; only 1: auto with relations).	0.170204	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases m; only 1: rewrite pred_0; only 1: rewrite mul_0_r; only 1: rewrite sub_0_l; only 1: easy; only 1: intros ?; only 1: rewrite pred_succ; only 1: rewrite mul_succ_r; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy; only 1: apply eq_le_incl; only 1: easy).	0.109391	16
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	300	0	synth with cache (only 1: exact div_small).	0.023708	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	300	0	synth with cache (only 1: by move ->).	0.027798	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	300	0	synth with cache (only 1: exact mod_small).	0.030414	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite succ_inj_wd; only 1: easy).	0.017053	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifF	300	0	synth with cache (only 1: by move ->).	0.022115	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply div_0_l; only 1: order; only 1: apply opp_inj; only 1: rewrite <- div_opp_r; only 1: rewrite opp_0; only 1: apply div_0_l; only 1: easy; only 1: trivial).	0.043546	10
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifN	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	300	0.0	synth with cache (only 1: apply sgn_null; only 1: easy).	0.022174	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_shuffle3; only 1: rewrite H; only 1: easy).	0.062666	9
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_same	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_neg	300	0	synth with cache (only 1: by case b).	0.023942	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	300	0	synth with cache (only 1: by case b).	0.018802	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_0_l; only 1: nzsimpl; only 1: easy; only 1: trivial; only 1: trivial).	0.087608	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_cancel_r; only 1: easy).	0.079298	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	300	0	synth with cache (only 1: by case b).	0.017502	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_assoc; only 1: rewrite H; only 1: easy).	0.077649	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifE	300	0	synth with cache (only 1: by [  ]).	0.014891	1
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: rewrite mul_shuffle3 in H0; only 1: rewrite mul_cancel_l in H0; only 1: easy; only 1: easy; only 1: apply mul_divide_mono_l).	0.043653	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_abs_r; only 1: rewrite rem_abs_l; only 1: easy; only 1: assumption; only 1: assumption).	0.049983	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	300	0.0	synth with cache (only 1: rewrite compare_lt_iff; only 1: intuition).	0.032807	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introTF	300	0	synth with cache (only 1: by case c; case Hb).	0.022295	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: pose proof lt_0_1; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: easy).	0.062815	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	300	0.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: intuition).	0.030414	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	300	0	synth with cache (only 1: by move <-; case Hb).	0.020264	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_1_r; only 1: nzsimpl; only 1: auto using sub_diag; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.051566	10
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intros; only 1: nzsimpl; only 1: easy; only 1: easy; only 1: clear b H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: rewrite pow_add_r; only 1: rewrite H0; only 1: rewrite pow_mul_l; only 1: apply mul_comm; only 1: trivial; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.236343	26
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold eqb; only 1: destruct F.eq_dec; only 1: auto with *; only 1: split; only 1: discriminate; only 1: intros ?; only 1: elim n; only 1: auto).	0.176318	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: auto; only 1: setoid_replace n with 0; only 1: rewrite opp_0; only 1: apply sgn_0; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: apply sgn_pos; only 1: rewrite opp_pos_neg; only 1: auto).	0.059966	13
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	300	0	synth with cache (only 1: exact div_1_l).	0.013117	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	300	0	synth with cache (only 1: by rewrite -if_neg; apply : xorPif ).	0.018117	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	300	0	synth with cache (only 1: exact mod_1_l).	0.014500	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply sqrt_lt_cancel; only 1: rewrite sqrt_0; only 1: easy; only 1: intros ?; only 1: rewrite <- le_succ_l; only 1: rewrite <- one_succ; only 1: rewrite <- sqrt_1; only 1: apply sqrt_le_mono; only 1: rewrite one_succ; only 1: rewrite le_succ_l; only 1: trivial).	0.044335	14
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: apply abs_pos; only 1: assumption; only 1: nzsimpl; only 1: apply mul_comm).	0.047680	9
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introF	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introN	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introNf	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite eqb_eq; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.042178	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_mul; only 1: rewrite mul_comm; only 1: apply sub_diag; only 1: assumption; only 1: assumption).	0.039360	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- sqrt_lt_square; only 1: rewrite <- mul_1_r  at 1; only 1: rewrite <- mul_lt_mono_pos_l; only 1: auto; only 1: order'; only 1: order'; only 1: order').	0.035988	9
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introTn	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	300	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply eqb_eq).	0.020106	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introFn	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	300	0	synth with cache (only 1: reflexivity).	0.017538	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	300	0.0	synth with cache (only 1: compute; only 1: iorder).	0.028084	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimT	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: symmetry; only 1: apply div_mul; only 1: easy).	0.044635	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite P.le_lteq; only 1: right; only 1: reflexivity).	0.018038	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	300	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_eq; only 1: easy).	0.042353	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimN	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	300	0	synth with cache (only 1: auto with *).	0.014401	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg b; only 1: apply mod_le; only 1: order; only 1: order; only 1: rewrite <- mod_opp_r; only 1: apply mod_le; only 1: order; only 1: order; only 1: trivial).	0.063268	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	300	0	synth with cache (only 1: iorder).	0.037068	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	300	0.0	synth with cache (only 1: apply eqb_eq; only 1: easy).	0.041378	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- sgn_opp; only 1: apply sgn_nonneg).	0.041263	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- lt_succ_r; only 1: rewrite <- lt_succ_r; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.065403	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	300	0	synth with cache (only 1: iorder).	0.024337	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	300	0	synth with cache (only 1: exact div_pos).	0.012954	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimNf	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H0); only 1: solve_proper; only 1: nzsimpl; only 1: order'; only 1: clear b H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: apply mul_pos_pos; only 1: easy; only 1: easy; only 1: trivial).	0.142953	17
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	300	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite eqb_eq; only 1: easy).	0.058145	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	300	0	synth with cache (only 1: exact div_str_pos).	0.025143	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimTn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: left; only 1: assumption).	0.049257	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimFn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.034003	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.uint_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: nzsimpl; only 1: destruct_sgn m; only 1: apply sgn_pos; only 1: apply mul_pos_pos; only 1: easy; only 1: easy; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: apply sgn_neg; only 1: apply mul_pos_neg; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: destruct_sgn m; only 1: nzsimpl; only 1: apply sgn_neg; only 1: apply mul_neg_pos; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: rewrite mul_opp_opp; only 1: nzsimpl; only 1: apply sgn_pos; only 1: apply mul_neg_neg; only 1: easy; only 1: easy).	0.180507	35
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	300	0.0.0.0	synth with cache (only 1: unfold le; only 1: split; only 1: auto; only 1: auto).	0.059431	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite lt_succ_r; only 1: apply le_refl).	0.019111	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.016764	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	300	0	synth with cache (only 1: iorder).	0.030197	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_revapp	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt_lt_square; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl; only 1: apply lt_succ_r; only 1: apply sqrt_nonneg; only 1: apply lt_le_incl; only 1: apply lt_succ_r; only 1: apply sqrt_nonneg; only 1: rewrite mul_shuffle1; only 1: apply mul_lt_mono_nonneg; only 1: trivial; only 1: apply sqrt_spec; only 1: trivial; only 1: trivial; only 1: apply sqrt_spec; only 1: trivial).	0.113626	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_rev	300	0	synth with cache (only 1: apply rev_revapp).	0.016201	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sumboolP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.055624	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	300	0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: apply compare_ngt_iff).	0.041124	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: easy).	0.036069	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sameP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	300	1.0.0	synth with cache (only 1: intros ?; only 1: apply neq_sym; only 1: apply neq_succ_diag_l).	0.032065	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decPcases	300	0	synth with cache (only 1: by case Pb).	0.017081	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	300	0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: apply compare_nlt_iff).	0.037088	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	300	0.0.0.0	synth with cache (only 1: rewrite even_spec; only 1: exists 0; only 1: nzsimpl; only 1: easy).	0.053685	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mod_divide; only 1: rewrite rem_divide; only 1: easy; only 1: assumption; only 1: assumption).	0.041245	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_same; only 1: nzsimpl; only 1: apply sub_diag; only 1: trivial; only 1: trivial).	0.072248	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_small_iff; only 1: rewrite mod_eq; only 1: rewrite sub_move_r  at 1; only 1: rewrite <- add_0_r  at 1; only 1: rewrite add_cancel_l; only 1: rewrite eq_sym_iff; only 1: rewrite eq_mul_0; only 1: tauto; only 1: assumption; only 1: assumption).	0.087323	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	300	0.0.0	synth with cache (only 1: rewrite <- negb_even; only 1: rewrite even_0; only 1: easy).	0.028522	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.131021	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	300	0	synth with cache (only 1: exact div_lt).	0.014785	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: transitivity y; only 1: easy; only 1: easy).	0.071840	11
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_cancel_l with b; only 1: trivial; only 1: pose proof H0; only 1: apply rem_divide in H0; only 1: apply quot_exact in H0; only 1: apply mod_divide in H1; only 1: apply div_exact in H1; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.090505	18
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- rem_abs; only 1: apply rem_bound_pos; only 1: apply abs_nonneg; only 1: apply abs_pos; only 1: assumption; only 1: assumption).	0.030868	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	300	0	synth with cache (only 1: exact div_small).	0.016392	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: destruct_sgn n; only 1: nzsimpl; only 1: apply abs_eq; only 1: apply lt_le_incl; only 1: auto; only 1: nzsimpl; only 1: rewrite abs_0_iff; only 1: auto with relations; only 1: rewrite mul_opp_r; only 1: nzsimpl; only 1: apply abs_neq; only 1: apply lt_le_incl; only 1: auto).	0.168676	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	300	0.0.0.0	synth with cache (only 1: rewrite odd_spec; only 1: exists 0; only 1: nzsimpl'; only 1: easy).	0.062026	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	300	0	synth with cache (only 1: exact NZQuot.mod_le).	0.026427	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	300	0	synth with cache (only 1: exact mod_small).	0.032920	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	300	0	synth with cache (only 1: exact NZQuot.div_pos).	0.024324	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.altP	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	300	0.0.0	synth with cache (only 1: rewrite <- negb_odd; only 1: rewrite odd_1; only 1: easy).	0.020699	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesP	300	0	synth with cache (only 1: by case).	0.024362	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	300	0	synth with cache (only 1: exact NZQuot.div_str_pos).	0.024612	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	300	0.0.0	synth with cache (only 1: unfold eqb; only 1: intros; only 1: apply if_eq_dec).	0.022250	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.trans	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply div_0_l; only 1: order; only 1: rewrite <- div_opp_opp; only 1: rewrite opp_0; only 1: apply div_0_l; only 1: easy; only 1: trivial).	0.070481	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	300	0.0.0.0	synth with cache (only 1: rewrite even_spec; only 1: exists 1; only 1: nzsimpl'; only 1: easy).	0.064558	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesPn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n m; only 1: left; only 1: apply le_refl; only 1: intros ?; only 1: rewrite lt_succ_r; only 1: rewrite le_succ_l; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: intuition).	0.089094	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.053725	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	300	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.026734	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_alt; only 1: rewrite eqb_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.057934	11
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessL	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: apply divide_div_mul_exact; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: apply divide_mul_r; only 1: trivial).	0.106408	15
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessR	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: nzsimpl; only 1: apply abs_eq; only 1: apply lt_le_incl; only 1: auto; only 1: nzsimpl; only 1: auto; only 1: rewrite mul_opp_r; only 1: nzsimpl; only 1: rewrite eq_opp_l; only 1: apply abs_neq; only 1: apply lt_le_incl; only 1: auto).	0.109502	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_0_l; only 1: nzsimpl; only 1: easy; only 1: trivial; only 1: trivial).	0.077345	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	300	0.0.0	synth with cache (only 1: rewrite <- negb_even; only 1: rewrite even_2; only 1: easy).	0.021826	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_sym	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite leb_le; only 1: rewrite leb_le; only 1: rewrite leb_le; only 1: rewrite le_lteq; only 1: rewrite le_lteq; only 1: rewrite le_lteq; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- H0; only 1: auto; only 1: intros ?; only 1: destruct H0; only 1: left; only 1: rewrite H; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.146204	29
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	300	0	synth with cache (only 1: order).	0.025492	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	300	0	synth with cache (only 1: order).	0.038843	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.bind_unless	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite <- succ_inj_wd; only 1: rewrite add_1_r in H; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite H; only 1: nzsimpl; only 1: easy).	0.110954	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: apply lt_le_incl; only 1: apply log2_lt_lin; only 1: trivial; only 1: rewrite <- H; only 1: rewrite log2_nonpos; only 1: order; only 1: order).	0.064490	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.075372	9
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_contra	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	300	0	synth with cache (only 1: order).	0.027489	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.211987	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: pos_or_neg b; only 1: rewrite NZQuot.div_small_iff; only 1: rewrite abs_eq; only 1: rewrite abs_eq; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: rewrite <- opp_inj_wd; only 1: rewrite opp_0; only 1: rewrite <- quot_opp_r; only 1: rewrite NZQuot.div_small_iff; only 1: rewrite abs_eq; only 1: rewrite abs_neq'; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: pos_or_neg b; only 1: rewrite <- opp_inj_wd; only 1: rewrite opp_0; only 1: rewrite <- quot_opp_l; only 1: rewrite NZQuot.div_small_iff; only 1: rewrite abs_neq'; only 1: rewrite abs_eq; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: rewrite <- quot_opp_opp; only 1: rewrite NZQuot.div_small_iff; only 1: rewrite abs_neq'; only 1: rewrite abs_neq'; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order).	0.303514	46
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	300	0	synth with cache (only 1: order).	0.027645	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ).	0.025760	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	300	0	synth with cache (only 1: order).	0.021869	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicW	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_odd; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.023107	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: unfold eqb; only 1: unfold le; only 1: case leb; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.043434	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: apply gcd_div_factor; only 1: easy; only 1: trivial; only 1: trivial; only 1: order; only 1: apply gcd_greatest; only 1: trivial; only 1: trivial; only 1: order; only 1: trivial; only 1: order; only 1: trivial).	0.093390	21
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	300	0	synth with cache (only 1: firstorder).	0.018440	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_bind	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	300	0	synth with cache (only 1: order).	0.030293	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_symmetric	300	0	synth with cache (only 1: firstorder).	0.019773	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- even_spec; only 1: rewrite even_succ; only 1: rewrite odd_spec; only 1: easy).	0.040458	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_1_r; only 1: nzsimpl; only 1: auto using sub_diag; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.129031	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: easy).	0.183681	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	300	0	synth with cache (only 1: order).	0.037784	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_EM	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_transitive	300	0	synth with cache (only 1: firstorder).	0.039068	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_le_pow2; only 1: order_pos; only 1: rewrite pow_add_r; only 1: apply mul_le_mono_nonneg; only 1: order_pos; only 1: apply log2_spec; only 1: order_pos; only 1: order_pos; only 1: apply log2_spec; only 1: order_pos; only 1: order_pos; only 1: order_pos).	0.178507	16
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	300	0	synth with cache (only 1: order).	0.015836	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite Even_succ; only 1: apply Odd_succ).	0.031744	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	300	0	synth with cache (only 1: order).	0.032295	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	300	0.0.0	synth with cache (only 1: intros; only 1: apply max_unicity; only 1: auto).	0.040499	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_equivalence	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_reflexive	300	0	synth with cache (only 1: firstorder).	0.024517	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Odd_succ; only 1: rewrite Even_succ; only 1: easy).	0.029300	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.159694	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	300	0	synth with cache (only 1: exact div_1_l).	0.014559	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	300	0	synth with cache (only 1: order).	0.025809	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_pos_l; only 1: easy; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H0; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite <- H; only 1: rewrite mul_0_l; only 1: rewrite mul_0_l; only 1: easy).	0.095430	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite <- quot_small_iff; only 1: rewrite sub_move_r  at 1; only 1: rewrite <- add_0_r  at 1; only 1: rewrite add_cancel_l; only 1: rewrite eq_sym_iff; only 1: rewrite eq_mul_0; only 1: tauto; only 1: assumption; only 1: assumption).	0.104386	11
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	300	0	synth with cache (only 1: firstorder).	0.020796	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	300	0	synth with cache (only 1: exact mod_1_l).	0.019479	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	300	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.040170	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_imply	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite even_succ; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ).	0.047712	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: apply gcd_div_gcd; only 1: trivial; only 1: easy; only 1: trivial; only 1: rewrite H0; only 1: apply gcd_divide_r; only 1: trivial; only 1: rewrite H0; only 1: apply gcd_divide_l).	0.068331	16
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	300	0	synth with cache (only 1: order).	0.037466	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_transitive	300	0	synth with cache (only 1: firstorder).	0.023374	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	300	0.0	synth with cache (only 1: apply max_l; only 1: order).	0.014951	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	300	0	synth with cache (only 1: order).	0.026704	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	300	0	synth with cache (only 1: exact NZQuot.div_lt).	0.027232	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.041783	6
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and3	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	300	0	synth with cache (only 1: order).	0.011939	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.062997	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	300	0	synth with cache (only 1: order).	0.030138	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_equivalence	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mod_eq; only 1: rewrite <- add_opp_r; only 1: rewrite mul_comm; only 1: rewrite <- mul_opp_l; only 1: rewrite gcd_comm; only 1: apply gcd_add_mult_diag_r; only 1: assumption).	0.097178	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	300	0	synth with cache (only 1: order).	0.022752	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_mul; only 1: rewrite mul_comm; only 1: apply sub_diag; only 1: assumption; only 1: assumption).	0.059643	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	300	0.0.0	synth with cache (only 1: split; only 1: exact lt_irrefl; only 1: exact lt_trans).	0.040610	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply NZQuot.div_le_mono; only 1: auto; only 1: auto; only 1: pos_or_neg b; only 1: apply le_trans with 0; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- quot_opp_l; only 1: apply quot_pos; only 1: order; only 1: order; only 1: order; only 1: apply quot_pos; only 1: order; only 1: order; only 1: rewrite opp_le_mono in *; only 1: rewrite <- quot_opp_l; only 1: rewrite <- quot_opp_l; only 1: apply NZQuot.div_le_mono; only 1: intuition; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.131864	25
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	300	0	synth with cache (only 1: order).	0.012314	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_neg_l; only 1: easy; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H0; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H; only 1: rewrite mul_0_l; only 1: rewrite mul_0_l; only 1: easy).	0.187667	19
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	300	0	synth with cache (only 1: order).	0.018651	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	300	0.0.0	synth with cache (only 1: split; only 1: exact le_refl; only 1: exact le_trans).	0.016951	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and5	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: tauto).	0.028858	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	300	0	synth with cache (only 1: order).	0.019631	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_succ_r; only 1: rewrite add_1_r; only 1: rewrite <- add_succ_r; only 1: rewrite <- add_succ_l; only 1: apply log2_lt_pow2; only 1: order_pos; only 1: rewrite pow_add_r; only 1: apply mul_lt_mono_nonneg; only 1: order; only 1: apply log2_spec; only 1: order_pos; only 1: order; only 1: apply log2_spec; only 1: order_pos; only 1: order_pos; only 1: order_pos; only 1: rewrite <- H0; only 1: nzsimpl; only 1: rewrite log2_nonpos; only 1: order_pos; only 1: order_pos; only 1: rewrite <- H; only 1: nzsimpl; only 1: rewrite log2_nonpos; only 1: order_pos; only 1: order_pos).	0.412245	32
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: symmetry; only 1: apply div_mul; only 1: easy).	0.048241	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	300	0	synth with cache (only 1: solve_max).	0.021980	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	300	0	synth with cache (only 1: exact div_le_compat_l).	0.021607	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	300	0.0.0.0	synth with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	0.054694	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	300	0	synth with cache (only 1: by case b1; constructor).	0.018125	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	300	0	synth with cache (only 1: exact mod_le).	0.025016	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	300	0	synth with cache (only 1: solve_max).	0.025072	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite rem_eq; only 1: rewrite <- add_opp_r; only 1: rewrite mul_comm; only 1: rewrite <- mul_opp_l; only 1: rewrite gcd_comm; only 1: apply gcd_add_mult_diag_r; only 1: assumption).	0.092806	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	300	0	synth with cache (only 1: exact div_pos).	0.018285	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	300	0	synth with cache (only 1: by case b1; constructor; auto).	0.020372	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst y1; only 1: induction x1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply H0; only 1: auto; only 1: auto).	0.074905	17
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	300	0.0	synth with cache (only 1: unfold lt; only 1: auto with *).	0.017194	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	300	0	synth with cache (only 1: exact div_str_pos).	0.018614	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	300	0	synth with cache (only 1: by case b1; constructor).	0.022058	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg b; only 1: split; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: apply quot_pos; only 1: order; only 1: order; only 1: apply NZQuot.mul_div_le; only 1: order; only 1: order; only 1: rewrite <- mul_opp_opp; only 1: rewrite <- quot_opp_r; only 1: split; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: apply quot_pos; only 1: order; only 1: order; only 1: apply NZQuot.mul_div_le; only 1: order; only 1: order; only 1: order).	0.150610	23
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	300	0.0	synth with cache (only 1: unfold lt; only 1: auto with *).	0.018186	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_0	300	0	synth with cache (only 1: reflexivity).	0.018138	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	300	0	synth with cache (only 1: solve_max).	0.049809	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	300	0	synth with cache (only 1: by case b1; constructor).	0.028073	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	300	0.0	synth with cache (only 1: unfold lcm; only 1: solve_proper).	0.040253	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	300	0	synth with cache (only 1: firstorder).	0.021466	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold le; only 1: unfold lt; only 1: unfold flip; only 1: rewrite O.le_lteq; only 1: intuition).	0.048057	6
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	300	0	synth with cache (only 1: firstorder).	0.020789	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite divide_div_mul_exact; only 1: easy; only 1: easy; only 1: apply gcd_divide_r).	0.022667	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	300	0	synth with cache (only 1: firstorder).	0.014913	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	300	0	synth with cache (only 1: auto).	0.015484	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	300	0	synth with cache (only 1: firstorder).	0.022740	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	300	0	synth with cache (only 1: reflexivity).	0.014008	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	300	0	synth with cache (only 1: firstorder).	0.015113	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.one_succ	300	0	synth with cache (only 1: auto).	0.025640	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	300	0	synth with cache (only 1: firstorder).	0.022099	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply max_le; only 1: solve_max).	0.046362	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.two_succ	300	0	synth with cache (only 1: auto).	0.016312	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	300	0	synth with cache (only 1: order).	0.019476	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_0_l	300	0	synth with cache (only 1: reflexivity).	0.011852	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	300	0	synth with cache (only 1: firstorder).	0.015532	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	300	0	synth with cache (only 1: order).	0.019977	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	300	0	synth with cache (only 1: reflexivity).	0.017919	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	300	0	synth with cache (only 1: apply compare_eq_iff).	0.016670	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	300	0	synth with cache (only 1: simpl_crelation).	0.037158	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.026950	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	300	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).	0.027152	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	300	0	synth with cache (only 1: order).	0.026381	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	300	0	synth with cache (only 1: order).	0.021798	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	300	0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.024324	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	300	0	synth with cache (only 1: firstorder).	0.020792	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	300	0	synth with cache (only 1: simpl_crelation).	0.015539	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	300	0	synth with cache (only 1: reflexivity).	0.013975	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	300	0	synth with cache (only 1: order).	0.028601	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	300	0	synth with cache (only 1: solve_max).	0.034304	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	300	0.0.0.0	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.024960	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	300	0	synth with cache (only 1: exact NZQuot.mul_succ_div_gt).	0.014879	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_unique; only 1: order_pos; only 1: split; only 1: rewrite pow_add_r; only 1: rewrite mul_comm; only 1: apply mul_le_mono_nonneg_r; only 1: order_pos; only 1: apply log2_spec; only 1: easy; only 1: order_pos; only 1: order_pos; only 1: rewrite <- add_succ_r; only 1: rewrite pow_add_r; only 1: rewrite mul_comm; only 1: apply mul_lt_mono_pos_l; only 1: order_pos; only 1: apply log2_spec; only 1: easy; only 1: order_pos; only 1: order_pos).	0.144843	24
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	300	0	synth with cache (only 1: order).	0.022848	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	300	0.0	synth with cache (only 1: apply sub; only 1: apply mor).	0.016517	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	300	0	synth with cache (only 1: solve_max).	0.027323	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	300	0.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: intuition).	0.024165	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	300	0	synth with cache (only 1: order).	0.018022	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply le_S_n; only 1: induction 1; only 1: auto; only 1: auto).	0.027183	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite opp_lt_mono; only 1: rewrite <- mul_opp_r; only 1: rewrite opp_pred; only 1: rewrite <- quot_opp_l; only 1: rewrite <- opp_nonneg_nonpos in *; only 1: apply mul_succ_quot_gt; only 1: easy; only 1: easy; only 1: order).	0.059954	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.039574	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	300	0.0	synth with cache (only 1: rewrite compare_lt_iff; only 1: intuition).	0.022597	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	300	0	synth with cache (only 1: order).	0.025879	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	300	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.180187	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.028905	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: easy).	0.037807	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.048759	13
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	300	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.021261	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_succ_l; only 1: order).	0.039454	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	300	0.0	synth with cache (only 1: unfold subrelation; only 1: firstorder).	0.023076	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	300	0	synth with cache (only 1: solve_max).	0.164200	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	300	0	synth with cache (only 1: firstorder).	0.017973	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_small_iff; only 1: rewrite mod_eq; only 1: rewrite sub_move_r  at 1; only 1: rewrite <- add_0_r  at 1; only 1: rewrite add_cancel_l; only 1: rewrite eq_sym_iff; only 1: rewrite eq_mul_0; only 1: tauto; only 1: assumption; only 1: assumption).	0.077899	11
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	300	0.0	synth with cache (only 1: apply sub; only 1: apply mor).	0.018438	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_add; only 1: destruct even; only 1: destruct even; only 1: easy; only 1: easy; only 1: destruct even; only 1: easy; only 1: easy).	0.039571	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_succ_r in H; only 1: order).	0.021988	5
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	300	0	synth with cache (only 1: firstorder).	0.018348	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	300	0.0.0.0	synth with cache (only 1: rewrite <- compare_nle_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.040562	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.leb_le	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	300	0	synth with cache (only 1: firstorder).	0.021143	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	300	0	synth with cache (only 1: apply leb_le).	0.011046	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: order).	0.031577	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_assoc; only 1: rewrite <- add_assoc; only 1: rewrite add_cancel_l; only 1: apply add_comm).	0.042541	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	300	0.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.039330	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	300	0	synth with cache (only 1: decide equality).	0.018710	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- mul_opp_opp; only 1: rewrite opp_pred; only 1: rewrite <- quot_opp_r; only 1: rewrite <- opp_pos_neg in *; only 1: apply mul_succ_quot_gt; only 1: easy; only 1: easy; only 1: order).	0.147848	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	300	0	synth with cache (only 1: firstorder).	0.021194	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	300	0	synth with cache (only 1: exact div_lt).	0.016271	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	300	0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_refl; only 1: easy).	0.044224	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	0.037179	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	300	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.026174	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	300	0.0.0.0	synth with cache (only 1: reduce; only 1: unfold pointwise_relation in *; only 1: apply sub; only 1: apply H).	0.027359	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_assoc; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: apply add_shuffle0).	0.032942	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	300	0.0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: apply divide_abs_r; only 1: apply divide_factor_l).	0.033409	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	300	0	synth with cache (only 1: solve_proper).	0.081376	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	300	0.0.0	synth with cache (only 1: reduce; only 1: apply H; only 1: apply H0).	0.026998	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	300	0	synth with cache (only 1: solve_max).	0.056369	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite <- succ_lt_mono; only 1: rewrite succ_inj_wd; only 1: easy).	0.036164	7
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andTb	300	0	synth with cache (only 1: by [  ]).	0.015288	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_impl_subrelation	300	0	synth with cache (only 1: firstorder).	0.018305	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	300	0	synth with cache (only 1: by [  ]).	0.021137	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	300	0.0.0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: apply divide_abs_r; only 1: rewrite <- gcd_div_swap; only 1: apply divide_factor_r).	0.112441	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite opp_lt_mono; only 1: rewrite <- mul_opp_l; only 1: rewrite <- quot_opp_opp; only 1: rewrite <- opp_nonneg_nonpos in *; only 1: rewrite <- opp_pos_neg in *; only 1: apply mul_succ_quot_gt; only 1: easy; only 1: easy; only 1: order).	0.073928	10
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	300	0	synth with cache (only 1: firstorder).	0.018596	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	300	0	synth with cache (only 1: solve_max).	0.028296	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbT	300	0	synth with cache (only 1: by case).	0.013720	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite <- compare_eq_iff; only 1: destruct compare; only 1: intuition; only 1: easy; only 1: easy; only 1: intuition; only 1: easy; only 1: easy; only 1: intuition; only 1: easy; only 1: easy).	0.142928	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	300	0.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	0.055020	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbF	300	0	synth with cache (only 1: by case).	0.013530	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	300	0.0.0	synth with cache (only 1: apply mor; only 1: auto; only 1: auto).	0.022873	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbb	300	0	synth with cache (only 1: by case).	0.016839	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	300	0	synth with cache (only 1: solve_max).	0.046932	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	300	0.0.0	synth with cache (only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	0.029197	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: exists x; only 1: rewrite <- divide_div_mul_exact; only 1: rewrite H1; only 1: easy; only 1: easy; only 1: easy).	0.054892	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.056532	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbC	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	300	0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_0; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_0).	0.036618	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbA	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	300	0.0	synth with cache (only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.033213	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbCA	300	0	synth with cache (only 1: by do 3!case).	0.020001	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite sub_move_r; only 1: nzsimpl; only 1: tauto; only 1: assumption).	0.079522	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_lt_cancel; only 1: rewrite log2_double; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: trivial).	0.047159	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	300	0	synth with cache (only 1: by do 3!case).	0.015058	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_succ	300	0	synth with cache (only 1: reflexivity).	0.021466	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_succ; only 1: apply le_0_l; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_succ; only 1: apply le_0_l).	0.054252	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	300	0.0.0.0	synth with cache (only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_1_2).	0.039139	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_l	300	0	synth with cache (only 1: exact max_l).	0.010460	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.096870	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	300	0.0	synth with cache (only 1: apply lt_le_incl; only 1: apply lt_0_2).	0.021045	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_r	300	0	synth with cache (only 1: exact max_r).	0.022292	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	300	0	synth with cache (only 1: exact NZQuot.div_lt_upper_bound).	0.016647	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbACA	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_opp_opp; only 1: rewrite opp_le_mono; only 1: rewrite <- mul_opp_l; only 1: apply mul_div_le; only 1: rewrite opp_pos_neg; only 1: trivial; only 1: order).	0.098051	8
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	300	0	synth with cache (only 1: by [  ]).	0.013396	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	300	0	synth with cache (only 1: exact min_l).	0.021099	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_mul; only 1: destruct even; only 1: destruct even; only 1: easy; only 1: easy; only 1: destruct even; only 1: easy; only 1: easy).	0.043380	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- le_succ_l in H; only 1: rewrite <- one_succ in H; only 1: order).	0.044319	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	300	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.042093	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_r	300	0	synth with cache (only 1: exact min_r).	0.014198	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orFb	300	0	synth with cache (only 1: by [  ]).	0.013492	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	300	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply leb_le).	0.017946	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbT	300	0	synth with cache (only 1: by case).	0.017003	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	300	0.0.0.0.0.0.0	synth with cache (only 1: case leb_spec0; only 1: constructor; only 1: trivial; only 1: constructor; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	0.024688	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbF	300	0	synth with cache (only 1: by case).	0.018487	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	300	0.0.0	synth with cache (only 1: apply mor; only 1: auto; only 1: auto).	0.024113	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	300	0	synth with cache (only 1: by case).	0.015086	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	300	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply ltb_lt).	0.016161	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	300	0	synth with cache (only 1: by do 2!case).	0.030198	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold lcm; only 1: apply abs_nonneg).	0.019979	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	300	0.0.0.0.0.0.0	synth with cache (only 1: case ltb_spec0; only 1: constructor; only 1: trivial; only 1: constructor; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: easy).	0.026246	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	300	0	synth with cache (only 1: exact NZQuot.div_le_compat_l).	0.019251	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply even_spec in H; only 1: apply even_add_even; only 1: apply even_spec; only 1: rewrite even_mul; only 1: rewrite H; only 1: easy).	0.046746	10
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite sqrt_up_eqn; only 1: rewrite pred_succ; only 1: rewrite sqrt_square; only 1: easy; only 1: trivial; only 1: apply lt_succ_r; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.048463	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	300	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite leb_le; only 1: easy).	0.018927	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbA	300	0	synth with cache (only 1: by do 3!case).	0.031783	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply even_spec in H; only 1: apply odd_add_even; only 1: apply even_spec; only 1: rewrite even_mul; only 1: rewrite H; only 1: easy).	0.033905	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	300	0.0.0.0	synth with cache (only 1: rewrite leb_nle; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	0.023940	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbCA	300	0	synth with cache (only 1: by do 3!case).	0.023004	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply even_add_mul_even; only 1: apply even_spec; only 1: apply even_2).	0.018257	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_opp_opp; only 1: rewrite opp_lt_mono; only 1: rewrite <- mul_opp_l; only 1: apply mul_succ_div_gt; only 1: rewrite opp_pos_neg; only 1: trivial; only 1: order).	0.080611	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	300	0	synth with cache (only 1: by do 3!case).	0.023528	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	300	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite ltb_lt; only 1: intuition).	0.025241	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply odd_add_mul_even; only 1: apply even_spec; only 1: apply even_2).	0.024357	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	300	0	synth with cache (only 1: firstorder).	0.018145	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	300	0.0.0.0	synth with cache (only 1: rewrite ltb_nlt; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: intuition).	0.022843	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	300	0.0.0.0.0.0	synth with cache (only 1: rewrite sqrt_up_eqn; only 1: rewrite two_succ; only 1: rewrite pred_succ; only 1: rewrite sqrt_1; only 1: easy; only 1: order').	0.049885	6
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbACA	300	0	synth with cache (only 1: by do 4!case).	0.044517	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: apply lcm_least; only 1: easy; only 1: easy; only 1: apply H2; only 1: apply divide_lcm_l; only 1: apply divide_lcm_r).	0.053941	16
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	300	0.0.0.0	synth with cache (only 1: apply leb_le; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.018597	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	300	0	synth with cache (only 1: intuition order).	0.121491	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	300	0.0	synth with cache (only 1: unfold compose; only 1: firstorder).	0.024599	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	300	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite leb_le; only 1: rewrite ltb_ge; only 1: easy).	0.027498	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbN	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	300	0	synth with cache (only 1: intuition order).	0.026385	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andNb	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	300	0.0.0.0	synth with cache (only 1: apply ltb_ge; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.023279	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	300	0	synth with cache (only 1: simpl_crelation).	0.028127	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order').	0.123731	14
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbN	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique; only 1: trivial; only 1: apply H0; only 1: apply divide_refl; only 1: apply H0; only 1: apply divide_refl; only 1: intros; only 1: apply H0; only 1: split; only 1: easy; only 1: easy).	0.151008	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orNb	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy).	0.050593	14
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orl	300	0	synth with cache (only 1: by do 3!case).	0.035749	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	300	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite ltb_lt; only 1: rewrite leb_gt; only 1: easy).	0.109097	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	300	0	synth with cache (only 1: intuition order).	0.024043	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	300	0	synth with cache (only 1: simpl_crelation).	0.033240	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orr	300	0	synth with cache (only 1: by do 3!case).	0.021350	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite and_assoc; only 1: easy).	0.063320	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	300	0	synth with cache (only 1: exact div_le_compat_l).	0.015490	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	300	0	synth with cache (only 1: intuition order).	0.028779	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: easy).	0.033032	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply sqrt_spec; only 1: trivial; only 1: le_elim H; only 1: apply sqrt_up_spec; only 1: trivial; only 1: rewrite <- H; only 1: rewrite sqrt_up_0; only 1: rewrite mul_0_l; only 1: order).	0.070615	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	300	0.0.0	synth with cache (only 1: intros; only 1: apply min_unicity; only 1: auto).	0.025240	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	300	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite <- compare_eq_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.049980	7
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andl	300	0	synth with cache (only 1: by do 3!case).	0.025140	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.025275	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andr	300	0	synth with cache (only 1: by do 3!case).	0.029457	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	300	0	synth with cache (only 1: firstorder).	0.012692	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	300	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite ltb_lt; only 1: rewrite <- compare_lt_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.041107	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_0_l; only 1: easy).	0.023171	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a0; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: order'; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: order'; only 1: simpl; only 1: trivial).	0.085189	14
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	300	0	synth with cache (only 1: firstorder).	0.020978	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	300	0.0	synth with cache (only 1: apply min_l; only 1: order).	0.021137	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	300	0	synth with cache (only 1: firstorder).	0.019396	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	300	0	synth with cache (only 1: simpl_crelation).	0.031685	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_1_l_nonneg; only 1: easy; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.034800	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_succ_r; only 1: intuition order).	0.065363	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: rewrite div_add; only 1: rewrite div_small; only 1: rewrite add_0_l; only 1: easy; only 1: destruct a0; only 1: order'; only 1: order'; only 1: order').	0.075926	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	300	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.076009	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	300	0	synth with cache (only 1: firstorder).	0.013890	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	300	0.0.0.0	synth with cache (only 1: unfold compose; only 1: apply H; only 1: apply H0; only 1: apply H1).	0.028749	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_refl).	0.028258	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	300	0	synth with cache (only 1: simpl_relation).	0.031905	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply eq_mul_0; only 1: apply divide_0_l; only 1: rewrite <- H; only 1: apply lcm_least; only 1: apply divide_factor_l; only 1: apply divide_factor_r; only 1: destruct 1; only 1: rewrite H; only 1: apply lcm_0_l; only 1: rewrite H; only 1: apply lcm_0_r).	0.122136	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	300	0	synth with cache (only 1: inversion 1).	0.041172	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: unfold respectful in *; only 1: unfold relation_equivalence in *; only 1: unfold predicate_equivalence in *; only 1: simpl in *; only 1: split; only 1: intros; only 1: rewrite <- H0; only 1: apply H1; only 1: rewrite H; only 1: assumption; only 1: intros; only 1: rewrite H0; only 1: apply H1; only 1: rewrite <- H; only 1: assumption).	0.075258	16
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	300	0	synth with cache (only 1: auto  6 with sets).	0.047869	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	300	0	synth with cache (only 1: reflexivity).	0.024308	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	300	0	synth with cache (only 1: solve_min).	0.022396	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	300	0	synth with cache (only 1: reflexivity).	0.015687	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.037104	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	300	0	synth with cache (only 1: simpl_relation).	0.034810	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	300	0	synth with cache (only 1: auto  6 with sets).	0.037540	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	300	0	synth with cache (only 1: solve_min).	0.034479	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	300	0	synth with cache (only 1: reflexivity).	0.017155	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	300	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto using Empty_set_zero with sets).	0.031735	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	300	0	synth with cache (only 1: firstorder).	0.023919	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: rewrite <- H0; only 1: apply divide_lcm_l).	0.062455	19
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	300	0	synth with cache (only 1: solve_min).	0.030818	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	300	0	synth with cache (only 1: auto with sets).	0.026878	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2r	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	300	0	synth with cache (only 1: auto with sets).	0.026397	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold flip; only 1: unfold respectful; only 1: split; only 1: intros; only 1: intuition; only 1: intros; only 1: intuition).	0.048687	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply lt_exists_pred in H1; only 1: destruct H1; only 1: destruct H1; only 1: rewrite H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: trivial; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: rewrite <- H1; only 1: apply H).	0.077368	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: unfold lcm; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.069079	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_or	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct x; only 1: easy; only 1: easy).	0.042271	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip1	300	0	synth with cache (only 1: firstorder).	0.017403	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply min_le; only 1: solve_min).	0.037348	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbK	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip2	300	0	synth with cache (only 1: firstorder).	0.021490	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.flip_arrow	300	0.0.0.0	synth with cache (only 1: unfold Normalizes in *; only 1: rewrite NA; only 1: rewrite NB; only 1: firstorder).	0.175088	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_opp_l; only 1: rewrite lcm_comm; only 1: easy).	0.045768	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply sqrt_up_lt_cancel; only 1: rewrite sqrt_up_0; only 1: easy; only 1: intros ?; only 1: rewrite <- le_succ_l; only 1: rewrite <- one_succ; only 1: rewrite <- sqrt_up_1; only 1: apply sqrt_up_le_mono; only 1: rewrite one_succ; only 1: rewrite le_succ_l; only 1: trivial).	0.078782	14
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	300	0	synth with cache (only 1: simpl_relation).	0.026815	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	300	0	synth with cache (only 1: firstorder).	0.012650	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ngt in H; only 1: false_hyp H0 H).	0.026579	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	300	0	synth with cache (only 1: auto  7 with sets).	0.037756	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_abs_l; only 1: rewrite lcm_comm; only 1: easy).	0.025619	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	300	0	synth with cache (only 1: solve_min).	0.023426	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybF	300	0.0.0	synth with cache (only 1: destruct b; only 1: easy; only 1: easy).	0.020290	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_1_l_nonneg; only 1: apply abs_nonneg).	0.035842	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	300	0	synth with cache (only 1: by [  ]).	0.012222	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	300	0	synth with cache (only 1: solve_min).	0.029484	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	300	0	synth with cache (only 1: by [  ]).	0.019781	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets).	0.058447	22
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H; only 1: apply X).	0.046732	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_rev	300	0	synth with cache (only 1: apply nzhead_revapp).	0.014120	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_1_l_nonneg; only 1: apply abs_nonneg).	0.028244	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybb	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	300	0	synth with cache (only 1: solve_min).	0.025431	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_l; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_diag_nonneg; only 1: apply abs_nonneg).	0.031593	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: auto; only 1: auto).	0.079635	19
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	300	0	synth with cache (only 1: solve_min).	0.049139	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyNb	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.125058	31
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	300	0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply strong_right_induction; only 1: apply rs_rs'; only 1: easy; only 1: easy).	0.229389	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	300	0	synth with cache (only 1: solve_min).	0.023510	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.flip_atom	300	0	synth with cache (only 1: firstorder).	0.015165	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	300	0	synth with cache (only 1: apply revapp_nil_inv).	0.020335	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt_up_le_square; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: apply mul_nonneg_nonneg; only 1: apply sqrt_up_nonneg; only 1: apply sqrt_up_nonneg; only 1: rewrite mul_shuffle1; only 1: apply mul_le_mono_nonneg; only 1: trivial; only 1: apply sqrt_sqrt_up_spec; only 1: trivial; only 1: trivial; only 1: apply sqrt_sqrt_up_spec; only 1: trivial).	0.135949	19
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	300	0	synth with cache (only 1: solve_min).	0.041242	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Triple_as_union; only 1: rewrite <- Couple_as_union; only 1: auto with sets).	0.032347	6
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: split; only 1: eauto; only 1: eauto).	0.046242	14
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply le_0_l; only 1: destruct y; only 1: elim H0; only 1: easy; only 1: easy; only 1: clear H0; only 1: unfold Init.Nat.modulo; only 1: apply lt_succ_r; only 1: apply le_sub_l).	0.068898	12
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: exists y; only 1: auto with sets).	0.030553	8
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybNN	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.051308	14
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.033372	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idl	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.091441	21
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idr	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrsetoid.compat_Reflexive	300	0	synth with cache (only 1: trivial).	0.012474	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	300	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.035749	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize H0; only 1: elim H1; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets).	0.078404	28
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_id2l	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addFb	300	0	synth with cache (only 1: by [  ]).	0.015432	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	300	0	synth with cache (only 1: by case).	0.019633	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.117187	12
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbb	300	0	synth with cache (only 1: by case).	0.026707	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.unitE	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbC	300	0	synth with cache (only 1: by do 2!case).	0.018072	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.176709	21
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.subset_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	300	0	synth with cache (only 1: inversion 1).	0.025150	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbA	300	0	synth with cache (only 1: by do 3!case).	0.028081	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: apply le_succ_l; only 1: trivial; only 1: apply eq_le_incl; only 1: easy; only 1: rewrite H1; only 1: apply H).	0.042786	15
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize H1; only 1: elim H2; only 1: auto with sets; only 1: auto with sets).	0.122386	29
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	300	0	synth with cache (only 1: by [  ]).	0.012463	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbCA	300	0	synth with cache (only 1: by do 3!case).	0.027091	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.041434	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_0	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	300	0	synth with cache (only 1: exact Fix_eq).	0.020000	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbAC	300	0	synth with cache (only 1: by do 3!case).	0.030004	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	300	0.0	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.027697	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.flip_arrow	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	300	0.0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply max_mono; only 1: eauto with *; only 1: red; only 1: red; only 1: intros; only 1: apply min_le_compat_l; only 1: auto).	0.040628	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold unorm; only 1: destruct nzhead; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.095290	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_succ_l in H0; only 1: apply le_ngt in H; only 1: false_hyp H0 H).	0.029858	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: red; only 1: auto with sets).	0.055105	18
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	300	0	synth with cache (only 1: by do 4!case).	0.051273	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	300	0.0.0	synth with cache (only 1: inversion 1; only 1: subst; only 1: easy).	0.028191	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H; only 1: apply H1).	0.063015	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag2	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	300	0	synth with cache (only 1: by do 3!case).	0.038909	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	300	0.0	synth with cache (only 1: case r; only 1: auto).	0.021064	2
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_equivalence	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.svalP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_invol	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.047917	12
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	300	0	synth with cache (only 1: by do 3!case).	0.027082	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Empty_set_zero'; only 1: auto with sets).	0.018180	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: auto; only 1: auto).	0.089225	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply strong_left_induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: apply le_succ_l; only 1: trivial; only 1: apply eq_le_incl; only 1: easy; only 1: rewrite H1; only 1: apply H).	0.056408	16
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	300	0	synth with cache (only 1: by do 2!case).	0.024280	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	300	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.022188	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_invol	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	300	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.017002	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbK	300	0	synth with cache (only 1: by do 2!case).	0.023345	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	300	0	synth with cache (only 1: by do 3!case).	0.028619	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X; only 1: intros ?; only 1: destruct X; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- e; only 1: auto; only 1: intros ?; only 1: destruct X; only 1: left; only 1: rewrite e; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.134942	27
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.092324	21
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	300	0.0	synth with cache (only 1: rewrite min_max_distr; only 1: auto using max_le_compat_l, le_min_r).	0.027142	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Newman	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	300	0	synth with cache (only 1: apply le_0_l).	0.014427	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbI	300	0	synth with cache (only 1: by do 3!case).	0.029238	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_pcan	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.021699	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_double	300	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- plus_n_Sm; only 1: simpl in IHn; only 1: rewrite IHn; only 1: reflexivity).	0.031890	7
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addTb	300	0	synth with cache (only 1: by [  ]).	0.022393	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply order_induction; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 in H3; only 1: rewrite pred_succ in H3; only 1: easy; only 1: apply le_succ_l; only 1: easy).	0.042926	15
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_proper	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	300	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: easy).	0.039986	6
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: clear H; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: apply Acc_intro; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H2; only 1: apply H0; only 1: auto; only 1: apply Acc_intro; only 1: trivial; only 1: auto with sets).	0.085123	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canRL	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbN	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Some_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.125578	7
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.le_div2	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.of_voidK	300	0	synth with cache (only 1: by case).	0.016302	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addNb	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_div2	300	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros ?; only 1: clear H; only 1: apply lt_succ_r; only 1: apply le_div2).	0.031660	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply right_induction with n; only 1: easy; only 1: easy; only 1: easy).	0.027795	9
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.esymK	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_decr	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: intros ?; only 1: simpl; only 1: apply le_0_l; only 1: intros ?; only 1: apply succ_le_mono in H; only 1: apply le_trans with a; only 1: apply le_div2; only 1: assumption).	0.027971	9
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.etrans_id	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H2; only 1: intros ?; only 1: destruct H3; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- H3; only 1: auto; only 1: intros ?; only 1: destruct H3; only 1: left; only 1: rewrite H2; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.085836	27
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	300	0	synth with cache (only 1: by [  ]).	0.016196	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.double_twice	300	0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite add_0_r; only 1: easy).	0.021156	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: auto; only 1: auto; only 1: auto).	0.021776	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	300	0.0.0.0	synth with cache (only 1: unfold Init.Nat.testbit; only 1: rewrite odd_spec; only 1: exists a; only 1: easy).	0.023825	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbP	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUl	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	300	0.0.0	synth with cache (only 1: intros; only 1: apply log2_up_eqn0; only 1: order').	0.020868	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	300	0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.testbit; only 1: fold Init.Nat.testbit; only 1: rewrite add_1_r; only 1: f_equal; only 1: apply div2_succ_double).	0.023600	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	300	0.0.0.0	synth with cache (only 1: unfold Init.Nat.testbit; only 1: fold Init.Nat.testbit; only 1: f_equal; only 1: apply div2_double).	0.026314	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	300	0	synth with cache (only 1: by [  ]).	0.016747	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: auto; only 1: auto; only 1: auto).	0.014945	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply min_case; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: left; only 1: rewrite <- e; only 1: auto with relations; only 1: right; only 1: rewrite <- e; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations).	0.058858	14
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros; only 1: apply le_le_succ_r; only 1: order_pos; only 1: order).	0.018708	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_inj	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	300	0	synth with cache (only 1: by [  ]).	0.018540	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	300	0	synth with cache (only 1: by [  ]).	0.023715	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	300	0	synth with cache (only 1: by [  ]).	0.021576	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply max_mono; only 1: congruence; only 1: auto).	0.018679	4
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	0.032057	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite log2_up_eqn; only 1: rewrite pred_succ; only 1: rewrite log2_pow2; only 1: easy; only 1: trivial; only 1: rewrite one_succ; only 1: rewrite <- succ_lt_mono; only 1: apply pow_pos_nonneg; only 1: order'; only 1: trivial).	0.064138	12
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply min_max_antimono; only 1: congruence; only 1: auto).	0.020972	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.qualifE	300	0	synth with cache (only 1: by [  ]).	0.018678	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply max_min_antimono; only 1: congruence; only 1: auto).	0.019663	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.land_spec	300	0.0.0.0	synth with cache (only 1: unfold Init.Nat.land; only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.021992	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	300	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: easy).	0.016500	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	300	0.0.0.0	synth with cache (only 1: unfold Init.Nat.ldiff; only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.025521	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.026680	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: auto; only 1: auto).	0.015147	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	300	0	synth with cache (only 1: exact max_dec).	0.017772	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond_dep	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.021643	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_spec	300	0	synth with cache (only 1: reflexivity).	0.023701	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: auto; only 1: auto).	0.021531	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	300	0	synth with cache (only 1: inversion H).	0.024803	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	300	0	synth with cache (only 1: exact min_dec).	0.011113	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond_dep	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply log2_spec; only 1: trivial; only 1: rewrite <- le_succ_l in H; only 1: rewrite <- one_succ in H; only 1: le_elim H; only 1: apply log2_up_spec; only 1: auto; only 1: rewrite <- H; only 1: rewrite log2_up_1; only 1: rewrite pow_0_r; only 1: easy).	0.075918	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	300	0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_0; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_0).	0.037581	6
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	300	0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_succ; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_succ).	0.053948	6
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite log2_up_eqn; only 1: apply lt_succ_r; only 1: order_pos; only 1: auto).	0.038300	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.rev_trans	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	300	0	synth with cache (only 1: by [  ]).	0.017791	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	300	0	synth with cache (only 1: by move  =>? ?).	0.021678	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	300	0	synth with cache (only 1: by move  =>? ?).	0.021069	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	300	0	synth with cache (only 1: by move  =>? ?; auto).	0.019772	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_refl	300	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: exact I; only 1: simpl; only 1: auto).	0.031286	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	300	0	synth with cache (only 1: by move  =>? ?; auto).	0.032383	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: order').	0.068418	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_is_eq	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_eq_nat	300	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: apply eq_nat_refl).	0.019559	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_eq	300	0	synth with cache (only 1: apply eq_nat_is_eq).	0.016184	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy; only 1: order').	0.051610	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: apply lt_le_incl; only 1: apply log2_up_lt_lin; only 1: trivial; only 1: rewrite <- H; only 1: rewrite log2_up_nonpos; only 1: order; only 1: order).	0.036984	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_elim	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	300	0	synth with cache (only 1: by move  =>? ?).	0.019993	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_decide	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: easy; only 1: order').	0.040378	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	300	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.eqb_refl).	0.015677	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	300	0	synth with cache (only 1: by move  =>? ?).	0.022729	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	300	0	synth with cache (only 1: apply Nat.eqb_eq).	0.016951	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	300	0	synth with cache (only 1: by move  =>? ?).	0.024133	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a0; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: order'; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: order'; only 1: simpl; only 1: trivial).	0.044141	14
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_false	300	0	synth with cache (only 1: apply Nat.eqb_neq).	0.015900	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	300	0	synth with cache (only 1: by move  =>? ?; auto).	0.027172	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	300	0	synth with cache (only 1: by move  =>? ?; auto).	0.020425	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	300	0	synth with cache (only 1: by move  =>? ?; auto).	0.027189	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: rewrite div_add; only 1: rewrite div_small; only 1: rewrite add_0_l; only 1: easy; only 1: destruct a0; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: order').	0.130431	19
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_n_0_eq	300	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.le_0_r; only 1: easy).	0.021738	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply b2z_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: rewrite mul_comm; only 1: rewrite mod_add; only 1: rewrite mod_small; only 1: easy; only 1: destruct a0; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: order'; only 1: order).	0.136824	22
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_elim_rel	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: intros ?; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite add_succ_r; only 1: easy).	0.034873	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m r; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite tail_add_spec; only 1: rewrite add_assoc; only 1: f_equal; only 1: apply add_comm).	0.040961	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_le_S	300	0	synth with cache (only 1: apply Nat.le_succ_l).	0.016757	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	300	0.0.0	synth with cache (only 1: unfold Init.Nat.tail_mul; only 1: rewrite tail_addmul_spec; only 1: easy).	0.019150	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_Sm_le	300	0	synth with cache (only 1: apply Nat.lt_succ_r).	0.014207	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_n_Sm	300	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.023527	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_not_lt	300	0	synth with cache (only 1: apply Nat.le_ngt).	0.016422	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in2	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in3	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_not_le	300	0	synth with cache (only 1: apply Nat.lt_nge).	0.019912	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.neq_0_lt	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.neq_0_lt_0; only 1: apply Nat.neq_sym; only 1: easy).	0.019318	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	300	0.1.0.0	synth with cache (only 1: intros; only 1: apply Nat.neq_sym; only 1: apply Nat.neq_0_lt_0; only 1: assumption).	0.030561	8
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in21	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	300	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.025698	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_S_n	300	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.015126	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred	300	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.lt_succ_pred with m; only 1: assumption).	0.029432	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred_pos	300	0	synth with cache (only 1: apply S_pred).	0.013822	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	300	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.015747	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	300	0.1.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_pred_l; only 1: apply Nat.neq_0_lt_0; only 1: assumption).	0.046163	8
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	300	0	synth with cache (only 1: apply Nat.lt_eq_cases).	0.030858	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.nat_total_order	300	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.021821	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_up_lt_cancel; only 1: rewrite log2_up_double; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: trivial).	0.039937	10
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite bits_opp; only 1: rewrite one_succ; only 1: rewrite pred_succ; only 1: rewrite bits_0; only 1: easy; only 1: trivial).	0.051806	7
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_eqb; only 1: nzsimpl; only 1: easy; only 1: order').	0.109233	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.ind_0_1_SS	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.lt_div2	300	0	synth with cache (only 1: apply Nat.lt_div2).	0.031192	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_div2	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite even_equiv; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: rewrite Nat.div2_succ_double; only 1: induction x; only 1: trivial; only 1: simpl; only 1: rewrite <- plus_n_Sm; only 1: simpl in IHx; only 1: rewrite IHx; only 1: reflexivity).	0.046348	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: easy; only 1: order').	0.076959	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_div2	300	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite odd_equiv; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: rewrite Nat.add_1_r; only 1: rewrite Nat.div2_succ_double; only 1: simpl; only 1: f_equal; only 1: symmetry; only 1: apply Nat.div2_double).	0.041297	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- bit0_odd; only 1: rewrite shiftr_spec; only 1: rewrite add_0_l; only 1: easy; only 1: easy).	0.030397	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_even	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.O_or_S	300	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: right; only 1: eauto; only 1: left; only 1: exists n; only 1: auto).	0.041094	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_odd	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_div2	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_S	300	0	synth with cache (only 1: apply Nat.add_succ_r).	0.016597	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_left	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).	0.029354	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	300	0	synth with cache (only 1: apply Nat.add_shuffle1).	0.019537	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).	0.021170	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_or_odd	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_sym	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_odd_dec	300	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.029976	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.le_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_double	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_assoc_reverse	300	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.add_assoc).	0.020597	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	300	0	synth with cache (only 1: apply UIP).	0.011360	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_2n	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	300	0	synth with cache (only 1: apply UIP_refl).	0.014692	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_reg_l	300	1	synth with cache (only 1: apply Nat.add_cancel_l).	0.028367	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- opp_involutive  at 1; only 1: rewrite bits_opp; only 1: apply negb_false_iff; only 1: apply bit_log2; only 1: apply opp_lt_mono in H; only 1: rewrite opp_involutive in H; only 1: apply lt_succ_lt_pred; only 1: rewrite <- one_succ; only 1: easy; only 1: apply log2_nonneg).	0.069731	12
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	300	0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: auto).	0.136215	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_S2n	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	300	0	synth with cache (only 1: apply UIP_refl).	0.014556	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_reg_l	300	0	synth with cache (only 1: apply Nat.add_le_mono_l).	0.016898	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double	300	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- plus_n_Sm; only 1: simpl in IHn; only 1: rewrite IHn; only 1: reflexivity).	0.030499	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.not_even_and_odd	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: intros ?; only 1: intros ?; only 1: inversion H0; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: inversion H0; only 1: auto with arith).	0.134033	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	300	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.018604	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.TestOrder.test	300	1	synth with cache (only 1: Nat.order).	0.030210	6
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	300	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: apply X).	0.017067	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double_plus_one	300	0	synth with cache (only 1: apply Nat.div2_succ_double).	0.020269	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H).	0.020480	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_right	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite orb_false_r; only 1: auto).	0.034735	7
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	300	0	synth with cache (only 1: apply Nat.add_le_mono_l).	0.026211	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_right	300	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: apply X).	0.019217	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.deletion	300	0.0	synth with cache (only 1: intros; only 1: assumption).	0.012265	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	300	0	synth with cache (only 1: apply Nat.add_le_mono_r).	0.031637	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	300	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.015925	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	300	0.0	synth with cache (only 1: elim Inclusion_is_an_order; only 1: auto with sets).	0.025376	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_heq	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_ass	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT2	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply X; only 1: apply inj_pairT2; only 1: assumption).	0.020275	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	300	0	synth with cache (only 1: apply Nat.add_lt_mono_r).	0.017552	1
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	300	0.0.0.0.0.0	synth with cache (only 1: unfold well_founded; only 1: intros; only 1: apply Acc_union; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.028427	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	300	0	synth with cache (only 1: auto with sets).	0.014435	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat	300	0	synth with cache (only 1: apply Nat.add_le_mono).	0.012612	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_left	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	300	0.0.0	synth with cache (only 1: intros; only 1: apply bits_iff_nonneg; only 1: apply lt_succ_diag_r).	0.016087	3
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT1	300
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_K	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.019205	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	300	0	synth with cache (only 1: apply Nat.add_le_lt_mono).	0.016440	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_right	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: auto with sets).	0.048695	13
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_le_compat	300	0	synth with cache (only 1: apply Nat.add_lt_le_mono).	0.016245	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_rotate	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	300	1	synth with cache (only 1: apply Nat.add_lt_mono).	0.025506	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: auto with sets; only 1: auto with sets).	0.047488	13
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_split	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_congr	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cong_congr; only 1: auto; only 1: auto; only 1: exact seq_trans; only 1: auto; only 1: auto).	0.035370	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_l	300	0	synth with cache (only 1: apply Nat.le_add_r).	0.019373	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	300	0.0.0	synth with cache (only 1: intros; only 1: apply bits_iff_neg; only 1: apply lt_succ_diag_r).	0.019534	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_r	300	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.022551	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	300	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.038314	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Bottom_definition; only 1: simpl; only 1: auto with sets; only 1: simpl; only 1: auto with sets).	0.022328	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: assumption; only 1: apply H0; only 1: easy).	0.105731	10
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_perm_left	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nat.le_add_r; only 1: trivial).	0.033651	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	300	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.025139	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: auto with sets).	0.033978	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist1	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply twist; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: exact seq_trans; only 1: auto).	0.040787	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: apply Nat.le_add_r).	0.018470	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	300	0	synth with cache (only 1: auto with sets).	0.019095	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	300	0	synth with cache (only 1: auto with sets).	0.013573	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite testbit_true; only 1: rewrite pow_succ_r; only 1: rewrite div_div; only 1: easy; only 1: order'; only 1: order_pos; only 1: order'; only 1: order_pos; only 1: order').	0.085659	14
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_O	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.039539	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	300	0.0	synth with cache (only 1: symmetry; only 1: apply even_equiv).	0.020471	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	300	0	synth with cache (only 1: auto with sets).	0.013901	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	300	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: auto; only 1: destruct m; only 1: auto; only 1: discriminate).	0.040940	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.030589	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_left	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	300	0.0	synth with cache (only 1: symmetry; only 1: apply odd_equiv).	0.017814	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.045314	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_n_O	300	0.0.0.0	synth with cache (only 1: symmetry; only 1: destruct n; only 1: easy; only 1: easy).	0.032251	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_right	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_tail_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist2	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	300	0	synth with cache (only 1: apply Nat.succ_add_discr).	0.015559	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_Sn_m	300	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.sub_succ_l; only 1: auto with arith).	0.026077	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	300	0	synth with cache (only 1: parity_binop).	0.084086	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Lub_definition; only 1: apply Upper_Bound_definition; only 1: simpl; only 1: auto with sets; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: auto with sets; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: simpl; only 1: auto with sets).	0.084287	21
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.pred_of_minus	300	0.0.0.0.0.0.0	synth with cache (only 1: case n; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: intros ?; only 1: rewrite <- minus_n_O; only 1: reflexivity).	0.035514	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cong_congr; only 1: auto using meq_left, meq_right; only 1: auto using meq_left, meq_right; only 1: exact meq_trans; only 1: auto using meq_left, meq_right; only 1: auto using meq_left, meq_right).	0.055311	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_diag_reverse	300	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.sub_diag).	0.027397	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	300	0.0.0.0	synth with cache (only 1: rewrite Nat.sub_add_distr; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_sub; only 1: easy).	0.023449	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	300	0.0.0	synth with cache (only 1: symmetry; only 1: apply Nat.add_sub_eq_l; only 1: easy).	0.020621	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	300	0	synth with cache (only 1: parity_binop).	0.073417	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus	300	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.add_sub).	0.024995	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	300	0	synth with cache (only 1: firstorder).	0.134699	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_n_S	300	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.017597	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus_r	300	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.sub_add).	0.013826	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_assoc_reverse	300	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.mul_assoc).	0.019600	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_n	300	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.019852	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite Nat.add_comm; only 1: apply Nat.sub_add; only 1: assumption).	0.038062	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_O	300	0	synth with cache (only 1: apply Nat.eq_mul_0).	0.021099	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply twist; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: exact meq_trans; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right).	0.155476	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.succ_le_mono; only 1: easy).	0.020023	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	300	0	synth with cache (only 1: apply Nat.eq_mul_1).	0.019669	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_pred	300	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.014642	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	300	0	synth with cache (only 1: apply Nat.lt_add_lt_sub_r).	0.018190	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_not_gt	300	0	synth with cache (only 1: apply Nat.le_ngt).	0.020244	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.not_le_minus_0	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.sub_0_le; only 1: apply Nat.lt_le_incl; only 1: apply Nat.lt_nge; only 1: easy).	0.026137	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_O_le	300	0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: left; only 1: trivial using Nat.le_add_r; only 1: right; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.026942	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	300	0	synth with cache (only 1: apply Nat.lt_nge).	0.017863	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_r	300	0	synth with cache (only 1: parity_binop).	0.129062	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	300	0.0	synth with cache (only 1: apply Nat.mul_le_mono_nonneg_l; only 1: apply Nat.le_0_l).	0.018197	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_S_gt	300	0	synth with cache (only 1: apply Nat.le_succ_l).	0.025023	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_le	300	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.016922	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_r	300	0.1	synth with cache (only 1: apply Nat.mul_le_mono_nonneg_r; only 1: apply Nat.le_0_l).	0.062595	30
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_S	300	0	synth with cache (only 1: apply Nat.le_succ_l).	0.016841	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply succ_wd in H; only 1: rewrite succ_onto_gives_succ_pred in H; only 1: rewrite succ_onto_gives_succ_pred in H; only 1: auto).	0.041921	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: auto; only 1: apply Nat.le_0_l; only 1: auto).	0.018411	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	300	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.014315	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_lt_compat_l	300	0.0	synth with cache (only 1: apply Nat.mul_lt_mono_pos_l; only 1: apply Nat.lt_0_succ).	0.019771	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: easy; only 1: easy).	0.018271	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	300	0	synth with cache (only 1: parity_binop).	0.073093	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Nat.mul_lt_mono_pos_l; only 1: auto; only 1: auto).	0.021371	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.le_lt_trans with m; only 1: easy; only 1: easy).	0.023992	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply bi_induction; only 1: auto; only 1: auto; only 1: clear n; only 1: intros ?; only 1: split; only 1: auto; only 1: intros ?; only 1: apply H2 in H3; only 1: rewrite pred_succ in H3; only 1: auto).	0.049124	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	300	0.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Nat.mul_lt_mono_pos_r; only 1: auto; only 1: auto).	0.029901	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_trans with m; only 1: easy; only 1: easy).	0.021524	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_le_reg_l	300	0.0	synth with cache (only 1: apply Nat.mul_le_mono_pos_l; only 1: apply Nat.lt_0_succ).	0.023097	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans_S	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: apply Nat.succ_le_mono; only 1: easy).	0.025384	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_0_eq	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: right; only 1: auto with arith; only 1: left; only 1: apply Nat.lt_0_succ).	0.025131	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	300	0	synth with cache (only 1: reflexivity).	0.017463	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	300	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.019251	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	300	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.018710	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_tail_mult	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold tail_mult; only 1: rewrite <- mult_acc_aux; only 1: auto).	0.019366	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	300	0.0	synth with cache (only 1: unfold ofnat; only 1: easy).	0.132901	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_em	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	300	0	synth with cache (only 1: exact PropExt_imp_ProvPropExt).	0.009289	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_l	300	0	synth with cache (only 1: parity_binop).	0.078381	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_r	300	0	synth with cache (only 1: parity_binop).	0.078806	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	300	0.0.0	synth with cache (only 1: intros; only 1: apply lt_neq; only 1: apply ofnat_S_gt_0).	0.023844	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply ofnat_injective; only 1: intros; only 1: subst; only 1: easy).	0.023716	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	300	0.0.0.0	synth with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.015216	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	300	0.0.0	synth with cache (only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	0.030812	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.024024	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_eq_cases; only 1: rewrite ofnat_lt; only 1: rewrite ofnat_eq; only 1: split; only 1: destruct 1; only 1: auto with arith; only 1: subst; only 1: auto with arith; only 1: apply Lt.le_lt_or_eq).	0.045538	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_l	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_l	300	0	synth with cache (only 1: parity_binop).	0.121483	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite ofnat_add_l; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equiv; only 1: easy).	0.073864	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.lt_O_fact	300	0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.028240	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_neq_0	300	0.0	synth with cache (only 1: apply Nat.neq_0_lt_0; only 1: apply lt_O_fact).	0.035157	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_r	300	0	synth with cache (only 1: parity_binop).	0.085941	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	300	0	synth with cache (only 1: apply lt_eq_lt_dec).	0.015603	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_le	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct P; only 1: cbn; only 1: exact p).	0.043810	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite ofnat_sub_r; only 1: revert n H; only 1: induction m; only 1: intros; only 1: rewrite <- minus_n_O; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: inversion H; only 1: rewrite @nat_rect_succ_r; only 1: simpl; only 1: etransitivity; only 1: apply IHm; only 1: auto with arith; only 1: eapply nat_rect_wd; only 1: symmetry; only 1: apply pred_succ; only 1: apply pred_wd).	0.097707	22
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_ge_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_l	300	0	synth with cache (only 1: parity_binop).	0.172589	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	300	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply bits_inj; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.042269	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_gt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.bet_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_le	300	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.032842	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_Sk_l	300	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: destruct H; only 1: auto with arith; only 1: auto with arith).	0.036854	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	300	0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: apply bits_inj'; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.059308	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_dec	300	0	synth with cache (only 1: apply le_dec).	0.015938	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_r	300	0	synth with cache (only 1: parity_binop).	0.091351	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	300	0	synth with cache (only 1: apply lt_dec).	0.022546	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	300	0	synth with cache (only 1: apply le_dec).	0.020637	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_le	300	0	synth with cache (only 1: apply Nat.le_decidable).	0.016235	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_restr	300	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.081170	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_lt	300	0	synth with cache (only 1: apply Nat.lt_decidable).	0.022791	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_gt	300	0	synth with cache (only 1: apply Nat.lt_decidable).	0.023018	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	300	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.025166	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_ge	300	0	synth with cache (only 1: apply Nat.le_decidable).	0.018467	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_S_le	300	0.0.0	synth with cache (only 1: intros; only 1: apply le_S_n; only 1: auto with arith).	0.022357	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	300	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.021023	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_intro	300	0.0.0	synth with cache (only 1: split; only 1: assumption; only 1: assumption).	0.034940	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_le	300	0	synth with cache (only 1: apply Nat.nle_gt).	0.039697	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_lt	300	0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: eapply PeanoNat.Nat.le_lt_trans; only 1: eassumption; only 1: assumption).	0.028207	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_gt	300	0	synth with cache (only 1: apply Nat.nlt_ge).	0.022861	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_ge	300	0	synth with cache (only 1: apply Nat.nle_gt).	0.018189	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	300	0	synth with cache (only 1: apply Nat.nlt_ge).	0.017011	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_p_Sq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_S	300	0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: auto with arith).	0.036005	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_lt	300	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_lt_iff).	0.021451	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_gt	300	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_gt_iff).	0.022253	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_Sp_q	300	0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: auto with arith).	0.031586	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_le	300	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_le_iff).	0.028988	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	300	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_ge_iff).	0.019725	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftl_spec; only 1: rewrite sub_opp_r; only 1: easy; only 1: trivial; only 1: trivial).	0.044087	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	300	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.028968	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	300	0	synth with cache (only 1: parity_binop).	0.064278	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_eq	300	0	synth with cache (only 1: apply Nat.compare_eq_iff).	0.090075	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite div_pow2_bits; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.037790	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_in_int	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: destruct IHexists_between; only 1: exists x; only 1: auto with arith; only 1: auto with arith; only 1: exists l; only 1: auto with arith; only 1: auto with arith).	0.049008	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	300	0	synth with cache (only 1: apply Nat.compare_lt_iff).	0.020707	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	300	0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: induction H0; only 1: auto with arith; only 1: auto with arith).	0.045002	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	300	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.018176	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite mul_pow2_bits; only 1: rewrite sub_opp_r; only 1: easy; only 1: apply opp_nonneg_nonpos; only 1: easy; only 1: trivial).	0.066868	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_r	300	0	synth with cache (only 1: parity_binop).	0.097731	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_equiv	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold nat_compare_alt; only 1: destruct lt_eq_lt_dec; only 1: destruct s; only 1: apply Nat.compare_lt_iff; only 1: auto with arith; only 1: apply Nat.compare_eq_iff; only 1: assumption; only 1: apply Nat.compare_gt_iff; only 1: auto with arith).	0.057125	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite mul_pow2_bits; only 1: easy; only 1: easy; only 1: easy).	0.044788	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.PropNeqType.paradox	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_iff_conv	300	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.034251	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_r	300	0	synth with cache (only 1: parity_binop).	0.077056	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite div_pow2_bits; only 1: rewrite add_opp_r; only 1: easy; only 1: apply opp_nonneg_nonpos; only 1: easy; only 1: trivial; only 1: trivial).	0.064874	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct	300	0	synth with cache (only 1: apply Nat.leb_le).	0.027959	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete	300	0	synth with cache (only 1: apply Nat.leb_le).	0.019602	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dec	300	0	synth with cache (only 1: decide equality).	0.041873	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_not_exists	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct_conv	300	0	synth with cache (only 1: apply leb_iff_conv).	0.021760	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	300	0	synth with cache (only 1: apply leb_iff_conv).	0.018587	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	300	0	synth with cache (only 1: reflexivity).	0.018597	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	300	0.0	synth with cache (only 1: rewrite Nat.compare_le_iff; only 1: apply Nat.leb_le).	0.025934	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_discr	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.046920	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: replace 0 with x; only 1: auto with arith; only 1: auto with arith).	0.026712	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	300	0	synth with cache (only 1: exact well_founded_ltof).	0.016317	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_l	300	0	synth with cache (only 1: parity_binop).	0.131005	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_spec	300	0	synth with cache (only 1: reflexivity).	0.033675	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- shiftr_opp_r; only 1: rewrite <- shiftr_opp_r; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.054511	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	300	0	synth with cache (only 1: exact induction_ltof1).	0.020700	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto).	0.047589	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: rewrite mul_pow2_bits; only 1: rewrite add_simpl_r; only 1: easy; only 1: easy; only 1: easy).	0.045815	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	300	0	synth with cache (only 1: exact induction_ltof1).	0.024197	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_succ	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.062615	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	300	0	synth with cache (only 1: parity_binop).	0.088403	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.double_succ	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.022204	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_shiftl; only 1: rewrite add_opp_r; only 1: easy; only 1: easy).	0.041896	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_l	300	0	synth with cache (only 1: parity_binop).	0.062842	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf	300	0.0	synth with cache (only 1: unfold lt; only 1: apply Nat.lt_wf_0).	0.031560	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_shiftl; only 1: rewrite opp_sub_distr; only 1: rewrite add_comm; only 1: easy; only 1: easy).	0.055673	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_not_1	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.040156	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_r	300	0	synth with cache (only 1: parity_binop).	0.057558	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.gt_wf_rec	300	0	synth with cache (only 1: exact lt_wf_rec).	0.022140	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_succ	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply pred_double_succ; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.024246	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern n; only 1: apply lt_wf_rec; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern m; only 1: apply lt_wf_rec; only 1: auto with arith).	0.063897	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: right; only 1: apply succ_pred_double; only 1: simpl; only 1: auto).	0.042790	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: apply succ_pred_double; only 1: intros ?; only 1: simpl; only 1: destruct H; only 1: auto).	0.052299	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern n; only 1: apply lt_wf_ind; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern m; only 1: apply lt_wf_ind; only 1: auto with arith).	0.078858	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy; only 1: order').	0.047587	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_N_succ	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.031887	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.modulo	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_r	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.022666	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite opp_0; only 1: rewrite shiftl_0_r; only 1: easy).	0.033374	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_l	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.024474	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_0_l; only 1: easy).	0.035401	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite eq_mul_0; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: trivial; only 1: contradict H0; only 1: order_nz; only 1: intros ?; only 1: left; only 1: trivial; only 1: order').	0.059536	15
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply shiftr_eq_0_iff; only 1: le_elim H; only 1: right; only 1: split; only 1: trivial; only 1: trivial; only 1: left; only 1: easy).	0.037345	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy; only 1: order').	0.065490	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite div2_div; only 1: rewrite H; only 1: easy).	0.034769	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite <- bit0_odd; only 1: rewrite bit0_mod; only 1: apply div_mod; only 1: order').	0.055794	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.086335	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.080824	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_approx	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.WeakFanTheorem	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: f_equal; only 1: subst p; only 1: apply @of_nat_ext).	0.051681	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.nil_cons	300	0.0	synth with cache (only 1: intros; only 1: discriminate).	0.018962	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.083678	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.103103	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.length_zero_iff_nil	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct l; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.038808	7
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_sanity	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: rewrite IHp; only 1: destruct @to_nat; only 1: easy).	0.058255	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_nil	300	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.017546	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	300	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.024736	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy).	0.034588	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	300	0.0	synth with cache (only 1: simpl; only 1: auto).	0.019974	2
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	300	0.0	synth with cache (only 1: simpl; only 1: auto).	0.021268	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_nilpotent).	0.024944	3
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.R_sanity	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: rewrite IHn; only 1: destruct @to_nat; only 1: easy).	0.051505	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.not_in_cons	300	0.0	synth with cache (only 1: simpl; only 1: intuition).	0.073500	2
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.le_lt_SS	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_le_succ_r; only 1: assumption).	0.020232	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy; only 1: intros ?; only 1: rewrite H; only 1: apply lxor_nilpotent).	0.058693	11
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.Splus_lt	300	0.0.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.020912	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_nil	300	0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H).	0.021607	4
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.SSplus_lt	300	0.0	synth with cache (only 1: apply le_lt_SS; only 1: apply Nat.le_add_r).	0.016790	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.036412	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.027377	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_split	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_inv	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H; only 1: auto; only 1: auto).	0.033908	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_comm).	0.029888	3
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.depair_sanity	300
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.max	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.088308	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_cons_not_nil	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_l	300	0	synth with cache (only 1: reflexivity).	0.017188	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.028144	3
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply rect2; only 1: simpl; only 1: intros; only 1: split; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply PeanoNat.Nat.eqb_eq; only 1: easy; only 1: simpl; only 1: intros; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: eapply iff_trans; only 1: eassumption; only 1: split; only 1: intros; only 1: f_equal; only 1: easy; only 1: apply @FS_inj).	0.136535	28
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.032429	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_r	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_end	300	0.0	synth with cache (only 1: symmetry; only 1: apply app_nil_r).	0.027954	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_comm).	0.026949	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.038835	9
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_assoc).	0.031349	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc_reverse	300	0	synth with cache (only 1: auto using app_assoc).	0.021969	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_diag).	0.023851	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_comm_cons	300	0	synth with cache (only 1: auto).	0.024660	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.cast	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_unit	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	300	0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: split; only 1: apply lor_eq_0_l in H; only 1: trivial; only 1: rewrite lor_comm in H; only 1: apply lor_eq_0_l in H; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: rewrite lor_0_l; only 1: easy).	0.059200	16
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inj_tail	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.035823	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_r).	0.027273	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.030023	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_assoc).	0.032287	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_diag).	0.024862	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_or	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.032552	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_or_app	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite andb_true_r; only 1: easy).	0.031594	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_iff	300	0.0.1	synth with cache (only 1: split; only 1: auto using in_app_or, in_or_app; only 1: auto using in_app_or, in_or_app).	0.037627	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_negb_r).	0.025204	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_head	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_l).	0.107577	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_r).	0.047239	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_tail	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_l).	0.043245	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_in_or_default	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_r).	0.044099	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	300	0.0	synth with cache (only 1: simpl; only 1: auto).	0.024955	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite negb_orb; only 1: rewrite andb_assoc; only 1: easy).	0.048134	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite <- andb_orb_distrib_r; only 1: rewrite orb_comm; only 1: rewrite orb_negb_r; only 1: rewrite andb_true_r; only 1: easy).	0.077770	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold setbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.032514	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply NNPP; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: exists n; only 1: exact H1).	0.036418	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold clearbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.034382	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_overflow	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	300	0.0	synth with cache (only 1: unfold setbit; only 1: solve_proper).	0.052955	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: exists n; only 1: trivial).	0.062706	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply NNPP; only 1: red; only 1: intros ?; only 1: apply H; only 1: exists n; only 1: trivial).	0.037070	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth1	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	300	0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).	0.046470	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	300	0.0	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	0.062804	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth2	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply H with x; only 1: auto).	0.025519	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply not_included_empty_Inhabited; only 1: red; only 1: auto with sets).	0.035660	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- mul_1_l; only 1: rewrite mul_pow2_bits; only 1: rewrite sub_diag; only 1: rewrite bit0_odd; only 1: rewrite odd_1; only 1: easy; only 1: trivial).	0.128368	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_In	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert n; only 1: induction l; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: eauto).	0.063271	15
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	300	0.0	synth with cache (only 1: unfold Subtract at 1; only 1: auto with sets).	0.021941	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.034136	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth_error	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H; only 1: split; only 1: tauto; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply Strict_super_set_contains_new_element; only 1: auto with sets; only 1: auto with sets).	0.056698	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_spec'; only 1: rewrite lor_spec; only 1: rewrite pow2_bits_eqb; only 1: rewrite orb_comm; only 1: easy; only 1: easy).	0.036458	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Complement; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros; only 1: apply NNPP; only 1: auto with sets; only 1: auto with sets).	0.043428	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_eqb; only 1: rewrite orb_true_iff; only 1: rewrite eqb_eq; only 1: easy; only 1: easy).	0.043413	6
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_Some	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply setbit_iff; only 1: order'; only 1: left; only 1: easy).	0.044143	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite setbit_eqb; only 1: rewrite <- eqb_eq in H0; only 1: apply not_true_is_false in H0; only 1: rewrite H0; only 1: easy; only 1: trivial).	0.052508	11
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_split	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite clearbit_eqb; only 1: rewrite andb_true_iff; only 1: rewrite <- eqb_eq; only 1: rewrite negb_true_iff; only 1: rewrite not_true_iff_false; only 1: easy).	0.060353	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction n; only 1: intros ?; only 1: destruct l; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: solve [ inversion H ]; only 1: intros ?; only 1: destruct l; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	0.063608	16
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite clearbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: apply andb_true_r).	0.042303	9
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case x; only 1: intros; only 1: apply Lt_nil; only 1: simpl; only 1: intros; only 1: inversion_clear H0; only 1: apply Lt_hd; only 1: auto with sets; only 1: inversion_clear H1).	0.090912	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply nth_error_split in H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: subst; only 1: rewrite app_nth2; only 1: rewrite Nat.sub_diag; only 1: reflexivity; only 1: auto).	0.052261	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite lxor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.051284	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lxor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.066266	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	300
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare.discrete_nat	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite land_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.064956	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite land_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.060665	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.exists_last	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with datatypes; only 1: auto with datatypes).	0.039206	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.046588	10
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.removelast_app	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.045064	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_In	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: destruct 1; only 1: apply gt_irrefl; only 1: simpl; only 1: destruct eq_dec; only 1: intropattern subst -> e; only 1: rewrite IHl; only 1: intuition; only 1: rewrite IHl; only 1: intuition).	0.093535	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite ldiff_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.047045	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_not_In	300	0.0.0.0.0	synth with cache (only 1: rewrite count_occ_In; only 1: unfold gt; only 1: rewrite Nat.nlt_ge; only 1: rewrite Nat.le_0_r; only 1: easy).	0.030804	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_nil	300	0	synth with cache (only 1: reflexivity).	0.018256	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply set_add_elim; only 1: apply set_add_intro).	0.025228	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite ldiff_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.052157	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: constructor; only 1: tauto; only 1: constructor; only 1: simpl; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: constructor; only 1: trivial; only 1: trivial; only 1: constructor; only 1: rewrite set_add_iff; only 1: intuition; only 1: trivial).	0.063679	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	300	0.0	synth with cache (only 1: unfold lnot; only 1: solve_proper).	0.031926	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_true	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_eq	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: destruct eq_dec; only 1: easy; only 1: easy).	0.031341	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply dependent_unique_choice).	0.024867	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: destruct Aeq_dec; only 1: tauto; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: apply in_eq; only 1: apply in_cons; only 1: apply IHl; only 1: assumption).	0.055904	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_neq	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: destruct eq_dec; only 1: easy; only 1: easy).	0.031620	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_map	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite negb_involutive; only 1: easy; only 1: order'; only 1: order').	0.041674	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_cons	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.055367	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eq_dec	300	0.0	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec).	0.037578	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: intros ?; only 1: simpl; only 1: tauto; only 1: intros ?; only 1: simpl; only 1: inversion_clear H; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: congruence; only 1: destruct 1; only 1: subst; only 1: auto; only 1: auto).	0.083959	14
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_map_NoDup	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction 1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: rewrite in_map_iff; only 1: intros ?; only 1: destruct H2; only 1: destruct H2; only 1: apply H in H2; only 1: subst; only 1: easy; only 1: trivial).	0.100609	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	300	0.0.0.0.0	synth with cache (only 1: unfold lnot; only 1: rewrite opp_0; only 1: rewrite <- sub_1_r; only 1: rewrite sub_0_l; only 1: easy).	0.063094	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	300	0	synth with cache (only 1: apply classic_set_in_prop_context).	0.039699	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: left; only 1: exists p; only 1: auto).	0.040315	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	300	0.0.0.0.0	synth with cache (only 1: unfold lnot; only 1: rewrite opp_involutive; only 1: rewrite one_succ; only 1: rewrite pred_succ; only 1: easy).	0.041429	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	300	0	synth with cache (only 1: reflexivity).	0.032611	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_list_carac	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_unit	300	0.0	synth with cache (only 1: intros; only 1: apply rev_app_distr).	0.034346	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite orb_true_r; only 1: easy; only 1: order').	0.055133	6
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: intuition; only 1: congruence; only 1: simpl; only 1: intuition).	0.181727	10
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_in	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eta	300	0.0.0	synth with cache (only 1: apply @caseS with (v := v); only 1: intros; only 1: reflexivity).	0.031609	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_involutive	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_succ	300	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.peano_rect_succ; only 1: easy).	0.072849	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lor_comm; only 1: rewrite lor_m1_r; only 1: easy).	0.047880	4
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	300	0	synth with cache (only 1: apply peano_rect_base).	0.021959	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_app	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eq_nth_iff	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_succ	300	0	synth with cache (only 1: apply peano_rect_succ).	0.023287	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite andb_true_r; only 1: easy; only 1: order').	0.049462	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.in_rev	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_carac	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite land_comm; only 1: rewrite land_m1_r; only 1: easy).	0.041809	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_length	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply peano_rect; only 1: assumption; only 1: intros; only 1: apply -> H1; only 1: easy).	0.068543	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: trivial; only 1: constructor; only 1: rewrite set_remove_iff; only 1: intuition; only 1: trivial; only 1: trivial).	0.082865	12
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_list_carac	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite andb_false_r; only 1: easy; only 1: order').	0.058720	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_nth	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_order_last	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst y1; only 1: induction x1 using peano_ind; only 1: trivial; only 1: unfold recursion in *; only 1: rewrite peano_rect_succ; only 1: rewrite peano_rect_succ; only 1: apply H0; only 1: easy; only 1: easy).	0.155284	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite bits_m1; only 1: easy; only 1: order'; only 1: order').	0.057186	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_append_rev	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	300	0.0.0.0	synth with cache (only 1: intros; only 1: elim H; only 1: auto with datatypes; only 1: auto with datatypes).	0.039080	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	0.083568	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rev_append_rev; only 1: rewrite app_nil_r; only 1: trivial).	0.035077	4
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_0	300	0	synth with cache (only 1: reflexivity).	0.019805	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_last	300	0.0.0.0.0	synth with cache (only 1: induction v; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	0.024049	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_carac	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite bits_m1; only 1: destruct testbit; only 1: easy; only 1: easy; only 1: order'; only 1: order').	0.056970	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply set_union_elim; only 1: apply set_union_intro).	0.024532	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_succ	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold recursion; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using peano_ind; only 1: rewrite peano_rect_succ; only 1: apply H0; only 1: easy; only 1: easy; only 1: rewrite peano_rect_succ in *; only 1: rewrite peano_rect_succ in *; only 1: apply H0; only 1: easy; only 1: easy).	0.079407	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_nil	300	0	synth with cache (only 1: reflexivity).	0.020205	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold lnot; only 1: rewrite add_pred_r; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: easy).	0.071623	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_cons	300	0	synth with cache (only 1: reflexivity).	0.019768	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.one_succ	300	0	synth with cache (only 1: reflexivity).	0.016897	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Gt_Psucc	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Pos.compare_succ_succ; only 1: apply Pos.lt_gt; only 1: apply Pos.lt_lt_succ; only 1: apply Pos.gt_lt; only 1: easy).	0.034081	6
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.const_nth	300	0.0.0	synth with cache (only 1: induction p; only 1: easy; only 1: easy).	0.021071	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.two_succ	300	0	synth with cache (only 1: reflexivity).	0.018011	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction l1; only 1: intros ?; only 1: simpl; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite IHl1; only 1: apply app_assoc).	0.045293	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_0	300	0	synth with cache (only 1: reflexivity).	0.029295	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: easy; only 1: trivial).	0.047065	5
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Psucc_Gt	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Pos.lt_gt; only 1: rewrite Pos.lt_iff_add; only 1: exists 1; only 1: apply Pos.add_1_r).	0.039948	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct x; only 1: left; only 1: exact H; only 1: right; only 1: exists a; only 1: easy).	0.057073	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_spec	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.028747	4
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.list_eq_dec	300	0	synth with cache (only 1: decide equality).	0.037076	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_app	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.map_app	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- ldiff_land; only 1: bitwise; only 1: apply andb_negb_r).	0.044373	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.027401	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.HdRel_inv	300	0.0	synth with cache (only 1: inversion 1; only 1: auto).	0.034846	2
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.length_map	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: trivial; only 1: simpl; only 1: apply f_equal; only 1: apply IHl).	0.034195	6
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	300	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: apply Pos.pred_N_succ).	0.024264	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_inv	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: auto).	0.042180	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lor_spec; only 1: rewrite negb_orb; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial).	0.051654	12
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.succ_pred_double; only 1: simpl; only 1: auto).	0.032107	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_map	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_inverse	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_succ	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply Pos.pred_N_succ).	0.033079	4
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite land_spec; only 1: rewrite negb_andb; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial).	0.054791	12
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	300	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: reflexivity; only 1: unfold to_list; only 1: simpl; only 1: f_equal; only 1: easy).	0.060198	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_cons	300	0	synth with cache (only 1: reflexivity).	0.026312	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_sub	300	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.032291	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_O	300	0	synth with cache (only 1: reflexivity).	0.028151	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.038042	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite ldiff_spec; only 1: rewrite negb_andb; only 1: rewrite negb_involutive; only 1: easy; only 1: trivial; only 1: trivial).	0.061989	11
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	300	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.030904	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_0_l	300	0	synth with cache (only 1: reflexivity).	0.016924	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	300	0	synth with cache (only 1: eauto with datatypes).	0.065234	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_idem	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app_Some	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite xorb_negb_negb; only 1: easy; only 1: trivial; only 1: trivial).	0.056884	9
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_app	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets).	0.031339	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	300	0	synth with cache (only 1: firstorder using StronglySorted_rect).	0.024379	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map_iff	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: unfold BinNatDef.N.succ; only 1: unfold BinNatDef.N.add; only 1: auto; only 1: unfold BinNatDef.N.succ; only 1: unfold BinNatDef.N.add; only 1: rewrite Pos.add_1_l; only 1: easy; only 1: destruct m; only 1: unfold BinNatDef.N.succ; only 1: unfold BinNatDef.N.add; only 1: easy; only 1: unfold BinNatDef.N.succ; only 1: unfold BinNatDef.N.add; only 1: rewrite Pos.add_succ_l; only 1: easy).	0.069577	17
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin_Finite	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_prf_irr	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	300	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply set_inter_elim; only 1: destruct 1; only 1: apply set_inter_intro; only 1: easy; only 1: easy).	0.038930	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial; only 1: destruct H0; only 1: constructor; only 1: constructor; only 1: trivial).	0.040510	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.018904	3
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	300	0	synth with cache (only 1: reflexivity).	0.023439	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lxor_spec; only 1: rewrite negb_xorb_l; only 1: easy; only 1: trivial; only 1: trivial).	0.048152	10
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply Subtract_intro; only 1: auto with sets; only 1: auto with sets).	0.062016	13
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_comm_cons	300	0	synth with cache (only 1: reflexivity).	0.020609	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: simpl; only 1: constructor; only 1: intros ?; only 1: simpl; only 1: destruct set_mem; only 1: constructor; only 1: rewrite set_inter_iff; only 1: tauto; only 1: auto; only 1: auto).	0.063949	12
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.pos_eq_refl	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_succ_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.sub_mask_succ_r; only 1: rewrite Pos.sub_mask_carry_spec; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: destruct p1; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.067884	19
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: auto with sets).	0.043554	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth_error	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lxor_spec; only 1: rewrite negb_xorb_r; only 1: easy; only 1: trivial; only 1: trivial).	0.045988	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_extends	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_app	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_0_l	300	0	synth with cache (only 1: reflexivity).	0.019937	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply Subtract_intro; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: apply H; only 1: rewrite H1; only 1: auto with sets).	0.050403	13
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	300
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorDef.BASES.trunc	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_rev	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_succ_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite Pos.add_comm; only 1: apply Pos.mul_succ_l).	0.049578	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lxor_comm; only 1: rewrite lxor_m1_r; only 1: easy).	0.030407	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.form_eq_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lnot_spec; only 1: easy; only 1: order_pos; only 1: easy; only 1: easy; only 1: easy).	0.053922	13
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_splitat	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eqb_eq	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy'; only 1: destruct m; only 1: simpl; only 1: easy'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: split; only 1: intros ?; only 1: subst; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: auto).	0.199199	18
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose1	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_flat_map	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	300	0.0	synth with cache (only 1: unfold ones; only 1: solve_proper).	0.035337	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.flat_map_concat_map	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: eauto; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.052347	10
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_empty	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case i; only 1: unfold empty; only 1: unfold get; only 1: simpl; only 1: reflexivity; only 1: unfold empty; only 1: unfold get; only 1: simpl; only 1: reflexivity; only 1: unfold empty; only 1: unfold get; only 1: simpl; only 1: reflexivity).	0.045236	14
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.weaken	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ltb_lt	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.ltb; only 1: unfold lt; only 1: destruct BinNatDef.N.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.046622	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.concat_map	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: eauto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: reflexivity).	0.044073	11
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project_In	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_id	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: eauto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.037446	8
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply project_In; only 1: apply get_In with p; only 1: assumption).	0.029534	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.leb; only 1: unfold le; only 1: destruct BinNatDef.N.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.055729	6
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_map	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	300	0	synth with cache (only 1: auto using incl_soustr_add_l with sets).	0.032798	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite IHl; only 1: trivial; only 1: intros; only 1: apply H; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.067951	19
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: eapply set_diff_elim1; only 1: eauto; only 1: eapply set_diff_elim2; only 1: eauto; only 1: destruct 1; only 1: apply set_diff_intro; only 1: easy; only 1: easy).	0.042719	10
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: rewrite Pos.compare_eq_iff; only 1: split; only 1: intros ?; only 1: subst; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: auto).	0.143016	24
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ext_in_map	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: simpl; only 1: constructor; only 1: intros ?; only 1: simpl; only 1: destruct set_mem; only 1: auto using set_add_nodup; only 1: auto using set_add_nodup).	0.037904	9
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite ones_equiv; only 1: rewrite ones_equiv; only 1: rewrite ones_equiv; only 1: rewrite <- sub_1_r; only 1: rewrite <- sub_1_r; only 1: rewrite <- sub_1_r; only 1: rewrite mul_sub_distr_l; only 1: rewrite mul_1_r; only 1: rewrite <- pow_add_r; only 1: rewrite add_sub_assoc; only 1: rewrite sub_add; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.218718	18
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_push_compat	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_lt_iff	300	0	synth with cache (only 1: reflexivity).	0.017791	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_le_iff	300	0	synth with cache (only 1: easy).	0.025584	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction l; only 1: intros ?; only 1: intro_equality_clear H; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: injection H as; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: subst; only 1: auto; only 1: auto; only 1: induction l; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite IHl; only 1: trivial; only 1: intros; only 1: apply H; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.185449	29
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_antisym	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: eauto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	0.047024	12
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: trivial; only 1: simpl; only 1: rewrite IHl; only 1: congruence).	0.039260	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.min; only 1: unfold le; only 1: case BinNatDef.N.compare; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.036724	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.min; only 1: unfold le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: trivial).	0.039266	8
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	300	0	synth with cache (only 1: firstorder).	0.020712	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	300	0	synth with cache (only 1: firstorder).	0.015561	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.max; only 1: unfold le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: auto; only 1: destruct 2; only 1: easy; only 1: auto).	0.031808	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	300	0	synth with cache (only 1: firstorder).	0.048135	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_right_app	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_In	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_r	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.max; only 1: unfold le; only 1: case BinNatDef.N.compare; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.027177	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	300	0	synth with cache (only 1: firstorder).	0.021409	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_succ_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy'; only 1: destruct m; only 1: simpl; only 1: split; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 1; only 1: easy; only 1: simpl; only 1: apply Pos.lt_succ_r).	0.080988	17
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.interp_proof	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: clear IHl; only 1: revert a; only 1: induction l; only 1: auto; only 1: simpl; only 1: intros ?; only 1: rewrite <- H; only 1: rewrite IHl; only 1: rewrite IHl; only 1: auto).	0.110038	21
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	300	0.0.0.0	synth with cache (only 1: split; only 1: exact eq_refl; only 1: exact eq_sym; only 1: exact eq_trans).	0.021586	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	300	0	synth with cache (only 1: firstorder).	0.021657	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	300	0	synth with cache (only 1: firstorder).	0.033539	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	300	0.0.0	synth with cache (only 1: split; only 1: exact lt_antirefl; only 1: exact lt_trans).	0.025854	3
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.map_push	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case S; only 1: unfold push; only 1: unfold map; only 1: unfold contents; only 1: unfold index; only 1: intros; only 1: rewrite Tmap_Tadd; only 1: reflexivity).	0.095045	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	300
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.Reflect	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply covers_Add with (A := A); only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: intros ?; only 1: elim H1; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: intros ?; only 1: intros ?; only 1: rewrite H3; only 1: clear H2; only 1: apply Add_covers; only 1: intuition; only 1: intuition; only 1: intuition).	0.174899	24
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_exists	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: exact eq_sym; only 1: exact eq_sym; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_lt with x; only 1: auto with ordered_type; only 1: apply lt_eq with x0; only 1: auto; only 1: auto).	0.046092	15
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Empty_set_zero'; only 1: apply Add_covers; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.032968	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: le_elim H; only 1: apply bits_above_log2; only 1: rewrite ones_equiv; only 1: rewrite <- lt_succ_r; only 1: rewrite succ_pred; only 1: order_pos; only 1: rewrite ones_equiv; only 1: rewrite log2_pred_pow2; only 1: rewrite <- le_succ_l; only 1: rewrite succ_pred; only 1: easy; only 1: trivial; only 1: rewrite ones_equiv; only 1: rewrite <- H; only 1: rewrite pow_0_r; only 1: rewrite one_succ; only 1: rewrite pred_succ; only 1: rewrite bits_0; only 1: easy).	0.191845	23
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_nth	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_app	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	300	0	synth with cache (only 1: reflexivity).	0.032331	1
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Full_map	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	300	0	synth with cache (only 1: order).	0.023704	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	300	0	synth with cache (only 1: firstorder).	0.025020	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	300	0	synth with cache (only 1: order).	0.025542	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	300	0	synth with cache (only 1: firstorder).	0.032479	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	300	0	synth with cache (only 1: order).	0.023190	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	300	0	synth with cache (only 1: firstorder).	0.030636	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	300	0	synth with cache (only 1: order).	0.027915	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	300	0	synth with cache (only 1: order).	0.028256	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_app	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	300	0	synth with cache (only 1: firstorder).	0.105594	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	300	0	synth with cache (only 1: order).	0.027523	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply Sorted_iter_merge; only 1: constructor).	0.021192	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	300	0	synth with cache (only 1: firstorder).	0.016234	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	300	0	synth with cache (only 1: order).	0.022105	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: eapply Sorted_LocallySorted_iff; only 1: apply Sorted_iter_merge; only 1: constructor).	0.034261	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	300	0	synth with cache (only 1: order).	0.021276	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	300	0	synth with cache (only 1: order).	0.024269	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	300	0	synth with cache (only 1: auto using Sorted_StronglySorted, LocallySorted_sort).	0.023232	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H; only 1: compute in *; only 1: auto).	0.048770	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_In	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	300	0	synth with cache (only 1: order).	0.027123	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_app	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: rewrite IHl; only 1: easy; only 1: rewrite IHl; only 1: easy).	0.042776	10
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	300	0.0	synth with cache (only 1: unfold RelCompFun; only 1: firstorder).	0.027860	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	300	0	synth with cache (only 1: order).	0.021509	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	300	0	synth with cache (only 1: reflexivity).	0.029268	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	300	0	synth with cache (only 1: order).	0.029844	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_spec	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.024100	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.032673	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	300	0	synth with cache (only 1: order).	0.096212	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_some	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	300	0	synth with cache (only 1: order).	0.017363	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.168099	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons1	300	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.036094	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case compare; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exists e; only 1: auto; only 1: intros ?; only 1: exfalso; only 1: order).	0.053413	11
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons2	300	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.045775	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	300	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case compare; only 1: intros ?; only 1: exists l; only 1: auto; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exfalso; only 1: order).	0.061366	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_mul	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.176454	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftl_nonneg; only 1: easy).	0.038301	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	300	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case compare; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exists l; only 1: auto).	0.060087	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_length	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_mul	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: destruct m; only 1: auto; only 1: auto; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: rewrite Pos.add_comm; only 1: easy).	0.043851	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: apply shiftl_nonneg).	0.071725	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_inv_nil	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct l; only 1: intuition; only 1: simpl; only 1: destruct f; only 1: destruct partition; only 1: intros ?; only 1: discriminate H; only 1: destruct partition; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.076951	14
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.027185	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftr_nonneg; only 1: easy).	0.041997	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_succ_double	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.033233	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: apply shiftr_nonneg).	0.044606	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_def	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Im_intro with (x := x); only 1: auto with sets; only 1: auto with sets).	0.031900	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite div2_nonneg; only 1: easy).	0.034597	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: unfold lt in *; only 1: simpl in *; only 1: Pos.simpl_compare; only 1: rewrite H; only 1: easy).	0.051189	15
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_add	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets).	0.034935	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.028913	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.043159	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.finite_image	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: rewrite image_empty; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H X; only 1: rewrite Im_add; only 1: apply Add_preserves_Finite; only 1: auto with sets).	0.056949	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.034161	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_inv	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H1; only 1: exists x; only 1: auto with sets).	0.043883	12
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_le_mono	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.049934	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_0_r	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.043257	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	300	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold eqke; only 1: intuition).	0.027364	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_Im_intro	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply finite_cardinal; only 1: apply finite_image; only 1: apply cardinal_finite with n; only 1: trivial with sets).	0.023767	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_0_r	300	0	synth with cache (only 1: reflexivity).	0.023643	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	300	0	synth with cache (only 1: auto).	0.018972	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold lnot; only 1: rewrite <- opp_succ; only 1: rewrite opp_nonneg_nonpos; only 1: rewrite le_succ_l; only 1: easy).	0.047790	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.elements_in_partition	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	300	0	synth with cache (only 1: auto).	0.028876	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_succ_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: destruct n; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.pow_succ_r).	0.054985	14
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	300	0	synth with cache (only 1: auto with ordered_type).	0.015526	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite le_ngt; only 1: rewrite lt_nge; only 1: rewrite lnot_nonneg; only 1: easy).	0.035923	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	300	0	synth with cache (only 1: auto with ordered_type).	0.021111	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	300	0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy).	0.036421	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	300	0	synth with cache (only 1: auto with ordered_type).	0.015786	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.square_spec	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.028287	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	300	0.0	synth with cache (only 1: unfold eqke; only 1: intuition).	0.035313	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.044449	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_decreases	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption).	0.038092	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct 1; only 1: auto; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.076849	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole_principle	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply not_injective_elim; only 1: apply Pigeonhole with A n n'; only 1: trivial with sets; only 1: trivial with sets; only 1: trivial with sets).	0.040565	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	300	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto with ordered_type; only 1: congruence).	0.057159	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- lnot_involutive; only 1: rewrite lnot_land; only 1: rewrite lnot_neg; only 1: rewrite lor_nonneg; only 1: rewrite lnot_nonneg; only 1: rewrite lnot_nonneg; only 1: easy).	0.076769	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros ?; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.040964	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: apply Pos.size_gt).	0.023449	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_map; only 1: apply map_ext; only 1: assumption).	0.036482	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	300	0	synth with cache (only 1: eauto with ordered_type).	0.039443	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_le	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	300	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with ordered_type).	0.028372	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite ldiff_land; only 1: rewrite land_nonneg; only 1: rewrite lnot_nonneg; only 1: easy).	0.053459	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_l	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	300	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: destruct H; only 1: easy).	0.031532	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite ldiff_land; only 1: rewrite land_neg; only 1: rewrite lnot_neg; only 1: easy).	0.052738	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: induction x; only 1: constructor; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: constructor; only 1: apply permA_skip; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto; only 1: exact permA_trans).	0.060944	15
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	300	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.027449	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	300	0.0.0.0	synth with cache (only 1: split; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.043931	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply permA_skip; only 1: easy; only 1: easy).	0.050883	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.even_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_nth	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_l	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	300	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: trivial; only 1: intros; only 1: apply permA_skip; only 1: intuition; only 1: intuition).	0.121139	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_r	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.odd_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_combine	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_sym; only 1: rewrite H; only 1: simpl; only 1: auto).	0.041048	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction j; only 1: simpl; only 1: rewrite <- mul_assoc; only 1: rewrite <- mul_assoc; only 1: f_equiv; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: easy; only 1: simpl; only 1: rewrite <- mul_assoc; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: easy; only 1: simpl; only 1: reflexivity).	0.140567	19
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: compute; only 1: compute in H; only 1: compute in H0; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.181688	16
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_split	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	300	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold lt; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.043657	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: easy).	0.036547	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_eucl_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod'	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	300	0.0.0.0.0	synth with cache (only 1: induction l; only 1: easy; only 1: simpl; only 1: rewrite <- IHl; only 1: intuition).	0.056430	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: case O.compare; only 1: left; only 1: auto; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate).	0.022183	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_length	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	300	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: apply M.In_compat; only 1: congruence; only 1: congruence).	0.040050	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod	300	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply div_mod').	0.026192	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H1; only 1: clear H2; only 1: clear H0; only 1: compute; only 1: compute in H; only 1: compute in H1; only 1: rewrite H; only 1: rewrite H1; only 1: auto).	0.100583	20
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	300	0	synth with cache (only 1: firstorder).	0.039508	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction j; only 1: simpl; only 1: rewrite IHj; only 1: rewrite <- mul_assoc; only 1: f_equiv; only 1: rewrite mul_assoc; only 1: rewrite pow_pos_swap; only 1: rewrite mul_assoc; only 1: easy; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.146655	13
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_nth	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l₁; only 1: rewrite app_nil_r; only 1: easy; only 1: rewrite <- app_comm_cons; only 1: rewrite IHl₁; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	0.081009	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	300	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with ordered_type).	0.021727	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	300	0	synth with cache (only 1: eauto with ordered_type).	0.017578	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	0.063783	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct e; only 1: intros ?; only 1: destruct e'; only 1: intros ?; only 1: destruct e''; only 1: unfold ltk; only 1: unfold eqk; only 1: simpl; only 1: eauto with ordered_type).	0.080208	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold compare; only 1: destruct O.compare; only 1: elim_comp; only 1: auto; only 1: elim_comp; only 1: simpl; only 1: auto; only 1: elim_comp; only 1: auto).	0.085334	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i using Pos.peano_ind; only 1: rewrite Pos.add_1_l; only 1: rewrite pow_pos_succ; only 1: easy; only 1: rewrite Pos.add_succ_l; only 1: rewrite pow_pos_succ; only 1: rewrite pow_pos_succ; only 1: rewrite IHi; only 1: rewrite mul_assoc; only 1: easy).	0.064894	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	300	0.0	synth with cache (only 1: apply PermutationA_cons_app; only 1: easy).	0.035725	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	300	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: intuition).	0.048400	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: destruct 1; only 1: easy; only 1: destruct a; only 1: reflexivity; only 1: unfold BinNatDef.N.modulo; only 1: simpl; only 1: apply pos_div_eucl_remainder).	0.060628	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_iff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	300	0	synth with cache (only 1: reflexivity).	0.034866	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	300	0	synth with cache (only 1: exact M.empty_spec).	0.024128	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: split; only 1: apply le_0_l; only 1: apply mod_lt; only 1: destruct b; only 1: easy; only 1: easy).	0.071203	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.prod_length	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold BinNatDef.N.sqrtrem; only 1: unfold BinNatDef.N.sqrt; only 1: unfold BinPosDef.Pos.sqrt; only 1: destruct BinPosDef.Pos.sqrtrem; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.058413	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_refl	300	0.0	synth with cache (only 1: unfold lel; only 1: auto with arith).	0.027447	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct c; only 1: unfold compare; only 1: destruct O.compare; only 1: intros; only 1: discriminate; only 1: intros; only 1: destruct O.compare; only 1: discriminate; only 1: elim_comp; only 1: auto; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: unfold compare; only 1: destruct O.compare; only 1: intros; only 1: destruct O.compare; only 1: elim_comp; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: unfold compare; only 1: destruct O.compare; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: intros; only 1: destruct O.compare; only 1: discriminate; only 1: discriminate; only 1: elim_comp; only 1: auto).	0.262644	41
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons_cons	300	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.032225	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons	300	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.022124	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: destruct n; only 1: split; only 1: easy; only 1: easy; only 1: apply Pos.sqrt_spec).	0.046930	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold compare; only 1: destruct O.compare; only 1: auto; only 1: auto; only 1: auto).	0.047147	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	300	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.033926	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_neg	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.051425	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	300	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: discriminate).	0.036936	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_nil	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	300	0	synth with cache (only 1: apply O.lt_strorder).	0.028373	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	300	0	synth with cache (only 1: auto).	0.018619	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tl	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tran	300	0	synth with cache (only 1: auto).	0.019181	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appl	300	0	synth with cache (only 1: auto with datatypes).	0.051605	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	300	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: easy; only 1: easy).	0.038710	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appr	300	0	synth with cache (only 1: auto with datatypes).	0.033457	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite odd_add; only 1: easy).	0.033302	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply PermutationA_decompose; only 1: apply NoDupA_equivlistA_PermutationA; only 1: easy; only 1: easy; only 1: easy).	0.031412	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	300	0.0.0.0.0.0.0.0	synth with cache (only 1: apply mkmorph; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.043606	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_bit0; only 1: rewrite add_bit0; only 1: easy).	0.033134	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_cons	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: elim H1; only 1: intros ?; only 1: elim H2; only 1: auto; only 1: auto; only 1: auto).	0.098937	16
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	300	0.0.0.0.0.0	synth with cache (only 1: inversion 1; only 1: inversion_clear H0; only 1: destruct H1; only 1: simpl in *; only 1: intuition; only 1: eauto with ordered_type).	0.173160	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_l	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_r	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_nil	300	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	0.027104	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	300	0.0	synth with cache (only 1: simpl; only 1: easy).	0.030610	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	300	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.055739	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_greatest	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	300	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHl; only 1: easy).	0.045087	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: case O.compare; only 1: left; only 1: auto; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate).	0.040988	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_nonneg	300	0	synth with cache (only 1: apply le_0_l).	0.020981	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	300	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.059549	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_0	300	0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy).	0.026517	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_0	300	0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy).	0.025716	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	300	0.0	synth with cache (only 1: simpl; only 1: auto).	0.017055	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_le_length	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: destruct a; only 1: destruct n; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: auto; only 1: destruct p; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.pred_N_succ; only 1: trivial; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.pred_N_succ; only 1: trivial; only 1: destruct n; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: auto).	0.092687	26
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_succ	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_succ_r_div2; only 1: f_equal; only 1: destruct a; only 1: easy; only 1: easy; only 1: trivial).	0.037279	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	300	0.0	synth with cache (only 1: red; only 1: auto with arith).	0.015346	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	300	1.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.030410	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_succ	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_succ_r_div2; only 1: f_equal; only 1: destruct a; only 1: easy; only 1: easy; only 1: trivial).	0.107495	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	300	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto).	0.020274	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_Order	300	1.0.0.0.0.0	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: exact le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.040146	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_neg_r	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.034818	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	300	0	synth with cache (only 1: exact Integers_defn).	0.021453	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_succ_r	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.iter_succ).	0.026977	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_firstn	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.nat_po	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_succ_r	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.iter_succ).	0.045220	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite compare_sym; only 1: rewrite CompOpp_iff; only 1: apply compare_Lt).	0.025731	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_total_order	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	300	0	synth with cache (only 1: reflexivity).	0.019252	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: revert a m; only 1: induction n using peano_ind; only 1: intros ?; only 1: intros ?; only 1: rewrite add_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_succ_l; only 1: rewrite add_comm; only 1: rewrite <- add_succ_l; only 1: rewrite <- IHn; only 1: rewrite testbit_succ_r_div2; only 1: rewrite shiftr_succ_r; only 1: easy; only 1: apply le_0_l).	0.067478	19
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: easy; only 1: easy).	0.020110	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_cons	300	0	synth with cache (only 1: reflexivity).	0.018542	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	300	0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.110036	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct c; only 1: unfold compare; only 1: rewrite compare_Eq; only 1: rewrite compare_Eq; only 1: rewrite compare_Eq; only 1: transitivity y; only 1: auto; only 1: auto; only 1: unfold compare; only 1: rewrite compare_Lt; only 1: rewrite compare_Lt; only 1: rewrite compare_Lt; only 1: transitivity y; only 1: auto; only 1: auto; only 1: unfold compare; only 1: rewrite compare_Gt; only 1: rewrite compare_Gt; only 1: rewrite compare_Gt; only 1: transitivity y; only 1: auto; only 1: auto).	0.164878	26
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_high	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.add	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all2	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	300	0	synth with cache (only 1: firstorder).	0.040452	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	300	0.0.0.0.0.0.0	synth with cache (only 1: generalize Integers_has_no_ub; only 1: intros ?; only 1: red; only 1: intros ?; only 1: apply H; only 1: apply Finite_subset_has_lub; only 1: auto with sets arith).	0.030098	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	300	0	synth with cache (only 1: reflexivity).	0.017722	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: apply H0).	0.032903	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	300	0.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.112710	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_length	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	300	0.0.0	synth with cache (only 1: induction l; only 1: easy; only 1: easy).	0.023325	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold EquivBefore; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: intuition).	0.140773	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_app	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: intros ?; only 1: destruct l1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.045062	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lxor_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct BinPosDef.Pos.testbit; only 1: easy; only 1: trivial; only 1: destruct a'; only 1: simpl; only 1: destruct BinPosDef.Pos.testbit; only 1: easy; only 1: easy; only 1: simpl; only 1: apply pos_lxor_spec).	0.070217	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Below; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: intuition).	0.057718	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exact H).	0.030296	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_rev	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite firstn_skipn_rev; only 1: rewrite rev_involutive; only 1: rewrite rev_length; only 1: easy).	0.034292	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.050052	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Above; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: intuition).	0.109517	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	300	0	synth with cache (only 1: reflexivity).	0.036825	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lor_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert p' n; only 1: induction p; only 1: intros ?; only 1: destruct p'; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite orb_false_r; only 1: easy; only 1: intros ?; only 1: destruct p'; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite orb_false_r; only 1: easy; only 1: intros ?; only 1: destruct p'; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct n; only 1: trivial; only 1: trivial).	0.262244	52
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold EmptyBetween; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: intuition).	0.083421	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	300	0	synth with cache (only 1: reflexivity).	0.046859	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_rev	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	300	0	synth with cache (only 1: reflexivity).	0.028694	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lor_spec	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: simpl; only 1: rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply pos_lor_spec).	0.050750	12
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	300	0.0.0.0.0.0.0.0	synth with cache (only 1: apply mkmorph; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.073578	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_removelast	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_nil	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply length_zero_iff_nil; only 1: rewrite combine_length; only 1: simpl; only 1: rewrite Nat.min_0_r; only 1: reflexivity).	0.028744	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: case Smorph; only 1: constructor; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.073489	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_l	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: simpl; only 1: rewrite andb_false_r; only 1: trivial; only 1: simpl; only 1: apply pos_land_spec).	0.043649	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	300	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with *).	0.037424	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	300	0	synth with cache (only 1: apply @pair_compat).	0.018808	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	300	0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: easy).	0.026018	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: simpl; only 1: rewrite andb_true_r; only 1: trivial; only 1: simpl; only 1: apply pos_ldiff_spec).	0.044992	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_in	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros; only 1: simpl in *; only 1: tauto; only 1: intros; only 1: simpl in *; only 1: rewrite IHAdd; only 1: tauto).	0.090549	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	300	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.058053	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_length	300	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.028978	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	300	0.0	synth with cache (only 1: apply InfA_ltA; only 1: auto with *).	0.035585	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	300	0.0.0.0	synth with cache (only 1: apply SortA_InfA_InA; only 1: auto with *; only 1: auto with *; only 1: auto with *).	0.032547	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	300	0	synth with cache (only 1: firstorder).	0.024579	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	300	0	synth with cache (only 1: reflexivity).	0.021661	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.incl_Add_inv	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	300	0	synth with cache (only 1: reflexivity).	0.026376	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	300	0.0.0.0	synth with cache (only 1: apply SortA_NoDupA; only 1: auto with *; only 1: auto with *; only 1: auto with *).	0.048309	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	300	0	synth with cache (only 1: exact phi_ext).	0.019190	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	300	0.0	synth with cache (only 1: destruct 1; only 1: easy).	0.040031	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct choose; only 1: left; only 1: exists e; only 1: auto; only 1: right; only 1: auto).	0.036044	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	300	0.0	synth with cache (only 1: destruct 1; only 1: easy).	0.028825	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	300	0	synth with cache (only 1: reflexivity).	0.019339	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	300	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: invlist InA; only 1: auto with relations; only 1: left; only 1: apply Sort_In_cons_1 with l; only 1: auto with relations; only 1: auto with relations).	0.093056	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	300	0	synth with cache (only 1: reflexivity).	0.144636	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove	300	0.0	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.026009	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply NoDup_remove with a; only 1: easy).	0.018413	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	300	0	synth with cache (only 1: trivial).	0.135245	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply NoDup_remove; only 1: easy).	0.019981	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	300	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: split; only 1: easy; only 1: easy; only 1: constructor; only 1: easy; only 1: easy).	0.049331	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: elim ARth; only 1: intros; only 1: constructor; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.124544	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	300	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.033124	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	300	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.037901	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	300	0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.035586	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	300	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.055701	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_In	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct in_dec; only 1: rewrite IHl; only 1: intuition; only 1: subst; only 1: easy; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.065157	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	300	0	synth with cache (only 1: mrewrite).	0.027536	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	300	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.128353	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	300	0	synth with cache (only 1: mrewrite).	0.093102	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold MapsTo; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: apply @InA_eqk_eqke in H; only 1: destruct H; only 1: destruct x0; only 1: destruct H; only 1: compute in H; only 1: exists e; only 1: rewrite H; only 1: easy).	0.120527	17
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nodup	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: destruct in_dec; only 1: assumption; only 1: constructor; only 1: rewrite nodup_In; only 1: easy; only 1: assumption).	0.139898	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: inversion_clear 1; only 1: left; only 1: MO.order; only 1: right; only 1: rewrite <- H0; only 1: auto; only 1: inversion_clear 1; only 1: left; only 1: MO.order; only 1: right; only 1: rewrite H0; only 1: auto).	0.102431	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case m; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.047692	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_inv	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	300	0.0.0	synth with cache (only 1: unfold empty; only 1: case M.empty; only 1: auto).	0.049698	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	300	0.0	synth with cache (only 1: unfold if_zero; only 1: f_equiv').	0.066412	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold is_empty; only 1: case M.is_empty; only 1: auto; only 1: auto).	0.036742	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold is_empty; only 1: case M.is_empty; only 1: auto; only 1: intros; only 1: discriminate H).	0.026984	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	300	0.0.0.0	synth with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite @recursion_0; only 1: auto).	0.031085	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold mem; only 1: case M.mem; only 1: auto; only 1: auto).	0.022893	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	300	0.0	synth with cache (only 1: rewrite @In_alt2; only 1: apply Exists_nil).	0.032477	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite @recursion_succ; only 1: easy; only 1: easy; only 1: easy).	0.055169	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold mem; only 1: case M.mem; only 1: auto; only 1: intros; only 1: discriminate H).	0.037030	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	300	0.0.0.0	synth with cache (only 1: rewrite @In_alt2; only 1: rewrite @In_alt2; only 1: rewrite Exists_cons; only 1: intuition).	0.057661	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition).	0.024402	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	300	0.0	synth with cache (only 1: unfold def_add; only 1: f_equiv').	0.065253	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: inversion H).	0.027031	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt_iff	300	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold gt; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.037131	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition).	0.023164	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.034765	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold def_add; only 1: rewrite @recursion_0; only 1: easy).	0.045681	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth_error	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold MapsTo; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: intuition).	0.185828	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	300	0	synth with cache (only 1: apply gt_lt_iff).	0.171010	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold def_add; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.133970	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	300	0	synth with cache (only 1: apply gt_lt_iff).	0.169023	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case M.elements; only 1: firstorder).	0.043723	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induct n; only 1: rewrite def_add_0_l; only 1: rewrite add_0_l; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite def_add_succ_l; only 1: rewrite add_succ_l; only 1: rewrite H; only 1: easy).	0.070877	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold elements; only 1: case M.elements; only 1: firstorder).	0.039344	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le_iff	300	0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.036481	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: rewrite H1 in *; only 1: rewrite div_0_l in H; only 1: symmetry in H; only 1: apply lor_eq_0_l in H; only 1: easy; only 1: order'; only 1: intros ?; only 1: rewrite H1 in H; only 1: rewrite lor_0_l in H; only 1: apply bits_inj'; only 1: intros ?; only 1: intros ?; only 1: rewrite bits_0; only 1: apply le_ind with (4 := H2); only 1: solve_proper; only 1: trivial; only 1: clear n H2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- div2_bits; only 1: rewrite H; only 1: autorewrite with bitwise; only 1: rewrite H3; only 1: easy; only 1: trivial).	0.203813	33
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case M.elements; only 1: firstorder).	0.027000	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	300	0	synth with cache (only 1: apply ge_le_iff).	0.031055	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply Strict_super_set_contains_new_element; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: apply H; only 1: rewrite <- H3; only 1: auto with sets).	0.043177	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	300	0.0	synth with cache (only 1: unfold def_mul; only 1: f_equiv').	0.070365	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	300	0	synth with cache (only 1: auto with ordered_type).	0.034735	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.le_ge	300	0	synth with cache (only 1: apply ge_le_iff).	0.024199	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold def_mul; only 1: rewrite @recursion_0; only 1: easy).	0.022349	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_incl_length	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	300	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.039717	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold def_mul; only 1: rewrite @recursion_succ; only 1: auto with *; only 1: easy; only 1: f_equiv').	0.131936	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_div2_up	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: trivial).	0.038556	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	300	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.041742	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_length_incl	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: red in H; only 1: rewrite InA_cons in H; only 1: rewrite @eqke_def in H; only 1: intuition; only 1: right; only 1: exists x; only 1: easy).	0.053932	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NoDup_map_inv	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_length	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induct m; only 1: rewrite def_mul_0_r; only 1: rewrite mul_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite def_mul_succ_r; only 1: rewrite mul_succ_r; only 1: rewrite def_add_add; only 1: rewrite H; only 1: easy).	0.115016	13
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	300	0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite @eqk_def; only 1: intuition).	0.044042	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case M.add; only 1: unfold Add; only 1: firstorder).	0.028843	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_nth	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case M.add; only 1: unfold Add; only 1: firstorder).	0.032421	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	300	0.0.0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: destruct 1; only 1: destruct 1; only 1: eauto with *; only 1: trivial).	0.071014	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.in_seq	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	300	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: unfold predicate_equivalence; only 1: auto).	0.032195	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold remove; only 1: case M.remove; only 1: firstorder).	0.045321	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	300	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: unfold predicate_implication; only 1: auto).	0.024129	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold remove; only 1: case M.remove; only 1: firstorder).	0.051158	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold ltb; only 1: rewrite @recursion_0; only 1: easy).	0.044449	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.048326	9
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	300	0.0.0	synth with cache (only 1: destruct x; only 1: destruct y; only 1: reflexivity).	0.030580	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	300	0.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.026972	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold remove; only 1: case M.remove; only 1: firstorder).	0.039300	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	300	0.0.0	synth with cache (only 1: split; only 1: inversion 1; only 1: inversion 1).	0.022304	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold singleton; only 1: case M.singleton; only 1: firstorder).	0.030790	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.041021	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold singleton; only 1: case M.singleton; only 1: firstorder).	0.031637	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_f_morph	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold union; only 1: case M.union; only 1: firstorder).	0.047760	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite ltb_base; only 1: rewrite if_zero_succ; only 1: f_equiv').	0.032786	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	300	0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.024414	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold union; only 1: case M.union; only 1: firstorder).	0.032212	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	300	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold eqke; only 1: intuition).	0.029585	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.048839	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	300	0	synth with cache (only 1: auto).	0.019247	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite ltb_step; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.072790	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold union; only 1: case M.union; only 1: firstorder).	0.047947	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	300	0	synth with cache (only 1: auto).	0.017013	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	300	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.028794	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	300	0	synth with cache (only 1: auto).	0.019353	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: rewrite Empty_set_zero; only 1: trivial; only 1: intros; only 1: rewrite Union_commutative; only 1: rewrite <- Union_add; only 1: rewrite Union_commutative; only 1: apply Add_preserves_Finite; only 1: apply IHFinite; only 1: assumption).	0.041647	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold inter; only 1: case M.inter; only 1: firstorder).	0.029073	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	300	0.0	synth with cache (only 1: unfold eqke; only 1: intuition).	0.034047	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold inter; only 1: case M.inter; only 1: firstorder).	0.046803	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	300	0	synth with cache (only 1: eauto).	0.022649	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.map_simpl	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Finite_downward_closed with A; only 1: auto with sets; only 1: auto with sets).	0.025446	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold inter; only 1: case M.inter; only 1: firstorder).	0.034762	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	300	0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.040182	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	300	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto; only 1: congruence).	0.059998	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	300	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.020342	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: case M.diff; only 1: firstorder).	0.040679	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false; only 1: rewrite ltb_lt; only 1: apply nlt_ge).	0.026061	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.019142	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_inv_tail	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: case M.diff; only 1: firstorder).	0.040094	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	300	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.034666	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_impl	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	300	0.0	synth with cache (only 1: unfold even; only 1: f_equiv').	0.056780	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	300	0	synth with cache (only 1: reflexivity).	0.027217	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: case M.diff; only 1: firstorder).	0.035876	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	300	0.0.0	synth with cache (only 1: rewrite Forall_forall; only 1: rewrite Exists_exists; only 1: firstorder).	0.042080	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	300	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.051109	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case m; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.048555	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	300	0	synth with cache (only 1: reflexivity).	0.025389	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	300	0.0.0	synth with cache (only 1: unfold even; only 1: rewrite @recursion_0; only 1: firstorder).	0.040963	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	300	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: intuition).	0.039315	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cardinal; only 1: case M.cardinal; only 1: unfold elements in *; only 1: destruct M.elements; only 1: auto).	0.090713	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	300	0.0.0.0.0.0	synth with cache (only 1: unfold even; only 1: intros ?; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.054816	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply InA_eqA with p; only 1: auto using eqk_equiv; only 1: auto using eqk_equiv; only 1: auto using eqk_equiv).	0.035454	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold fold; only 1: case M.fold; only 1: unfold elements in *; only 1: destruct M.elements; only 1: auto).	0.078283	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: firstorder; only 1: exists x; only 1: auto; only 1: induction H; only 1: destruct y; only 1: exists e; only 1: auto; only 1: destruct IHInA; only 1: exists x0; only 1: auto).	0.061051	10
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	300	0.0.0.0	synth with cache (only 1: intros; only 1: case f; only 1: auto with bool; only 1: auto with bool).	0.027647	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_impl	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Forall_forall; only 1: rewrite Forall_forall; only 1: firstorder).	0.059780	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold half_aux; only 1: f_equiv; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct x1; only 1: intros ?; only 1: destruct y1; only 1: intros ?; only 1: destruct H1; only 1: compute in *; only 1: rewrite H1; only 1: rewrite H2; only 1: auto with *; only 1: f_equiv').	0.177640	19
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold compat_bool; only 1: unfold compat_P; only 1: unfold Proper; only 1: unfold respectful; only 1: unfold impl; only 1: intros; only 1: rewrite <- H1; only 1: firstorder).	0.060142	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	300	0.0.0.0.0	synth with cache (only 1: destruct y; only 1: unfold not in *; only 1: eauto; only 1: unfold not in *; only 1: eauto).	0.090893	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_compat	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: apply In_1 with x; only 1: auto; only 1: auto).	0.042384	12
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cardinal_is_functional with X X; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.042099	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_refl	300	0	synth with cache (only 1: apply Forall2_nil).	0.024340	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	300	0.0.0.0.0.0	synth with cache (only 1: inversion 1; only 1: inversion_clear H0; only 1: destruct H1; only 1: simpl in *; only 1: intuition; only 1: eauto).	0.087129	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	300	0.0.0.0.0.0	synth with cache (only 1: unfold or_cnf_opt; only 1: intros; only 1: rewrite is_cnf_tt_cnf_ff; only 1: rewrite orb_comm; only 1: simpl; only 1: apply if_cnf_tt).	0.035971	6
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply find_1; only 1: apply add_NoDup; only 1: auto; only 1: apply add_1; only 1: auto).	0.033203	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_sym	300	0	synth with cache (only 1: typeclasses eauto).	0.018562	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	300	0	synth with cache (only 1: intuition_in).	0.123369	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	300	0	synth with cache (only 1: typeclasses eauto).	0.020595	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	300	0	synth with cache (only 1: intuition_in).	0.038124	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	300	0.0.0	synth with cache (only 1: unfold half_aux; only 1: rewrite @recursion_0; only 1: auto).	0.031288	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	300	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.054111	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	300	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.024664	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	300	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.019393	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	300	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.120327	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	300	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.124519	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: auto with *; only 1: rewrite half_aux_0; only 1: simpl; only 1: rewrite add_0_l; only 1: easy; only 1: intros; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite add_succ_l; only 1: rewrite add_comm; only 1: f_equiv; only 1: easy).	0.133136	17
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: intros ?; only 1: constructor; only 1: apply <- Forall_forall; only 1: intros; only 1: apply H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: apply IHl; only 1: red; only 1: intros; only 1: apply H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.080809	19
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	300	0.0.0	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.076603	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	300	0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: order).	0.024337	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	300	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: rewrite H; only 1: auto).	0.056145	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: auto with *; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *; only 1: intros; only 1: rewrite half_aux_succ; only 1: simpl; only 1: destruct H; only 1: right; only 1: f_equiv; only 1: easy; only 1: auto with *).	0.139351	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	300	0	synth with cache (only 1: eauto).	0.033066	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	300	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity).	0.028747	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	300	0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: order).	0.043180	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	300	0.0.0.0	synth with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: easy).	0.027063	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_spec	300	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	0.040163	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	300	0	synth with cache (only 1: eauto).	0.036704	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	300	0.0.0.0.0.0	synth with cache (only 1: unfold half; only 1: rewrite one_succ; only 1: rewrite half_aux_succ; only 1: rewrite half_aux_0; only 1: simpl; only 1: easy).	0.036799	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: setoid_rewrite  <- H; only 1: auto).	0.054681	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: setoid_rewrite  <- H; only 1: auto).	0.074153	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.038425	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_spec	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.026828	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_ok	300	0	synth with cache (only 1: auto).	0.017545	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term'	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition).	0.052519	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.044320	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	300	0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: rewrite pos_sub_spec; only 1: case Pos.compare_spec; only 1: auto; only 1: intros; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.sub_add; only 1: easy; only 1: trivial; only 1: intros; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.sub_add; only 1: easy; only 1: auto).	0.046581	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xror_clause_clause	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	300	0.0.0	synth with cache (only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: trivial).	0.024647	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	300	0	synth with cache (only 1: auto).	0.035388	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_clause_clause	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition).	0.058391	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite pos_sub_spec; only 1: rewrite H; only 1: easy).	0.046350	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	300	0	synth with cache (only 1: auto).	0.034368	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: intuition; only 1: inv; only 1: simpl; only 1: destruct X.eq_dec; only 1: auto; only 1: constructors; only 1: intros ?; only 1: rewrite add_spec in *; only 1: intuition; only 1: intuition; only 1: auto).	0.103618	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	300	0	synth with cache (only 1: auto).	0.019361	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.044670	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_antisym; only 1: rewrite H; only 1: easy).	0.050085	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ratom_cnf	300	0.0.0.0.0	synth with cache (only 1: unfold ratom; only 1: intros; only 1: destruct orb; only 1: auto; only 1: auto).	0.032160	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.030519	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.023566	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.027588	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: easy).	0.081723	24
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial).	0.057136	22
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct X.eq_dec; only 1: inv; only 1: auto; only 1: inv; only 1: constructors; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition; only 1: auto).	0.135065	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: constructor; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: inversion H; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: inversion H; only 1: reflexivity).	0.090521	35
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	300	0.0.0.0.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_rapp; only 1: rewrite make_conj_app; only 1: tauto).	0.056627	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	300	0.0.0.0	synth with cache (only 1: unfold singleton; only 1: constructors; only 1: intros ?; only 1: inv).	0.026748	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: split; only 1: intros; only 1: inv; only 1: auto; only 1: intros; only 1: left; only 1: auto).	0.047480	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	300	0.0	synth with cache (only 1: unfold empty; only 1: constructors).	0.019083	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	300	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: red; only 1: intros; only 1: inv).	0.028214	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	300	0.0.0.0.0	synth with cache (only 1: unfold cnf_ff; only 1: unfold eval_cnf; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	0.116733	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_3	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_assoc; only 1: easy; only 1: simpl; only 1: symmetry; only 1: apply pos_sub_add; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply add_0_r; only 1: simpl; only 1: rewrite <- pos_sub_add; only 1: rewrite add_comm; only 1: rewrite <- pos_sub_add; only 1: rewrite Pos.add_comm; only 1: easy; only 1: simpl; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite pos_sub_opp; only 1: rewrite pos_sub_opp; only 1: rewrite add_comm; only 1: rewrite Pos.add_comm; only 1: apply pos_sub_add).	0.089419	35
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_tt	300	0.0.0.0.0	synth with cache (only 1: unfold cnf_tt; only 1: unfold eval_cnf; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	0.036148	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	300	0.0	synth with cache (only 1: unfold elements; only 1: intuition).	0.024112	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	300	0.0	synth with cache (only 1: unfold elements; only 1: auto).	0.020847	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: apply add_assoc_pos; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: simpl; only 1: apply add_assoc_pos).	0.041208	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	300	0	synth with cache (only 1: reflexivity).	0.021709	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: rewrite pos_sub_diag; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_diag; only 1: trivial).	0.036736	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	300	0.0	synth with cache (only 1: unfold pow; only 1: f_equiv').	0.076408	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equivb; only 1: unfold equal; only 1: intuition; only 1: apply andb_true_intro; only 1: split; only 1: apply submap_1; only 1: firstorder; only 1: firstorder; only 1: unfold Submap; only 1: firstorder; only 1: apply submap_1; only 1: firstorder; only 1: firstorder; only 1: unfold Submap; only 1: firstorder).	0.224291	15
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.048100	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold pow; only 1: rewrite @recursion_0; only 1: auto with *).	0.030172	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold pow; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.100473	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.mul_add_distr_r; only 1: easy; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.mul_compare_mono_r; only 1: case Pos.compare_spec; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_sub_distr_r; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_sub_distr_r; only 1: easy; only 1: trivial using Pos.lt_add_r; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.mul_compare_mono_r; only 1: case Pos.compare_spec; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_sub_distr_r; only 1: easy; only 1: trivial using Pos.lt_add_r; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_sub_distr_r; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.mul_add_distr_r; only 1: easy).	0.230036	54
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	300	0	synth with cache (only 1: exact min_elt_spec1).	0.023284	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	300	0	synth with cache (only 1: exact min_elt_spec3).	0.015890	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r; only 1: easy; only 1: apply mul_add_distr_pos; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite <- mul_opp_r; only 1: rewrite <- mul_opp_r; only 1: rewrite <- mul_opp_r; only 1: apply mul_add_distr_pos).	0.045339	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.one_succ	300	0	synth with cache (only 1: reflexivity).	0.019694	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: destruct ltb; only 1: auto with *; only 1: f_equiv; only 1: apply H; only 1: f_equiv; only 1: easy).	0.160263	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	300	0	synth with cache (only 1: reflexivity).	0.018578	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_0_l	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.026999	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_0	300	0	synth with cache (only 1: reflexivity).	0.024562	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	300	0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: unfold BinIntDef.Z.pred; only 1: apply opp_add_distr).	0.026644	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold log; only 1: apply strong_rec_wd; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.067827	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_pred	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: unfold BinIntDef.Z.pred; only 1: rewrite <- add_assoc; only 1: rewrite add_opp_diag_r; only 1: rewrite add_0_r; only 1: auto).	0.027863	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: unfold BinIntDef.Z.pred; only 1: rewrite <- add_assoc; only 1: rewrite add_opp_diag_r; only 1: rewrite add_0_r; only 1: auto).	0.034937	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_0_r	300	0	synth with cache (only 1: apply add_0_r).	0.019679	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_succ_r	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.sub; only 1: unfold BinIntDef.Z.succ; only 1: unfold BinIntDef.Z.pred; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: easy).	0.046611	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_0_l	300	0	synth with cache (only 1: easy).	0.023492	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_succ_l	300	0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: rewrite mul_add_distr_r; only 1: rewrite mul_1_l; only 1: easy).	0.023658	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: intros ?; only 1: intros ?; only 1: revert s; only 1: induction s'; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip; only 1: intros; only 1: inv; only 1: auto with *).	0.058487	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: apply elements_spec2'; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	0.025714	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eqb_eq	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: split; only 1: discriminate; only 1: discriminate; only 1: destruct m; only 1: simpl; only 1: split; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: split; only 1: intros ?; only 1: inversion H; only 1: reflexivity; only 1: intros ?; only 1: injection H; only 1: trivial; only 1: simpl; only 1: split; only 1: discriminate; only 1: discriminate; only 1: destruct m; only 1: simpl; only 1: split; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: split; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: split; only 1: intros ?; only 1: inversion H; only 1: reflexivity; only 1: injection 1; only 1: easy).	0.122617	50
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.id	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ltb_lt	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.ltb; only 1: unfold lt; only 1: destruct BinIntDef.Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.050176	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: intros ?; only 1: intros ?; only 1: revert s; only 1: induction s'; only 1: simpl; only 1: intuition; only 1: inv; only 1: simpl; only 1: unfold flip; only 1: intros; only 1: inv; only 1: rewrite IHs'; only 1: rewrite remove_spec; only 1: rewrite InA_cons; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.238009	19
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_app	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.add_term_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.leb_le	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.leb; only 1: unfold le; only 1: destruct BinIntDef.Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.051381	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iff	300	0.0.0.2.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros ?; only 1: rewrite H; only 1: auto).	0.033246	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	300	0.0	synth with cache (only 1: unfold eval_tt; only 1: auto).	0.022024	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: simpl; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: easy).	0.114826	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_double	300	0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl BinNatDef.N.to_nat; only 1: trivial; only 1: simpl BinNatDef.N.to_nat; only 1: apply Pos2Nat.inj_xO).	0.026519	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl BinNatDef.N.to_nat; only 1: trivial; only 1: simpl BinNatDef.N.to_nat; only 1: rewrite Pos.xI_succ_xO; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite Pos2Nat.inj_xO; only 1: easy).	0.036517	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	300	0	synth with cache (only 1: auto).	0.036712	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ	300	0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_succ).	0.029595	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	300	0	synth with cache (only 1: auto).	0.028065	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold rev_elements; only 1: simpl; only 1: rewrite rev_elements_app; only 1: rewrite rev_elements_app; only 1: rewrite rev_elements_app; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: easy).	0.044664	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_add	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add).	0.032068	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	300	0	synth with cache (only 1: auto).	0.021801	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: rewrite Pos.compare_eq_iff; only 1: split; only 1: intros ?; only 1: inversion H; only 1: reflexivity; only 1: intros ?; only 1: injection H; only 1: trivial; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: rewrite CompOpp_iff; only 1: rewrite Pos.compare_eq_iff; only 1: split; only 1: intros ?; only 1: inversion H; only 1: reflexivity; only 1: injection 1; only 1: easy).	0.167866	50
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: destruct a'; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	0.034374	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Sort_NoDupA; only 1: apply elements_3; only 1: auto).	0.030538	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: trivial; only 1: rewrite elements_node; only 1: rewrite rev_elements_node; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: rewrite rev_app_distr; only 1: simpl; only 1: rewrite app_assoc_reverse; only 1: easy).	0.060646	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_sub	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_sub	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: eauto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: case Pos.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: rewrite pos_sub_spec; only 1: case Pos.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.075433	31
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_pred	300	0.0.0	synth with cache (only 1: rewrite <- Nat.sub_1_r; only 1: rewrite N.pred_sub; only 1: apply inj_sub).	0.023840	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: unfold BinNatDef.N.div2; only 1: unfold BinNatDef.N.to_nat; only 1: rewrite Pos2Nat.inj_xI; only 1: rewrite Nat.div2_succ_double; only 1: trivial; only 1: unfold BinNatDef.N.div2; only 1: unfold BinNatDef.N.to_nat; only 1: rewrite Pos2Nat.inj_xO; only 1: rewrite Nat.div2_double; only 1: trivial; only 1: trivial).	0.048201	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_antisym	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: eauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: rewrite <- Pos.compare_antisym; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	0.053131	26
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	300	0	synth with cache (only 1: reflexivity).	0.017968	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_le_iff	300	0	synth with cache (only 1: reflexivity).	0.018391	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_compare	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_max	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.max; only 1: rewrite inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: apply Nat.max_r; only 1: apply Nat.eq_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: assumption; only 1: intros; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy).	0.051316	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	300	0	synth with cache (only 1: auto).	0.019418	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.min; only 1: rewrite inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: apply Nat.min_l; only 1: apply Nat.eq_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: assumption; only 1: intros; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy).	0.042025	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iter	300	0.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: apply Pos2Nat.inj_iter).	0.027947	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_l	300	0.0.0.0.0.0.1	synth with cache (only 1: unfold le; only 1: unfold BinIntDef.Z.max; only 1: rewrite compare_antisym; only 1: case BinIntDef.Z.compare; only 1: intuition; only 1: intuition; only 1: intuition).	0.033683	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	300	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.035686	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	300	0.0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold BinIntDef.Z.max; only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.033870	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	300	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	0.027966	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_l	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.min; only 1: unfold le; only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.037519	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_double	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_r	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold BinIntDef.Z.min; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.041953	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	300	0	synth with cache (only 1: nat2N).	0.041915	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: inv; only 1: case f; only 1: constructors; only 1: contradict H0; only 1: eapply filter_spec'; only 1: eauto; only 1: auto; only 1: auto).	0.048639	12
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ	300	0	synth with cache (only 1: nat2N).	0.031624	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.peano_ind	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	300	0	synth with cache (only 1: assumption).	0.018856	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	300	0	synth with cache (only 1: nat2N).	0.050488	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_correct	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_opp	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_opp).	0.028334	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.exists_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Exists; only 1: induction s; only 1: simpl; only 1: split; only 1: discriminate; only 1: intros ?; only 1: destruct H0; only 1: destruct H0; only 1: clear H1; only 1: inv; only 1: simpl; only 1: rewrite <- orb_lazy_alt; only 1: rewrite <- orb_lazy_alt; only 1: rewrite orb_true_iff; only 1: rewrite orb_true_iff; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: clear IHs1 IHs2; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: destruct H0; only 1: exists t0; only 1: auto; only 1: destruct H0; only 1: destruct H0; only 1: exists x; only 1: auto; only 1: destruct H0; only 1: destruct H0; only 1: exists x; only 1: auto; only 1: intros ?; only 1: destruct H0; only 1: destruct H0; only 1: inv; only 1: left; only 1: left; only 1: eauto; only 1: left; only 1: right; only 1: exists x; only 1: eauto; only 1: right; only 1: exists x; only 1: eauto).	0.343804	47
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	300	0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.compare_sub; only 1: unfold BinIntDef.Z.sub; only 1: destruct BinIntDef.Z.add; only 1: discriminate; only 1: exists p; only 1: easy; only 1: discriminate).	0.037141	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_add	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	300	0	synth with cache (only 1: nat2N).	0.038300	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	300	0	synth with cache (only 1: apply Z.add_compare_mono_l).	0.022818	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_mul	300	0	synth with cache (only 1: nat2N).	0.033721	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	300	0.0	synth with cache (only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.023371	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_div2	300	0	synth with cache (only 1: nat2N).	0.030231	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert i acc; only 1: induction s; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHs1; only 1: simpl; only 1: unfold flip at 2; only 1: apply IHs2).	0.059553	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_compare	300	0.0.0.0	synth with cache (only 1: rewrite N2Nat.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy).	0.019908	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	300	0.0.0	synth with cache (only 1: rewrite <- Z.add_1_l; only 1: rewrite <- Z.add_1_l; only 1: apply Z.add_compare_mono_l).	0.033829	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_min	300	0	synth with cache (only 1: nat2N).	0.038119	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert i; only 1: unfold elements; only 1: induction s; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite @fold_spec'; only 1: rewrite IHs2; only 1: simpl; only 1: auto).	0.064465	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.mul_compare_mono_l; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.mul_compare_mono_l; only 1: easy).	0.064654	28
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_max	300	0	synth with cache (only 1: nat2N).	0.037930	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: discriminate; only 1: symmetry; only 1: apply Zcompare_mult_compat; only 1: discriminate).	0.030341	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iter	300	0.0.0	synth with cache (only 1: rewrite N2Nat.inj_iter; only 1: rewrite id; only 1: easy).	0.025697	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: constructor 2; only 1: unfold MapsTo in *; only 1: auto).	0.184136	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.bi_induction	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.123131	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	300	0.0.0.0.0.0.0	synth with cache (only 1: case n; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: easy).	0.044615	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case n; only 1: simpl; only 1: intros ?; only 1: reflexivity; only 1: intros; only 1: apply False_ind; only 1: apply H; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: reflexivity).	0.053902	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: simpl; only 1: reflexivity).	0.029144	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.045016	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_eq	300	0.0.0	synth with cache (only 1: rewrite i2z_eqb; only 1: rewrite Z.eqb_eq; only 1: easy).	0.034999	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	0.072959	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	300	0.0.0.1	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.047707	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_neq	300	0.0.0.0	synth with cache (only 1: rewrite <- eqb_eq; only 1: destruct eqb; only 1: intuition; only 1: intuition).	0.058442	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_lt	300	0.0.0	synth with cache (only 1: rewrite i2z_ltb; only 1: rewrite Z.ltb_lt; only 1: easy).	0.027466	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_0_r	300	0	synth with cache (only 1: reflexivity).	0.028968	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: exists t0; only 1: destruct H0; only 1: simpl in *; only 1: split; only 1: auto; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: destruct IHm; only 1: auto; only 1: exists x0; only 1: intuition).	0.136239	22
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	0.071330	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	300	0.0.0.0	synth with cache (only 1: rewrite <- ltb_lt; only 1: destruct ltb; only 1: intuition; only 1: intuition).	0.045741	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_le	300	0.0.0	synth with cache (only 1: rewrite i2z_leb; only 1: rewrite Z.leb_le; only 1: easy).	0.034923	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_nle	300	0.0.0.0	synth with cache (only 1: rewrite <- leb_le; only 1: destruct leb; only 1: intuition; only 1: intuition).	0.039966	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_succ_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: unfold BinIntDef.Z.pow_pos; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.iter_add; only 1: easy; only 1: destruct 1; only 1: easy).	0.184369	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_neg_r	300	0.0.0.0	synth with cache (only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.034028	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.194069	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	300	0.0	synth with cache (only 1: unfold singleton; only 1: auto).	0.021745	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	300	0	synth with cache (only 1: reflexivity).	0.025111	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: split; only 1: intros; only 1: inv; only 1: auto; only 1: intros; only 1: auto).	0.048362	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.square_spec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.037702	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_spec	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: split; only 1: easy; only 1: split; only 1: unfold BinIntDef.Z.sqrt; only 1: intros ?; only 1: clear H; only 1: simpl BinIntDef.Z.succ; only 1: rewrite Pos.add_1_r; only 1: apply Pos.sqrt_spec; only 1: destruct 1; only 1: easy).	0.048234	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_neg	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.027787	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold BinIntDef.Z.sqrtrem; only 1: unfold BinIntDef.Z.sqrt; only 1: unfold BinPosDef.Pos.sqrt; only 1: destruct BinPosDef.Pos.sqrtrem; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: reflexivity).	0.045473	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.025516	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.even_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: induction e; only 1: simpl; only 1: i2z; only 1: trivial using Z.pos_sub_opp; only 1: simpl; only 1: i2z; only 1: trivial; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.262375	44
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.odd_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xcnf_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.double_spec	300	0	synth with cache (only 1: reflexivity).	0.038297	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_double_spec	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.024564	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_double_spec	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.024668	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.tauto_checker_sound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: split; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.218761	37
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_mod	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	300	0	synth with cache (only 1: trivial).	0.022602	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	300	0	synth with cache (only 1: reflexivity).	0.021562	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	300	0	synth with cache (only 1: reflexivity).	0.022024	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	300	0	synth with cache (only 1: reflexivity).	0.021554	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.045610	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	300	0	synth with cache (only 1: reflexivity).	0.018892	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	300	0	synth with cache (only 1: reflexivity).	0.020710	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subset_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	300	0	synth with cache (only 1: reflexivity).	0.021788	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	300	0	synth with cache (only 1: firstorder).	0.029897	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	300	0	synth with cache (only 1: reflexivity).	0.027566	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	300	0.0	synth with cache (only 1: intuition; only 1: invlist InA).	0.043525	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	300	0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: unfold L.eq; only 1: intros; only 1: setoid_rewrite elements_spec1; only 1: firstorder).	0.038446	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	300	0	synth with cache (only 1: reflexivity).	0.026394	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	300	0	synth with cache (only 1: reflexivity).	0.022327	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite InA_altdef; only 1: rewrite Exists_exists; only 1: firstorder).	0.044752	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	300	0	synth with cache (only 1: reflexivity).	0.021416	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	300	0	synth with cache (only 1: reflexivity).	0.016930	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_bf_map	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	300	0	synth with cache (only 1: reflexivity).	0.021113	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply BinInt.Z.le_antisymm; only 1: auto; only 1: auto).	0.030746	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros; only 1: inversion H).	0.022929	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.029940	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto; only 1: split; only 1: transitivity x0; only 1: symmetry; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity y; only 1: auto; only 1: auto; only 1: split; only 1: transitivity y0; only 1: auto; only 1: auto; only 1: auto).	0.149023	51
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	300	0	synth with cache (only 1: firstorder).	0.042260	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: rewrite app_assoc_reverse; only 1: easy).	0.030977	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.cons_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quotrem_eq	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: elim_compare x1 x2; only 1: red; only 1: auto; only 1: red; only 1: auto; only 1: red; only 1: auto).	0.053604	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem'	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem	300	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply quot_rem').	0.022191	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct b; only 1: trivial; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: destruct b; only 1: trivial; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy).	0.101556	33
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Peano.lt; only 1: induction s; only 1: auto; only 1: simpl; only 1: rewrite <- Nat.add_succ_r; only 1: rewrite <- Nat.add_succ_l; only 1: rewrite Nat.add_0_r; only 1: apply Nat.add_le_mono; only 1: etransitivity; only 1: apply IHs1; only 1: apply Nat.pow_le_mono; only 1: auto; only 1: auto; only 1: apply Nat.le_max_l; only 1: etransitivity; only 1: apply IHs2; only 1: apply Nat.pow_le_mono; only 1: auto; only 1: auto; only 1: apply Nat.le_max_r).	0.063547	20
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Peirce	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: absurd P; only 1: trivial; only 1: trivial).	0.026459	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct b; only 1: trivial; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: destruct b; only 1: trivial; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy; only 1: unfold BinIntDef.Z.rem; only 1: simpl; only 1: destruct BinNatDef.N.pos_div_eucl; only 1: destruct n0; only 1: easy; only 1: easy).	0.096947	33
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim2	300	0	synth with cache (only 1: tauto).	0.035441	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.043739	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_or	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l	300	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply rem_opp_l').	0.027409	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_and	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply not_imply_elim with Q; only 1: trivial; only 1: apply not_imply_elim2 with P; only 1: trivial).	0.023936	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply rem_opp_r').	0.027630	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	300	0.0.0	synth with cache (only 1: apply Nat.log2_le_pow2; only 1: auto with arith; only 1: apply mindepth_cardinal).	0.027166	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_to_imply	300	0	synth with cache (only 1: tauto).	0.025917	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_and_or	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_not_and	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_or_and	300	0	synth with cache (only 1: tauto).	0.029202	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: auto).	0.043265	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	300	0	synth with cache (only 1: tauto).	0.022345	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or	300	0	synth with cache (only 1: tauto).	0.027944	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_op_square	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply InA_app; only 1: destruct 1; only 1: generalize H; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: destruct 1; only 1: destruct H0; only 1: exists x0; only 1: split; only 1: auto; only 1: apply in_or_app; only 1: auto; only 1: generalize H; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: destruct 1; only 1: destruct H0; only 1: exists x0; only 1: split; only 1: auto; only 1: apply in_or_app; only 1: auto).	0.103794	23
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: trivial; only 1: unfold Zpower_alt; only 1: unfold BinIntDef.Z.pow; only 1: unfold BinIntDef.Z.pow_pos; only 1: revert a; only 1: induction p; only 1: simpl; only 1: intros; only 1: f_equal; only 1: rewrite Piter_mul_acc; only 1: rewrite Piter_op_square; only 1: rewrite IHp; only 1: easy; only 1: intros; only 1: symmetry; only 1: apply Z.mul_assoc; only 1: simpl; only 1: intros; only 1: rewrite Piter_mul_acc; only 1: rewrite Piter_op_square; only 1: rewrite IHp; only 1: easy; only 1: intros; only 1: symmetry; only 1: apply Z.mul_assoc; only 1: simpl; only 1: intros; only 1: rewrite Z.mul_1_r; only 1: auto; only 1: trivial).	0.117535	31
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	300	0	synth with cache (only 1: reflexivity).	0.023166	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: intuition; only 1: rewrite in_rev; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: intuition; only 1: rewrite <- in_rev; only 1: auto).	0.084187	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_def.Zpower_theory	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: intros ?; only 1: simpl; only 1: Z.nzsimpl; only 1: auto; only 1: intros ?; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.iter_op_succ; only 1: easy; only 1: apply Z.mul_assoc; only 1: intros ?; only 1: simpl; only 1: elim H; only 1: easy).	0.100337	15
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	300	0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_nil; only 1: tauto).	0.033501	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_greatest	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	300	0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.054440	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	0.112825	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	300	0.0.0.0	synth with cache (only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	0.085391	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	300	0.0.0	synth with cache (only 1: rewrite Zpower_equiv; only 1: rewrite Pos2Z.inj_pow; only 1: easy).	0.030473	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	300	0.0.0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.143087	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	300	0.0	synth with cache (only 1: rewrite InA_app_iff; only 1: tauto).	0.032353	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	300	0	synth with cache (only 1: congruence).	0.027724	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_opp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: destruct b; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p2; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p2; only 1: auto; only 1: destruct b; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p2; only 1: auto; only 1: unfold BinIntDef.Z.ggcd; only 1: unfold BinIntDef.Z.opp; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p2; only 1: auto).	0.274272	39
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	300	0	synth with cache (only 1: congruence).	0.048226	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold div; only 1: unfold modulo; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.sgn_abs; only 1: apply Z.div_mod; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	0.081716	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct n; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: auto; only 1: destruct n; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	0.067478	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: destruct b; only 1: compute; only 1: destruct H; only 1: auto; only 1: compute; only 1: trivial; only 1: compute; only 1: trivial).	0.041886	11
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_nil in H; only 1: discriminate).	0.041636	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	0.073911	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_equiv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.even_spec; only 1: destruct z; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.072085	18
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N'; only 1: easy; only 1: trivial).	0.044266	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: auto; only 1: auto; only 1: auto; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.064003	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.nat_N_Z	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.049163	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_equiv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.odd_spec; only 1: destruct z; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.088467	18
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	300	0	synth with cache (only 1: exact perm_trans).	0.020809	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N'; only 1: destruct n; only 1: unfold BinIntDef.Z.testbit; only 1: destruct a; only 1: easy; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct BinPosDef.Pos.pred_N; only 1: easy; only 1: easy; only 1: destruct H; only 1: easy; only 1: trivial).	0.073607	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	300	0	synth with cache (only 1: reflexivity).	0.051923	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_bool_iff	300	0.0.0	synth with cache (only 1: rewrite Z.even_spec; only 1: rewrite Zeven_equiv; only 1: easy).	0.069514	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: auto using perm_skip).	0.072463	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_0_l	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.031632	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	300	0.0.0	synth with cache (only 1: rewrite Z.odd_spec; only 1: rewrite Zodd_equiv; only 1: easy).	0.035972	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	300	0.0.0	synth with cache (only 1: constructor; only 1: inversion 1; only 1: constructor).	0.043093	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.035640	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_Z	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.056583	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_even_bool	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.negb_even).	0.031174	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	300	0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	0.076283	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	300	0	synth with cache (only 1: reflexivity).	0.026163	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.056399	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.negb_odd).	0.031518	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.069981	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_N	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_0	300	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.040273	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: left; only 1: exact I; only 1: destruct p; only 1: simpl; only 1: right; only 1: auto; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: exact I; only 1: destruct p; only 1: simpl; only 1: right; only 1: auto; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: exact I).	0.082711	24
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_N_nat	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.064109	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite InA_app_iff; only 1: rewrite InA_app_iff; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.081566	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: unfold MapsTo in *; only 1: auto).	0.154568	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: trivial).	0.031582	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_N_nat	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.041186	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eapply InA_nil; only 1: eapply H; only 1: eapply InA_cons_hd; only 1: easy).	0.031003	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: tauto).	0.112277	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_nat_N	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.038120	7
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: auto; only 1: rewrite <- app_comm_cons; only 1: rewrite <- app_comm_cons; only 1: constructor; only 1: assumption).	0.066321	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	300	0.0.0.0.0	synth with cache (only 1: destruct l; only 1: trivial; only 1: intros ?; only 1: apply equivlistA_cons_nil in H; only 1: easy).	0.042285	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: intros ?; only 1: clear H; only 1: destruct a; only 1: simpl; only 1: firstorder; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: firstorder; only 1: intros ?; only 1: clear H; only 1: unfold BinIntDef.Z.testbit; only 1: simpl; only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: trivial; only 1: destruct p0; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: auto; only 1: destruct 1; only 1: easy).	0.214268	53
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.id	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.037002	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_lb	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	300	0.0	synth with cache (only 1: intros ?; only 1: apply InA_double_head).	0.039616	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.055544	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_dec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: tauto).	0.082995	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	300	0.0	synth with cache (only 1: intros ?; only 1: apply InA_permute_heads).	0.024640	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: assumption).	0.039047	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	300	0.0	synth with cache (only 1: intros ?; only 1: apply InA_app_idem).	0.033695	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.is_nonneg	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.056271	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: intros ?; only 1: clear H; only 1: destruct a; only 1: simpl; only 1: firstorder; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: firstorder; only 1: intros ?; only 1: clear H; only 1: unfold BinIntDef.Z.testbit; only 1: simpl; only 1: destruct a; only 1: auto; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: trivial; only 1: destruct p0; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: auto; only 1: destruct 1; only 1: easy).	0.197954	52
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_app; only 1: easy; only 1: easy).	0.037713	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	300	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct BinIntDef.Z.odd; only 1: intuition; only 1: intuition).	0.093420	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Permutation_app; only 1: auto; only 1: auto).	0.035528	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	300	0	synth with cache (only 1: reflexivity).	0.161126	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	300	0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.175957	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_Sn	300	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.even_succ; only 1: easy).	0.058738	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pos	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.033686	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	300	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.odd_succ; only 1: easy).	0.066288	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_compare	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.063315	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_le	300	0.0.0	synth with cache (only 1: unfold Z.le; only 1: rewrite inj_compare; only 1: easy).	0.048381	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	300	0.0	synth with cache (only 1: apply N.pos_div_eucl_remainder; only 1: easy).	0.046232	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_pred	300	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.even_pred; only 1: easy).	0.076202	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	300	0.0.0	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: easy).	0.040188	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: exists t0; only 1: destruct H0; only 1: simpl in *; only 1: split; only 1: auto with ordered_type; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: destruct IHm; only 1: auto; only 1: exists x0; only 1: intuition).	0.286101	22
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_ge	300	0.0.0	synth with cache (only 1: unfold Z.ge; only 1: rewrite inj_compare; only 1: easy).	0.034074	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_pred	300	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.odd_pred; only 1: easy).	0.048090	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.031204	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_gt	300	0.0.0	synth with cache (only 1: unfold Z.gt; only 1: rewrite inj_compare; only 1: easy).	0.047799	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite app_comm_cons; only 1: rewrite Permutation_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	0.161898	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	300	0.0.0.0	synth with cache (only 1: destruct z; only 1: easy; only 1: easy; only 1: easy).	0.034816	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_div2	300	0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: rewrite Zdiv2_odd_eqn  at 1; only 1: rewrite H; only 1: rewrite Z.add_0_r; only 1: easy).	0.065656	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_add	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.040895	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mul	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.049272	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_div2	300	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy; only 1: rewrite Pos.pred_double_succ; only 1: easy).	0.066871	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.141069	27
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	300	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: trivial; only 1: rewrite perm_swap; only 1: apply perm_skip; only 1: easy).	0.042053	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_sub_mask; only 1: unfold BinPosDef.Pos.sub; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: easy; only 1: easy).	0.051730	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	300	0	synth with cache (only 1: auto).	0.029808	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.059157	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite inj_sub_max; only 1: unfold N.le in H; only 1: rewrite N.compare_antisym in H; only 1: rewrite <- inj_compare in H; only 1: rewrite Z.compare_sub in H; only 1: destruct BinIntDef.Z.sub; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	0.068644	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_quot2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Zeven_bool_iff in H; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite Zodd_even_bool; only 1: rewrite H; only 1: rewrite Z.add_0_r; only 1: easy).	0.050253	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_succ	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	0.049215	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Permutation_rev; only 1: rewrite <- Permutation_rev; only 1: easy).	0.052317	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zodd_bool_iff in H0; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite H0; only 1: f_equal; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: easy; only 1: destruct H; only 1: easy).	0.086436	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	300	0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.pred; only 1: rewrite N.pred_sub; only 1: rewrite inj_sub_max; only 1: easy).	0.034039	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold BinIntDef.Z.pred; only 1: rewrite N.pred_sub; only 1: rewrite inj_sub; only 1: trivial; only 1: apply N.le_succ_l in H; only 1: easy).	0.050080	7
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	300	1	synth with cache (only 1: exact Permutation_length).	0.055542	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_min	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: rewrite inj_compare; only 1: case BinNatDef.N.compare; only 1: easy; only 1: easy; only 1: easy).	0.054705	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zodd_bool_iff in H0; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite H0; only 1: unfold BinIntDef.Z.sub; only 1: f_equal; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: destruct H; only 1: easy; only 1: easy).	0.106514	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_max	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: rewrite inj_compare; only 1: case N.compare_spec; only 1: intros; only 1: subst; only 1: trivial; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial).	0.042904	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_opp	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.047511	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: auto; only 1: auto; only 1: apply H1; only 1: auto; only 1: induction l; only 1: auto; only 1: auto; only 1: eauto).	0.121570	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.land_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_nil in H; only 1: destruct l; only 1: discriminate; only 1: discriminate).	0.033843	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mod	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: rewrite Z.quot_div_nonneg; only 1: rewrite inj_div; only 1: trivial; only 1: apply is_nonneg; only 1: easy).	0.055781	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Z_modulo_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zsplit2	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionality.proof_irrelevance	300	0.1	synth with cache (only 1: apply ext_prop_dep_proof_irrel_cic; only 1: exact propositional_extensionality).	0.023709	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_rem	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: rewrite Z.rem_mod_nonneg; only 1: rewrite inj_mod; only 1: trivial; only 1: easy; only 1: apply is_nonneg; only 1: easy).	0.059720	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_ex	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	300	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.035555	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot2	300	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.034913	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	300	0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	0.041751	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_ex	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: rewrite Z.pow_0_l; only 1: easy; only 1: easy; only 1: destruct m; only 1: trivial; only 1: apply Pos2Z.inj_pow).	0.070310	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_testbit	300	0	synth with cache (only 1: apply Z.testbit_of_N).	0.040268	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.150864	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.050819	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.067876	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.odd_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.076981	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_iff	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply inj; only 1: trivial; only 1: tauto; only 1: intros; only 1: subst; only 1: easy).	0.049137	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	300	0	synth with cache (only 1: reflexivity).	0.030853	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pos	300	0	synth with cache (only 1: trivial).	0.026969	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	300	0	synth with cache (only 1: reflexivity).	0.023601	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	300	0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.even_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.081463	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_comm; only 1: apply Zeven_plus_Zodd; only 1: easy; only 1: easy).	0.032677	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_add	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: destruct m; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.141207	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_even; only 1: rewrite <- Z.negb_even; only 1: rewrite Bool.negb_true_iff; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.even_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.105722	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mul	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.072130	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_succ	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: intros; only 1: rewrite inj_add; only 1: apply N.add_1_r; only 1: assumption; only 1: easy).	0.051714	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	300	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: rewrite Z.even_mul; only 1: rewrite H; only 1: easy).	0.072558	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_sub	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: destruct m; only 1: trivial; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_sub_mask; only 1: unfold BinPosDef.Pos.sub; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 1; only 1: easy; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.083625	25
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: apply Zeven_mult_Zeven_l; only 1: easy).	0.027554	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	300	0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.odd_mul; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.063830	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction s; only 1: intros; only 1: inversion heqss'; only 1: subst; only 1: simpl; only 1: assumption; only 1: intros; only 1: inversion heqss'; only 1: subst; only 1: simpl; only 1: apply Comp; only 1: assumption; only 1: apply IHs; only 1: assumption; only 1: assumption).	0.081279	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_compare	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- N2Z.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: tauto; only 1: trivial).	0.034974	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_le	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite inj_compare; only 1: easy; only 1: trivial; only 1: tauto).	0.048566	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite inj_compare; only 1: easy; only 1: trivial; only 1: tauto).	0.047653	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_min	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	0.073138	34
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: simpl; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: trivial; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	0.138658	38
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	300	0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_nat; only 1: rewrite iter_op_succ; only 1: trivial; only 1: apply Nat.add_assoc).	0.033290	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mod	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: clear; only 1: simpl; only 1: rewrite <- N2Z.id; only 1: f_equal; only 1: rewrite N2Z.inj_mod; only 1: easy; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: destruct m; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy).	0.085497	33
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: intros ?; only 1: rewrite add_1_l; only 1: rewrite inj_succ; only 1: easy; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite inj_succ; only 1: rewrite inj_succ; only 1: rewrite IHp; only 1: easy).	0.058434	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros; only 1: rewrite Z.quot_div_nonneg; only 1: rewrite inj_div; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	0.065948	15
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite mul_succ_l; only 1: rewrite inj_add; only 1: rewrite IHp; only 1: rewrite inj_succ; only 1: easy).	0.063129	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	300	0	synth with cache (only 1: trivial).	0.018080	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros; only 1: rewrite Z.rem_mod_nonneg; only 1: rewrite inj_mod; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	0.058131	15
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	300	0.0.0.0	synth with cache (only 1: rewrite xI_succ_xO; only 1: rewrite inj_succ; only 1: rewrite inj_xO; only 1: easy).	0.037921	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div2	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: trivial).	0.078749	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.081980	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.eqb_false	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: trivial; only 1: intros; only 1: rewrite <- N2Z.id; only 1: rewrite N2Z.inj_pow; only 1: rewrite id; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	0.045793	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros ?; only 1: subst; only 1: trivial).	0.021358	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_testbit	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	0.033887	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.036608	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.034997	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	300	0.0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_lt_iff; only 1: easy).	0.027113	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id_abs	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.027769	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	300	0.0.0.0	synth with cache (only 1: unfold le; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_le_iff; only 1: easy).	0.023179	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.028133	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	300	0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_gt_iff; only 1: easy).	0.025667	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	300	0	synth with cache (only 1: constructors).	0.019457	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_0	300	0	synth with cache (only 1: reflexivity).	0.022329	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	300	0.0.0.0	synth with cache (only 1: unfold ge; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_ge_iff; only 1: easy).	0.020609	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	300	0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: intuition; only 1: inv).	0.043583	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	300	0	synth with cache (only 1: reflexivity).	0.024926	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_to_nat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.433137	257
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	300	0	synth with cache (only 1: reflexivity).	0.024772	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.026591	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_1_r; only 1: rewrite inj_sub; only 1: rewrite Nat.sub_1_r; only 1: easy; only 1: easy).	0.024032	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	300	0	synth with cache (only 1: intuition).	0.019507	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_succ; only 1: assumption; only 1: assumption; only 1: apply Z.le_le_succ_r; only 1: assumption).	0.047527	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_add	300	0.0.0	synth with cache (only 1: unfold jump; only 1: f_equal; only 1: apply Pos.add_assoc).	0.028138	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	300	0.0.0	synth with cache (only 1: rewrite <- sub_1_r; only 1: rewrite <- Nat.sub_1_r; only 1: apply inj_sub_max).	0.020703	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- isok_iff; only 1: auto).	0.030443	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lxor_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_add; only 1: trivial; only 1: tauto; only 1: tauto; only 1: trivial; only 1: apply Z.add_nonneg_nonneg; only 1: trivial; only 1: tauto).	0.049183	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.min; only 1: rewrite inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_l; only 1: rewrite H; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy).	0.047417	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	300	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold gt; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.036699	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_simpl	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: rewrite <- jump_add; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: rewrite <- jump_add; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: unfold tail; only 1: f_equal).	0.053578	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- isok_iff; only 1: auto).	0.024841	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt	300	0	synth with cache (only 1: apply gt_lt_iff).	0.026926	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.048017	13
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.max; only 1: rewrite inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_r; only 1: rewrite H; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy).	0.051676	18
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_tl	300	0.0.0.0.0	synth with cache (only 1: unfold tail; only 1: rewrite <- jump_add; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.032695	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_gt	300	0	synth with cache (only 1: apply gt_lt_iff).	0.024096	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_sub; only 1: trivial; only 1: trivial; only 1: Z.order; only 1: apply Z.le_0_sub; only 1: easy).	0.046503	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le_iff	300	0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.044760	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: destruct 1; only 1: auto with arith; only 1: intros ?; only 1: clear H; only 1: simpl BinPosDef.Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: apply IHn; only 1: easy).	0.042336	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le	300	0	synth with cache (only 1: apply ge_le_iff).	0.043054	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_pred; only 1: apply Z.lt_le_incl; only 1: assumption; only 1: apply Z.lt_succ_r; only 1: rewrite Z.succ_pred; only 1: assumption).	0.053220	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.le_ge	300	0	synth with cache (only 1: apply ge_le_iff).	0.023945	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id_max	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: rewrite id; only 1: easy; only 1: auto with arith).	0.032923	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_compare; only 1: trivial; only 1: tauto; only 1: tauto; only 1: trivial).	0.039924	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_ltb	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.gtb; only 1: unfold BinIntDef.Z.ltb; only 1: rewrite compare_antisym; only 1: case BinIntDef.Z.compare; only 1: easy; only 1: easy; only 1: easy).	0.036957	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	300	0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: subst; only 1: easy).	0.030545	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_leb	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.geb; only 1: unfold BinIntDef.Z.leb; only 1: rewrite compare_antisym; only 1: case BinIntDef.Z.compare; only 1: easy; only 1: easy; only 1: easy).	0.064562	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: assumption; only 1: easy).	0.045288	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_lt	300	0.0	synth with cache (only 1: rewrite gtb_ltb; only 1: apply ltb_lt).	0.047838	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite inj_compare; only 1: easy; only 1: trivial; only 1: tauto).	0.174363	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_succ	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_le	300	0.0	synth with cache (only 1: rewrite geb_leb; only 1: apply leb_le).	0.038899	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_pred_double	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold tail; only 1: rewrite <- jump_add; only 1: rewrite <- jump_add; only 1: f_equal; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.succ_pred_double; only 1: rewrite Pos.add_diag; only 1: easy).	0.045256	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.pred_succ; only 1: easy).	0.027261	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_spec	300	0.0	synth with cache (only 1: rewrite gtb_ltb; only 1: apply ltb_spec).	0.035423	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_spec	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold hd; only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: destruct p; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: f_equal).	0.062881	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	300	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: simpl in H1; only 1: easy).	0.063163	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite inj_compare; only 1: easy; only 1: trivial; only 1: tauto).	0.135142	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_spec	300	0.0	synth with cache (only 1: rewrite geb_leb; only 1: apply leb_spec).	0.032783	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_trichotomy).	0.065683	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_min	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_min; only 1: tauto; only 1: trivial; only 1: apply Z.min_glb; only 1: trivial; only 1: tauto).	0.048347	10
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	300	0.0.0.0.0.0	synth with cache (only 1: unfold hd; only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.060063	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: apply Nat.mul_eq_0 in H1; only 1: destruct H1; only 1: elim H; only 1: easy; only 1: elim H0; only 1: easy).	0.051204	17
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zne	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: f_equal; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.succ_pred_double; only 1: rewrite Pos.add_diag; only 1: easy).	0.050074	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Pos2Nat.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: trivial; only 1: trivial).	0.029530	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zgt	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_max	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_max; only 1: tauto; only 1: trivial; only 1: transitivity n; only 1: trivial; only 1: apply Z.le_max_l).	0.048303	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zge	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zeq	300	0	synth with cache (only 1: apply Z.lt_gt_cases).	0.024102	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_lt	300	0	synth with cache (only 1: apply Z.le_ngt).	0.036412	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply Pos.min_l; only 1: apply Pos.le_1_l; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply Pos.min_r; only 1: apply Pos.le_1_l; only 1: unfold BinPosDef.Pos.min; only 1: rewrite <- inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_l; only 1: rewrite H; only 1: auto; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: easy; only 1: easy).	0.095832	30
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	300	0	synth with cache (only 1: apply Z.lt_nge).	0.025508	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	300	0	synth with cache (only 1: trivial).	0.024870	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	300	0.0.0.0.0	synth with cache (only 1: rewrite mul_comm; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.198382	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_not_le	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.032536	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply Pos.max_r; only 1: apply Pos.le_1_l; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply Pos.max_l; only 1: apply Pos.le_1_l; only 1: unfold BinPosDef.Pos.max; only 1: rewrite <- inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_r; only 1: rewrite H; only 1: auto; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: easy; only 1: easy).	0.079021	30
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_ge_lt	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.032139	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	300	0	synth with cache (only 1: reflexivity).	0.022241	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_lt_ge	300	0	synth with cache (only 1: trivial).	0.027167	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	300	0	synth with cache (only 1: auto).	0.018322	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_gt_le	300	0	synth with cache (only 1: trivial).	0.023474	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	300	0.0.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: rewrite <- Pos2Nat.inj_succ; only 1: apply Pos2Nat.id).	0.020356	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite abs_N_spec; only 1: rewrite Z.abs_pow; only 1: rewrite Z2N.inj_pow; only 1: rewrite <- abs_N_spec; only 1: f_equal; only 1: symmetry; only 1: apply abs_N_nonneg; only 1: assumption; only 1: apply Z.abs_nonneg; only 1: assumption).	0.043453	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_diag	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	300	0.0.0	synth with cache (only 1: rewrite id_succ; only 1: rewrite Pos.pred_succ; only 1: trivial).	0.028073	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	0.037892	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	300	0.0.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: apply Nat2Pos.id; only 1: auto with arith).	0.022686	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_opp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: eauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	0.075010	24
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	300	0.0	synth with cache (only 1: rewrite id_succ; only 1: auto).	0.018684	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.048827	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.043910	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	300	0	synth with cache (only 1: reflexivity).	0.021791	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_asym	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_asymm).	0.041332	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply Pos2Z.inj_succ).	0.032472	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	300	0.0.0.2.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	0.091278	45
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_irrefl	300	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_irrefl).	0.038260	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	300	0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	0.030734	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite id_succ; only 1: easy).	0.020476	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	300	0	synth with cache (only 1: apply Z.lt_eq_cases).	0.025484	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	300	0.0.0.0.0	synth with cache (only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite id_succ; only 1: rewrite id_succ; only 1: easy).	0.023157	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.id	300	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- Z_N_nat; only 1: rewrite N2Z.id; only 1: rewrite Nat2N.id; only 1: auto).	0.026264	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	300	0.0.0.0	synth with cache (only 1: rewrite Pos2Nat.inj_compare; only 1: rewrite id_succ; only 1: rewrite id_succ; only 1: trivial).	0.029356	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_trans	300	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: transitivity m; only 1: easy; only 1: easy).	0.060600	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_trans	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.065715	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pos2Nat.inj_succ; only 1: easy).	0.037975	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	300	0.0.0.2.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: assumption).	0.102642	35
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	300	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Z.inj_compare; only 1: rewrite <- Nat2N.inj_compare; only 1: easy).	0.030046	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pos2Nat.inj_add; only 1: apply Nat.mul_add_distr_r).	0.029831	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_trans	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.045789	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_le	300	0.0.0.0	synth with cache (only 1: unfold Z.le; only 1: rewrite inj_compare; only 1: rewrite nat_compare_le; only 1: easy).	0.031479	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.050634	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	300	0.0.0.0	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: rewrite nat_compare_lt; only 1: easy).	0.029870	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pos.add_carry_spec; only 1: rewrite Pmult_nat_succ_morphism; only 1: easy).	0.130279	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	300	0.0.0.0	synth with cache (only 1: unfold Z.ge; only 1: rewrite inj_compare; only 1: rewrite nat_compare_ge; only 1: easy).	0.031570	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	300	0	synth with cache (only 1: apply Z.succ_le_mono).	0.027010	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: apply Nat.mul_add_distr_l).	0.020830	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	300	0.0.0.0	synth with cache (only 1: unfold Z.gt; only 1: rewrite inj_compare; only 1: rewrite nat_compare_gt; only 1: easy).	0.027186	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	300	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.023213	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Nat.mul_comm; only 1: simpl; only 1: rewrite Nat.add_0_r; only 1: easy).	0.026711	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	300	0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite N_nat_Z; only 1: apply Zabs2N.id_abs).	0.028101	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.038385	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_add	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_add; only 1: rewrite N2Z.inj_add; only 1: easy).	0.038433	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.033930	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_mul; only 1: rewrite N2Z.inj_mul; only 1: easy).	0.028364	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	300	0	synth with cache (only 1: apply Z.succ_le_mono).	0.027543	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_sub; only 1: rewrite N2Z.inj_sub_max; only 1: easy).	0.055716	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	300	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.026769	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.026953	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite nat_compare_le; only 1: rewrite Nat2N.inj_compare; only 1: intros; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_sub; only 1: rewrite N2Z.inj_sub; only 1: easy; only 1: easy).	0.047653	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	300	0.0	synth with cache (only 1: apply Z.lt_nge; only 1: apply Z.lt_succ_diag_r).	0.031260	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	300	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_pred; only 1: rewrite N2Z.inj_pred_max; only 1: easy).	0.027413	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_succ	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.032135	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_succ	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.031234	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite nat_compare_lt; only 1: rewrite Nat2N.inj_compare; only 1: intros; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_pred; only 1: rewrite N2Z.inj_pred; only 1: easy; only 1: easy).	0.075900	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_min	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_min; only 1: rewrite N2Z.inj_min; only 1: easy).	0.035411	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_succ	300	0	synth with cache (only 1: apply Z.lt_succ_r).	0.088177	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_max; only 1: rewrite N2Z.inj_max; only 1: easy).	0.039614	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_le_succ	300	0	synth with cache (only 1: apply Z.le_succ_l).	0.095077	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.id	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Nat.id; only 1: rewrite Z2N.id; only 1: auto; only 1: assumption).	0.032426	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_le	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.025338	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_le	300	0	synth with cache (only 1: apply Z.lt_succ_r).	0.018727	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_gt	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.031892	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply inj; only 1: trivial; only 1: tauto; only 1: intros; only 1: subst; only 1: easy).	0.033921	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_0	300	0	synth with cache (only 1: reflexivity).	0.022015	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_le	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: apply Z.le_succ_l; only 1: easy).	0.033012	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	300	0	synth with cache (only 1: reflexivity).	0.022055	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_pred	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_lt_pred).	0.042369	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	300	0	synth with cache (only 1: reflexivity).	0.021781	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_add	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_add; only 1: rewrite N2Nat.inj_add; only 1: easy; only 1: trivial; only 1: tauto).	0.037842	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_pred	300	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.021356	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	300	0	synth with cache (only 1: apply Z.lt_le_pred).	0.024714	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_mul; only 1: rewrite N2Nat.inj_mul; only 1: easy; only 1: trivial; only 1: tauto).	0.038955	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.033956	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_succ; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: assumption).	0.034810	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	300	0	synth with cache (only 1: exact Pos2Z.neg_le_pos).	0.020587	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_sub; only 1: rewrite N2Nat.inj_sub; only 1: easy; only 1: assumption).	0.041455	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_pos_0	300	0.0.0	synth with cache (only 1: intros ?; only 1: unfold Z.gt; only 1: easy).	0.035725	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.028874	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	300	0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_pred; only 1: rewrite N2Nat.inj_pred; only 1: easy).	0.024249	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_neg_0	300	0.0.0	synth with cache (only 1: intros ?; only 1: unfold Z.lt; only 1: constructor).	0.024943	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- Nat2Z.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: tauto; only 1: trivial).	0.042806	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_nat	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite inj_compare; only 1: easy; only 1: trivial; only 1: tauto).	0.043707	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	300	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: easy).	0.046520	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite inj_compare; only 1: easy; only 1: trivial; only 1: tauto).	0.035663	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.053564	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.046270	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_min	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_min; only 1: rewrite N2Nat.inj_min; only 1: easy).	0.163208	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	300	0.0.0	synth with cache (only 1: intuition; only 1: apply Z.add_le_mono_l; only 1: assumption).	0.030218	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_max	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_max; only 1: rewrite N2Nat.inj_max; only 1: easy).	0.040406	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	300	0	synth with cache (only 1: apply Z.add_le_mono_r).	0.025850	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	300	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.023288	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	300	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.030198	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	300	0	synth with cache (only 1: apply Z.add_lt_mono_r).	0.025704	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.034722	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	300	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.028557	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	300	0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite N_nat_Z; only 1: apply Zabs2N.id_abs).	0.030908	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	300	0	synth with cache (only 1: apply Z.add_le_mono_r).	0.026291	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id	300	0.0.0.0.0.0	synth with cache (only 1: case n; only 1: auto; only 1: simpl; only 1: intros ?; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto with arith).	0.033469	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	300	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.024740	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	300	0	synth with cache (only 1: reflexivity).	0.024475	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	300	0	synth with cache (only 1: apply Z.add_lt_mono_r).	0.024514	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	300	0	synth with cache (only 1: reflexivity).	0.025091	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.041832	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	300	0	synth with cache (only 1: reflexivity).	0.021379	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: assumption).	0.031494	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.038300	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_add; only 1: rewrite N2Nat.inj_add; only 1: easy; only 1: trivial; only 1: tauto).	0.046300	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	0.025737	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: easy).	0.026010	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	0.078651	37
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	300	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.028946	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_sub; only 1: rewrite N2Nat.inj_sub; only 1: easy; only 1: easy).	0.040848	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_pred; only 1: rewrite N2Nat.inj_pred; only 1: easy; only 1: assumption).	0.035588	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- N2Nat.inj_compare; only 1: rewrite Zabs2N.abs_N_nonneg; only 1: rewrite Zabs2N.abs_N_nonneg; only 1: apply Z2N.inj_compare; only 1: trivial; only 1: tauto; only 1: tauto; only 1: trivial).	0.042903	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.043080	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite inj_compare; only 1: easy; only 1: trivial; only 1: tauto).	0.044688	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.042890	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite inj_compare; only 1: easy; only 1: trivial; only 1: tauto).	0.044773	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	300	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.032080	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_min; only 1: rewrite N2Nat.inj_min; only 1: easy; only 1: trivial; only 1: tauto).	0.039375	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.042219	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	300	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.024829	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_max; only 1: rewrite N2Nat.inj_max; only 1: easy; only 1: trivial; only 1: tauto).	0.103138	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.id	300	0	synth with cache (only 1: reflexivity).	0.148436	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.052574	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	300	0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ_abs; only 1: rewrite N2Nat.inj_succ; only 1: easy).	0.092452	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_add_abs; only 1: rewrite N2Nat.inj_add; only 1: easy).	0.035361	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj	300	0.0.0	synth with cache (only 1: intros ?; only 1: injection H; only 1: trivial).	0.155409	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	300	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	0.076556	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_mul_abs; only 1: rewrite N2Nat.inj_mul; only 1: easy).	0.037307	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: injection H; only 1: trivial; only 1: intros ?; only 1: inversion H; only 1: reflexivity).	0.029746	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	300	0	synth with cache (only 1: reflexivity).	0.024041	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	300	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: easy).	0.068083	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply Nat2Z.inj; only 1: easy).	0.034288	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	300	0.0	synth with cache (only 1: intros ?; only 1: inversion H).	0.024838	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	300	0	synth with cache (only 1: trivial).	0.021978	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite not_le_minus_0; only 1: auto with arith; only 1: auto with arith).	0.028567	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	300	0	synth with cache (only 1: reflexivity).	0.019347	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat	300	0.0.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.091540	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	300	0	synth with cache (only 1: auto).	0.023517	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	300	0.0.0	synth with cache (only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	0.024710	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	300	0	synth with cache (only 1: trivial).	0.024883	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Z.pos_sub_gt; only 1: easy; only 1: trivial).	0.027301	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.035834	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.034793	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: rewrite Pos.sub_diag; only 1: easy; only 1: intros; only 1: rewrite Pos.sub_lt; only 1: easy; only 1: trivial; only 1: intros; only 1: destruct BinPosDef.Pos.sub; only 1: easy; only 1: easy; only 1: easy).	0.054927	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.033713	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	300	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.036185	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor0	300	0.0	synth with cache (only 1: rewrite Z.mul_1_r; only 1: auto).	0.036161	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	300	0	synth with cache (only 1: trivial).	0.030353	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.036713	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	300	0.0	synth with cache (only 1: apply Pos.iter_swap_gen; only 1: easy).	0.023626	2
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	300	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.022995	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	300	0	synth with cache (only 1: apply inj_pow_pos).	0.019927	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor1	300	0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.024398	2
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	300	0	synth with cache (only 1: reflexivity).	0.020757	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	300	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.025954	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.060402	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	300	0	synth with cache (only 1: reflexivity).	0.022465	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	300	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: assumption; only 1: auto with sets).	0.015673	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	300	0	synth with cache (only 1: reflexivity).	0.017247	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	300	0	synth with cache (only 1: reflexivity).	0.021566	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.053973	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	300	0	synth with cache (only 1: reflexivity).	0.024258	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	300	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.022032	8
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	300	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_l; only 1: Z.nzsimpl; only 1: easy).	0.191557	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.max; only 1: unfold BinPosDef.Pos.max; only 1: rewrite inj_compare; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.042261	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: apply Z.mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.041950	9
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.min; only 1: unfold BinPosDef.Pos.min; only 1: rewrite inj_compare; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.031452	7
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	300	0	synth with cache (only 1: reflexivity).	0.020625	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply clos_trans_t1n; only 1: apply clos_t1n_trans).	0.023115	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	300	0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).	0.023718	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	300	0	synth with cache (only 1: reflexivity).	0.022154	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_pos).	0.053839	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	300	0	synth with cache (only 1: apply Z.divide_Zpos).	0.021690	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: elim IHclos_trans2; only 1: intros ?; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto).	0.045744	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	300	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.032047	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply clos_trans_tn1; only 1: apply clos_tn1_trans).	0.018851	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	300	0.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: apply Z.lt_le_incl; only 1: easy).	0.039232	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	300	0.0	synth with cache (only 1: injection 1; only 1: easy).	0.023481	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right with y; only 1: assumption; only 1: left).	0.019542	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj_neg; only 1: intros ?; only 1: inversion H; only 1: reflexivity).	0.039623	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_nonneg_cancel_r).	0.038054	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	300	0.0.0	synth with cache (only 1: intros ?; only 1: injection H; only 1: trivial).	0.024589	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	300	0	synth with cache (only 1: apply Z.mul_pos_cancel_r).	0.030971	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: injection H; only 1: trivial; only 1: intros ?; only 1: inversion H; only 1: reflexivity).	0.035491	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.034904	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_3	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right with x; only 1: assumption; only 1: left).	0.170276	6
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	300	0.0	synth with cache (only 1: unfold Z.lt; only 1: constructor).	0.030339	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor4	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.mul_add_distr_l).	0.021003	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	300	0.0	synth with cache (only 1: intros ?; only 1: inversion H).	0.026023	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_2	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	300	0	synth with cache (only 1: reflexivity).	0.024618	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_3	300
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor5	300	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.080761	2
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: apply clos_rt1n_step; only 1: assumption; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto).	0.045072	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	300	0.0	synth with cache (only 1: intros ?; only 1: inversion H).	0.031960	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply clos_rt_rt1n; only 1: apply clos_rt1n_rt).	0.015195	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	300	0.0.0	synth with cache (only 1: unfold Z.le; only 1: simpl; only 1: discriminate).	0.026590	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	300	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.023446	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_square_simpl	300	0	synth with cache (only 1: apply Z.square_lt_simpl_nonneg).	0.033859	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: right with x; only 1: assumption; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto).	0.035976	11
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor6	300	0.0	synth with cache (only 1: Z.nzsimpl; only 1: auto).	0.082975	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply clos_rt_rtn1; only 1: apply clos_rtn1_rt).	0.027336	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_square_simpl	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.056629	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	300	0	synth with cache (only 1: easy).	0.120446	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.025794	2
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	300
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.new_var	300	0.0.0	synth with cache (only 1: intros ?; only 1: exists x; only 1: auto).	0.024183	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zeq_plus_swap	300	0	synth with cache (only 1: apply Z.add_move_r).	0.033232	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	0.032582	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA1	300	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.026638	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	300	0	synth with cache (only 1: apply Z.lt_0_sub).	0.033063	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	0.026221	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA2	300	0	synth with cache (only 1: Z.order_pos).	0.024633	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_minus_le	300	0	synth with cache (only 1: apply Z.le_0_sub).	0.032000	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	300	0	synth with cache (only 1: easy).	0.023248	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	300	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: intros; only 1: right with y; only 1: eauto; only 1: eauto).	0.023413	6
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: intros ?; only 1: apply Z.mul_eq_0 in H0; only 1: destruct H0; only 1: subst; only 1: easy; only 1: subst; only 1: easy).	0.047572	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	300	0	synth with cache (only 1: easy).	0.030400	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	300	1	synth with cache (only 1: apply Z.le_0_sub).	0.047789	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	300	0	synth with cache (only 1: reflexivity).	0.024418	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_2	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold BinIntDef.Z.iter; only 1: unfold BinIntDef.Z.abs_nat; only 1: apply Pos2Nat.inj_iter; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: trivial).	0.052241	16
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_1	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	300	0	synth with cache (only 1: reflexivity).	0.030473	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply clos_rst_rst1n; only 1: apply clos_rst1n_rst).	0.019302	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	300	0	synth with cache (only 1: reflexivity).	0.026340	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	0.051893	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	300	0	synth with cache (only 1: auto).	0.021885	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA4	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	300	0	synth with cache (only 1: reflexivity).	0.021059	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H0; only 1: auto; only 1: right with y0; only 1: eauto; only 1: eauto).	0.023162	10
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA5	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.028185	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	300	0	synth with cache (only 1: reflexivity).	0.019800	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_1	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: constructor 1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply clos_rstn1_trans with y0; only 1: right with z; only 1: tauto; only 1: left; only 1: auto).	0.044876	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	300	0	synth with cache (only 1: reflexivity).	0.028141	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA6	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: Z.nzsimpl; only 1: auto).	0.067722	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	300	0	synth with cache (only 1: reflexivity).	0.021566	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	300	0	synth with cache (only 1: reflexivity).	0.013416	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	300	0	synth with cache (only 1: reflexivity).	0.020960	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply clos_rst_rstn1; only 1: apply clos_rstn1_rst).	0.016752	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	300	0	synth with cache (only 1: reflexivity).	0.018737	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	300	0	synth with cache (only 1: apply Z.divide_Zpos_Zneg_r).	0.020730	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.master_key	300	0	synth with cache (only 1: exact tt).	0.014976	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	300
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	300	0.0.0	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order_pos).	0.062018	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	300	0	synth with cache (only 1: apply Z.divide_Zpos_Zneg_l).	0.023749	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	300	0.0.0	synth with cache (only 1: unlock; only 1: intros ?; only 1: discriminate).	0.026122	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	300	0	synth with cache (only 1: firstorder).	0.021673	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Z.opp_nonpos_nonneg in H0; only 1: Z.order).	0.035468	5
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.testbit_of_N'; only 1: destruct n; only 1: unfold BinIntDef.Z.testbit; only 1: destruct a; only 1: easy; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct BinPosDef.Pos.pred_N; only 1: easy; only 1: easy; only 1: destruct H; only 1: easy; only 1: trivial).	0.067206	18
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	300	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.041313	8
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	300	0	synth with cache (only 1: firstorder).	0.046946	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	300	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.028493	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA9	300	0.0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rewrite Z.add_opp_diag_l; only 1: easy).	0.030380	4
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock_with	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	300	0	synth with cache (only 1: firstorder).	0.035968	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA10	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.mul_assoc; only 1: rewrite <- Z.add_assoc; only 1: rewrite <- Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.056065	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	300	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.039817	4
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	300	0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.add_assoc; only 1: easy).	0.032657	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H1; only 1: clear H; only 1: apply id; only 1: assumption; only 1: simpl; only 1: easy).	0.058445	13
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA12	300	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.031148	3
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	300	0.0	synth with cache (only 1: unfold singleton; only 1: intuition_in).	0.046392	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	300	0	synth with cache (only 1: firstorder).	0.159925	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: assumption; only 1: assumption; only 1: intros; only 1: f_equal; only 1: assumption).	0.029689	7
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	300	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.033527	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	300	0.0	synth with cache (only 1: unfold singleton; only 1: auto).	0.028490	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA13	300	0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l; only 1: rewrite <- Pos2Z.opp_neg; only 1: rewrite Z.add_opp_diag_r; only 1: Z.nzsimpl; only 1: easy).	0.095094	6
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	300	0	synth with cache (only 1: reflexivity).	0.022806	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_cases	300	0.0.0.0	synth with cache (only 1: case Z.leb_spec; only 1: easy; only 1: Z.swap_greater; only 1: easy).	0.041480	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	300	0	synth with cache (only 1: firstorder).	0.056372	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	300	0.0.0	synth with cache (only 1: case Z.ltb_spec; only 1: easy; only 1: apply Z.le_ge).	0.026476	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	300	0	synth with cache (only 1: firstorder).	0.021404	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_cases	300	0.0.0.0	synth with cache (only 1: rewrite Z.geb_leb; only 1: case Z.leb_spec; only 1: apply Z.le_ge; only 1: easy).	0.031495	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	300	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.145773	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	300	0	synth with cache (only 1: firstorder).	0.012284	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto; only 1: split; only 1: transitivity x0; only 1: symmetry; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity y; only 1: auto; only 1: auto; only 1: split; only 1: transitivity y0; only 1: auto; only 1: auto; only 1: auto).	0.145035	51
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_cases	300	0.0.0.0.0	synth with cache (only 1: rewrite Z.gtb_ltb; only 1: case Z.ltb_spec; only 1: Z.swap_greater; only 1: easy; only 1: easy).	0.039866	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	300	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.031917	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	300	0	synth with cache (only 1: apply Z.leb_le).	0.025400	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	300	0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: easy).	0.030856	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	300	0	synth with cache (only 1: apply Z.leb_le).	0.026250	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	300	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.091549	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA14	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	300	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.le_antisymm).	0.041661	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.059315	7
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA15	300	0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle1).	0.049256	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iftrue_inv	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct BinIntDef.Z.compare; only 1: auto; only 1: auto; only 1: auto).	0.057851	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	300	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.036109	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iffalse_inv	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	300	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.050060	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_true	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	300
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	300	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: easy).	0.045209	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	300	0	synth with cache (only 1: apply Zcompare_rect).	0.031043	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	300	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.018297	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	300	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.053650	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	300	0.0.0	synth with cache (only 1: destruct 1; only 1: auto with bool; only 1: auto with bool).	0.018400	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	300	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.052052	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.lt; only 1: case BinIntDef.Z.compare; only 1: right; only 1: discriminate; only 1: left; only 1: auto; only 1: right; only 1: discriminate).	0.038458	8
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_sum	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: simpl; only 1: intros; only 1: rewrite Z.pos_sub_gt; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.188606	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	300	0.0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.le_trans).	0.224403	4
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA17	300	0.0.1.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.124275	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.le; only 1: case BinIntDef.Z.compare; only 1: left; only 1: discriminate; only 1: left; only 1: discriminate; only 1: right; only 1: tauto).	0.039417	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: simpl; only 1: constructor; only 1: easy; only 1: destruct t1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: easy).	0.060186	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.gt; only 1: case BinIntDef.Z.compare; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate; only 1: left; only 1: easy).	0.054066	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_ind	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	300
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA18	300	0.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros; only 1: subst; only 1: auto).	0.054991	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_total	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_rec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.065846	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	300	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.058383	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.ge; only 1: case BinIntDef.Z.compare; only 1: left; only 1: discriminate; only 1: right; only 1: tauto; only 1: left; only 1: discriminate).	0.042995	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply well_founded_lt_compat with BinIntDef.Z.to_nat; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Z2Nat.inj_lt; only 1: Z.order; only 1: Z.order; only 1: Z.order).	0.062134	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: simpl; only 1: constructor; only 1: easy; only 1: destruct t1; only 1: simpl; only 1: destruct t2; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: destruct t4; only 1: constructor; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: simpl; only 1: constructor; only 1: easy).	0.166318	30
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	300	1.0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.add_le_mono).	0.091352	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	300	0	synth with cache (only 1: exact Z_lt_dec).	0.022805	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.087589	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	300	0.0.0.0.0.0	synth with cache (only 1: elim Z_lt_ge_dec; only 1: left; only 1: easy; only 1: right; only 1: apply Z.ge_le; only 1: easy).	0.029533	6
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	300	0	synth with cache (only 1: reflexivity).	0.027820	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA19	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	300	0.0.0.0.0.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: intros ?; only 1: right; only 1: Z.swap_greater; only 1: apply Z.nle_gt; only 1: easy).	0.058577	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: assumption; only 1: assumption; only 1: apply Z.pow_pos_nonneg; only 1: assumption; only 1: apply Z.lt_le_incl; only 1: assumption).	0.046951	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: simpl; only 1: constructor; only 1: easy; only 1: destruct t1; only 1: simpl; only 1: destruct t2; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: destruct t4; only 1: constructor; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: simpl; only 1: constructor; only 1: easy).	0.141213	30
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	300	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_gt; only 1: apply Z.le_succ_l).	0.062975	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	300	0	synth with cache (only 1: exact Z_gt_dec).	0.028104	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA20	300	0.0.1.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.127621	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.029329	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	300	0	synth with cache (only 1: firstorder).	0.085362	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	300	0.0.0.0.0.0.0	synth with cache (only 1: elim Z_ge_dec; only 1: auto with arith; only 1: intros ?; only 1: right; only 1: Z.swap_greater; only 1: apply Z.lt_nge; only 1: easy).	0.063664	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_is_le_bool	300	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.048380	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Zlt_0_rec; only 1: easy; only 1: easy).	0.042602	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zlt_0_rec; only 1: auto).	0.041795	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	300	0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: unfold BinIntDef.Z.ltb; only 1: unfold Z.lt; only 1: destruct BinIntDef.Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.107401	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.139882	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_lt_rec; only 1: easy; only 1: easy).	0.065988	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	300	0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: apply Z.ltb_lt).	0.106352	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	300
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.intro_Z	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	300	0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.037536	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.118121	7
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_dec	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	0.167634	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	300	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.055436	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_sym	300	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.018713	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Zlt_lower_bound_rec with z; only 1: easy; only 1: easy).	0.060844	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_trans	300	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.021024	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H0); only 1: trivial).	0.032488	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.101962	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct BinIntDef.Z.compare; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.109753	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H0); only 1: trivial).	0.047251	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec'	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H); only 1: trivial).	0.034852	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_eq	300	0	synth with cache (only 1: apply Zeq_is_eq_bool).	0.031897	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case x; only 1: left; only 1: auto; only 1: intros ?; only 1: right; only 1: discriminate; only 1: intros ?; only 1: right; only 1: discriminate).	0.048556	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.094822	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	300	0.0.0.0	synth with cache (only 1: rewrite Zeq_is_eq_bool; only 1: destruct Zeq_bool; only 1: easy; only 1: easy).	0.079856	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: easy).	0.047707	8
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec_r	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply to_of_nat; only 1: assumption; only 1: intros ?; only 1: subst; only 1: apply of_to_nat).	0.034717	7
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- beq_eq_true; only 1: discriminate; only 1: trivial).	0.026004	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_congr	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H); only 1: trivial).	0.029859	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	300
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: rewrite Pos.max_1_l; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct y; only 1: simpl; only 1: rewrite Pos.max_1_r; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos2Z.inj_max; only 1: easy; only 1: simpl; only 1: rewrite Pos.max_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.max_1_l; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply to_pos_nonpos; only 1: apply Z.max_lub; only 1: easy; only 1: easy).	0.111530	30
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	300	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: easy).	0.192607	11
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: symmetry; only 1: apply not_true_is_false; only 1: intros ?; only 1: apply H; only 1: apply beq_eq; only 1: symmetry; only 1: assumption).	0.037387	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: rewrite Pos.min_1_l; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct y; only 1: simpl; only 1: rewrite Pos.min_1_r; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos2Z.inj_min; only 1: easy; only 1: simpl; only 1: rewrite Pos.min_1_r; only 1: trivial; only 1: simpl; only 1: rewrite Pos.min_1_l; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: apply to_pos_nonpos; only 1: apply Z.min_le_iff; only 1: left; only 1: easy).	0.138153	29
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.101729	15
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	300	0.0	synth with cache (only 1: destruct 1; only 1: apply eq_dep_intro).	0.017156	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	300	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.018856	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	300	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.028145	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_JMeq	300	0.0	synth with cache (only 1: destruct 1; only 1: apply @JMeq_refl).	0.016119	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	300	0.0	synth with cache (only 1: rewrite Pos.add_comm; only 1: apply jump_add).	0.033533	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_sym	300	0	synth with cache (only 1: t_eqb).	0.034958	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.064034	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	300	0	synth with cache (only 1: t_eqb).	0.155531	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	300	0	synth with cache (only 1: t_eqb).	0.028603	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_minus_eq	300	0.0.0	synth with cache (only 1: intros; only 1: apply Z.add_move_l; only 1: easy).	0.065675	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	300	0	synth with cache (only 1: t_eqb).	0.042760	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	300	0	synth with cache (only 1: congruence).	0.023770	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.ZL0	300	0	synth with cache (only 1: reflexivity).	0.040775	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	300	0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.051467	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	300	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: easy).	0.047443	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mkPinj_ok; only 1: rewrite mkPinj_ok; only 1: rewrite H; only 1: easy).	0.062574	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_N_embedding	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mkPX_ok; only 1: rewrite mkPX_ok; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.168443	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: compute; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H1; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: rewrite H2; only 1: intuition).	0.479833	18
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	300	0.0	synth with cache (only 1: unfold singleton; only 1: intuition_in).	0.085026	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	300	0.0	synth with cache (only 1: unfold singleton; only 1: auto).	0.036122	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold create; only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.248789	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	300	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.066382	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.145513	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold PmulC; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H; only 1: Esimpl; only 1: intros ?; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H0; only 1: Esimpl; only 1: intros ?; only 1: apply PmulC_aux_ok).	0.110584	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	300	0.0.0	synth with cache (only 1: split; only 1: exact bits_lt_antirefl; only 1: exact bits_lt_trans).	0.035594	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	300	0	synth with cache (only 1: reflexivity).	0.020502	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	300	0	synth with cache (only 1: auto with sets).	0.015648	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	300	0	synth with cache (only 1: auto with sets).	0.016292	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.033047	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: apply IHP; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	0.209899	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.052608	19
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right; only 1: exists y0; only 1: auto with sets).	0.087693	16
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	300	0	synth with cache (only 1: firstorder).	0.028057	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	300	0	synth with cache (only 1: firstorder).	0.041272	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	300	0	synth with cache (only 1: firstorder).	0.039934	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	300	0	synth with cache (only 1: firstorder).	0.061902	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize Rstar_contains_R; only 1: intros ?; only 1: red in H; only 1: intros ?; only 1: intros ?; only 1: unfold same_relation; only 1: unfold contains; only 1: split; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 with y0; only 1: auto with sets; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar1_n with y0; only 1: auto with sets; only 1: auto with sets).	0.252548	41
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_2	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_ind	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.abs_case_strong; only 1: Z.swap_greater; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: easy; only 1: Z.swap_greater; only 1: trivial; only 1: Z.swap_greater; only 1: trivial).	0.092369	12
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H4; only 1: apply H4 with y0; only 1: auto with sets; only 1: apply Rstar_n with x0; only 1: auto with sets; only 1: auto with sets).	0.302142	23
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	300	0	synth with cache (only 1: firstorder).	0.022123	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	300	0	synth with cache (only 1: firstorder).	0.020678	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_intro	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_spec	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.abs_spec).	0.046423	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_embedding	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 with y0; only 1: auto with sets; only 1: auto with sets).	0.242925	22
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	300	0	synth with cache (only 1: firstorder).	0.025876	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zsgn_spec	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.sgn_spec).	0.051843	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	300	0	synth with cache (only 1: firstorder).	0.023847	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Transitive	300	0	synth with cache (only 1: firstorder).	0.030724	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.star_monotone	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_le	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: apply Zabs2Nat.inj_le; only 1: trivial; only 1: transitivity n; only 1: trivial; only 1: trivial; only 1: trivial).	0.185403	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	300	0	synth with cache (only 1: firstorder).	0.040179	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_lt	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: apply Zabs2Nat.inj_lt; only 1: trivial; only 1: transitivity n; only 1: trivial; only 1: apply Z.lt_le_incl; only 1: trivial; only 1: trivial).	0.054940	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intros ?; only 1: red in H; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: split; only 1: assumption; only 1: apply H0 with z0; only 1: auto with sets; only 1: auto with sets).	0.276140	42
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert e1 e2; only 1: induction p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply IHp; only 1: intros; only 1: apply H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: f_equal; only 1: f_equal; only 1: apply IHp1; only 1: easy; only 1: f_equal; only 1: apply H; only 1: apply IHp2; only 1: intros; only 1: apply H).	0.164877	24
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zne_left	300	0.0.0	synth with cache (only 1: unfold Zne; only 1: rewrite <- Z.sub_move_0_r; only 1: easy).	0.046238	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: auto; only 1: descolor; only 1: ok; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order; only 1: apply lbal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order; only 1: auto; only 1: descolor; only 1: ok; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order; only 1: apply rbal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order).	0.395143	31
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	300	0	synth with cache (only 1: apply Z.sub_move_0_r).	0.028140	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Lemma1	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	300	0.0.0.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.045912	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	300	0	synth with cache (only 1: apply Z.le_0_sub).	0.036927	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	300	0	synth with cache (only 1: apply Z.le_0_sub).	0.025168	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_rev	300	0	synth with cache (only 1: apply Z.lt_0_sub).	0.027406	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	300	0	synth with cache (only 1: apply Z.lt_0_sub).	0.039523	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	300	0.0.0.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: jump_simpl; only 1: easy).	0.049859	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.033003	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Zlt_left).	0.040842	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.043657	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	300	0.0.0	synth with cache (only 1: unfold add; only 1: autorew; only 1: easy).	0.053674	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	300	0	synth with cache (only 1: apply add_spec').	0.027358	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_rev	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.064924	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	300	0.0	synth with cache (only 1: unfold add; only 1: auto_tc).	0.022570	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_mult_approx	300	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	0.126848	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_embedding	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	300	0.0	synth with cache (only 1: intros; only 1: apply add_spec').	0.031420	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite add_spec'; only 1: intuition; only 1: order; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite add_spec'; only 1: intuition; only 1: order).	0.242805	19
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold PmulC; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H; only 1: Esimpl; only 1: intros ?; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H0; only 1: Esimpl; only 1: intros ?; only 1: apply PmulC_aux_ok).	0.107286	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_left	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zpos_max_1	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.053352	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: apply IHP; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	0.165211	13
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.compare	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: join_tac; only 1: auto with *; only 1: auto with *; only 1: inv; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_spec in *; only 1: intuition; only 1: setoid_replace y with x; only 1: eauto; only 1: eauto; only 1: eauto; only 1: inv; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_spec in *; only 1: intuition; only 1: setoid_replace y with x; only 1: eauto; only 1: eauto; only 1: eauto; only 1: auto; only 1: auto with *).	0.396855	32
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_no_neutral	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply succ_inj; only 1: rewrite <- add_carry_spec; only 1: rewrite <- add_carry_spec; only 1: easy).	0.028307	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: reflexivity).	10.640841	513
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P; only 1: induction P'; only 1: simpl; only 1: intros; only 1: intros ?; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: revert p; only 1: induction P; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPinj_ext; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPinj_ext; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPinj_ext; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct p0; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct P; only 1: reflexivity; only 1: destruct p0; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: revert p1; only 1: induction P2; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: auto; only 1: auto).	0.551541	110
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	300	0.0.0.0	synth with cache (only 1: rewrite Psub_opp; only 1: rewrite Padd_ok; only 1: rewrite Popp_ok; only 1: rsimpl).	0.085870	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply testbit_false; only 1: nzsimpl; only 1: order_nz; only 1: order_nz; only 1: order_nz).	0.058632	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	300	0.0.0	synth with cache (only 1: split; only 1: apply add_reg_l; only 1: congruence).	0.024714	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: easy).	0.074656	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply add_reg_r with (r := r); only 1: apply add_carry_add; only 1: easy).	0.029750	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: revert p q; only 1: induction r; only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto using add_carry_add; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: rewrite add_carry_spec; only 1: rewrite <- add_succ_r; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: rewrite add_carry_spec; only 1: rewrite <- add_succ_r; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: auto using add_carry_add; only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply succ_inj; only 1: rewrite <- add_1_r; only 1: rewrite <- add_1_r; only 1: easy; only 1: congruence).	0.366201	83
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- bit0_odd; only 1: rewrite shiftr_spec; only 1: rewrite add_0_l; only 1: easy; only 1: easy).	0.038843	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply merge_ok; only 1: eauto; only 1: eauto; only 1: eauto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite remove_spec; only 1: destruct 1; only 1: eauto; only 1: auto; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite remove_spec; only 1: destruct 1; only 1: eauto; only 1: auto).	0.170942	24
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO	300	0	synth with cache (only 1: easy).	0.016736	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite testbit_true; only 1: rewrite pow_succ_r; only 1: rewrite div_div; only 1: easy; only 1: order_nz; only 1: order_nz; only 1: apply le_0_l).	0.067309	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q r; only 1: induction p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_l; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_l; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_1_r; only 1: f_equal; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_1_r; only 1: f_equal; only 1: intros ?; only 1: intros ?; only 1: rewrite add_1_l; only 1: rewrite add_1_l; only 1: rewrite add_succ_l; only 1: auto).	0.409505	104
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_diag	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite add_carry_spec; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: auto).	0.044652	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	300	0.0.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: induction p; only 1: intros; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: trivial; only 1: trivial).	0.062954	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	300	0	synth with cache (only 1: trivial).	0.020626	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_case	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply peano_ind; only 1: auto; only 1: auto).	0.022157	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	300	0.0	synth with cache (only 1: apply eq_dep_eq_dec; only 1: decide equality).	0.038505	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply testbit_even_succ; only 1: apply le_0_l).	0.021323	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_pow2_bits; only 1: rewrite div_mul; only 1: easy; only 1: order_nz).	0.038346	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_l	300	0	synth with cache (only 1: easy).	0.019412	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_r	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	0.040703	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto).	0.132827	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite mul_add_distr_r; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: trivial; only 1: simpl; only 1: trivial).	0.036193	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_l	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite add_assoc; only 1: rewrite add_diag; only 1: rewrite <- add_xO; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: apply add_diag).	0.042305	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	300	0.0.0.0	synth with cache (only 1: rewrite mul_comm; only 1: rewrite mul_succ_l; only 1: f_equal; only 1: apply mul_comm).	0.027068	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	300	0.0.0.0	synth with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.027363	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.036287	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	300	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply bits_inj; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.027323	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	300	0.0.0	synth with cache (only 1: intros; only 1: apply shiftr_spec; only 1: apply le_0_l).	0.021041	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply shiftl_spec_high; only 1: apply le_0_l; only 1: trivial).	0.024491	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	300	0.0.0	synth with cache (only 1: apply Z.min_case; only 1: auto; only 1: auto).	0.029424	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.026810	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: rewrite <- div_pow2_bits; only 1: rewrite div_mul; only 1: easy; only 1: order_nz).	0.128702	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.066390	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite shiftl_mul_pow2; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.054562	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: rewrite shiftl_mul_pow2; only 1: rewrite shiftl_mul_pow2; only 1: rewrite pow_add_r; only 1: rewrite mul_assoc; only 1: easy).	0.047887	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite pow_add_r; only 1: rewrite div_div; only 1: easy; only 1: order_nz; only 1: order_nz).	0.049311	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.044545	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct j; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rewrite jump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.061686	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite mul_1_l; only 1: easy).	0.033864	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).	0.046761	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy).	0.051426	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite zmon_pred_ok; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite pow_pos_add; only 1: rsimpl).	0.106548	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: order_nz).	0.045372	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.051858	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Zth	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Z.add_0_l; only 1: intros ?; only 1: intros ?; only 1: apply Z.add_comm; only 1: exact Z.add_assoc; only 1: exact Z.mul_1_l; only 1: intros ?; only 1: intros ?; only 1: apply Z.mul_comm; only 1: exact Z.mul_assoc; only 1: exact Z.mul_add_distr_r; only 1: trivial; only 1: exact Z.sub_diag).	0.053411	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite eq_mul_0; only 1: split; only 1: intros ?; only 1: destruct H; only 1: trivial; only 1: contradict H; only 1: order_nz; only 1: intros ?; only 1: left; only 1: trivial).	0.052930	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy).	0.059621	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite div2_div; only 1: rewrite H; only 1: easy).	0.038316	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite <- bit0_odd; only 1: rewrite bit0_mod; only 1: apply div_mod; only 1: order_nz).	0.048584	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.089124	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.080488	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.075579	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.083424	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy).	0.035887	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_nilpotent).	0.023299	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply lxor_eq; only 1: intros ?; only 1: rewrite H; only 1: apply lxor_nilpotent).	0.033429	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.023617	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.023869	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_comm).	0.029678	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.029156	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	300	0.0.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.020347	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.079764	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.025549	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	300	0.0.0	synth with cache (only 1: split; only 1: apply mul_reg_l; only 1: congruence).	0.018347	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_comm).	0.025662	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_assoc).	0.032104	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy).	0.061660	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_diag).	0.022683	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy).	0.051912	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: split; only 1: apply lor_eq_0_l in H; only 1: trivial; only 1: rewrite lor_comm in H; only 1: apply lor_eq_0_l in H; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: rewrite lor_0_l; only 1: easy).	0.050649	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.032807	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xO	300	0.0.0	synth with cache (only 1: simpl; only 1: rewrite mul_comm; only 1: easy).	0.032478	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_r).	0.027914	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xI	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite mul_comm; only 1: simpl; only 1: f_equal; only 1: rewrite add_assoc; only 1: rewrite add_diag; only 1: simpl; only 1: rewrite add_comm; only 1: easy).	0.034207	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.026760	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_assoc).	0.041671	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap	300	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply iter_swap_gen; only 1: easy).	0.023021	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_diag).	0.023369	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.030396	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_succ	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite andb_true_r; only 1: easy).	0.034360	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_add	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_negb_r).	0.033321	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_l).	0.037470	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_invariant	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_1_r	300	0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.pow; only 1: simpl; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.024485	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_succ_r	300	0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.pow; only 1: rewrite iter_succ; only 1: easy).	0.020918	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_r).	0.036614	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_spec	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: rewrite square_xI; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: rewrite square_xO; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: trivial).	0.032875	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_l).	0.038725	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	300	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_r).	0.032675	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite negb_orb; only 1: rewrite andb_assoc; only 1: easy).	0.038173	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite <- andb_orb_distrib_r; only 1: rewrite orb_comm; only 1: rewrite orb_negb_r; only 1: rewrite andb_true_r; only 1: easy).	0.036453	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold setbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.030326	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold clearbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.031461	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	300	0.0	synth with cache (only 1: unfold setbit; only 1: solve_proper).	0.038518	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	300	0.0	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	0.040698	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst <- H; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).	0.074357	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).	0.026733	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add	300	0.0.0.0	synth with cache (only 1: case sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence).	0.025315	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_spec'; only 1: rewrite lor_spec; only 1: rewrite pow2_bits_eqb; only 1: rewrite orb_comm; only 1: easy).	0.030536	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	300	1.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence; only 1: intros ?; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_l).	0.046720	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_eqb; only 1: rewrite orb_true_iff; only 1: rewrite eqb_eq; only 1: easy).	0.034179	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply setbit_iff; only 1: left; only 1: easy).	0.026048	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite setbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: easy).	0.040127	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	300	1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: exists r; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_r).	0.047330	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite clearbit_spec'; only 1: rewrite ldiff_spec; only 1: rewrite pow2_bits_eqb; only 1: easy).	0.033868	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eqb_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite clearbit_eqb; only 1: rewrite andb_true_iff; only 1: rewrite <- eqb_eq; only 1: rewrite negb_true_iff; only 1: rewrite not_true_iff_false; only 1: easy).	0.076619	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite clearbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: apply andb_true_r).	0.078923	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite lxor_spec; only 1: easy).	0.039756	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.leb; only 1: unfold le; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.059009	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite land_spec; only 1: easy).	0.041019	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_nat_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	300	0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: destruct BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	0.033232	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.BoolTheory	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite lor_spec; only 1: easy).	0.046303	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct BinPosDef.Pos.compare; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.107895	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.bool_eq_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite ldiff_spec; only 1: easy).	0.039108	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	300	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.059133	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	300	0.0	synth with cache (only 1: unfold ones; only 1: solve_proper).	0.035386	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	300	0.0	synth with cache (only 1: unfold lnot; only 1: solve_proper).	0.050169	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct BinPosDef.Pos.compare; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.051441	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold ones; only 1: rewrite shiftl_1_l; only 1: easy).	0.027527	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	300	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.058146	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_Lt_Lt; only 1: unfold gt; only 1: unfold le; only 1: unfold BinPosDef.Pos.compare; only 1: destruct BinPosDef.Pos.compare_cont; only 1: split; only 1: apply comparison_eq_stable; only 1: easy; only 1: split; only 1: apply comparison_eq_stable; only 1: easy; only 1: split; only 1: apply comparison_eq_stable; only 1: easy).	0.120187	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	300	0.0	synth with cache (only 1: apply not_iff_compat; only 1: apply compare_cont_Lt_Gt).	0.018993	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	300	0.0	synth with cache (only 1: apply not_iff_compat; only 1: apply compare_cont_Gt_Lt).	0.021120	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHs1; only 1: rewrite <- IHs2; only 1: destruct partition; only 1: destruct partition; only 1: destruct f; only 1: easy; only 1: easy).	0.133048	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_Gt_Gt; only 1: unfold ge; only 1: unfold lt; only 1: unfold BinPosDef.Pos.compare; only 1: destruct BinPosDef.Pos.compare_cont; only 1: split; only 1: apply comparison_eq_stable; only 1: easy; only 1: split; only 1: apply comparison_eq_stable; only 1: easy; only 1: split; only 1: apply comparison_eq_stable; only 1: easy).	0.061772	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	300	0	synth with cache (only 1: reflexivity).	0.018119	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	300	0	synth with cache (only 1: reflexivity).	0.018241	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHs1; only 1: rewrite <- IHs2; only 1: destruct partition; only 1: destruct partition; only 1: destruct f; only 1: easy; only 1: easy).	0.144397	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	300	0.0	synth with cache (only 1: rewrite partition_spec1'; only 1: easy).	0.035426	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	300	0.0	synth with cache (only 1: rewrite partition_spec2'; only 1: easy).	0.037005	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	300	0.0.0	synth with cache (only 1: rewrite partition_spec1'; only 1: apply filter_ok; only 1: easy).	0.029512	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	300	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rrefl).	0.028537	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	300	0.0.0	synth with cache (only 1: rewrite partition_spec2'; only 1: apply filter_ok; only 1: easy).	0.026512	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite <- sub_mask_neg_iff; only 1: rewrite compare_sub_mask; only 1: destruct BinPosDef.Pos.sub_mask; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.066382	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply lt_nge; only 1: intros ?; only 1: apply ones_spec_high in H0; only 1: rewrite H in H0; only 1: discriminate; only 1: apply ones_spec_low).	0.028824	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: rewrite lxor_spec; only 1: rewrite ones_spec_low; only 1: easy; only 1: trivial).	0.025980	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: rewrite lxor_spec; only 1: rewrite ones_spec_high; only 1: rewrite xorb_false_r; only 1: easy; only 1: trivial).	0.027327	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_iff_add	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	300	0.0.0.0	synth with cache (only 1: induction p; only 1: easy; only 1: easy; only 1: easy).	0.019550	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_0_l).	0.018868	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	300	0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.026788	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Nth	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact N.add_0_l; only 1: exact N.add_comm; only 1: exact N.add_assoc; only 1: exact N.mul_1_l; only 1: exact N.mul_0_l; only 1: exact N.mul_comm; only 1: exact N.mul_assoc; only 1: exact N.mul_add_distr_r).	0.040334	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q c; only 1: induction p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial).	0.151212	35
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite land_ones; only 1: apply mod_small; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: easy; only 1: trivial using le_0_l).	0.040405	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Neqb_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_sub_mask; only 1: rewrite <- sub_mask_nul_iff; only 1: destruct BinPosDef.Pos.sub_mask; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.061363	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_antisym	300	0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.compare; only 1: rewrite compare_cont_antisym; only 1: easy).	0.020102	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	300	0	synth with cache (only 1: reflexivity).	0.015821	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_le_iff	300	0	synth with cache (only 1: reflexivity).	0.020192	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite lor_lnot_diag; only 1: rewrite lor_ones_low; only 1: easy; only 1: easy).	0.038305	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	300	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold gt; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.030022	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt	300	0	synth with cache (only 1: apply gt_lt_iff).	0.018801	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_gt	300	0	synth with cache (only 1: apply gt_lt_iff).	0.020242	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite land_lnot_diag; only 1: rewrite ldiff_ones_r_low; only 1: order'; only 1: easy).	0.030923	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	300	0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.033420	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le	300	0	synth with cache (only 1: apply ge_le_iff).	0.020604	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_ge	300	0	synth with cache (only 1: apply ge_le_iff).	0.018901	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p; only 1: intros ?; only 1: destruct q; only 1: simpl; only 1: simpl_compare; only 1: rewrite IHp; only 1: destruct BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: simpl_compare; only 1: destruct BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: simpl_compare; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct q; only 1: simpl; only 1: simpl_compare; only 1: rewrite IHp; only 1: destruct BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: simpl_compare; only 1: destruct BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: simpl_compare; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.193978	52
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	300	0	synth with cache (only 1: exact gen_phiN_add).	0.118252	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	300	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: apply gen_phiN_add; only 1: apply gen_phiN_sub; only 1: apply gen_phiN_mult; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply N.eqb_eq in H; only 1: subst; only 1: easy).	0.183702	31
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P1; only 1: induction LM1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: destruct a; only 1: simpl; only 1: intros; only 1: rewrite <- IHLM1; only 1: apply PNSubst1_ok; only 1: easy; only 1: intuition).	0.112899	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_nat_None_iff	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	300	0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists 1; only 1: apply add_1_r).	0.025627	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_1_l	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.041372	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_to_N	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.nlt_1_r	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.051150	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_1_succ	300	0.0	synth with cache (only 1: apply lt_succ_r; only 1: apply le_1_l).	0.026471	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	300	0.0	synth with cache (only 1: rewrite <- ge_le_iff; only 1: easy).	0.024965	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_nle	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: rewrite compare_antisym; only 1: destruct BinPosDef.Pos.compare; only 1: split; only 1: easy'; only 1: easy'; only 1: split; only 1: auto; only 1: easy'; only 1: split; only 1: auto; only 1: auto).	0.063794	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite <- jump_tl; only 1: rewrite nth_jump; only 1: easy; only 1: simpl; only 1: Esimpl; only 1: rewrite <- nth_jump; only 1: rewrite nth_pred_double; only 1: easy; only 1: simpl; only 1: Esimpl).	0.165196	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite odd_add; only 1: easy).	0.032763	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_incl	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.022014	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_bit0; only 1: rewrite add_bit0; only 1: easy).	0.039713	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_succ_r; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.037071	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.natSRth	300	0.0.0.0.0.0.1.0.0	synth with cache (only 1: constructor; only 1: trivial; only 1: exact PeanoNat.Nat.add_comm; only 1: exact PeanoNat.Nat.add_assoc; only 1: exact PeanoNat.Nat.mul_1_l; only 1: exact PeanoNat.Nat.mul_0_l; only 1: exact PeanoNat.Nat.mul_comm; only 1: auto with arith; only 1: exact PeanoNat.Nat.mul_add_distr_r).	0.039891	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	300	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite compare_succ_succ; only 1: easy).	0.023595	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	300	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite compare_succ_succ; only 1: easy).	0.029862	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.nat_morph_N	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: trivial; only 1: trivial; only 1: exact N2Nat.inj_add; only 1: exact N2Nat.inj_mul; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply N.eqb_eq in H; only 1: rewrite H; only 1: auto).	0.048148	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_ind	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_strorder	300	0.0.0	synth with cache (only 1: split; only 1: exact lt_irrefl; only 1: exact lt_trans).	0.023593	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: revert res; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: mul_permut).	0.241477	26
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_compat	300	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: auto).	0.032224	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_refl	300	0.0.0.0	synth with cache (only 1: unfold le; only 1: rewrite compare_refl; only 1: intros ?; only 1: discriminate).	0.024104	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_lt_trans	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	0.033073	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_trans	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H0; only 1: destruct H0; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	0.028719	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply le_lteq; only 1: left; only 1: apply lt_le_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: auto).	0.035950	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	300	0.0.0.0.0	synth with cache (only 1: rewrite <- lt_succ_r; only 1: symmetry; only 1: unfold lt; only 1: rewrite compare_succ_succ; only 1: easy).	0.034194	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	300	0.0.0.0	synth with cache (only 1: unfold Nwopp; only 1: intros; only 1: rewrite gen_phiNword_Nwcons; only 1: norm).	0.045641	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_antisym	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	300	0.0.0	synth with cache (only 1: split; only 1: exact le_refl; only 1: exact le_trans).	0.027183	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_partorder	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct pe; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.064081	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: exact Nwadd_ok; only 1: intros; only 1: unfold Nwsub; only 1: rewrite Nwadd_ok; only 1: rewrite Nwopp_ok; only 1: norm; only 1: exact Nwmul_ok; only 1: exact Nwopp_ok; only 1: exact gen_phiNword_ok).	0.074667	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0 in H; only 1: apply H; only 1: easy).	0.039058	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.031942	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.034493	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.060441	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.034114	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply norm_subst_spec; only 1: apply interp_PElist_ok; only 1: trivial).	0.035589	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.038366	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_nocarry_lxor; only 1: apply div_small_iff; only 1: order_nz; only 1: rewrite <- shiftr_div_pow2; only 1: rewrite shiftr_lxor; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: rewrite div_small; only 1: apply lxor_0_l; only 1: trivial; only 1: trivial; only 1: trivial).	0.111491	19
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply to_of_N; only 1: assumption; only 1: intros ?; only 1: subst; only 1: apply of_to_N).	0.024269	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H0; only 1: apply Rlt_trans with (m := m); only 1: easy; only 1: easy; only 1: rewrite <- H0; only 1: easy).	0.087374	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Rlt_le_neq; only 1: intros ?; only 1: destruct H; only 1: easy).	0.051925	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.083207	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	300	0	synth with cache (only 1: firstorder).	0.056347	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	300	0.0	synth with cache (only 1: unfold In; only 1: intuition).	0.029417	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	300	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: rewrite mem_Leaf; only 1: discriminate).	0.030760	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case o; only 1: trivial; only 1: destruct l; only 1: destruct r; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.067411	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply empty_spec in H; only 1: elim H).	0.034990	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite subset_spec; only 1: rewrite subset_spec; only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	0.059411	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: case u'; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.049327	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	300	0.0	synth with cache (only 1: unfold remove; only 1: auto_tc).	0.030969	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity).	0.047961	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert e1 e2; only 1: induction M; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply IHM; only 1: intros; only 1: apply H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: f_equal; only 1: apply IHM; only 1: intros; only 1: apply H; only 1: f_equal; only 1: apply H).	0.172117	24
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct u; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.044466	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	300	0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: jump_simpl; only 1: easy).	0.043183	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate).	0.062425	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	300	0.0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: jump_simpl; only 1: easy).	0.037160	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	300	0.0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: rewrite Pos.add_comm; only 1: easy).	0.039491	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.052556	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_inv; only 1: case compare; only 1: intros; only 1: discriminate; only 1: trivial; only 1: intros; only 1: discriminate).	0.038954	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	300	0.0.0.0.0	synth with cache (only 1: unfold remove_min; only 1: destruct s; only 1: easy; only 1: destruct delmin; only 1: easy).	0.048591	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct j; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rewrite Mjump_xO_tail; only 1: easy; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rewrite Mjump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.061445	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	300	0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_equal; only 1: rewrite equal_spec; only 1: trivial).	0.044500	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	300	0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: auto).	0.028441	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct acc; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.041552	6
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_N]; only 1: destruct x; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.398050	769
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite zmon_pred_ok; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite pow_pos_add; only 1: rsimpl).	0.111540	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert p; only 1: induction l; only 1: trivial; only 1: simpl plength_aux; only 1: intros; only 1: rewrite IHl; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite Nat.add_succ_r; only 1: easy).	0.040967	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	300	0.0.0	synth with cache (only 1: unfold plength; only 1: rewrite plength_aux_spec; only 1: apply Nat.add_1_r).	0.022970	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	300	0.0.0	synth with cache (only 1: rewrite <- elements_spec1; only 1: rewrite treeify_elements; only 1: easy).	0.026142	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply elements_sort_ok; only 1: rewrite treeify_elements; only 1: auto).	0.023361	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor).	0.056422	22
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	0.036046	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc; only 1: induction s; only 1: trivial; only 1: intros ?; only 1: rewrite elements_node; only 1: rewrite List.filter_app; only 1: simpl; only 1: destruct f; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: rewrite app_assoc_reverse; only 1: easy; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: rewrite app_assoc_reverse; only 1: easy).	0.112250	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	300	0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: rewrite treeify_elements; only 1: rewrite filter_aux_elements; only 1: rewrite app_nil_r; only 1: easy).	0.031228	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- elements_spec1; only 1: rewrite filter_elements; only 1: rewrite filter_InA; only 1: rewrite elements_spec1; only 1: easy; only 1: auto_tc).	0.052197	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	300	0.0.0.0.0.0.0	synth with cache (only 1: apply elements_sort_ok; only 1: rewrite filter_elements; only 1: apply filter_sort with X.eq; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.054359	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc1 acc2; only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: destruct f; only 1: simpl; only 1: rewrite IHs2; only 1: rewrite IHs1; only 1: easy; only 1: simpl; only 1: rewrite IHs2; only 1: rewrite IHs1; only 1: easy).	0.139409	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	300	0.0.0.0	synth with cache (only 1: unfold partition; only 1: unfold filter; only 1: rewrite partition_aux_spec; only 1: easy).	0.027690	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	300	0.0	synth with cache (only 1: rewrite partition_spec; only 1: easy).	0.030698	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	300	0.0	synth with cache (only 1: rewrite partition_spec; only 1: easy).	0.029845	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	300	0.0.0	synth with cache (only 1: rewrite partition_spec; only 1: apply filter_ok; only 1: easy).	0.029727	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite compare_inv; only 1: rewrite H0; only 1: rewrite <- compare_inv; only 1: reflexivity).	0.060846	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	300	0.0.0	synth with cache (only 1: rewrite partition_spec; only 1: apply filter_ok; only 1: easy).	0.037929	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold lt; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.057647	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: split; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.042339	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	300	0.0.0.0.0	synth with cache (only 1: unfold Pphi_avoid; only 1: intros; only 1: rewrite mult_dev_ok; only 1: simpl; only 1: Esimpl).	0.060241	5
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: intuition; only 1: unfold In in *; only 1: rewrite mem_Leaf in *; only 1: discriminate).	0.039108	8
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_None_iff	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Pphi_pow; only 1: intros; only 1: apply Pphi_avoid_ok; only 1: intros; only 1: rewrite local_mkpow_ok; only 1: easy; only 1: intros; only 1: rewrite local_mkpow_ok; only 1: easy; only 1: intros; only 1: rewrite local_mkpow_ok; only 1: easy).	0.078973	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Pphi_pow_ok; only 1: rewrite <- H1; only 1: rewrite <- H0; only 1: apply norm_subst_ok; only 1: trivial).	0.071796	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert r; only 1: induction p; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: rewrite IHp; only 1: rewrite IHp; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: rewrite IHp; only 1: rewrite IHp; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: Esimpl).	0.223160	17
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	300	0.0	synth with cache (only 1: intros; only 1: apply xfilter_spec).	0.025168	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_nat_via_N	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.621735	257
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rev_append_rev; only 1: apply SortA_app with X.eq; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *; only 1: intros ?; only 1: intros ?; only 1: inA; only 1: eapply l1_lt_acc; only 1: eauto).	0.060267	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	300	0.0	synth with cache (only 1: intros; only 1: apply xforall_spec).	0.025226	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	300	0.0.0.0.0.0	synth with cache (only 1: unfold linear_union; only 1: apply treeify_ok; only 1: apply union_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy).	0.032281	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: easy; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.044572	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	300	0.0	synth with cache (only 1: intros; only 1: apply xexists_spec).	0.024246	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: apply treeify_ok; only 1: apply union_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: easy; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc; only 1: auto_tc).	0.070876	18
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Pphi_dev; only 1: intros; only 1: apply Pphi_avoid_ok; only 1: intros; only 1: apply mkpow_ok; only 1: intros; only 1: apply mkopp_pow_ok; only 1: intros; only 1: apply mkmult_pow_ok).	0.046146	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.035022	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.038372	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Pphi_dev_ok; only 1: rewrite <- H1; only 1: rewrite <- H0; only 1: apply norm_subst_ok; only 1: trivial).	0.109859	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_via_nat	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: intros; only 1: rewrite xelements_spec; only 1: split; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: destruct H; only 1: destruct H; only 1: simpl in *; only 1: congruence; only 1: intros ?; only 1: right; only 1: exists x; only 1: auto).	0.061864	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.028430	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P1; only 1: induction LM1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: destruct a; only 1: simpl; only 1: intros; only 1: rewrite <- IHLM1; only 1: apply PNSubst1_ok; only 1: easy; only 1: intuition).	0.090111	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold linear_union; only 1: rewrite treeify_spec; only 1: rewrite union_list_spec; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto).	0.085937	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply SortA_NoDupA with PositiveOrderedTypeBits.lt; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: apply elements_spec2).	0.026280	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: induction s; only 1: intros ?; only 1: apply empty_spec; only 1: destruct b; only 1: discriminate; only 1: simpl in H; only 1: destruct choose; only 1: discriminate; only 1: destruct choose; only 1: discriminate; only 1: intros ?; only 1: destruct a; only 1: apply IHs2; only 1: reflexivity; only 1: apply IHs1; only 1: reflexivity; only 1: discriminate).	0.092118	21
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	300	0.0.0.0.0.0	synth with cache (only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: apply fold_add_spec; only 1: rewrite fold_add_spec; only 1: tauto).	0.040866	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	300	0.0	synth with cache (only 1: intros; only 1: apply union_spec').	0.022918	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: simpl; only 1: Esimpl; only 1: rewrite nth_spec; only 1: unfold hd; only 1: rewrite <- nth_pred_double; only 1: rewrite nth_jump; only 1: easy; only 1: simpl; only 1: Esimpl).	0.184094	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	300	0.0.0.0.0.0	synth with cache (only 1: unfold linear_inter; only 1: apply treeify_ok; only 1: apply inter_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy).	0.028625	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: apply treeify_ok; only 1: apply inter_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy; only 1: auto_tc; only 1: auto_tc).	0.116505	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply choose_spec3' in H1; only 1: congruence).	0.057077	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: revert res; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: mul_permut).	0.338852	26
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct pe; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.059991	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold linear_inter; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite treeify_spec; only 1: rewrite inter_list_spec; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite rev_involutive; only 1: auto_tc).	0.138591	15
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_iff_eq_true; only 1: rewrite mem_spec; only 1: rewrite mem_spec; only 1: rewrite H0; only 1: easy; only 1: auto; only 1: auto).	0.046501	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite treeify_spec; only 1: rewrite inter_list_spec; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite filter_spec; only 1: rewrite mem_spec; only 1: tauto; only 1: intuition; only 1: auto_tc; only 1: rewrite filter_spec; only 1: rewrite mem_spec; only 1: tauto; only 1: easy; only 1: auto_tc).	0.179582	27
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	300	0.1.0.0	synth with cache (only 1: intros ?; only 1: apply acc_implies_P_eventually; only 1: apply P_eventually_implies_acc_ex; only 1: assumption).	0.030567	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	300	0.0.0.0.0	synth with cache (only 1: apply treeify_ok; only 1: apply diff_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy).	0.030794	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.055409	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	300	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_ground_description; only 1: firstorder).	0.033378	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: apply treeify_ok; only 1: apply diff_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy; only 1: auto_tc; only 1: auto_tc).	0.035322	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	300	0	synth with cache (only 1: reflexivity).	0.028686	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold linear_diff; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite treeify_spec; only 1: rewrite diff_list_spec; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite rev_involutive; only 1: auto_tc).	0.121837	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Z.eq; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.069398	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.succ; only 1: unfold Z.eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite add_succ_l; only 1: rewrite add_succ_l; only 1: rewrite H; only 1: easy).	0.068880	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.pred; only 1: unfold Z.eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite add_succ_r; only 1: rewrite add_succ_r; only 1: rewrite H; only 1: easy).	0.075765	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: apply linear_diff_spec; only 1: easy; only 1: intuition; only 1: rewrite filter_spec; only 1: rewrite negb_true_iff; only 1: rewrite <- not_true_iff_false; only 1: rewrite mem_spec; only 1: intuition; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: f_equal; only 1: apply mem_proper; only 1: easy; only 1: easy; only 1: apply fold_remove_spec; only 1: easy).	0.094325	20
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.eq; only 1: unfold Z.add; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite add_shuffle1; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite add_shuffle1; only 1: easy).	0.201396	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_dec	300	0.0	synth with cache (only 1: decide equality; only 1: apply ascii_dec).	0.044190	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	300	0.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.027490	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct t; only 1: invrb; only 1: auto; only 1: descolor; only 1: invrb; only 1: invrb; only 1: auto; only 1: destruct t; only 1: invrb; only 1: descolor; only 1: invrb; only 1: invrb).	0.167967	13
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	300	0.0.0	synth with cache (only 1: destruct x; only 1: destruct y; only 1: trivial).	0.027042	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	300	0	synth with cache (only 1: t_eqb).	0.029900	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	300	0	synth with cache (only 1: t_eqb).	0.033662	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_neq	300	0	synth with cache (only 1: t_eqb).	0.030976	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_compat	300	0	synth with cache (only 1: t_eqb).	0.026213	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.get_correct	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	300	0	synth with cache (only 1: apply maxdepth_log_cardinal).	0.017998	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim s1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_S_n; only 1: auto).	0.192588	20
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	300	0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.134359	7
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct2	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim s; only 1: simpl; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: inversion H0; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: case p; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_S_n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- plus_Snm_nSm; only 1: simpl; only 1: auto).	0.162021	44
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim s; only 1: simpl; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: case p; only 1: intros ?; only 1: inversion H0; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply le_S_n; only 1: auto; only 1: auto).	0.125497	35
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: auto; only 1: auto).	0.223499	15
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.prefix_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	300	0	synth with cache (only 1: auto).	0.027777	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	300	0	synth with cache (only 1: reflexivity).	0.023788	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_nat	300	0	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.027631	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Z	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Zpower_nat_succ_r; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: f_equal; only 1: easy; only 1: apply Nat2Z.is_nonneg).	0.039505	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zpower_nat_Z; only 1: rewrite Zabs2Nat.id_abs; only 1: rewrite Z.abs_eq; only 1: easy; only 1: assumption).	0.031685	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: auto; only 1: auto).	0.257215	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	300	0	synth with cache (only 1: reflexivity).	0.034783	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_exp	300	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.pow_add_r).	0.056706	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	300	0	synth with cache (only 1: reflexivity).	0.021241	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	300	0	synth with cache (only 1: reflexivity).	0.024180	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply Pos.iter_swap_gen; only 1: easy; only 1: destruct 1; only 1: easy).	0.038721	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	300	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: rewrite <- IHn; only 1: easy; only 1: apply Nat2Z.is_nonneg).	0.089404	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: invrb; only 1: destruct t0; only 1: invrb; only 1: invrb; only 1: clear H1; only 1: revert H; only 1: case lbalS_match; only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: intros; only 1: apply rbal'_rb; only 1: auto; only 1: auto).	0.209979	20
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	300	0.0	synth with cache (only 1: apply Pos.iter_swap_gen; only 1: easy).	0.088999	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	300	0.0.0.0	synth with cache (only 1: destruct x; only 1: trivial; only 1: apply two_power_pos_equiv; only 1: trivial).	0.029440	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	300	0	synth with cache (only 1: reflexivity).	0.025634	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	300	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy).	0.035215	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	300	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Zpower_nat_succ_r; only 1: rewrite <- Z.mul_assoc; only 1: rewrite <- IHn; only 1: easy).	0.037405	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zcase_sign	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: apply H; only 1: easy; only 1: apply H0; only 1: easy; only 1: apply H1; only 1: easy).	0.046946	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	300	0.0.0	synth with cache (only 1: rewrite two_power_nat_equiv; only 1: rewrite Zpower_nat_Z; only 1: easy).	0.027278	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_nonneg).	0.027440	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	300	0	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.026570	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	300	0.0.0	synth with cache (only 1: unfold two_power_pos; only 1: rewrite shift_pos_nat; only 1: easy).	0.031209	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case lbalS_match; only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: clear l; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: destruct r1; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: invrb; only 1: right; only 1: auto using rbal'_rb, makeRed_rr; only 1: invrb; only 1: left; only 1: apply rbal'_rb; only 1: auto; only 1: auto).	0.263538	27
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	300	0.0.0.0	synth with cache (only 1: rewrite shift_pos_nat; only 1: rewrite Zpower_pos_nat; only 1: rewrite shift_nat_correct; only 1: easy).	0.031818	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	300	0	synth with cache (only 1: reflexivity).	0.046743	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	300	0	synth with cache (only 1: apply two_power_pos_equiv).	0.026842	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct3	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	300	0.0.0.0	synth with cache (only 1: rewrite Zlength_correct; only 1: rewrite Zlength_correct; only 1: rewrite <- Nat2Z.inj_succ; only 1: easy).	0.033770	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	300	0.0.0.0.0.0	synth with cache (only 1: rewrite Zlength_correct; only 1: destruct l; only 1: auto; only 1: rewrite <- Nat2Z.inj_0; only 1: rewrite Nat2Z.inj_iff; only 1: easy).	0.050091	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	300	0.0.0.0	synth with cache (only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: apply Z.pow_add_r).	0.031061	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	300	0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite two_p_equiv; only 1: apply Z.pow_pos_nonneg; only 1: easy).	0.038637	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	300	0.0.0.0.0	synth with cache (only 1: induction s; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: apply IHs).	0.039107	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	300	0.0.0	synth with cache (only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: apply Z.pow_succ_r).	0.032364	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	300	0.0.0.0.0	synth with cache (only 1: induction s; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: apply IHs).	0.030621	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	300	0.0.0.0.0.0.0	synth with cache (only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: intros; only 1: apply Z.pow_lt_mono_r; only 1: easy; only 1: auto with zarith; only 1: auto using Z.lt_pred_l).	0.039067	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct l; only 1: invrb; only 1: destruct t0; only 1: invrb; only 1: invrb; only 1: clear H0; only 1: revert H1; only 1: case rbalS_match; only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: intros; only 1: apply lbal_rb; only 1: auto; only 1: auto).	0.195403	20
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	300	0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[string_of_list_byte list_byte_of_string]; only 1: erewrite list_ascii_of_string_of_list_ascii; only 1: erewrite List.map_map; only 1: erewrite List.map_ext; only 1: erewrite List.map_id; only 1: reflexivity; only 1: intros ?; only 1: apply byte_of_ascii_of_byte).	0.069974	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Pos2Nat.inj_iter; only 1: rewrite two_power_pos_nat; only 1: induction BinPosDef.Pos.to_nat; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct nat_rect; only 1: destruct p0; only 1: unfold Zdiv_rest_aux; only 1: rewrite two_power_nat_S; only 1: f_equal; only 1: easy).	0.110475	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbalS_match; only 1: destruct 2; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: clear r; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct l; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: destruct l2; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: invrb; only 1: right; only 1: auto using lbal_rb, makeRed_rr; only 1: invrb; only 1: left; only 1: apply lbal_rb; only 1: auto; only 1: auto).	0.286161	27
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.037299	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	300	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.025671	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite ifred_notred in *; only 1: elim_compare x k; only 1: auto; only 1: auto; only 1: auto; only 1: trivial; only 1: trivial; only 1: rewrite ifred_notred; only 1: unfold ins; only 1: fold ins; only 1: elim_compare x k; only 1: auto; only 1: apply lbal_rb; only 1: apply ifred_or in IHrbt1; only 1: intuition; only 1: trivial; only 1: apply rbal_rb; only 1: trivial; only 1: apply ifred_or in IHrbt2; only 1: intuition; only 1: trivial).	0.109521	25
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: auto).	0.025674	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct acc; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.034340	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	300	0.0	synth with cache (only 1: unfold filter; only 1: auto_tc).	0.020583	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	300	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.029552	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	300	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.026098	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.045045	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.046977	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold union; only 1: unfold linear_union; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.027892	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: unfold linear_inter; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.037019	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: unfold linear_diff; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.121049	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.classical_definite_description	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.unique_choice	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_infty	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_zeros	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_first_one	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_idemp	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_comm	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_l	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_r	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: apply ni_min_O_l).	0.027372	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_l	300	0	synth with cache (only 1: trivial).	0.024776	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.NArith.TestOrder.test	300	0	synth with cache (only 1: N.order).	0.031647	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_refl	300	0	synth with cache (only 1: exact ni_min_idemp).	0.025805	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_antisym	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros ?; only 1: intros ?; only 1: rewrite ni_min_comm; only 1: intros ?; only 1: rewrite H; only 1: trivial).	0.041491	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_complete	300	0.0	synth with cache (only 1: rewrite <- Pos.eqb_eq; only 1: easy).	0.039760	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	300	0.0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite <- H; only 1: rewrite ni_min_assoc; only 1: rewrite H0; only 1: reflexivity).	0.145716	6
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_Pcompare	300	0.0.0	synth with cache (only 1: rewrite Pos.compare_eq_iff; only 1: rewrite <- Pos.eqb_eq; only 1: easy).	0.064785	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	300	0	synth with cache (only 1: exact SRinv_ext).	0.029278	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	300	0.0.0	synth with cache (only 1: rewrite Pos.eqb_eq; only 1: rewrite <- Pos.compare_eq_iff; only 1: easy).	0.044160	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_1	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	300	0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.030513	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_Ncompare	300	0.0	synth with cache (only 1: rewrite N.compare_eq_iff; only 1: apply N.eqb_eq).	0.038125	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_case	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	300	0.0.0	synth with cache (only 1: rewrite N.eqb_eq; only 1: rewrite <- N.compare_eq_iff; only 1: easy).	0.045177	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_total	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_complete	300	0	synth with cache (only 1: apply N.eqb_eq).	0.026019	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_induc	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.le_ni_le	300	0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: unfold ni_le; only 1: unfold ni_min; only 1: rewrite Peano.min_l; only 1: reflexivity; only 1: assumption).	0.036740	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_true	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply N.lxor_eq in H; only 1: subst; only 1: apply N.eqb_refl).	0.039664	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_le	300	0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: unfold ni_min; only 1: intros; only 1: inversion H; only 1: apply le_min_r).	0.040094	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_false	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nodd_not_double	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H0; only 1: unfold Nodd in *; only 1: rewrite Ndouble_bit0 in *; only 1: easy).	0.034662	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: apply N.div2_double).	0.055633	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_1	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Npdist; only 1: rewrite N.lxor_nilpotent; only 1: reflexivity).	0.031749	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply N.lxor_eq; only 1: apply Nplength_infty; only 1: exact H).	0.044315	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H0; only 1: unfold Neven in *; only 1: rewrite Ndouble_plus_one_bit0 in *; only 1: easy).	0.051045	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_comm	300	0.0.0.0	synth with cache (only 1: unfold Npdist; only 1: intros; only 1: rewrite N.lxor_comm; only 1: reflexivity).	0.031369	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: destruct a0; only 1: easy; only 1: easy).	0.042035	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra_1	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nbit0_neq	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H1; only 1: easy).	0.043511	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_eq	300	0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: subst; only 1: trivial).	0.033226	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_neq	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: trivial).	0.064697	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_ultra	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: apply Ndiv2_bit_eq; only 1: easy; only 1: easy).	0.050580	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nneq_elim	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	300	0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: rewrite eq_iff_eq_true; only 1: rewrite N.leb_le; only 1: rewrite leb_compare; only 1: rewrite <- N2Nat.inj_compare; only 1: easy).	0.047210	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_Nle	300	0.0.0	synth with cache (only 1: rewrite Nleb_alt; only 1: rewrite N.leb_le; only 1: easy).	0.035307	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_refl	300	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.le_refl).	0.030021	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_antisym	300	0.0.0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: intros; only 1: apply N.le_antisymm; only 1: auto; only 1: auto).	0.044108	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_trans	300	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.le_trans).	0.054866	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_ltb_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	300	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.029508	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	300	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.028536	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	300	0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: apply leb_correct; only 1: apply Nat.lt_le_incl; only 1: apply leb_complete_conv; only 1: assumption).	0.029998	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.invert_heap	300	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto with datatypes).	0.038424	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite N2Nat.inj_double; only 1: rewrite N2Nat.inj_double; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: apply leb_complete; only 1: easy).	0.042086	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rect	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite N2Nat.inj_succ_double; only 1: rewrite N2Nat.inj_succ_double; only 1: apply leb_correct; only 1: apply le_n_S; only 1: apply mult_le_compat_l; only 1: apply leb_complete; only 1: easy).	0.045958	9
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rec	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.low_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	300	0.0.0.0.0	synth with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: red; only 1: apply meq_trans).	0.031391	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Proper_instance_0	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply meq_congr; only 1: easy; only 1: easy).	0.048818	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_Ncompare	300	0.0.0.0	synth with cache (only 1: rewrite N.compare_nle_iff; only 1: rewrite <- Nleb_Nle; only 1: rewrite not_true_iff_false; only 1: easy).	0.035356	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	300	0	synth with cache (only 1: apply <- Nltb_Ncompare).	0.032689	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Nltb_Ncompare; only 1: rewrite N.compare_antisym; only 1: rewrite H; only 1: auto).	0.032897	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_1	300	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.le_min_l).	0.027414	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	300	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.le_min_r).	0.035507	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	300	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb_l).	0.055752	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.merge	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_4	300	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb_r).	0.060384	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.insert	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_5	300	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb).	0.057828	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.list_to_heap	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.071652	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.heap_to_list	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_4	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.142037	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.treesort	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	300	0.0.0.0.0.0	synth with cache (only 1: apply setoid_functional_choice_first_characterization; only 1: split; only 1: exact choice; only 1: split; only 1: exact extensional_function_representative; only 1: exact classic).	0.107100	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.representative_choice	300	0.0	synth with cache (only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: exact setoid_choice).	0.038984	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: red; only 1: simpl; only 1: auto).	0.036571	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold eq; only 1: simpl; only 1: intuition).	0.043698	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_complete	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_eq_iff	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: assumption).	0.032768	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	300	0.0.0	synth with cache (only 1: intros; only 1: unfold Qplus'; only 1: apply Qred_correct).	0.026482	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	300	0.0.0	synth with cache (only 1: intros; only 1: unfold Qmult'; only 1: apply Qred_correct).	0.023607	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	300	0.0.0	synth with cache (only 1: intros; only 1: unfold Qminus'; only 1: apply Qred_correct).	0.028398	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qplus'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.042882	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_to	300	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Unsigned.of_to).	0.025316	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.041082	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_of	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qminus'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.042031	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.037364	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.032653	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_opp	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: unfold Qred; only 1: simpl; only 1: rewrite Z.ggcd_opp; only 1: case BinIntDef.Z.ggcd; only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: simpl; only 1: unfold Qopp; only 1: auto).	0.132223	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	0.035386	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_compare	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Qcompare_comp; only 1: apply Qeq_sym; only 1: apply Qred_correct; only 1: apply Qeq_sym; only 1: apply Qred_correct).	0.039304	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.to_int; only 1: unfold BinNatDef.N.of_int; only 1: unfold norm; only 1: f_equal; only 1: rewrite Unsigned.of_uint_norm; only 1: destruct n; only 1: reflexivity; only 1: apply DecimalPos.Unsigned.of_to).	0.044269	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_le	300	0.0.0.0	synth with cache (only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite <- Qred_compare; only 1: easy).	0.111173	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_of	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	300	0.0.0.0	synth with cache (only 1: rewrite Qlt_alt; only 1: rewrite Qlt_alt; only 1: rewrite <- Qred_compare; only 1: easy).	0.035263	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	300	0.0.0	synth with cache (only 1: unfold BinNatDef.N.of_int; only 1: rewrite norm_invol; only 1: easy).	0.028569	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropAnd	300	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.057803	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropOr	300	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.048671	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropArrow	300	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.042068	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	300	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.061717	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropNot	300	0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: assumption).	0.109346	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: reflexivity; only 1: rewrite Z2Nat.id; only 1: trivial; only 1: intros ?; only 1: inversion H; only 1: reflexivity).	0.042986	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_max_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_min_spec	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsrt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring; only 1: exact Qplus_assoc; only 1: intros ?; only 1: red; only 1: simpl; only 1: destruct Qnum; only 1: auto; only 1: auto; only 1: auto; only 1: exact Qmult_comm; only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring; only 1: reflexivity; only 1: exact Qplus_opp_r).	0.368218	53
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsft	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Qsrt; only 1: discriminate; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: exact H).	0.040516	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qpower_theory	300	0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.032048	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex1	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.125947	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	300	0.1	synth with cache (only 1: intros; only 1: ring).	0.035327	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex3	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.036951	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex4	300
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	300	0	synth with cache (only 1: apply eqb_true_iff).	0.024565	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex5	300	0	synth with cache (only 1: ring).	0.032377	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	300	0	synth with cache (only 1: apply Nat.eqb_eq).	0.024199	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	300	0	synth with cache (only 1: ring).	0.045292	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	300	0	synth with cache (only 1: apply Nat.leb_le).	0.032326	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	300	0	synth with cache (only 1: apply Z.eqb_eq).	0.027877	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.037909	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex8	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.038200	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex9	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.034979	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex10	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_plus	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.104402	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_opp	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.036280	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: auto).	0.044727	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- mem_spec; only 1: auto).	0.068354	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply -> mem_spec; only 1: auto).	0.035094	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- equal_spec; only 1: auto).	0.037108	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply -> equal_spec; only 1: auto).	0.034121	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- subset_spec; only 1: auto).	0.036384	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply -> subset_spec; only 1: auto).	0.032194	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- is_empty_spec; only 1: auto).	0.028418	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply -> is_empty_spec; only 1: auto).	0.032402	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.032095	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.034917	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	300	0.0.0.0.0.0.0	synth with cache (only 1: rewrite add_spec; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: elim H; only 1: auto with relations; only 1: auto).	0.054087	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.037591	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- remove_spec; only 1: auto with relations).	0.036043	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	300	0.0.0.0	synth with cache (only 1: constructor; only 1: exact rplus_morph; only 1: exact rtimes_morph; only 1: exact ropp_morph).	0.032120	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	300	0.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.041327	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	300	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.044140	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	300	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.041002	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	300	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.112875	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	300	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.036171	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	300	0.0.0.0.1	synth with cache (only 1: split; only 1: apply In_1; only 1: auto; only 1: apply In_1; only 1: auto).	0.058569	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	300	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.032702	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	300	1.1.1	synth with cache (only 1: split; only 1: apply mem_1; only 1: apply mem_2).	0.032377	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	300	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.040621	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	300	0.0.0.0	synth with cache (only 1: rewrite mem_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.055900	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	300	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.035269	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	300	1.1.1	synth with cache (only 1: split; only 1: apply equal_1; only 1: apply equal_2).	0.040858	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	300	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.042113	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	300	1.1.1	synth with cache (only 1: split; only 1: apply subset_1; only 1: apply subset_2).	0.071812	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	300	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.034844	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	300	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.044410	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	300	0.0	synth with cache (only 1: rewrite diff_spec; only 1: auto).	0.040668	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	300	0.1.1	synth with cache (only 1: split; only 1: apply is_empty_1; only 1: apply is_empty_2).	0.025295	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply singleton_1; only 1: apply singleton_2).	0.032903	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.049723	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	300	0.0.0.0	synth with cache (only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2).	0.034386	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	300	0.0.0.0	synth with cache (only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	0.025662	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.175110	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply union_1; only 1: destruct 1; only 1: apply union_2; only 1: auto; only 1: apply union_3; only 1: auto).	0.030722	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: apply inter_1 with s'; only 1: auto; only 1: apply inter_2 with s; only 1: auto; only 1: destruct 1; only 1: apply inter_3; only 1: auto; only 1: auto).	0.039331	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.052976	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: apply diff_1 with s'; only 1: auto; only 1: apply diff_2 with s; only 1: auto; only 1: destruct 1; only 1: apply diff_3; only 1: auto; only 1: auto).	0.046886	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- for_all_spec; only 1: auto; only 1: auto).	0.043544	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: apply filter_1 with f; only 1: auto; only 1: auto; only 1: apply filter_2 with s; only 1: auto; only 1: auto; only 1: destruct 1; only 1: apply filter_3; only 1: auto; only 1: auto; only 1: auto).	0.051619	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply -> for_all_spec; only 1: auto; only 1: auto).	0.040183	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply for_all_1; only 1: auto; only 1: apply for_all_2; only 1: auto).	0.035581	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- exists_spec; only 1: auto; only 1: auto).	0.047334	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply exists_1; only 1: auto; only 1: apply exists_2; only 1: auto).	0.034185	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply -> exists_spec; only 1: auto; only 1: auto).	0.044892	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	300	1.1.1	synth with cache (only 1: split; only 1: apply elements_1; only 1: apply elements_2).	0.038084	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply <- elements_spec1; only 1: auto).	0.036390	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply -> elements_spec1; only 1: auto).	0.040847	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: intuition).	0.106086	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	300	0.0	synth with cache (only 1: apply iff_sym; only 1: apply mem_spec).	0.096364	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	300	0.0.0.0	synth with cache (only 1: rewrite <- mem_spec; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.036002	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	300	0.0	synth with cache (only 1: apply iff_sym; only 1: apply equal_spec).	0.029151	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	300	0.0	synth with cache (only 1: apply iff_sym; only 1: apply subset_spec).	0.025643	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	300	0.0	synth with cache (only 1: apply iff_sym; only 1: apply is_empty_spec).	0.028614	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	300	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.039418	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	300	0.0	synth with cache (only 1: rewrite add_spec; only 1: intuition).	0.047542	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	300	0.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.042670	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	300	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.031225	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	300	0.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.049089	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply iff_sym; only 1: apply for_all_spec; only 1: auto).	0.039932	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply iff_sym; only 1: apply exists_spec; only 1: auto).	0.039503	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	300	0.0	synth with cache (only 1: apply iff_sym; only 1: apply elements_spec1).	0.028947	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	300	0	synth with cache (only 1: fsetdec).	0.169008	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	300	0	synth with cache (only 1: fsetdec).	0.095375	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	300	0	synth with cache (only 1: fsetdec).	0.067697	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	300	0	synth with cache (only 1: fsetdec).	0.081458	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_to	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.of_uint; only 1: rewrite DecimalPos.Unsigned.of_to; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: unfold BinIntDef.Z.of_uint; only 1: rewrite DecimalPos.Unsigned.of_to; only 1: destruct p; only 1: auto; only 1: auto; only 1: auto).	0.049955	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	300	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply E.eq_refl; only 1: red; only 1: apply E.eq_sym; only 1: red; only 1: apply E.eq_trans).	0.038684	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	300	0	synth with cache (only 1: fsetdec).	0.104528	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	300	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply eq_refl; only 1: red; only 1: apply eq_sym; only 1: red; only 1: apply eq_trans).	0.029472	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_of	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_inj	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_surj	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	300	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite is_empty_iff; only 1: rewrite is_empty_iff; only 1: rewrite H; only 1: intuition).	0.066040	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_int_norm	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_inj	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.036680	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_int_norm; only 1: rewrite H; only 1: apply of_int_norm).	0.056566	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_0	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite singleton_iff; only 1: rewrite singleton_iff; only 1: rewrite H; only 1: intuition).	0.047275	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	300	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.156997	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	300	0.0	synth with cache (only 1: simpl; only 1: auto).	0.029954	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	300	0	synth with cache (only 1: fsetdec).	0.088931	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	300	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.090355	20
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	300	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_iff; only 1: rewrite union_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.110102	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	300	0	synth with cache (only 1: exact gempty).	0.030147	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	300	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_iff; only 1: rewrite inter_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.142462	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	300	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_iff; only 1: rewrite diff_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.086806	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	300	0.0.0.0.0.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: unfold Empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: auto).	0.066372	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	300	0.0.0	synth with cache (only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	0.039758	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	300	0.0	synth with cache (only 1: red; only 1: auto).	0.027184	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite singleton_iff; only 1: rewrite singleton_iff; only 1: rewrite H; only 1: intuition).	0.041000	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	300	0.0	synth with cache (only 1: unfold Subset; only 1: eauto).	0.033241	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.085255	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	300	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct b'; only 1: intuition; only 1: intuition; only 1: intros ?; only 1: destruct b'; only 1: intuition; only 1: intuition).	0.127228	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	300	0.0.0.0	synth with cache (only 1: unfold Subset; only 1: unfold Empty; only 1: unfold impl; only 1: firstorder).	0.039602	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.114027	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: split; only 1: auto; only 1: auto; only 1: intros; only 1: destruct o; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: symmetry; only 1: rewrite <- H; only 1: auto; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: auto).	0.072627	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.086952	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.104353	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.098164	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply MapsTo_1; only 1: auto; only 1: apply MapsTo_1; only 1: auto).	0.032112	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply mem_1; only 1: apply mem_2).	0.029765	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_in_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.055090	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_iff; only 1: rewrite union_iff; only 1: intuition).	0.081028	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.073609	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply find_1; only 1: apply find_2).	0.055879	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: rewrite diff_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.083830	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_iff; only 1: rewrite inter_iff; only 1: intuition).	0.127670	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros ?; only 1: elim H; only 1: exists e; only 1: auto; only 1: discriminate; only 1: intros; only 1: intros ?; only 1: destruct H0; only 1: rewrite find_mapsto_iff in H0; only 1: rewrite H in H0; only 1: discriminate).	0.062692	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	300	0.0.0	synth with cache (only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	0.049272	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	300	0	synth with cache (only 1: fsetdec).	0.080144	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_iff; only 1: rewrite diff_iff; only 1: intuition).	0.080833	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_find_in_iff; only 1: rewrite mem_in_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.124902	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: tauto; only 1: auto; only 1: auto).	0.066782	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply equal_1; only 1: apply equal_2).	0.040418	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: rewrite H1; only 1: intuition; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite <- H0; only 1: rewrite <- H0; only 1: auto; only 1: auto).	0.125164	21
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	300	0	synth with cache (only 1: firstorder).	0.026834	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite empty_mapsto_iff in H; only 1: intuition; only 1: intuition).	0.032298	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply is_empty_1; only 1: apply is_empty_2).	0.029866	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	300	0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros; only 1: rewrite filter_iff in *; only 1: intuition; only 1: intuition; only 1: intuition).	0.054291	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	300	0	synth with cache (only 1: firstorder).	0.040790	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.072316	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.090966	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).	0.045589	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: intuition).	0.085847	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: intuition).	0.063560	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	300	0.0.0.0	synth with cache (only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	0.033546	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	300	0.0.0	synth with cache (only 1: split; only 1: apply elements_1; only 1: apply elements_2).	0.029689	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x0; only 1: apply elements_1; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x0; only 1: apply elements_2; only 1: auto).	0.044295	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: rewrite diff_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.178081	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold MapsTo; only 1: intros ?; only 1: intros ?; only 1: rewrite mem_find; only 1: destruct 1; only 1: rewrite H; only 1: auto).	0.050283	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold MapsTo; only 1: intros ?; only 1: intros ?; only 1: rewrite mem_find; only 1: destruct find; only 1: exists a; only 1: auto; only 1: intros; only 1: discriminate).	0.066669	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.051534	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: intuition; only 1: auto; only 1: auto).	0.075281	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	300	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.030894	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	300	0.0	synth with cache (only 1: red; only 1: auto).	0.039926	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: intuition; only 1: auto; only 1: auto).	0.148240	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	300	0.0	synth with cache (only 1: rewrite Empty_alt; only 1: apply gempty).	0.110478	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	300	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.039887	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Empty_Node; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: subst; only 1: rewrite IHt0_1; only 1: simpl; only 1: auto; only 1: auto).	0.138584	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: rewrite H1; only 1: intuition; only 1: red; only 1: red; only 1: intros; only 1: rewrite <- H0; only 1: rewrite <- H0; only 1: auto; only 1: auto).	0.122630	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply MapsTo_iff; only 1: auto).	0.044316	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	300	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros ?; only 1: rewrite H; only 1: clear H; only 1: apply gss).	0.065896	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	300	0	synth with cache (only 1: fsetdec).	0.098016	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	300	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros; only 1: rewrite gso; only 1: auto; only 1: auto).	0.039274	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	300	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros ?; only 1: rewrite gso; only 1: auto; only 1: auto).	0.073148	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	300	0	synth with cache (only 1: auto with map).	0.028659	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	300	0	synth with cache (only 1: fsetdec).	0.098126	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	300	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros ?; only 1: rewrite gro; only 1: auto; only 1: auto).	0.040629	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	300	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	0.059409	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	300	0.0.0.0	synth with cache (only 1: intros; only 1: destruct eq_dec; only 1: auto with map; only 1: auto with map).	0.050116	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite add_eq_o; only 1: auto; only 1: auto).	0.043677	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: rewrite InA_alt; only 1: intros ?; only 1: destruct H; only 1: destruct x0; only 1: destruct H; only 1: red in H; only 1: simpl in H; only 1: unfold PositiveOrderedTypeBits.eq in H; only 1: destruct H; only 1: subst; only 1: apply elements_complete; only 1: auto).	0.073384	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite add_neq_o; only 1: auto; only 1: auto).	0.047955	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite add_o; only 1: unfold eqb; only 1: destruct eq_dec; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.068860	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	300	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: intuition; only 1: easy; only 1: easy).	0.147732	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	300	0	synth with cache (only 1: fsetdec).	0.033497	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	300	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_neq_mapsto_iff; only 1: intuition; only 1: intuition).	0.064672	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	300	0	synth with cache (only 1: exact ring0).	0.161808	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	300	0.0.0.0	synth with cache (only 1: intros; only 1: destruct eq_dec; only 1: auto with map; only 1: auto with map).	0.051529	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	300	0	synth with cache (only 1: fsetdec).	0.071283	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite remove_eq_o; only 1: auto; only 1: auto).	0.040494	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	300	0	synth with cache (only 1: exact ring0).	0.141704	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	300	0.0	synth with cache (only 1: unfold elements; only 1: apply xelements_sort).	0.036950	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	0.051763	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	300	0.0	synth with cache (only 1: apply ME.Sort_NoDupA; only 1: apply elements_3).	0.038047	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	300	0	synth with cache (only 1: fsetdec).	0.074904	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite remove_o; only 1: unfold eqb; only 1: destruct eq_dec; only 1: auto; only 1: auto).	0.047898	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite map_o; only 1: destruct find; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.053433	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold map in *; only 1: eapply mapi_2; only 1: eauto).	0.036436	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	300	0	synth with cache (only 1: fsetdec).	0.090338	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite find_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: auto).	0.171142	19
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equivb; only 1: unfold Equiv; only 1: unfold Cmp; only 1: intuition; only 1: red in H; only 1: rewrite H; only 1: eauto; only 1: red in H; only 1: rewrite <- H; only 1: eauto).	0.168968	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold fold; only 1: unfold elements; only 1: rewrite xfoldi_1; only 1: reflexivity).	0.125602	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Equal_Equiv; only 1: apply Equiv_Equivb; only 1: auto).	0.034740	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_Equivb; only 1: unfold cmp; only 1: clear cmp; only 1: intros; only 1: destruct eq_elt_dec; only 1: intuition; only 1: intuition; only 1: easy).	0.099001	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	300	0.0	synth with cache (only 1: red; only 1: reflexivity).	0.025214	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	300	0.0	synth with cache (only 1: unfold Equal; only 1: auto).	0.034291	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	300	0.0	synth with cache (only 1: unfold Equal; only 1: congruence).	0.032613	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	300	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply Equal_refl; only 1: red; only 1: apply Equal_sym; only 1: red; only 1: apply Equal_trans).	0.049255	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	300	0	synth with cache (only 1: fsetdec).	0.097842	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros; only 1: intros ?; only 1: rewrite <- H in H1; only 1: eapply H0; only 1: eapply H1; only 1: intros; only 1: intros ?; only 1: rewrite H in H1; only 1: eapply H0; only 1: eapply H1).	0.095649	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	300	0.0.0.0	synth with cache (only 1: intros until 3; only 1: intros ?; only 1: rewrite <- H2; only 1: fsetdec).	0.136873	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_bool_alt; only 1: rewrite <- is_empty_iff; only 1: rewrite <- is_empty_iff; only 1: rewrite H; only 1: intuition).	0.053348	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_bool_alt; only 1: rewrite <- mem_in_iff; only 1: rewrite <- mem_in_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.070493	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	300	0	synth with cache (only 1: fsetdec).	0.088917	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: rewrite H; only 1: rewrite H0; only 1: split; only 1: auto; only 1: auto).	0.083597	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct PositiveOrderedTypeBits.eq_dec; only 1: intropattern subst -> e; only 1: apply gss; only 1: apply gso; only 1: auto).	0.047823	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_asym	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_o; only 1: rewrite add_o; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: elim n; only 1: rewrite <- H; only 1: auto; only 1: destruct eq_dec; only 1: elim n; only 1: rewrite H; only 1: auto; only 1: auto).	0.093476	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_o; only 1: rewrite remove_o; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: elim n; only 1: rewrite <- H; only 1: auto; only 1: destruct eq_dec; only 1: elim n; only 1: rewrite H; only 1: auto; only 1: auto).	0.114677	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_refl	300	0.0.0	synth with cache (only 1: split; only 1: apply CRle_refl; only 1: apply CRle_refl).	0.032671	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite map_o; only 1: rewrite map_o; only 1: rewrite H; only 1: auto).	0.083347	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intros ?; only 1: contradiction; only 1: intros ?; only 1: contradiction).	0.149409	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	300	0.0.0.0.0	synth with cache (only 1: unfold eq_key; only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.039606	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply CReq_refl; only 1: intros ?; only 1: intros ?; only 1: apply CReq_sym; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CReq_trans).	0.035269	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq_key_elt; only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder; only 1: eauto with *; only 1: congruence).	0.063177	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_1_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRplus_lt_reg_l in H0; only 1: apply H; only 1: exact H0).	0.036288	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRplus_lt_reg_r in H0; only 1: apply H; only 1: exact H0).	0.035734	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CRplus_lt_compat_l; only 1: exact H0).	0.038162	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_r	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CRplus_lt_compat_r; only 1: exact H0).	0.039254	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	300	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: apply empty_1).	0.029287	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct x; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite of_list_1; only 1: intuition; only 1: intuition).	0.057004	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite of_list_1b; only 1: rewrite elements_o; only 1: auto; only 1: apply elements_3w).	0.047227	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_lt_cancel	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	300	0.0.0	synth with cache (only 1: rewrite fold_1; only 1: symmetry; only 1: apply fold_left_rev_right).	0.042765	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRzero_double	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).	0.055694	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmult_lt_reg_l in H1; only 1: contradiction; only 1: exact H).	0.081093	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qopp_lt_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_opp_l; only 1: rewrite Z.mul_opp_l; only 1: apply Z.opp_lt_mono).	0.053184	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmult_lt_reg_r in H1; only 1: contradiction; only 1: exact H).	0.079958	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_Z	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: zero_or_not z; only 1: apply Z.div_1_r).	0.048376	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_Z	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Qceiling; only 1: simpl; only 1: rewrite Z.div_1_r; only 1: apply Z.opp_involutive).	0.030347	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_floor_ceiling	300	0	synth with cache (only 1: eauto with qarith).	0.040446	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_zero	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qlt_floor	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_opp	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_pos	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_resp_le	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with qarith).	0.031933	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.063408	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_comp_Proper	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.102319	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_below_rat	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_const	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_Add; only 1: red; only 1: auto; only 1: red; only 1: auto).	0.039888	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite fold_1; only 1: symmetry; only 1: apply fold_left_length).	0.145073	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty; only 1: destruct elements; only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.183853	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- cardinal_Empty; only 1: auto).	0.030937	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).	0.041331	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_case	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_wd_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_pos	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_neg	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_nonneg	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Qabs_case; only 1: auto; only 1: apply Qopp_le_compat).	0.030962	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Zabs_Qabs	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.034643	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	300	0.0.0.0.0.0	synth with cache (only 1: unfold partition; only 1: simpl; only 1: intros; only 1: subst m1; only 1: apply filter_iff; only 1: auto).	0.047266	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold partition; only 1: simpl; only 1: intros; only 1: subst m2; only 1: rewrite filter_iff; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: destruct f; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: rewrite H0; only 1: auto; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equal; only 1: apply Hf; only 1: auto; only 1: auto).	0.097586	29
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_opp	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qmult	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: simpl; only 1: rewrite Z.abs_mul; only 1: reflexivity).	0.037381	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: simpl; only 1: unfold Qinv; only 1: case_eq Qnum; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl).	0.057995	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qminus	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qminus; only 1: unfold Qopp; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite <- Z.abs_opp; only 1: f_equal; only 1: f_equal; only 1: ring).	0.081745	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qle_Qabs	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: apply Disjoint_sym; only 1: auto; only 1: intros; only 1: rewrite H0; only 1: intuition).	0.101685	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qle_condition	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity2	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply Qred_identity2; only 1: auto; only 1: intros; only 1: apply Qred_identity; only 1: auto).	0.041815	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: rewrite filter_iff; only 1: intuition; only 1: rewrite mem_1 in *; only 1: discriminate; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear y0; only 1: clear x0; only 1: rewrite H; only 1: auto).	0.120095	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite diff_mapsto_iff in H; only 1: destruct H; only 1: split; only 1: exists x; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: exists x; only 1: rewrite diff_mapsto_iff; only 1: auto).	0.055637	18
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_is_canon	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_decomp	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: rewrite H; only 1: easy).	0.031490	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_involutive	300	0.0.0	synth with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	0.030347	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold restrict; only 1: rewrite filter_iff; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear y0; only 1: clear x0; only 1: rewrite H; only 1: auto).	0.146676	18
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qceq_alt	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qccompare; only 1: intros; only 1: rewrite <- Qeq_alt; only 1: split; only 1: intros ?; only 1: intropattern subst <- H; only 1: auto with qarith; only 1: auto).	0.035025	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite restrict_mapsto_iff in H; only 1: destruct H; only 1: split; only 1: exists x; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: exists x; only 1: rewrite restrict_mapsto_iff; only 1: auto).	0.058214	18
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcgt_alt	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_alt	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	300	0.0.0	synth with cache (only 1: unfold Q2Qc; only 1: intros ?; only 1: discriminate H).	0.119782	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_0_l).	0.033833	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	300	0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: auto).	0.035098	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_0_r).	0.059089	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_comm	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_comm).	0.033999	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_involutive	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qopp_involutive).	0.032199	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Disjoint; only 1: split; only 1: intros; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: auto; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.169234	16
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	0.054069	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_assoc	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_assoc).	0.051276	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	300	0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: unfold Included; only 1: unfold In; only 1: unfold mkEns; only 1: intuition).	0.038117	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: split).	0.044866	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_inclusion; only 1: unfold Subset; only 1: unfold Same_set; only 1: unfold mkEns; only 1: intuition).	0.049756	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	0.121716	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: intros ?; only 1: set_iff; only 1: inversion 1).	0.075436	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_l	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_1_l).	0.034593	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_1_r).	0.047079	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_comm	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_comm).	0.034861	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_r).	0.052266	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l).	0.054680	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto; only 1: auto).	0.110660	17
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.048085	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto).	0.098992	17
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.063133	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	300	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qinv_mult_distr).	0.062849	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qred_abs	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: destruct Qnum; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p1; only 1: simpl; only 1: auto).	0.078914	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets; only 1: auto with sets).	0.139132	18
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_canon	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Qred_abs; only 1: rewrite H; only 1: easy).	0.030056	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	300	0.0.0.0.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_r; only 1: apply Qcmult_1_r; only 1: auto).	0.040464	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_l; only 1: auto).	0.041309	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_pos	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_refl	300	0.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qle_refl).	0.045362	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros; only 1: red in H; only 1: rewrite H in H0; only 1: destruct H0; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros; only 1: red in H; only 1: rewrite H; only 1: inversion H0; only 1: auto; only 1: inversion H1; only 1: auto).	0.093535	21
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_antisym	300	0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qc_is_canon; only 1: apply Qle_antisym; only 1: auto; only 1: auto).	0.034337	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_neg	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_nonneg	300	0	synth with cache (only 1: apply Qabs_nonneg).	0.031267	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: split; only 1: auto; only 1: contradict H1; only 1: inversion H1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	0.088019	17
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_eq	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle	300	0.0.0.0	synth with cache (only 1: Qc_unfolds; only 1: case Qred_abs; only 1: rewrite Qred_le; only 1: apply Qabs_triangle).	0.045362	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_weak	300	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qlt_le_weak; only 1: auto).	0.031740	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcle_Qcabs	300	0	synth with cache (only 1: apply Qle_Qabs).	0.034869	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_lt_le	300	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qnot_lt_le; only 1: auto).	0.056282	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: auto).	0.034682	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_le_lt	300	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qnot_le_lt; only 1: auto).	0.056936	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: unfold Equal; only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: rewrite H; only 1: tauto).	0.048194	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	300	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qlt_not_le; only 1: auto).	0.061857	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_not_lt	300	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qle_not_lt; only 1: auto).	0.043080	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros ?; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: auto).	0.053059	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_dec	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_dec	300	0.0.0.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros; only 1: apply Qlt_le_dec).	0.034306	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- mem_iff; only 1: rewrite <- mem_iff; only 1: apply subset_2; only 1: auto).	0.159551	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qcopp; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qopp_le_compat; only 1: auto).	0.052773	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QSORaddon	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: ring; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply Qeq_bool_eq; only 1: assumption; only 1: constructor; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Qeq_bool_iff; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy; only 1: apply Qle_bool_imp_le).	0.163278	24
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_null	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	300	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.029190	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_minus_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qle_minus_iff).	0.069445	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	300	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite <- is_empty_iff; only 1: auto with set).	0.037566	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	300	0	synth with cache (only 1: auto with set).	0.030926	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	300	0	synth with cache (only 1: auto with set).	0.030263	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcplus; only 1: unfold Qcopp; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qlt_minus_iff).	0.070136	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	300	0	synth with cache (only 1: auto with set).	0.027106	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_compat	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	300	1	synth with cache (only 1: apply add_neq_b).	0.031661	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	300	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.033749	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	300	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.050948	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	300	1	synth with cache (only 1: apply remove_neq_b).	0.026379	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_le_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcplus; only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qplus_le_compat; only 1: auto; only 1: auto).	0.153319	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeval_formula; only 1: destruct f; only 1: rewrite Qeval_expr_compat; only 1: rewrite Qeval_expr_compat; only 1: unfold Qeval_formula'; only 1: unfold Qeval_expr'; only 1: split; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.158077	34
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	300	0.0	synth with cache (only 1: rewrite singleton_equal_add; only 1: auto with set).	0.028765	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	300	0	synth with cache (only 1: apply union_b).	0.027730	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	300	0	synth with cache (only 1: apply inter_b).	0.029585	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcmult; only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto; only 1: auto).	0.079251	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct p'; only 1: unfold gtb; only 1: unfold O.ltk; only 1: simpl; only 1: destruct E.compare; only 1: intuition; only 1: discriminate; only 1: order; only 1: intuition; only 1: discriminate; only 1: order; only 1: intuition).	0.109262	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	300	0	synth with cache (only 1: apply diff_b).	0.027991	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.028317	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite not_mem_iff; only 1: auto).	0.028448	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	300	0	synth with cache (only 1: auto with set).	0.034541	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QWeakChecker_sound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	300	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- equal_iff; only 1: rewrite <- equal_iff; only 1: intuition).	0.052151	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcmult; only 1: unfold Qclt; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct in *; only 1: rewrite Qred_correct in *; only 1: eapply Qmult_lt_compat_r; only 1: eauto; only 1: eauto).	0.078658	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct p'; only 1: unfold leb; only 1: unfold gtb; only 1: unfold O.ltk; only 1: simpl; only 1: destruct E.compare; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: intuition).	0.102415	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_1	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QTautoChecker_sound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	300	0	synth with cache (only 1: auto with set fset).	0.037080	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	300	0	synth with cache (only 1: auto with set).	0.033300	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	300	0	synth with cache (only 1: auto with set).	0.065920	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: f_equal; only 1: apply gtb_compat; only 1: auto).	0.040781	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_pos	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Qc_eq_bool; only 1: case Qc_eq_dec; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: clear n; only 1: inversion H).	0.040890	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	300	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: intros; only 1: apply subset_trans with s'; only 1: auto; only 1: auto).	0.077402	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	300	0	synth with cache (only 1: auto with set).	0.030044	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcrt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: exact Qcmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	0.144053	24
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcft	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Qcrt; only 1: exact Q_apart_0_1; only 1: reflexivity; only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.064838	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	300	0	synth with cache (only 1: auto with set).	0.035847	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	300	0	synth with cache (only 1: auto with set).	0.030223	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_equal; only 1: rewrite not_mem_iff; only 1: auto).	0.047177	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply add_remove; only 1: auto with set).	0.032970	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_add; only 1: rewrite not_mem_iff; only 1: auto).	0.033060	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.test_field	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	300	0	synth with cache (only 1: auto with set).	0.031454	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct FM.eq_dec; only 1: intuition; only 1: intuition).	0.125013	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	300	0.0.0	synth with cache (only 1: intros; only 1: apply singleton_1; only 1: auto with set).	0.038771	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	300	0	synth with cache (only 1: auto with set).	0.033052	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	300	0	synth with cache (only 1: auto with set).	0.050391	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	300	0	synth with cache (only 1: auto with set).	0.031473	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	300	0	synth with cache (only 1: auto with set).	0.029979	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	300	0	synth with cache (only 1: auto with set).	0.031944	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	300	0	synth with cache (only 1: auto with set).	0.036405	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	300	0	synth with cache (only 1: auto with set).	0.032248	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	300	0	synth with cache (only 1: auto with set).	0.029221	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	300	0	synth with cache (only 1: auto with set).	0.029742	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply union_subset_3; only 1: auto with set; only 1: auto with set).	0.051835	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	300	0	synth with cache (only 1: auto with set).	0.029451	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	300	0	synth with cache (only 1: auto with set).	0.043476	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	300	0	synth with cache (only 1: auto with set).	0.037026	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	300	0	synth with cache (only 1: auto with set).	0.028199	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	300	0	synth with cache (only 1: auto with set).	0.037298	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	300	0	synth with cache (only 1: auto with set).	0.038615	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	300	0	synth with cache (only 1: auto with set).	0.034757	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	300	0	synth with cache (only 1: auto with set).	0.033432	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply inter_add_2; only 1: rewrite not_mem_iff; only 1: auto).	0.074817	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	300	0	synth with cache (only 1: auto with set).	0.073377	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	300	0	synth with cache (only 1: auto with set).	0.067129	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	300	0	synth with cache (only 1: fsetdec).	0.128326	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply inter_subset_3; only 1: auto with set; only 1: auto with set).	0.103487	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	300	0	synth with cache (only 1: auto with set).	0.040908	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	300	0	synth with cache (only 1: fsetdec).	0.060763	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	300	0	synth with cache (only 1: auto with set).	0.032449	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	300	0	synth with cache (only 1: auto with set).	0.045355	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply sort_equivlistA_eqlistA; only 1: auto with *; only 1: auto with *; only 1: red; only 1: intros; only 1: destruct x; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite H; only 1: split; only 1: auto; only 1: auto).	0.112278	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	300	0	synth with cache (only 1: fsetdec).	0.081216	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	300	0	synth with cache (only 1: auto with set).	0.030476	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	300	0	synth with cache (only 1: auto with set).	0.025693	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	300	0	synth with cache (only 1: fsetdec).	0.083728	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	300	0	synth with cache (only 1: fsetdec).	0.070658	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	300	0	synth with cache (only 1: fsetdec).	0.071359	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	300	0	synth with cache (only 1: fsetdec).	0.055073	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	300	0	synth with cache (only 1: fsetdec).	0.056717	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: destruct mem; only 1: destruct mem; only 1: intuition; only 1: intuition; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.086994	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	300	0	synth with cache (only 1: fsetdec).	0.071837	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	300	0	synth with cache (only 1: apply fold_empty).	0.033238	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	300	0	synth with cache (only 1: fsetdec).	0.067212	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	300	0	synth with cache (only 1: fsetdec).	0.137938	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	300	0	synth with cache (only 1: auto with set fset).	0.094923	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	300	0	synth with cache (only 1: fsetdec).	0.063124	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cardinal_2; only 1: rewrite not_mem_iff; only 1: auto).	0.031117	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply remove_cardinal_1; only 1: auto with set).	0.038544	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	300	0	synth with cache (only 1: fsetdec).	0.067641	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: apply equal_2; only 1: auto with set).	0.033976	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply union_cardinal; only 1: intros; only 1: rewrite exclusive_set; only 1: auto).	0.040041	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	300	0.0.0	synth with cache (only 1: intros; only 1: apply subset_cardinal; only 1: auto with set).	0.037093	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	300	0.0.0.0.0	synth with cache (only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.037573	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	300	0.0.0	synth with cache (only 1: intros; only 1: apply filter_b; only 1: auto).	0.030902	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	300	0	synth with cache (only 1: fsetdec).	0.072159	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	300	0	synth with cache (only 1: fsetdec).	0.067322	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	300	0	synth with cache (only 1: fsetdec).	0.088566	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	300	0	synth with cache (only 1: auto with set).	0.036356	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	300	0	synth with cache (only 1: auto with set).	0.033043	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: intros; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations; only 1: auto; only 1: auto).	0.151384	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: unfold Equal; only 1: intros; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace x with a in H; only 1: congruence; only 1: auto; only 1: auto; only 1: auto).	0.160142	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold max_elt in *; only 1: rewrite elements_mapsto_iff; only 1: induction elements; only 1: discriminate; only 1: destruct a; only 1: destruct l; only 1: simpl in *; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type; only 1: simpl in *; only 1: constructor 2; only 1: auto).	0.138610	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equal; only 1: intros; only 1: set_iff; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: set_iff; only 1: tauto; only 1: auto; only 1: auto; only 1: auto).	0.120851	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_mapsto_iff; only 1: destruct elements; only 1: discriminate; only 1: destruct p; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).	0.074214	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_Empty; only 1: destruct elements; only 1: auto; only 1: destruct p; only 1: discriminate).	0.054124	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	300	0	synth with cache (only 1: fsetdec).	0.118161	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_b; only 1: rewrite exists_b; only 1: induction elements; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	0.052243	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	300	0.0.0.0.0.0	synth with cache (only 1: unfold compat_bool in *; only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.037890	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_exists; only 1: rewrite negb_true_iff; only 1: apply for_all_mem_3 with x; only 1: auto; only 1: auto; only 1: rewrite negb_false_iff; only 1: auto; only 1: auto).	0.045943	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	300	0	synth with cache (only 1: fsetdec).	0.133301	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	300	0	synth with cache (only 1: fsetdec).	0.084202	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	300	0	synth with cache (only 1: fsetdec).	0.124775	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sum; only 1: apply fold_compat; only 1: auto with fset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H2; only 1: rewrite H3; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: f_equal; only 1: apply PeanoNat.Nat.add_comm; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H2; only 1: rewrite H3; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: f_equal; only 1: apply PeanoNat.Nat.add_comm; only 1: auto with fset).	0.117573	37
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	300	0	synth with cache (only 1: fsetdec).	0.116491	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	300	0	synth with cache (only 1: fsetdec).	0.107461	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	300	0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	0.040045	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn; only 1: exists x; only 1: auto; only 1: destruct IHIn; only 1: exists x; only 1: auto).	0.053918	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	300	0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: eauto; only 1: unfold In0; only 1: apply In_MapsTo).	0.044666	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	300	0	synth with cache (only 1: fsetdec).	0.052377	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	300	0	synth with cache (only 1: fsetdec).	0.054039	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	300	0	synth with cache (only 1: fsetdec).	0.117487	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	300	0	synth with cache (only 1: fsetdec).	0.080881	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	300	0	synth with cache (only 1: fsetdec).	0.091078	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type).	0.134986	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	300	0	synth with cache (only 1: fsetdec).	0.095744	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	300	0	synth with cache (only 1: fsetdec).	0.093007	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	300	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intros; only 1: intuition_in).	0.040311	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	300	0	synth with cache (only 1: fsetdec).	0.069188	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	300	0.0.0	synth with cache (only 1: unfold gt_tree; only 1: intros; only 1: intuition_in).	0.041843	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	300	0	synth with cache (only 1: fsetdec).	0.105224	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	300	0.0.0	synth with cache (only 1: unfold gt_tree in *; only 1: intuition_in; only 1: order).	0.103173	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	300	0	synth with cache (only 1: fsetdec).	0.122936	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	300	0	synth with cache (only 1: intuition_in).	0.039539	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	300	0	synth with cache (only 1: intuition_in).	0.036145	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_le_mono_r; only 1: easy; only 1: easy).	0.042746	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	300	0	synth with cache (only 1: intuition_in).	0.041552	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	300	0	synth with cache (only 1: fsetdec).	0.120790	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	300	0	synth with cache (only 1: intuition_in).	0.036593	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	300	0	synth with cache (only 1: apply Z.pow_gt_1).	0.032634	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zmult_power	300	0.0	synth with cache (only 1: intros; only 1: apply Z.pow_mul_l).	0.064644	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	300	0	synth with cache (only 1: eauto with ordered_type).	0.049805	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	300	0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_le_mono_l; only 1: easy).	0.034160	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	300	0	synth with cache (only 1: eauto with ordered_type).	0.052443	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_gt_lin_r; only 1: easy; only 1: auto with zarith).	0.039244	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	300	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.035076	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: apply Z.pow_gt_lin_r; only 1: easy; only 1: auto with zarith).	0.060088	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	300	0.0.0	synth with cache (only 1: unfold empty; only 1: unfold Empty; only 1: intuition_in).	0.089608	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_mod	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Zpow_mod_pos_correct; only 1: auto with zarith; only 1: simpl; only 1: trivial).	0.042953	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_divide	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: pattern i; only 1: apply natlike_ind; only 1: simpl; only 1: apply rel_prime_sym; only 1: apply rel_prime_1; only 1: clear i H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.pow_succ_r; only 1: apply rel_prime_mult; only 1: auto; only 1: auto; only 1: auto; only 1: auto with zarith).	0.063502	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply rel_prime_Zpower_r; only 1: trivial; only 1: apply rel_prime_sym; only 1: apply rel_prime_Zpower_r; only 1: trivial; only 1: apply rel_prime_sym; only 1: easy).	0.062087	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.prime_power_prime	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	300	0	synth with cache (only 1: fsetdec).	0.111560	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	300	0.0.0	synth with cache (only 1: split; only 1: auto using find_1, find_2; only 1: auto using find_1, find_2).	0.039623	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	300	0	synth with cache (only 1: fsetdec).	0.070289	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	300	0.0.0	synth with cache (only 1: split; only 1: auto using find_in, in_find; only 1: auto using find_in, in_find).	0.038801	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	300	0	synth with cache (only 1: fsetdec).	0.050732	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	300	0	synth with cache (only 1: fsetdec).	0.049474	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct find; only 1: destruct find; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: rewrite H; only 1: auto; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: symmetry; only 1: rewrite <- H; only 1: auto; only 1: destruct find; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: rewrite H; only 1: auto; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: split).	0.126766	36
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	300	0	synth with cache (only 1: fsetdec).	0.081714	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite find_find; only 1: split; only 1: intros ?; only 1: intros ?; only 1: specialize H1 with d; only 1: rewrite <- find_iff; only 1: rewrite <- find_iff; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: specialize H1 with d; only 1: rewrite find_iff; only 1: rewrite find_iff; only 1: auto; only 1: auto; only 1: auto).	0.121403	23
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	300	0	synth with cache (only 1: fsetdec).	0.075593	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	300	0.0	synth with cache (only 1: intros; only 1: auto).	0.033766	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply find_in; only 1: rewrite <- H1; only 1: apply in_find; only 1: auto; only 1: auto; only 1: intros; only 1: apply find_in; only 1: rewrite H1; only 1: apply in_find; only 1: auto; only 1: auto).	0.056827	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	300	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.044346	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	300	0.0	synth with cache (only 1: intros; only 1: auto).	0.070840	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold create; only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.115780	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	300	0	synth with cache (only 1: fsetdec).	0.041685	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	300	0.0	synth with cache (only 1: intros; only 1: auto).	0.035907	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	300	0.0	synth with cache (only 1: intros; only 1: auto).	0.032614	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_r	300	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.029620	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_r	300	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.041052	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	300	0	synth with cache (only 1: fsetdec).	0.169659	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	300	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.116290	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_l	300	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.113358	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_mult	300	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.rem_mul; only 1: trivial).	0.041554	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	300	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_l; only 1: trivial).	0.045285	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	300	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_r; only 1: trivial).	0.040126	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_l	300	0	synth with cache (only 1: apply Z.rem_opp_l').	0.027927	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_r	300	0	synth with cache (only 1: apply Z.rem_opp_r').	0.040702	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_opp	300	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_opp; only 1: trivial).	0.043863	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_opp	300	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.rem_opp_opp; only 1: trivial).	0.042203	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn2	300	0.0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.square_nonneg; only 1: apply Z.rem_sign_mul; only 1: trivial).	0.040940	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Remainder_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_unique_full	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_unique_full	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_pos	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_pos; only 1: lia; only 1: lia).	0.059844	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_lt	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_lt; only 1: lia; only 1: lia).	0.044948	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.quot_le_mono; only 1: lia; only 1: lia).	0.055227	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mul_quot_le; only 1: auto with zarith; only 1: auto with zarith).	0.043882	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mul_quot_ge; only 1: auto with zarith; only 1: auto with zarith).	0.044281	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_exact_full	300	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_exact; only 1: lia).	0.052014	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_le	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.rem_le; only 1: lia; only 1: lia).	0.050213	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_le_upper_bound).	0.036086	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_lt_upper_bound).	0.041754	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_le_lower_bound).	0.040080	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_sgn	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_plus	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.rem_add; only 1: auto with zarith; only 1: auto with zarith).	0.050837	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_add; only 1: auto with zarith; only 1: auto with zarith).	0.038712	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_add_l; only 1: auto with zarith; only 1: auto with zarith).	0.037248	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_mul_cancel_r; only 1: auto; only 1: auto).	0.046505	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.rem_rem; only 1: lia).	0.060561	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem; only 1: auto).	0.051382	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem; only 1: auto; only 1: auto).	0.052842	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem_idemp_l; only 1: auto; only 1: auto).	0.050968	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem_idemp_r; only 1: auto; only 1: rewrite Z.mul_comm; only 1: auto).	0.051383	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem_idemp_l; only 1: auto).	0.051720	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	300	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: auto with *).	0.029751	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem_idemp_r; only 1: auto).	0.049549	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_quot; only 1: auto; only 1: auto).	0.063187	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	300	0.0.0.0.0	synth with cache (only 1: unfold to_list; only 1: red; only 1: intros; only 1: rewrite <- F.elements_iff; only 1: apply of_list_1).	0.036856	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	300	0.0.0.0.0.0	synth with cache (only 1: unfold to_list; only 1: red; only 1: intros; only 1: rewrite of_list_1; only 1: symmetry; only 1: apply F.elements_iff).	0.042383	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	300	0.0.0	synth with cache (only 1: rewrite fold_spec; only 1: symmetry; only 1: apply fold_left_rev_right).	0.042185	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_le	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_mul_le; only 1: auto; only 1: apply Z.le_neq; only 1: auto; only 1: auto).	0.142654	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: firstorder; only 1: rewrite Z.rem_divide; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: lia).	0.083285	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: simpl; only 1: left; only 1: simpl; only 1: auto with zarith; only 1: left; only 1: destruct p; only 1: simpl; only 1: lia; only 1: simpl; only 1: lia; only 1: simpl; only 1: lia; only 1: right; only 1: destruct p; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy).	0.142330	28
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite find_mapsto_equiv; only 1: intros; only 1: apply bal_mapsto; only 1: auto; only 1: auto).	0.045433	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_odd	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_even	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_odd; only 1: rewrite Zodd_even_bool; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	0.039734	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).	0.051198	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zeven_rem	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_even; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.056532	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zodd_rem	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_odd; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.060992	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	300	1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Zdiv_mod_unique with b; only 1: apply Zrem_lt_pos; only 1: auto with zarith; only 1: lia; only 1: rewrite Z.abs_eq; only 1: apply Z_mod_lt; only 1: lia; only 1: lia; only 1: rewrite <- Z_div_mod_eq; only 1: symmetry; only 1: apply Z.quot_rem; only 1: lia; only 1: lia).	0.069685	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zrem_divides; only 1: rewrite Zmod_divides; only 1: intuition; only 1: lia).	0.058054	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.039963	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply fold_1b; only 1: auto with set).	0.034016	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	300	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.039726	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct X.compare; only 1: intros; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto; only 1: intros; only 1: inv MapsTo; only 1: order; only 1: auto; only 1: auto; only 1: intros; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	0.328493	29
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.038152	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros; only 1: inv MapsTo; only 1: order; only 1: simpl; only 1: destruct X.compare; only 1: intros ?; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros; only 1: inv MapsTo; only 1: order; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	0.372018	34
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite fold_spec; only 1: symmetry; only 1: apply fold_left_length).	0.039612	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	0.034916	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite elements_Empty; only 1: rewrite cardinal_spec; only 1: destruct elements; only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.068659	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).	0.064018	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	300	0	synth with cache (only 1: exact Equal_cardinal).	0.027822	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	300	0.0.0.0	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.034113	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply fold_union; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	0.058142	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: rewrite PeanoNat.Nat.add_comm; only 1: auto with arith).	0.034996	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	300	0	synth with cache (only 1: auto with set).	0.027678	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	300	0	synth with cache (only 1: auto with set).	0.028945	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	300	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.038789	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	300	0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: unfold Included; only 1: unfold In; only 1: unfold mkEns; only 1: intuition).	0.037514	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_inclusion; only 1: unfold Subset; only 1: unfold Same_set; only 1: unfold mkEns; only 1: intuition).	0.049407	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply -> @Decidable_spec; only 1: assumption).	0.035281	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: intros ?; only 1: set_iff; only 1: inversion 1).	0.074427	11
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply <- @Decidable_spec; only 1: assumption).	0.043249	5
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct Decidable_witness; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.065089	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: intros ?; only 1: simpl in *; only 1: intuition congruence).	0.052966	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor).	0.215149	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- compare_gt_iff; only 1: unfold leb; only 1: unfold gtb; only 1: destruct E.compare; only 1: intuition; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: intuition).	0.161761	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold gtb; only 1: rewrite H; only 1: auto).	0.047085	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto; only 1: auto).	0.108422	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: rewrite H; only 1: auto).	0.046077	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	300	0	synth with cache (only 1: apply Pos.eqb_eq).	0.038333	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	300	0	synth with cache (only 1: apply Pos.ltb_lt).	0.028974	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	300	0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.leb; only 1: unfold Pos.le; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.074946	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto).	0.176107	17
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_1	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity).	0.072166	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets; only 1: auto with sets).	0.101645	18
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: elim H; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_0; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_0; only 1: reflexivity).	0.053763	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros; only 1: red in H; only 1: rewrite H in H0; only 1: destruct H0; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros; only 1: red in H; only 1: rewrite H; only 1: inversion H0; only 1: auto; only 1: inversion H1; only 1: auto).	0.085680	21
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_not_0_positive	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: assumption).	0.055876	16
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	300	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: discriminate; only 1: constructor; only 1: discriminate; only 1: inversion 1; only 1: trivial).	0.049763	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_in; only 1: intuition; only 1: intuition).	0.070301	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: split; only 1: auto; only 1: contradict H1; only 1: inversion H1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	0.139121	17
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: simpl; only 1: discriminate; only 1: intros ?; only 1: simpl; only 1: apply Qpower_pos_positive; only 1: assumption; only 1: intros ?; only 1: simpl; only 1: apply Qinv_le_0_compat; only 1: apply Qpower_pos_positive; only 1: assumption).	0.051924	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: revert n; only 1: induction p; only 1: unfold valid_dec in *; only 1: intuition; only 1: unfold valid_dec in *; only 1: intuition; only 1: bool; only 1: try_decide; only 1: auto; only 1: intros ?; only 1: induction H; only 1: unfold valid_dec in *; only 1: auto; only 1: unfold valid_dec in *; only 1: bool; only 1: try_decide; only 1: auto; only 1: try_decide; only 1: auto; only 1: auto; only 1: auto).	0.251367	22
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qmult_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qmult_power_positive; only 1: rewrite Qinv_mult_distr; only 1: reflexivity).	0.062939	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_positive	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_power_positive; only 1: reflexivity).	0.046280	11
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.valid_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qdiv_power	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qdiv; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qmult_power; only 1: rewrite Qinv_power; only 1: reflexivity).	0.057933	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct X.compare; only 1: intros ?; only 1: inv bst; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: inv bst; only 1: rewrite merge_mapsto; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intros ?; only 1: inv bst; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	0.401763	33
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_n	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Qmake_Qdiv; only 1: rewrite Qdiv_power; only 1: rewrite Qpower_1; only 1: unfold Qdiv; only 1: ring).	0.062289	7
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: eapply valid_le_compat; only 1: eauto; only 1: lia).	0.057204	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus_positive	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qpower_positive; only 1: apply pow_pos_add; only 1: apply Q_Setoid; only 1: apply Qmult_comp; only 1: apply Qmult_assoc).	0.043158	8
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	0.032521	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_opp	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: symmetry; only 1: apply Qinv_involutive).	0.049038	10
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_minus_positive	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	300	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.029091	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.031641	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus'	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult_positive	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using Pos.peano_ind; only 1: reflexivity; only 1: rewrite Pos.mul_succ_l; only 1: rewrite <- Pos.add_1_l; only 1: rewrite Qpower_plus_positive; only 1: rewrite Qpower_plus_positive; only 1: rewrite IHn; only 1: rewrite Qmult_power_positive; only 1: reflexivity).	0.076834	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: reflexivity; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: rewrite Qinv_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: rewrite Qinv_power_positive; only 1: rewrite Qinv_involutive; only 1: reflexivity).	0.120758	36
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Zpower_Qpower	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: join_tac; only 1: simpl; only 1: auto; only 1: auto; only 1: inv bst; only 1: apply bal_bst; only 1: auto; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_in in *; only 1: intuition; only 1: apply MX.lt_eq with x; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: inv bst; only 1: apply bal_bst; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_in in *; only 1: intuition; only 1: apply MX.eq_lt with x; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	0.626998	33
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qsqr_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_decomp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl Qpower_positive; only 1: rewrite IHp; only 1: unfold Qmult; only 1: unfold Qnum; only 1: unfold Qden; only 1: f_equal; only 1: rewrite <- Z.pow_twice_r; only 1: rewrite <- Z.pow_succ_r; only 1: easy; only 1: easy; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite <- Z.pow_twice_r; only 1: rewrite <- Z.pow_succ_r; only 1: easy; only 1: easy; only 1: simpl Qpower_positive; only 1: rewrite IHp; only 1: unfold Qmult; only 1: unfold Qnum; only 1: unfold Qden; only 1: f_equal; only 1: rewrite <- Z.pow_twice_r; only 1: easy; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite <- Z.pow_twice_r; only 1: easy; only 1: simpl Qpower_positive; only 1: rewrite Z.pow_1_r; only 1: rewrite Pos.pow_1_r; only 1: easy).	0.156731	38
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite split_in_1 in H0; only 1: intuition; only 1: intuition).	0.133839	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite split_in_2 in H0; only 1: intuition; only 1: intuition).	0.062044	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold L.PX.In; only 1: rewrite <- In_alt; only 1: unfold In0; only 1: firstorder; only 1: exists x0; only 1: rewrite <- elements_mapsto; only 1: auto; only 1: exists x0; only 1: unfold L.PX.MapsTo; only 1: rewrite elements_mapsto; only 1: auto).	0.064968	12
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction f; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: simpl; only 1: destruct @list_nth; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: auto; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: auto; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_mul_compat; only 1: rewrite IHf1; only 1: rewrite IHf2; only 1: ring; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: rewrite poly_add_compat; only 1: rewrite poly_mul_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: congruence; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: rewrite poly_add_compat; only 1: rewrite poly_mul_compat; only 1: rewrite poly_mul_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity).	0.235150	67
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	300	0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Z.add_comm; only 1: easy).	0.067659	4
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- poly_of_formula_eval_compat; only 1: rewrite <- poly_of_formula_eval_compat; only 1: rewrite H; only 1: reflexivity).	0.037806	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Z.add_assoc; only 1: easy).	0.066434	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_base	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_base; only 1: reflexivity).	0.044735	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: reflexivity).	0.047796	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	300	0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Z.mul_comm; only 1: easy).	0.055919	4
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using Pos.peano_rect; only 1: rewrite list_nth_base; only 1: trivial; only 1: rewrite list_nth_succ; only 1: reflexivity).	0.048930	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_trans).	0.042291	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zmult_mod_idemp_r; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_assoc; only 1: easy).	0.135970	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: apply elements_aux_sort; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	0.064805	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	300	0.0.0.0.0.0	synth with cache (only 1: unfold base; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).	0.037997	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite <- Zplus_mod; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: easy).	0.076366	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply PX.Sort_NoDupA; only 1: unfold elements; only 1: apply elements_aux_sort; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	0.059594	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	300	0.0	synth with cache (only 1: pose proof gt_wB_1; only 1: lia).	0.063411	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	300	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: rewrite Zmod_small; only 1: auto with zarith; only 1: split; only 1: auto with zarith; only 1: unfold base; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).	0.051878	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite <- Zplus_mod; only 1: easy).	0.082407	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction var; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite make_last_nth_1; only 1: rewrite list_nth_nil; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: induction j using Pos.peano_rect; only 1: rewrite Pos.peano_rect_base; only 1: induction i using Pos.peano_rect; only 1: elim H; only 1: auto; only 1: rewrite list_nth_succ; only 1: rewrite list_nth_succ; only 1: reflexivity; only 1: rewrite Pos.peano_rect_succ; only 1: induction i using Pos.peano_rect; only 1: rewrite list_nth_base; only 1: rewrite list_nth_base; only 1: reflexivity; only 1: rewrite list_nth_succ; only 1: rewrite list_nth_succ; only 1: apply IHvar; only 1: zify; only 1: omega).	0.316694	34
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: rewrite add_opp_r; only 1: zify; only 1: rewrite Z.sub_diag; only 1: rewrite Zmod_0_l; only 1: easy).	0.117936	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod; only 1: easy).	0.077104	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: rewrite app_assoc_reverse; only 1: auto).	0.105070	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction var; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: apply make_last_nth_2; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: induction i using Pos.peano_rect; only 1: rewrite Pos.peano_rect_base; only 1: rewrite list_nth_base; only 1: reflexivity; only 1: rewrite Pos.peano_rect_succ; only 1: rewrite list_nth_succ; only 1: auto).	0.076070	16
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	300	0.0.0.0	synth with cache (only 1: zify; only 1: simpl BinIntDef.Z.add; only 1: rewrite one_mod_wB; only 1: auto with zarith).	0.050828	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	300	0	synth with cache (only 1: reflexivity).	0.030820	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: constructor; only 1: exact add_0_l; only 1: intros; only 1: zify; only 1: rewrite Z.add_comm; only 1: easy; only 1: intros; only 1: zify; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Z.add_assoc; only 1: easy; only 1: exact mul_1_l; only 1: intros; only 1: zify; only 1: rewrite Z.mul_comm; only 1: easy; only 1: intros; only 1: zify; only 1: rewrite Zmult_mod_idemp_r; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_assoc; only 1: easy; only 1: intros; only 1: zify; only 1: rewrite <- Zplus_mod; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: easy; only 1: symmetry; only 1: apply add_opp_r; only 1: intros; only 1: red; only 1: rewrite add_opp_r; only 1: zify; only 1: rewrite Z.sub_diag; only 1: rewrite Zmod_0_l; only 1: easy).	0.344676	54
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_equiv; only 1: unfold fold'; only 1: rewrite L.fold_1; only 1: unfold L.elements; only 1: auto).	0.172763	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	300	0.0	synth with cache (only 1: intros; only 1: apply elements_node).	0.193814	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	300	0	synth with cache (only 1: apply eqb_eq).	0.039203	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	300	1.0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: rewrite Z.add_0_l; only 1: apply NZ_to_Z_mod).	0.059269	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold IfEq; only 1: simpl; only 1: intros; only 1: destruct X.compare; only 1: auto; only 1: rewrite <- andb_lazy_alt; only 1: f_equal; only 1: auto; only 1: auto).	0.079526	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	300	1.0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: rewrite Z.sub_0_r; only 1: apply NZ_to_Z_mod).	0.056022	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	300	0.0.0.0.0	synth with cache (only 1: unfold Psub; only 1: intros; only 1: rewrite Padd_ok; only 1: rewrite Popp_ok; only 1: rsimpl).	0.187654	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	300	0.0.0	synth with cache (only 1: intros; only 1: unfold Psquare; only 1: apply Pmul_ok).	0.037748	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0 in H; only 1: simpl in *; only 1: discriminate).	0.043986	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	300	0	synth with cache (only 1: reflexivity).	0.035744	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: easy).	0.050616	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	300	0	synth with cache (only 1: reflexivity).	0.036283	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: intros; only 1: f_equal; only 1: simpl; only 1: intros; only 1: f_equal; only 1: easy).	0.050476	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply nshiftr_predsize_0_firstl; only 1: apply nshiftr_0_propagates with n; only 1: lia; only 1: auto).	0.067446	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	300	0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite H; only 1: auto).	0.041933	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	300	0.0	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv).	0.036336	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold incr; only 1: unfold recr; only 1: unfold incrbis_aux; only 1: fold Incr; only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.041897	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	300	0.0	synth with cache (only 1: intros; only 1: auto).	0.040922	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn1; only 1: destruct x; only 1: simpl; only 1: auto; only 1: destruct x; only 1: simpl; only 1: auto).	0.054682	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	300	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.032610	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn2; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).	0.072785	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	300	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.042904	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold phi; only 1: unfold recr; only 1: unfold phibis_aux; only 1: fold Phi; only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.049821	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	300	0.0.0	synth with cache (only 1: unfold create; only 1: intros; only 1: auto).	0.055057	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite phi_eqn1; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).	0.069372	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite phi_eqn2; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).	0.067172	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	300	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- phibis_aux_equiv; only 1: apply phibis_aux_pos).	0.040703	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold EqShiftL; only 1: intros; only 1: unfold nshiftl; only 1: simpl; only 1: split; only 1: auto; only 1: auto).	0.043373	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	300	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite nshiftl_above_size; only 1: rewrite nshiftl_above_size; only 1: auto; only 1: auto; only 1: auto).	0.054005	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite firstr_firstl; only 1: rewrite firstr_firstl; only 1: f_equal; only 1: apply EqShiftL_le with k; only 1: unfold size; only 1: auto with arith; only 1: auto).	0.049767	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold EqShiftL; only 1: rewrite nshiftl_S_tail; only 1: rewrite nshiftl_S_tail; only 1: split; only 1: auto; only 1: auto).	0.048663	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.033585	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	300	0	synth with cache (only 1: apply to_Z_rec_bounded).	0.035959	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	300	0.0	synth with cache (only 1: apply Z.div_lt_upper_bound; only 1: reflexivity).	0.037063	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: auto).	0.039150	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: unfold Equal; only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: rewrite H; only 1: tauto).	0.057122	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Z.lt_gt; only 1: apply Z.pow_pos_nonneg; only 1: lia; only 1: auto with zarith).	0.048070	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	300	0	synth with cache (only 1: reflexivity).	0.037349	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	300	0	synth with cache (only 1: reflexivity).	0.049683	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	300	0	synth with cache (only 1: reflexivity).	0.040244	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros ?; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: auto).	0.056715	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- mem_iff; only 1: rewrite <- mem_iff; only 1: apply subset_2; only 1: auto).	0.053417	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	300	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.039722	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	300	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite <- is_empty_iff; only 1: auto with set).	0.060483	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- incrbis_aux_equiv; only 1: rewrite <- incrbis_aux_equiv; only 1: apply EqShiftL_incrbis; only 1: auto; only 1: auto; only 1: auto).	0.061427	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	300	0	synth with cache (only 1: auto with set).	0.041102	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	300	0	synth with cache (only 1: auto with set).	0.046427	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn2; only 1: apply EqShiftL_incr; only 1: red; only 1: destruct x; only 1: simpl; only 1: auto; only 1: destruct x; only 1: simpl; only 1: auto).	0.073761	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	300	1	synth with cache (only 1: auto with set relations).	0.144254	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	300	1	synth with cache (only 1: apply add_neq_b).	0.117412	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).	0.039600	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	300	1.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.121095	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	300	1	synth with cache (only 1: apply remove_neq_b).	0.029241	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	300	0.0	synth with cache (only 1: rewrite singleton_equal_add; only 1: auto with set).	0.038784	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	300	0.0.0.0.0.0	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).	0.149690	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	300	0	synth with cache (only 1: apply union_b).	0.025493	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	300	0	synth with cache (only 1: apply inter_b).	0.030053	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	300	0	synth with cache (only 1: apply diff_b).	0.030240	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.035640	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: split; only 1: trivial; only 1: trivial).	0.148499	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite not_mem_iff; only 1: auto).	0.033684	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	300	0	synth with cache (only 1: auto with set).	0.034951	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	300	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- equal_iff; only 1: rewrite <- equal_iff; only 1: intuition).	0.051990	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).	0.152308	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).	0.064713	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	300	0	synth with cache (only 1: auto with set).	0.050580	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	300	0	synth with cache (only 1: auto with set).	0.029874	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	300	0	synth with cache (only 1: auto with set).	0.053938	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	300	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: intros; only 1: apply subset_trans with s'; only 1: auto; only 1: auto).	0.070842	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	300	0	synth with cache (only 1: auto with set).	0.056126	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	300	0	synth with cache (only 1: auto with set).	0.035563	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply iff_reflect; only 1: rewrite eqb_spec; only 1: split; only 1: intros; only 1: apply to_Z_inj; only 1: trivial; only 1: intros; only 1: subst; only 1: trivial).	0.073153	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	300	0	synth with cache (only 1: auto with set).	0.034894	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold mul31; only 1: rewrite <- Z.double_spec; only 1: rewrite <- phi_twice_firstl; only 1: rewrite phi_inv_phi; only 1: auto; only 1: auto).	0.053100	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	300	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply ltb_spec).	0.053730	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	300	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply leb_spec).	0.057582	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_twice_firstl; only 1: unfold add31; only 1: rewrite phi_twice_firstl; only 1: rewrite <- Z.succ_double_spec; only 1: rewrite <- phi_twice_plus_one_firstl; only 1: rewrite phi_inv_phi; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.075167	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_equal; only 1: rewrite not_mem_iff; only 1: auto).	0.052231	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply add_remove; only 1: auto with set).	0.037372	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_def_spec; only 1: unfold compare_def; only 1: case ltbP; only 1: auto using Z.compare_lt_iff; only 1: intros ?; only 1: case eqbP; only 1: symmetry; only 1: apply Z.compare_eq_iff; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Z.compare_gt_iff; only 1: lia).	0.086822	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_add; only 1: rewrite not_mem_iff; only 1: auto).	0.031063	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	300	0	synth with cache (only 1: apply eqb_spec).	0.044354	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite diveucl_def_spec; only 1: unfold diveucl_def; only 1: rewrite div_spec; only 1: rewrite mod_spec; only 1: unfold BinIntDef.Z.div; only 1: unfold BinIntDef.Z.modulo; only 1: destruct BinIntDef.Z.div_eucl; only 1: trivial).	0.078415	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	300	1	synth with cache (only 1: auto with set relations).	0.041272	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	300	0.0.0.0.0.0	synth with cache (only 1: unfold positive_to_int31; only 1: intros; only 1: rewrite p2i_p2ibis; only 1: apply p2ibis_spec; only 1: auto; only 1: auto).	0.051801	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct FM.eq_dec; only 1: intuition; only 1: intuition).	0.070456	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	300	0.0.0	synth with cache (only 1: intros; only 1: apply singleton_1; only 1: auto with set).	0.034328	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	300	0	synth with cache (only 1: auto with set).	0.025893	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	300	0	synth with cache (only 1: auto with set).	0.045124	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	300	0	synth with cache (only 1: apply add_spec).	0.045433	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	300	0	synth with cache (only 1: apply addc_spec).	0.051692	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	300	0	synth with cache (only 1: auto with set).	0.106691	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	300	0.0.0.0.0	synth with cache (only 1: unfold addcarry; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: trivial).	0.065107	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	300	0	synth with cache (only 1: auto with set).	0.127738	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	300	0	synth with cache (only 1: auto with set).	0.048640	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	300	0	synth with cache (only 1: auto with set).	0.033627	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	300	0	synth with cache (only 1: auto with set).	0.030773	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	300	0	synth with cache (only 1: auto with set).	0.031099	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	300	0	synth with cache (only 1: apply sub_spec).	0.048409	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	300	0	synth with cache (only 1: auto with set).	0.037176	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	300	0	synth with cache (only 1: apply subc_spec).	0.050800	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply union_subset_3; only 1: auto with set; only 1: auto with set).	0.064241	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	300	0.0.0.0	synth with cache (only 1: unfold oppc; only 1: rewrite subc_spec; only 1: rewrite to_Z_0; only 1: trivial).	0.051019	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	300	0	synth with cache (only 1: auto with zarith).	0.030610	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	300	0	synth with cache (only 1: auto with set).	0.037040	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	300	0	synth with cache (only 1: reflexivity).	0.033637	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	300	0.0.0.0	synth with cache (only 1: unfold opp; only 1: rewrite sub_spec; only 1: rewrite to_Z_0; only 1: trivial).	0.055665	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	300	0	synth with cache (only 1: auto with set).	0.042086	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	300	0	synth with cache (only 1: reflexivity).	0.039567	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	300	0	synth with cache (only 1: auto with set).	0.036121	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	300	0	synth with cache (only 1: reflexivity).	0.045230	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	300	0	synth with cache (only 1: auto with set).	0.035325	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	300	0	synth with cache (only 1: reflexivity).	0.037824	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	300	0	synth with cache (only 1: auto with set).	0.033326	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	300	0.0.0.0.0	synth with cache (only 1: unfold subcarry; only 1: rewrite sub_spec; only 1: rewrite sub_spec; only 1: rewrite Zminus_mod_idemp_l; only 1: trivial).	0.059851	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	300	0	synth with cache (only 1: reflexivity).	0.033585	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	300	0	synth with cache (only 1: auto with set).	0.029485	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	300	0	synth with cache (only 1: reflexivity).	0.033635	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	300	0	synth with cache (only 1: auto with set).	0.038022	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	300	0	synth with cache (only 1: auto with set).	0.030357	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply inter_add_2; only 1: rewrite not_mem_iff; only 1: auto).	0.038905	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	300	0	synth with cache (only 1: auto with set).	0.040588	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	300	0	synth with cache (only 1: auto with set).	0.031057	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply inter_subset_3; only 1: auto with set; only 1: auto with set).	0.115872	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	300	0.0	synth with cache (only 1: intros; only 1: apply spec_add_c).	0.035013	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	300	0	synth with cache (only 1: auto with set).	0.036700	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	300	0	synth with cache (only 1: auto with set).	0.035832	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	300	0	synth with cache (only 1: auto with set).	0.033254	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	300	0	synth with cache (only 1: auto with set).	0.031017	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	300	0	synth with cache (only 1: auto with set).	0.036829	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold eqm; only 1: rewrite Zminus_mod; only 1: rewrite H; only 1: rewrite Z.sub_diag; only 1: reflexivity).	0.078843	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.linear_max	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite max_l; only 1: rewrite Pos2Nat.inj_mul; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: apply Nat.le_0_l; only 1: apply H; only 1: apply Nat.le_refl).	0.046013	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	300	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.055310	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	300	0.0.0.0.0	synth with cache (only 1: unfold add31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.074048	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply spec_add).	0.043867	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	300	0.0.0.0	synth with cache (only 1: unfold eqm; only 1: intros ?; only 1: intropattern subst -> H; only 1: reflexivity).	0.059363	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: rewrite Zmod_small; only 1: rewrite Zmod_small; only 1: intros; only 1: apply to_Z_inj; only 1: trivial; only 1: apply to_Z_bounded; only 1: apply to_Z_bounded).	0.061018	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Z.add_assoc; only 1: auto).	0.078552	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	300	0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Z.add_comm; only 1: auto).	0.061007	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: destruct mem; only 1: destruct mem; only 1: intuition; only 1: intuition; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.115147	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	300	0	synth with cache (only 1: apply fold_empty).	0.023210	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	300	0	synth with cache (only 1: auto with set).	0.030639	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cardinal_2; only 1: rewrite not_mem_iff; only 1: auto).	0.031742	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply remove_cardinal_1; only 1: auto with set).	0.034186	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	300	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.041001	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: apply equal_2; only 1: auto with set).	0.041087	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	300	0.0.0.0.0	synth with cache (only 1: unfold sub31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zminus_mod_idemp_l).	0.063580	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply union_cardinal; only 1: intros; only 1: rewrite exclusive_set; only 1: auto).	0.062204	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	300	0.0.0	synth with cache (only 1: intros; only 1: apply subset_cardinal; only 1: auto with set).	0.039598	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	300	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.038004	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	300	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.035296	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	300	0.0.0.0.0	synth with cache (only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.051123	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	300	0.0.0	synth with cache (only 1: intros; only 1: apply filter_b; only 1: auto).	0.053955	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	300	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.040184	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	300	0.0	synth with cache (only 1: intros; only 1: apply spec_sub).	0.041470	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	300	0	synth with cache (only 1: auto with set).	0.034317	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	300	0	synth with cache (only 1: auto with set).	0.035423	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	300	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.038797	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	300	0.0	synth with cache (only 1: intros; only 1: apply spec_mul_c).	0.033469	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: intros; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations; only 1: auto; only 1: auto).	0.119681	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: unfold Equal; only 1: intros; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace x with a in H; only 1: congruence; only 1: auto; only 1: auto; only 1: auto).	0.167914	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	300	0	synth with cache (only 1: apply CReal_isRingExt).	0.029645	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	300	0	synth with cache (only 1: apply CReal_isRingExt).	0.099001	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equal; only 1: intros; only 1: set_iff; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: set_iff; only 1: tauto; only 1: auto; only 1: auto; only 1: auto).	0.123416	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_b; only 1: rewrite exists_b; only 1: induction elements; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	0.061337	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	300	0.0.0.0.0	synth with cache (only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.108737	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_exists; only 1: rewrite negb_true_iff; only 1: apply for_all_mem_3 with x; only 1: auto; only 1: auto; only 1: rewrite negb_false_iff; only 1: auto; only 1: auto).	0.049050	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	300	0.0	synth with cache (only 1: unfold map2; only 1: auto using map2_opt_avl, map_option_avl).	0.118018	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	0.065209	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	0.055982	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.041834	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.037260	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.038329	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.039441	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.045783	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	300	0.0.0.0	synth with cache (only 1: apply mk_reqe; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.101730	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_morph	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	300	0.0	synth with cache (only 1: apply Ring_theory.mkpow_th; only 1: reflexivity).	0.035534	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	300	0.0	synth with cache (only 1: intros; only 1: apply norm_subst_spec).	0.026152	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	300	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite norm_subst_ok; only 1: rewrite norm_subst_ok; only 1: apply Peq_ok; only 1: trivial).	0.055964	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.Zcri	300	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.023637	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.comm	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt31_step; only 1: case div31; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).	0.168335	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt312_step; only 1: case div3121; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).	0.125363	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert rec ih il j; only 1: elim n; only 1: unfold iter312_sqrt; only 1: clear n; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt312_step_correct; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith; only 1: intros; only 1: apply H2; only 1: lia; only 1: rewrite Z.pow_0_r; only 1: lia; only 1: lia; only 1: unfold iter312_sqrt; only 1: fold iter312_sqrt; only 1: clear n; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt312_step_correct; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: lia; only 1: lia; only 1: lia; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H3; only 1: auto; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: lia; only 1: lia).	0.899192	63
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.lor; only 1: unfold int31_ops; only 1: unfold lor31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.lor_nonneg; only 1: split; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: rewrite Z.log2_lor; only 1: apply Z.max_lub_lt; only 1: apply log2_phi_bounded; only 1: apply log2_phi_bounded; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: easy).	0.079242	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.land; only 1: unfold int31_ops; only 1: unfold land31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.land_nonneg; only 1: left; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: eapply Z.le_lt_trans; only 1: apply Z.log2_land; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.min_lt_iff; only 1: left; only 1: apply log2_phi_bounded; only 1: easy).	0.163132	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.lxor; only 1: unfold int31_ops; only 1: unfold lxor31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.lxor_nonneg; only 1: split; only 1: intros; only 1: apply phi_bounded; only 1: intros; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: eapply Z.le_lt_trans; only 1: apply Z.log2_lxor; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.max_lub_lt; only 1: apply log2_phi_bounded; only 1: apply log2_phi_bounded; only 1: easy).	0.086720	22
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_zero_spec; only 1: intros ?; only 1: rewrite H; only 1: trivial).	0.043567	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite CReal_mult_comm; only 1: rewrite CReal_inv_l; only 1: reflexivity).	0.051263	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- CReal_mult_1_l; only 1: rewrite CReal_inv_r; only 1: reflexivity).	0.046968	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	300	0	synth with cache (only 1: tauto).	0.031371	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	300	0.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.048553	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.035694	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CReal_mult_lt_reg_l in H1; only 1: contradiction; only 1: apply H).	0.040213	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0).	0.190079	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_1; only 1: apply is_bst).	0.050648	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	300	0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_2).	0.053543	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold remove; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: simpl; only 1: apply remove_1; only 1: apply is_bst).	0.070680	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: unfold eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.049260	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold MapsTo; only 1: rewrite <- elements_mapsto; only 1: auto).	0.049002	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.074920	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite <- equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.077073	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply map_2).	0.060090	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply mapi_2).	0.068466	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold find; only 1: unfold map2; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl; only 1: apply map2_1; only 1: apply is_bst; only 1: apply is_bst; only 1: auto).	0.144574	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold map2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl in *; only 1: eapply map2_2; only 1: apply is_bst; only 1: apply is_bst; only 1: eauto).	0.143716	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	300
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- SF2Prim_Prim2SF; only 1: symmetry; only 1: rewrite <- SF2Prim_Prim2SF; only 1: rewrite H; only 1: easy).	0.040043	6
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Prim2SF_SF2Prim; only 1: symmetry; only 1: rewrite <- Prim2SF_SF2Prim; only 1: rewrite H; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.050824	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_1; only 1: apply is_bst).	0.043830	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	300	0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_2).	0.044351	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold remove; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: simpl; only 1: apply remove_1; only 1: apply is_bst).	0.053790	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: unfold eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.044163	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold MapsTo; only 1: rewrite <- elements_mapsto; only 1: auto).	0.039915	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.061279	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite <- equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.067755	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_2	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply map_2).	0.166219	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply mapi_2).	0.063151	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold find; only 1: unfold map2; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl; only 1: apply map2_1; only 1: apply is_bst; only 1: apply is_bst; only 1: auto).	0.119056	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold map2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl in *; only 1: eapply map2_2; only 1: apply is_bst; only 1: apply is_bst; only 1: eauto).	0.175215	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.total_order_T	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Req_appart_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CRealLtDisjunctEpsilon; only 1: destruct H; only 1: left; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H; only 1: right; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H).	0.074599	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.up	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	300	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.028156	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	300	0	synth with cache (only 1: congruence).	0.024936	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	300	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).	0.026417	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: apply mul_id_l).	0.034265	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qri	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).	0.086268	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qcri	300	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).	0.037781	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	300	0	synth with cache (only 1: discriminate).	0.039696	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qdi	300	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).	0.041645	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H0; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: assumption; only 1: assumption; only 1: rewrite <- H2; only 1: apply mul_le_mono_nonneg_r; only 1: assumption; only 1: apply lt_le_incl; only 1: easy; only 1: le_elim H2; only 1: rewrite <- H0; only 1: apply mul_le_mono_nonneg_l; only 1: assumption; only 1: apply lt_le_incl; only 1: easy; only 1: rewrite H0; only 1: rewrite H2; only 1: apply eq_le_incl; only 1: easy).	0.196197	31
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.FQ_dense	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply mul_pos_neg; only 1: easy; only 1: easy).	0.027224	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H0; only 1: tauto; only 1: intros ?; only 1: split; only 1: intros ?; only 1: rewrite H0 in H; only 1: rewrite mul_0_l in H; only 1: apply H; only 1: easy; only 1: intros ?; only 1: rewrite H0 in H; only 1: rewrite mul_0_r in H; only 1: apply H; only 1: easy).	0.160474	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.RQ_limit	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite eq_mul_0; only 1: tauto).	0.033070	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H; only 1: destruct H; only 1: assumption; only 1: false_hyp H H0).	0.031417	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H; only 1: destruct H; only 1: false_hyp H H0; only 1: assumption).	0.022584	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.025718	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.023318	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: apply H2; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: apply H2).	0.161408	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_add_distr_r; only 1: rewrite mul_add_distr_l; only 1: rewrite mul_add_distr_l; only 1: rewrite add_assoc; only 1: apply add_le_mono_r; only 1: rewrite <- add_assoc; only 1: rewrite <- add_0_r  at 1; only 1: apply add_le_mono_l; only 1: apply add_nonneg_nonneg; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order).	0.116953	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction).	0.051811	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	300	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: contradiction).	0.038151	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	300	0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: apply divide_factor_l).	0.025656	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	300	0.0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: rewrite <- gcd_div_swap; only 1: apply divide_factor_r).	0.029937	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: exists x; only 1: rewrite <- divide_div_mul_exact; only 1: rewrite H1; only 1: easy; only 1: easy; only 1: easy).	0.043066	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply divide_antisym; only 1: apply lcm_least; only 1: easy; only 1: easy; only 1: apply H2; only 1: apply divide_lcm_l; only 1: apply divide_lcm_r).	0.118859	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique; only 1: trivial; only 1: apply H0; only 1: apply divide_refl; only 1: apply H0; only 1: apply divide_refl; only 1: intros; only 1: apply H0; only 1: split; only 1: easy; only 1: easy).	0.050339	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply le_0_l; only 1: intros; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite and_assoc; only 1: easy).	0.046120	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.022766	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: apply lcm_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.022753	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.027936	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl, le_0_l).	0.021492	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply eq_mul_0; only 1: apply divide_0_l; only 1: rewrite <- H; only 1: apply lcm_least; only 1: apply divide_factor_l; only 1: apply divide_factor_r; only 1: destruct 1; only 1: rewrite H; only 1: apply lcm_0_l; only 1: rewrite H; only 1: apply lcm_0_r).	0.036736	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.034498	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: rewrite <- H; only 1: apply divide_lcm_l).	0.106786	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_extens	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct app; only 1: left; only 1: apply CRmorph_increasing; only 1: exact c; only 1: right; only 1: apply CRmorph_increasing; only 1: exact c).	0.067914	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite add_0_l; only 1: easy).	0.025810	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_succ_l; only 1: easy).	0.040295	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply add_move_0_r; only 1: rewrite <- mul_add_distr_r; only 1: rewrite add_opp_diag_l; only 1: rewrite mul_0_l; only 1: easy).	0.043417	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: easy).	0.027920	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: easy).	0.028376	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: easy).	0.027184	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_assoc; only 1: easy).	0.036861	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite opp_succ; only 1: rewrite opp_succ; only 1: rewrite add_pred_l; only 1: rewrite pred_inj_wd; only 1: easy).	0.085097	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite opp_involutive; only 1: easy).	0.034787	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply opp_wd in H; only 1: rewrite opp_involutive in H; only 1: rewrite opp_involutive in H; only 1: easy).	0.030244	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply opp_wd in H; only 1: rewrite opp_involutive in H; only 1: rewrite opp_involutive in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	0.049929	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- opp_inj_wd; only 1: rewrite opp_involutive; only 1: easy).	0.026548	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	300	0.0	synth with cache (only 1: symmetry; only 1: apply eq_opp_l).	0.015074	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: easy).	0.120019	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: rewrite add_opp_r; only 1: rewrite add_opp_r; only 1: easy).	0.045118	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_sub_distr; only 1: rewrite add_assoc; only 1: rewrite add_opp_r; only 1: easy).	0.043116	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: easy).	0.107290	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: easy).	0.038579	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply add_move_l).	0.037924	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: apply add_move_l).	0.028238	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite add_move_r; only 1: rewrite sub_opp_r; only 1: easy).	0.039678	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: apply divide_mul_l).	0.029588	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.025392	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: apply divide_refl).	0.021137	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite add_move_r; only 1: rewrite sub_0_l; only 1: easy).	0.026367	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	300	0.0.0	synth with cache (only 1: intros; only 1: apply divide_mul_r; only 1: apply divide_refl).	0.018787	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite sub_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.028258	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite sub_move_r; only 1: rewrite add_0_l; only 1: easy).	0.040789	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold le_alt; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: auto with *).	0.087204	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_sub_swap; only 1: rewrite sub_diag; only 1: rewrite add_0_l; only 1: easy).	0.033518	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply divide_antisym_nonneg; only 1: apply gcd_nonneg; only 1: trivial; only 1: apply H2; only 1: apply gcd_divide_l; only 1: apply gcd_divide_r; only 1: apply gcd_greatest; only 1: easy; only 1: easy).	0.053520	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold lt_alt; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: auto with *).	0.051615	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: rewrite H; only 1: apply gcd_divide_l; only 1: rewrite H0; only 1: apply gcd_divide_r; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: apply gcd_greatest).	0.089926	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply gcd_unique; only 1: trivial; only 1: apply H0; only 1: apply divide_refl; only 1: apply H0; only 1: apply divide_refl; only 1: intros; only 1: apply H0; only 1: split; only 1: easy; only 1: easy).	0.072610	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	300	0	synth with cache (only 1: exact le_alt_dichotomy).	0.020207	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.029159	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_sub_swap; only 1: rewrite add_opp_diag_l; only 1: rewrite sub_0_l; only 1: easy).	0.032546	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_r; only 1: easy).	0.036138	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite gcd_divide_iff; only 1: rewrite gcd_divide_iff; only 1: rewrite gcd_divide_iff; only 1: rewrite and_assoc; only 1: easy).	0.137809	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_sub_swap; only 1: rewrite add_simpl_r; only 1: easy).	0.036439	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.029002	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_add_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_l; only 1: rewrite add_opp_r; only 1: easy).	0.084043	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_0_l_nonneg; only 1: easy; only 1: trivial).	0.033027	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_1_l; only 1: easy).	0.025103	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	0.031121	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.022479	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_eq_0_l with n; only 1: rewrite gcd_comm; only 1: easy).	0.029807	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_add_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_l; only 1: rewrite sub_opp_r; only 1: easy).	0.058639	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: apply gcd_eq_0_l with m; only 1: easy; only 1: apply gcd_eq_0_l with n; only 1: rewrite gcd_comm; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: rewrite H0; only 1: apply gcd_0_r_nonneg; only 1: easy).	0.052152	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply gcd_unique_alt; only 1: trivial; only 1: intros ?; only 1: split; only 1: split; only 1: trivial; only 1: apply divide_mul_l; only 1: trivial; only 1: destruct 1; only 1: easy).	0.038041	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: apply gcd_mul_diag_l; only 1: easy; only 1: intros ?; only 1: rewrite <- H0; only 1: apply gcd_divide_r).	0.057804	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	300	0.0.0.0	synth with cache (only 1: unfold IZR; only 1: rewrite R0_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.112570	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	300	1.0.0.0.0	synth with cache (only 1: unfold IZR; only 1: unfold IPR; only 1: rewrite R1_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.080151	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rplus_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.047574	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_opp	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Ropp_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.052118	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_minus	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: unfold CReal_minus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: reflexivity).	0.070719	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_mult	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.054818	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rappart_repr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_comm	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_comm).	0.054548	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_assoc).	0.147604	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_opp_r	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_opp_r).	0.084785	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	0.049649	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_comm	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_comm).	0.056247	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_assoc	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_assoc).	0.077062	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rinv_l	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct Req_appart_dec; only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rquot2; only 1: rewrite Rrepr_1; only 1: apply CReal_inv_l).	0.078799	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply CReal_mult_1_l).	0.083475	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.R1_neq_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_plus_distr_l).	0.103833	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CRealLtForget; only 1: apply CReal_plus_lt_compat_l; only 1: apply CRealLtEpsilon; only 1: exact H).	0.078687	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply and_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply impl_hprop; only 1: intros ?; only 1: intros ?; only 1: apply eq_proofs_unicity_on; only 1: intros ?; only 1: destruct f; only 1: destruct y; only 1: left; only 1: reflexivity; only 1: right; only 1: discriminate; only 1: destruct y; only 1: right; only 1: discriminate; only 1: left; only 1: reflexivity; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply not_hprop).	0.131863	31
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Definition_of_covers; only 1: auto with sets; only 1: auto with sets).	0.044058	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	300	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.027064	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	300	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.025284	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.030549	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.042073	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	300
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H0; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intuition; only 1: intuition; only 1: contradict H; only 1: apply Inhabited_not_empty; only 1: exists x; only 1: intuition).	0.051387	16
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	300	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold seq; only 1: unfold selements; only 1: unfold LO.eq; only 1: intuition).	0.058117	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	300	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold slt; only 1: unfold selements; only 1: unfold LO.lt; only 1: intuition).	0.067426	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: unfold seq; only 1: rewrite Equivb_Equivb; only 1: rewrite Equivb_elements; only 1: auto using LO.eq_1).	0.081681	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_seq; only 1: unfold seq; only 1: apply LO.eq_refl).	0.047595	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: rewrite eq_seq; only 1: unfold seq; only 1: intros; only 1: apply LO.eq_sym; only 1: auto).	0.072062	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_slt; only 1: rewrite eq_seq; only 1: unfold slt; only 1: unfold seq; only 1: intros; only 1: apply LO.lt_not_eq; only 1: auto).	0.149977	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: destruct X.compare; only 1: simpl; only 1: P.MX.elim_comp; only 1: auto; only 1: destruct D.compare; only 1: simpl; only 1: P.MX.elim_comp; only 1: auto; only 1: auto; only 1: simpl; only 1: P.MX.elim_comp; only 1: auto; only 1: simpl; only 1: P.MX.elim_comp; only 1: auto).	0.177506	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	300	0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold seq; only 1: unfold selements; only 1: unfold elements; only 1: unfold LO.eq; only 1: intuition).	0.073660	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	300	0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold slt; only 1: unfold selements; only 1: unfold elements; only 1: unfold LO.lt; only 1: intuition).	0.057354	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: unfold seq; only 1: rewrite Equivb_Equivb; only 1: rewrite Raw.Proofs.Equivb_elements; only 1: auto using LO.eq_1).	0.070009	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.archimed	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_seq; only 1: unfold seq; only 1: apply LO.eq_refl).	0.045504	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: rewrite eq_seq; only 1: unfold seq; only 1: intros; only 1: apply LO.eq_sym; only 1: auto).	0.062766	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.completeness	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_slt; only 1: rewrite eq_seq; only 1: unfold slt; only 1: unfold seq; only 1: intros; only 1: apply LO.lt_not_eq; only 1: auto).	0.188049	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: unfold DRealAbstr in H; only 1: unfold proj1_sig in H; only 1: destruct sig_forall_dec; only 1: discriminate; only 1: apply q1).	1.825789	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	300	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: trivial).	0.037525	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_refl	300	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: trivial).	0.041967	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_irrefl	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).	0.044820	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_irrefl	300	0	synth with cache (only 1: exact Rlt_irrefl).	0.036595	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_eq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).	0.056485	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_eq	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: easy).	0.041405	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rtotal_order	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdichotomy	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	300	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.049177	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge	300	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.035589	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	300	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.055394	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_le	300	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.047648	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_gt	300	0	synth with cache (only 1: trivial).	0.045067	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	300	0	synth with cache (only 1: trivial).	0.046757	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	300	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	0.046523	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	300	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: easy).	0.048832	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_lt	300	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.049188	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_ge	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_ge	300	1	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.046550	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_le	300	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.056655	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_le	300	0	synth with cache (only 1: exact Rlt_not_le).	0.034039	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_ge	300	0	synth with cache (only 1: exact Rlt_not_ge).	0.034716	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	300	0.0.0	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.036495	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rle_not_lt).	0.035632	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_gt	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rge_not_lt).	0.042047	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le	300	0.0	synth with cache (only 1: unfold Rle; only 1: tauto).	0.042826	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge	300	0.0	synth with cache (only 1: unfold Rge; only 1: tauto).	0.134242	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le_sym	300	0.0	synth with cache (only 1: unfold Rle; only 1: auto).	0.139346	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	300	0.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.134316	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_asym).	0.038675	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_antisym	300	0	synth with cache (only 1: auto with real).	0.063774	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_le_eq	300	0	synth with cache (only 1: intuition).	0.050299	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	300	0	synth with cache (only 1: intuition).	0.046700	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros; only 1: replace r1 with r2; only 1: replace r3 with r4; only 1: assumption).	0.042866	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rlt_eq_compat with (r2 := r4) (r4 := r2); only 1: auto; only 1: auto; only 1: auto).	0.050605	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	300	1.1.0	synth with cache (only 1: split; only 1: auto using excluded_middle_imp_representative_boolean_partition, representative_boolean_partition_imp_excluded_middle; only 1: auto using excluded_middle_imp_representative_boolean_partition, representative_boolean_partition_imp_excluded_middle).	0.091545	21
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_trans	300	0	synth with cache (only 1: eauto using Rle_trans with rorders).	0.046485	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	300	0	synth with cache (only 1: eauto using Rlt_trans with rorders).	0.048881	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_trans	300	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.072982	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_trans	300	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.069324	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_trans	300	0	synth with cache (only 1: eauto using Rlt_le_trans with rorders).	0.050742	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	300	0	synth with cache (only 1: eauto using Rle_lt_trans with rorders).	0.043855	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_dec).	0.036513	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	300	0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: trivial).	0.031413	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	300	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.035208	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	300	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.040079	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_or_ge	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_or_lt	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	300	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.033674	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_or_gt	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	300	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.033247	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.inser_trans_R	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r	300	1.0	synth with cache (only 1: intros ?; only 1: ring).	0.063681	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ne	300	0.0.0.0.0.0	synth with cache (only 1: split; only 1: auto with real; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	0.092135	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	300	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.039421	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_l	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.063607	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	300	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.035541	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).	0.170776	39
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	300	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.037509	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.052267	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	300	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.047630	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	300	0	synth with cache (only 1: apply eqb_spec).	0.049167	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	300	0.0.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: easy).	0.055923	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.096065	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_r	300	0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: trivial).	0.033684	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_gt_1	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_1_r	300	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.026992	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	300	0.0	synth with cache (only 1: symmetry; only 1: apply sub_1_r).	0.029273	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_succ_r	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.sub; only 1: rewrite sub_mask_succ_r; only 1: rewrite sub_mask_carry_spec; only 1: destruct BinPosDef.Pos.sub_mask; only 1: auto; only 1: destruct p0; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.052777	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	300	0.1.0.0.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: split; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_l; only 1: trivial).	0.058515	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub	300	0.0.0.0.0	synth with cache (only 1: apply add_reg_r with q; only 1: rewrite sub_add; only 1: trivial; only 1: rewrite add_comm; only 1: apply lt_add_r).	0.033748	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zsth	300	0	synth with cache (only 1: exact Z.eq_equiv).	0.029330	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply not_0_IZR; only 1: intros ?; only 1: discriminate).	0.036625	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.eqR_Qeq	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lt; only 1: rewrite sub_compare_mono_r; only 1: trivial; only 1: trivial; only 1: apply lt_trans with q; only 1: trivial; only 1: easy).	0.032433	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_lt_mono_r with m; only 1: rewrite sub_add; only 1: apply lt_add_r; only 1: auto).	0.030815	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qeq_eqR	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_reg_r with r; only 1: rewrite <- add_assoc; only 1: rewrite sub_add; only 1: rewrite sub_add; only 1: trivial; only 1: apply lt_trans with q; only 1: trivial using lt_add_r; only 1: rewrite add_comm; only 1: trivial using lt_add_r; only 1: trivial using lt_add_r).	0.154664	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).	0.180400	39
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rle_Qle	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zr	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.sub; only 1: simpl; only 1: rewrite sub_mask_carry_spec; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.069774	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	300	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.038830	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	300	0	synth with cache (only 1: apply eqb31_eq).	0.035635	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	300	0	synth with cache (only 1: apply sub_mask_neg_iff').	0.026615	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold BinPosDef.Pos.sub; only 1: rewrite compare_sub_mask; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	0.038272	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rlt_Qlt	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply sub_le; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.029620	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	300	0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.sub; only 1: rewrite sub_mask_diag; only 1: trivial).	0.026490	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qlt_Rlt	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: apply le_succ_l in IHp; only 1: apply le_succ_l; only 1: easy; only 1: simpl; only 1: rewrite pow_succ_r; only 1: easy; only 1: simpl; only 1: easy).	0.055765	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_plus	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Qplus; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).	0.160597	16
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_le	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: apply mul_le_mono_l; only 1: apply le_lteq; only 1: left; only 1: rewrite xI_succ_xO; only 1: apply lt_succ_r; only 1: apply IHp; only 1: simpl; only 1: rewrite pow_succ_r; only 1: easy; only 1: simpl; only 1: easy).	0.050711	14
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_l	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold BinPosDef.Pos.max; only 1: case compare_spec; only 1: auto; only 1: intros ?; only 1: apply le_nlt in H; only 1: elim H; only 1: easy; only 1: auto).	0.039510	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_mult	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).	0.109005	13
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold BinPosDef.Pos.max; only 1: intros ?; only 1: intros ?; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.042600	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold BinPosDef.Pos.min; only 1: intros ?; only 1: intros ?; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.040689	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_r	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold BinPosDef.Pos.min; only 1: case compare_spec; only 1: auto; only 1: intros ?; only 1: apply le_nlt in H; only 1: easy; only 1: auto).	0.043457	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_opp	300	0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Qopp; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: unfold Qden; only 1: unfold Qnum; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto).	0.077224	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_minus	300	0.0.0.0.1	synth with cache (only 1: unfold Qminus; only 1: intros; only 1: rewrite Q2R_plus; only 1: rewrite Q2R_opp; only 1: auto).	0.036380	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros ?; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	0.032392	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	300	0.0	synth with cache (only 1: rewrite max_comm; only 1: apply max_1_l).	0.025012	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.min; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros ?; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	0.039597	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_inv	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_r	300	0.0	synth with cache (only 1: rewrite min_comm; only 1: apply min_1_l).	0.030404	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_div	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qdiv; only 1: unfold Rdiv; only 1: intros; only 1: rewrite Q2R_mult; only 1: rewrite Q2R_inv; only 1: auto; only 1: auto).	0.047058	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_max_distr	300	0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply succ_le_mono).	0.044794	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_min_distr	300	0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply succ_le_mono).	0.033457	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	300	0.0.0.0	synth with cache (only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply add_le_mono_l).	0.044335	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.tech_up	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.up_tech	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply tech_up with (1 := H0); only 1: rewrite plus_IZR; only 1: apply Rplus_le_compat_r; only 1: easy).	0.049010	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.for_base_fp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_Int_part	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_nat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.R0_fp_O	300	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite <- H0 in H; only 1: generalize fp_R0; only 1: intros ?; only 1: auto with zarith real).	0.048212	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_minusni_n	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.lt_minus_O_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.even_odd_cor	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.euclidian_division	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: auto; only 1: auto).	0.084702	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: destruct Rle_dec; only 1: auto with real; only 1: auto with real).	0.053043	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	300	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.102859	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	300	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.054304	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption).	0.055487	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	300	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.042258	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	300	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.050756	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: trivial; only 1: intros ?; only 1: auto with real).	0.050022	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_1	300	0	synth with cache (only 1: ring_Rsqr).	0.043602	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_r	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).	0.045172	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	300	1.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: unfold Rle in *; only 1: intuition; only 1: contradiction).	0.153126	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_right	300	0.0.0.0.0.1.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).	0.148362	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_div	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: assumption).	0.071839	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.105126	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	300	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.046411	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	300	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.049392	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.112657	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_comm	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros; only 1: unfold Rle in *; only 1: intuition; only 1: intros; only 1: reflexivity; only 1: case Rle_dec; only 1: intros; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition; only 1: intros; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	0.162989	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.sig_not_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	0.043727	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: apply cond_pos; only 1: apply cond_pos).	0.037092	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.043291	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_0_lt_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	0.049833	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: assumption).	0.047667	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.040403	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto; only 1: auto).	0.049070	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto with real; only 1: auto with real).	0.056547	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_abs	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Rsqr_neg; only 1: intros ?; only 1: reflexivity).	0.041739	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incr_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).	0.036696	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).	0.043896	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_comm	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros ?; only 1: intros ?; only 1: unfold Rle in *; only 1: intuition; only 1: auto; only 1: case Rle_dec; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	0.450167	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).	0.049823	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: trivial; only 1: intros ?; only 1: auto with real).	0.057975	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	300	0.0	synth with cache (only 1: intros ?; only 1: reflexivity).	0.035622	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_involutive; only 1: unfold fact at 1; only 1: fold fact; only 1: rewrite mult_INR; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rmult_assoc; only 1: rewrite Rinv_l; only 1: apply Rmult_ne; only 1: apply INR_fact_neq_0; only 1: apply Rgt_not_eq; only 1: apply lt_0_INR; only 1: apply Nat.lt_0_succ; only 1: apply INR_fact_neq_0; only 1: apply INR_fact_neq_0).	0.072361	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inv	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.046137	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	300	0	synth with cache (only 1: reflexivity).	0.035564	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	300	0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.041587	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: apply a).	0.139901	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: auto with real).	0.070138	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	300	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption).	0.442026	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_right	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.047483	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: field; only 1: simpl; only 1: rewrite IHn; only 1: ring).	0.130960	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.442268	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_RN_plus	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_assoc; only 1: rewrite <- H; only 1: auto; only 1: auto).	0.255706	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.436102	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxRmult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: apply cond_neg; only 1: intros ?; only 1: apply cond_neg).	0.049285	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: apply H).	0.060732	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: apply H).	0.056103	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: destruct Rle_dec; only 1: split; only 1: intros ?; only 1: split; only 1: apply Rle_lt_trans with y; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intuition; only 1: split; only 1: intros ?; only 1: split; only 1: assumption; only 1: apply Rlt_trans with x; only 1: apply Rnot_le_gt; only 1: assumption; only 1: assumption; only 1: intuition).	0.075595	22
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_neg	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.054720	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Power_monotonic	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.RPow_abs	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Ropp_neq_0_compat; only 1: auto; only 1: intros ?; only 1: auto).	0.046016	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_ne_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_right	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rinv_pow	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: apply Rinv_1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite Rinv_mult_distr; only 1: rewrite H0; only 1: reflexivity; only 1: assumption; only 1: apply pow_nonzero; only 1: assumption).	0.062121	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros ?; only 1: rewrite Rabs_left; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite H0; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	0.059615	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: auto with real; only 1: intuition).	0.062084	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_abs	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Rminus_le; only 1: rewrite <- Rplus_0_r; only 1: unfold Rminus; only 1: rewrite Ropp_involutive; only 1: auto with real; only 1: intros ?; only 1: auto with real).	0.058809	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_le	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Ropp_le_cancel; only 1: rewrite Ropp_involutive; only 1: easy; only 1: intros ?; only 1: exact H0).	0.065894	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply Rabs_pos).	0.040679	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: ring; only 1: destruct Rcase_abs; only 1: ring; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).	0.196007	27
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rsqr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: left; only 1: auto with real; only 1: simpl; only 1: apply Rmult_le_pos; only 1: assumption; only 1: assumption).	0.053144	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_even	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_odd	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_abs	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_incr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1_Rle	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Req_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rle_pow	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Reqb; only 1: destruct Req_dec; only 1: auto with *; only 1: split; only 1: discriminate; only 1: intros ?; only 1: elim n; only 1: auto).	0.059361	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxAbs	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: rewrite Rmult_1_r; only 1: reflexivity).	0.050450	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case z; only 1: unfold BinIntDef.Z.abs; only 1: apply Rabs_R0; only 1: unfold BinIntDef.Z.abs; only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy; only 1: unfold BinIntDef.Z.abs; only 1: unfold IZR at 1; only 1: intros ?; only 1: rewrite Rabs_Ropp; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy).	0.080832	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rabs	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite Rabs_Zabs; only 1: easy).	0.044238	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Rcompare_spec	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rcompare; only 1: destruct total_order_T; only 1: destruct s; only 1: auto; only 1: auto; only 1: auto).	0.068251	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: trivial; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: trivial; only 1: apply Ropp_le_contravar; only 1: assumption).	0.059486	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	300	0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rsqr; only 1: field).	0.062284	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	300	0.0.0	synth with cache (only 1: split; only 1: exact Rlt_irrefl; only 1: exact Rlt_trans).	0.041107	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: trivial; only 1: apply Ropp_le_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: trivial; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.060457	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	300	0.0.0.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: auto).	0.057841	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	300	0.0	synth with cache (only 1: unfold Rle; only 1: auto with *).	0.052559	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rminmax	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rle_trans with a; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: trivial; only 1: intros ?; only 1: auto with real; only 1: apply Rmax_l).	0.050812	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: unfold Zpower_nat; only 1: simpl; only 1: auto with zarith; only 1: unfold Zpower_nat; only 1: simpl; only 1: auto with zarith).	0.047168	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	300	0	synth with cache (only 1: reflexivity).	0.033132	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	300	0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.042169	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qabs_Qminus; only 1: apply H; only 1: assumption; only 1: assumption).	0.061149	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.factorDenom	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.048531	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Pos2Nat.inj_add; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: apply powerRZ_pos_sub; only 1: auto; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Rmult_comm; only 1: apply powerRZ_pos_sub; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite pow_add; only 1: apply Rinv_mult_distr; only 1: apply pow_nonzero; only 1: auto; only 1: apply pow_nonzero; only 1: auto).	0.161720	46
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: exists x; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qabs_Qminus; only 1: apply H; only 1: assumption; only 1: assumption).	0.054089	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite SuccNat2Pos.id_succ; only 1: simpl; only 1: rewrite mult_IZR; only 1: rewrite <- INR_IZR_INZ; only 1: rewrite H; only 1: case n0; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	0.092574	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zpower_pos_nat; only 1: simpl; only 1: induction BinPosDef.Pos.to_nat; only 1: easy; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: rewrite <- IHn0; only 1: easy).	0.063021	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.046480	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rlt_le; only 1: auto with real).	0.040773	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto with zarith; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: elim BinPosDef.Pos.to_nat; only 1: simpl; only 1: auto with zarith; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: rewrite <- mult_IZR; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: contradict H; only 1: auto with zarith).	0.081726	22
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: elim BinPosDef.Pos.to_nat; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: ring; only 1: simpl; only 1: intros ?; only 1: elim BinPosDef.Pos.to_nat; only 1: simpl; only 1: exact Rinv_1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rinv_1; only 1: rewrite H; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.114169	28
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtForget	300	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: exists x0; only 1: apply q).	0.043672	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	300	0.0.0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: easy).	0.043214	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	300	0.0	synth with cache (only 1: intros; only 1: apply Zgcdn_pos).	0.034898	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct alpha; only 1: intros ?; only 1: simpl; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Rinv_pow; only 1: easy; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Rinv_pow; only 1: rewrite Rinv_involutive; only 1: easy; only 1: easy; only 1: apply Rinv_neq_0_compat; only 1: easy).	0.058985	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.GP_finite	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_elim	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.swap_greater; only 1: easy).	0.050531	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	300	0.0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rewrite Z.compare_refl; only 1: easy).	0.030526	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	0.117164	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_sym	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: ring; only 1: destruct Rcase_abs; only 1: ring; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).	0.175744	28
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.036007	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zge_compare	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.029285	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zgt_compare	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.043049	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_eq	300	0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	0.060745	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	300	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.042563	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_tri	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.087428	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_mult_l	300	0.0.1.0.0	synth with cache (only 1: intros; only 1: unfold R_dist; only 1: rewrite <- Rmult_minus_distr_l; only 1: rewrite Rabs_mult; only 1: reflexivity).	0.044318	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	300	0.0.0.0	synth with cache (only 1: unfold Zgcd_alt; only 1: intros; only 1: apply Zgcdn_is_gcd; only 1: auto).	0.049251	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: unfold Rle in *; only 1: intuition).	0.129861	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_r	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.049676	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_l	300	1.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: unfold Rle in *; only 1: intuition; only 1: contradiction).	0.315047	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: unfold Rle in *; only 1: intuition; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).	0.103026	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).	0.043741	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	300	1.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl).	0.049477	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intros ?; only 1: contradiction; only 1: intros ?; only 1: contradiction).	0.040045	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).	0.045757	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_max_distr	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: trivial; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: trivial; only 1: apply Ropp_le_contravar; only 1: assumption).	0.061072	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_min_distr	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: trivial; only 1: apply Ropp_le_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: trivial; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.063888	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	300	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_min_distr; only 1: apply plus_max_distr_l).	0.044151	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	300	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_max_distr_r).	0.051907	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	300	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_max_distr; only 1: apply plus_min_distr_l).	0.163006	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.Rlt_R0_R2	300	0	synth with cache (only 1: auto with real).	0.042895	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.040649	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	300	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_min_distr_r).	0.180004	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: split; only 1: intros; only 1: red; only 1: intros; only 1: rewrite H; only 1: clear H; only 1: fsetdec; only 1: intros; only 1: fsetdec).	0.190790	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	300	0	synth with cache (only 1: fsetdec).	0.045577	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	300	0	synth with cache (only 1: fsetdec).	0.075297	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	300	0	synth with cache (only 1: fsetdec).	0.063883	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	300	0	synth with cache (only 1: fsetdec).	0.072604	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	300	0	synth with cache (only 1: fsetdec).	0.083199	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	300	0	synth with cache (only 1: fsetdec).	0.071474	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	300	0	synth with cache (only 1: fsetdec).	0.052008	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	300	0	synth with cache (only 1: fsetdec).	0.089079	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	300	0	synth with cache (only 1: fsetdec).	0.096410	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	300	0.0.0.0	synth with cache (only 1: split; only 1: exact CRealEq_refl; only 1: exact CRealEq_sym; only 1: exact CRealEq_trans).	0.045370	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	300	0	synth with cache (only 1: fsetdec).	0.131610	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	300	0	synth with cache (only 1: fsetdec).	0.120682	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CRealLt_morph; only 1: assumption; only 1: assumption).	0.226318	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	300	0	synth with cache (only 1: fsetdec).	0.072941	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	300	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.045716	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	300	0	synth with cache (only 1: fsetdec).	0.081280	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	300	0	synth with cache (only 1: fsetdec).	0.112780	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	300	0	synth with cache (only 1: fsetdec).	0.112458	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_length_1_inv in H; only 1: injection H as; only 1: intropattern subst -> H; only 1: auto).	0.030638	7
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_length_2_inv in H; only 1: destruct H; only 1: injection H as; only 1: intropattern subst -> H; only 1: intropattern subst -> H0; only 1: auto; only 1: injection H as; only 1: intropattern subst -> H; only 1: intropattern subst -> H0; only 1: auto).	0.077457	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NoDup_Permutation; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: apply NoDup_length_incl; only 1: trivial; only 1: trivial; only 1: trivial).	0.048747	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	300	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: eauto using Permutation_NoDup).	0.048706	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.091728	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	300	0	synth with cache (only 1: exact Permutation_map).	0.026100	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold CRealGe; only 1: apply CRealLe_morph; only 1: assumption; only 1: assumption).	0.039059	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply NoDup_Permutation_bis; only 1: auto using Injective_map_NoDup, seq_NoDup; only 1: auto using Injective_map_NoDup, seq_NoDup; only 1: rewrite map_length; only 1: easy; only 1: intros ?; only 1: rewrite in_map_iff; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: intropattern subst <- H1; only 1: rewrite in_seq in *; only 1: simpl in *; only 1: destruct H2; only 1: clear H1; only 1: auto with arith).	0.077781	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold EUn; only 1: split with n; only 1: trivial).	0.039282	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qminus; only 1: rewrite Qplus_opp_r; only 1: unfold Qlt; only 1: simpl; only 1: unfold Z.lt; only 1: auto).	0.075196	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	300	0	synth with cache (only 1: fsetdec).	0.120144	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equivlistA; only 1: intros; only 1: rewrite removeA_InA; only 1: split; only 1: intros; only 1: rewrite <- H0; only 1: split; only 1: auto; only 1: contradict H; only 1: apply InA_eqA with x0; only 1: auto; only 1: auto; only 1: intros; only 1: rewrite <- H0 in H1; only 1: destruct H1; only 1: inv; only 1: elim H2; only 1: auto; only 1: auto).	0.091282	19
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQ	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H0; only 1: intuition; only 1: split; only 1: intros ?; only 1: inv; only 1: constructor; only 1: rewrite <- H; only 1: rewrite <- H1; only 1: auto; only 1: intros ?; only 1: inv; only 1: constructor; only 1: rewrite H; only 1: rewrite H1; only 1: auto).	0.147045	21
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_le_iff	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: subst; only 1: compute; only 1: intuition congruence; only 1: intros; only 1: destruct H; only 1: apply Z.le_antisymm; only 1: auto; only 1: auto).	0.053772	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.lt_le_iff	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: easy).	0.037460	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	300	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply Zle_minus_le_0; only 1: assumption; only 1: intros; only 1: apply Zle_0_minus_le; only 1: auto).	0.045777	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: apply MF.In_eq_iff; only 1: auto).	0.064112	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	300	0.0	synth with cache (only 1: symmetry; only 1: apply MF.mem_iff).	0.032806	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	300	0.0	synth with cache (only 1: symmetry; only 1: apply MF.equal_iff).	0.036977	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	300	0	synth with cache (only 1: fsetdec).	0.129527	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_neg	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	300	0.0	synth with cache (only 1: symmetry; only 1: apply MF.subset_iff).	0.037468	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	300	0.0	synth with cache (only 1: symmetry; only 1: apply MF.is_empty_iff).	0.034186	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.cauchy_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	300	0.0	synth with cache (only 1: rewrite MF.add_iff; only 1: intuition).	0.167211	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	300	0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: congruence).	0.031393	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q).	0.115661	15
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	300	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.036077	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zsor	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Zsth; only 1: intros; only 1: subst; only 1: reflexivity; only 1: intros; only 1: subst; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: reflexivity; only 1: intros; only 1: subst; only 1: reflexivity; only 1: intros; only 1: subst; only 1: reflexivity; only 1: constructor; only 1: exact Z.add_0_l; only 1: intros ?; only 1: intros ?; only 1: apply Z.add_comm; only 1: exact Z.add_assoc; only 1: exact Z.mul_1_l; only 1: intros ?; only 1: intros ?; only 1: apply Z.mul_comm; only 1: exact Z.mul_assoc; only 1: exact Z.mul_add_distr_r; only 1: trivial; only 1: exact Z.sub_diag; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply Z.le_antisymm; only 1: auto; only 1: auto; only 1: apply Z.le_trans; only 1: intros; only 1: apply Z.le_neq; only 1: intros; only 1: apply Z.lt_trichotomy; only 1: intros; only 1: apply Z.add_le_mono_l; only 1: assumption; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: discriminate).	0.208161	85
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	300	0.0	synth with cache (only 1: rewrite MF.remove_iff; only 1: intuition).	0.047826	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	0.048953	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	300	0.0	synth with cache (only 1: rewrite MF.singleton_iff; only 1: intuition).	0.044841	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q).	0.110688	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZSORaddon	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: trivial using Z.pos_sub_opp; only 1: trivial; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: trivial; only 1: intros; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: apply Zeq_is_eq_bool; only 1: constructor; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite Zeq_is_eq_bool; only 1: destruct Zeq_bool; only 1: easy; only 1: easy; only 1: apply Zle_bool_imp_le).	0.109682	24
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite app_assoc_reverse; only 1: rewrite app_assoc_reverse; only 1: simpl; only 1: auto).	0.123978	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	300	0.0	synth with cache (only 1: symmetry; only 1: apply MF.elements_iff).	0.042254	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift'	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	300	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply MF.for_all_iff; only 1: auto).	0.040910	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.Un_growing_shift	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H).	0.044764	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	300	0	synth with cache (only 1: apply rev_eqlistA_compat).	0.015577	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	300	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply MF.exists_iff; only 1: auto).	0.046690	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZNpower	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	300	0	synth with cache (only 1: fsetdec).	0.464017	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	300	0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: destruct y; only 1: reflexivity).	0.054774	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_sub	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_add	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: simpl; only 1: simpl in H; only 1: elim H; only 1: intros ?; only 1: left; only 1: rewrite H0; only 1: reflexivity; only 1: intros ?; only 1: right; only 1: apply IHl; only 1: assumption).	0.105047	14
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold compare; only 1: destruct M.compare; only 1: auto; only 1: auto; only 1: auto).	0.046198	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.belowMultiple	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	300	0	synth with cache (only 1: reflexivity).	0.034460	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	300	0	synth with cache (only 1: fsetdec).	0.060121	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	300	0	synth with cache (only 1: fsetdec).	0.053729	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnormalise_correct	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	300	0	synth with cache (only 1: fsetdec).	0.103484	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.Rlist_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P0	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: left; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: left; only 1: reflexivity).	0.061328	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	300	0	synth with cache (only 1: fsetdec).	0.089746	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	0.044553	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.normalise_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	300
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnegate_correct	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	300	0	synth with cache (only 1: fsetdec).	0.114135	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P4	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P5	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	300	0	synth with cache (only 1: fsetdec).	0.116406	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.in_holed_interval_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	300	0	synth with cache (only 1: fsetdec).	0.088175	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	300	0	synth with cache (only 1: fsetdec).	0.118948	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P10	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity; only 1: intros ?; only 1: reflexivity).	0.080764	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_couple_eq	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: injection H; only 1: intros; only 1: split; only 1: subst; only 1: reflexivity; only 1: subst; only 1: reflexivity).	0.053961	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	300	0	synth with cache (only 1: fsetdec).	0.106575	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P11	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P12	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: exact H0).	0.057995	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_two_in_interval_works	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_r; only 1: exact H0).	0.050730	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: contradiction).	0.037307	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P13	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P14	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	300	0	synth with cache (only 1: fsetdec).	0.126528	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P15	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P16	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	300	0.0.0.0.0	synth with cache (only 1: simpl; only 1: destruct tearing_sequences; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.424381	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P17	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P19	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: reflexivity; only 1: exists r; only 1: exists l; only 1: reflexivity).	0.076972	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P20	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P21	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.043519	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P22	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	0.042891	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P24	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: destruct H; only 1: contradiction; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: destruct H; only 1: contradiction).	0.098115	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CReal_plus_morph; only 1: assumption; only 1: assumption).	0.048800	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P25	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_lt_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P26	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P27	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.increase_seq_transit	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.decrease_seq_transit	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P29	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_growing	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Un_growing; only 1: unfold opp_seq; only 1: unfold Un_decreasing; only 1: intros; only 1: apply Ropp_le_contravar; only 1: apply H).	0.393335	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_cv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	300	0	synth with cache (only 1: fsetdec).	0.076034	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.negate_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_ss	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	300	0	synth with cache (only 1: fsetdec).	0.077577	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_ss	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	300	0	synth with cache (only 1: fsetdec).	0.050001	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	300	0	synth with cache (only 1: fsetdec).	0.050901	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Wn_decreasing	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	300	0	synth with cache (only 1: fsetdec).	0.078887	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	300	0	synth with cache (only 1: fsetdec).	0.090381	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	300	0	synth with cache (only 1: fsetdec).	0.095568	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: apply Rplus_lt_0_compat; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply H; only 1: apply le_n).	0.053267	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	300	0	synth with cache (only 1: fsetdec).	0.040946	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_maj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_min	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech3	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_maj	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold has_ub; only 1: apply cauchy_bound; only 1: assumption).	0.034488	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech4	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.051344	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	300	0	synth with cache (only 1: fsetdec).	0.133950	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_min	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_cv	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply Wn_decreasing; only 1: apply maj_min; only 1: apply cauchy_min; only 1: assumption).	0.047833	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech7	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_cv	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply Vn_growing; only 1: apply min_maj; only 1: apply cauchy_maj; only 1: assumption).	0.049165	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech11	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Pser; only 1: unfold infinite_sum; only 1: unfold Un_cv in H; only 1: assumption).	0.044887	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cond_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	300	1	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.048500	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite <- IHN; only 1: ring).	0.077054	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.decomp_sum	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	0.088403	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_maj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate).	0.219709	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.uniqueness_sum	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_one	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q; only 1: ring_simplify in q; only 1: discriminate; only 1: intros ?; only 1: destruct H; only 1: simpl in q; only 1: ring_simplify in q; only 1: discriminate).	0.157646	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.minus_sum	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	0.093696	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_cvabs	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	300	0.1.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: reflexivity).	0.066681	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	300	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: intros; only 1: symmetry; only 1: trivial).	0.047719	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_decomposition	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_Cauchy	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: trivial).	0.083536	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_Rle	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	300	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.048995	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rsum_abs	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	300	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.039805	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	300	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: rewrite mem_Leaf; only 1: discriminate).	0.047681	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case o; only 1: trivial; only 1: destruct l; only 1: destruct r; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy; only 1: trivial; only 1: trivial).	0.071114	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.le_inject_Q	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_growing	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_le	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_empty_spec; only 1: trivial).	0.046821	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: rewrite tech5; only 1: apply Rplus_le_le_0_compat; only 1: apply IHN; only 1: apply H).	0.055253	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_ltb_leb	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_empty_spec; only 1: trivial).	0.048695	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.eqb_compare; only 1: rewrite Z.eqb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	0.053022	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.leb_compare; only 1: rewrite Z.leb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	0.050908	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.ltb_compare; only 1: rewrite Z.ltb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	0.049359	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cauchy_abs	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply -> subset_spec).	0.029864	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply R_complete; only 1: unfold Cauchy_crit_series in H; only 1: exact H).	0.048735	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply <- subset_spec).	0.041513	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq_R0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: rewrite tech5; only 1: rewrite IHN; only 1: rewrite Rplus_0_l; only 1: apply H; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r).	0.085397	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_ineq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_opp	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_incr	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_ineq	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- subset_spec; only 1: rewrite <- subset_spec; only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	0.090991	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply -> equal_spec).	0.050068	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply <- equal_spec).	0.045862	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cv_maj	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: case u'; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.139589	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity).	0.169203	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct u; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.064286	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate).	0.058644	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_inv; only 1: case compare_fun; only 1: intros; only 1: discriminate; only 1: trivial; only 1: intros; only 1: discriminate).	0.047231	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	300	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_equal; only 1: apply <- equal_spec).	0.054562	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	300	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: auto with *).	0.051169	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	300	0.0.0.0.0	synth with cache (only 1: unfold to_list; only 1: red; only 1: intros; only 1: rewrite <- F.elements_iff; only 1: apply of_list_1).	0.046344	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	300	0.0.0.0.0.0	synth with cache (only 1: unfold to_list; only 1: red; only 1: intros; only 1: rewrite of_list_1; only 1: symmetry; only 1: apply F.elements_iff).	0.039618	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	300	0.0.0	synth with cache (only 1: rewrite fold_1; only 1: symmetry; only 1: apply fold_left_rev_right).	0.042685	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Zcompare_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_n0	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor).	0.117120	22
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	0.038030	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).	0.056867	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction H; only 1: constructor; only 1: apply Z.divide_trans with (1 := H0); only 1: assumption; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto; only 1: auto).	0.059699	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_minus	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite equal_spec in H0; only 1: rewrite <- compare_equal in H0; only 1: congruence).	0.077590	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsrt	300	0.0.1.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: intros; only 1: rewrite Rplus_assoc; only 1: auto; only 1: exact Rmult_1_l; only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply ConstructiveCauchyRealsMult.CReal_mult_comm; only 1: intros; only 1: rewrite Rmult_assoc; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring; only 1: reflexivity; only 1: exact Rplus_opp_r).	0.314691	87
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.046785	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).	0.048552	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: right; only 1: assumption).	0.046982	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: intros ?; only 1: destruct H0; only 1: intropattern subst -> H0; only 1: elim H; only 1: trivial; only 1: assumption).	0.104026	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_le	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply fold_1b; only 1: auto with set).	0.029769	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rcomplete.R_complete	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rinv_1	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_1; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.044476	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_true	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_eqR; only 1: apply Qeq_bool_eq; only 1: assumption).	0.040046	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_correct	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	300	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.042351	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_false	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy).	0.039758	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qle_Rle; only 1: apply Qle_bool_imp_le; only 1: easy).	0.046452	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.033232	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_0	300	0	synth with cache (only 1: apply Rmult_0_l).	0.032706	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_1	300	0.0	synth with cache (only 1: compute; only 1: apply Rinv_1).	0.043426	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.037313	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: split; only 1: assumption; only 1: assumption).	0.046497	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_inv_ext	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_spec; only 1: tauto).	0.054298	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply max_var_nformulae_correct_aux).	0.054353	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.051672	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.QSORaddon	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: apply Q2R_0; only 1: apply Q2R_1; only 1: intros; only 1: apply Q2R_plus; only 1: intros; only 1: apply Q2R_minus; only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto; only 1: intros; only 1: apply Q2R_opp; only 1: intros; only 1: apply Qeq_true; only 1: assumption; only 1: apply R_power_theory; only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy; only 1: intros; only 1: apply Qle_Rle; only 1: apply Qle_bool_imp_le; only 1: easy).	0.218916	36
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	300	0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: apply add_1; only 1: assumption).	0.040495	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.in_bdepth	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_true	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_false	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_m_Proper	300	1	synth with cache (only 1: exact Qeq_eqR).	0.058835	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply -> union_spec; only 1: assumption).	0.080504	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite M.fold_1; only 1: symmetry; only 1: apply fold_left_length).	0.040118	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: left; only 1: assumption).	0.046365	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply eq_sym; only 1: apply double_var).	0.040547	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_N	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	0.050023	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qmult_integral	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.082772	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	0.047071	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps4	300	0.0	synth with cache (only 1: intros ?; only 1: field).	0.086807	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	300	0.0	synth with cache (only 1: intros; only 1: lra).	0.047041	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite elements_Empty; only 1: rewrite M.cardinal_1; only 1: destruct elements; only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.062772	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_zero	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: tauto).	0.048028	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).	0.032467	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: tauto).	0.049068	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	300	0.0	synth with cache (only 1: intros; only 1: lra).	0.165587	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite inter_spec; only 1: split; only 1: assumption; only 1: assumption).	0.043057	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2RpowerRZ	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower0	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct z; only 1: intros ?; only 1: elim H; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: apply Qpower_positive_zero; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_zero; only 1: reflexivity).	0.057340	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	300	1	synth with cache (only 1: exact Equal_cardinal).	0.028863	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.prop_eps	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	300	0.0.0.0	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.058271	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.058350	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.051726	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply tech_Rplus; only 1: apply Rplus_le_le_0_compat; only 1: apply Rabs_pos; only 1: apply Rabs_pos; only 1: exact Rlt_0_1).	0.176233	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: tauto).	0.051833	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_subset	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: tauto).	0.050643	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	300	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.068505	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_jump	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold agree_env; only 1: intros ?; only 1: intros; only 1: unfold Env.jump; only 1: apply H; only 1: apply Pos.add_le_mono_r; only 1: auto).	0.072493	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite diff_spec; only 1: split; only 1: assumption; only 1: assumption).	0.060584	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_tail	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Env.tail; only 1: apply agree_env_jump; only 1: rewrite <- Pos.add_1_r in H; only 1: apply H).	0.058930	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_formula_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Reval_formula; only 1: destruct f; only 1: unfold Reval_formula'; only 1: unfold Reval_expr; only 1: split; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rge_le; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rle_ge; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.157159	32
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt_f	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_acc	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_nformula_dec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.lim_x	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold limit1_in; only 1: unfold limit_in; only 1: simpl; only 1: intros; only 1: split with eps; only 1: split; only 1: assumption; only 1: intros; only 1: elim H0; only 1: intros; only 1: auto).	0.061285	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	0.065512	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: rewrite PeanoNat.Nat.add_comm; only 1: auto with arith).	0.036853	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	0.050758	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_plus	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	0.060815	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	300	0	synth with cache (only 1: auto with set fset).	0.029184	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RTautoChecker_sound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_free	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	300	0	synth with cache (only 1: auto with set fset).	0.051471	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_mul	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.097556	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.052353	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.single_limit	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.057079	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.050568	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_comp	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.034481	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.040023	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	300	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.042467	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: unfold In; only 1: intros; only 1: rewrite xelements_spec; only 1: right; only 1: exists x; only 1: auto).	0.079830	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_inv	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold leb; only 1: unfold gtb; only 1: destruct E.compare; only 1: intuition; only 1: ME.order; only 1: intuition; only 1: ME.order; only 1: intuition).	0.138623	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite xelements_spec in H; only 1: destruct H; only 1: inversion_clear H; only 1: destruct H; only 1: destruct H; only 1: rewrite H; only 1: assumption).	0.123695	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: f_equal; only 1: apply gtb_compat; only 1: auto).	0.042054	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply SortA_NoDupA with PositiveOrderedTypeBits.lt; only 1: constructor; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.eq_refl; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.eq_sym; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.eq_trans; only 1: constructor; only 1: intros ?; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.lt_not_eq in H; only 1: apply H; only 1: reflexivity; only 1: intros ?; only 1: apply PositiveOrderedTypeBits.lt_trans; only 1: solve_proper; only 1: apply elements_3).	0.112487	19
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: induction s; only 1: intros ?; only 1: apply empty_1; only 1: destruct b; only 1: discriminate; only 1: simpl in H; only 1: destruct choose; only 1: discriminate; only 1: destruct choose; only 1: discriminate; only 1: intros ?; only 1: destruct a; only 1: apply IHs2; only 1: reflexivity; only 1: apply IHs1; only 1: reflexivity; only 1: discriminate).	0.124636	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply choose_3' in H1; only 1: congruence).	0.142416	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: left; only 1: assumption).	0.045706	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).	0.210915	16
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	300	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.051886	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	300	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.035769	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	300	0.0.0.0	synth with cache (only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply add_le_mono_l).	0.052138	4
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	300	0	synth with cache (only 1: reflexivity).	0.045694	1
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	300	0.0.0.0	synth with cache (only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_l).	0.028835	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	300	0.0.0.0	synth with cache (only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_l).	0.033763	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.cont_deriv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dconst	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dadd	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult_const	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dminus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx_pow_n	300
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dcomp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.D_pow_n	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C1	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_op_succ	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.of_nat_succ	300	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite IHn; only 1: easy).	0.040912	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step3	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	300	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl BinPosDef.Pos.pred; only 1: rewrite pred_succ; only 1: apply of_nat_succ).	0.035089	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_of_nat	300	0.0.0.0.0	synth with cache (only 1: rewrite of_nat_succ; only 1: destruct n; only 1: destruct 1; only 1: auto with arith; only 1: trivial).	0.037163	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step4	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C4	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CV_ALT; only 1: assumption; only 1: unfold positivity_seq; only 1: apply decreasing_ineq; only 1: assumption; only 1: assumption; only 1: assumption).	0.046859	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_In; only 1: destruct multiplicity; only 1: auto; only 1: destruct 1; only 1: auto with arith).	0.065494	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_In; only 1: auto).	0.039905	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrt_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_decreasing	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: destruct p; only 1: destruct x; only 1: easy; only 1: simpl in H; only 1: destr_eq H; only 1: exists x; only 1: easy; only 1: easy; only 1: rewrite mul_xO_r in H0; only 1: discriminate; only 1: exists q; only 1: rewrite mul_1_r; only 1: easy).	0.071733	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C6	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite mul_xO_r in H; only 1: destr_eq H; only 1: exists x; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_xO_r; only 1: f_equal; only 1: auto).	0.064749	13
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_l	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_r	300	0.0	synth with cache (only 1: rewrite mul_comm; only 1: apply divide_mul_l).	0.029989	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: eapply permut_In_In; only 1: eauto; only 1: red; only 1: auto).	0.078066	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	300	0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.ggcd; only 1: unfold BinPosDef.Pos.gcd; only 1: intros; only 1: apply ggcdn_gcdn).	0.033141	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_nil	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.exist_PI	300	0.0.0	synth with cache (only 1: apply alternated_series; only 1: apply PI_tg_decreasing; only 1: apply PI_tg_cv).	0.045023	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_ineq	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	300	0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.ggcd; only 1: intros; only 1: apply ggcdn_correct_divisors).	0.034571	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: rewrite <- Rplus_le_mono_l; only 1: easy).	0.146922	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_greatest	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcdn_greatest; only 1: auto; only 1: auto; only 1: auto).	0.042984	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Peqb_true_eq	300	0.0	synth with cache (only 1: rewrite <- Pos.eqb_eq; only 1: easy).	0.031546	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	300	0	synth with cache (only 1: reflexivity).	0.018551	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pminus_mask_Gt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pos.add_comm; only 1: apply Pos.sub_add; only 1: apply Pos.gt_lt; only 1: auto).	0.216377	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Dcompare	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_N_predN	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_plus	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	0.227415	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: assumption).	0.076295	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	300	0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: assumption).	0.047006	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: assumption; only 1: assumption).	0.230554	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold mult_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: assumption).	0.316259	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_const	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.div_eq_inv	300	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.084334	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_div	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_eq_inv; only 1: apply continuity_pt_mult; only 1: assumption; only 1: apply continuity_pt_inv; only 1: assumption; only 1: assumption).	0.063423	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_minus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step3	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_const	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_scal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_div	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_comp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step3	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_limite	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.binomial	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_derive	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_split	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	300	0.0	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.039262	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: trivial; only 1: simpl; only 1: apply Rmult_le_pos; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r; only 1: apply H; only 1: apply le_n).	0.072427	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	300	0.0.0.0.0	synth with cache (only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: symmetry; only 1: trivial).	0.039205	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_Rle	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	300	0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.044629	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.fact_prodSO	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHn; only 1: case n; only 1: auto with real; only 1: intros; only 1: rewrite plus_INR; only 1: rewrite mult_INR; only 1: ring).	0.111900	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.le_n_2n	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	300	0.0.0	synth with cache (only 1: intros; only 1: apply permut_add_cons_inside; only 1: auto using permut_sym, permut_refl).	0.033337	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold permutation; only 1: unfold meq; only 1: intros ?; only 1: rewrite list_contents_app; only 1: rewrite list_contents_app; only 1: simpl; only 1: auto with arith).	0.107935	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec; only 1: clear e; only 1: auto; only 1: contradict n; only 1: auto).	0.054839	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_minus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply lt_O_fact).	0.037950	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_const	300	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros; only 1: apply derivable_pt_const).	0.047329	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_scal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_id	300	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_id).	0.057591	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	300	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_Rsqr).	0.063484	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_comp	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_minus	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct eqA_dec; only 1: destruct eqA_dec; only 1: auto; only 1: contradict n; only 1: transitivity x; only 1: auto with *; only 1: transitivity x0; only 1: auto with *; only 1: auto with *; only 1: destruct eqA_dec; only 1: contradict n; only 1: transitivity y; only 1: auto with *; only 1: transitivity y0; only 1: auto with *; only 1: auto with *; only 1: auto).	0.098038	23
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	300	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	0.046189	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec; only 1: destruct eqA_dec; only 1: auto; only 1: contradict n; only 1: transitivity a1; only 1: eauto with *; only 1: eauto with *; only 1: destruct eqA_dec; only 1: contradict n; only 1: transitivity a1'; only 1: eauto with *; only 1: eauto with *; only 1: auto).	0.075861	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_scal	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_id	300	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.045140	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec; only 1: destruct eqA_dec; only 1: auto; only 1: contradict n; only 1: transitivity a2; only 1: eauto with *; only 1: eauto with *; only 1: destruct eqA_dec; only 1: contradict n; only 1: transitivity a2'; only 1: eauto with *; only 1: eauto with *; only 1: auto).	0.137650	14
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	300	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.109948	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_InA; only 1: destruct multiplicity; only 1: auto with arith; only 1: destruct 1; only 1: auto with arith).	0.155394	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_InA; only 1: auto with arith).	0.047384	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pow	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_InA; only 1: rewrite multiplicity_InA; only 1: unfold permutation; only 1: unfold meq; only 1: intros ?; only 1: rewrite H; only 1: auto).	0.097641	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_pow	300	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).	0.175690	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite sub_add_opp; only 1: rewrite sub_add_opp; only 1: f_equiv; only 1: easy; only 1: f_equiv; only 1: easy).	0.097516	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_maximum	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_minimum	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_constant2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_split	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	300	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: trivial; only 1: trivial; only 1: trivial).	0.048961	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	300	0.0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl'; only 1: easy).	0.099996	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_last	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	300	0.0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl'; only 1: easy).	0.115948	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	300	0.0.0.0.0	synth with cache (only 1: unfold Z.opp; only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl; only 1: easy).	0.069904	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	300	0	synth with cache (only 1: reflexivity).	0.039589	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: intros; only 1: unfold neighbourhood in H; only 1: elim H; only 1: intros; only 1: unfold included in H0; only 1: apply H0; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos).	0.222635	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold included; only 1: intros; only 1: unfold adherence; only 1: unfold point_adherent; only 1: intros; only 1: exists x; only 1: unfold intersection_domain; only 1: split; only 1: unfold neighbourhood in H0; only 1: elim H0; only 1: intros; only 1: unfold included in H1; only 1: apply H1; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos; only 1: apply H).	0.074707	20
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	300	0.0.0.0.0	synth with cache (only 1: unfold included; only 1: intros; only 1: apply H0; only 1: apply H; only 1: apply H1).	0.048152	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: elim H; only 1: intros; only 1: unfold intersection_domain in H0; only 1: unfold complementary in H0; only 1: elim H0; only 1: intros; only 1: elim H2; only 1: assumption).	0.061530	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.sub; only 1: unfold Z.eq; only 1: simpl; only 1: symmetry; only 1: rewrite add_succ_r; only 1: easy).	0.074023	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.neighbourhood_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P2	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: unfold union_domain in H1; only 1: elim H1; only 1: intros ?; only 1: apply neighbourhood_P1 with D1; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H; only 1: assumption; only 1: intros ?; only 1: apply neighbourhood_P1 with D2; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H0; only 1: assumption).	0.208991	18
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P3	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	300	0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H).	0.038770	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P5	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.disc_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P2	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	300	0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases).	0.028079	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	300	0.0	synth with cache (only 1: intros; only 1: apply lt_irrefl).	0.030458	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.restriction_family	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold intersection_domain; only 1: elim H0; only 1: intros; only 1: split; only 1: apply cond_fam; only 1: exists x0; only 1: assumption; only 1: assumption).	0.071713	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.min; only 1: unfold Z.le; only 1: unfold Z.eq; only 1: simpl; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: simpl in *; only 1: rewrite min_r; only 1: rewrite add_assoc; only 1: easy; only 1: assumption).	0.089123	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.max; only 1: unfold Z.le; only 1: unfold Z.eq; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite max_r; only 1: rewrite add_assoc; only 1: easy; only 1: assumption).	0.070022	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	300	0.0	synth with cache (only 1: intros; only 1: apply lt_nge).	0.038004	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_eqDom	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P3	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P4	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.028391	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P5	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.pow_i	300	0.1.0.0	synth with cache (only 1: intros; only 1: apply pow_ne_zero; only 1: apply Nat.neq_0_lt_0; only 1: auto with arith).	0.062276	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_carac	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_compact	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold cosh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rdiv; only 1: rewrite <- Rinv_r_sym; only 1: easy; only 1: discrR).	0.046038	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sinh_0	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold sinh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rplus_opp_r; only 1: apply Rmult_0_l).	0.037130	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_characterization	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_restrict	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: induction H0 in n, H, H0 |- *; only 1: apply le_n_0_eq in H; only 1: intropattern subst <- H; only 1: apply here; only 1: assumption; only 1: destruct n; only 1: apply here; only 1: assumption; only 1: apply next_left; only 1: auto using le_S_n; only 1: auto using le_S_n; only 1: destruct n; only 1: apply here; only 1: assumption; only 1: apply next_right; only 1: auto using le_S_n; only 1: auto using le_S_n).	0.079139	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.prolongement_C0	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_comp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.archimed_cor1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.319354	23
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_exists	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_cos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold cos_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.054225	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_approx	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	300	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply dicho_lb_growing; only 1: assumption; only 1: apply dicho_lb_maj; only 1: assumption).	0.061821	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply dicho_up_decreasing; only 1: assumption; only 1: apply dicho_up_min; only 1: assumption).	0.041619	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P6	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_decidable	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	300	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.049252	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.WeakKonigsLemma	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply inductively_barred_at_is_path_from_decidable in H; only 1: apply PreWeakKonigsLemma; only 1: assumption; only 1: assumption).	0.165890	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold pow_2_n; only 1: apply pow_nonzero; only 1: discrR).	0.041874	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: simpl; only 1: destruct 1; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.235738	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.is_lub_u	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_no_R0	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sin_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.037560	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_sin	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_dicho	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	300	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros; only 1: apply Nat.lt_trans with y; only 1: auto; only 1: auto).	0.042535	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.continuity_seq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc; only 1: induction d; only 1: intros; only 1: simpl usize; only 1: simpl; only 1: rewrite Pos.mul_1_r; only 1: auto; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy).	0.789248	147
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: revert H; only 1: apply Nat.lt_irrefl).	0.038176	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	300	0	synth with cache (only 1: exact Z.lt_trans).	0.031655	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_car	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: revert H; only 1: apply Z.lt_irrefl).	0.030292	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor2	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: contradict H; only 1: rewrite H; only 1: apply Pos.lt_irrefl).	0.053060	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.Rolle	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite IHd; only 1: ring; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev).	0.190265	64
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT_cor	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	300	0.0.0	synth with cache (only 1: rewrite of_uint_alt; only 1: rewrite rev_rev; only 1: easy).	0.044074	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonneg_derivative_1	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: red; only 1: simpl; only 1: auto with ordered_type).	0.041041	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	300	0	synth with cache (only 1: apply Z.divide_opp_r).	0.030422	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	300	0	synth with cache (only 1: apply Z.divide_opp_r).	0.033325	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	300	0	synth with cache (only 1: apply Z.divide_opp_l).	0.031603	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	300	0	synth with cache (only 1: apply Z.divide_opp_l).	0.030720	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	300	0	synth with cache (only 1: apply Z.divide_abs_l).	0.037288	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	300	0	synth with cache (only 1: apply Z.divide_abs_l).	0.029059	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmult_one	300	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.eq_mul_1_nonneg).	0.047890	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_0	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- Z.divide_abs_l in H; only 1: rewrite <- Z.divide_abs_r in H; only 1: apply Z.abs_pos in H0; only 1: apply Z.divide_pos_le; only 1: easy; only 1: easy).	0.154393	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite N.double_spec; only 1: rewrite N.succ_double_spec; only 1: induction d; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: split; only 1: reflexivity; only 1: reflexivity; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring).	0.861797	119
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide	300	0	synth with cache (only 1: apply Z.mod_divide).	0.035827	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_div	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: apply Z_mod_mult).	0.044137	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_dec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_lt_neq	300	0	synth with cache (only 1: auto using Z.lt_neq, Z.neq_sym).	0.038629	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derive_pt_div	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.divide_div_mul_exact; only 1: apply @Z_lt_neq; only 1: easy; only 1: auto with zarith).	0.052129	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: auto with qarith; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.062771	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.negative_derivative	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_le	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.divide_pos_le; only 1: easy; only 1: easy).	0.038448	4
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: case x; only 1: auto; only 1: auto; only 1: auto).	0.038329	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_0	300
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.div_0_r_ext	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: auto; only 1: auto; only 1: auto).	0.032675	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	300	0	synth with cache (only 1: exact bits_lt_trans).	0.032184	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	300
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.035478	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	300
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.047673	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	300
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: assumption).	0.029460	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	300
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	300	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.rem_opp_r'; only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: rewrite Z.opp_pos_neg; only 1: assumption).	0.093756	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	300	0	synth with cache (only 1: apply of_lu_double_gen).	0.037436	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	300	0	synth with cache (only 1: apply of_lu_double_gen).	0.047588	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_ax	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_uint; only 1: rewrite of_lu_rev; only 1: induction p; only 1: simpl; only 1: rewrite of_lu_succ_double; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite of_lu_double; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: auto).	0.058644	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.048779	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	300	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.043414	5
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	300	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: apply Z.divide_0_r; only 1: auto with zarith).	0.056189	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto using succ_double_alt; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto using succ_double_alt).	0.098340	25
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	300	0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exists a; only 1: rewrite Z.mul_1_r; only 1: auto; only 1: auto with zarith; only 1: auto with zarith).	0.038193	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_var	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	300	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.042404	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: auto using succ_double_alt, double_succ; only 1: simpl; only 1: auto using succ_double_alt, double_succ; only 1: simpl; only 1: auto using succ_double_alt, double_succ).	0.065689	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	300	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.071574	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	300	0	synth with cache (only 1: reflexivity).	0.028228	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	300	0	synth with cache (only 1: reflexivity).	0.033445	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	300	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.132840	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF_var	300
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	300	0.0.0.0.0.0.0	synth with cache (only 1: apply Zabs_ind; only 1: intros; only 1: apply Zis_gcd_sym; only 1: apply Zis_gcd_0; only 1: intros; only 1: apply Zis_gcd_opp; only 1: apply Zis_gcd_0).	0.049981	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	300
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_loc	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: split; only 1: trivial; only 1: trivial; only 1: simpl_of_lu; only 1: split; only 1: rewrite N.add_0_l; only 1: intros ?; only 1: apply N.eq_mul_0_r in H; only 1: rewrite IHd in H; only 1: simpl; only 1: rewrite H; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct nztail; only 1: destruct IHd; only 1: intropattern subst -> H0; only 1: clear H; only 1: easy; only 1: clear H; only 1: easy; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate).	0.387923	86
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: clear r; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.052978	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: clear r; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.061114	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_sqrt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_abs	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_0	300	0.0.0.0	synth with cache (only 1: apply Rsqr_eq_0; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: apply Rle_refl).	0.048461	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_1	300	0.0.0.0.0.0.0.0	synth with cache (only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rle_0_1; only 1: apply Rle_0_1; only 1: unfold Rsqr; only 1: rewrite sqrt_sqrt; only 1: ring; only 1: apply Rle_0_1).	0.077681	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_eq_0	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_0	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	300	0.1.0	synth with cache (only 1: intros; only 1: apply sqrt_sqrt; only 1: assumption).	0.060966	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply sqrt_square; only 1: assumption).	0.055664	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pow2	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).	0.056887	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rsqr_abs; only 1: apply sqrt_Rsqr; only 1: apply Rabs_pos).	0.044451	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	300	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: assumption).	0.058913	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult	300	0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_mult_alt; only 1: easy).	0.092412	16
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: left; only 1: assumption; only 1: right; only 1: reflexivity; only 1: apply sqrt_positivity; only 1: left; only 1: assumption).	0.088570	13
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	300	0	synth with cache (only 1: intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice).	0.042028	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: exists x; only 1: apply p; only 1: assumption).	0.050000	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X with (P := P); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply p; only 1: assumption).	0.046125	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply X; only 1: apply H; only 1: assumption).	0.035468	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).	0.244185	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	300	0	synth with cache (only 1: intuition auto using epsilon_imp_constructive_indefinite_description, constructive_indefinite_description_and_small_drinker_imp_epsilon, epsilon_imp_small_drinker).	0.025927	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.091610	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.043811	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	0.067339	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_div_alt; only 1: assumption).	0.052965	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_to	300	0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_int; only 1: unfold BinPosDef.Pos.of_int; only 1: rewrite Unsigned.of_to; only 1: easy).	0.042295	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	300	0.0.0	synth with cache (only 1: rewrite rsub_def; only 1: rewrite ropp_0; only 1: ring).	0.071587	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_of	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.of_int; only 1: destruct d; only 1: simpl norm; only 1: rewrite <- Unsigned.to_of; only 1: destruct BinPosDef.Pos.of_uint; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: easy; only 1: intros ?; only 1: discriminate H).	0.085059	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_lt_0_alt).	0.067997	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: apply Rlt_le; only 1: apply Rle_lt_trans with x; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	0.081919	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_lt_1_alt; only 1: split; only 1: assumption; only 1: assumption).	0.081485	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.137857	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	300	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_le_1_alt; only 1: assumption).	0.064618	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_inj	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	300	0.0.0.0.0.0.0	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intros; only 1: rewrite <- H0; only 1: auto with zarith).	0.100304	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: rewrite rmul_comm; only 1: apply rinv_l; only 1: trivial).	0.054616	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less	300	1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_less_alt).	0.053439	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Gauss	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mult	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_cauchy	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite N2Nat.id; only 1: trivial).	0.037691	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	300	0.0.0.0	synth with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: rewrite ropp_mul_l; only 1: easy).	0.113957	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	300	0	synth with cache (only 1: reflexivity).	0.030275	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	300	0	synth with cache (only 1: reflexivity).	0.040147	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite rsub_def; only 1: rewrite rsub_def; only 1: rewrite rdiv5; only 1: rewrite ropp_mul_l; only 1: apply rdiv2b; only 1: easy; only 1: easy).	0.101058	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: apply Pos2Nat.inj_iter).	0.039030	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: apply Zis_gcd_sym; only 1: auto with zarith).	0.044113	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nshiftr_nat_equiv; only 1: rewrite Nat2N.id; only 1: easy).	0.039944	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold BinNatDef.N.shiftl_nat; only 1: induction BinPosDef.Pos.to_nat; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: easy; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold BinNatDef.N.shiftl_nat; only 1: rewrite <- Pos2Nat.inj_iter; only 1: symmetry; only 1: apply Pos.iter_swap_gen; only 1: easy).	0.064790	24
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_div	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nshiftl_nat_equiv; only 1: rewrite Nat2N.id; only 1: easy).	0.038260	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_1	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: apply Zis_gcd_intro; only 1: auto with zarith; only 1: exists n; only 1: rewrite Z.mul_1_r; only 1: auto; only 1: auto).	0.058535	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	300	0	synth with cache (only 1: reflexivity).	0.040000	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	300	0	synth with cache (only 1: reflexivity).	0.038794	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	300	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	0.106672	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_semantics	300	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.lxor_spec).	0.034497	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Por_semantics	300	0.0.0.0	synth with cache (only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.035744	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: rewrite rdiv6; only 1: apply rdiv4; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.084119	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	300	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.lor_spec).	0.036610	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pand_semantics	300	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_land_spec).	0.041190	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_semantics	300	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.land_spec).	0.047691	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	300	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_ldiff_spec).	0.033118	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiff_semantics	300	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.ldiff_spec).	0.033238	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful_0	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite rdiv_def; only 1: rewrite H0; only 1: rewrite rmul_0_l; only 1: easy).	0.055946	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	300	0.0.0.0.0	synth with cache (only 1: split; only 1: apply Nbit_faithful; only 1: intros; only 1: subst; only 1: easy).	0.032105	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_correct	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: induction x0; only 1: simpl; only 1: rewrite IHx0; only 1: rewrite H; only 1: easy; only 1: simpl; only 1: rewrite IHx0; only 1: easy; only 1: simpl; only 1: trivial).	0.104656	17
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_correct	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_bit0	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nbit0_correct; only 1: rewrite Nxor_semantics; only 1: rewrite Nbit0_correct; only 1: rewrite Nbit0_correct; only 1: reflexivity).	0.039291	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: destruct x0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply pow_ext; only 1: easy; only 1: easy).	0.079696	14
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_div2	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit_faithful; only 1: unfold eqf; only 1: intros ?; only 1: rewrite Nxor_semantics; only 1: rewrite Ndiv2_correct; only 1: rewrite Nxor_semantics; only 1: rewrite Ndiv2_correct; only 1: rewrite Ndiv2_correct; only 1: reflexivity).	0.057399	10
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- xorb_true_l; only 1: rewrite <- H; only 1: rewrite Nxor_bit0; only 1: rewrite xorb_assoc_reverse; only 1: rewrite xorb_nilpotent; only 1: rewrite xorb_false_r; only 1: reflexivity).	0.044710	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: reflexivity).	0.048617	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_1	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.035954	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.036500	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nsame_bit0	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_less	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_divisors	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	300	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).	0.102155	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_gt	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_not_refl	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Nless; only 1: rewrite N.lxor_nilpotent; only 1: trivial).	0.029882	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_1	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p1; only 1: simpl; only 1: rewrite pow_pos_mul_l; only 1: rewrite pow_pos_mul_l; only 1: rewrite pow_pos_add_r; only 1: simpl; only 1: ring [ IHp1 ]; only 1: simpl; only 1: rewrite pow_pos_mul_l; only 1: ring [ IHp1 ]; only 1: simpl; only 1: trivial).	0.124115	12
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	300	0	synth with cache (only 1: intuition auto using non_dep_dep_functional_rel_reification, dep_non_dep_functional_rel_reification).	0.023335	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_3	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit0_less; only 1: apply Ndouble_bit0; only 1: apply Ndouble_plus_one_bit0).	0.030771	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_4	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit0_gt; only 1: apply Ndouble_plus_one_bit0; only 1: apply Ndouble_bit0).	0.029087	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_z	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_1	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction p; only 1: simpl; only 1: apply field_is_integral_domain; only 1: trivial; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.061620	14
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	300	0.0.0	synth with cache (only 1: split; only 1: exact Qlt_irrefl; only 1: exact Qlt_trans).	0.027356	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_convex	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_trans	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qlt_alt; only 1: rewrite Qlt_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.066199	11
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	300	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: firstorder).	0.030869	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.functional_choice	300	0.1	synth with cache (only 1: apply constructive_indefinite_descr_fun_choice; only 1: exact constructive_indefinite_description).	0.041475	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.096770	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_total	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.165950	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_rel_prime	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.098448	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Ball_in_inter	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @VectorDef.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: compute; only 1: split; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: compute; only 1: split; only 1: intros ?; only 1: inversion H; only 1: intros ?; only 1: inversion H; only 1: intros; only 1: simpl; only 1: destruct a; only 1: destruct @Bv2N; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct @Bv2N; only 1: simpl; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: intuition).	0.315518	31
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_center	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: unfold Boule; only 1: unfold Rminus; only 1: simpl; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_pos_eq; only 1: assumption; only 1: apply Rle_refl).	0.053947	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: easy).	0.079695	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: apply pow_N_ext; only 1: trivial; only 1: trivial).	0.121102	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_remainder	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Z.div_mod; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.040333	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: apply rmul_1_l).	0.044123	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq_full	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: apply Z.mod_eq; only 1: trivial).	0.039344	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	300	0.0.0	synth with cache (only 1: unfold ByteV2N; only 1: unfold compose; only 1: apply Bv2N_upper_bound).	0.031928	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_CVU	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Zmod_eq_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.029609	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: apply rmul_1_r).	0.063363	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_mult	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy).	0.057175	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy).	0.051457	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_0	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_Blow	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @VectorDef.caseS; only 1: intros; only 1: unfold Blow; only 1: simpl; only 1: destruct @Bv2N; only 1: simpl; only 1: destruct h; only 1: auto; only 1: auto; only 1: simpl; only 1: destruct h; only 1: auto; only 1: auto).	0.079316	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: rewrite phi_1; only 1: easy; only 1: simpl; only 1: rewrite phi_1; only 1: rewrite pow_pos_1; only 1: easy).	0.074054	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_unique	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_unique	300	0.0.0.0	synth with cache (only 1: intros; only 1: eapply Zmod_unique_full; only 1: eauto; only 1: eauto).	0.056267	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_continuity	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case a; only 1: auto; only 1: auto; only 1: auto).	0.083554	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_r	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case a; only 1: auto; only 1: auto; only 1: auto).	0.035828	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: rewrite rmul_1_l; only 1: trivial; only 1: simpl; only 1: destruct n'; only 1: simpl; only 1: rewrite rmul_1_r; only 1: trivial; only 1: simpl; only 1: apply pow_pos_add_r).	0.202521	16
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_3	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eapply CVU_continuity; only 1: apply CVN_CVU; only 1: apply X; only 1: intros; only 1: unfold SP; only 1: apply continuity_pt_finite_SF; only 1: intros; only 1: apply H; only 1: apply H1; only 1: apply H0).	0.090643	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_ge_2	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_r	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_0_1_more	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_1_r	300	0.0.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.div_1_r).	0.049618	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply rmul_1_l; only 1: simpl; only 1: apply pow_pos_mul_l).	0.102661	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_BVxor	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: assumption).	0.039251	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_BVand	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_mult	300	0.0.0.1	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	0.048141	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_cv	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: destruct n; only 1: destruct n'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pow_pos_1; only 1: trivial; only 1: destruct n'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply pow_pos_mul_r).	0.116282	17
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_pos	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.042755	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge0	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z_div_pos; only 1: auto using Z.ge_le; only 1: auto using Z.ge_le).	0.039170	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_alt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: apply rI_neq_rO; only 1: simpl; only 1: apply pow_pos_nz; only 1: easy).	0.066746	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.051492	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_div_prime	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	300	0.0.0.0	synth with cache (only 1: constructor; only 1: apply Z.gcd_divide_l; only 1: apply Z.gcd_divide_r; only 1: apply Z.gcd_greatest).	0.029540	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.047150	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct b; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: trivial; only 1: trivial).	0.157974	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	300	0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_div_le; only 1: auto using Z.gt_lt).	0.034601	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_spec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.gcd_greatest; only 1: easy; only 1: easy).	0.040629	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.mul_div_ge; only 1: auto).	0.035340	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.060893	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	300	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.035291	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	300	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.034657	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.040984	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_le	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mod_le; only 1: assumption; only 1: assumption).	0.038541	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_indefinite_description	300	0.0	synth with cache (only 1: apply epsilon_imp_constructive_indefinite_description; only 1: exact epsilon_statement).	0.030689	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	300	0.0	synth with cache (only 1: apply epsilon_imp_small_drinker; only 1: exact epsilon_statement).	0.033121	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_lt_upper_bound).	0.045407	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: destruct o; only 1: exists true; only 1: auto; only 1: exists false; only 1: auto).	0.086570	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	300	0.0.0.0	synth with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: firstorder; only 1: firstorder).	0.045081	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_upper_bound).	0.043008	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_ass	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.gcd_assoc).	0.041685	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_definite_description	300	0.1	synth with cache (only 1: apply iota_imp_constructive_definite_description; only 1: exact iota_statement).	0.043761	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_lower_bound).	0.042223	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	300	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: firstorder).	0.043097	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: auto).	0.052908	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold epsilon; only 1: unfold classical_indefinite_description; only 1: destruct excluded_middle_informative; only 1: trivial; only 1: destruct n; only 1: trivial).	0.086164	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_opp; only 1: trivial).	0.048440	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_opp; only 1: trivial).	0.062393	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.choice	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.049228	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_nz; only 1: auto; only 1: auto).	0.126326	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_divide	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_r_z; only 1: auto; only 1: auto).	0.133111	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_r_nz; only 1: auto; only 1: auto).	0.088409	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_derivable	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_l_z; only 1: auto; only 1: auto).	0.060166	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: easy; only 1: intros; only 1: rewrite Z.div_opp_l_nz; only 1: auto; only 1: auto; only 1: auto).	0.067238	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	300	0.0.0.0.1	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_r_z; only 1: auto; only 1: auto).	0.052117	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: easy; only 1: intros; only 1: rewrite Z.div_opp_r_nz; only 1: auto; only 1: auto; only 1: auto).	0.062245	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_mul_cancel_r; only 1: auto; only 1: auto).	0.058254	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_mod	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mod_mod; only 1: trivial).	0.047104	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_mod; only 1: auto).	0.053395	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod	300	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_mod; only 1: auto).	0.078353	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: auto).	0.060936	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: auto).	0.073464	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	0.048866	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	0.058084	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: auto).	0.040229	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: auto).	0.056741	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	300	0.0	synth with cache (only 1: unfold eqm; only 1: auto).	0.030347	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	300	0.0	synth with cache (only 1: unfold eqm; only 1: auto).	0.036789	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.078629	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	300	0.0.0.0	synth with cache (only 1: constructor; only 1: exact eqm_refl; only 1: exact eqm_sym; only 1: exact eqm_trans).	0.053918	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite <- Zplus_mod; only 1: auto).	0.158451	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite <- Zminus_mod; only 1: auto).	0.206127	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite <- Zmult_mod; only 1: auto).	0.057862	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.div_div; only 1: auto; only 1: apply Z.le_neq; only 1: auto).	0.064158	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_div	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: auto using Z.mod_div).	0.055138	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_0_r; only 1: easy; only 1: apply Z.div_mul_le; only 1: auto; only 1: apply Z.le_neq; only 1: auto; only 1: auto).	0.087970	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mod_divide; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: trivial).	0.075487	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_odd	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.bit0_odd; only 1: rewrite <- Z.bit0_mod; only 1: easy).	0.056498	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_even	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_odd; only 1: rewrite Zodd_even_bool; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	0.102842	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zodd_mod	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_odd; only 1: destruct BinIntDef.Z.odd; only 1: easy; only 1: easy).	0.053590	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.singleton_choice	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zeven_mod	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_even; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	0.052803	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same	300	0.0	synth with cache (only 1: intros; only 1: apply Z_mod_same_full).	0.050857	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_same_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.080758	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_plus	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_plus_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.079994	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_mult_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.059587	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	300	0.0	synth with cache (only 1: intros; only 1: apply Z_mod_plus_full).	0.041496	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold NPEpow; only 1: destruct n; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy; only 1: case Pos.eqb_spec; only 1: intros ?; only 1: subst; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy; only 1: intros ?; only 1: clear n; only 1: destruct e; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: case ceqb_spec; only 1: intros; only 1: rewrite rpow_pow; only 1: rewrite H; only 1: simpl; only 1: rewrite phi_1; only 1: rewrite pow_pos_1; only 1: easy; only 1: case ceqb_spec; only 1: intros; only 1: rewrite rpow_pow; only 1: rewrite H; only 1: simpl; only 1: rewrite phi_0; only 1: rewrite pow_pos_0; only 1: easy; only 1: intros; only 1: rewrite rpow_pow; only 1: simpl; only 1: rewrite pow_pos_cst; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.425843	53
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_1	300	0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_exact_full_1; only 1: auto with zarith).	0.044879	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_exact_full_2; only 1: intros ?; only 1: intropattern subst -> H1; only 1: easy; only 1: auto).	0.046910	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	300	0.0.0	synth with cache (only 1: intros; only 1: apply Z_mod_zero_opp_full; only 1: auto).	0.042086	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.cos_plus_form	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.pow_sqr	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction a; only 1: simpl; only 1: rewrite IHa; only 1: destruct BinIntDef.Z.pos_div_eucl; only 1: simpl; only 1: case Z.ltb_spec; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: rewrite IHa; only 1: destruct BinIntDef.Z.pos_div_eucl; only 1: simpl; only 1: case Z.ltb_spec; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: case Z.leb_spec; only 1: trivial; only 1: trivial).	0.161278	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.A1_cvg	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod'_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.C1_cvg	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.B1_cvg	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.div_Zdiv	300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.mod_Zmod	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct c; only 1: destruct b; only 1: destruct b0; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b0; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H).	6.584967	788
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: trivial; only 1: simpl; only 1: intros ?; only 1: trivial; only 1: simpl; only 1: rewrite NPEadd_ok; only 1: f_equiv; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite NPEsub_ok; only 1: f_equiv; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite NPEmul_ok; only 1: f_equiv; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite NPEopp_ok; only 1: f_equiv; only 1: easy; only 1: simpl; only 1: rewrite NPEpow_ok; only 1: f_equiv; only 1: easy).	0.428753	34
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.040617	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: split; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: trivial; only 1: reflexivity).	0.061584	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	300	0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct 1; only 1: easy).	0.061665	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	300	0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct 1; only 1: easy).	0.050739	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: split; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: trivial; only 1: simpl app; only 1: rewrite PCond_cons; only 1: rewrite PCond_cons; only 1: rewrite IHl1; only 1: symmetry; only 1: apply and_assoc).	0.171091	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	300	0.0.0.0.0.0	synth with cache (only 1: unfold absurd_PCond; only 1: simpl; only 1: red; only 1: intros; only 1: apply H; only 1: apply phi_0).	0.050328	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pos_sub_gt; only 1: apply Pos.gt_lt; only 1: easy).	0.058189	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.usu	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto).	0.201393	43
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply representative_boolean_partition_imp_excluded_middle; only 1: apply H).	0.033471	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sus	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold default_isIn; only 1: case PExpr_eq_spec; only 1: intros ?; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: split; only 1: simpl; only 1: rewrite PE_1_r; only 1: rewrite H0; only 1: rewrite H; only 1: easy; only 1: reflexivity; only 1: intros ?; only 1: split; only 1: rewrite NPEpow_ok; only 1: rewrite H; only 1: rewrite <- PEpow_add_r; only 1: f_equiv; only 1: simpl; only 1: f_equiv; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.sub_add; only 1: easy; only 1: easy; only 1: reflexivity; only 1: intros ?; only 1: split; only 1: simpl; only 1: rewrite PE_1_r; only 1: rewrite H; only 1: f_equiv; only 1: rewrite Z.pos_sub_gt; only 1: simpl; only 1: f_equiv; only 1: rewrite Pos.sub_sub_distr; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_sub; only 1: trivial; only 1: trivial; only 1: apply Pos.sub_decr; only 1: trivial; only 1: apply Pos.sub_decr; only 1: trivial; only 1: simpl; only 1: apply Z.lt_gt; only 1: apply Pos.sub_decr; only 1: trivial; only 1: trivial).	0.451874	49
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.isi	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sus	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: apply NilEmpty.sus in H; only 1: destruct d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.053807	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu).	0.075660	33
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	300	0	synth with cache (only 1: easy).	0.026534	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: right; only 1: easy; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu).	0.061186	23
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: easy; only 1: apply @eq_equivalence; only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H4; only 1: firstorder; only 1: easy).	0.162955	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	300	0	synth with cache (only 1: reflexivity).	0.030603	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	300	0	synth with cache (only 1: reflexivity).	0.024039	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: auto using gen_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_gen_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: easy; only 1: apply @eq_equivalence; only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H4; only 1: firstorder; only 1: easy).	0.147619	29
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	300	1.1.0	synth with cache (only 1: split; only 1: auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice; only 1: auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice).	0.064915	15
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	300	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy).	0.040779	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	300	0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: intros; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_functional_rel_reification; only 1: easy; only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: easy).	0.177071	19
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: rewrite NPEmul_ok; only 1: rewrite <- split_ok_r; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_l; only 1: apply IHe1; only 1: apply H; only 1: apply IHe2; only 1: apply H0; only 1: simpl condition; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: rewrite NPEmul_ok; only 1: rewrite <- split_ok_r; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_l; only 1: apply IHe1; only 1: apply H; only 1: apply IHe2; only 1: apply H0; only 1: simpl condition; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_r; only 1: apply IHe1; only 1: apply H; only 1: apply split_nz_r; only 1: apply IHe2; only 1: apply H0; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: apply IHe; only 1: easy; only 1: simpl condition; only 1: rewrite PCond_cons; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: trivial; only 1: simpl condition; only 1: rewrite PCond_cons; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: destruct H0; only 1: clear H1; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_l; only 1: apply IHe1; only 1: apply H0; only 1: apply split_nz_r; only 1: apply H; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: rewrite NPEpow_ok; only 1: apply PEpow_nz; only 1: apply IHe; only 1: apply H).	0.742097	103
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.Raw.to_N_of_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	0.804912	172
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_N_of_N	300	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	0.033553	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	300	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: apply H; only 1: apply fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy; only 1: split; only 1: apply repr_fun_choice_imp_ext_function_repr; only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: easy; only 1: apply repr_fun_choice_imp_excluded_middle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.413022	42
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_Z_of_Z	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial using BinInt.Z.pos_sub_opp; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: easy; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	0.088692	12
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	300	0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: rewrite Nnat.Nat2N.id; only 1: auto).	0.031378	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_maj	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	0.074616	18
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	300	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	0.036562	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Z_of_of_Z	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial using BinInt.Z.pos_sub_opp; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: easy; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	0.324589	12
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	0.601929	84
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	300	0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: rewrite Nnat.Nat2N.id; only 1: auto).	0.272183	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_N_of_N	300	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	0.039836	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_pos_of_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	300
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_Z_of_Z	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial using BinInt.Z.pos_sub_opp; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: easy; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	0.141448	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	300	0	synth with cache (only 1: reflexivity).	0.022556	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	300	0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: rewrite Nnat.Nat2N.id; only 1: auto).	0.034455	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	300	0.0.0.0.0.0	synth with cache (only 1: revert d; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.036581	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	300	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: rewrite <- to_little_uint_succ; only 1: easy).	0.044777	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	300	0.0.0.0	synth with cache (only 1: unfold Init.Nat.to_uint; only 1: f_equal; only 1: symmetry; only 1: apply to_lu_equiv).	0.031274	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_pos_of_pos	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite PCond_app; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: rewrite Fnorm_FEeval_PEeval; only 1: rewrite Fnorm_FEeval_PEeval; only 1: apply cross_product_eq; only 1: apply Pcond_Fnorm; only 1: trivial; only 1: apply Pcond_Fnorm; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.167575	15
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	300	0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: easy; only 1: apply fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy; only 1: split; only 1: apply repr_fun_choice_imp_ext_pred_repr; only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: easy; only 1: red; only 1: apply proof_irrelevance_cci; only 1: apply repr_fun_choice_imp_excluded_middle; only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: easy).	0.364392	44
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.176351	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_maj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_cv_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	300	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: rewrite of_lu_succ; only 1: f_equal; only 1: easy).	0.048090	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_cv_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste_cv_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.CVN_R_cos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.continuity_cos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_injective	300	0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.031535	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_eq_iff).	0.029551	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_alt	300	0	synth with cache (only 1: reflexivity).	0.034965	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_2_aux	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qgt_alt	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.036580	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_alt	300	0	synth with cache (only 1: reflexivity).	0.030618	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qge_alt	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.ge_le_iff).	0.032988	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_pi2	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_antisym	300	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_antisym).	0.030943	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.pi2_int	300	0.0.0.0	synth with cache (only 1: unfold PI2; only 1: case PI_2_aux; only 1: simpl; only 1: tauto).	0.068629	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_spec	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: unfold Qlt; only 1: unfold Qcompare; only 1: case Z.compare_spec; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy).	0.056219	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_refl	300	0	synth with cache (only 1: easy).	0.033789	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_minus	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	0.078604	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_sym	300	0	synth with cache (only 1: auto with qarith).	0.031998	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2_cos2	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rsqr; only 1: rewrite Rplus_comm; only 1: rewrite <- cos_minus; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply cos_0).	0.049684	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_trans	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos2	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	300	0	synth with cache (only 1: apply Z.eq_dec).	0.026595	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	300	0.0	synth with cache (only 1: symmetry; only 1: apply Zeq_is_eq_bool).	0.029765	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	300	0	synth with cache (only 1: apply Qeq_bool_iff).	0.034946	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_eq_bool	300	0	synth with cache (only 1: apply Qeq_bool_iff).	0.028270	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	300	0.0.0.0	synth with cache (only 1: rewrite <- Qeq_bool_iff; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.058398	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	300	0.0	synth with cache (only 1: symmetry; only 1: apply Zle_is_le_bool).	0.190367	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_RGT_0	300	0.0.0	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.051489	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	300	0.0.0	synth with cache (only 1: unfold Init.Nat.of_uint; only 1: rewrite of_uint_acc_spec; only 1: easy).	0.033160	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_4	300	0.0.0	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.059168	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite to_uint_alt; only 1: rewrite of_uint_alt; only 1: rewrite rev_rev; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: rewrite of_lu_succ; only 1: f_equal; only 1: easy).	0.051897	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	300	0	synth with cache (only 1: apply Qle_bool_iff).	0.214892	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_neq0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_eq_sym	300	0	synth with cache (only 1: auto with qarith).	0.193747	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_intro	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_bound	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply pre_sin_bound; only 1: assumption; only 1: apply Rle_trans with (1 := H0) (2 := PI_4)).	0.053046	7
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_comm	300	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: symmetry; only 1: easy).	0.052205	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_refl	300	0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: easy).	0.028374	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	300	0.0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: auto with qarith).	0.056373	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_cos	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.071422	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_elim	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	300	0.0.0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: apply Qeq_trans).	0.062121	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_cos	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.074665	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: simpl_of_lu; only 1: rewrite Nat.add_0_l; only 1: split; only 1: intros ?; only 1: apply Nat.eq_mul_0_r in H; only 1: rewrite IHd in H; only 1: simpl; only 1: rewrite H; only 1: easy; only 1: auto; only 1: intros ?; only 1: simpl in H; only 1: destruct nztail; only 1: destruct IHd; only 1: intropattern subst -> H1; only 1: clear H0; only 1: easy; only 1: clear H0; only 1: easy; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy).	0.369460	49
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmake_Qdiv	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.eq_incl	300	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: apply Z.eq_le_incl; only 1: assumption; only 1: apply Z.eq_le_incl; only 1: auto).	0.038914	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_le	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_lt	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.Zlt_le_add_1	300	0	synth with cache (only 1: exact Zlt_le_succ).	0.026645	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.add_le	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.add_nonneg_nonneg; only 1: trivial; only 1: tauto).	0.032575	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_comp	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.mul_le	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qminus; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.117814	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: reflexivity; only 1: simpl_of_lu; only 1: rewrite Nat.add_0_l; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption).	1.049201	272
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	300	0.0.0.0	synth with cache (only 1: rewrite to_uint_alt; only 1: rewrite of_uint_alt; only 1: rewrite to_of_lu; only 1: apply rev_lnorm_rev).	0.033218	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.of_uint; only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.046512	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.032553	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	0.038944	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_to	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.to_int; only 1: unfold Init.Nat.of_int; only 1: unfold norm; only 1: f_equal; only 1: rewrite Unsigned.of_uint_norm; only 1: rewrite Unsigned.to_uint_alt; only 1: rewrite Unsigned.of_uint_alt; only 1: rewrite rev_rev; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: rewrite Unsigned.of_lu_succ; only 1: f_equal; only 1: easy).	0.137098	15
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_of	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	300	0.0.0	synth with cache (only 1: unfold Init.Nat.of_int; only 1: rewrite norm_invol; only 1: easy).	0.029283	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.of_int; only 1: simpl; only 1: intros ?; only 1: injection H as; only 1: apply Unsigned.of_inj; only 1: rewrite <- Unsigned.of_uint_norm; only 1: rewrite H; only 1: rewrite Unsigned.of_uint_norm; only 1: easy).	0.050958	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: unfold Qinv; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: simpl in *; only 1: destruct Qnum1; only 1: simpl in *; only 1: apply Z.mul_eq_0 in H; only 1: destruct H; only 1: subst; only 1: easy; only 1: easy; only 1: simpl in *; only 1: destruct Qnum0; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite <- H; only 1: rewrite Pos.mul_comm; only 1: easy; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: destruct Qnum0; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite <- H; only 1: rewrite Pos.mul_comm; only 1: easy).	0.177035	37
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_comp	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qdiv; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.061881	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_comp	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.061451	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_compat	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qlt_alt; only 1: rewrite Qlt_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.064621	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeqb_comp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: rewrite H; only 1: rewrite H0; only 1: split; only 1: auto with qarith; only 1: auto with qarith).	0.051429	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qleb_comp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite Qle_bool_iff; only 1: rewrite Qle_bool_iff; only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.070811	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_apart_0_1	300	0	synth with cache (only 1: discriminate).	0.023597	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.180000	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_l	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring).	0.043063	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_r	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.049008	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comm	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.096738	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_involutive	300	0.0.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.046997	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_opp_r	300	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros ?; only 1: ring).	0.048046	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.continuity_sin	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_assoc	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	0.048288	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	300	0.0.0	synth with cache (only 1: intros; only 1: compute; only 1: reflexivity).	0.032823	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: ring).	0.046744	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: simpl; only 1: destruct Qnum; only 1: auto; only 1: auto; only 1: auto).	0.039500	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comm	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.052969	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: right; only 1: reflexivity; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.089106	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.156036	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	300	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	0.039192	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_symm	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.173670	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI	300	0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	0.036957	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.170146	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_sin	300	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_sin).	0.043452	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.075223	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_cos	300	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_cos).	0.038446	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.law_cosines	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	300	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	0.065651	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral_l	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_eq_0; only 1: intuition).	0.087086	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	300	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.056641	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_plus	300	0.0.0.0.0.0	synth with cache (only 1: unfold Qplus; only 1: unfold inject_Z; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: reflexivity).	0.054667	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_mult	300	0	synth with cache (only 1: reflexivity).	0.034638	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_opp	300	0	synth with cache (only 1: reflexivity).	0.028239	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_involutive	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: destruct Qnum0; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	0.059022	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.triangle	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.translation_0	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: unfold xt; only 1: eauto with real; only 1: unfold yt; only 1: ring).	0.075003	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inv_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qmult; only 1: case Qnum0; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: elim H; only 1: auto; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.102550	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_translation	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold xt; only 1: unfold yt; only 1: ring).	0.085232	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qeq; only 1: unfold Qinv; only 1: unfold Qmult; only 1: simpl; only 1: destruct Qnum0; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct Qnum1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct Qnum1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.171592	27
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_0	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring).	0.104799	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qdiv; only 1: rewrite <- Qmult_assoc; only 1: rewrite Qmult_inv_r; only 1: apply Qmult_1_r; only 1: auto).	0.043214	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring).	0.093527	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_div_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_plus_distr	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.058011	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_minus_distr	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.068402	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_R0	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_eq_0_l with r2; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: apply Rplus_eq_0_l with r1; only 1: auto with real; only 1: auto with real; only 1: rewrite Rplus_comm; only 1: auto with real).	0.053507	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_r	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation	300	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold dist_euc; only 1: intros; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: apply isometric_rotation_0; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.103318	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r	300	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.058406	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_rotation_0; only 1: apply isometric_translation).	0.067780	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_l_sym	300	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.143954	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_trans_rot	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_translation; only 1: apply isometric_rotation_0).	0.076363	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_sym	300	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.066903	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_r	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.053238	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.043739	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply N.eqb_eq; only 1: apply gen_phiN_inj; only 1: easy).	0.036918	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ne	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	0.044072	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.053144	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.043700	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	300	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: replace y with x; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial; only 1: apply gen_phiZ_inj; only 1: trivial).	0.039173	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.E1_cvg	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold exp; only 1: case exist_exp; only 1: intros ?; only 1: unfold exp_in; only 1: unfold Un_cv; only 1: unfold infinite_sum; only 1: unfold E1; only 1: trivial).	0.071803	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_form	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_double	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction N; only 1: trivial; only 1: simpl; only 1: rewrite <- plus_n_Sm; only 1: simpl in IHN; only 1: rewrite IHN; only 1: reflexivity).	0.048998	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	300	0.0	synth with cache (only 1: intros ?; only 1: apply Nat.div2_succ_double).	0.035729	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_not_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_maj	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_cv	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: auto with real; only 1: rewrite H; only 1: auto with real).	0.071264	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	300	0	synth with cache (only 1: auto with real).	0.047748	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	300	0	synth with cache (only 1: auto with real).	0.048241	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply H; only 1: subst r1; only 1: ring; only 1: intros ?; only 1: apply H; only 1: subst r2; only 1: ring).	0.070234	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_integral_contrapositive; only 1: split; only 1: assumption; only 1: assumption).	0.056456	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	300	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.038851	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	300	1.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	0.198618	70
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_compat	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.062300	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0	300	0	synth with cache (only 1: ring).	0.054331	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.041799	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.055742	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.050365	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: ring).	0.051004	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.052296	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_opp_opp	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.059591	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.049752	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.128060	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_r	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.056606	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.070121	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.053462	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.060764	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_eq	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.056271	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_lt_mono; only 1: easy; only 1: easy).	0.031052	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_lt_le_mono; only 1: easy; only 1: easy).	0.028081	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_le_lt_mono; only 1: easy; only 1: easy).	0.032643	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply lt_add_pos_l; only 1: easy).	0.019614	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_le_mono; only 1: easy; only 1: easy).	0.109457	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_lt_cases; only 1: nzsimpl; only 1: easy).	0.044208	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	0.026544	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	0.047470	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_opp_l; only 1: rewrite mul_opp_r; only 1: rewrite opp_involutive; only 1: easy).	0.036540	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_opp_l; only 1: rewrite <- mul_opp_r; only 1: easy).	0.038155	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite mul_add_distr_l; only 1: rewrite mul_opp_r; only 1: easy).	0.066468	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_small_iff; only 1: auto using mod_always_pos; only 1: assumption).	0.023043	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_l; only 1: rewrite mul_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.050601	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_mod_idemp_l; only 1: rewrite add_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.044113	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	300	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_small_iff; only 1: auto using mod_bound_or; only 1: assumption).	0.027521	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div_small_iff; only 1: auto using mod_always_pos; only 1: assumption).	0.030176	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	300	0	synth with cache (only 1: exact div_mul_le).	0.019529	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_l; only 1: rewrite mul_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.047246	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_mod_idemp_l; only 1: rewrite add_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.043284	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div_small_iff; only 1: auto using mod_bound_or; only 1: assumption).	0.028589	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	300	0	synth with cache (only 1: exact div_mul_le).	0.019857	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_rem_idemp_l; only 1: rewrite mul_rem_idemp_r; only 1: easy; only 1: trivial; only 1: trivial).	0.038204	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_small_iff; only 1: auto using rem_bound_abs; only 1: assumption).	0.036332	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	300	0	synth with cache (only 1: exact NZQuot.div_mul_le).	0.034201	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	300
coq-math-classes.8.15.0	MathClasses.theory.monads.equiv_ext_equiv	300
coq-math-classes.8.15.0	MathClasses.theory.monads.equiv_ext_equiv_partial	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.bind_lunit_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.bind_runit_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.bind_assoc_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.bind_mor	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.to_strong_monad.bind_correct	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.to_strong_monad.SFunctor_instance_0	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.to_strong_monad.Setoid_Morphism_instance_0	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.to_strong_monad.monad_strong_monad	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.to_strong_monad.monad_full_monad	300
coq-math-classes.8.15.0	MathClasses.theory.monads.monad.monad_default_full_monad	300
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.sfmap_ret_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.sfmap_join_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.join_ret_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.join_sfmap_ret_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.join_sfmap_join_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.to_monad.Setoid_Morphism_instance_1	300
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.to_monad.bind_correct_applied	300	0.0.0.0	synth with cache (only 1: eapply bind_correct; only 1: easy; only 1: easy; only 1: easy).	0.047440	4
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.to_monad.strong_monad_monad	300
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.to_monad.strong_monad_full_monad	300
coq-math-classes.8.15.0	MathClasses.theory.monads.strong_monad.strong_monad_default_full_monad	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.bind_as_join_sfmap_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.sfmap_as_bind_ret	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.sfmap_as_bind_ret_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.join_as_bind	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.join_as_bind_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.join_spec_applied_alt	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.bind_twice	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.bind_twice_applied	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.bind_join	300
coq-math-classes.8.15.0	MathClasses.theory.monads.full_monad.bind_join_applied	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.all_cons	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_zero_cons	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_zero_ind	300	0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: auto; only 1: intros ?; only 1: apply poly_eq_zero_cons in H0 as H0; only 1: destruct H0; only 1: eauto).	0.034286	6
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_p_zero	300	0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy).	0.022294	3
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.Reflexive_instance_0	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_cons	300	0	synth with cache (only 1: easy).	0.021172	1
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_ind	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: intros ?; only 1: destruct p'; only 1: intros ?; only 1: apply case_0; only 1: easy; only 1: easy; only 1: intros ?; only 1: apply case_0; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct p'; only 1: intros ?; only 1: apply case_0; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct H0; only 1: apply case_cons; only 1: auto; only 1: auto; only 1: auto).	0.068697	23
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_zero_trans	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct q; only 1: auto; only 1: rewrite poly_eq_zero_cons in *; only 1: rewrite <- poly_eq_cons; only 1: destruct H0; only 1: intropattern subst -> H0; only 1: destruct H1; only 1: intropattern subst -> H0; only 1: split; only 1: eauto; only 1: apply IHp; only 1: easy; only 1: easy).	0.158632	22
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.Symmetric_instance_0	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern x, y; only 1: apply poly_eq_ind; only 1: clear x y H0; only 1: intros; only 1: apply poly_eq_zero_trans; only 1: easy; only 1: easy; only 1: clear x y H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- poly_eq_cons; only 1: auto; only 1: auto).	0.044837	21
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_zero_proper	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.Transitive_instance_0	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.Setoid_instance_0	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_zero_plus_l	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.plus_commutative	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_zero_plus_r	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_eq_zero_plus	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- poly_eq_p_zero; only 1: rewrite <- poly_eq_p_zero; only 1: intros ?; only 1: rewrite poly_eq_zero_plus_l; only 1: easy; only 1: easy).	0.119959	7
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_plus_proper	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.plus_associative	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.plus_left_id	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite poly_eq_zero_plus_l; only 1: auto; only 1: easy).	0.086606	4
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.plus_right_id	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite poly_eq_zero_plus_r; only 1: auto; only 1: easy).	0.036170	4
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_plus_monoid	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_negate_zero	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_negate_proper	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_negate_l	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite poly_eq_p_zero; only 1: induction x; only 1: cbn; only 1: easy; only 1: cbn; only 1: rewrite poly_eq_zero_cons; only 1: split; only 1: ring; only 1: auto).	0.071284	10
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_negate_r	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_plus_abgroup	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_cr_0_l	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction q; only 1: easy; only 1: cbn; only 1: rewrite poly_eq_zero_cons; only 1: rewrite poly_eq_zero_cons; only 1: intros ?; only 1: destruct H0; only 1: intropattern subst -> H0; only 1: split; only 1: ring; only 1: auto).	0.165263	11
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_cr_proper	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_cr_1_l	300	0.0.0.0	synth with cache (only 1: cbn; only 1: split; only 1: ring; only 1: easy).	0.027026	4
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_cr_1_r	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_cr_dist_l	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction a; only 1: easy; only 1: cbn; only 1: split; only 1: ring; only 1: auto).	0.113738	9
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_cr_dist_r	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: revert b; only 1: induction a; only 1: intros ?; only 1: destruct b; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct b; only 1: easy; only 1: cbn; only 1: split; only 1: ring; only 1: auto).	0.057933	16
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_cr_assoc	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction x; only 1: easy; only 1: cbn; only 1: split; only 1: ring; only 1: auto).	0.039643	9
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_cr_0_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H0; only 1: induction q; only 1: easy; only 1: cbn; only 1: rewrite poly_eq_zero_cons; only 1: split; only 1: ring; only 1: auto).	0.057959	9
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_0_l	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_0_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: easy; only 1: cbn; only 1: intros ?; only 1: apply poly_eq_zero_plus; only 1: apply poly_mult_cr_0_l; only 1: easy; only 1: rewrite poly_eq_zero_cons; only 1: auto).	0.057958	9
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_proper	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_left_distr	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_cons_r	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_comm	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_right_distr	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_1_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: cbn; only 1: rewrite poly_mult_cr_1_r; only 1: rewrite poly_eq_zero_plus_r; only 1: auto; only 1: split; only 1: easy; only 1: easy).	0.056723	8
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_1_r	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_mult_assoc	300
coq-math-classes.8.15.0	MathClasses.implementations.polynomials.contents.poly_ring	300
coq-qcert.2.2.0	Qcert.Data.Operators.OperatorsEq.OperatorsEq.unary_op_equiv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: unfold Reflexive; only 1: unfold unary_op_eq; only 1: intros; only 1: reflexivity; only 1: unfold Symmetric; only 1: unfold unary_op_eq; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: trivial; only 1: unfold Transitive; only 1: unfold unary_op_eq; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.064662	19
coq-qcert.2.2.0	Qcert.Data.Operators.OperatorsEq.OperatorsEq.binary_op_equiv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: unfold Reflexive; only 1: unfold binary_op_eq; only 1: intros; only 1: reflexivity; only 1: unfold Symmetric; only 1: unfold binary_op_eq; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: unfold Transitive; only 1: unfold binary_op_eq; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.083807	22
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.basic_definitions.rule_eq	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct a; only 1: destruct b; only 1: split; only 1: intros; only 1: destruct H; only 1: simpl in *; only 1: subst; only 1: refl; only 1: intros; only 1: rewrite H; only 1: simpl; only 1: auto).	0.043644	13
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.basic_definitions.beq_rule_ok	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.basic_definitions.is_notvar_lhs_elim	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.basic_definitions.is_notvar_lhs_false	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.basic_definitions.is_notvar_rhs_elim	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.basic_definitions.is_notvar_rhs_false	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.red_incl	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.hd_red_incl	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: redtac; only 1: ex l r s; only 1: split_all).	0.038164	9
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.red_mod_incl	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold red_mod; only 1: rewrite H; only 1: rewrite H0; only 1: refl).	0.152588	10
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.hd_red_mod_incl	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold hd_red_mod; only 1: rewrite H; only 1: rewrite H0; only 1: refl).	0.095043	10
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.hd_red_Mod_incl	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold hd_red_Mod; only 1: rewrite H; only 1: rewrite H0; only 1: refl).	0.100349	10
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.red_rule	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold red; only 1: ex l r c s; only 1: auto).	0.034731	4
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.red_empty	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction H; only 1: redtac; only 1: contr; only 1: refl; only 1: congruence).	0.035451	6
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.red_rule_top	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.hd_red_rule	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold hd_red; only 1: ex l r s; only 1: auto).	0.031425	4
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.red_fill	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.context_closed_red	300	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply red_fill; only 1: hyp).	0.038405	9
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.red_sub	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: redtac; only 1: subst; only 1: rewrite sub_fill; only 1: rewrite sub_fill; only 1: rewrite sub_sub; only 1: rewrite sub_sub; only 1: apply red_rule; only 1: hyp).	0.044457	9
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.red_subterm	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.int_red_fun	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.red_swap	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.hd_red_swap	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.int_red_incl_red	300	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold inclusion; only 1: unfold int_red; only 1: intros; only 1: decomp H; only 1: subst x; only 1: subst y; only 1: apply red_rule; only 1: hyp).	0.042832	8
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.hd_red_incl_red	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold inclusion; only 1: intros; only 1: redtac; only 1: subst x; only 1: subst y; only 1: apply red_rule_top; only 1: hyp).	0.036592	7
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.WF_red_empty	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply SN_intro; only 1: intros ?; only 1: intros ?; only 1: redtac; only 1: contr).	0.034971	6
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.hd_red_mod_incl_red_mod	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold hd_red_mod; only 1: unfold red_mod; only 1: comp; only 1: apply hd_red_incl_red).	0.030799	5
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.int_red_preserve_hd	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.int_red_rtc_preserve_hd	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: induction H; only 1: right; only 1: apply int_red_preserve_hd; only 1: auto; only 1: auto; only 1: destruct IHclos_refl_trans1; only 1: destruct IHclos_refl_trans2; only 1: subst; only 1: auto; only 1: subst; only 1: auto; only 1: destruct IHclos_refl_trans2; only 1: subst; only 1: auto; only 1: right; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H2; only 1: destruct H2; only 1: split_all; only 1: subst; only 1: Funeqtac; only 1: subst; only 1: ex x0 x1 x5; only 1: auto).	0.248603	34
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.red_case	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting.red_split	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.brules_preserve_vars_ok	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rules_preserve_vars_cons	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold rules_preserve_vars; only 1: split_all; only 1: apply H; only 1: left; only 1: destruct a; only 1: refl; only 1: fo; only 1: simpl in H0; only 1: destruct H0; only 1: subst; only 1: hyp; only 1: apply H1; only 1: hyp).	0.055943	13
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.vars.red_preserve_vars	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.vars.tred_preserve_vars	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.vars.rtred_preserve_vars	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.vars.red_maxvar	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite maxvar_lmax; only 1: rewrite maxvar_lmax; only 1: apply incl_lmax; only 1: apply red_preserve_vars; only 1: hyp).	0.029173	6
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.vars.red_maxvar0	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.vars.rtc_red_maxvar	300	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: rewrite maxvar_lmax; only 1: rewrite maxvar_lmax; only 1: apply incl_lmax; only 1: apply red_preserve_vars; only 1: hyp; only 1: lia; only 1: lia).	0.044972	8
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.vars.rtc_red_maxvar0	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.red_mod.red_mod_maxvar	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.red_mod.red_mod_maxvar0	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rules_preserve_vars_incl	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.maxvar_rules_init	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.maxvar_rules_init_mon	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.maxvar_rules_remove	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.maxvar_rules_elim	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.vector.Vgt_prod_fun	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.union.red_union	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.union.red_union_inv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H0; only 1: subst x; only 1: subst y; only 1: ex x0 x1 x2 x3; only 1: intuition; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H0; only 1: subst x; only 1: subst y; only 1: ex x0 x1 x2 x3; only 1: intuition).	0.113821	24
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.union.hd_red_union	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.union.hd_red_union_inv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H0; only 1: subst x; only 1: subst y; only 1: ex x0 x1 x2; only 1: intuition; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: destruct H0; only 1: subst x; only 1: subst y; only 1: ex x0 x1 x2; only 1: intuition).	0.131077	22
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.hd_red_mod_of_hd_red_Mod_int	300	0.0.0.0.0.0	synth with cache (only 1: unfold hd_red_Mod; only 1: unfold hd_red_mod; only 1: apply compose_incl; only 1: apply rtc_incl; only 1: apply int_red_incl_red; only 1: refl).	0.029460	6
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.hd_red_mod_of_hd_red_Mod	300	0.0.0	synth with cache (only 1: unfold hd_red_Mod; only 1: unfold hd_red_mod; only 1: refl).	0.027797	3
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.hd_red_Mod_remdup	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold hd_red_Mod; only 1: comp; only 1: unfold inclusion; only 1: intros; only 1: redtac; only 1: ex l r s; only 1: split_all; only 1: apply incl_remdup; only 1: auto).	0.046030	9
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.hd_red_mod_remdup	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold hd_red_mod; only 1: comp; only 1: unfold inclusion; only 1: intros; only 1: redtac; only 1: ex l r s; only 1: split_all; only 1: apply incl_remdup; only 1: auto).	0.050884	9
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.red_mod_empty_incl_red	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.red_mod_empty	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply red_mod_empty_incl_red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists x; only 1: split; only 1: apply rtc_refl; only 1: hyp).	0.033568	9
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.hd_red_mod_empty_incl_hd_red	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.WF_red_mod_empty	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply SN_intro; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: redtac; only 1: contr).	0.039145	8
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.WF_hd_red_mod_empty	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.WF_hd_red_Mod_empty	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.red_mod_fill	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.context_closed_red_mod	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply red_mod_fill; only 1: hyp).	0.029507	6
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rewriting_modulo_results.red_mod_sub	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.termination_as_relative_term.red_incl_red_mod	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists x; only 1: split; only 1: constructor 2; only 1: hyp).	0.029843	7
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.termination_as_relative_term.hd_red_incl_hd_red_mod	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists x; only 1: split; only 1: constructor 2; only 1: hyp).	0.029663	7
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.union_modulo.red_mod_union	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.union_modulo.hd_red_Mod_union	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.union_modulo.hd_red_mod_union	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rule_renaming.sub_rule_inv	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold sub_rule; only 1: simpl; only 1: rewrite sub_inv; only 1: rewrite sub_inv; only 1: refl; only 1: hyp; only 1: hyp).	0.033797	9
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rule_renaming.sub_rules_inv	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.rule_renaming.red_ren	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.int_red_pos_eq	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.min_eq	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.int_red_min	300
coq-color.1.8.2	CoLoR.Term.WithArity.ATrs.S.int_red_rtc_min	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: eapply int_red_min; only 1: apply H; only 1: hyp; only 1: intros ?; only 1: hyp; only 1: intros ?; only 1: apply IHclos_refl_trans2; only 1: apply IHclos_refl_trans1; only 1: hyp).	0.038009	11
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_unique_respectful	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_unique	300	0.0	synth with cache (only 1: apply @int_abs_unique_respectful; only 1: easy).	0.111807	2
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_proper	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_spec	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_sig_alt	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_nat	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_negate_nat	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_negate	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_0_alt	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_ne_0	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_0	300	0.0	synth with cache (only 1: apply int_abs_0_alt; only 1: easy).	0.030465	2
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_nonneg	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_nonpos	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_1	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_nonneg_plus	300
coq-math-classes.8.15.0	MathClasses.theory.int_abs.contents.int_abs_mult	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_lt_mono; only 1: easy; only 1: easy).	0.044981	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_lt_le_mono; only 1: easy; only 1: easy).	0.042773	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_le_lt_mono; only 1: easy; only 1: easy).	0.073717	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_le_mono; only 1: easy; only 1: easy).	0.065842	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rlt_trans with m; only 1: assumption; only 1: apply Rlt_succ_r).	0.047512	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	300	0	synth with cache (only 1: auto with *).	0.079169	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_antisym	300	0	synth with cache (only 1: apply Z.le_antisymm).	0.055191	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_irrefl	300	0	synth with cache (only 1: apply Z.lt_irrefl).	0.090699	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	300	0	synth with cache (only 1: apply Z.lt_neq).	0.086962	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	300	0.0.0.0.0	synth with cache (only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.064367	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zlt_Qlt	300	0.0.0.0.0	synth with cache (only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.162758	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lteq	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Qeq_alt; only 1: rewrite Qle_alt; only 1: rewrite Qlt_alt; only 1: destruct Qcompare; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.256407	13
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_weak	300	0	synth with cache (only 1: apply Z.lt_le_incl).	0.035116	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_trans	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_trans	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.122984	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	300	0	synth with cache (only 1: apply Z.nlt_ge).	0.050518	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_le_lt	300	0	synth with cache (only 1: apply Z.nle_gt).	0.073286	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_le	300	0	synth with cache (only 1: apply Z.lt_nge).	0.135122	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_not_lt	300	0	synth with cache (only 1: apply Z.le_ngt).	0.117605	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	300	0.0.0.0.0.0	synth with cache (only 1: unfold Qle; only 1: unfold Qlt; only 1: unfold Qeq; only 1: intros; only 1: apply Z.lt_eq_cases; only 1: easy).	0.108745	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_dec	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_dec	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_le_compat	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_opp_l; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.opp_le_mono; only 1: easy).	0.094660	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_minus_iff	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.le_sub_le_add_r; only 1: rewrite Z.opp_involutive; only 1: reflexivity).	0.218821	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.lt_sub_lt_add_r; only 1: rewrite Z.opp_involutive; only 1: reflexivity).	0.137193	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply Qmult_lt_0_le_reg_r with z; only 1: easy; only 1: easy; only 1: intros ?; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	0.062979	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: auto with *).	0.087759	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: destruct Qnum0; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.084222	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: destruct Qnum0; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.053090	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_positive_comp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: clear y0 H0; only 1: unfold Qpower_positive; only 1: induction x0; only 1: simpl; only 1: rewrite IHx0; only 1: rewrite H; only 1: reflexivity; only 1: simpl; only 1: rewrite IHx0; only 1: reflexivity; only 1: simpl; only 1: assumption).	0.099637	19
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_comp	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: clear y0 H0; only 1: destruct x0; only 1: simpl; only 1: auto with *; only 1: simpl; only 1: unfold Qpower_positive; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite H; only 1: reflexivity; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: assumption; only 1: simpl; only 1: rewrite H; only 1: auto with *).	0.170358	26
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	300	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction p; only 1: simpl; only 1: case_decide; only 1: inversion 1; only 1: intuition; only 1: inversion 1; only 1: simpl; only 1: case_decide; only 1: inversion 1; only 1: inversion 1).	0.056927	12
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: simpl; only 1: auto; only 1: simpl; only 1: case_decide; only 1: try_rewrite; only 1: rewrite <- reduce_aux_eval_compat; only 1: inversion H3; only 1: simpl; only 1: ring; only 1: auto; only 1: simpl; only 1: rewrite reduce_aux_eval_compat; only 1: try_rewrite; only 1: auto; only 1: auto).	0.160138	20
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: simpl; only 1: constructor; only 1: simpl; only 1: case_decide; only 1: eapply linear_le_compat; only 1: eauto; only 1: zify; only 1: omega; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: apply linear_reduce_aux; only 1: auto).	0.070117	18
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	300	0.0.0.0.0.0.0.0.1	synth with cache (only 1: generalize digits_ne_1; only 1: destruct digits; only 1: red; only 1: auto; only 1: red; only 1: auto; only 1: red; only 1: destruct 1; only 1: auto).	0.051596	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	300	0.0.0.0	synth with cache (only 1: apply Z.lt_gt; only 1: unfold wB; only 1: unfold base; only 1: auto with zarith).	0.035641	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	300	0	synth with cache (only 1: auto).	0.211425	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: unfold zdigits; only 1: apply Zmod_small; only 1: unfold wB; only 1: unfold base; only 1: split; only 1: auto with zarith; only 1: apply Zpower2_lt_lin; only 1: auto with zarith).	0.044076	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	300	0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: unfold zero; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.064156	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	300	0	synth with cache (only 1: reflexivity).	0.029343	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	300	0.0.0.0.0.0	synth with cache (only 1: unfold eq0; only 1: intros; only 1: destruct to_Z; only 1: easy; only 1: easy; only 1: easy).	0.045374	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	300	0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: reflexivity).	0.121398	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	300	0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: rewrite Zdiv_1_r; only 1: auto).	0.091378	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	300	0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsl_spec; only 1: rewrite to_Z_0; only 1: rewrite Z.mul_1_r; only 1: apply Zmod_small; only 1: apply to_Z_bounded).	0.072086	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold succ; only 1: unfold to_Z; only 1: unfold BinIntDef.Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.044792	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: unfold to_Z; only 1: apply Zplus_mod).	0.045351	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	300	0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_add; only 1: case Int63.leb; only 1: auto; only 1: auto).	0.066719	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold pred; only 1: unfold to_Z; only 1: unfold BinIntDef.Z.pred; only 1: rewrite <- Zplus_mod_idemp_l; only 1: auto).	0.050587	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case b; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: auto; only 1: auto; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr0; only 1: rewrite lsl0; only 1: rewrite andb_false_r; only 1: auto).	0.089942	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold sub; only 1: unfold to_Z; only 1: apply Zminus_mod).	0.046430	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.086327	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	300	0.0.0.0	synth with cache (only 1: intros; only 1: unfold mul; only 1: unfold to_Z; only 1: apply Zmult_mod).	0.044523	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	300	0.0.0	synth with cache (only 1: intros; only 1: apply spec_div; only 1: auto).	0.044297	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	300	0.0.0	synth with cache (only 1: intros; only 1: apply spec_modulo; only 1: auto).	0.048386	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	300	0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_M_r; only 1: auto; only 1: auto).	0.061748	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	300	0.0	synth with cache (only 1: intros; only 1: apply spec_gcd).	0.050990	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	300	0.0.0	synth with cache (only 1: intros; only 1: unfold add_mul_div; only 1: auto).	0.171181	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold two_p; only 1: destruct x; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply two_power_pos_correct; only 1: simpl; only 1: auto).	0.064773	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	300	0.0.0.0.0	synth with cache (only 1: unfold head0; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply spec_zdigits).	0.055627	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite lor_spec; only 1: case Int63.leb; only 1: auto; only 1: auto).	0.088038	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	300	0.0.0.0	synth with cache (only 1: unfold tail0; only 1: intros; only 1: rewrite H; only 1: apply spec_zdigits).	0.067495	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	300	0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	0.056806	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	300	0	synth with cache (only 1: apply @eq_refl).	0.060094	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	300	0.0.0	synth with cache (only 1: rewrite is_even_bit; only 1: rewrite bit_lsl; only 1: auto).	0.061458	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt2_step; only 1: case diveucl_21; only 1: intros; only 1: simpl; only 1: case addc; only 1: trivial; only 1: trivial).	0.092730	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: intros ?; only 1: destruct H; only 1: clear H; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: symmetry; only 1: apply Z.mod_small; only 1: split; only 1: lia; only 1: exact H0; only 1: lia; only 1: lia).	0.245400	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: easy; only 1: auto; only 1: simpl; only 1: unfold of_pos; only 1: rewrite opp_spec; only 1: rewrite of_pos_rec_spec; only 1: fold wB; only 1: rewrite <- Z.sub_0_l; only 1: rewrite Zminus_mod_idemp_r; only 1: easy; only 1: auto).	0.204411	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	300	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: apply negb_involutive).	0.120714	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	300	0.0.0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: case BinIntDef.Z.odd; only 1: reflexivity; only 1: reflexivity).	0.188296	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	300	0.0.0.0	synth with cache (only 1: rewrite Zmod_even; only 1: case BinIntDef.Z.even; only 1: reflexivity; only 1: reflexivity).	0.159304	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	300	0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: easy).	0.058899	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zify; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_1_l; only 1: easy).	0.097106	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	300	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_comm; only 1: auto).	0.153697	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	300	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_assoc; only 1: auto).	0.181831	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	300	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).	0.150059	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	300	0.0.0.0.0.0	synth with cache (only 1: rewrite landC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).	0.212669	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	300	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_comm; only 1: auto).	0.141787	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	300	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_assoc; only 1: auto).	0.118251	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	300	0.0.0.0.0.0	synth with cache (only 1: rewrite lorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).	0.116097	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	300	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).	0.189034	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	300	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_comm; only 1: auto).	0.165494	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	300	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_assoc_reverse; only 1: auto).	0.132713	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	300	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).	0.108523	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	300	0.0.0.0.0.0.0	synth with cache (only 1: rewrite lxorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).	0.089475	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rfield	300	0.0.1.0.0	synth with cache (only 1: constructor; only 1: exact RTheory; only 1: exact R1_neq_R0; only 1: reflexivity; only 1: exact Rinv_l).	0.046325	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_0_2	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rdef_pow_add	300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.R_power_theory	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_minus	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.052821	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_eq_contra	300	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: auto with real).	0.074067	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq	300	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.049805	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq_right	300	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: ring).	0.082596	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	300	0.0	synth with cache (only 1: intros; only 1: ring).	0.090227	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1	300	0	synth with cache (only 1: field).	0.079266	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_involutive	300	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.085225	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_distr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_inv_permute	300	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.100982	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_simpl	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	300	0	synth with cache (only 1: eauto using Rplus_lt_compat_l with rorders).	0.090688	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_lt_compat_r).	0.097165	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	300	0	synth with cache (only 1: auto using Rplus_le_compat_r with rorders).	0.066398	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat	300	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.062562	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat	300	0	synth with cache (only 1: auto using Rplus_le_compat with rorders).	0.072496	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	300	0	synth with cache (only 1: auto using Rplus_lt_le_compat with rorders).	0.060469	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	300	0	synth with cache (only 1: auto using Rplus_le_lt_compat with rorders).	0.067224	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rlt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.137181	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	300	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_lt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.071955	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: rewrite <- Rplus_comm; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: assumption).	0.098495	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_le_compat_l; only 1: assumption).	0.099654	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rplus_le_reg_l with r; only 1: auto with real).	0.136149	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: unfold Rgt in H; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.150997	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.112308	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_contravar	300	0	synth with cache (only 1: auto with real).	0.063589	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_contravar	300	0	synth with cache (only 1: auto with real).	0.110990	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).	0.117382	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	300	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).	0.179023	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_contravar	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.113078	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_contravar	300	0	synth with cache (only 1: auto using Ropp_le_contravar with real).	0.106838	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.110324	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	300	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.093937	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_cancel	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	300	0	synth with cache (only 1: auto using Ropp_lt_cancel with rorders).	0.221728	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_cancel	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	300	0	synth with cache (only 1: auto using Ropp_le_cancel with rorders).	0.164790	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	300	0	synth with cache (only 1: eauto using Rmult_lt_compat_r with rorders).	0.109237	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	300	0	synth with cache (only 1: eauto using Rmult_lt_compat_l with rorders).	0.113403	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_l	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real; only 1: destruct H0; only 1: unfold Rle; only 1: right; only 1: rewrite <- H; only 1: rewrite Rmult_0_l; only 1: rewrite Rmult_0_l; only 1: reflexivity; only 1: unfold Rle; only 1: auto with real).	0.181097	20
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	300	0	synth with cache (only 1: eauto using Rmult_le_compat_l with rorders).	0.166158	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	300	0	synth with cache (only 1: eauto using Rmult_le_compat_r with rorders).	0.282604	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	300	0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	0.104292	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	300	1	synth with cache (only 1: eauto using Rmult_lt_reg_l with rorders).	0.100665	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_minus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_minus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rgt_minus).	0.097347	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	300	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real).	0.142412	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_minus	300	0.0.0.0	synth with cache (only 1: destruct 1; only 1: auto using Rgt_minus, Rgt_ge; only 1: right; only 1: auto using Rminus_diag_eq with rorders).	0.070026	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	300	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rminus_gt).	0.072006	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_ge	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rplus	300	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: apply Rle_lt_trans with r; only 1: assumption; only 1: pattern r at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.092295	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_sqr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_sqr_eq_0_l with r2; only 1: auto with real; only 1: apply Rplus_sqr_eq_0_l with r1; only 1: rewrite Rplus_comm; only 1: auto with real).	0.098934	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	300	0.0	synth with cache (only 1: left; only 1: exact Rlt_0_1).	0.071651	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rgt_minus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: case n; only 1: auto with real; only 1: auto with real).	0.091392	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_O_plus_INR	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: case n; only 1: auto with real; only 1: intros; only 1: auto with real).	0.078388	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	300	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto with real; only 1: rewrite S_INR; only 1: simpl; only 1: rewrite plus_INR; only 1: rewrite IHn; only 1: ring).	0.147025	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_INR	300	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite mult_INR; only 1: rewrite IHn; only 1: easy).	0.099369	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	300	0.0.0.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: rewrite S_INR; only 1: auto with real).	0.104028	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_INR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_1_INR	300	0	synth with cache (only 1: apply lt_INR).	0.144353	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	300	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply Pos2Nat.is_pos).	0.120527	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	300	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: rewrite H0; only 1: trivial).	0.122277	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_INR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_INR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	300	0.0	synth with cache (only 1: intros ?; only 1: apply not_INR).	0.102475	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZN	300	0.0	synth with cache (only 1: intros ?; only 1: apply Z_of_nat_complete).	0.143655	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IZR_INZ	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: easy; only 1: simpl BinIntDef.Z.of_nat; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite SuccNat2Pos.id_succ; only 1: easy).	0.192791	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: unfold IZR; only 1: subst; only 1: ring; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial).	0.263277	33
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: apply plus_INR; only 1: apply plus_IZR_NEG_POS; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: rewrite Z.add_comm; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite plus_INR; only 1: apply Ropp_plus_distr).	0.220320	32
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case n; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring).	0.261661	56
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_IZR	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Zpower_pos_nat; only 1: rewrite SuccNat2Pos.id_succ; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite mult_IZR; only 1: ring [ IHn ]).	0.246051	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	300	0.0.0	synth with cache (only 1: intros ?; only 1: unfold BinIntDef.Z.succ; only 1: apply plus_IZR).	0.158128	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.opp_IZR	300	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real).	0.202232	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_IZR	300	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR).	0.122324	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold BinIntDef.Z.sub; only 1: rewrite <- Ropp_Ropp_IZR; only 1: symmetry; only 1: apply plus_IZR).	0.163535	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_IZR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_IZR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_IZR	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: case H; only 1: apply eq_IZR; only 1: auto).	0.115010	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR_R1	300	0.0	synth with cache (only 1: intros ?; only 1: apply le_IZR).	0.222268	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_le	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_lt	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_neq	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: intros ?; only 1: elim H; only 1: apply eq_IZR; only 1: assumption).	0.279132	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.single_z_r_R1	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply one_IZR_r_R1 with r; only 1: auto; only 1: auto).	0.213819	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_r_R1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_single_z_r_R1	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: apply H1; only 1: apply single_z_r_R1 with r; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.285902	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_le_contravar	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: apply Rlt_le; only 1: apply Rinv_lt_contravar with (2 := H0); only 1: apply Rmult_lt_0_compat with (1 := H); only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: rewrite H0; only 1: apply Rle_refl).	0.357976	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: intros ?; only 1: destruct H0; only 1: apply Rlt_le; only 1: apply Rinv_lt_contravar with (2 := H0); only 1: apply Rmult_lt_0_compat with (1 := H); only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: rewrite H0; only 1: apply Rle_refl).	0.266602	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_div	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: ring).	0.280822	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.345447	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double_var	300	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- double; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: apply not_0_IZR; only 1: easy).	0.351786	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.R_rm	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: apply plus_INR; only 1: apply plus_IZR_NEG_POS; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: rewrite Z.add_comm; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite plus_INR; only 1: apply Ropp_plus_distr; only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR; only 1: intros ?; only 1: intros ?; only 1: case x; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: exact opp_IZR; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply f_equal; only 1: apply Zeq_bool_eq; only 1: auto).	0.415921	103
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).	0.445047	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_epsilon	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.completeness_weak	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	300	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: auto with real).	0.330209	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_plus_distr	300	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rmult_plus_distr_r).	0.428508	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_minus_distr	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rmult_plus_distr_r; only 1: ring).	0.457061	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_EM_T	300
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.formule	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term3	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term4	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.D_x_no_cond	300	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold D_x; only 1: unfold no_cond; only 1: split; only 1: trivial; only 1: apply Rminus_not_eq; only 1: unfold Rminus; only 1: rewrite Ropp_plus_distr; only 1: rewrite <- Rplus_assoc; only 1: rewrite Rplus_opp_r; only 1: rewrite Rplus_0_l; only 1: apply Ropp_neq_0_compat; only 1: assumption).	0.071749	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rabs_4	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rlt_4	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	300	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.065533	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	300	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- quadruple; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: rewrite Rinv_r_simpl_m; only 1: trivial; only 1: discrR).	0.072126	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.continuous_neq_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_prop	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comp	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_l	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_r	300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_0	300	0.0.0.0	synth with cache (only 1: unfold sin; only 1: case exist_sin; only 1: intros; only 1: ring).	0.051365	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_minus	300	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	0.112260	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_plus	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a	300	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite double; only 1: apply cos_plus).	0.046638	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_cos	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_sin	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_2a	300	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double; only 1: rewrite double; only 1: rewrite double in H0; only 1: apply tan_plus; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	0.068258	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	300	1	synth with cache (only 1: apply sin_antisym).	0.110965	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_neg	300	1.0.0	synth with cache (only 1: intros ?; only 1: symmetry in  |- *; only 1: apply cos_sym).	0.123207	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	300	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_0; only 1: rewrite cos_0; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	0.060544	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_neg	300	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold tan; only 1: rewrite sin_neg; only 1: rewrite cos_neg; only 1: unfold Rdiv; only 1: apply Ropp_mult_distr_l_reverse).	0.045056	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_minus	300	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite tan_plus; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: reflexivity; only 1: assumption; only 1: rewrite cos_neg; only 1: assumption; only 1: assumption; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: assumption).	0.111724	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_3PI2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2PI	300	0.0.0	synth with cache (only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	0.060622	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2PI	300	0.0.0.0	synth with cache (only 1: rewrite cos_2a; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.080082	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.086132	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.083469	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_period	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_shift	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.103246	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_shift	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.078340	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin	300	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.072678	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	300	0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: lra).	0.057046	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	300	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	0.055051	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	300	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	0.057735	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	300	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	0.055726	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_lt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_gt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_lt_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form2	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form3	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form4	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_0	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_1	300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	300
