
Coq.micromega.OrderedRing.rplus_morph_Proper	40	20.0	search with cache (only 1: intros A B H; only 1: firstorder  (subst; auto)).	1.24727892876	1162
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	18.1	search with cache (only 1: intros A B H; only 1: firstorder  (subst; auto)).	1.02264213562	786
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	17.7.17	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: intuition).	8.45755410194	12155
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0507919788361	3
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.20	search with cache (only 1: intros; only 1: ring).	0.229266166687	208
Coq.micromega.OrderedRing.Rplus_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0604569911957	6
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.1	search with cache (only 1: intro; only 1: ring).	0.049693107605	3
Coq.micromega.OrderedRing.Rtimes_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0606870651245	6
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	1.0.7.1	search with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.268624067307	197
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	1.0.0.6.5.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	6.76001286507	2916
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0	search with cache (only 1: intuition Z.Private_Tac.order).	0.0377449989319	1
Coq.micromega.Ztac.elim_concl_eq	40	14.1.1	search with cache (only 1: intros x y z; only 1: intuition; only 1: Z.order).	1.61482095718	1294
Coq.micromega.Ztac.elim_concl_le	40	4	search with cache (only 1: Z.order).	0.0484850406647	29
Coq.micromega.Ztac.elim_concl_lt	40	4.0	search with cache (only 1: intros; only 1: Z.order).	0.229197025299	92
Coq.micromega.Ztac.Zlt_le_add_1	40	0.1.1.5	search with cache (only 1: intros; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l; only 1: auto).	0.676012992859	82
Coq.micromega.Ztac.add_le	40	2.0	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0395278930664	4
Coq.micromega.Ztac.mul_le	40	0.0.20.1	search with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	3.91627907753	3358
Coq.micromega.ZifyInst.PropAnd	40	8.10	search with cache (only 1: split; only 1: tauto).	0.614867210388	248
Coq.micromega.ZifyInst.PropOr	40	1.0	search with cache (only 1: constructor; only 1: tauto).	0.0687890052795	3
Coq.micromega.ZifyInst.PropArrow	40	0.4	search with cache (only 1: constructor; only 1: tauto).	0.0580821037292	6
Coq.micromega.ZifyInst.PropIff	40	0.0.2	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0824689865112	5
Coq.micromega.ZifyInst.PropNot	40	0.0.1	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0489249229431	4
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.0.0.0.0.1.0.6.0.0.6.0	search with cache (only 1: intros n; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	6.86555218697	6178
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40	35.5	search with cache (only 1: intro; only 1: firstorder).	35.5991928577	17540
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0453939437866	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0461599826813	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0461549758911	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0454440116882	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0456008911133	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	1.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0951321125031	6
Coq.micromega.ZCoeff.ring_ops_wd	40	3.10.10.7	search with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	14.3885040283	8153
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.1.0.2.5	search with cache (only 1: intro; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	1.6659450531	395
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	1.7.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.438709974289	167
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	1.0.1.0.0.1	search with cache (only 1: intros; only 1: left; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: apply Rge_le; only 1: auto with real).	1.40184807777	328
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.0.9.5	search with cache (only 1: intros r r1 r2 H; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real).	3.70838904381	1602
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	18	search with cache (only 1: intuition Z.Private_Tac.order).	1.47175312042	848
Coq.micromega.ZMicromega.lt_le_iff	40	9.2	search with cache (only 1: intros a; only 1: apply Z.lt_le_pred).	0.172646999359	85
Coq.micromega.ZMicromega.le_0_iff	40	1.1.10.0	search with cache (only 1: intros n m; only 1: split; only 1: now apply Z.le_0_sub; only 1: now apply Z.le_0_sub).	1.4100060463	679
Coq.micromega.ZMicromega.le_neg	40	2.2.0.6.2	search with cache (only 1: intros a; only 1: rewrite ?Z.opp_pos_neg; only 1: intuition; only 1: Z.order; only 1: Z.order).	2.10645890236	1249
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0693018436432	2
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.6.8	search with cache (only 1: intros s1; only 1: elim s1; only 1: now split; only 1: now split; only 1: now split).	1.59586119652	938
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.2.1	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	0.119687080383	10
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	1.0.3.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: easy).	0.221462965012	22
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	1.1.6.4.4.4.2	search with cache (only 1: intros s1; only 1: elim s1; only 1: intros; only 1: intuition congruence; only 1: destruct b2; only 1: intuition; only 1: intuition).	6.57593202591	4868
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	3.2	search with cache (only 1: intros n; only 1: now destruct n).	0.163540124893	16
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	1.1.0.0.0.0.4.2.0.1	search with cache (only 1: intros; only 1: split; only 1: compute; only 1: destruct x; only 1: intuition congruence; only 1: now split; only 1: now split; only 1: split; only 1: now destruct x; only 1: now destruct x).	2.92566680908	1160
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	10.2.19.0.0	search with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: unfold jump; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	33.6180820465	40666
Coq.micromega.Env.jump_succ	40	10.1.0	search with cache (only 1: rewrite <- !jump_add; only 1: unfold jump; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.57313203812	1062
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40	0.6.10.7.8	search with cache (only 1: unfold tail; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	15.6194748878	15759
Coq.micromega.Env.nth_jump	40	2.0.1	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0851261615753	24
Coq.micromega.Env.nth_pred_double	40	1.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0753588676453	4
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0213840007782	4
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	3	search with cache (only 1: destr_bool).	0.0159168243408	4
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	2.0	search with cache (only 1: simpl; only 1: trivial).	0.0150270462036	4
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	2.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0144019126892	4
Coq.micromega.Tauto.is_cnf_tt_inv	40	20.0.25.12	search with cache (only 1: intros a Ha; only 1: destruct a; only 1: reflexivity; only 1: easy).	5.6156039238	12446
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.4	search with cache (only 1: destruct f; only 1: auto; only 1: auto).	0.0277049541473	15
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40	1.18	search with cache (only 1: fix even_spec 1; only 1: congruence).	0.683403015137	439
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	3.1.0.3.12.4.2	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: destr_bool; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: easy).	2.23035907745	4056
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	21.2	search with cache (only 1: intuition; only 1: firstorder).	3.51408600807	3499
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0255289077759	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	48	search with cache (only 1: firstorder).	2.26774001122	2261
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.2.1.7	search with cache (only 1: unfold cnf_tt, eval_cnf, eval_clause; only 1: intros; only 1: repeat rewrite make_conj_cons in *; only 1: tauto).	1.61741900444	773
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0556290149689	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	20.3	search with cache (only 1: intros n; only 1: now destruct n).	1.53053712845	1272
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0228190422058	1
Coq.micromega.EnvRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0260469913483	2
Coq.micromega.EnvRing.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.02494597435	2
Coq.micromega.EnvRing.rsub_ext_Proper	40	0.10	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.198743104935	51
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40	30.7	search with cache (only 1: elim ARth; only 1: firstorder).	1.61251878738	1706
Coq.micromega.EnvRing.Pphi1	40	23	search with cache (only 1: firstorder).	0.929472923279	702
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40	1.0.5.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.152621030807	82
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	2.1.0.0.1.0.0.1.1.2.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: rsimpl; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	36.9919769764	8849
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	4.2.0.0.0.0.0.3.1.1.1.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	11.4745299816	5165
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.2	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0392370223999	6
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.7	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.219003915787	83
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.0.9	search with cache (only 1: induction M; only 1: rsimpl; only 1: rsimpl; only 1: rsimpl).	0.304064035416	88
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0591089725494	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0590431690216	1
Coq.micromega.RingMicromega.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0586071014404	1
Coq.micromega.RingMicromega.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0590479373932	1
Coq.micromega.RingMicromega.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0585649013519	1
Coq.micromega.RingMicromega.rminus_morph_Proper	40	1.1.1.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.114678144455	8
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	2.2.0.2.8	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: red; only 1: auto).	0.166359901428	325
Coq.micromega.Refl.make_impl_map	40	7.3.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: firstorder  (subst; auto)).	1.6678981781	1805
Coq.micromega.Refl.make_conj_cons	40	3.1.0.1.1.9	search with cache (only 1: intros Q H H'; only 1: induction l as [| a l IH]; only 1: intuition; only 1: constructor; only 1: simpl; only 1: intuition).	7.93057513237	11820
Coq.micromega.Refl.make_conj_impl	40	3.3.3.0.1.0.0.1	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: tauto).	14.7208821774	17227
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.12.0	search with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	2.88907694817	843
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40	27.5	search with cache (only 1: intros; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	1.64838790894	1793
Coq.micromega.QMicromega.QNpower	40	0.1.0.0	search with cache (only 1: intros r [| n]; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	0.076385974884	5
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.1	search with cache (only 1: intro; only 1: field).	0.119247913361	4
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	2.30	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: auto with real).	10.4786651134	7448
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40	6.10.7.21.9	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: now destruct a; only 1: easy || now destruct y).	13.5383877754	20682
Coq.micromega.RMicromega.is_neg_false	40	8.0.3.5.8.3.1	search with cache (only 1: destruct z; only 1: destruct z; only 1: easy; only 1: easy; only 1: simpl; only 1: congruence; only 1: now destruct n).	15.3697121143	16483
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.115051984787	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40	4.0.28	search with cache (only 1: intros abs; only 1: fix odd_equiv 1; only 1: eauto using Rlt_trans with rorders).	4.76727104187	5686
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	1.0.8.0.2.3.3.0	search with cache (only 1: intros; only 1: induction p; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: now destruct p; only 1: trivial).	6.13531398773	7459
Coq.rtauto.Bintree.map_app	40	0.2.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0350539684296	10
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0260078907013	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.1.3.1.1.3.1.8	search with cache (only 1: intros l2; only 1: induction l; only 1: induction i; only 1: auto; only 1: auto; only 1: induction i; only 1: auto; only 1: simpl; only 1: auto).	31.9407169819	49671
Coq.rtauto.Bintree.Lget_app_Some	40	0.0.2.0.2.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: now discriminate; only 1: simpl; only 1: induction i; only 1: auto; only 1: auto).	0.190728902817	202
Coq.rtauto.Bintree.Tget_Tempty	40	3.0.1.0	search with cache (only 1: intros; only 1: revert p; only 1: intros; only 1: now induction p).	0.0386099815369	16
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.0.0.8.8	search with cache (only 1: intros; only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.129179954529	266
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.1.5.3.8	search with cache (only 1: unfold not; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: destr_eq H; only 1: congruence).	0.737074136734	623
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40	0.0.48	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros a S; only 1: auto).	28.0473568439	66418
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	0.1.11	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros x y z; only 1: auto).	0.156075000763	316
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40
Coq.rtauto.Rtauto.compose3	40	7.1.6.3.0.0.0.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: simpl; only 1: intros S F; only 1: auto; only 1: simpl; only 1: intros x y z; only 1: intros A B H; only 1: firstorder).	30.2194988728	55969
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	4.1.3.0.0	search with cache (only 1: intros x y H; only 1: setoid_replace x with x - y + y; only 1: setoid_rewrite H; only 1: cring; only 1: cring).	2.4174849987	245
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	4.1.0	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0765650272369	8
Coq.nsatz.Nsatz.Rext	40	0.0.0.6	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.18422794342	10
Coq.nsatz.Nsatz.Rset	40	2.0	search with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.0914120674133	13
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	0.0.0.0.0.2.0.0.2	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros x; only 1: intros; only 1: subst; only 1: reflexivity).	0.664225101471	301
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	3.0	search with cache (only 1: intro abs; only 1: intuition).	0.129996061325	5
Coq.nsatz.Nsatz.Rcri	40	9.22.3.29	search with cache (only 1: intros x H; only 1: apply Rsth; only 1: destruct (frame_tan x) as [ub [[ub0 ubpi] Pub]]; only 1: auto with real).	6.29220700264	9717
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	0.0.1	search with cache (only 1: intuition subst; auto with qarith; only 1: compute in H; only 1: discriminate).	0.11812210083	4
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	search with cache (only 1: auto with *).	0.133876800537	1
Coq.nsatz.Nsatz.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.114383935928	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0873930454254	1
Coq.omega.OmegaLemmas.Zred_factor1	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0737731456757	12
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	search with cache (only 1: now Z.nzsimpl).	0.47460603714	19
Coq.omega.OmegaLemmas.Zred_factor4	40	12.11	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	4.46626186371	909
Coq.omega.OmegaLemmas.Zred_factor5	40	12	search with cache (only 1: now Z.nzsimpl).	0.105231046677	46
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.0298459529877	1
Coq.omega.OmegaLemmas.new_var	40	0.49.5	search with cache (only 1: intros; only 1: exists x; only 1: reflexivity).	2.75220680237	6223
Coq.omega.OmegaLemmas.OMEGA1	40	0	search with cache (only 1: Z.order).	0.0300288200378	1
Coq.omega.OmegaLemmas.OMEGA2	40	0.10.0.9	search with cache (only 1: destruct x; only 1: trivial; only 1: easy || now destruct y; only 1: easy).	3.22109007835	658
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	18.11	search with cache (only 1: intros Hx Hxy; only 1: now subst).	1.35324192047	757
Coq.omega.OmegaLemmas.OMEGA6	40	4.5.3.20.28	search with cache (only 1: intros LT -> EQ; only 1: destruct x; only 1: easy || now destruct 1; only 1: easy; only 1: easy').	26.297960043	10202
Coq.omega.OmegaLemmas.OMEGA7	40	2.18.11	search with cache (only 1: intros a b Ha Hb; only 1: Z.swap_greater; only 1: Z.order_pos).	5.48988604546	1128
Coq.omega.OmegaLemmas.OMEGA8	40	2.7.1.34	search with cache (only 1: destruct x; only 1: reflexivity; only 1: easy || now destruct y; only 1: now destruct 1 || trivial).	12.7035489082	1615
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0472781658173	4
Coq.omega.OmegaLemmas.OMEGA12	40	0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0391540527344	2
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.20183300972	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0616991519928	5
Coq.omega.OmegaLemmas.OMEGA16	40	5.1	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0861210823059	8
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0885350704193	2
Coq.omega.OmegaLemmas.OMEGA18	40	3.7.5	search with cache (only 1: intros H1 H2 H3; only 1: subst; only 1: auto with arith).	0.816399097443	249
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.1.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.168873071671	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	11.11.0.19	search with cache (only 1: destruct x; only 1: auto with relations; only 1: easy || now destruct y; only 1: easy || now destruct y).	3.86555314064	3743
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.1.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: auto; only 1: reflexivity; only 1: reflexivity).	0.0232992172241	7
Coq.omega.PreOmega.Z.rem_0_r_ext	40	1.7.3	search with cache (only 1: intro; only 1: subst; only 1: now destruct x).	0.0670280456543	104
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.1.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.023313999176	7
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0711622238159	3
Coq.btauto.Algebra.Decidable_complete	40	0.10.0	search with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.199388980865	117
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0807452201843	5
Coq.btauto.Algebra.Decidable_complete_alt	40	2.4.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl in *; only 1: intuition congruence).	0.0958931446075	15
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	0.0.0.1	search with cache (only 1: rewrite Pos.eqb_eq; only 1: split; only 1: auto; only 1: auto).	0.152378797531	55
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	1.1.1.8.0.0.0.1	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	8.03988099098	5235
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.26.12	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	15.0819699764	15032
Coq.btauto.Algebra.eval_extensional_eq_compat	40	17.3.1.0.2	search with cache (only 1: intuition; only 1: induction p; only 1: intuition; only 1: simpl; only 1: first [ intuition congruence | auto ]).	28.3511080742	21471
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	1.1.1	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0936319828033	6
Coq.btauto.Reflect.list_nth_succ	40	14.6.0.12	search with cache (only 1: intros k p var; only 1: intros; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).	24.3512048721	17803
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	3.3.3.0.1.0.3	search with cache (only 1: intros; only 1: induction n using Pos.peano_rect; only 1: reflexivity; only 1: rewrite list_nth_succ; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: auto).	31.6408240795	15955
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	12	search with cache (only 1: auto with arith).	0.0261788368225	46
Coq.funind.Recdef.Splus_lt	40	41	search with cache (only 1: auto with arith).	4.60605692863	9470
Coq.funind.Recdef.SSplus_lt	40	1.0.24.0	search with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_neq; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_add_r).	10.8972928524	27788
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0575752258301	3
Coq.setoid_ring.Rings_Z.Z_one_zero	40	3.1.0	search with cache (only 1: intro EQ; only 1: revert EQ; only 1: discriminate).	0.0568211078644	7
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	8	search with cache (only 1: assumption).	0.0127971172333	9
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0108530521393	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40	2.1.0.0.0.7.1.1.1	search with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	15.3899538517	2119
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	7.0.0	search with cache (only 1: intros; only 1: simpl; only 1: Esimpl2).	0.584208011627	26
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	3.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	0.026741027832	6
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.1.0.1.1.1.0.1.66	search with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	6.49111700058	5021
Coq.setoid_ring.Ring.bool_eq_ok	40	15	search with cache (only 1: destr_bool).	0.231622934341	144
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	1	search with cache (only 1: exact (Radd_ext Reqe)).	0.0308749675751	2
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.029886007309	2
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	3	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0317499637604	4
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	4	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0348210334778	5
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.0342679023743	1
Coq.setoid_ring.Field_theory.rsub_0_l	40
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40	1.23.23	search with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: trivial).	1.26821112633	1325
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.133712053299	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.164249897003	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	6.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.0624170303345	10
Coq.setoid_ring.Field_theory.PEpow_0_r	40
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.2.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.0505659580231	5
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.6.0.1	search with cache (only 1: destruct l1; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.468037128448	135
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	0.3	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.0570890903473	5
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	5.4	search with cache (only 1: simpl; only 1: easy || now destruct 1).	0.127050876617	24
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0456352233887	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0462319850922	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0445489883423	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	9	search with cache (only 1: exact eq_equivalence).	0.048248052597	19
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	2.10.0	search with cache (only 1: intros x y z; only 1: subst; only 1: reflexivity).	0.665400028229	340
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.1.0.2.0.0.0	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.239364147186	115
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	9.13.0.0.16	search with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intro m; only 1: intuition).	4.87878894806	8891
Coq.setoid_ring.Rings_R.R_one_zero	40	0	search with cache (only 1: exact R1_neq_R0).	0.0919308662415	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40	0.0.6.6.23.25.11	search with cache (only 1: rewrite Rlt_def; only 1: rewrite Rrepr_IZR; only 1: rewrite Rrepr_IZR; only 1: replace 2%Z with (1 + 1)%Z; only 1: exists 3%positive; only 1: reflexivity; only 1: reflexivity).	32.5137009621	46059
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	1	search with cache (only 1: reflexivity).	0.0206429958344	2
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	15.0.24	search with cache (only 1: split; only 1: intros; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit).	0.482547998428	1259
Coq.setoid_ring.Ring_theory.IDmorph	40	37	search with cache (only 1: firstorder).	0.835057973862	2366
Coq.setoid_ring.Ring_theory.Eqsth	40	6	search with cache (only 1: auto with *).	0.0203559398651	7
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	4.4.8	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.428565979004	264
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0901701450348	4
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	35	search with cache (only 1: firstorder).	1.40667891502	2832
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	20.7.20	search with cache (only 1: intros x y z; only 1: intro; only 1: firstorder).	2.96557378769	6950
Coq.setoid_ring.Ring_theory.SRopp_ext	40	2.7	search with cache (only 1: intros; only 1: auto).	0.0421330928802	24
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.4.3.4	search with cache (only 1: constructor; only 1: exact (SRadd_ext SReqe); only 1: exact (SRmul_ext SReqe); only 1: intros x y H; only 1: exact H).	0.287078142166	222
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	5	search with cache (only 1: reflexivity).	0.0221040248871	6
Coq.setoid_ring.Ring_theory.SRopp_add	40	2	search with cache (only 1: reflexivity).	0.0219528675079	3
Coq.setoid_ring.Ring_theory.SRsub_def	40	1	search with cache (only 1: reflexivity).	0.0217208862305	2
Coq.setoid_ring.Ring_theory.SRIDmorph	40	7.8.7.9.5.9.9.3	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: assumption).	3.71251988411	11140
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	15.6.16	search with cache (only 1: intros x y z; only 1: intro; only 1: firstorder).	1.55313205719	3373
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	16.6.3	search with cache (only 1: intros x y H; only 1: intro; only 1: firstorder).	0.617569923401	857
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	29.25	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	1.48666191101	2987
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	22.20	search with cache (only 1: intros; only 1: firstorder).	0.743458032608	1243
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	14	search with cache (only 1: assumption).	0.431181907654	258
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	6	search with cache (only 1: mrewrite).	0.122895956039	11
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.106554031372	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0297470092773	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0290610790253	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0291450023651	1
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	5	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0334379673004	6
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0303339958191	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.9.6	search with cache (only 1: intros a; only 1: destruct 1; only 1: rrefl).	1.1487159729	874
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.6.0.2.2.1.0	search with cache (only 1: intros [| ] [| ]; only 1: trivial; only 1: now try N.order'; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	5.87900400162	4086
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	1	search with cache (only 1: exact (Radd_ext Reqe)).	0.0314679145813	2
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0310688018799	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0312738418579	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0314390659332	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0311601161957	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.033478975296	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.440817117691	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	1.1.1.1	search with cache (only 1: induction x; only 1: simpl; only 1: norm; only 1: norm).	0.0620851516724	8
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0321719646454	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0321900844574	1
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0321581363678	1
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.034973859787	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	4.2.1.6	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	2.05047893524	266
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40
Coq.setoid_ring.Cring.cring_div_theory	40	4.1.0.0.1.0.2.1	search with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: subst; only 1: rewrite Z.mul_comm; only 1: reflexivity).	2.02672386169	712
Coq.setoid_ring.Cring.Zcri	40	21.0.9.27	search with cache (only 1: intros n; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: auto with zarith).	14.9318399429	5971
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.02312707901	1
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0263741016388	2
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0258519649506	2
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	1.6	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.113517045975	14
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	2.2	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.216958999634	21
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	6.1	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.229019165039	32
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	5.3.0.0.0.0.0.3.1.1.2.1	search with cache (only 1: revert l; only 1: induction P; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	30.2334599495	16468
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40	1.0.0.15.0	search with cache (only 1: intros; only 1: induction n; only 1: Esimpl; only 1: simpl; only 1: Esimpl).	28.5652079582	5820
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40	4.6.34	search with cache (only 1: generalize (Pos.sqrtrem_spec p); only 1: fix sqrtrem_spec 1; only 1: trivial).	11.8682370186	3317
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40	1.0.1.0.1.0.0.2.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change_no_check x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: now rewrite ?(rpow_pow_N pow_th)).	23.6797339916	1484
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.0418870449066	1
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.1.0.6	search with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.366652965546	74
Coq.setoid_ring.Ncring.ring_add_assoc1	40	0.12.1.0	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).	1.9389359951	580
Coq.setoid_ring.Ncring.ring_add_assoc2	40
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	5.0.0.1	search with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: assumption).	0.0679891109467	43
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.1.4.4.10	search with cache (only 1: red; only 1: intros; only 1: apply Q_Setoid; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.84487390518	830
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0480601787567	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00662803649902	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.7	search with cache (only 1: unlock; only 1: intuition).	0.0265719890594	18
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	8	search with cache (only 1: by case : {}k {}).	0.0106549263	9
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.9.10	search with cache (only 1: intuition; only 1: destruct H; only 1: auto).	0.089152097702	262
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.00931406021118	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.00796008110046	1
Coq.ssr.ssreflect.iffLRn	40	3	search with cache (only 1: intuition).	0.0197479724884	4
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.00916290283203	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	1	search with cache (only 1: Bool.destr_bool).	0.0321109294891	2
Coq.ssr.ssrbool.is_true_true	40	10	search with cache (only 1: by [  ]).	0.327692985535	21
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: by case).	0.128443956375	2
Coq.ssr.ssrbool.is_true_locked_true	40
Coq.ssr.ssrbool.negbT	40	3	search with cache (only 1: Bool.destr_bool).	0.00800395011902	4
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00828289985657	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.00799012184143	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.00815296173096	1
Coq.ssr.ssrbool.negbK	40	0	search with cache (only 1: by case).	0.106761932373	1
Coq.ssr.ssrbool.negbNE	40	4	search with cache (only 1: Bool.destr_bool).	0.0125789642334	5
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	13	search with cache (only 1: Bool.destr_bool).	0.069806098938	60
Coq.ssr.ssrbool.negbRL	40	9	search with cache (only 1: Bool.destr_bool).	0.0195119380951	10
Coq.ssr.ssrbool.contra	40
Coq.ssr.ssrbool.contraL	40	1	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0160570144653	2
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0129969120026	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0121018886566	1
Coq.ssr.ssrbool.contraT	40
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0130739212036	2
Coq.ssr.ssrbool.contraFT	40	13.9	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.59056520462	291
Coq.ssr.ssrbool.contraFN	40	14.8	search with cache (only 1: Bool.destr_bool; only 1: auto).	20.4751691818	255
Coq.ssr.ssrbool.contraTF	40
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0107100009918	1
Coq.ssr.ssrbool.ifT	40	3	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0162160396576	4
Coq.ssr.ssrbool.ifF	40	2	search with cache (only 1: by move {+}->).	0.142237186432	3
Coq.ssr.ssrbool.ifN	40	3	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0144109725952	4
Coq.ssr.ssrbool.if_same	40	3	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.164668083191	4
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case b).	0.378137111664	2
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.0766170024872	1
Coq.ssr.ssrbool.if_arg	40	1	search with cache (only 1: by case b).	0.033656835556	2
Coq.ssr.ssrbool.ifE	40	3	search with cache (only 1: by [  ]).	0.0572490692139	4
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.208372116089	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0140380859375	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.144260168076	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.3	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.0183110237122	5
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	1	search with cache (only 1: by case).	0.00932502746582	2
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0136570930481	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.016205072403	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0190570354462	1
Coq.ssr.ssrbool.pair_andP	40	6	search with cache (only 1: intuition).	0.0378649234772	7
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00925302505493	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00919890403748	1
Coq.ssr.ssrbool.negP	40	1	search with cache (only 1: by case b1; constructor).	0.0810821056366	2
Coq.ssr.ssrbool.negPn	40	1	search with cache (only 1: by case b1; constructor).	0.00953412055969	2
Coq.ssr.ssrbool.negPf	40
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	2	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0178389549255	3
Coq.ssr.ssrbool.norP	40	4	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0244789123535	5
Coq.ssr.ssrbool.implyP	40	4	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.014016866684	5
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by [  ]).	0.00864219665527	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.00862002372742	1
Coq.ssr.ssrbool.andbT	40
Coq.ssr.ssrbool.andbF	40	1	search with cache (only 1: by case).	0.0778300762177	2
Coq.ssr.ssrbool.andbb	40	1	search with cache (only 1: by case).	0.0113170146942	2
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0119168758392	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0157649517059	1
Coq.ssr.ssrbool.andbAC	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0193881988525	2
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0166220664978	1
Coq.ssr.ssrbool.orTb	40	1	search with cache (only 1: reflexivity).	0.00845789909363	2
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00856399536133	1
Coq.ssr.ssrbool.orbT	40	5	search with cache (only 1: Bool.destr_bool).	0.0122060775757	6
Coq.ssr.ssrbool.orbF	40	3	search with cache (only 1: by case).	0.01238489151	4
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00917601585388	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0110409259796	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0153720378876	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0152659416199	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.015310049057	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0229680538177	1
Coq.ssr.ssrbool.andbN	40	5	search with cache (only 1: by case : {}b {}).	0.0104269981384	6
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.00923418998718	1
Coq.ssr.ssrbool.orbN	40	6	search with cache (only 1: Bool.destr_bool).	0.0104079246521	7
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.00919580459595	1
Coq.ssr.ssrbool.andb_orl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0156290531158	1
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0158309936523	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0156280994415	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0156898498535	1
Coq.ssr.ssrbool.andb_idl	40	7.9	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.190621137619	154
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0152509212494	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.211368083954	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.218631982803	1
Coq.ssr.ssrbool.orb_idl	40	2	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0156271457672	3
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.015487909317	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.190492153168	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.34473490715	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0115110874176	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0121781826019	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0119290351868	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0118451118469	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0117671489716	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0118319988251	1
Coq.ssr.ssrbool.implybT	40	2	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0132429599762	3
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.00964593887329	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0766260623932	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.00961303710938	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.0112819671631	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0120260715485	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.012001991272	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0121099948883	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0576231479645	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0122230052948	1
Coq.ssr.ssrbool.implyb_idl	40	3	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0708010196686	4
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0158450603485	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0229229927063	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00848913192749	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00929808616638	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.0112030506134	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0113608837128	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0622909069061	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0153000354767	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0153260231018	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0230929851532	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0157659053802	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0157949924469	1
Coq.ssr.ssrbool.addKb	40
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0113759040833	1
Coq.ssr.ssrbool.addIb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0195081233978	2
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0173819065094	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by [  ]).	0.00838208198547	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.0116648674011	2
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0168900489807	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0122139453888	1
Coq.ssr.ssrbool.addbP	40	1.0.0.1.15	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.390587091446	233
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40	4	search with cache (only 1: by [  ]).	0.0101568698883	5
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	9	search with cache (only 1: by case : {}pT {}pp {}).	0.0146150588989	10
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	2	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.011659860611	3
Coq.ssr.ssrbool.unfold_in	40	5	search with cache (only 1: Bool.destr_bool).	0.00992798805237	6
Coq.ssr.ssrbool.simpl_predE	40	0	search with cache (only 1: by [  ]).	0.00882411003113	1
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.00897407531738	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	search with cache (only 1: by rewrite -mem_topred).	0.0325751304626	1
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	2	search with cache (only 1: by [  ]).	0.149288892746	3
Coq.ssr.ssrbool.in1W	40	4.15	search with cache (only 1: Bool.destr_bool; only 1: by [  ]).	1.01900100708	190
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0107431411743	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0113649368286	1
Coq.ssr.ssrbool.in1T	40
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0158541202545	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0173380374908	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0154750347137	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.113468885422	2
Coq.ssr.ssrbool.sub_in111	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.543223142624	3
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.370427846909	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.060986995697	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0400259494781	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0646770000458	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0155019760132	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0163650512695	2
Coq.ssr.ssrbool.subon1	40	3	search with cache (only 1: by move  {}=>? ?; auto).	1.02057409286	4
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	1.15858387947	1
Coq.ssr.ssrbool.subon2	40	5	search with cache (only 1: by move  {}=>? ?; auto).	0.884468078613	6
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	1.0627617836	1
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.157738208771	1
Coq.ssr.ssrbool.canRL_on	40	0	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.205345153809	1
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	1	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0642111301422	2
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.138803005219	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.018385887146	1
Coq.ssr.ssrbool.sub_in_bij	40
Coq.ssr.ssrbool.subon_bij	40	2	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.1484811306	3
Coq.ssr.ssrbool.sub_in2	40
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub1 sub; apply : {}sub_in111 {}).	0.0138659477234	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40
Coq.ssr.ssrbool.mono2W	40	2	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0350971221924	3
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	1	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.330391168594	2
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	1	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.185237884521	2
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.750027894974	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: firstorder).	0.00726413726807	1
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40	7	search with cache (only 1: now constructor).	0.0093719959259	8
Coq.ssr.ssrfun.fsym	40	0.3	search with cache (only 1: intros; only 1: by [  ]).	0.0136520862579	5
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	4	search with cache (only 1: by [  ]).	0.030944108963	5
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.172824859619	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.00955700874329	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.00947403907776	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.196229934692	1
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.374054908752	2
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.32722401619	1
Coq.ssr.ssrfun.canLR	40
Coq.ssr.ssrfun.canRL	40
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	8	search with cache (only 1: by [  ]).	0.558526992798	9
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	6	search with cache (only 1: by [  ]).	0.0736310482025	7
Coq.ssr.ssrfun.inj_can_sym	40
Coq.ssr.ssrfun.inj_comp	40
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	1	search with cache (only 1: auto).	0.00396490097046	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: auto).	0.00308394432068	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.00321888923645	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00382089614868	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now trivial).	0.00353598594666	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	16.5	search with cache (only 1: intros x y z; only 1: congruence).	0.885931015015	1467
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.0.3	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: intros; only 1: now simpl).	0.0626049041748	20
Coq.Vectors.VectorSpec.const_nth	40	4.1.3.1.9.0.15	search with cache (only 1: induction n; only 1: now simpl; only 1: generalize dependent n; only 1: refine (@Fin.rectS _ _ _); only 1: simpl; only 1: trivial; only 1: now simpl).	1.79648709297	2388
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	6.0.0.0	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intro n; only 1: now split).	0.0323021411896	19
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0263850688934	9
Coq.Vectors.VectorSpec.uncons_cons	40	1	search with cache (only 1: now f_equal).	0.0115690231323	2
Coq.Vectors.VectorSpec.append_comm_cons	40	1.0	search with cache (only 1: intros; only 1: now simpl).	0.01305103302	3
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	9.10	search with cache (only 1: fix even_spec 1; only 1: trivial).	6.50713419914	10040
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	0.9	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0585839748383	49
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0105109214783	1
Coq.Setoids.Setoid.Seq_sym	40	1.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: firstorder).	0.0123209953308	4
Coq.Setoids.Setoid.Seq_trans	40	3.0.0.0.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.161285877228	16
Coq.Setoids.Setoid.gen_st	40	3	search with cache (only 1: simpl_relation).	0.0134739875793	4
Coq.Bool.IfProp.Iftrue_inv	40
Coq.Bool.IfProp.Iffalse_inv	40	0.1.2.0.5	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: assumption; only 1: auto with bool).	0.061084985733	174
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	0.1.0	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.0100290775299	4
Coq.Bool.IfProp.IfProp_or	40	0.0.0.1.2	search with cache (only 1: destruct 1; only 1: left; only 1: auto; only 1: right; only 1: assumption).	0.0945639610291	159
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	1.0.9	search with cache (only 1: induction n; only 1: reflexivity; only 1: easy).	0.136487960815	95
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0377399921417	3
Coq.Bool.Zerob.zerob_false_intro	40	3.1.3	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: trivial).	0.0963861942291	27
Coq.Bool.Zerob.zerob_false_elim	40	6.1.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: now try Nat.order').	0.0792171955109	30
Coq.Bool.DecBool.ifdec_left	40
Coq.Bool.DecBool.ifdec_right	40	0.9.3.3.0.0	search with cache (only 1: intros; only 1: case H; only 1: intro; only 1: apply False_rec; only 1: auto; only 1: auto).	0.620779037476	3254
Coq.Bool.Sumbool.sumbool_of_bool	40
Coq.Bool.Sumbool.bool_eq_rec	40	4.4.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0200228691101	64
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00963997840881	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40
Coq.Bool.Sumbool.sumbool_not	40
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	3	search with cache (only 1: discriminate).	0.00750494003296	4
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00691485404968	1
Coq.Bool.Bool.eq_true_false_abs	40	3.3.5.9	search with cache (only 1: intro H1; only 1: elim H1; only 1: discriminate; only 1: discriminate).	0.0433070659637	429
Coq.Bool.Bool.not_true_is_false	40	1.6.1.6.9.7	search with cache (only 1: unfold not; only 1: intro z; only 1: intro H1; only 1: destr_bool; only 1: elim H1; only 1: destr_bool).	0.393339157104	1707
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0098180770874	2
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0133011341095	5
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0133578777313	3
Coq.Bool.Bool.leb_implb	40	1.1.1.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0150539875031	10
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.0111169815063	1
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00877118110657	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.0804381370544	1
Coq.Bool.Bool.eqb_true_iff	40	1.1.1.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0169448852539	8
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0209648609161	5
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.0107469558716	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0107581615448	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00853490829468	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00866794586182	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0108640193939	1
Coq.Bool.Bool.no_fixpoint_negb	40	1	search with cache (only 1: destr_bool).	0.00948715209961	2
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00863409042358	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00912618637085	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00939106941223	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0128281116486	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0127878189087	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0230529308319	5
Coq.Bool.Bool.orb_false_iff	40	1.1.1.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0511350631714	46
Coq.Bool.Bool.orb_true_elim	40	1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0168600082397	7
Coq.Bool.Bool.orb_prop	40	1.1.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0170831680298	8
Coq.Bool.Bool.orb_true_intro	40	0.1.0	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: assumption).	0.00933313369751	4
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.0109269618988	1
Coq.Bool.Bool.orb_false_elim	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0291290283203	22
Coq.Bool.Bool.orb_diag	40	2.0	search with cache (only 1: intros; only 1: destr_bool).	0.0094428062439	4
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.00901794433594	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00879693031311	1
Coq.Bool.Bool.orb_false_r	40	2.0	search with cache (only 1: intros; only 1: destr_bool).	0.00949597358704	4
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00875997543335	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00865507125854	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0106198787689	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0336050987244	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0209429264069	6
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0234260559082	5
Coq.Bool.Bool.andb_true_eq	40	1.2	search with cache (only 1: destr_bool; only 1: intuition).	0.078978061676	107
Coq.Bool.Bool.andb_false_intro1	40	1.0.0	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.00852108001709	4
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00931596755981	3
Coq.Bool.Bool.andb_false_r	40	0.2.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00954604148865	5
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00872993469238	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.00861096382141	1
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.00886082649231	2
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00869607925415	1
Coq.Bool.Bool.andb_false_elim	40	2.1.1.4	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0623140335083	76
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00881409645081	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0106310844421	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0145900249481	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0146980285645	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.014858007431	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0146300792694	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0147202014923	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0106470584869	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0108170509338	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00882792472839	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00879597663879	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00896501541138	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00741910934448	1
Coq.Bool.Bool.xorb_nilpotent	40	1	search with cache (only 1: destr_bool).	0.0169498920441	11
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.0105500221252	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0145981311798	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0113520622253	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0664801597595	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0160880088806	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0159518718719	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.015988111496	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.0110471248627	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0112328529358	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0115320682526	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0279669761658	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0178880691528	3
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0110619068146	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0109059810638	2
Coq.Bool.Bool.absurd_eq_bool	40	8.8.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0955059528351	202
Coq.Bool.Bool.absurd_eq_true	40	8.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0121040344238	10
Coq.Bool.Bool.trans_eq_bool	40	0	search with cache (only 1: destr_bool).	0.0152101516724	1
Coq.Bool.Bool.Is_true_eq_true	40	8.4	search with cache (only 1: destr_bool; only 1: intuition).	0.0890040397644	121
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00926685333252	1
Coq.Bool.Bool.Is_true_eq_right	40	0	search with cache (only 1: destr_bool).	0.00917291641235	1
Coq.Bool.Bool.eqb_refl	40	3	search with cache (only 1: destr_bool).	0.0112972259521	11
Coq.Bool.Bool.eqb_eq	40	1.1.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0131559371948	5
Coq.Bool.Bool.orb_prop_elim	40	1.1.1.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0149910449982	8
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0126280784607	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0145709514618	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0161941051483	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.2	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.018697977066	5
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto).	0.0159778594971	3
Coq.Bool.Bool.negb_prop_elim	40	2.0	search with cache (only 1: unfold not; only 1: destr_bool).	0.00957298278809	4
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0105781555176	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0104479789734	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0110499858856	3
Coq.Bool.Bool.andb_if	40	1	search with cache (only 1: destr_bool).	0.0114550590515	2
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00916695594788	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.0107598304749	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.0108258724213	1
Coq.Bool.Bool.reflect_iff	40	3.0.0.4.6	search with cache (only 1: intros; only 1: destruct H; only 1: intuition; only 1: intuition; only 1: destr_bool).	0.554321050644	955
Coq.Bool.Bool.iff_reflect	40	0.0.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0252850055695	15
Coq.Bool.Bool.reflect_dec	40
Coq.Bool.Bool.eqb_spec	40	9.6.6.4.3	search with cache (only 1: destr_bool; only 1: auto with bool; only 1: intuition; only 1: intuition; only 1: auto with bool).	0.539938926697	2039
Coq.Bool.BoolEq.beq_eq_true	40	0.7.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0286049842834	61
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40	8.1.1.0.0.2.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: firstorder).	17.9096710682	22090
Coq.Lists.ListSet.set_mem_correct1	40
Coq.Lists.ListSet.set_mem_correct2	40	0.0.0.0.0.0.8.0.3.0	search with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intuition; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto).	21.3559911251	26328
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40	1.1.2.8.1.0.0.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: unfold not; only 1: intuition; only 1: now subst; only 1: unfold not; only 1: auto with datatypes).	20.4328098297	45264
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	1.1.1.0.3.1.0.1.6.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: intro eq; only 1: rewrite eq; only 1: left; only 1: auto with datatypes; only 1: right; only 1: auto with datatypes).	8.58564805984	15718
Coq.Lists.ListSet.set_add_intro	40	0.0.7	search with cache (only 1: inversion 1; only 1: auto with datatypes; only 1: auto with datatypes).	0.0547559261322	59
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	1.0.0.0.0.1.0.0.0.1.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: tauto).	0.961790084839	856
Coq.Lists.ListSet.set_add_not_empty	40	3.3.9.0.4.0.0.2	search with cache (only 1: simple induction x; only 1: simpl; only 1: easy; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: discriminate).	8.49049687386	7643
Coq.Lists.ListSet.set_add_iff	40	0.0.0.0.2.0.4.0.0.5.0.31	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: intuition; only 1: left; only 1: now subst; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto).	14.086550951	23184
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40	0.1.0.0.0.3.0.1.0.1.0.0	search with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: intuition; only 1: congruence; only 1: congruence; only 1: simpl; only 1: intuition; only 1: now subst).	31.2385997772	25211
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	9.0.2.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).	1.13537812233	1089
Coq.Lists.ListSet.set_union_intro	40	0.0.1	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.290318965912	85
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40
Coq.Lists.ListSet.set_union_emptyR	40	1.1.1.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.163726091385	77
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	5.5.1	search with cache (only 1: split; only 1: eauto with datatypes; only 1: eauto with datatypes).	1.97976899147	1474
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	2.0.1.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: firstorder).	0.579819917679	14
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40
Coq.Lists.Streams.tl_nth_tl	40
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40	2.0.6.1.2.0.0.9.8	search with cache (only 1: unfold Str_nth; only 1: simple induction n; only 1: intros; only 1: case H; only 1: auto with datatypes; only 1: intros; only 1: case H0; only 1: simpl; only 1: auto).	18.6282770634	127131
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	0.0.2	search with cache (only 1: coinduction ltac:(Eq_trans); only 1: auto; only 1: auto).	0.00393509864807	5
Coq.Lists.Streams.Str_nth_tl_map	40	1.0.0.0.0.1	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: trivial).	0.00758790969849	17
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.0.3	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: apply IHn).	0.0168998241425	47
Coq.Lists.Streams.ForAll_map	40	0.0.3.4.0.0.9.4.0	search with cache (only 1: split; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: destruct H; only 1: auto; only 1: auto; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: destruct H; only 1: assumption; only 1: assumption).	0.480314016342	3284
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	0.2.0.0.0.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: intros; only 1: apply IHn).	0.00837182998657	21
Coq.Lists.Streams.Str_nth_zipWith	40	0.2.0.0.0.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0123550891876	27
Coq.Lists.List.nil_cons	40	8.0	search with cache (only 1: intros; only 1: congruence).	0.0155558586121	10
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	3.0.0.0.1	search with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: firstorder  discriminate; only 1: intros; only 1: firstorder  discriminate).	0.0259218215942	18
Coq.Lists.List.length_zero_iff_nil	40
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.0115211009979	1
Coq.Lists.List.hd_error_cons	40	3.2.1	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0152878761292	9
Coq.Lists.List.in_eq	40	3.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.0149109363556	5
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.013237953186	2
Coq.Lists.List.not_in_cons	40	4.5	search with cache (only 1: simpl; only 1: intuition).	0.0398139953613	26
Coq.Lists.List.in_nil	40	2.0.0	search with cache (only 1: simpl; only 1: intro H1; only 1: congruence).	0.0142068862915	5
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.011519908905	1
Coq.Lists.List.in_dec	40	23.3.1.9	search with cache (only 1: unfold not; only 1: induction l; only 1: auto; only 1: firstorder  discriminate).	9.65398192406	21857
Coq.Lists.List.app_cons_not_nil	40	1.2.1.7.2.14.6	search with cache (only 1: unfold not; only 1: intro H1; only 1: intros a H; only 1: elim H1; only 1: firstorder  discriminate; only 1: intros; only 1: firstorder  discriminate).	3.65264201164	13378
Coq.Lists.List.app_nil_l	40	0.0.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: reflexivity).	0.0159070491791	3
Coq.Lists.List.app_nil_r	40	3.20.4.0.1	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	3.23816895485	11159
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0217280387878	7
Coq.Lists.List.app_assoc	40	2.13.0.0.0.8	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: trivial).	3.31375479698	7115
Coq.Lists.List.app_assoc_reverse	40	1.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0342359542847	14
Coq.Lists.List.app_comm_cons	40	0.1.0	search with cache (only 1: intros l m n; only 1: simpl; only 1: f_equal).	0.0169069766998	4
Coq.Lists.List.app_eq_nil	40	3.1.4.2	search with cache (only 1: induction l; only 1: intros a r; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.257964134216	237
Coq.Lists.List.app_eq_unit	40	1.3.0.7.8.0.7.8	search with cache (only 1: destruct x as [| a l]; only 1: auto; only 1: destruct l as [| x l]; only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: intros; only 1: discriminate H).	30.6579351425	46396
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	0.6.0.0.7.6	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: simpl; only 1: f_equal; only 1: now destruct l).	1.68654108047	2153
Coq.Lists.List.in_app_or	40	3.0.3.0.0.3	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).	0.35812497139	385
Coq.Lists.List.in_or_app	40	7.1.4.0.7.0	search with cache (only 1: intros l m a; only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).	31.6150569916	52190
Coq.Lists.List.in_app_iff	40	4.0.1.6.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: intro n; only 1: simpl; only 1: intuition).	2.69774103165	4489
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0146608352661	2
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40	7.0.3.1.5.0.0.0.3.0.6	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: intros [| ] ?; only 1: trivial; only 1: simpl; only 1: inversion_clear H; only 1: induction n; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	8.37012696266	19538
Coq.Lists.List.nth_indep	40	1.0.1.0.0.3	search with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: simpl; only 1: induction n; only 1: auto with arith; only 1: auto with arith).	0.663933992386	347
Coq.Lists.List.app_nth1	40	4.2.0.0.5.0.1	search with cache (only 1: unfold lt; only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: induction n as [| n hn]; only 1: auto; only 1: auto with arith).	11.3047921658	15805
Coq.Lists.List.app_nth2	40
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.0.0.0.3.0.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: split; only 1: simpl; only 1: auto with arith).	0.211263179779	177
Coq.Lists.List.nth_error_app2	40	3.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	2.38909196854	2490
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	2.0.2.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: auto; only 1: simpl; only 1: auto with arith).	0.0353298187256	19
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	9	search with cache (only 1: auto).	0.0170729160309	17
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	8.0.0.5	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto; only 1: intuition).	0.657986164093	565
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0188360214233	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	2.5.0.3.1.30	search with cache (only 1: induction l; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	21.920648098	56160
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	1.0.1.3.0	search with cache (only 1: simpl; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0320789813995	27
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0	search with cache (only 1: auto).	0.0131149291992	1
Coq.Lists.List.concat_cons	40	0	search with cache (only 1: auto).	0.0137741565704	1
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0	search with cache (only 1: trivial).	0.0139689445496	1
Coq.Lists.List.in_map	40	0.0.0.9.1.0.0.0	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: intros; only 1: firstorder; only 1: subst; only 1: simpl; only 1: auto).	3.37036108971	5237
Coq.Lists.List.in_map_iff	40	4.0.3.1	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: intros; only 1: firstorder  (subst; auto)).	0.633198022842	220
Coq.Lists.List.map_length	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0244069099426	6
Coq.Lists.List.map_nth	40	0.0.1.1.0.0.0.2.0.0.3	search with cache (only 1: intros; only 1: revert n; only 1: induction l; only 1: intros; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: reflexivity; only 1: simpl; only 1: auto).	1.6890540123	2086
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.3.0.1.0.0.0.1	search with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: intros l2; only 1: simpl; only 1: rewrite IH; only 1: auto).	1.35512495041	1630
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	0.0.1	search with cache (only 1: destruct l as [| x l]; only 1: reflexivity; only 1: discriminate).	0.0192828178406	4
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.6.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.538172960281	595
Coq.Lists.List.concat_map	40	1.0.7.1.0.0.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	1.24397182465	1902
Coq.Lists.List.map_id	40	0.9.1.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.826585054398	1371
Coq.Lists.List.map_map	40	0.1.0.0.0.2.2	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.266550064087	280
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.0.4.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: apply map_ext_in; only 1: simpl; only 1: auto).	0.0364480018616	24
Coq.Lists.List.fold_left_app	40	0.0.0.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0222051143646	5
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.8.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	1.78926992416	2644
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40	2.15	search with cache (only 1: fix even_spec 1; only 1: intuition).	11.8787801266	4325
Coq.Lists.List.forallb_app	40	0.1.0.1.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: case (f a); only 1: solve [ auto ]; only 1: trivial).	0.044205904007	24
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	1.1.0.0.16.0.0.0.11	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	4.98245000839	13989
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	0.0.2.0.2.0.20	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	6.30793619156	6977
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0194540023804	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40	0.0.1.0.1	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	0.0373220443726	7
Coq.Lists.List.filter_ext	40	0.1.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.0188980102539	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	5.0.2.0.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a; only 1: destruct (split l); only 1: firstorder  (subst; auto)).	5.20477509499	5329
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40
Coq.Lists.List.split_length_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.147654056549	8
Coq.Lists.List.split_combine	40	0.2.0.2.16.1.0.1.1	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: rewrite IHl; only 1: auto).	14.6875519753	39550
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40	0.3.4.0.3.0.2.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct l'; only 1: auto; only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).	6.66491413116	9307
Coq.Lists.List.combine_length	40	0.0.2.0.0.0.0.0.1	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.612768888474	521
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	0.1.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0258841514587	4
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40	0.0.1	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0307011604309	4
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0188231468201	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0185329914093	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0	search with cache (only 1: auto).	0.0155611038208	1
Coq.Lists.List.incl_tl	40	11	search with cache (only 1: intuition).	0.0792059898376	92
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto).	0.0163640975952	1
Coq.Lists.List.incl_appl	40	6.1	search with cache (only 1: intros l m a; only 1: auto using in_app_or, in_or_app).	0.03169298172	14
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0170700550079	1
Coq.Lists.List.incl_cons	40	2.2.2	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.160038948059	11
Coq.Lists.List.incl_app	40	12.0.1.4	search with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: auto with datatypes; only 1: firstorder).	12.156400919	6560
Coq.Lists.List.firstn_nil	40	0.0.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0235140323639	7
Coq.Lists.List.firstn_cons	40	0.0.0.0.1.0	search with cache (only 1: simpl; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0265610218048	7
Coq.Lists.List.firstn_all	40	6.0.0.12	search with cache (only 1: induction l as [| x l IH]; only 1: auto; only 1: simpl; only 1: now rewrite IH).	0.336698055267	399
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.0154228210449	1
Coq.Lists.List.firstn_le_length	40	1.0.1.0.1.0.1	search with cache (only 1: induction n as [| k iHk]; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.117033958435	109
Coq.Lists.List.firstn_length_le	40	0.0.1.0.3.1.0.2.3.3	search with cache (only 1: induction l; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	3.85077500343	5308
Coq.Lists.List.firstn_app	40	0.2.0.0.2.0.2	search with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.72122502327	511
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.0161290168762	1
Coq.Lists.List.skipn_nil	40	0.0.0.1	search with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0233099460602	5
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.0160529613495	1
Coq.Lists.List.skipn_none	40	0.0.0.4	search with cache (only 1: induction l as [| v l IHl]; only 1: simpl; only 1: auto; only 1: auto).	0.0336019992828	14
Coq.Lists.List.skipn_all2	40	5.0.0.2.2.0	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: now intros []; only 1: simpl; only 1: auto with arith).	3.18096399307	2132
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40	0.0.0.2.0.10	search with cache (only 1: induction n; only 1: auto; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	3.51337909698	3636
Coq.Lists.List.skipn_length	40	0.0.0.4.0.0.0.0.1.1	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	1.64409184456	1610
Coq.Lists.List.skipn_all	40	8	search with cache (only 1: now induction l).	0.0606200695038	18
Coq.Lists.List.skipn_app	40	0.0.0.3.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	1.16546702385	753
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	2	search with cache (only 1: now intros []).	0.0189950466156	3
Coq.Lists.List.combine_firstn_l	40	0.2.0.2.0.2.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	4.38996505737	4803
Coq.Lists.List.combine_firstn_r	40	1.0.0.0.0.0.0.4.1.1.0	search with cache (only 1: induction l as [| x l IHl]; only 1: simpl; only 1: intros l; only 1: now induction l; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	2.92844581604	3589
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	4.0.1.0.15	search with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: firstorder).	32.3059909344	21116
Coq.Lists.List.Add_length	40
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40	1.32	search with cache (only 1: fix gcd_divide 1; only 1: auto).	13.756980896	17799
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.021311044693	2
Coq.Lists.List.NoDup_cons_iff	40	1.0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: inversion_clear 1; only 1: now constructor).	0.0304009914398	6
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	1.0	search with cache (only 1: intuition; only 1: inversion_clear H).	0.0364680290222	3
Coq.Lists.List.Exists_cons	40	8.3.3.4.0.0.6.11.6	search with cache (only 1: split; only 1: induction l as [| ? ? H]; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: firstorder).	11.7291209698	24472
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.1.2.1.1.0.1.1.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	2.62007594109	3768
Coq.Lists.List.Forall_inv	40	12	search with cache (only 1: abstract now inversion 1).	0.0630280971527	79
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	0.1.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0261318683624	4
Coq.Lists.List.Exists_impl	40	0.0.14.9.8.3	search with cache (only 1: intro Pdec; only 1: intros f g H l; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: auto; only 1: now apply Exists_cons_tl).	11.3435840607	31339
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40	0.4.3.1.0.0.3.4.0.1.1.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	38.0708620548	45614
Coq.Lists.List.Forall_impl	40	0.0.0.0.4.5.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.904958963394	1189
Coq.Lists.List.Forall2_refl	40	2	search with cache (only 1: constructor).	0.0187230110168	3
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	0.1.0.0.12.4	search with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.897994041443	1484
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	1.0.0.16	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto with arith).	0.760132074356	994
Coq.Lists.List.repeat_spec	40	0.0.3.0.4.8	search with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	0.765988826752	1081
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	1.1	search with cache (only 1: repeat intro; only 1: auto).	0.016998052597	4
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	2.0.1.0.1.0	search with cache (only 1: intro; only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0314269065857	12
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	3.0.0.0.1.5	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: eauto).	3.56698799133	1568
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.2.1.3.1.41	search with cache (only 1: induction l; only 1: repeat constructor; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	8.55066394806	11403
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0200309753418	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	13.0.10.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	8.95963311195	8890
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: eauto; only 1: auto).	0.0201859474182	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.0.4.1.0.1.1.1.0	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction l; only 1: inversion 1; only 1: inversion 1; only 1: auto; only 1: auto).	2.34523701668	2266
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.5.0	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.652997970581	390
Coq.Lists.SetoidList.InA_nil	40	3.0	search with cache (only 1: intuition; only 1: inversion_clear H).	0.030277967453	5
Coq.Lists.SetoidList.InA_alt	40	0.0.0.0.2.0.0.3.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	1.69404196739	1206
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	11	search with cache (only 1: now rewrite ?firstn_nil).	0.0672478675842	68
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.1.0.0.1.0	search with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto).	0.0358188152313	33
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	1.7.1	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.625580072403	73
Coq.Lists.SetoidList.In_InA	40	0.0.0.0.8	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder).	0.924902915955	195
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.3.1	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.03355884552	7
Coq.Lists.SetoidList.InA_double_head	40	3.3	search with cache (only 1: rewrite 2!InA_cons; only 1: tauto).	0.0474290847778	8
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.269153118134	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.7	search with cache (only 1: constructor; only 1: intuition; only 1: invlist InA; only 1: auto).	0.102412939072	39
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.0	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0481150150299	3
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.0	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0686690807343	3
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.5	search with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).	0.179095983505	8
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	0.0.12.6.0.1.9	search with cache (only 1: induction l; only 1: constructor; only 1: constructor; only 1: inv; only 1: transitivity y; only 1: auto; only 1: auto).	2.65118598938	5117
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40	1.6.5	search with cache (only 1: intro; only 1: rewrite <- H; only 1: auto).	0.230545043945	167
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	2.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: firstorder).	0.0250289440155	6
Coq.Lists.SetoidList.InA_InfA	40	2.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: auto).	0.0231420993805	6
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	1.5.0.1.0.0.0.6	search with cache (only 1: induction l1; only 1: intros; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: intuition; only 1: inv; only 1: auto).	3.49415516853	2754
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	0.0.0.0.24	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	7.74961900711	10941
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.3.0.2.1.11	search with cache (only 1: repeat red; only 1: induction 1; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	3.1834230423	4558
Coq.Lists.SetoidList.eqlistA_app	40	0.0.1.0	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.0218369960785	5
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.1.1.1.0.2	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.0792989730835	82
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	4.0	search with cache (only 1: decide equality; only 1: decide equality).	0.0486161708832	13
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.00655579566956	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.00656390190125	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0119318962097	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	1	search with cache (only 1: trivial).	0.00747418403625	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.00726294517517	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.00592994689941	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: trivial).	0.00656890869141	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0	search with cache (only 1: auto).	0.0061411857605	1
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: auto).	0.00830602645874	3
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.2.1.0.1.0.4	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: trivial).	2.5851559639	3806
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	3.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0206871032715	18
Coq.NArith.BinNat.N.pred_sub	40	0.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	0.0131521224976	7
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0451700687408	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0095808506012	3
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: auto).	0.00938200950623	4
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00733780860901	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	3.2	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.115751028061	56
Coq.NArith.BinNat.N.compare_le_iff	40	4	search with cache (only 1: reflexivity).	0.293658018112	107
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0919001102448	77
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	0	search with cache (only 1: reflexivity).	0.00843501091003	1
Coq.NArith.BinNat.N.succ_double_spec	40	4	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.360460042953	26
Coq.NArith.BinNat.N.double_add	40
Coq.NArith.BinNat.N.succ_double_add	40	1	search with cache (only 1: now destruct n, m).	1.08109712601	161
Coq.NArith.BinNat.N.double_mul	40	0.0.0.0.0.0.0.7	search with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	23.6585469246	4649
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.6	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0142450332642	9
Coq.NArith.BinNat.N.div2_succ_double	40	1	search with cache (only 1: now destruct n).	0.00941395759583	2
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	2.0.1.1.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: assumption).	0.278126955032	354
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	2.1.1.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0875260829926	96
Coq.NArith.BinNat.N.succ_double_le_mono	40	1.1.1.0.2.6	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: now apply eq_le_incl; only 1: easy; only 1: easy; only 1: easy).	0.342224121094	234
Coq.NArith.BinNat.N.compare_0_r	40	0.1	search with cache (only 1: apply le_ngt; only 1: apply le_0_l).	0.012866973877	3
Coq.NArith.BinNat.N.pow_0_r	40	1	search with cache (only 1: trivial).	0.00983214378357	2
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	1.12	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.282685995102	350
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	4.0.1.4.8.0.1.0.31	search with cache (only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now destruct p).	5.65349316597	12062
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	13.0.7.1	search with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: now destruct n).	0.583628892899	884
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.1.0	search with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0162811279297	5
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40	1.6.16.2.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	19.7778811455	20297
Coq.NArith.BinNat.N.sqrtrem_spec	40	6.16.22.10.12.6	search with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	14.5362229347	33254
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.2	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.012589931488	4
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	2.1	search with cache (only 1: rewrite <- ggcd_gcd; only 1: apply le_0_l).	0.189011096954	54
Coq.NArith.BinNat.N.testbit_even_0	40	2.3.43.4.20	search with cache (only 1: rewrite <- (mul_0_r a); only 1: simpl; only 1: induction a; only 1: trivial; only 1: easy).	7.15764808655	18195
Coq.NArith.BinNat.N.testbit_odd_0	40	1	search with cache (only 1: now destruct a).	0.0127129554749	2
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.1.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0210092067719	5
Coq.NArith.BinNat.N.testbit_neg_r	40	10	search with cache (only 1: now destruct n).	0.283797979355	98
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.0115451812744	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40	4.13.0	search with cache (only 1: revert p' n; only 1: fix odd_spec 1; only 1: trivial).	4.10803699493	4128
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.4	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0247581005096	6
Coq.NArith.BinNat.N.lt_gt	40	1	search with cache (only 1: apply gt_lt_iff).	0.0162811279297	2
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	0.5	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0460629463196	7
Coq.NArith.BinNat.N.le_ge	40	1	search with cache (only 1: apply ge_le_iff).	0.0160188674927	2
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.3.1.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: simpl; only 1: order_nz).	0.11419916153	91
Coq.NArith.Ndec.Peqb_complete	40	2.7	search with cache (only 1: rewrite Pos.eqb_eq; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max).	0.0873308181763	23
Coq.NArith.Ndec.Peqb_Pcompare	40	0.9	search with cache (only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.125239849091	32
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0548610687256	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0557811260223	1
Coq.NArith.Ndec.Neqb_complete	40	3	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0752139091492	17
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	0.0.1.0.2.22.0.0.1	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: vm_compute in H; only 1: subst; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x end; only 1: constructor; only 1: simpl in *; only 1: auto).	19.7436649799	18717
Coq.NArith.Ndec.Nbit0_neq	40	3.0.22.12	search with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: intuition).	17.8581969738	16985
Coq.NArith.Ndec.Ndiv2_eq	40	0.2.8.5	search with cache (only 1: intros; only 1: eqb2eq; only 1: subst; only 1: reflexivity).	0.57656788826	343
Coq.NArith.Ndec.Ndiv2_neq	40	1.1.1.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0926830768585	7
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	1.0.1.1	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.209189891815	41
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	10	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0610389709473	21
Coq.NArith.Ndec.Nleb_antisym	40	4.0.0	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order').	0.132508039474	30
Coq.NArith.Ndec.Nleb_trans	40	0.0.0.0	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order').	0.0912578105927	4
Coq.NArith.Ndec.Nleb_ltb_trans	40	2.0.3	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.200724124908	38
Coq.NArith.Ndec.Nltb_leb_trans	40	2.0.11.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	2.66755390167	1894
Coq.NArith.Ndec.Nltb_trans	40	2.0.6	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.550061941147	65
Coq.NArith.Ndec.Nltb_leb_weak	40	1.1.15	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	1.38914895058	1349
Coq.NArith.Ndec.Nleb_double_mono	40	2.0.0.0.0.0.0.0.11.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: generalize (N.div_eucl_spec a b); only 1: destruct a as [| a], b as [| b]; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: trivial).	3.65238404274	2103
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	2.0.0.0.0.0.0.0.12.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: generalize (N.div_eucl_spec a b); only 1: destruct a as [| a], b as [| b]; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: trivial).	4.28537511826	3010
Coq.NArith.Ndec.Nleb_double_mono_conv	40	2.0.0.0.0.0.0.0.10.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: generalize (N.div_eucl_spec a b); only 1: destruct a as [| a], b as [| b]; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: trivial).	5.07796406746	3909
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	3.1.0.3.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	0.737665891647	398
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0678560733795	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40	3.4.5.3.2	search with cache (only 1: unfold Nleb; only 1: intros; only 1: apply leb_correct_conv; only 1: rewrite <- Nat.compare_lt_iff, <- N2Nat.inj_compare, N.compare_lt_iff; only 1: trivial).	1.81274008751	1176
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.1.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.162894010544	40
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	3.0.3	search with cache (only 1: induction a as [| p]; only 1: reflexivity; only 1: now try rewrite H).	0.0645308494568	11
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.0.1.0.0	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0786159038544	7
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.2.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0788671970367	8
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).	0.0677728652954	3
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.0	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).	0.0638229846954	3
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.3.1.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.483623027802	204
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.0.2.1.0	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.0729138851166	8
Coq.NArith.Ndigits.Nshiftr_nat_S	40	3.2	search with cache (only 1: simpl; only 1: now subst).	0.12591791153	30
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.046245098114	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	2	search with cache (only 1: auto with *).	0.0477221012115	3
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0462501049042	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.1.3.6.3.6.0.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: reflexivity; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	36.3030109406	30493
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	9.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).	0.693940162659	259
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	0.642622947693	213
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).	0.488497972488	185
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	1.1.0.11	search with cache (only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: now destruct n).	1.96882295609	1136
Coq.NArith.Ndigits.Ndouble_bit0	40	0.1.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: trivial).	0.0570111274719	5
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial).	0.0577759742737	4
Coq.NArith.Ndigits.Ndiv2_double	40	0.0.4.0.5.5	search with cache (only 1: intros a n; only 1: destruct a as [| [p| p| ]]; only 1: trivial; only 1: now try rewrite H; only 1: trivial; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.3870279789	673
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.6.1.1.4.0	search with cache (only 1: destruct n; only 1: now try rewrite H; only 1: destruct p; only 1: trivial; only 1: now try rewrite H; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	4.48719787598	2097
Coq.NArith.Ndigits.Ndiv2_correct	40	2.0.12	search with cache (only 1: intros [| n]; only 1: trivial; only 1: now destruct n).	3.1901910305	1813
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40	4.14	search with cache (only 1: fix odd_spec 1; only 1: trivial).	1.0717420578	700
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.1.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: easy).	0.0653140544891	5
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	8.83242893219	5361
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	1.05535888672	290
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.1.0.0.0.0.1.1	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.12311315536	788
Coq.NArith.Ndigits.Nless_def_4	40	0.0.1.0.1.0.0.0.0.3.2	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: reflexivity).	4.9450571537	2745
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.0.5.26.4	search with cache (only 1: intros a Ha; only 1: destruct a; only 1: now try rewrite H; only 1: exists p; only 1: trivial).	1.75053787231	2787
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.0.0.0.2.0.0.1.1.1.2.1.5	search with cache (only 1: apply Vector.rectS; only 1: simpl; only 1: intros; only 1: destruct a; only 1: trivial; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	10.518682003	6365
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.1.0.0.1.0.1.0.0.0.0.1	search with cache (only 1: destruct a; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: f_equal; only 1: simpl; only 1: rewrite IHp; only 1: auto; only 1: auto).	14.8253750801	2443
Coq.NArith.NArith.test	40	3	search with cache (only 1: N.order).	0.132923126221	21
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	2.0.0.1.0.2	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	0.622307062149	146
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	1.4.7.2.9.0.1.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	26.6866378784	9440
Coq.NArith.Nnat.N2Nat.inj_succ	40	6.0.1.0.2.2	search with cache (only 1: destruct a; only 1: simpl; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.683084011078	756
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.2.0.8	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.115311861038	102
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	3.0.0.1.0.2	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	0.657638072968	300
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0428700447083	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	4	search with cache (only 1: nat2N).	0.147667169571	5
Coq.NArith.Nnat.Nat2N.inj_pred	40	1.0.0.0	search with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: nat2N).	0.0490689277649	5
Coq.NArith.Nnat.Nat2N.inj_add	40	2	search with cache (only 1: nat2N).	0.0430159568787	3
Coq.NArith.Nnat.Nat2N.inj_sub	40	1	search with cache (only 1: nat2N).	0.0435359477997	2
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0398299694061	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0428800582886	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0398731231689	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0400829315186	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40	4.3.3.3.3.3.3.3.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	9.96855092049	6600
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	42.1.0	search with cache (only 1: destruct x; only 1: simpl; only 1: destr_bool).	3.84085607529	6958
Coq.Strings.Ascii.eqb_sym	40	0.0.4.0	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: t_eqb; only 1: t_eqb).	0.0200908184052	8
Coq.Strings.Ascii.eqb_eq	40	0.0.0.2.3.1.5.7	search with cache (only 1: revert m; only 1: destruct m; only 1: destruct n; only 1: simpl; only 1: do 8 (case Bool.eqb_spec; [ intros -> | constructor; now intros [=] ]); only 1: split; only 1: reflexivity; only 1: reflexivity).	5.63560414314	2901
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, N.eqb_eq).	0.0118269920349	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.0167410373688	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	0.163438081741	10
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	6.0	search with cache (only 1: apply eq_true_iff_eq; only 1: t_eqb).	0.0587470531464	11
Coq.Strings.String.eqb_eq	40	19	search with cache (only 1: t_eqb).	20.9077541828	10421
Coq.Strings.String.eqb_neq	40	1	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0896310806274	11
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0466511249542	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	2.19.4.0.25	search with cache (only 1: elim s; only 1: reflexivity; only 1: simpl; only 1: intros x y z; only 1: t_eqb).	38.7174360752	11878
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	3.1.0.3	search with cache (only 1: induction s as [| ? ? IHs]; only 1: auto; only 1: cbn; only 1: apply f_equal, IHs).	0.11643409729	47
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	6.2.1.0	search with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.820407152176	215
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0539879798889	2
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	0	search with cache (only 1: trivial).	0.055447101593	1
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	2	search with cache (only 1: trivial).	0.0119278430939	3
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	12	search with cache (only 1: constructor).	0.0776069164276	46
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.137360095978	3
Coq.Reals.Ratan.pos_half_prf	40	0.0	search with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.110293865204	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40	1.1.0.2.4.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: simpl; only 1: ring; only 1: reflexivity).	3.90505814552	1079
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	11.0.1	search with cache (only 1: intros x xint; only 1: unfold Rdiv; only 1: lra).	2.08072519302	964
Coq.Reals.Ratan.pos_opp_lt	40	7.0	search with cache (only 1: intros; only 1: lra).	0.127177000046	9
Coq.Reals.Ratan.tech_opp_tan	40	3.1.1.2.3	search with cache (only 1: intros x h; only 1: unfold tan; only 1: rewrite sin_neg; only 1: rewrite cos_neg; only 1: lra).	17.4787437916	4928
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	3.9.1	search with cache (only 1: intros x n; only 1: pose proof (atan_bound x) as t1; only 1: apply pow_lt).	0.680819034576	527
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40	2.13	search with cache (only 1: fix odd_equiv 1; only 1: eauto using Rle_trans with rorders).	0.643231868744	355
Coq.Reals.RList.pos_Rl_P1	40	0.0.0.5.2	search with cache (only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto; only 1: auto).	0.577818870544	186
Coq.Reals.RList.pos_Rl_P2	40	0.0.21	search with cache (only 1: fix odd_equiv 1; only 1: intros; only 1: firstorder  (subst; auto)).	29.2661771774	19943
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40	0.2.0.4.0.2.4.2.0	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	7.87441301346	3283
Coq.Reals.RList.RList_P9	40	0.4	search with cache (only 1: fix odd_equiv 1; only 1: tauto).	0.109624862671	22
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	4.2.0.0.5	search with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	4.52229714394	2177
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	2.1.0.1.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).	0.346529960632	119
Coq.Reals.RList.RList_P19	40	6.9.7.5.12	search with cache (only 1: intro; only 1: induction l as [| r l Hrecl]; only 1: easy; only 1: unfold not; only 1: eauto).	9.88100504875	13527
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	2.1.1	search with cache (only 1: intros; only 1: f_equal; only 1: auto).	0.0839879512787	7
Coq.Reals.RList.RList_P22	40	0.6.4.0	search with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: reflexivity).	0.597519874573	319
Coq.Reals.RList.RList_P23	40	0.0.0.4.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: apply INR_eq; only 1: rewrite S_INR; only 1: ring).	1.6510219574	608
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.1.0.0.0.0.0.0.0.4	search with cache (only 1: simple induction l1; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	1.50153303146	588
Coq.Reals.RList.RList_P27	40	3.1.4.0.0.1.4	search with cache (only 1: simple induction l1; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: elim H; only 1: reflexivity).	2.41516399384	1088
Coq.Reals.RList.RList_P28	40	0.1.3.0.4.0	search with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	0.382520914078	187
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.1.2.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.187681913376	105
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.0504100322723	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.1.0.0.0.1.6	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.15345788002	134
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	1.0.1.1.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.343622922897	27
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.0.4.1.0.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: tauto; only 1: tauto).	0.909538984299	218
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	1.5.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	1.09326195717	209
Coq.Reals.Rbasic_fun.Rmin_left	40	6.0.1.3.2	search with cache (only 1: intuition; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: reflexivity; only 1: auto with real).	16.6946821213	2520
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.5.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.408788919449	17
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0846838951111	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.0.0.0.2.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.101635217667	10
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	5.4.0	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: intuition).	0.303329944611	116
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.380671024323	7
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.1.0.4.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.953060865402	265
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.2.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0861349105835	7
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.1.1.2.7	search with cache (only 1: intros r1 r2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	10.4392411709	2243
Coq.Reals.Rbasic_fun.Rmax_r	40	1.0.2.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: right; only 1: auto using Rle_antisym; only 1: auto with real).	0.988653898239	163
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.0.1.0.4	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: intros H1 H2; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: auto).	6.12629508972	1313
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.2.1.0.1.0.3	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: intros H1 H2; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	9.99697399139	2085
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0980429649353	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.4.1.2.1.1	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros r1 r2 H; only 1: intros x x' y y'; only 1: unfold Rle; only 1: apply Rmax_case_strong; only 1: intuition eauto  2; only 1: intuition eauto  2).	17.0375640392	1792
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.1.3.1.4	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	7.45798277855	1802
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.8.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).	0.468837022781	177
Coq.Reals.Rbasic_fun.Rcase_abs	40	2.1.13.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: eauto; only 1: auto with zarith real).	4.79858207703	1854
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	4.0.7.6	search with cache (only 1: intros a b; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	13.7021739483	6534
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40	0.0.0.3.0.0.0.3.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	27.3526299	5181
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.10.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	7.02301096916	1050
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	3	search with cache (only 1: <Coq.Strings.String.t_eqb>).	0.115093946457	16
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.0.2.2	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.311992883682	65
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	0.0.3.3.0	search with cache (only 1: simple induction 1; only 1: ring; only 1: simpl; only 1: intro; only 1: auto with real).	0.344567060471	60
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.14.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	3.2960600853	1145
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.5.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.214780092239	72
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0.1.2.0	search with cache (only 1: intros; only 1: destruct (Rle_dec a b) as [Hle| Hnle]; only 1: split; only 1: split).	0.131123065948	7
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	0.4.22.16	search with cache (only 1: intro n; only 1: fix odd_equiv 1; only 1: induction n; only 1: assumption).	4.3910908699	8984
Coq.Reals.Runcountable.tearing_sequences_projsig	40	3.0.9.26.0	search with cache (only 1: simpl; only 1: generalize eq_refl; only 1: fix even_odd_double 1; only 1: red; only 1: trivial).	12.3293159008	18136
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	6.3	search with cache (only 1: intros; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.145560026169	70
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	3	search with cache (only 1: auto with arith real).	0.0419189929962	4
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	1	search with cache (only 1: easy).	0.0427689552307	2
Coq.Reals.Rfunctions.pow_1	40	6.2	search with cache (only 1: intro; only 1: ring_Rsqr).	0.0897710323334	12
Coq.Reals.Rfunctions.pow_add	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.102757930756	10
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.0.0	search with cache (only 1: intro; only 1: simpl; only 1: auto with real).	0.0547478199005	3
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.4.0.4	search with cache (only 1: intros n m; only 1: intro; only 1: repeat rewrite S_INR; only 1: ring).	2.44438791275	786
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	5.0.1.0.0.2.0.0.0	search with cache (only 1: intro n; only 1: case n; only 1: intro; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto with real).	6.3178768158	2441
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.1.2.2.0.0.0.0.1.2	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: left; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	16.5225319862	6975
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.1.0.0.1.0.0.0.0.0.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: easy; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: rewrite Rmult_1_l; only 1: simpl; only 1: auto with real; only 1: ring).	2.53173208237	870
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	5.1.0	search with cache (only 1: intros; only 1: simpl; only 1: ring_Rsqr).	0.0938940048218	9
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	1	search with cache (only 1: reflexivity).	0.0476069450378	2
Coq.Reals.Rfunctions.powerRZ_1	40	0.5	search with cache (only 1: simpl; only 1: auto with real).	0.101807117462	25
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	2.0.1.2.0.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intro; only 1: auto with real; only 1: simpl; only 1: intro; only 1: auto with real).	2.53356218338	952
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.10352897644	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	3.0.0.1.0.2	search with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: simpl; only 1: auto).	0.873273849487	249
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	5.17.1	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rabs_pos).	8.94784283638	5235
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	9.5.1.4.0.0	search with cache (only 1: unfold R_dist; only 1: intro; only 1: split_Rabs; only 1: apply Rminus_lt, Rlt_asym in Hlt; only 1: ring; only 1: auto with zarith real).	22.8982150555	11313
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0284450054169	8
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	1.0.1.3.3.1	search with cache (only 1: intros; only 1: apply lt_0_INR; only 1: induction n; only 1: apply Nat.lt_0_succ; only 1: simpl; only 1: auto with arith).	1.19204092026	411
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	2.1	search with cache (only 1: intros; only 1: apply Nat.div2_double).	0.753589868546	5
Coq.Reals.Exp_prop.div2_S_double	40	3.0.1.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: apply Nat.div2_succ_double).	0.0650858879089	28
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	1.2.1.0.0.1	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: auto with real).	0.35694694519	94
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	8.0.2.4.0.3.11	search with cache (only 1: intros f x H X; only 1: unfold Rdiv; only 1: rewrite Rinv_mult_distr; only 1: field; only 1: now split; only 1: reflexivity || assumption; only 1: auto with real).	20.0117070675	16691
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	0.0.2.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0762958526611	6
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	12.1.5.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto with *).	3.13107299805	1152
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	0.5.11	search with cache (only 1: intro n; only 1: red; only 1: now right).	0.719219923019	669
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0651659965515	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.1.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0722110271454	6
Coq.Reals.RIneq.Rlt_not_eq	40	0.1.0.1.10.9	search with cache (only 1: intros n m H1 H2; only 1: eapply Rlt_asym; only 1: subst; only 1: eauto; only 1: subst; only 1: eauto).	11.2728238106	3930
Coq.Reals.RIneq.Rgt_not_eq	40	2.0.0.0.5.5.0	search with cache (only 1: red; only 1: intro x; only 1: intros; only 1: subst x; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	3.36652398109	2521
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.2.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.111202955246	20
Coq.Reals.RIneq.Rdichotomy	40	1.0.2.2	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.487677097321	33
Coq.Reals.RIneq.Rlt_le	40
Coq.Reals.RIneq.Rgt_ge	40	1.0.3.0.0	search with cache (only 1: intro; only 1: intro; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.974660158157	16
Coq.Reals.RIneq.Rle_ge	40	6.4	search with cache (only 1: intro f; only 1: firstorder  (subst; auto)).	5.24349212646	502
Coq.Reals.RIneq.Rge_le	40	4.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto; only 1: red; only 1: auto with real).	0.116161108017	15
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0608448982239	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.0506310462952	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0.1	search with cache (only 1: intros r1 r2; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0813548564911	6
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.2.0	search with cache (only 1: intros r1 r2; only 1: intro abs; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0676000118256	6
Coq.Reals.RIneq.Rnot_lt_le	40	5.0.1.0	search with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.119172096252	15
Coq.Reals.RIneq.Rnot_gt_le	40	0.3.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0801739692688	8
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.3.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0869650840759	9
Coq.Reals.RIneq.Rnot_lt_ge	40	8.1	search with cache (only 1: intros; only 1: eauto using Rnot_lt_le with rorders).	0.27023100853	132
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0667870044708	11
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	3.0	search with cache (only 1: intros; only 1: auto with real).	0.0675549507141	13
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.3	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.646143913269	67
Coq.Reals.RIneq.Rge_not_lt	40	1.0.1.0.2	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.143340110779	33
Coq.Reals.RIneq.Rle_not_gt	40	0.0.2.5.0.6.6	search with cache (only 1: intro; only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto; only 1: red; only 1: auto with real).	31.0355870724	9746
Coq.Reals.RIneq.Rge_not_gt	40	0.2.0	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.0808439254761	15
Coq.Reals.RIneq.Req_le	40	0.0.2	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0636930465698	5
Coq.Reals.RIneq.Req_ge	40	0.0.2	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0634760856628	5
Coq.Reals.RIneq.Req_le_sym	40	1.1.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0650389194489	5
Coq.Reals.RIneq.Req_ge_sym	40	1.1.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0648469924927	5
Coq.Reals.RIneq.Rgt_asym	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0721790790558	5
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.2.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.209444999695	6
Coq.Reals.RIneq.Rle_le_eq	40	0.2.0.1.0	search with cache (only 1: unfold Rle; only 1: intros a r; only 1: split; only 1: intuition; only 1: auto).	0.111752033234	8
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0614659786224	1
Coq.Reals.RIneq.Rlt_eq_compat	40	3.4.6	search with cache (only 1: intros; only 1: subst; only 1: eauto).	1.32207298279	381
Coq.Reals.RIneq.Rgt_eq_compat	40	1.0.4.4	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: auto with rorders).	1.51723885536	423
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	4.6.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: red; only 1: intuition eauto  3).	3.22792387009	1413
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.283741950989	95
Coq.Reals.RIneq.Rlt_le_trans	40	2.0.1	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.151774168015	34
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	1.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.216374158859	5
Coq.Reals.RIneq.Rgt_dec	40	0.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.113020896912	4
Coq.Reals.RIneq.Rge_dec	40	0.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.134577035904	4
Coq.Reals.RIneq.Rlt_le_dec	40	1.2.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.105508089066	6
Coq.Reals.RIneq.Rgt_ge_dec	40	2.3.2	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.113940000534	10
Coq.Reals.RIneq.Rle_lt_dec	40	1.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.53922700882	4
Coq.Reals.RIneq.Rge_gt_dec	40	0.2.0.2.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.377026081085	75
Coq.Reals.RIneq.Rlt_or_le	40	0.1.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.796603918076	58
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.2.2	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.117501020432	19
Coq.Reals.RIneq.Rle_or_lt	40	0.1.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.257782936096	22
Coq.Reals.RIneq.Rge_or_gt	40	0.2.0.2.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.372704982758	76
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.7.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.732764959335	57
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.7.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	11.4365530014	167
Coq.Reals.RIneq.Rplus_ne	40	10	search with cache (only 1: intuition).	1.54971385002	67
Coq.Reals.RIneq.Rplus_opp_l	40	5.0	search with cache (only 1: intros; only 1: ring).	4.89154720306	37
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	8	search with cache (only 1: auto with real).	0.402211904526	119
Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.6.2.4	search with cache (only 1: intro; only 1: intros x y H; only 1: destruct H; only 1: reflexivity).	2.61294102669	1274
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	2.1.0.1.0	search with cache (only 1: intros x y H; only 1: replace y with - x + x + y by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0894079208374	9
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	1.1.1.0.0.0.0.0.1.1	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	7.01669216156	1284
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	2.09857487679	61
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0707039833069	4
Coq.Reals.RIneq.Rmult_0_r	40	5.1	search with cache (only 1: intros; only 1: ring).	0.099828004837	21
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.166743040085	2
Coq.Reals.RIneq.Rmult_ne	40	2.2.0.2	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	1.4945640564	94
Coq.Reals.RIneq.Rmult_1_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0611870288849	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40	1.4.0	search with cache (only 1: intros; only 1: apply f_equal; only 1: auto).	0.178889036179	47
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.0.9.1	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: reflexivity).	4.27144503593	1297
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0668950080872	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0524950027466	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	4.4.2	search with cache (only 1: intro; only 1: intros a b; only 1: intuition).	0.97376704216	342
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0719728469849	3
Coq.Reals.RIneq.Rmult_plus_distr_r	40	1.3.2.0.1	search with cache (only 1: intros m n p; only 1: rewrite (Rmult_comm m p); only 1: rewrite (Rmult_comm n p); only 1: rewrite Rmult_comm; only 1: apply Rmult_plus_distr_l).	25.6819701195	232
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	search with cache (only 1: auto with real).	0.0516149997711	1
Coq.Reals.RIneq.Ropp_0	40	4	search with cache (only 1: ring).	1.28951501846	37
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.9.6	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.794139146805	440
Coq.Reals.RIneq.Ropp_involutive	40	7.4.11.5.1	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite RbaseSymbolsImpl.Ropp_def, Rquot2; only 1: rewrite RbaseSymbolsImpl.Ropp_def, Rquot2; only 1: ring).	32.5325279236	3646
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	1.1	search with cache (only 1: intros; only 1: ring).	1.93567705154	16
Coq.Reals.RIneq.Ropp_mult_distr_l	40	4.1	search with cache (only 1: intros; only 1: ring).	1.82195091248	22
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	1.0	search with cache (only 1: intros; only 1: ring).	1.67346715927	17
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0727281570435	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0735769271851	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0737750530243	2
Coq.Reals.RIneq.Rminus_0_r	40	4.1	search with cache (only 1: intros; only 1: ring).	0.0733630657196	7
Coq.Reals.RIneq.Rminus_0_l	40	1.0	search with cache (only 1: intro; only 1: ring).	0.068489074707	3
Coq.Reals.RIneq.Ropp_minus_distr	40	5.2.2	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.674494981766	80
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0729379653931	2
Coq.Reals.RIneq.Rminus_diag_eq	40	3.0.2.1	search with cache (only 1: intro; only 1: intros; only 1: rewrite H; only 1: ring).	0.104912996292	16
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.1	search with cache (only 1: intros; only 1: ring).	1.99591708183	16
Coq.Reals.RIneq.Rminus_eq_contra	40	1.4.0	search with cache (only 1: red; only 1: intros; only 1: auto with real).	0.244910001755	25
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.1.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0682649612427	5
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.1.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0703029632568	6
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.1	search with cache (only 1: intros; only 1: ring).	1.12403297424	17
Coq.Reals.RIneq.Rinv_1	40	17	search with cache (only 1: field).	0.384214878082	130
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40
Coq.Reals.RIneq.Rinv_mult_distr	40	4.6.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	2.49225091934	418
Coq.Reals.RIneq.Ropp_inv_permute	40	0.3.2	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.328224182129	25
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0784242153168	3
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.2.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.103590965271	7
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.2.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.188565969467	26
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	6.2.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.424265146255	110
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	2.1.2	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.154380083084	23
Coq.Reals.RIneq.Rplus_le_compat_l	40
Coq.Reals.RIneq.Rplus_ge_compat_l	40	0.4.1.2.6	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	2.0741508007	603
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.7.0.2.1.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  2; only 1: left; only 1: auto with real; only 1: rewrite <- H0; only 1: auto with zarith real).	16.3525829315	3670
Coq.Reals.RIneq.Rplus_ge_compat_r	40
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	2.3.1.1	search with cache (only 1: do 3 intro; only 1: do 3 intro; only 1: red; only 1: auto with real).	0.260167121887	35
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	1.0.1.2.1	search with cache (only 1: intros; only 1: red; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.188901901245	22
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.1.0.1.2	search with cache (only 1: intros; only 1: red; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.165272951126	16
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.14447593689	31
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	1.1.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0721819400787	5
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.124157905579	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	0	search with cache (only 1: eauto using Rlt_trans with rorders).	0.0562739372253	1
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.0.0.2.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.124920845032	8
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.2.0.0.1	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.613427877426	8
Coq.Reals.RIneq.Ropp_le_contravar	40	5.0.0.0	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2; only 1: auto with real).	0.328814029694	9
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.3.1	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.22620010376	14
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: ring).	0.274454116821	54
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.153715133667	33
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.07847905159	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.3.3	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.434490919113	58
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.582944869995	39
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.1.2	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.078705072403	7
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1	search with cache (only 1: eauto using Rlt_trans with rorders).	0.420465946198	20
Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.0.7	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.2468791008	91
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	3.9.0	search with cache (only 1: intros r r1 r2 H H0; only 1: apply Rle_ge; only 1: auto with real).	1.97728705406	695
Coq.Reals.RIneq.Rmult_ge_compat_r	40	3.9.2	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	4.98755717278	1781
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	1.17.3	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	22.3447740078	6664
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.1.1.0	search with cache (only 1: intros; only 1: replace r with - - r; only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.277069091797	43
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	4.0.2.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0942890644073	11
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	1.0.2.3	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.112947225571	10
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.1.0.1.3.0	search with cache (only 1: intros; only 1: elim H; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.998068094254	157
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.7.0.0.0.0.0.1.0.0	search with cache (only 1: destruct 1; only 1: left; only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: unfold Rle; only 1: auto with real).	20.2279889584	6275
Coq.Reals.RIneq.Rminus_ge	40	0.0.0.0.1.2.5.4.0	search with cache (only 1: destruct 1; only 1: replace r2 with 0 + r2; only 1: apply Rle_ge; only 1: replace r1 with r1 - r2 + r2; only 1: auto with real; only 1: ring; only 1: auto with real; only 1: red; only 1: auto with real).	6.9132668972	2832
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0652601718903	4
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.0	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0838890075684	5
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with r * / r; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real; only 1: auto with real).	4.15869998932	1159
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	4.0	search with cache (only 1: intro; only 1: apply Rlt_n_Sn).	0.0680160522461	11
Coq.Reals.RIneq.tech_Rgt_minus	40	2.1.0.0.3.3.4	search with cache (only 1: intros x y z; only 1: unfold Rminus, CReal_minus; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: rewrite <- Ropp_0; only 1: auto with real).	22.8983259201	8231
Coq.Reals.RIneq.S_INR	40	1.0.1.1.1	search with cache (only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: constructor).	0.241425991058	12
Coq.Reals.RIneq.S_O_plus_INR	40	0.0.0.0.0.0	search with cache (only 1: simpl; only 1: intro; only 1: case n; only 1: auto with real; only 1: intro; only 1: auto with real).	0.0856051445007	6
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40	0.1.10.0	search with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: discriminate).	0.866644859314	375
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	0.1.1.13	search with cache (only 1: intros x y; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	5.12466001511	2830
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	4.6.0.0.1.0.2.3	search with cache (only 1: destruct n; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	15.3801691532	6125
Coq.Reals.RIneq.opp_IZR	40	0.5.0.2.0.22	search with cache (only 1: intro z; only 1: case z; only 1: auto with real; only 1: auto with real; only 1: unfold IZR; only 1: auto with real).	4.79913401604	3030
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	2.1.2.1.3.4	search with cache (only 1: intros z1 z2 H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	7.86905503273	2036
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	1.3.0.1.2.3.2	search with cache (only 1: intros; only 1: destruct H0; only 1: replace 0 with 0 * r2; only 1: auto with real; only 1: auto with real; only 1: destruct H0; only 1: auto with real).	32.123942852	7381
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	7.3	search with cache (only 1: intros; only 1: ring).	0.103530168533	46
Coq.Reals.RIneq.double_var	40	16.0	search with cache (only 1: intro; only 1: field).	0.944007158279	395
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: apply Rmult_le_compat_r; only 1: auto with real; only 1: left; only 1: auto with real; only 1: auto with real).	0.266055822372	41
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	3.0.6	search with cache (only 1: intros x y H; only 1: unfold Rdiv; only 1: ring).	1.0247490406	283
Coq.Reals.RIneq.Rdiv_minus_distr	40	2.2.0.2	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: intros; only 1: ring).	0.265016794205	19
Coq.Reals.RIneq.Req_EM_T	40	0.0.1.6	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.259444952011	49
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40	0.3.6	search with cache (only 1: fix odd_equiv 1; only 1: intros n m le; only 1: auto with real).	0.780608177185	336
Coq.Reals.ArithProp.lt_minus_O_lt	40	1.0.0.2.0.1	search with cache (only 1: simple induction 1; only 1: apply Nat.lt_add_lt_sub_r; only 1: auto; only 1: intros; only 1: apply Nat.lt_add_lt_sub_r; only 1: auto with real).	0.210294008255	59
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	3.4.0	search with cache (only 1: intros; only 1: simpl; only 1: auto with arith).	0.369279146194	78
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	1.2	search with cache (only 1: intros; only 1: auto with real).	0.10352396965	5
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	7.0	search with cache (only 1: intros x x' y y'; only 1: reflexivity).	0.112350940704	14
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.0	search with cache (only 1: intro; only 1: ring_Rsqr).	0.0933690071106	3
Coq.Reals.Ranalysis2.quadruple_var	40	5.0.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: field).	0.154633045197	14
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	5.0.0.0	search with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: assumption).	0.117820978165	15
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	1.1.2.0	search with cache (only 1: intro; only 1: unfold included; only 1: intros A P h x; only 1: eauto).	0.373584985733	122
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	5.11.0.16.7	search with cache (only 1: do 2 intro; only 1: elim H; only 1: intros; only 1: apply H0; only 1: apply H0).	12.5883309841	16242
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.0.8	search with cache (only 1: unfold open_set, interior; only 1: intros; only 1: elim H).	0.108077049255	22
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40	18.1.4	search with cache (only 1: intros []; only 1: simpl; only 1: firstorder).	20.9457218647	12866
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40	14.1.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: do 2 rewrite Rrepr_plus; only 1: ring).	16.0227530003	1640
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40	7.1.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_mult; only 1: do 2 rewrite Rrepr_mult; only 1: ring).	15.7029731274	258
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	2.24	search with cache (only 1: fix even_equiv 1; only 1: assumption).	40.0393128395	29200
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40	1.0.0.17	search with cache (only 1: fix odd_equiv 1; only 1: intro; only 1: intro; only 1: eauto using Rle_trans with rorders).	6.70217418671	2025
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	1.0.3.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).	0.182496786118	37
Coq.Reals.Rseries.Un_growing_shift	40	5.0.7.8	search with cache (only 1: intros; only 1: intro; only 1: simpl; only 1: auto with arith).	1.00879502296	810
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	2.5.6	search with cache (only 1: unfold continuity_pt, opp_fct; only 1: intros f0 X H0 H; only 1: intuition subst; try ring; auto with real).	5.28953385353	1229
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	1.5.0	search with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros f0 X H0 H; only 1: intuition subst; try ring; auto with real).	0.121282100677	17
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.0.0.5.3.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	3.58685994148	1178
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	0.7	search with cache (only 1: intros; only 1: reflexivity).	0.145920991898	22
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.945931911469	71
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.1.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.202339887619	6
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	48.3.13	search with cache (only 1: intros n m HR; only 1: generalize dependent m; only 1: eauto).	27.4741849899	42713
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.0.1	search with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.21323299408	15
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.13	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.312285900116	137
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.2236328125	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.13.3	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	1.79629182816	781
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.32.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	8.04429888725	6012
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.4.0	search with cache (only 1: intros; only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.115926980972	10
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	2.7.15	search with cache (only 1: intros P Pdec (n0, HPn0); only 1: fix ind_0_1_SS 1; only 1: firstorder).	37.4448568821	24367
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40	0.0.0.0.0.0.0.3.0.1.1.0.0.0.6.0	search with cache (only 1: intros; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: unfold R_dist; only 1: intros; only 1: elim (H eps H0); only 1: intros; only 1: exists x; only 1: intros; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with Un n - Un m; only 1: apply H1; only 1: assumption; only 1: assumption; only 1: ring).	26.8935790062	13825
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0950858592987	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	1.10.1.1.0	search with cache (only 1: unfold tan; only 1: pose proof (sin2_cos2 PI) as H; only 1: unfold Rdiv; only 1: rewrite sin_PI; only 1: apply Rmult_0_l).	16.1470780373	5574
Coq.Reals.Rtrigo_calc.sin_3PI2	40	0.0.0.1.5.0.0.4.4	search with cache (only 1: replace (3 * (PI / 2)) with PI + PI / 2; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	30.3304960728	11188
Coq.Reals.Rtrigo_calc.tan_2PI	40	2.0.3.1.2.9	search with cache (only 1: change_no_check 2 with (IZR (- -2)); only 1: unfold tan; only 1: unfold Rdiv; only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	4.06881284714	1260
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	0.0.0.2.0	search with cache (only 1: replace (PI / 6) with PI / 2 - PI / 3 by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.174636125565	7
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.115267038345	5
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.102047920227	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.113376140594	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.5.1.0.5.0.2	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI4; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: unfold Rdiv; only 1: ring).	18.4092187881	6334
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.1.3.3.3.0	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite sin_plus; only 1: rewrite cos_plus; only 1: rewrite cos_sin; only 1: replace (PI / 2 + PI / 4) with - (PI / 4) + PI by field; only 1: rewrite neg_sin, sin_neg; only 1: rewrite sin_PI; only 1: ring).	16.6285951138	4171
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.1	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.275456905365	68
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.2	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.270395040512	68
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0999350547791	2
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.10	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.700011014938	292
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.0417280197144	10
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0320210456848	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0313448905945	5
Coq.Reals.Ranalysis4.derivable_sinh	40	1.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0339841842651	6
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.9.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.196896076202	251
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.1	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.312366008759	53
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.47324180603	89
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.156803846359	22
Coq.Reals.DiscrR.IZR_eq	40	6.0	search with cache (only 1: intros z1 z2 H; only 1: congruence).	0.0873029232025	8
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.3.0.0.3.20.0	search with cache (only 1: intros; only 1: constructor 1; only 1: intros; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intros; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	18.7172009945	8624
Coq.Reals.ConstructiveReals.CReq_sym	40	3.0.23.2	search with cache (only 1: intros; only 1: red; only 1: destruct (CRltLinear R), p; only 1: firstorder).	30.200065136	19313
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	3.5.1.0.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: exact abs).	1.61496806145	705
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	8.1	search with cache (only 1: destruct x as [xn limx]; only 1: auto with arith).	0.0993840694427	65
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	0.0.1.2.0.0.0.0.0.4	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply CReal_mult_comm).	19.5901710987	3572
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	0.0.1.2.0.0.0.0.0.0	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply CReal_mult_comm).	9.7595949173	939
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1	search with cache (only 1: apply CReal_isRingExt).	19.4235188961	174
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	search with cache (only 1: apply CReal_isRingExt).	0.975295782089	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	1.0.0.3	search with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	2.11136698723	30
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	1.7.1	search with cache (only 1: intro x; only 1: ring_simplify; only 1: reflexivity).	11.8110489845	372
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0511019229889	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	6.5	search with cache (only 1: intros; only 1: ring).	8.15326499939	887
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0608370304108	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	3	search with cache (only 1: assumption).	0.0413179397583	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0648820400238	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	2.5.0	search with cache (only 1: intro; only 1: unfold Rsqr; only 1: ring).	0.30227804184	32
Coq.Reals.R_sqr.Rsqr_mult	40	5.1	search with cache (only 1: intros; only 1: ring_Rsqr).	0.247923135757	8
Coq.Reals.R_sqr.Rsqr_plus	40	5.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	0.0766339302063	8
Coq.Reals.R_sqr.Rsqr_minus	40	0.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	0.0646288394928	3
Coq.Reals.R_sqr.Rsqr_neg_minus	40	2.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0596010684967	4
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0548861026764	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	5.0	search with cache (only 1: intros; only 1: auto with real).	0.630138874054	28
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	4.2.1	search with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with real).	0.109095096588	33
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.7	search with cache (only 1: intros x n; only 1: ring_Rsqr).	0.173200130463	39
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0610768795013	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	3.3.2	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rsqr; only 1: auto with real).	2.01508402824	317
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	2.3.0.4.0	search with cache (only 1: intro; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: trivial).	2.10564517975	506
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	1.16.0.3	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: field; only 1: assumption).	15.0752410889	11122
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	3.1.0.1.0.0.2	search with cache (only 1: intros [| p| n]; only 1: exists 0%nat; only 1: reflexivity; only 1: exists (Pos.to_nat p); only 1: now rewrite positive_nat_Z; only 1: exists (Pos.to_nat n); only 1: easy).	2.00780510902	970
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.13.4.0	search with cache (only 1: intros a b f; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).	1.64388799667	872
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.1.1	search with cache (only 1: intro f; only 1: intros; only 1: apply derivable_pt_id).	0.117425918579	5
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	4.0.2	search with cache (only 1: intros y z H; only 1: unfold Rdiv; only 1: lra).	0.193913936615	68
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	3.13	search with cache (only 1: fix even_equiv 1; only 1: auto with arith real).	2.05094718933	1285
Coq.Reals.AltSeries.PI_tg_decreasing	40	5.19.6	search with cache (only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix odd_equiv 1; only 1: auto with arith real).	12.5775790215	9593
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0922651290894	5
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: unfold Rle in *; only 1: intuition; only 1: auto using Rle_antisym).	0.162339925766	5
Coq.Reals.Rminmax.Rmin_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: unfold Rle in *; only 1: intuition).	0.153783082962	6
Coq.Reals.Rminmax.Rmin_r	40	0.0.1.1.0.0	search with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec as [H'| H']; only 1: unfold Rle in *; only 1: intuition; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.95947599411	104
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.9.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	2.87296104431	803
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.107868909836	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.107351064682	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.0.2.0.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.168848991394	24
Coq.Reals.Rlimit.eps4	40	9.0	search with cache (only 1: intro; only 1: lra).	0.539124011993	94
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0773561000824	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0779659748077	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	23.2.1	search with cache (only 1: intros; only 1: intros a b; only 1: firstorder).	1.70970797539	1826
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	2.0.0.3.0	search with cache (only 1: unfold limit1_in; only 1: intros r1 r2 P H1 H2; only 1: unfold limit_in; only 1: simpl; only 1: firstorder).	0.677396059036	89
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	1.0.1.0.2	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.226969003677	60
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0933141708374	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0814599990845	4
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.5.0.1	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.92967414856	227
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.101163864136	9
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	10.3.0	search with cache (only 1: intros; only 1: rewrite <- (Rmult_0_r x); only 1: auto with real).	2.05773210526	406
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	2.0.4.1	search with cache (only 1: intros; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	0.291913032532	103
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	1.1.0.0.0.1.1.2	search with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	3.28282499313	1162
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40	4.1.1.9.4	search with cache (only 1: unfold not; only 1: intros [m maj]; only 1: intros a b; only 1: simpl; only 1: eauto with qarith).	11.7703440189	7342
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40	1.4.17	search with cache (only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto).	22.4148581028	15837
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	1.1.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.17436504364	19
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.221893072128	8
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40	4.4.12	search with cache (only 1: vm_compute; only 1: case PI_2_aux; only 1: intuition eauto  2).	11.4686470032	7632
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.106642007828	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	4.6.0.8	search with cache (only 1: pose proof (Alt_PI_ineq 0) as H; only 1: prove_sup0; only 1: destruct pi2_int; only 1: lra).	9.88923621178	4383
Coq.Reals.Rtrigo1.PI_4	40	0.2.10.1	search with cache (only 1: assert (lo1 : 0 <= 7 / 8) by lra; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	2.69646406174	1375
Coq.Reals.Rtrigo1.PI_neq0	40	3.7.8	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	1.01608395576	453
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	1.1.0.0.0	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.268852949142	19
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	1.3.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	0.136198997498	8
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.1.2.0.0.1.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	6.84499287605	2139
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.141881942749	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.118544816971	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.9.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	14.1467270851	3035
Coq.Reals.Rtrigo1.sin_PI_x	40	0.0.0.2.1.3.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_neg; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	5.5528459549	1318
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	0.0.0.9.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	3.24477815628	1051
Coq.Reals.Rtrigo1.cos_shift	40	0.0.0.4.0.1.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_neg; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	1.08115100861	271
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.7.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	1.16973805428	305
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.2.1.0.2.2.2	search with cache (only 1: destruct pi2_int; only 1: change_no_check 2 with (INR 2); only 1: prove_sup0; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: apply Nat.lt_0_succ).	12.7850430012	5074
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.0.0.12.1	search with cache (only 1: prove_sup; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	8.85710310936	4213
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.0.1	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.187101840973	48
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0890970230103	2
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with (p - q) / 2 - (p + q) / 2 by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.245804071426	9
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.1.0.0.0.1.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: pattern q at 3; only 1: replace q with (p + q) / 2 - (p - q) / 2; only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	13.6328828335	2865
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40	0.6.8	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: auto with arith real).	1.32389903069	583
Coq.Reals.PartSum.tech5	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0209949016571	2
Coq.Reals.PartSum.tech6	40	2.10.11	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: assumption).	24.4897520542	20452
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	3.0	search with cache (only 1: intros; only 1: assumption).	0.051570892334	23
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	5.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: trivial; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	1.08113002777	268
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	2.1.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0672090053558	10
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	1.1.2.0.4.2.0.1.0.0.1	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	32.6373641491	16769
Coq.Reals.PartSum.Rabs_triang_gen	40	1.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	3.92011785507	1510
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40	1.0.0.1.0.11.1.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption).	11.6159160137	16644
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros n; only 1: case_eq n; only 1: intros; only 1: apply Qeq_refl; only 1: intros; only 1: apply Qeq_refl; only 1: intros; only 1: apply Qeq_refl).	0.130378961563	9
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	1.1.1.0.1.1.0.1.0.0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	23.873912096	13671
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.6	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.257415056229	16
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	6.2.11.0	search with cache (only 1: intros; only 1: red; only 1: destruct H; only 1: intuition).	6.16428112984	4917
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	3.3.5.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	2.69202709198	1489
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	7.1.2.0.2.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z); only 1: apply CRealEq_refl; only 1: assumption).	3.07761192322	1246
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	5.92571306229	2863
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	8	search with cache (only 1: auto).	0.0527877807617	9
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	3.6	search with cache (only 1: intros (a, b) (c, d); only 1: trivial).	0.372620105743	90
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	9	search with cache (only 1: auto).	0.0797500610352	10
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.0.0.5	search with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.0995769500732	21
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.413520097733	9
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.1.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	1.61317300797	404
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	2	search with cache (only 1: apply CReal_plus_0_l).	0.0795438289642	3
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2	search with cache (only 1: reflexivity).	0.0817840099335	29
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate).	0.537852048874	86
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.132528066635	5
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.134152173996	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	1.13.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	1.15493297577	562
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.4.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.323261022568	52
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	5.0.1.3	search with cache (only 1: intros a b; only 1: split; only 1: auto with real; only 1: eauto with real).	0.872276067734	488
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40	1.1.2.0.0.5.0	search with cache (only 1: intros; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: split; only 1: ring; only 1: ring).	3.0138630867	1177
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.11.0	search with cache (only 1: intro; only 1: apply pow_nonzero; only 1: discrR).	0.518362998962	384
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	0.1.0.1.12.0.1.0.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	8.40297198296	7040
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: auto).	0.053964138031	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	2.0	search with cache (only 1: unfold empty; only 1: auto).	0.0624170303345	4
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.3.2.0	search with cache (only 1: intros; only 1: intuition; only 1: unfold assert_false, create; only 1: auto).	0.0799431800842	9
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0.0.0	search with cache (only 1: unfold create; only 1: intros; only 1: intuition).	0.07506108284	3
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40	1.0.0.0.1.0.0.1.0.0.1.0.0.1	search with cache (only 1: intros m1 m2; only 1: functional induction merge m1 m2; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	23.5923089981	6278
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.0.0.2	search with cache (only 1: induction m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.104865074158	7
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.107357025146	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	16	search with cache (only 1: inversion_clear 1).	0.145976066589	108
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40	0.0.13.4.6	search with cache (only 1: destruct m; only 1: intros; only 1: apply find_1; only 1: auto; only 1: auto).	4.51041793823	3238
Coq.FSets.FMapFullAVL.IntMake.find_2	40	5.14.10.7	search with cache (only 1: destruct m; only 1: intros m1 m2; only 1: red; only 1: auto using Proofs.find_1, find_2).	12.0568959713	12966
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	0.2.0.4.12	search with cache (only 1: intros g c0; only 1: intros m; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: eauto).	4.46853590012	3026
Coq.FSets.FMapFullAVL.IntMake.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	1.8.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.170917987823	74
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0548679828644	1
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.138546943665	19
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0793061256409	2
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.0667519569397	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	0.0.0.27.2.0	search with cache (only 1: intros x y z; only 1: intuition auto; L.MX.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: induction H; only 1: eauto; only 1: auto; only 1: auto).	11.4660191536	11784
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.1.1.0	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.454228878021	8
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	1.3.1.1	search with cache (only 1: split; only 1: intuition; only 1: intuition_in; only 1: intuition).	0.17071890831	10
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	0.3.1.1.3	search with cache (only 1: intros m x f; only 1: absurd (X.eq x x); only 1: intuition; only 1: now Z.nzsimpl; only 1: reflexivity).	0.583084821701	169
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	5.1	search with cache (only 1: intros; only 1: inversion 1).	0.0508961677551	8
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.2	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.1596159935	13
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in).	0.0547211170197	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0460479259491	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree; only 1: intuition_in).	0.0544710159302	2
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0467720031738	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	6.0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in; only 1: eauto with ordered_type).	0.0882539749146	11
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	2.1.1.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: generalize (H _ H0); only 1: generalize (H _ H0); only 1: order).	0.304599046707	36
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	6.0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in; only 1: eauto with ordered_type).	0.0887720584869	11
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	1	search with cache (only 1: eauto with ordered_type).	0.0386559963226	2
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	0.4.1.1.1.8	search with cache (only 1: intros x; only 1: intros; only 1: intro; only 1: absurd (X.eq x x); only 1: easy'; only 1: reflexivity).	1.21322989464	721
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.1.18.0.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: intuition_in; only 1: now destruct Zeq_bool; only 1: auto; only 1: auto; only 1: auto).	10.3275430202	13228
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40	1.1.2.0.6.0.0.4.0.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: intros e' eqfind; only 1: clearf; only 1: inversion eqfind; only 1: intuition_in; only 1: auto).	20.1567900181	9502
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	0.1.0.1.5.2	search with cache (only 1: intuition; only 1: functional induction find x m; only 1: easy; only 1: auto; only 1: auto; only 1: auto).	0.705474853516	461
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	4.14	search with cache (only 1: compute; only 1: intuition_in).	18.8253290653	3160
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	1.0.0.0.0.1	search with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0972819328308	8
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40	11.39	search with cache (only 1: intros n; only 1: now destruct n).	2.88780784607	3944
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	0.2.8	search with cache (only 1: simpl; only 1: inversion 1; only 1: reflexivity).	1.37653493881	398
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	3.1.2.2.1	search with cache (only 1: intros m x y e; only 1: induction m; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	1.50658583641	501
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	1.1.5.1	search with cache (only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: intuition_in).	1.02132296562	282
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.124792098999	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	1.0.2.0.19	search with cache (only 1: red; only 1: unfold Raw.empty, Raw.Proofs.Empty; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.777922153473	407
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40	4.1.1.11.8	search with cache (only 1: intros m Hm x y e; only 1: red; only 1: induction m; only 1: simpl; only 1: eauto using add_2, add_3).	18.8978970051	16411
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40	1.4.10.4	search with cache (only 1: intros m x y e; only 1: apply find_1; only 1: apply (is_bst m); only 1: auto).	2.34743618965	1531
Coq.FSets.FMapAVL.IntMake.find_2	40	21.0	search with cache (only 1: intros m x e; only 1: apply find_2).	1.41356396675	1397
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	0.0.0.16	search with cache (only 1: intros m x f; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	2.07907891273	1585
Coq.FSets.FMapAVL.IntMake.elements_3	40
Coq.FSets.FMapAVL.IntMake.elements_3w	40	0.3.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0706260204315	6
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0518069267273	1
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.131044864655	19
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.1.1.0.0.1.0	search with cache (only 1: destruct e2; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: auto).	0.110194921494	10
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	5.0	search with cache (only 1: intros; only 1: R.Proofs.intuition_in).	0.10206413269	16
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.0715780258179	2
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	12	search with cache (only 1: intuition).	0.417251825333	250
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	3	search with cache (only 1: intuition).	0.069347858429	13
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	1	search with cache (only 1: intuition).	0.0698580741882	11
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	2	search with cache (only 1: intuition).	0.0713329315186	12
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	3	search with cache (only 1: intuition).	0.0766940116882	21
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40	0.5.13.2.11	search with cache (only 1: intro n; only 1: intuition; only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition; only 1: exact (add_3 E H)).	7.21738910675	8956
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	1.3.1	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0869541168213	23
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	1	search with cache (only 1: intuition).	0.198807954788	14
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	0	search with cache (only 1: intuition).	0.0677859783173	1
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	1	search with cache (only 1: intuition).	0.0790460109711	14
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	3	search with cache (only 1: intuition).	0.0553860664368	12
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40	1.1.0.1.0.0.0.1	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	8.43816208839	1313
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	1.1.0.1.0.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	10.24710989	1770
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	11.0.0.1	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	0.462938070297	463
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	26	search with cache (only 1: firstorder).	8.63010811806	8164
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	2.1.4	search with cache (only 1: intros; only 1: red; only 1: apply eq_refl).	0.0787289142609	12
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.0	search with cache (only 1: red; only 1: auto).	0.0528259277344	3
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.0.6.7	search with cache (only 1: vm_compute; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: auto).	9.25771188736	1075
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	7	search with cache (only 1: firstorder).	0.439769983292	109
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	1.0.0.4.4	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.881664991379	214
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	1.1.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: intuition; only 1: eauto).	0.119204998016	7
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	1.0.3.1	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.355105161667	46
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	1.0.3.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.115396022797	14
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	3.1.0.2	search with cache (only 1: intros y z H1 H2; only 1: destruct y as [| b y']; only 1: auto; only 1: congruence).	0.253899097443	90
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	5.5.0.8	search with cache (only 1: intros; only 1: constructor; only 1: trivial; only 1: trivial).	0.502881765366	509
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	11.0.0.7	search with cache (only 1: intros x y H; only 1: generalize dependent y; only 1: unfold eq, Equal; only 1: firstorder).	2.49339008331	2303
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.1	search with cache (only 1: intros; only 1: <Coq.Strings.String.t_eqb>).	0.0487058162689	3
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	1.0	search with cache (only 1: unfold In; only 1: trivial).	0.0439710617065	3
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	1.0	search with cache (only 1: intro; only 1: reflexivity).	0.0451920032501	3
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	1.8	search with cache (only 1: vm_compute; only 1: intuition).	0.0826468467712	32
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	2.31	search with cache (only 1: fix even_spec 1; only 1: trivial).	13.529073	6966
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	1.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.152577161789	4
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	3.7.6	search with cache (only 1: intros; only 1: vm_compute; only 1: intuition discriminate).	0.331161022186	261
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.1.4.5.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.987820863724	450
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.5.2.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.44411110878	155
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	0.0.0.4.14.0.0.12	search with cache (only 1: intros n m p; only 1: revert n; only 1: intros; only 1: subst; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	6.58825421333	6824
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.0.0.0.58.27	search with cache (only 1: intros; only 1: destruct b, b'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial).	9.2583899498	28661
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.4	search with cache (only 1: intros [| ] [| ]; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.104652881622	20
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40	4.4.4.2	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	0.29576921463	378
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0619509220123	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0618529319763	4
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0623209476471	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0615229606628	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0626239776611	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	0.0.19	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: trivial).	1.19001317024	1123
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	2.2.5	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition).	0.236751794815	99
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.2.0	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.0673100948334	5
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.16.13	search with cache (only 1: intros x y H; only 1: rewrite remove_spec; only 1: tauto).	14.3667771816	12623
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.078959941864	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.7.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: vm_compute; only 1: intuition congruence).	0.622690200806	234
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.1.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0682938098907	4
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0739979743958	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.9.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	1.15315079689	454
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.159244060516	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.1.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0733511447906	5
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0670630931854	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0696408748627	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.3.2	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.127374887466	34
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	1.7.1.10.1.11	search with cache (only 1: induction i; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: auto).	1.791711092	2572
Coq.FSets.FMapPositive.append_neutral_l	40	1.0.1.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.068244934082	10
Coq.FSets.FMapPositive.PositiveMap.gempty	40	0.0.0.1.51	search with cache (only 1: intros n; only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	2.0412299633	4514
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.0706381797791	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.0.0.0.1	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: reflexivity).	0.0809271335602	7
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.0.0.0.0.1	search with cache (only 1: induction i; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: reflexivity).	0.294088840485	64
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	0.23.3.5	search with cache (only 1: generalize dependent y; only 1: intros; only 1: induction H; only 1: auto).	11.6144969463	9084
Coq.FSets.FMapPositive.PositiveMap.find_1	40	0	search with cache (only 1: auto).	0.0460290908813	1
Coq.FSets.FMapPositive.PositiveMap.find_2	40	1.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0508558750153	3
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	1.1	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.058235168457	4
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.1.0.3	search with cache (only 1: intro; only 1: unfold MapsTo; only 1: rewrite gso; only 1: auto; only 1: auto).	0.241134881973	86
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.2.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.220972061157	45
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	2.0.3.6	search with cache (only 1: intros; only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.46155500412	277
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	0.2	search with cache (only 1: intros; only 1: intuition).	0.0669341087341	4
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	15.3	search with cache (only 1: intros; only 1: intuition).	0.451117992401	459
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.16.0.0	search with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	1.80938887596	1266
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	1	search with cache (only 1: intuition).	0.0950839519501	13
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.1.0.0.3.6.0	search with cache (only 1: split; only 1: intro; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: apply add_2; only 1: auto).	1.91731500626	1122
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	1.1.2.1	search with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.176852941513	38
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40	0.3.3.0.0.6.0.0.0.0.0	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_1; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_2; only 1: generalize (mem_in_iff m x); only 1: intuition).	15.4158899784	10587
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	0.0	search with cache (only 1: intros; only 1: auto with map).	0.0567421913147	2
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	1.0.3.8.1.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: auto with map).	4.70676493645	2256
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	1.2.0.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.168113946915	31
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto).	0.720731973648	105
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.0.0.4.0	search with cache (only 1: dintuition; only 1: rewrite Equal_mapsto_iff; only 1: split; only 1: auto; only 1: auto).	0.108742952347	9
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.179597139359	27
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	1.20.2.0	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: auto with map).	22.9373040199	13178
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.1	search with cache (only 1: unfold Equal; only 1: auto).	0.0581278800964	3
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	18.0.0.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: now f_equiv).	16.9113090038	7773
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.0.0.0.1.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.183581829071	46
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	3.0.0.0.0.2.0.6.8.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: intuition).	4.72550010681	2842
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	7.0.1.8.8	search with cache (only 1: intros; only 1: compute; only 1: intuition; only 1: eapply H; only 1: eauto).	4.79372596741	2844
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.342887163162	126
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40	0.0.0.0.0.8.12.1	search with cache (only 1: intros (x, e) (y, e'); only 1: compute; only 1: split; only 1: elim_comp; only 1: discriminate; only 1: elim_comp; only 1: auto; only 1: auto).	23.3501811028	9217
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	0.8	search with cache (only 1: red; only 1: inversion_clear 1).	0.0220561027527	13
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	3	search with cache (only 1: constructor).	0.0121967792511	4
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	5.1.0.0.0.5	search with cache (only 1: unfold Empty, empty; only 1: intros m; only 1: case m; only 1: auto; only 1: intros p l inlist; only 1: intuition).	4.01914405823	3953
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	0.0.2.0.0.0.1.0.2	search with cache (only 1: intros m Hm x y e; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: eauto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	12.0768969059	7348
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.0	search with cache (only 1: unfold PX.eqke; only 1: intuition).	0.0172278881073	2
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0126059055328	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: auto).	0.0190961360931	3
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40	0.0.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	29.9015600681	24327
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	7.2.2.9	search with cache (only 1: intros m; only 1: unfold Raw.PX.MapsTo; only 1: unfold Raw.PX.eqke; only 1: inversion_clear 1).	0.599256038666	699
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0159921646118	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0181241035461	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	1.4.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.0228509902954	8
Coq.FSets.FMapWeakList.Make.cardinal_1	40	1	search with cache (only 1: auto).	0.016086101532	2
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.0808651447296	4
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1.1	search with cache (only 1: red; only 1: unfold Subset; only 1: auto).	0.0718789100647	5
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	23.1	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	22.6061711311	5680
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.6.10.1	search with cache (only 1: red; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: Dec.fsetdec).	2.27733612061	891
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.0	search with cache (only 1: unfold Subset, Empty, impl; only 1: firstorder).	0.0676889419556	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.3.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.309396982193	25
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff s x), (FM.mem_iff s y), (FM.In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.134996891022	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	14	search with cache (only 1: intuition).	0.781893968582	287
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	4.1	search with cache (only 1: intros; only 1: auto with set).	0.08656001091	18
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0	search with cache (only 1: auto with set).	0.0396769046783	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.108722925186	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0845918655396	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.141619920731	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0377640724182	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.0490529537201	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0594019889832	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	0	search with cache (only 1: auto with set).	0.0389380455017	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	0.4.6	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.276485919952	86
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	2.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0503470897675	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	1.6.12	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	2.8803858757	2253
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	2	search with cache (only 1: auto with set).	0.038321018219	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	1	search with cache (only 1: auto with set).	0.112427949905	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0388720035553	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	0	search with cache (only 1: auto with set).	0.0374689102173	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0	search with cache (only 1: auto with set).	0.0377278327942	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	1.3.1	search with cache (only 1: intuition; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	0.218019008636	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	1.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.215219020844	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	3.14	search with cache (only 1: generalize (FM.mem_iff s x), (FM.elements_iff s x), (existsb_exists (FM.eqb x) (elements s)); only 1: intuition).	1.03649997711	455
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40	1.15	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	18.510956049	2257
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.0357410907745	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	4.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	2.49994301796	714
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	1.7	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.094799041748	34
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: auto with set).	0.0389170646667	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0435109138489	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0397350788116	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0391159057617	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.0386798381805	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0375080108643	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0364770889282	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0374689102173	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0375261306763	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.117569923401	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: auto with set).	0.0374979972839	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0409259796143	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0396420955658	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0387709140778	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.037938117981	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0382649898529	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0380570888519	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0382959842682	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40	0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.733495950699	72
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0388770103455	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0379118919373	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0938799381256	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.0372700691223	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	1	search with cache (only 1: auto with set).	0.0416510105133	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0374820232391	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0382809638977	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0395219326019	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	0.0.0.3.3.0.0.4	search with cache (only 1: intros; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: rewrite mem_iff; only 1: destruct (mem x s'); only 1: intuition; only 1: intuition; only 1: intuition).	14.2153320312	2819
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0495347976685	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	2.0.2.0.0.0.4.3	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	1.79667496681	769
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.0.0.0.0.9.5	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.806525945663	647
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.0423319339752	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	7.0.0.3.1	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.567517995834	398
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.1.1.1.1.3.1.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with set fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	1.01662707329	594
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	12.4.8.7	search with cache (only 1: intro; only 1: intro; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).	8.27425408363	7036
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.0.0.1.1.0.2.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.336143016815	95
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	3	search with cache (only 1: auto with set fset).	0.0710370540619	23
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	9	search with cache (only 1: solve_proper).	0.066220998764	20
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	3.1	search with cache (only 1: intros; only 1: auto with set).	0.0495038032532	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0421659946442	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.0.0.0.1.0.2	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	3.1279399395	443
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	6.2.2.0.11.2	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros a; only 1: auto with set).	1.49344587326	1309
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40	0.2.5.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	0.175882101059	34
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.1.0.1	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros; only 1: f_equal; only 1: auto).	0.061901807785	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	6.11.0	search with cache (only 1: intros; only 1: simpl; only 1: eauto).	0.229656934738	441
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	11.31	search with cache (only 1: simpl; only 1: eauto with set).	0.681399106979	2272
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	3.1.0.0.0.1	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	0.191370010376	141
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.1.0.0.1	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.019702911377	13
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	3.4.2.3.0.2.5	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	11.9036049843	19457
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.11	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.142249107361	232
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.5.1	search with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.018070936203	10
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	5.0	search with cache (only 1: intros; only 1: auto with *).	0.0726809501648	50
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.207816839218	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.1.3	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0385971069336	35
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0332059860229	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: firstorder).	0.0330801010132	11
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0342929363251	11
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0172388553619	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0184359550476	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0170891284943	4
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	1.0.0.0.0.1.1	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0781857967377	27
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0172109603882	4
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	search with cache (only 1: decide equality).	0.0137710571289	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	6.7.4.5.0	search with cache (only 1: intros; only 1: intros s x; only 1: intuition; only 1: rewrite <- (H _ _ H0); only 1: intuition).	2.89429497719	4688
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	2.0.1.0.1.2	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.88796710968	408
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.341812849045	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	1.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: easy).	0.0255079269409	8
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.021744966507	6
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	6	search with cache (only 1: solve_proper).	0.243427038193	21
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	15.2.4	search with cache (only 1: intuition; only 1: red; only 1: intuition).	1.28611803055	1284
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.1.1.0	search with cache (only 1: firstorder; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.20628118515	7
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.0.0.3.1	search with cache (only 1: red; only 1: intros; only 1: split; only 1: intuition; only 1: intuition).	0.0739760398865	9
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	7.1	search with cache (only 1: red; only 1: apply eq_sym).	0.0576031208038	10
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	3.2.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.15792298317	20
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0553090572357	1
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0781059265137	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.081062078476	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.064709186554	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0586760044098	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	1	search with cache (only 1: fsetdec).	0.0856759548187	2
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0867478847504	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	1	search with cache (only 1: fsetdec).	0.0901141166687	2
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	1	search with cache (only 1: fsetdec).	0.0689041614532	2
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: auto).	0.0430200099945	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.2.0	search with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.173696994781	7
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0908420085907	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0703310966492	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	5	search with cache (only 1: fsetdec).	0.222291946411	27
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	1	search with cache (only 1: fsetdec).	0.20019197464	2
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	7	search with cache (only 1: fsetdec).	0.64580488205	139
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	1	search with cache (only 1: fsetdec).	0.170382976532	2
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	1	search with cache (only 1: fsetdec).	0.146522045135	2
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	1	search with cache (only 1: fsetdec).	0.179574966431	2
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.119194984436	1
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.292929172516	2
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	0	search with cache (only 1: fsetdec).	0.114036083221	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.113405942917	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.149518013	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.134747028351	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.181817054749	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.136160850525	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	2	search with cache (only 1: fsetdec).	0.178945064545	3
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.31676697731	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	1	search with cache (only 1: fsetdec).	0.28954911232	2
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0678520202637	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0673000812531	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.103006124496	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0953140258789	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0933918952942	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0916318893433	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.121207952499	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	5	search with cache (only 1: fsetdec).	0.0891540050507	6
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0996768474579	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.124507904053	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.126882076263	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.150830030441	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.14950299263	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.209399938583	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.239773035049	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	5	search with cache (only 1: fsetdec).	0.210092782974	6
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	2	search with cache (only 1: fsetdec).	0.147802829742	3
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0848989486694	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0833630561829	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0633339881897	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0690140724182	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0886340141296	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0840139389038	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.128883123398	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0742890834808	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.138236999512	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.134110927582	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.198799133301	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.158351182938	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.7	search with cache (only 1: expAdd; only 1: fsetdec).	0.406518936157	24
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.267609834671	5
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	1.4	search with cache (only 1: expAdd; only 1: fsetdec).	0.38444685936	7
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.327285051346	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	2.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.287319898605	6
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	0.0.0.0.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.13925409317	27
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40	9.0.0.4.0.1	search with cache (only 1: intros; only 1: apply (fold_rec (P:=fun s _ => P s) (f:=fun _ _ => tt) (i:=tt) (s:=s)); only 1: firstorder; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: firstorder).	37.303440094	1382
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.2.0.2.3	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: reflexivity; only 1: exact eq_equivalence; only 1: fsetdec).	0.164223909378	61
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	3.3.5.1	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: fsetdec).	0.653739929199	471
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	0.0.0.0.0.3.18.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	20.1159901619	7840
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.5.1	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.168287992477	16
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	3.3.3.5.8.13.21.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: intuition; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	14.69039011	34246
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0.1	search with cache (only 1: apply cardinal_1; only 1: red; only 1: firstorder).	0.0887560844421	4
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	3.9.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.626079082489	256
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	3.4	search with cache (only 1: intro; only 1: intuition).	0.229427814484	45
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: fsetdec; only 1: auto with set).	0.117978096008	10
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.2.7	search with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	2.19301199913	820
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0	search with cache (only 1: auto with set fset).	0.048595905304	1
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0613868236542	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.169740915298	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.0444660186768	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.212658166885	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0533521175385	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	1	search with cache (only 1: fsetdec).	0.157464981079	12
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.10465502739	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.274784088135	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	6	search with cache (only 1: fsetdec).	0.0569698810577	7
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0918929576874	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	3.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.129738092422	5
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	1	search with cache (only 1: fsetdec).	0.123906135559	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	1	search with cache (only 1: fsetdec).	0.420919895172	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.192639112473	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	1	search with cache (only 1: fsetdec).	0.106996059418	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	1	search with cache (only 1: fsetdec).	0.640647888184	36
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.302580118179	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	8.0	search with cache (only 1: unfold Subset; only 1: intuition).	0.110121011734	19
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	11	search with cache (only 1: fsetdec).	0.200188875198	72
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	9	search with cache (only 1: fsetdec).	0.181398153305	25
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0973620414734	1
Coq.FSets.FMapList.Raw.empty_1	40	8.7	search with cache (only 1: intros x; only 1: inversion_clear 1).	0.252400159836	189
Coq.FSets.FMapList.Raw.empty_sorted	40	1	search with cache (only 1: constructor).	0.0130310058594	2
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	3.0.0.0.13	search with cache (only 1: unfold Empty, empty; only 1: intros m; only 1: case m; only 1: auto; only 1: inversion_clear 1).	10.7151629925	10243
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.1.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: inversion_clear Hm; only 1: auto).	8.91826891899	4503
Coq.FSets.FMapList.Raw.elements_1	40	0.0	search with cache (only 1: unfold PX.eqke; only 1: intuition).	0.0197079181671	2
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0146069526672	1
Coq.FSets.FMapList.Raw.elements_3	40	2.0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: auto).	0.0235259532928	6
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	15.4.1.2.12	search with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: intros; only 1: intuition).	27.5929260254	38376
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.1.3.0.0.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).	1.92356610298	925
Coq.FSets.FMapList.Raw.map_sorted	40	1.2.10.2.0.0.3	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: inversion 1; only 1: simpl; only 1: eauto).	30.4029119015	19981
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.1.1.2.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	1.05833411217	609
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0530941486359	11
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.0.4.7.0.9.0	search with cache (only 1: intros m x y e; only 1: compute; only 1: intuition; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: intuition; only 1: intuition).	11.1155250072	10816
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	0.1.2.14	search with cache (only 1: intros m; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.618414878845	579
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0193951129913	1
Coq.FSets.FMapList.Make.elements_2	40	1.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0229480266571	3
Coq.FSets.FMapList.Make.elements_3	40	0.7.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.0280020236969	10
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	1	search with cache (only 1: auto).	0.0197069644928	2
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	0.23	search with cache (only 1: fix odd_spec 1; only 1: intuition).	3.36062693596	4602
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	4.3.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0873639583588	98
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	2.0	search with cache (only 1: red; only 1: auto with sets).	0.00963187217712	4
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	4	search with cache (only 1: now induction d).	0.420150995255	184
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.0.8	search with cache (only 1: destruct n; only 1: auto; only 1: auto).	0.129379987717	38
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	4	search with cache (only 1: apply of_lu_double_gen).	0.0621461868286	5
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	0.0.0.0.0.0.0.0.0.0.0.19	search with cache (only 1: induction d; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	16.1160330772	1893
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0	search with cache (only 1: trivial).	0.0581529140472	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: auto).	0.0604450702667	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	1.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.147441148758	38
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	18	search with cache (only 1: now induction d).	6.55559206009	2111
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0116789340973	2
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	16.2	search with cache (only 1: simpl; only 1: now induction d).	1.33532094955	507
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.3.0.0.0	search with cache (only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: rewrite Unsigned.to_of; only 1: simpl; only 1: f_equal).	0.0234200954437	8
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	5.4.1.2.2.0	search with cache (only 1: apply Nbit_faithful; only 1: unfold eqf; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now rewrite Unsigned.of_to).	28.5541439056	17422
Coq.Numbers.DecimalN.Unsigned.to_of	40	5.8.2	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: now destruct (nzhead d) eqn:H).	4.10183215141	937
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	2	search with cache (only 1: now induction d).	0.0710709095001	3
Coq.Numbers.DecimalN.Unsigned.of_inj	40	2.11.5	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.824980974197	330
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	3.3.0.0	search with cache (only 1: exists (N.of_uint d); only 1: unfold N.to_int; only 1: apply Unsigned.to_of; only 1: now induction d).	0.146378040314	12
Coq.Numbers.DecimalN.Signed.of_int_norm	40	4.5.14	search with cache (only 1: destruct d; only 1: now induction d; only 1: now induction d).	39.7608368397	15093
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	8	search with cache (only 1: now subst).	0.0633809566498	24
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	0.1.7.4.6	search with cache (only 1: repeat red; only 1: simpl in *; only 1: intros n IH; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.14645409584	1418
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.16.0.0.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).	3.4639840126	2005
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.4.16.6	search with cache (only 1: intros; only 1: unfold Z.succ, Z.eq; only 1: simpl; only 1: now nzsimpl').	2.37921500206	1147
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	1.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.446923017502	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.2.0	search with cache (only 1: unfold Symmetric, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.115812063217	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	1.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.249367952347	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl).	0.107872009277	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.356018066406	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.1.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.434796094894	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.0.0.10.0	search with cache (only 1: intro n; only 1: destruct n; only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	4.78096485138	1131
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.234443902969	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.3.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: intro m; only 1: simpl; only 1: now nzsimpl).	0.512254953384	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.0.1	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.302880048752	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	1.1.3.1	search with cache (only 1: intros n H; only 1: apply le_succ_l in H; only 1: apply le_succ_l in H; only 1: false_hyp H lt_irrefl).	0.114596843719	30
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	0.2.0	search with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	0.0752830505371	20
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0880079269409	13
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0218529701233	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0213990211487	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0217549800873	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.3.0.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	0.0377130508423	8
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	1.0.2.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.106709957123	44
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	5.7.4.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	15.4851870537	4147
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	0.1.4	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (mul_0_r a); only 1: now apply mul_le_mono_nonpos_l).	0.210571050644	67
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.2.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0285608768463	14
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	0.1.4	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (mul_0_r a); only 1: now apply mul_le_mono_nonpos_l).	0.28204202652	82
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40	6.7.3.1.0.9.1	search with cache (only 1: intros n m H; only 1: intros; only 1: apply (mul_lt_mono_pos_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: rewrite mul_comm; only 1: order; only 1: order).	10.7451460361	11761
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: now try order').	0.502650022507	196
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.2	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.021509885788	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.4.4.1.3	search with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	4.20778608322	601
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.3.0	search with cache (only 1: intros; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	0.22490978241	34
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.2.1.0.0.1.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: order).	3.67059516907	1755
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	1.1.6.5.7.2	search with cache (only 1: intros x x' Hx; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: now f_equiv; only 1: order'; only 1: order').	22.6179490089	17149
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0667488574982	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0666790008545	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0766808986664	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0282368659973	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	2.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0294468402863	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0288369655609	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	4.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.028993844986	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	8.8.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.714398145676	533
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0291821956635	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.387299060822	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.3.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.157397031784	46
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.3.3	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.230020999908	44
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	16.2.1.2.18.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite testbit_eqb by order; only 1: apply eq_true_iff_eq; only 1: rewrite <- testbit_spec' by trivial; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	38.7006680965	26595
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	4.0.5	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.436392068863	119
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	2.4.2	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.432296991348	119
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0319528579712	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	1.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0448639392853	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	1.5.14.0	search with cache (only 1: intros a n; only 1: pose proof (log2_nonneg a) as H; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	3.41771912575	2823
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.8.1	search with cache (only 1: intros a; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.241407871246	80
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	15.0.0.10.0.2	search with cache (only 1: intro n; only 1: intros; only 1: intuition; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: now f_equiv).	10.3248641491	12396
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	2.0.3.0.5.3.1.0.3.0.5.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct_max n; only 1: trivial; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_l, mul_opp_r; only 1: destruct_max n; only 1: trivial; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_opp).	37.0707740784	58310
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.0113830566406	6
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	3.0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: intros; only 1: rewrite H; only 1: apply gcd_divide_iff; only 1: intros; only 1: rewrite H; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	2.87351584435	2172
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	2.7.0.0.0.3.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: apply gcd_divide_iff; only 1: rewrite H; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	11.2984089851	11349
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	1.3.1.1.9.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_1_l, le_0_1).	5.44769310951	8150
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.4.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0535268783569	27
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.3.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: trivial; only 1: apply gcd_divide_r).	0.058002948761	74
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	6.2	search with cache (only 1: intros n Hn; only 1: apply abs_nonneg).	0.0137422084808	19
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	1.1.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.00975799560547	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.4.0.7.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.165637969971	364
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0127129554749	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0119140148163	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	15.10.1.0.3.2	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply abs_nonneg; only 1: order; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	5.99807190895	7491
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.3.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0255298614502	20
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	2.1.0.0.1.0.1.0.1.1	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite H; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	4.92762303352	3339
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.7.0.1.0.2.0.0.2.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: apply lcm_divide_iff; only 1: rewrite H; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	7.68656110764	6382
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.6.1.1.0.15.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros a b; only 1: now apply divide_abs_l).	15.6875650883	15614
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0497968196869	14
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	2.30244398117	1220
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.8.0.0.0.10.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?add_le_mono_l).	22.4524879456	8517
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.76104688644	1392
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	0.7.1.0.1.0.0.6.1	search with cache (only 1: intro n; only 1: intros m H; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: apply min_r; only 1: now rewrite <- sub_le_mono_l; only 1: rewrite max_l by trivial; only 1: apply min_l; only 1: now rewrite <- sub_le_mono_l).	14.6777908802	5309
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.1.0.0.1.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	4.2185280323	3021
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	0.1.0.0.1.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	3.53684997559	2248
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	3.2.0.1.1.3.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	12.0396020412	10022
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	1.0.1.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: now apply mul_le_mono_nonpos_r).	1.53020906448	1084
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.8.2	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.239482879639	160
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.3.2	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0220561027527	8
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0882821083069	19
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.3.0	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.023148059845	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	6.3.4.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred m); only 1: now rewrite le_succ_l).	1.86937999725	1554
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.9.1.2	search with cache (only 1: intros n m p; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	1.18537688255	1341
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	3.0.7.1	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: order).	0.714422941208	466
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	1.1.0.0.1.0	search with cache (only 1: intro; only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: order).	0.0736169815063	26
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	1.0.1.0.1.8.1.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: symmetry; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	7.08299803734	5890
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	1.1.0.5	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.418648004532	402
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0427641868591	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.0.0.0.2.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply le_succ_l).	0.294352054596	73
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	1.5.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.37277007103	139
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.11.7	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.593178033829	537
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.2.2.13	search with cache (only 1: unfold sgn; only 1: intro n; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	5.43536901474	953
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0180420875549	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.5.0.6.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.560960054398	466
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	2.0.8	search with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.0624911785126	55
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.6.1.4	search with cache (only 1: intro; only 1: destruct_max n; only 1: auto with relations; only 1: now right).	1.98457694054	934
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	23.8.0.0.1.1	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: now rewrite opp_involutive).	21.7174589634	21244
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.0.0.0.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: apply abs_eq; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: now rewrite opp_nonneg_nonpos).	0.0350840091705	7
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	1.1.16.1	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	0.949740171432	1744
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0245571136475	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.1.3	search with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).	0.0275149345398	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.2.1.1.0.2.2.0	search with cache (only 1: intros; only 1: destruct_sgn x; only 1: rewrite sgn_pos; only 1: reflexivity; only 1: apply lt_0_1; only 1: now apply sgn_null; only 1: rewrite sgn_neg; only 1: reflexivity; only 1: apply opp_neg_pos, lt_0_1).	0.946433067322	800
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.10.0	search with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	0.995552062988	499
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0281419754028	7
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.0.1.0.2.0.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	3.91175317764	3437
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.1.0.1	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0132148265839	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.0.1.1.2.0.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	1.08258795738	901
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.1	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0133330821991	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0642738342285	31
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0619390010834	30
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	9.4.0.1.9.0.0	search with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply Private_NZDiv.div_small; only 1: intuition order; only 1: rewrite <- div_opp_opp by trivial; only 1: apply Private_NZDiv.div_small; only 1: now nzsimpl).	18.7257540226	28982
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.0576949119568	50
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0127241611481	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.013081073761	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	1.0.1.0.0.0.3.2.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition order; only 1: nzsimpl; only 1: now nzsimpl).	2.17126202583	1768
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.2.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.214759111404	131
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.0	search with cache (only 1: intros; only 1: auto using div_pos).	0.310481071472	58
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.3.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0705599784851	62
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.4.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).	0.534393072128	154
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	9.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	2.43326711655	939
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	1.3.2.3	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.922156095505	405
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	1.1.1.1.1.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.370215177536	75
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.2.1.2.1	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.667909860611	210
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0293951034546	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	14.7353758812	11370
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.3.9.0.5.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	12.491132021	4645
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.1.6.6.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: auto with relations; only 1: auto with relations).	24.2532830238	9219
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.2.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.617982149124	329
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.3.0.0.3	search with cache (only 1: nzinduct m; only 1: now nzsimpl'; only 1: intro m; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	1.0975818634	163
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.2.3.0.1.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).	1.59575796127	397
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.9.0.3	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	3.23059105873	850
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.5.0.0.0.2.0.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: rewrite <- add_opp_r; only 1: now nzsimpl; only 1: intro; only 1: rewrite <- 2!add_opp_r; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	25.4628081322	7616
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.2.0.0.1.0.16.0	search with cache (only 1: intros; only 1: intuition; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H).	6.05968308449	6620
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0314848423004	15
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.2.5.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_assoc).	0.354351043701	83
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	3.1.4.0.7.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	4.9553668499	1926
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	0.0.1.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.216993808746	58
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	1.1.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.13037109375	24
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.1.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.0247519016266	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	2.4.3.2	search with cache (only 1: intros n1 n2; only 1: intro m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_cancel_r).	3.24351716042	1466
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	11.14.2	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	4.18089103699	3308
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	1.6.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0657720565796	10
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.1.1.0	search with cache (only 1: intro n; only 1: intros; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0223309993744	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	2.3.0.0.0.0.5	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	2.80589103699	1246
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	8.2.0	search with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	0.815330982208	259
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	4.0.7.4.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now rewrite add_move_r, sub_0_l; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	5.2412109375	2434
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	4.2.0.2.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro p; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	2.11378097534	708
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	1.4.0.0.0.3.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	6.67030501366	1583
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	1.4.0.0.0.4.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	6.81826710701	1666
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	0.0.4.0.2.4.0.19.4	search with cache (only 1: intros n m; only 1: intros H; only 1: nzinduct n; only 1: rewrite !add_assoc; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r; only 1: intro; only 1: rewrite <- 2!add_opp_r; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	22.9499540329	11145
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.8.2.0	search with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.828175067902	1119
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	9.2.0	search with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).	0.823319911957	1136
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0646848678589	53
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.1.0.2.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.405552864075	238
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0137591362	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0136370658875	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.1.19.3.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	13.4144449234	13734
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	1.0.0.1.1.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.101100921631	48
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: auto; only 1: order; only 1: auto).	0.0710530281067	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.146103143692	81
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	4.11.3.11.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	28.9451270103	21210
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	1.0.1.1.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: rewrite add_cancel_l; only 1: intuition order).	0.170348882675	59
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	1.0.0.2.1.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0217998027802	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.1.0.1.1.1	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0255000591278	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0305750370026	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	13.1549870968	9324
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.2.5.0.4.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	7.88400888443	3091
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.15.7.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	35.69135499	18206
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.4.8.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: auto with relations; only 1: auto with relations).	11.1018161774	4461
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.3.3.3.0.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite (div_mod a n)  at 1 by order; only 1: rewrite <- add_assoc, add_comm, mul_comm; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite mod_add by trivial; only 1: now apply add_mod_idemp_l; only 1: auto with relations; only 1: auto with relations).	32.5133299828	13811
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	1.1.0.1.2.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.665080070496	508
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	2	search with cache (only 1: Z.order).	0.0444400310516	20
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.0.1.1.1	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	0.955204963684	429
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40	2.3.0	search with cache (only 1: intros x y; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: discriminate || simpl).	0.0810332298279	8
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	0.7.6	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.232690095901	124
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0743761062622	2
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40	0.7.0.7.2.1	search with cache (only 1: destruct x; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt; only 1: inversion H; only 1: reflexivity; only 1: inversion H; only 1: reflexivity).	31.7315661907	3707
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0	search with cache (only 1: reflexivity).	0.05899310112	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40	2.1.0.0.0.0.2.1	search with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: elim n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now try rewrite H).	1.79809308052	493
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.1	search with cache (only 1: destruct x; only 1: reflexivity).	0.0797138214111	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0	search with cache (only 1: reflexivity).	0.0595369338989	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	1.4.1.0.0.0.1	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	6.62609696388	1513
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.107211112976	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0808990001678	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0799679756165	2
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0765700340271	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	2.10.4.0	search with cache (only 1: destruct x; only 1: intro H; only 1: injection H; only 1: auto).	21.0740818977	808
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	15.19.3.13	search with cache (only 1: destruct x; only 1: simpl in *; only 1: compute; only 1: now intros ->).	15.0617640018	11381
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40	5.3.1	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.4960501194	149
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	3.7.4	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: reflexivity).	0.528932094574	291
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	1.1.0.0	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.0787138938904	6
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40	1.0.1.0.1.1.0.9.1.2	search with cache (only 1: intros; only 1: replace k with (k - size + size)%nat by lia; only 1: red; only 1: induction (k - size)%nat; only 1: rewrite nshiftl_size; only 1: rewrite nshiftl_size; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	14.1020979881	3606
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0699639320374	2
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0811169147491	2
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	1.7	search with cache (only 1: destruct x; only 1: auto).	2.11026406288	17
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0819339752197	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0624051094055	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	1	search with cache (only 1: reflexivity).	0.0618851184845	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: auto with zarith).	0.0656290054321	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	1	search with cache (only 1: reflexivity).	0.0681209564209	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	1	search with cache (only 1: reflexivity).	0.0633230209351	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.083573102951	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	1.0	search with cache (only 1: intros x y; only 1: auto).	0.0720689296722	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	5.0.0.0	search with cache (only 1: unfold add31; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: reflexivity).	0.108372926712	12
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0721120834351	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.2	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.203955888748	19
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	1.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.108373165131	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	1.3	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.330330848694	68
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	0.0.0.3.0	search with cache (only 1: unfold sub31; only 1: intros n; only 1: repeat rewrite phi_phi_inv; only 1: change_no_check [|1|] with 1; only 1: reflexivity).	0.418210983276	83
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	2.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0743110179901	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	3.4.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	3.34960889816	710
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	2.0.0.3.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite <- (phi_inv_phi x); only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: auto).	0.534138917923	185
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40	3.8.1.12.8	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: auto).	5.3185210228	4441
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	30	search with cache (only 1: lia).	0.820827007294	574
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.110512971878	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0727188587189	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.0.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.080934047699	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	1.1.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.10770201683	24
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0712108612061	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.1.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.0753140449524	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	7.1.3	search with cache (only 1: symmetry; only 1: unfold opp, to_Z; only 1: apply Zplus_mod_idemp_l).	1.38457298279	655
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	14.6.3.0.0	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite Zminus_mod_idemp_r; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	10.8041739464	10849
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	4.2.1	search with cache (only 1: intros; only 1: unfold mul, to_Z; only 1: auto with zarith).	0.171051979065	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	0.7.0.4.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: auto using Z.lt_gt with zarith).	1.45077300072	623
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	1.3.10.6.0.32	search with cache (only 1: intros n; only 1: intros h; only 1: generalize (proj1 (is_zero_spec n)); only 1: intros ->; only 1: reflexivity; only 1: auto).	20.4376449585	36739
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	search with cache (only 1: auto).	0.0596380233765	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.1.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	13.653345108	2896
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	0.0.0.8.2	search with cache (only 1: split; only 1: now apply Z.mod_pos_bound; only 1: apply Z.mod_le; only 1: auto; only 1: auto).	2.80869102478	341
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.8	search with cache (only 1: Z.swap_greater; only 1: Z.order_pos).	0.102096796036	19
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.0609710216522	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	4.9	search with cache (only 1: intuition; only 1: destr_eq H).	0.562422037125	85
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	7	search with cache (only 1: reflexivity).	0.0667970180511	8
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	1	search with cache (only 1: reflexivity).	0.0614380836487	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: auto).	0.0607419013977	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	63.8	search with cache (only 1: pattern a; only 1: intuition congruence).	4.02577018738	10184
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0717852115631	4
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0726571083069	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.2.0.19	search with cache (only 1: unfold eqo; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: congruence).	1.84575605392	2122
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.2.4.6	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: trivial).	0.524693012238	307
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	1	search with cache (only 1: apply subc_spec).	0.0619988441467	2
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	6	search with cache (only 1: apply sub_spec).	0.0768949985504	7
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0657889842987	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.1.1	search with cache (only 1: destruct 1; only 1: unfold eqm; only 1: reflexivity).	0.0777370929718	5
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.1052069664	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	3.0.1	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.144860982895	7
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	0.0.0.1.3	search with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: case eqbP; only 1: reflexivity; only 1: auto).	0.14851307869	34
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: trivial).	0.0635979175568	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.0.0.0.0.1.0	search with cache (only 1: destruct a, b; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: auto).	0.0952730178833	8
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0713601112366	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0696220397949	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	0.8.3.0.0.2	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	8.88040590286	3854
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.4.0.0.1	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: rewrite andb_false_r; only 1: auto).	0.121004104614	17
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	2.1.5.1.0.1	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lor_spec, orb_comm; only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	1.12193989754	575
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	4.8	search with cache (only 1: intros P Q H l; only 1: firstorder).	0.302613019943	112
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0670537948608	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.18.0.0	search with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	1.30244398117	918
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	1.36.0.0	search with cache (only 1: intros; only 1: zify; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: reflexivity).	2.94375705719	2907
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	18.0	search with cache (only 1: intros; only 1: now apply Fin.eqb_eq).	1.08423995972	625
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	1.3.2.0	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.170405864716	43
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	0.2.0.0.11	search with cache (only 1: apply Z.pow_gt_1; only 1: red; only 1: auto; only 1: red; only 1: reflexivity).	0.363703012466	293
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	1.17	search with cache (only 1: unfold base; only 1: auto with zarith).	0.454484939575	673
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	1.0.0.3.0.4	search with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: split; only 1: auto with zarith; only 1: apply gt_wB_1).	0.571043968201	199
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	1.4.0	search with cache (only 1: zify; only 1: simpl Z.add; only 1: trivial).	0.352658033371	48
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	4	search with cache (only 1: tauto).	0.0556280612946	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.1.0.0.0	search with cache (only 1: intro n; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.0982389450073	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.31.0.0	search with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply NZ_to_Z_mod).	20.3757400513	11788
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	6.0.0	search with cache (only 1: intro n; only 1: zify; only 1: reflexivity).	0.220887899399	9
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	search with cache (only 1: reflexivity).	0.0726690292358	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.0763669013977	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0704929828644	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	16	search with cache (only 1: parity_binop).	1.01247215271	640
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	16	search with cache (only 1: parity_binop).	1.02448797226	1719
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	4.11.1	search with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.91424202919	1665
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.0.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0117139816284	3
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	1.2.1.0.2.4.0.4.0.5.1.2	search with cache (only 1: intros; only 1: split; only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	8.46328902245	15053
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.3.0.0.13.2	search with cache (only 1: cases ltac:(n); only 1: left; only 1: now nzsimpl; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	4.90745902061	5997
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	3.1.6.0.7	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro; only 1: now rewrite pred_succ).	1.14435601234	1323
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	2.4.17.4.1.3.0.2	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: cases n; only 1: rewrite pred_0; only 1: now right; only 1: left; only 1: apply le_succ_l; only 1: now rewrite pred_succ).	27.4784729481	60099
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.1.2.2.0.4	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.604839086533	638
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	0.4.1.0.0.1.1.2.2.2	search with cache (only 1: intro; only 1: intro; only 1: cases n; only 1: rewrite pred_0; only 1: order; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: order).	17.1876699924	14302
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.2.0.0.0.3.3.3	search with cache (only 1: intros n m; only 1: induct n; only 1: rewrite pred_0; only 1: trivial; only 1: intros n IH H; only 1: apply le_succ_l; only 1: rewrite pred_succ; only 1: order).	1.51610994339	1511
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.1.4.9.1.2.0.4	search with cache (only 1: cases ltac:(n); only 1: intros n m; only 1: apply le_0_l; only 1: intros n m H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: rewrite pred_succ; only 1: order).	24.6690280437	10275
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	1.1.0.2.0.4.8.6	search with cache (only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intro m; only 1: rewrite lt_succ_r; only 1: rewrite pred_succ; only 1: order).	37.8743619919	33223
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.0.1.0.0.0.4	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: cases n; only 1: rewrite pred_0; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: now apply le_succ_l).	0.921370029449	927
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	4.2.0.0.4.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: nzsimpl; only 1: order).	0.477032899857	904
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	2.1.9.4.1	search with cache (only 1: intro H; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.649159908295	1351
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	4.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: auto').	0.0204639434814	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	4.0.0.2	search with cache (only 1: intros; only 1: apply mod_small; only 1: intuition; only 1: auto').	0.0697050094604	60
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.4.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0142059326172	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.6.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0150818824768	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.0.1.14.2.0.5	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: apply (neq_succ_0 0); only 1: now rewrite <- one_succ; only 1: now nzsimpl').	1.848279953	4492
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0384359359741	25
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0114018917084	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0111401081085	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	9.0.0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	0.32857298851	757
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	9.3.0.18.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	6.0902929306	15362
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	1.5.2.3.0.1.10.3.0.0.13.9.1	search with cache (only 1: intros; only 1: destruct (le_gt_cases b a); only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: order; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: rewrite lt_eq_cases; only 1: right; only 1: apply Private_NZDiv.mod_small; only 1: auto).	10.7217071056	36225
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0963859558105	77
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.10.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.101259946823	221
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.4.3.2.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.842104911804	779
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.3	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.308242082596	139
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	3.0.1.0.7.0.0.2.1.0.7.4	search with cache (only 1: intros; only 1: intuition; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: apply le_0_l).	16.5436449051	16689
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	5.0.10.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto').	3.24836802483	1713
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	9.1.0.10.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.746840000153	1182
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto').	0.0225241184235	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.10.1	search with cache (only 1: intros n m p H; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.50919079781	1258
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.1.11.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto').	1.23501610756	1002
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	1.2.5.2.2.6.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	23.1327910423	24814
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0120968818665	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	11.8	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.181179046631	252
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.1.5.3	search with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.10399389267	104
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	2.0.0.2.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: f_equiv').	0.0339198112488	10
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	47.0.5	search with cache (only 1: intro H; only 1: unfold def_add; only 1: now rewrite recursion_0).	32.5883860588	42131
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	6.19.3	search with cache (only 1: intro y; only 1: unfold def_mul; only 1: now rewrite recursion_0).	1.297301054	1756
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	6.8.6.1	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	1.95760393143	2048
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	3.30	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	3.01752114296	591
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.1.0.7.10.3	search with cache (only 1: intros; only 1: unfold even; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	1.59957194328	1874
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.14.0	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	1.87598919868	2574
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.2.0.0.0.0.2.1.0.6	search with cache (only 1: intros; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: auto; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	14.1016690731	8170
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	11.8.1	search with cache (only 1: intros x x' EQ; only 1: subst; only 1: now nzsimpl').	11.1175150871	13130
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	2.1.0.0.0.0.0.0.1.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: intuition; only 1: now try order').	1.25845098495	918
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.5	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0385370254517	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	1.5.0.0.7.8	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: order').	3.67088580132	3031
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.6.8.3	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	12.1226420403	1810
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.1.0.0.8.10.5	search with cache (only 1: intros a; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: now try order'; only 1: order'; only 1: order_nz).	14.8502988815	12013
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.028214931488	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0106821060181	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.2.0	search with cache (only 1: intros a0; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0336930751801	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.2.8.1	search with cache (only 1: intros a0; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.828382015228	395
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.786082029343	254
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0566391944885	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0576250553131	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.132167100906	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	0.1.10.0.0.1.6.10	search with cache (only 1: intros a Ha; only 1: intuition; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).	28.9910440445	30692
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0220520496368	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	1.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.304087162018	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0226149559021	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0255181789398	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	2.3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0284910202026	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0231230258942	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0236780643463	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.3.2.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0259139537811	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.1.1.0.0.0.0.1.0.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	1.55767083168	1320
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.4.5.0.0.6.0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	18.4441649914	19598
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	1.0.5.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.0834250450134	51
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.1.0.0.5	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.287667036057	484
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	1.24.0	search with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.406391859055	622
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	3.0.0.2.0.1.0	search with cache (only 1: intros n m; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: now nzsimpl).	1.43874311447	628
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.4.3.0.2.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	5.13609981537	3899
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	10.0.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_0_l 0); only 1: apply lt_lt_add_r).	1.76390194893	474
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	4.0.3.0.1.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: trivial; only 1: apply le_0_l).	2.55445122719	1035
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	7.0.0.2	search with cache (only 1: intros; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	1.74792003632	516
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.1.0.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0165131092072	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	1.0.2.2	search with cache (only 1: intro n; only 1: nzsimpl; only 1: now nzsimpl'; only 1: apply le_0_l).	0.104835033417	9
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.2.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	5.70499801636	2386
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.2.0.0.0.2.0.0.1.4.0.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: order; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: intuition order; only 1: now rewrite <- H).	23.4605469704	13785
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	0.1.1.5.0.2.2.0.0.0.2.0.2	search with cache (only 1: split; only 1: intro LE; only 1: destruct (lt_ge_cases b 0) as [Hb| Hb]; only 1: rewrite (pow_neg_r _ _ Hb); only 1: apply pow_nonneg; only 1: order'; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: order'; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	22.1003239155	21335
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	3.32141804695	847
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_r).	4.38680505753	956
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.2.0.0.1.0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	14.4501647949	9726
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	0.835529088974	273
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0	search with cache (only 1: simpl_relation).	0.00670409202576	1
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	7.5.0	search with cache (only 1: intros n; only 1: intro m; only 1: apply divide_mul_l, divide_refl).	0.85227894783	534
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.1.0.11	search with cache (only 1: unfold lcm; only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: now nzsimpl).	0.575950860977	557
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	1.1.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.00796699523926	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	1.5.1.1.2.5.0.1.3.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply le_0_l; only 1: intros; only 1: split; only 1: split; only 1: trivial using divide_1_l, le_0_1; only 1: trivial; only 1: intros (H, H'); only 1: trivial using divide_1_l, le_0_1).	5.06391215324	5743
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0161378383636	10
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	2.0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.446340084076	271
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.2.0.1.8.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_refl, le_0_l; only 1: trivial using divide_refl, le_0_l).	1.04739809036	1272
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	0.1.0.8.9.0.11	search with cache (only 1: induct ltac:(m); only 1: rewrite sub_succ_r; only 1: now nzsimpl'; only 1: intros m IH; only 1: rewrite sub_succ_r; only 1: rewrite IH; only 1: now nzsimpl').	21.680314064	22393
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.9.1.1.2.4.3	search with cache (only 1: intros; only 1: destruct (le_ge_cases n p) as [LE'| GE]; only 1: rewrite <- sub_0_le in LE'; only 1: rewrite LE'; only 1: apply le_0_l; only 1: apply le_add_le_sub_r; only 1: now rewrite sub_add).	36.1194880009	55210
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	3.2.1.2.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: intuition).	1.58739495277	492
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	3.0.6.3	search with cache (only 1: intro E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	0.599905967712	220
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.4.4	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl; only 1: now nzsimpl).	0.150636911392	36
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	4.0.0.1.3.1.11	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').	2.41646718979	1132
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.1.0.3.23.4	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	6.92473506927	3475
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	1.0.0.0.0.0.2	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: now nzsimpl; only 1: order; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: now nzsimpl).	0.28276014328	42
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.4.1	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	4.20041394234	2048
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.2.0.7.23.11.1.8	search with cache (only 1: intros; only 1: rewrite one_succ; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	37.32031703	19568
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.1.0.4.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.129863023758	112
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.0.0.4.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.129071950912	84
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.0.0.4.3.6	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.909682035446	1074
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	1.0.0.1	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1).	0.0109159946442	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.5.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.102720975876	106
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	1.0.2.0.0.1.8.3.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm).	26.931374073	10127
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	10.0.0.1.4	search with cache (only 1: intros a b Ha Hb; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: auto using mod_small).	2.49762201309	3013
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.2	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0738379955292	16
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.0.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0809550285339	18
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0270879268646	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.6	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.27016782761	384
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0794470310211	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.2.1	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.107074022293	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	2.7	search with cache (only 1: intros; only 1: now nzsimpl').	0.06769490242	24
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	13.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: firstorder).	0.402346134186	473
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	0.0.0.0.0.1.2.0.0.1.1.0.3.0.9.2.12.4	search with cache (only 1: split; only 1: simpl_relation; only 1: apply le_refl; only 1: intros n m p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).	15.3752989769	16331
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	1.0.0.5	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0277268886566	26
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	1.2.0.2	search with cache (only 1: intro; only 1: intros x y; only 1: apply lt_eq_cases; only 1: now right).	0.0243048667908	31
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0174968242645	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0189769268036	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0172030925751	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	3.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0190010070801	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	3	search with cache (only 1: intuition order).	0.0269060134888	36
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	2	search with cache (only 1: order).	0.02423787117	26
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	search with cache (only 1: order).	0.0228409767151	35
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.8.1	search with cache (only 1: intros n m p; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.156107902527	177
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	9.4.0.6	search with cache (only 1: intros n1 n2 H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: now f_equiv).	8.18290686607	6765
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	4.0.3	search with cache (only 1: intros n H; only 1: rewrite lt_succ_r; only 1: order).	0.129700899124	71
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	6.1.6.1.0.2	search with cache (only 1: intros; only 1: split; only 1: rewrite lt_succ_r; only 1: apply le_succ_l; only 1: rewrite lt_succ_r; only 1: apply le_succ_l).	7.7851960659	10097
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	3.2.6.1.2.0	search with cache (only 1: intro n; only 1: intro; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	5.25753593445	6979
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.0.2	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.073646068573	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.4.1	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0260338783264	14
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.1.4.0.6	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.183362007141	210
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	3.0.0.4.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.42648601532	234
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.1.7.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.377434015274	169
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	7.7.2.1.5.1.0	search with cache (only 1: intros; only 1: intuition; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto; only 1: order; only 1: order).	18.0712068081	13037
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	2.3.3.3.1	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.312737941742	345
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.135674953461	24
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	6	search with cache (only 1: intuition order).	0.120069980621	94
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0136339664459	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	3.1.5.0.0	search with cache (only 1: unfold decidable; only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: auto; only 1: intuition order).	0.485761880875	434
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.6.16.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	11.2799050808	22464
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	1	search with cache (only 1: intuition order).	0.0144050121307	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0140480995178	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.1.0.1.4	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: auto; only 1: intuition order).	0.395093202591	342
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.3.2.8.5.2.1.0	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: now left; only 1: intuition order; only 1: order).	2.94708395004	5706
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	1.0.1.0.0.0	search with cache (only 1: intros n H; only 1: split; only 1: rewrite lt_succ_r; only 1: order; only 1: rewrite lt_succ_r; only 1: order).	0.0270030498505	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	17.1	search with cache (only 1: intros RS' n; only 1: order).	0.343011140823	898
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40	16.4.2	search with cache (only 1: intros z Base Step; only 1: apply strong_right_induction; only 1: now apply rs_rs').	1.83661293983	6262
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	9.1.3.2	search with cache (only 1: intros x y z H1 H2; only 1: induction n as [| n IH]; only 1: auto; only 1: eauto with *).	4.65719604492	1544
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	17	search with cache (only 1: firstorder).	0.292313098907	973
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40	2.0.0.1.0.5.0.1	search with cache (only 1: simpl; only 1: intros; only 1: destruct (itersucc_or_itersucc init m) as (p, [H| H]); only 1: exists 0; only 1: destruct p; only 1: now simpl in *; only 1: destruct (Initial _ H); only 1: now exists p).	1.34120702744	1373
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	47.44	search with cache (only 1: simpl; only 1: firstorder).	0.786548137665	6170
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	19	search with cache (only 1: reflexivity).	2.69833397865	2158
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.14	search with cache (only 1: fix le_div2 1; only 1: now unfold ofnat).	1.64486718178	465
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.19.1.1	search with cache (only 1: induction n; only 1: intros; only 1: now rewrite PeanoNat.Nat.add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	3.52362012863	4306
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	7.1.11.20.4	search with cache (only 1: intro n; only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now nzsimpl).	1.6919260025	3684
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.1	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0564520359039	3
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.0.4.27.1	search with cache (only 1: intro n; only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl'; only 1: apply lt_le_incl, lt_0_1).	10.0519828796	4474
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	1.15.7	search with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	7.05767393112	4905
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	1.0.0.0.0.3.0	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.246443033218	198
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.0.3.3	search with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	0.446702957153	64
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.15.0	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	9.89759588242	3582
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	0.1.9.1.2.9.6	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: order; only 1: intros; only 1: intuition; only 1: exists 0; only 1: now nzsimpl).	4.0274450779	4466
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0125548839569	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	2.0.0.0.5.0.10.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	5.57014393806	6632
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0235741138458	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0127050876617	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	5.6.0.6.6.0	search with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	8.29185914993	10374
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.0.0.3.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.0154259204865	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.211041927338	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	1.1.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	2.27797102928	1035
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.9.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.655385017395	297
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.6.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.15357708931	47
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	1.4.4.0	search with cache (only 1: intros; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	1.13290119171	401
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	0.0247519016266	6
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	0.1.3.1.1.1	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	1.48066782951	721
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.2.0.0.11.2	search with cache (only 1: intros; only 1: nzsimpl'; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	6.72338414192	3197
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.100275993347	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.103017091751	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0265760421753	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0265979766846	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.0.1.1	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.0350909233093	9
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.2.0.0.0.3	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	1.58009195328	542
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	2.1.0.1.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0822100639343	10
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0176329612732	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.0.2.1.0.0.0.0.4.2.4.5.2	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: order_pos; only 1: split; only 1: order_pos; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	21.8675019741	13630
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.1.0.0.3.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.0218241214752	10
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	2.0.2.0.2	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.358036994934	118
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.0.0	search with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.0109770298004	3
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	3.0	search with cache (only 1: intros; only 1: firstorder).	0.0111181735992	5
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	2.0.1.3.10.1	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: firstorder; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: now f_equiv).	1.9646999836	2645
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	3.0.0.0.0.0.2.0.0.0.0	search with cache (only 1: intros n m p H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now nzsimpl).	4.63301682472	1265
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.1.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	1.74267292023	427
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.4.0.0.0	search with cache (only 1: intros n m p H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.0942749977112	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.1.2.0.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	0.0662739276886	10
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.072939157486	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0365881919861	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	2.4.4.8	search with cache (only 1: intro n; only 1: intro H1; only 1: rewrite eq_mul_0; only 1: tauto).	1.75564002991	2801
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0152089595795	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	17.3	search with cache (only 1: intros; only 1: now apply mul_lt_mono_nonneg).	1.21323394775	1250
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.2	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0288560390472	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	3.0	search with cache (only 1: Bool.destr_bool; only 1: reflexivity).	0.00984406471252	5
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	5.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: firstorder).	0.017422914505	16
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	6.0	search with cache (only 1: intros; only 1: intuition).	0.0255298614502	20
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	1	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0189731121063	2
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.3.0.0	search with cache (only 1: intros; only 1: destruct (P.lt_total x y); only 1: rewrite ?P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.285089015961	244
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	2.0.0.2.0	search with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intro H; only 1: intuition).	0.0532329082489	24
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	0.7.4.0	search with cache (only 1: repeat red; only 1: intros x (y, E) (z, O); only 1: fix gcd_divide 1; only 1: auto).	4.79730892181	1289
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	4.0.24	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	1.83220005035	2942
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	4.6	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	7.69718599319	595
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	1.8.0	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: eauto).	0.849474906921	203
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.0.9.11	search with cache (only 1: intros x y H; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.920109033585	819
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	10.1.2.4.8.0	search with cache (only 1: unfold lt; only 1: intros p H0 H2; only 1: destruct p; only 1: auto with arith; only 1: intros H; only 1: Nat.order).	14.4174971581	15891
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	3.0	search with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.05446600914	5
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.0453081130981	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.0.19	search with cache (only 1: constructor; only 1: auto with ordered_type; only 1: auto with ordered_type).	1.42940092087	950
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.1.25.0	search with cache (only 1: intros (x1, x2); only 1: destruct 1; only 1: red; only 1: auto with ordered_type).	4.65861701965	5463
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.0.0.0.8.0.9.0	search with cache (only 1: induction x; only 1: intros H; only 1: eauto; only 1: intros H; only 1: eauto; only 1: simpl; only 1: intro; only 1: eauto).	1.70721197128	2074
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	search with cache (only 1: decide equality).	0.0570120811462	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	1.0	search with cache (only 1: intros; only 1: firstorder).	0.0117328166962	3
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.0.3.2.4.0	search with cache (only 1: intros; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	7.40907883644	3628
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	3.18.1	search with cache (only 1: induction x; only 1: red; only 1: auto).	0.814498901367	944
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	1.0.21.0.0.3	search with cache (only 1: induction x; only 1: intros (x1, x2); only 1: red; only 1: destruct 1; only 1: simpl; only 1: auto).	12.6202571392	12604
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	2.7	search with cache (only 1: apply eqb_eq; only 1: firstorder).	0.00826096534729	23
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	10.0.1.0.1.2.5	search with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	1.3676469326	3206
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	1.1.3	search with cache (only 1: split; only 1: auto; only 1: auto).	0.317668914795	145
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	3.1.1.1	search with cache (only 1: intro; only 1: intro; only 1: intro; only 1: order).	0.0264890193939	13
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	2	search with cache (only 1: order).	0.017697095871	3
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	1	search with cache (only 1: order).	0.0149171352386	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	1.0.0	search with cache (only 1: intro; only 1: intro; only 1: order).	0.0158059597015	4
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0133748054504	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	1	search with cache (only 1: order).	0.0143911838531	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0141429901123	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0136258602142	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.0135178565979	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.1.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: order; only 1: auto with ordered_type).	0.0211820602417	6
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0134019851685	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0137491226196	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.013500213623	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0128660202026	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.1.0.1.1.0.0.3.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	1.64249396324	2488
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.2.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.30226707458	1202
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0403521060944	4
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	0.8.2	search with cache (only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.263574123383	248
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	16.1.2.0.0.9	search with cache (only 1: induction l; only 1: intros; only 1: auto with ordered_type; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).	8.98305916786	13243
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	7.2	search with cache (only 1: intros; only 1: now rewrite H).	0.0648050308228	41
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.1.1.5	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: auto).	0.0811839103699	78
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	12.2.26.6	search with cache (only 1: intros; only 1: induction l as [| a l' Hrec]; only 1: constructor; only 1: auto with ordered_type).	1.03899693489	2357
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.7.7	search with cache (only 1: intros; only 1: induction H; only 1: auto).	0.234063863754	246
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	1.1	search with cache (only 1: intros x y z; only 1: auto).	0.01398396492	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0113730430603	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0165920257568	3
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0176990032196	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.0118160247803	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0236930847168	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	15.8.1	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: order).	0.974148035049	1691
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	2	search with cache (only 1: eauto with ordered_type).	0.022439956665	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.029727935791	19
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	1.3.6.5.0	search with cache (only 1: unfold eqk, ltk; only 1: intros x y H; only 1: unfold eqke; only 1: intuition; only 1: order).	3.04872703552	2962
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	0.5.2.0.5.0	search with cache (only 1: split; only 1: red; only 1: eauto with ordered_type; only 1: auto with *; only 1: red; only 1: eauto with ordered_type).	0.442226886749	581
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0600109100342	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.12.0.22.9.20.9.1	search with cache (only 1: split; only 1: unfold eqk, ltk; only 1: intros H'; only 1: intuition; only 1: intro Eq; only 1: simpl in *; only 1: order; only 1: eauto with ordered_type).	5.54885315895	14395
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40	5.4.2.7.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: unfold eqk, ltk; only 1: intros; only 1: order).	8.50697684288	4722
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40	9.3.1.0	search with cache (only 1: intros (x, e) (x', e') Hxx' (y, f) (y', f') Hyy'; only 1: compute in Hxx'; only 1: compute in Hyy'; only 1: now f_equiv).	11.5916399956	4240
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0145418643951	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0194840431213	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0150220394135	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40	0.3.3.0.0.4.13.9	search with cache (only 1: intros x y z H; only 1: compute; only 1: intros H'; only 1: induction 1; only 1: intuition; only 1: left; only 1: eauto with ordered_type; only 1: intuition).	2.66302609444	5099
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	3.20.0.14.15	search with cache (only 1: intuition; only 1: induction l; only 1: auto; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	10.5555210114	19187
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.7.7.18	search with cache (only 1: inversion 1; only 1: subst; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	34.0803310871	23914
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.7.0.1	search with cache (only 1: unfold eqk, ltk; only 1: inversion_clear 1; only 1: firstorder; only 1: auto with ordered_type).	0.323482036591	173
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.1.0.2.0.0	search with cache (only 1: unfold eqk, ltk; only 1: inversion_clear 1; only 1: compute in H0; only 1: induction 1; only 1: intuition; only 1: auto).	0.0374779701233	9
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0	search with cache (only 1: case compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.0249011516571	4
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.0104548931122	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.0	search with cache (only 1: red; only 1: iorder).	0.0229189395905	16
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	2.9	search with cache (only 1: repeat red; only 1: iorder).	0.156914949417	209
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	1	search with cache (only 1: iorder).	0.0360250473022	2
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.1.0.1	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.203963041306	60
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0259299278259	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	3.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0949430465698	16
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	3.0	search with cache (only 1: rewrite compare_lt_iff; only 1: iorder).	0.0915148258209	16
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	3.0	search with cache (only 1: intro H; only 1: order).	0.0106599330902	5
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0328669548035	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0246109962463	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	2	search with cache (only 1: order).	1.01361703873	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	1	search with cache (only 1: order).	1.01287102699	2
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	5	search with cache (only 1: order).	2.01542806625	11
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0111310482025	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	6.1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0197978019714	9
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.00978994369507	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0108571052551	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	2	search with cache (only 1: order).	0.0102410316467	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	2.0	search with cache (only 1: intro H; only 1: order).	0.0103878974915	4
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	1	search with cache (only 1: order).	0.010694026947	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0	search with cache (only 1: order).	0.00916886329651	1
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0101051330566	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	2	search with cache (only 1: order).	0.0098888874054	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	1	search with cache (only 1: order).	0.00951313972473	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	2	search with cache (only 1: order).	0.0100529193878	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	3.3.3.6	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	0.665177822113	531
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.0	search with cache (only 1: unfold lt; only 1: auto with *).	0.0110528469086	2
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0	search with cache (only 1: now apply compare_eq_iff).	0.0123610496521	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0	search with cache (only 1: now apply compare_eq_iff).	0.0130817890167	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	1	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0206332206726	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	3	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0262141227722	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	4.1.10.9	search with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	37.4836959839	38082
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.1.11	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.603730916977	278
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	5.3.3.0.19	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: intuition; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	1.10591220856	1624
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.4.4	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0785920619965	64
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	2.0.1.0.0.0	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0377550125122	26
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	17.7.1.0.10	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now transitivity y).	12.8249740601	21775
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	13.2	search with cache (only 1: firstorder; only 1: now rewrite H).	0.13986992836	285
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.1.0.4	search with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0183691978455	16
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	9.5.10	search with cache (only 1: simple induction l; only 1: constructor; only 1: firstorder).	0.498841047287	1172
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	16.0	search with cache (only 1: intros x x' Hx l l' Hl; only 1: now f_equiv).	0.537122011185	553
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	13	search with cache (only 1: solve_proper).	2.80176520348	342
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1	search with cache (only 1: firstorder).	0.00747013092041	2
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	1.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0182240009308	4
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	3	search with cache (only 1: now intros <-).	0.0202028751373	4
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40	0.0.0.0.13.1.1.1.11.0	search with cache (only 1: intros; only 1: invlist InA; only 1: invlist Sorted; only 1: intuition; only 1: invlist Sorted; only 1: left; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).	30.3360278606	18121
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	1	search with cache (only 1: firstorder).	0.0161809921265	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.013916015625	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0133709907532	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0	search with cache (only 1: firstorder).	0.015557050705	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.0157141685486	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	search with cache (only 1: reflexivity).	0.0135109424591	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0134019851685	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	search with cache (only 1: firstorder).	0.0150940418243	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.0.0.0.2	search with cache (only 1: do 2 rewrite InA_alt; only 1: intros (y, H); only 1: exists y; only 1: intuition; only 1: firstorder).	0.122808933258	17
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.028913974762	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	2.27.37.2	search with cache (only 1: do 2 rewrite InA_alt; only 1: intro Ha; only 1: fix gcd_divide 1; only 1: firstorder).	9.30011892319	20923
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.1.4	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: invlist InA).	0.0969541072845	41
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	0.0.5.1.2.1.0.1.0.6	search with cache (only 1: rewrite In_alt2; only 1: unfold In, MapsTo; only 1: setoid_rewrite Exists_exists; only 1: setoid_rewrite InA_alt; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: right; only 1: exists (snd x),x; only 1: auto).	38.912979126	27095
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	0.6.3.2	search with cache (only 1: firstorder; only 1: unfold MapsTo; only 1: rewrite <- H; only 1: auto).	0.686862945557	285
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0869860649109	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.0510311126709	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.1.0.4.33	search with cache (only 1: rewrite InA_alt; only 1: setoid_rewrite InA_alt; only 1: firstorder; only 1: subst; only 1: firstorder).	3.59015893936	4367
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.4.16	search with cache (only 1: inversion 1; only 1: firstorder; only 1: auto).	0.914943218231	496
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	6	search with cache (only 1: firstorder).	0.0151300430298	7
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0167510509491	3
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0182361602783	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.0131819248199	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0279369354248	3
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	19.1.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: eauto).	0.70639705658	1021
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	0.6.6.16.0.1	search with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto; only 1: simpl in *; only 1: subst; only 1: auto).	3.06160902977	5347
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	1.3.1.1.2	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: red; only 1: eauto).	0.224367141724	186
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.1.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.370242834091	13
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.2.8.0	search with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: auto).	0.690174818039	314
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.1.5	search with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0561499595642	15
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.6.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.0359110832214	9
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.1.1.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.0351438522339	6
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	11	search with cache (only 1: intuition).	0.0378251075745	69
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	7.0	search with cache (only 1: unfold eq; only 1: decide equality).	0.0460829734802	39
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.3.0.0.0.3	search with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.140076875687	270
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.1.1.0.0.0.1.0.0.0.0.1	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: right; only 1: split; only 1: auto; only 1: now apply max_l).	9.34170103073	6475
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	1.0.2.0.2.2.3	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	5.86780691147	5525
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	1.1.2.3	search with cache (only 1: apply max_r; only 1: rewrite le_lteq; only 1: right; only 1: order).	0.0339739322662	31
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	0.0.0.0.5.0.2.3.7	search with cache (only 1: destruct (max_spec m n) as [(H', E')| (H', E')]; only 1: rewrite E', ?E; only 1: apply max_l; only 1: order; only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.453830003738	599
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	2.5.7.1	search with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: intuition order; only 1: intuition).	0.543849945068	651
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	1	search with cache (only 1: solve_max).	0.0166079998016	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	11	search with cache (only 1: solve_max).	0.354429960251	224
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	1	search with cache (only 1: solve_max).	0.0431861877441	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max; only 1: solve_max).	1.24335408211	543
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	8.0.0.2.0.1.1.18.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	9.9619448185	11248
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0	search with cache (only 1: solve_max).	0.0197150707245	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0193440914154	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0	search with cache (only 1: solve_max).	0.0198650360107	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.0.2.2	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.103486061096	39
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.1.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0221619606018	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.1.3.0	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.092227935791	47
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0401198863983	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.1.2	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.123325109482	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.4	search with cache (only 1: apply min_l; only 1: order).	0.0099139213562	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	1	search with cache (only 1: solve_min).	0.0161519050598	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.0213611125946	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	0.0603139400482	11
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0200111865997	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0187859535217	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0	search with cache (only 1: solve_min).	0.0192058086395	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	1.1.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0425269603729	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.2.2	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0257940292358	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	1	search with cache (only 1: solve_min).	0.0381381511688	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0395619869232	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.1.2	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.13655090332	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.0	search with cache (only 1: apply max_l; only 1: solve_min).	0.0262310504913	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.0	search with cache (only 1: apply min_l; only 1: solve_max).	0.0262820720673	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	2.3.0.0.0.0.0.0.2.3.0.0.3.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: rewrite E; only 1: auto; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: auto; only 1: rewrite E; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	38.7383840084	31685
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.1.0.2.2.0.1.2.0.1.0.0.1.1.0.2.3	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	23.8539969921	57683
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	1.1.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.019364118576	6
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.5	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0195500850677	9
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0110988616943	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.5	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.020339012146	10
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.2.0.1.0	search with cache (only 1: intro x; only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.193141937256	17
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	2.0	search with cache (only 1: unfold eq, lt; only 1: decide equality).	0.0578601360321	17
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	3.0.8	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.207536935806	119
Coq.ZArith.Znat.N_nat_Z	40	1.0.0.0.1.0.14.9.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: unfold N.div2, N.to_nat; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	21.7274239063	25127
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0413489341736	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.0262558460236	1
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: trivial).	0.0260691642761	1
Coq.ZArith.Znat.positive_nat_N	40	1.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0476939678192	9
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0445890426636	5
Coq.ZArith.Znat.Z_nat_N	40	0.0.0.0.0.0.3.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	0.899418115616	356
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0283200740814	1
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.2.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.456856012344	173
Coq.ZArith.Znat.N2Z.id	40	0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0364680290222	4
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.1.5.5	search with cache (only 1: destruct n; only 1: simpl; only 1: Z.order; only 1: easy).	0.110804080963	108
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0266690254211	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0259110927582	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0558099746704	9
Coq.ZArith.Znat.N2Z.inj_le	40	4.0	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0340900421143	6
Coq.ZArith.Znat.N2Z.inj_lt	40	2.0	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0336730480194	4
Coq.ZArith.Znat.N2Z.inj_ge	40	4.3	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.151844024658	9
Coq.ZArith.Znat.N2Z.inj_gt	40	2.1	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0351650714874	5
Coq.ZArith.Znat.N2Z.inj_abs_N	40	0.0.1.0.42	search with cache (only 1: destruct z; only 1: trivial; only 1: simpl; only 1: auto; only 1: reflexivity).	1.17371320724	1555
Coq.ZArith.Znat.N2Z.inj_add	40	13	search with cache (only 1: now destruct n, m).	4.67745900154	647
Coq.ZArith.Znat.N2Z.inj_mul	40	4.0.0.0	search with cache (only 1: nzinduct n; only 1: now N.nzsimpl; only 1: intro; only 1: now destruct n, m).	1.09363698959	67
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0435841083527	6
Coq.ZArith.Znat.N2Z.inj_pred_max	40	5.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.0546641349792	10
Coq.ZArith.Znat.N2Z.inj_pred	40	1.7.4.1	search with cache (only 1: unfold Z.pred; only 1: destruct n; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: now destruct p).	0.741667985916	459
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.1.3.21.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: trivial; only 1: reflexivity).	13.1927988529	13827
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0412051677704	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0569550991058	10
Coq.ZArith.Znat.Z2N.id	40	2.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0451209545135	6
Coq.ZArith.Znat.Z2N.inj	40	1.0.1.0.1.0.0.0.0.0.0.0.1.0.0.0.0.4	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl).	29.7097029686	16143
Coq.ZArith.Znat.Z2N.inj_iff	40	4.0.0.1.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.530328035355	124
Coq.ZArith.Znat.Z2N.inj_0	40	0	search with cache (only 1: trivial).	0.0267188549042	1
Coq.ZArith.Znat.Z2N.inj_pos	40	0.2.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.122581005096	32
Coq.ZArith.Znat.Z2N.inj_neg	40	0	search with cache (only 1: trivial).	0.0264339447021	1
Coq.ZArith.Znat.Z2N.inj_add	40	22	search with cache (only 1: now destruct n, m).	7.97364997864	1758
Coq.ZArith.Znat.Z2N.inj_mul	40	6	search with cache (only 1: now destruct n, m).	0.302227973938	35
Coq.ZArith.Znat.Z2N.inj_succ	40	2.4.1.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: easy).	0.857472896576	335
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.2.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.0959410667419	21
Coq.ZArith.Znat.Z2N.inj_compare	40	1	search with cache (only 1: now destruct n, m).	0.341931819916	142
Coq.ZArith.Znat.Z2N.inj_le	40	7.2.4	search with cache (only 1: unfold N.le, N.ge; only 1: intros Hn Hm; only 1: now rewrite <- N2Z.inj_compare, !id).	0.79856801033	367
Coq.ZArith.Znat.Z2N.inj_lt	40	6.3.2	search with cache (only 1: unfold N.lt, N.gt; only 1: intros Hn Hm; only 1: now rewrite <- N2Z.inj_compare, !id).	0.36008810997	184
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.1.0.1.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.851361036301	251
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0799369812012	11
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	1.0.0.1.0.0.0.0.0.1.0.12	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: apply Z.testbit_Zpos).	14.1292359829	5902
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.058324098587	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0	search with cache (only 1: now destruct n).	0.0316469669342	1
Coq.ZArith.Znat.Zabs2N.id_abs	40	6	search with cache (only 1: now destruct n).	0.0307989120483	7
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.0286769866943	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0271611213684	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	search with cache (only 1: trivial).	0.0267999172211	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0264151096344	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0587170124054	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.1.3.1.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.01599311829	291
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	4.34509706497	1093
Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0740740299225	10
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.3.2.0.7	search with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now destruct p; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.20744991302	661
Coq.ZArith.Znat.Zabs2N.inj_compare	40	6.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.133181810379	36
Coq.ZArith.Znat.Zabs2N.inj_le	40	1.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0365118980408	5
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0359828472137	4
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	2.0.2.0.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.66473507881	554
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	6	search with cache (only 1: now destruct n, m).	0.698745965958	160
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0345571041107	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0279581546783	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	2.0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0651240348816	18
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0362870693207	1
Coq.ZArith.Znat.Nat2Z.id	40	1.0.1.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0396120548248	6
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	1.0.1.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	0.0437371730804	8
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	10.1	search with cache (only 1: unfold Z.le; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	1.28794002533	388
Coq.ZArith.Znat.Nat2Z.inj_lt	40	13.1	search with cache (only 1: unfold Z.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	1.27936506271	354
Coq.ZArith.Znat.Nat2Z.inj_ge	40	7.0	search with cache (only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	0.237916946411	25
Coq.ZArith.Znat.Nat2Z.inj_gt	40	34.1	search with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	15.1660192013	9010
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40	0.0.0.0.0.1.0.0.0.0.0.2.0.29	search with cache (only 1: destruct z; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	4.82804298401	4248
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.7.0.0.0.3.0.3	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: intros; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	3.57322692871	2208
Coq.ZArith.Znat.Z2Nat.inj	40
Coq.ZArith.Znat.Z2Nat.inj_iff	40	4.0.0.1.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.398874044418	111
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.0267140865326	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.0302181243896	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	1	search with cache (only 1: trivial).	0.0272588729858	2
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	1.1.9.0.0.0.17.2	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: apply Pos2Nat.inj_succ; only 1: easy).	7.73573303223	6168
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0306510925293	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	1.0	search with cache (only 1: intros; only 1: now destruct n).	0.0360429286957	3
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.10	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	4.92060995102	3131
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0419979095459	6
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0274679660797	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.0282580852509	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.0278480052948	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	3.1.8.1.0.2.0	search with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: apply Pos2Nat.inj_succ; only 1: easy).	4.90975999832	4367
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0384709835052	4
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0387759208679	4
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	10.10.0.1.3	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	5.73599481583	5483
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).	0.0558199882507	11
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40	4.1.6.33.0.7.0	search with cache (only 1: intros P Ho Hrec x Hx; only 1: destruct x; only 1: trivial; only 1: generalize (Pos.sqrtrem_spec p); only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: easy).	38.7011339664	92760
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	1.0.0.1.0.1.1.1.0.1.1.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	9.50654697418	8411
Coq.ZArith.Wf_Z.Z_lt_rec	40	1.0.0.1.0.1.1.0.1.0.1.1.0.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	9.24403786659	8244
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.1.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0367658138275	4
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.2.1.0.0.0.1	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	12.8607578278	9275
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	1.0.3.0.3.0.0.1.7	search with cache (only 1: unfold Z.pow_pos; only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity).	2.3001499176	1213
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	0.0.0.30.1.6	search with cache (only 1: intuition; only 1: assert (H' : b <= c) by Z.order; only 1: apply Z.pow_lt_mono_r; only 1: Z.order; only 1: Z.order; only 1: Z.order).	13.0739297867	11891
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	1.52.0	search with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: now apply Z.pow_gt_lin_r).	8.51505088806	7435
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40	3.3.4.6	search with cache (only 1: intros n m p; only 1: intros; only 1: Z.swap_greater; only 1: now case Z.compare_spec).	1.70508718491	1782
Coq.ZArith.Zcompare.Zcompare_eq_case	40	10.13.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.Private_Tac.order).	25.5013098717	22358
Coq.ZArith.Zcompare.Zle_compare	40	0.0.2.0.0.13.2.1	search with cache (only 1: intros; only 1: Z.le_elim H; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: Z.order; only 1: subst; only 1: now rewrite Z.compare_refl).	1.64721488953	2605
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.0.6.9	search with cache (only 1: intros a Ha; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	1.24996209145	1712
Coq.ZArith.Zcompare.Zge_compare	40	0.0.1.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: auto).	0.0433738231659	6
Coq.ZArith.Zcompare.Zgt_compare	40	0.2	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0696110725403	26
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	15	search with cache (only 1: now destruct a).	0.282291889191	175
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: reflexivity).	0.0646018981934	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0662751197815	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.12	search with cache (only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	3.31362104416	636
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0827000141144	4
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.7.1	search with cache (only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.512367010117	130
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.5.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.669920921326	39
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	1.0.0.22.3	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	17.0207419395	7412
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0978238582611	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	1.11.2	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	3.3618710041	1078
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.2.8.8.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: rewrite Z.mod_divide; only 1: intuition; only 1: trivial; only 1: trivial).	8.1423740387	4930
Coq.ZArith.Zdigits.binary_value	40	0.2.11	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.180466890335	177
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.1.0.1	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0850789546967	17
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0558199882507	2
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0556139945984	2
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	1.1	search with cache (only 1: intros; only 1: auto).	0.130264043808	36
Coq.ZArith.Zdigits.Z_div2_value	40	4.1.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: now destruct 1).	32.3799171448	9618
Coq.ZArith.Zdigits.Pdiv2	40	0.1.0.0.1.2.2.0.1.16	search with cache (only 1: destruct z; only 1: cbn; only 1: lia; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: simpl; only 1: auto; only 1: lia; only 1: lia).	10.0647509098	5407
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0	search with cache (only 1: intros; only 1: auto).	0.056232213974	2
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	4.0.8.7.4	search with cache (only 1: intros; only 1: destruct z; only 1: contradict H; only 1: now destruct p; only 1: now destruct p).	2.2715420723	1867
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	1.0.1.0.0.0.0.1	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: lia).	0.427884101868	140
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.5	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0404078960419	8
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	1	search with cache (only 1: now destruct n).	0.0208702087402	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1	search with cache (only 1: now destruct n).	0.0211958885193	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.020681142807	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.7	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.204755067825	109
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	2.0	search with cache (only 1: simpl; only 1: trivial).	0.0227971076965	4
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0195288658142	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0213689804077	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0227069854736	2
Coq.ZArith.BinInt.Z.opp_succ	40	8.0.0.0.1.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now destruct p).	2.87252616882	2578
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0249979496002	2
Coq.ZArith.BinInt.Z.sub_0_r	40	1	search with cache (only 1: now destruct n).	0.0217230319977	2
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0223879814148	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	1	search with cache (only 1: reflexivity).	0.039999961853	2
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0196871757507	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.0.0.5.1	search with cache (only 1: unfold le, max; only 1: case N.compare_spec; only 1: intuition; only 1: trivial; only 1: intuition).	0.27047085762	124
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.0.4.4	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: trivial).	2.75995016098	1710
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	5	search with cache (only 1: now destruct n).	0.0267021656036	6
Coq.ZArith.BinInt.Z.abs_neq	40	1.3.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now nzsimpl; only 1: trivial).	0.448121070862	98
Coq.ZArith.BinInt.Z.sgn_null	40	1.0.3.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.0431571006775	10
Coq.ZArith.BinInt.Z.sgn_pos	40	3.0.5.7	search with cache (only 1: destruct n; only 1: now nzsimpl'; only 1: trivial; only 1: now destruct p).	1.03000116348	255
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0314888954163	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.0235621929169	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.17.3.4	search with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: now rewrite <- ?succ_le_mono; only 1: now destruct 1 || intros _).	9.25096416473	5784
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0225651264191	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0293688774109	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0259349346161	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: trivial).	0.0230579376221	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.0.7	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.990147829056	163
Coq.ZArith.BinInt.Z.pred_double_spec	40	1	search with cache (only 1: now destruct n).	0.0249590873718	2
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.6	search with cache (only 1: now destruct 1 || intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	3.80069518089	1262
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	4.1.4.0.1.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite N.mul_comm).	8.68565297127	3386
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.10	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).	23.8648569584	13320
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	3.50168800354	2362
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.1.3	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.4185090065	209
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.0258870124817	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.0.0.10	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0836260318756	64
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0355339050293	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	5	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0332429409027	13
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.4	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0469539165497	6
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0332322120667	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	0.5	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0910940170288	7
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0328290462494	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	2.2.8.0	search with cache (only 1: unfold ltb, lt; only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: now case compare).	5.93200302124	2320
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	0.0.1.0.18	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.12630391121	838
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40	3.20	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	1.62377882004	564
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	0.0.1.0.0.0.0.1.8	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: auto).	1.15277886391	373
Coq.ZArith.BinInt.Z.add_diag	40	10	search with cache (only 1: now nzsimpl').	0.328902959824	36
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.4.0.0.0.0.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	1.57831692696	515
Coq.ZArith.BinInt.Pos2Z.id	40	1	search with cache (only 1: auto).	0.040953874588	2
Coq.ZArith.BinInt.Pos2Z.inj	40	5	search with cache (only 1: congruence).	0.0660111904144	14
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	3.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0490550994873	6
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1	search with cache (only 1: easy).	0.0423650741577	2
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0	search with cache (only 1: easy).	0.0475449562073	1
Coq.ZArith.BinInt.Pos2Z.inj_1	40	5	search with cache (only 1: trivial).	0.0436351299286	6
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	2.1	search with cache (only 1: simpl; only 1: easy).	0.155612945557	5
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.1	search with cache (only 1: simpl; only 1: easy).	0.183891773224	3
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.7	search with cache (only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.0514340400696	9
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0456528663635	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.0.3.0.0.0	search with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intro EQ; only 1: easy').	0.0657351016998	14
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	1.0	search with cache (only 1: simpl in *; only 1: trivial).	0.0448019504547	3
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0423510074615	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0421719551086	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: auto).	0.0417511463165	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	2.0	search with cache (only 1: revert q; only 1: trivial).	0.186703920364	55
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.1	search with cache (only 1: unfold Pos.leb, Pos.le; only 1: reflexivity).	0.0446748733521	3
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0406641960144	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.039913892746	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: auto).	0.0438671112061	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	search with cache (only 1: auto).	0.0434548854828	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.4.25.3	search with cache (only 1: simpl; only 1: destruct n as [| n| n]; only 1: now destruct a as [| [| | ]| ]; only 1: now destruct n; only 1: now destruct n).	2.90845990181	2866
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	2	search with cache (only 1: now injection 1).	0.0503311157227	3
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	1.2.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: destruct 1; only 1: trivial).	0.0535161495209	7
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	3.3.0	search with cache (only 1: intros; only 1: apply inj; only 1: auto).	0.0543689727783	9
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.2.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0657448768616	7
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.0430979728699	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0	search with cache (only 1: easy).	0.0475590229034	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0419020652771	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.196194887161	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	1	search with cache (only 1: easy).	0.048397064209	2
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0419499874115	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	2.3.5.0.6	search with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: red; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	2.83834505081	1697
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	1.0	search with cache (only 1: intros; only 1: easy).	0.0443150997162	3
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	1.0.2.1	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0555379390717	8
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0420780181885	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0420711040497	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0414779186249	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0417420864105	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0467879772186	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0470330715179	2
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0416581630707	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1.0	search with cache (only 1: revert q; only 1: trivial).	0.782099962234	153
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0423901081085	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0421929359436	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.1.0.0.0.6.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct (Pos.pred_N a); only 1: now destruct Hn).	0.768093109131	234
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0408978462219	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	1.1.0.39	search with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	1.91918992996	1877
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.0404958724976	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	6	search with cache (only 1: now destruct x).	0.438982009888	41
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.051185131073	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.1.1.1.5.2.2	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now f_equal).	0.917166948318	620
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	1.1.0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).	0.0717859268188	8
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: simpl; only 1: easy).	0.104650974274	5
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	1.1.1.0.5	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.551169872284	105
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.1.3.2	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	0.099424123764	10
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0974860191345	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.163549900055	5
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	1.0.1.0.1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: trivial).	0.0702981948853	10
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.2.1	search with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	0.196732997894	17
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	3.1.1.1	search with cache (only 1: intros x y z; only 1: symmetry; only 1: symmetry; only 1: now f_equal).	0.0631318092346	12
Coq.ZArith.BinInt.ZL0	40	2	search with cache (only 1: trivial).	0.0437939167023	3
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	5.0	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: now Z.nzsimpl').	0.177628040314	7
Coq.ZArith.BinInt.Z_eq_mult	40	0.0.0.0.9.0.14	search with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: destruct m; only 1: intros; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	14.5088460445	2371
Coq.ZArith.Zcomplements.floor_gt0	40	0	search with cache (only 1: easy).	0.0369558334351	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	2.4	search with cache (only 1: Z.swap_greater; only 1: now destruct n).	0.0558421611786	8
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	1	search with cache (only 1: auto).	0.0355520248413	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	11.11.0	search with cache (only 1: split; only 1: now destruct n as [| [| | ]| [| | ]]; only 1: now destruct n as [| [| | ]| [| | ]]).	0.702757120132	665
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.1.1.0.0.12	search with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	22.1983580589	12202
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	11.4628920555	5607
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	13.7762718201	7196
Coq.ZArith.Zeven.Zeven_not_Zodd	40	2.2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: now destruct p).	0.169362068176	42
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.084342956543	5
Coq.ZArith.Zeven.Zeven_Sn	40	0.0.0.1.0.0.1.11.0.2	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct n as [| [| | ]| [| | ]]; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	14.1403889656	11173
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0388598442078	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: now Z.nzsimpl'; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: now Z.nzsimpl').	10.9145760536	1388
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.0.1.0.0.5	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity; only 1: now Z.nzsimpl'; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: now Z.nzsimpl).	4.25028586388	400
Coq.ZArith.Zeven.Zeven_quot2	40	0.0	search with cache (only 1: boolify_even_odd; only 1: now destruct n as [| [| | ]| [| | ]]).	0.0662040710449	2
Coq.ZArith.Zeven.Zodd_quot2	40	4.1.1.0	search with cache (only 1: boolify_even_odd; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.588564872742	17
Coq.ZArith.Zeven.Zodd_quot2_neg	40	2.3.2	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0919570922852	13
Coq.ZArith.Zeven.Zquot2_opp	40	23.1	search with cache (only 1: Z.bitwise; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.01125383377	796
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	1.0.3	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.251237869263	29
Coq.ZArith.Zeven.Zodd_ex	40	0.1.2.1.5	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	4.66556215286	521
Coq.ZArith.Zeven.Zeven_2p	40	25	search with cache (only 1: now destruct p).	1.04276609421	694
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.0.2.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	0.384500026703	75
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.194645166397	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.197814941406	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0318779945374	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0331170558929	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0316522121429	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	1.1.0.1.0.18.6.2.2	search with cache (only 1: intros a b Hb; only 1: exists (a / b); only 1: apply Z.abs_pos in Hb; only 1: rewrite Z.mul_comm; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: Z.order; only 1: Z.order).	38.3716430664	21071
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.0.7.1.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_divide; only 1: trivial; only 1: trivial).	1.56246185303	650
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	17.9	search with cache (only 1: intros a n Ha H; only 1: now apply Z.divide_pos_le).	4.60745191574	3759
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.0.2.0.0.2.2.8	search with cache (only 1: constructor; only 1: destruct (Z.eq_dec a 0) as [Ha| Ha]; only 1: subst; only 1: apply Z.divide_0_r; only 1: now Z.nzsimpl; only 1: apply Z.divide_0_r; only 1: intros n; only 1: trivial).	1.37233901024	916
Coq.ZArith.Znumtheory.Zis_gcd_1	40	2.3.1.7	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.397588014603	277
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	1.0.0.0.1	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intros n; only 1: auto with zarith).	0.192519187927	11
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.161273956299	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.111449956894	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.199890136719	32
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.0.0.11.0	search with cache (only 1: induction 1; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	3.74975895882	922
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	3.0.0.1.2	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	0.367990970612	52
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	3.1	search with cache (only 1: intros a b (Hb, Hab); only 1: intuition).	0.115056991577	18
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	19.8.4	search with cache (only 1: intro; only 1: inversion_clear H; only 1: discriminate).	1.43474912643	2160
Coq.ZArith.Znumtheory.not_prime_1	40	19.8.5	search with cache (only 1: red; only 1: inversion 1; only 1: Z.order).	3.98072195053	2759
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	2.2.4.2.8	search with cache (only 1: intros a b; only 1: intuition; only 1: apply Z.gcd_greatest; only 1: auto with zarith; only 1: auto with zarith).	27.6204879284	9958
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.0.0.6.0.1.0.0.26	search with cache (only 1: unfold Z.modulo; only 1: Z.swap_greater; only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: unfold Z.div, Z.modulo; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intuition Z.order).	24.3012831211	11215
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.065122127533	4
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0536258220673	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.1.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0647721290588	4
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0554389953613	7
Coq.ZArith.Zdiv.Zmod_1_r	40	10.0	search with cache (only 1: intros; only 1: now Z.nzsimpl).	1.01540613174	258
Coq.ZArith.Zdiv.Zdiv_1_r	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl).	0.120492935181	13
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.3.17.8	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	24.4296720028	14065
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.2.2.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.218498945236	12
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.1.1	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0507609844208	6
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0531589984894	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.5.0.0	search with cache (only 1: intros; only 1: replace (a - b) with a + -1 * b; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto with zarith; only 1: auto with zarith).	0.163645982742	30
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0531229972839	3
Coq.ZArith.Zdiv.eqm_refl	40	0	search with cache (only 1: constructor).	0.0400040149689	1
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.0479249954224	2
Coq.ZArith.Zdiv.eqm_trans	40
Coq.ZArith.Zdiv.eqm_setoid	40	2.0.1.0	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.0550351142883	7
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.3.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0885329246521	6
Coq.ZArith.Zdiv.Zeven_mod	40	0.1.0	search with cache (only 1: intros; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.185785055161	12
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.0.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.179629087448	5
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.2.1.1.0.0	search with cache (only 1: intros; only 1: zero_or_not c; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: Z.order).	0.0821859836578	12
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.2.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0753970146179	7
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.2.1.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.152858018875	9
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0665111541748	5
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0462141036987	5
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0286629199982	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	0.0.36.3.0	search with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).	14.755781889	23714
Coq.ZArith.Zabs.Zabs_intro	40	6.1	search with cache (only 1: intros; only 1: now destruct n).	0.0395619869232	9
Coq.ZArith.Zabs.Zabs_dec	40	5.1.6.22.1	search with cache (only 1: intros; only 1: destruct x; only 1: now left; only 1: auto; only 1: auto).	2.76973295212	2913
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	3.40.40	search with cache (only 1: unfold Z.le; only 1: unfold Z.lt, Z.gt; only 1: decide equality).	4.17393898964	6637
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	3	search with cache (only 1: auto).	0.0370020866394	4
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	search with cache (only 1: trivial).	0.0354850292206	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.0344769954681	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	8	search with cache (only 1: reflexivity).	0.0376038551331	9
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0361890792847	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0.0	search with cache (only 1: Z.bitwise; only 1: trivial).	0.0449631214142	2
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.4	search with cache (only 1: Z.bitwise; only 1: trivial).	0.0824530124664	6
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0662338733673	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	1	search with cache (only 1: reflexivity).	0.0533819198608	2
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0302939414978	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.0313129425049	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0681169033051	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0309460163116	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: reflexivity).	0.0346210002899	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	4.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: now destruct n).	0.0946881771088	17
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	6.1	search with cache (only 1: unfold Z.pow_pos; only 1: apply Pos2Nat.inj_iter).	0.0931460857391	29
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.0.0.0.1.2.5	search with cache (only 1: case n; only 1: trivial; only 1: intros p _; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: intros; only 1: easy).	1.48386192322	559
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: reflexivity).	0.0354528427124	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0350408554077	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	6.2	search with cache (only 1: simpl; only 1: now apply Pos.iter_swap_gen).	0.232961893082	32
Coq.ZArith.Zpower.two_p_equiv	40
Coq.ZArith.Zpower.two_power_nat_S	40	0	search with cache (only 1: reflexivity).	0.0342988967896	1
Coq.ZArith.Zpower.shift_nat_plus	40	0.12.0.0.1.7	search with cache (only 1: induction n as [| k Hrec]; only 1: simpl; only 1: now destruct x; only 1: simpl; only 1: f_equal; only 1: auto).	33.9521620274	19482
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	1	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0388460159302	2
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	1.1.2.0	search with cache (only 1: destruct x; only 1: now apply Pos.iter_swap_gen; only 1: now apply Pos.iter_swap_gen; only 1: now apply Pos.iter_swap_gen).	0.516139984131	113
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.0.8.5	search with cache (only 1: destruct x; only 1: now f_equal; only 1: easy; only 1: easy).	0.562949895859	310
Coq.ZArith.Zpower.two_p_S	40	5.6.4	search with cache (only 1: intros; only 1: rewrite !two_p_equiv; only 1: now Z.nzsimpl).	16.873388052	4581
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40	1.13.17.3	search with cache (only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	5.64909601212	4140
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0336270332336	1
Coq.ZArith.auxiliary.Zle_left	40	7	search with cache (only 1: apply Z.le_0_sub).	0.030021905899	8
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0271739959717	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	4	search with cache (only 1: apply Z.lt_0_sub).	0.0277390480042	5
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0260989665985	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	6.23	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.952648878098	538
Coq.ZArith.auxiliary.Zgt_left	40	0.0.2.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.1082239151	22
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0500240325928	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0500330924988	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	5.9	search with cache (only 1: unfold Z.le, Z.max; only 1: now case Z.compare_spec).	0.24573802948	208
Coq.ZArith.Zmax.Zpos_max_1	40	0.0.0.17	search with cache (only 1: destruct p; only 1: easy; only 1: reflexivity; only 1: reflexivity).	0.419955968857	342
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	0.0.1.4.37	search with cache (only 1: unfold Z.le, Z.min; only 1: case Z.compare_spec; only 1: auto with relations; only 1: auto; only 1: auto).	25.1734890938	28823
Coq.ZArith.Zmin.Zmin_le_prime_inf	40	5.0.16.11	search with cache (only 1: destruct (Z.min_dec n m); only 1: left; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	2.20306992531	2594
Coq.ZArith.Zmin.Zpos_min_1	40	3.0.0.2.2.6	search with cache (only 1: unfold Z.min, Pos.min; only 1: simpl; only 1: case Pos.compare_spec; only 1: reflexivity; only 1: reflexivity; only 1: now destruct p).	0.331588983536	297
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	1.1.0.3	search with cache (only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: reflexivity).	0.128854036331	19
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	1.0.1.30	search with cache (only 1: case n; only 1: now destruct a; only 1: intros; only 1: now destruct a).	26.3514869213	16473
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.1.0.4	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.121409893036	33
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.028352022171	1
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: Z.order).	0.0278120040894	1
Coq.ZArith.Zorder.Zle_not_gt	40	0	search with cache (only 1: auto).	0.0271551609039	1
Coq.ZArith.Zorder.Zgt_not_le	40	0	search with cache (only 1: auto).	0.0270590782166	1
Coq.ZArith.Zorder.Znot_ge_lt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.18324804306	18
Coq.ZArith.Zorder.Znot_lt_ge	40	0	search with cache (only 1: auto).	0.0266048908234	1
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0270590782166	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.0402450561523	2
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	6.2	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.195606231689	32
Coq.ZArith.Zorder.Zgt_irrefl	40	7.6.1	search with cache (only 1: Z.swap_greater; only 1: intros LT; only 1: Z.order).	0.20431804657	331
Coq.ZArith.Zorder.Zle_lt_or_eq	40	1.5.1.0.0.7.19	search with cache (only 1: unfold Z.gt, Z.lt; only 1: case Z.compare_spec; only 1: auto; only 1: auto; only 1: intuition; only 1: exfalso; only 1: Z.order).	5.63712596893	4908
Coq.ZArith.Zorder.Zgt_trans	40	1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0644450187683	4
Coq.ZArith.Zorder.Zle_gt_trans	40	17.2	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	1.04790902138	657
Coq.ZArith.Zorder.Zgt_le_trans	40	4.5	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.158504009247	25
Coq.ZArith.Zorder.Zge_trans	40	11.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.357131004333	140
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.109964132309	17
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0477678775787	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0401430130005	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0287849903107	1
Coq.ZArith.Zorder.Zgt_succ	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0335600376129	3
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0286469459534	1
Coq.ZArith.Zorder.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.0285031795502	2
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0412380695343	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0291888713837	1
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0430660247803	3
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	1	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0294799804688	2
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.22	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.167174100876	255
Coq.ZArith.Zorder.Zle_neg_pos	40	0.2.1	search with cache (only 1: intros a; only 1: intros; only 1: easy).	0.044939994812	6
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0.3.1.1	search with cache (only 1: intros n; only 1: Z.swap_greater; only 1: red; only 1: simpl; only 1: trivial).	0.0513820648193	10
Coq.ZArith.Zorder.Zle_0_pos	40	1	search with cache (only 1: easy).	0.0376138687134	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0295660495758	1
Coq.ZArith.Zorder.Zle_0_nat	40	6.0.1.1.7	search with cache (only 1: induction n; only 1: simpl; only 1: Z.order || apply Z.lt_0_1; only 1: simpl; only 1: easy).	1.21007514	941
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	1.8.6.4.9	search with cache (only 1: intro; only 1: Z.swap_greater; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: Z.order).	2.76606106758	2351
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0298910140991	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0314879417419	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	2	search with cache (only 1: apply Z.add_le_mono_l).	0.0533440113068	3
Coq.ZArith.Zorder.Zplus_le_reg_r	40	2	search with cache (only 1: apply Z.add_le_mono_r).	0.0532479286194	3
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	1	search with cache (only 1: apply Z.add_lt_mono_l).	0.0308218002319	2
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0	search with cache (only 1: apply Z.add_lt_mono_r).	0.028881072998	1
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.048896074295	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.290922880173	2
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0630791187286	5
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0423419475555	2
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.030021905899	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	2	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0326590538025	3
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.06294298172	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0653111934662	4
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	5.3.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.337580919266	38
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	0.1	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0346028804779	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.043123960495	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0315778255463	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0432569980621	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0294981002808	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0629858970642	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0635190010071	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	24.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.478671073914	615
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	1.10	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0868611335754	47
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0639801025391	2
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	2	search with cache (only 1: apply Z.le_0_sub).	0.0311861038208	3
Coq.ZArith.Zbool.Zle_cases	40	0.1.2.1.1.3	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: Z.swap_greater; only 1: auto).	0.197335004807	129
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40	0.0.2.1.0.1	search with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: Z.swap_greater; only 1: auto).	0.0304200649261	10
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.0.5	search with cache (only 1: case Z.leb_spec; only 1: trivial; only 1: discriminate).	0.0640170574188	36
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.00844287872314	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.1	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0278031826019	4
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40	0.2.0.2.0.0.0.0.0.1.0.0.0.0.15	search with cache (only 1: unfold Z.geb, Z.leb; only 1: rewrite (Z.compare_sub n), (Z.compare_sub p), (Z.compare_sub (n + p)); only 1: unfold Z.sub; only 1: rewrite Z.opp_add_distr; only 1: rewrite Z.add_shuffle1; only 1: destruct (n + - m), (p + - q); only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: easy; only 1: trivial; only 1: easy; only 1: trivial).	24.8558700085	16657
Coq.ZArith.Zbool.Zone_pos	40	2	search with cache (only 1: trivial).	0.00779914855957	3
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.9	search with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	0.154922008514	86
Coq.ZArith.Zbool.Zge_is_le_bool	40	3.4	search with cache (only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.124350070953	51
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	0.0.0.16.0	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.912242889404	976
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.0153319835663	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	2.0.0.1.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: easy'; only 1: easy').	0.0270938873291	9
Coq.ZArith.Zbool.Zeq_bool_neq	40	1.1.0.2.1.17	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: case Z.compare; only 1: intuition; only 1: discriminate; only 1: easy').	0.725335121155	995
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0298230648041	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.1	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0329241752625	5
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0335199832916	6
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.3.6	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.820616960526	429
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.6.6	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	15.0529470444	5899
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.0.0.3.6	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.85854101181	415
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.0.1.3.0.0.0.0.0.1	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: auto; only 1: left; only 1: right; only 1: auto).	2.4061691761	1480
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0362629890442	3
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.0263969898224	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.16	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.115535974503	229
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0131042003632	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.3	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0125811100006	5
Coq.Program.Wf.Fix_F_sub_rect	40
Coq.Program.Wf.eq_Fix_F_sub	40	0.8.9.0	search with cache (only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: rewrite F_unfold; only 1: auto).	0.233583927155	375
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40
Coq.Program.Equality.JMeq_eq_refl	40	1	search with cache (only 1: apply UIP_refl).	0.004075050354	2
Coq.Program.Equality.UIP_refl_refl	40	0	search with cache (only 1: apply UIP).	0.00390887260437	1
Coq.Program.Equality.inj_pairT2_refl	40	5	search with cache (only 1: apply UIP_refl).	0.0052170753479	6
Coq.Program.Equality.solution_left	40
Coq.Program.Equality.solution_right	40	0.1.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00516819953918	4
Coq.Program.Equality.deletion	40	0	search with cache (only 1: trivial).	0.00390791893005	1
Coq.Program.Equality.simplification_heq	40
Coq.Program.Equality.simplification_existT2	40
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40
Coq.Program.Combinators.compose_id_left	40	0.1	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.00835514068604	3
Coq.Program.Combinators.compose_id_right	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.00816011428833	3
Coq.Program.Combinators.compose_assoc	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.00845789909363	3
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00815796852112	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00819492340088	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.1.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0548098087311	6
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.2.2.0.2.1.3.0.4.1.0	search with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H as (_, H1); only 1: auto; only 1: auto).	6.34252309799	10117
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	12.0.1.7	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: auto).	0.742812156677	1569
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	4.1	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.102020025253	89
Coq.Sorting.Permutation.Permutation_cons	40	0.5.4	search with cache (only 1: intros a a' Ha b b' Hb; only 1: subst; only 1: auto).	0.427619934082	44
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.0.0.2.4	search with cache (only 1: induction l; only 1: intros; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.339783906937	245
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	1.0.0	search with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0537152290344	4
Coq.Sorting.Permutation.Permutation_rev	40	1.23.1.0.0	search with cache (only 1: induction l; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	29.3004307747	7413
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	2.0.0.0.0.0.0.0.0.12	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	1.12537288666	1444
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40	1.1.8.0.0.10	search with cache (only 1: intro l'; only 1: intros l x HF; only 1: apply Permutation_nil in HF; only 1: destruct l' as [| y l']; only 1: discriminate; only 1: discriminate || auto).	35.0305929184	25230
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	2.1.1.7.10	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: eauto using Add_app).	25.4350697994	391
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	1.0.0.0.0.0.0.1	search with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	1.05620908737	19
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	0.9	search with cache (only 1: red; only 1: auto with datatypes).	0.0900099277496	52
Coq.Sorting.PermutSetoid.permut_sym	40	0.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0375769138336	2
Coq.Sorting.PermutSetoid.permut_trans	40	1.7.0.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: trivial).	1.53423595428	774
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	2.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0486419200897	6
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40	0.0.10.1.0.0	search with cache (only 1: intros; only 1: replace (a :: l) with [ ] ++ a :: l; only 1: apply permut_add_inside_eq; only 1: intuition; only 1: trivial; only 1: trivial).	18.999256134	5749
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	0.1.2.0.3	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.770474910736	130
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40	0.2.0.0.5.0.4.3	search with cache (only 1: unfold permutation, meq; only 1: intro a; only 1: intros; only 1: generalize (H a0); only 1: simpl in *; only 1: destruct (eqA_dec a a0) as [Ha| Ha]; only 1: auto; only 1: auto).	24.7161929607	16186
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	9.1.12.14.16	search with cache (only 1: intro a; only 1: intro a0; only 1: destruct (eqA_dec a a0) as [Ha| Ha]; only 1: auto; only 1: easy).	13.6040480137	17072
Coq.Sorting.PermutSetoid.permut_app_inv2	40	1.1.0.0.0.0.1.1.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	11.4072630405	3780
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	10.1.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: intuition).	0.372684955597	376
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.5	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: auto with *).	0.713886976242	131
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.3.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl).	0.066947221756	9
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	1.5.2	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0628972053528	55
Coq.Sorting.Sorted.Sorted_inv	40	0.2	search with cache (only 1: inversion 1; only 1: auto).	0.0224840641022	4
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.1	search with cache (only 1: inversion 1; only 1: auto).	0.0209631919861	3
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0195899009705	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	4.0.15.0.0.11	search with cache (only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	15.2434899807	20511
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	12	search with cache (only 1: split).	0.0789840221405	46
Coq.Sorting.Heap.leA_Tree_Node	40	1.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0444209575653	3
Coq.Sorting.Heap.invert_heap	40	0.7.21	search with cache (only 1: intros a b c0; only 1: inversion 1; only 1: auto).	8.09452700615	2250
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	1.4.0.2.0.0.6	search with cache (only 1: intros x y H; only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: firstorder; only 1: auto with datatypes).	5.11946392059	1862
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	0.0.5.4	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: red; only 1: simpl; only 1: auto).	0.663948059082	153
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	0.9	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.115277051926	61
Coq.Sorting.Heap.list_to_heap	40	2.0.1	search with cache (only 1: fix merge 1; only 1: intros; only 1: trivial).	0.0566699504852	15
Coq.Sorting.Heap.heap_to_list	40
Coq.Sorting.Heap.treesort	40	4.2.0	search with cache (only 1: fix merge 1; only 1: intros; only 1: trivial).	0.0754189491272	27
Coq.Init.Wf.Acc_inv	40	0.1	search with cache (only 1: destruct 1; only 1: assumption).	0.00598096847534	3
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0068998336792	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00710701942444	4
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	1.4.11.12.6.5.2.4.0	search with cache (only 1: unfold not; only 1: intro A; only 1: intro H1; only 1: elim H1; only 1: intro z; only 1: auto; only 1: intros h1 h2; only 1: apply False_rec; only 1: auto).	23.2300410271	362647
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0125379562378	6
Coq.Init.Peano.pred_Sn	40	0.6	search with cache (only 1: intros; only 1: auto).	0.00546193122864	8
Coq.Init.Peano.not_eq_S	40	9.0.1	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: auto).	0.0104990005493	93
Coq.Init.Peano.O_S	40	2.1.0	search with cache (only 1: red; only 1: intros; only 1: inversion_clear H).	0.00610303878784	6
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40
Coq.Init.Peano.plus_O_n	40	0	search with cache (only 1: reflexivity).	0.0052490234375	1
Coq.Init.Peano.plus_n_Sm	40	5.1.3.1.2	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.104151964188	619
Coq.Init.Peano.plus_Sn_m	40	0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: auto).	0.00571703910828	3
Coq.Init.Peano.mult_n_O	40	0.0.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00637102127075	6
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	1.0.4	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00571393966675	8
Coq.Init.Peano.le_n_S	40	1.4.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: constructor; only 1: auto).	0.01136302948	40
Coq.Init.Peano.nat_case	40	3.3.1.0	search with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.0188670158386	68
Coq.Init.Peano.nat_double_ind	40	0.0.5.3.0.1.5	search with cache (only 1: intros P b H H0; only 1: induction n; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: auto).	0.215025186539	1242
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	1.6.7.7.3.1.0.1.0	search with cache (only 1: revert m; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct m; only 1: inversion 1; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	37.9147040844	231125
Coq.Init.Peano.min_l	40	0.1.2.0.5.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.69492912292	11745
Coq.Init.Peano.min_r	40	0.0.1.1.2.3.1.1.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.07461810112	4986
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	1.0.3.3.0.6	search with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.386655092239	1702
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00580096244812	4
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00657391548157	3
Coq.Init.Datatypes.surjective_pairing	40
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: auto).	0.0079710483551	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	1.0.0.0.0.0.0.0.1.2	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	0.0473608970642	277
Coq.Init.Datatypes.CompOpp_iff	40	0.0.2.0.0.3.1.1.2.0.0.0.3.0.0.3.1.1.2.0.1.1.2.1.1.2.0.0.3.0.1	search with cache (only 1: destruct c; only 1: destruct c'; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: discriminate; only 1: discriminate; only 1: split; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: split; only 1: discriminate; only 1: discriminate; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: auto; only 1: destruct c'; only 1: split; only 1: discriminate; only 1: discriminate; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: auto).	24.6149220467	256146
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00227189064026	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.1.0.0.2.1.2.2	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0350439548492	225
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.0089099407196	53
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.2.0.0.0.1.0.1.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.0753219127655	910
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40	4.4.0.1	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.00987315177917	61
Coq.Init.Logic.not_iff_compat	40
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.3.0.0.0.3.1.4	search with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0534899234772	703
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	search with cache (only 1: intros; only 1: assumption).	0.00464391708374	5
Coq.Init.Logic.iff_to_and	40	2.2.0.1	search with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.00596690177917	14
Coq.Init.Logic.inst	40	1	search with cache (only 1: auto).	0.00465297698975	2
Coq.Init.Logic.gen	40	2.0	search with cache (only 1: unfold all; only 1: auto).	0.00502014160156	4
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	3.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00627994537354	6
Coq.Init.Logic.eq_trans_r	40	0.1	search with cache (only 1: destruct 2; only 1: trivial).	0.00583600997925	3
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00585889816284	3
Coq.Init.Logic.not_eq_sym	40	6.1.2	search with cache (only 1: intros; only 1: destruct 1; only 1: auto).	0.0121240615845	41
Coq.Init.Logic.eq_sind_r	40
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00603699684143	4
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00576210021973	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00566411018372	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40
Coq.Init.Logic.rew_opp_r	40	1.1	search with cache (only 1: destruct H; only 1: auto).	0.00735282897949	6
Coq.Init.Logic.rew_opp_l	40
Coq.Init.Logic.f_equal2	40
Coq.Init.Logic.f_equal3	40
Coq.Init.Logic.f_equal4	40	1.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0116209983826	15
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0145790576935	18
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	1.5	search with cache (only 1: destruct e; only 1: trivial).	0.00827312469482	13
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00708889961243	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00721001625061	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00718283653259	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00726795196533	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0969250202179	5
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00856995582581	5
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00811791419983	2
Coq.Init.Logic.rew_swap	40	1.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.00833177566528	6
Coq.Init.Logic.rew_compose	40	2.1.0	search with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.00842189788818	6
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00653600692749	2
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40	0.4	search with cache (only 1: destruct e; only 1: reflexivity).	0.00945210456848	10
Coq.Init.Logic.eq_trans_sym_distr	40
Coq.Init.Logic.eq_trans_rew_distr	40
Coq.Init.Logic.rew_const	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00755786895752	2
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	3.2	search with cache (only 1: destruct 1; only 1: auto).	0.00810194015503	7
Coq.Init.Logic.inhabited_covariant	40
Coq.Init.Logic.eq_stepl	40	5.3	search with cache (only 1: destruct 1; only 1: auto).	0.00839710235596	10
Coq.Init.Logic.iff_stepl	40	6.1.2.6	search with cache (only 1: red; only 1: destruct 1; only 1: intros [Hl Hr]; only 1: auto).	0.1658680439	1282
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.1.4.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0137100219727	16
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0115859508514	2
Coq.Init.Logic_Type.identity_sym	40	1.9	search with cache (only 1: destruct 1; only 1: trivial).	0.0125870704651	53
Coq.Init.Logic_Type.identity_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00611209869385	4
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00581884384155	2
Coq.Init.Logic_Type.not_identity_sym	40	3.2	search with cache (only 1: destruct 2; only 1: auto).	0.00819683074951	12
Coq.Init.Logic_Type.identity_ind_r	40
Coq.Init.Logic_Type.identity_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00586605072021	4
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00542187690735	3
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40	0.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.00824308395386	3
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0092089176178	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00843811035156	2
Coq.Init.Specif.exists_to_inhabited_sig	40
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0106711387634	5
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00881695747375	4
Coq.Init.Specif.eq_existT_curried_map	40	0.2.6	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0697641372681	93
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0136330127716	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0131530761719	3
Coq.Init.Specif.eq_sig_uncurried	40	0.4.1.4.12	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.334681034088	653
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.0.1.5.0.3.1	search with cache (only 1: split; only 1: intro p; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct p; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	0.455579042435	981
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0124709606171	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.0.0.0.1.4.1.1	search with cache (only 1: split; only 1: intro p; only 1: destruct p; only 1: simpl in *; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	0.819658041	1118
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0211560726166	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0224559307098	3
Coq.Init.Specif.eq_sig2_uncurried	40
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.0.0.4.2.0.1.0	search with cache (only 1: split; only 1: intro p; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct p; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	1.1065030098	1345
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0162420272827	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0148410797119	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.1.0.0.1.0.0.0.1	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.985530138016	501
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0580139160156	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0456960201263	3
Coq.QArith.Qreduction.Qminus'_correct	40	2.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0461418628693	4
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	5.0.0.0.5	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	0.407384157181	282
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	10.2.7	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: auto using Qle_Qabs).	0.525352954865	476
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.4.1.1.0.1.0.1.1	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: compute; only 1: reflexivity).	32.089318037	5757
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	5.4.1.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	0.512876033783	247
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.1.1.2	search with cache (only 1: constructor; only 1: intro; only 1: intro; only 1: now destruct n).	0.033951997757	12
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.00992298126221	1
Coq.QArith.Qfield.ex2	40	4.2	search with cache (only 1: intros; only 1: ring).	0.0337989330292	16
Coq.QArith.Qfield.ex3	40	2.1.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0723958015442	12
Coq.QArith.Qfield.ex4	40	1.7	search with cache (only 1: red; only 1: now Z.nzsimpl').	0.0700850486755	10
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0138599872589	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0136618614197	1
Coq.QArith.Qfield.ex7	40	2.0.0.1	search with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.0355370044708	7
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.016263961792	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0169060230255	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.126469135284	11
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.107941150665	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.1.1.5.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.349625110626	209
Coq.QArith.Qcanon.Qred_involutive	40	3.9.3	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	4.69962692261	1729
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	search with cache (only 1: unfold Qccompare; only 1: intros x y; only 1: reflexivity).	0.0432121753693	3
Coq.QArith.Qcanon.Qcgt_alt	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0743660926819	11
Coq.QArith.Qcanon.Qcle_alt	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0382790565491	2
Coq.QArith.Qcanon.Qcge_alt	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0715620517731	11
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: auto with qarith).	0.0378520488739	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	1.0.12.12.1	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	3.95440506935	2973
Coq.QArith.Qcanon.Qcplus_0_r	40	0.1.0.0.12.0.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.90678906441	1016
Coq.QArith.Qcanon.Qcplus_comm	40	0.1.3.6.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.52272200584	676
Coq.QArith.Qcanon.Qcopp_involutive	40	3.6.1	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.590276002884	160
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.0.2.1.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.104804992676	8
Coq.QArith.Qcanon.Qcmult_assoc	40	2.0.0.9.10.0.0.1	search with cache (only 1: intros (x, y); only 1: intros; only 1: qc; only 1: red; only 1: destruct x; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	20.9216759205	12377
Coq.QArith.Qcanon.Qcmult_0_l	40	0.3.0.0	search with cache (only 1: intros; only 1: qc; only 1: compute; only 1: reflexivity).	0.0848140716553	7
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.6.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.33368897438	58
Coq.QArith.Qcanon.Qcmult_1_l	40	18.5.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	4.08802986145	2584
Coq.QArith.Qcanon.Qcmult_1_r	40	0.16.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	1.47604608536	926
Coq.QArith.Qcanon.Qcmult_comm	40	0.1.1.9.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.64704298973	771
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	7.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.127948999405	10
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	6.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.125758886337	9
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	4.7.1.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	2.36914491653	860
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.7.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	3.22404503822	191
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.0.12.0	search with cache (only 1: intros; only 1: red; only 1: unfold Qle; only 1: auto with zarith).	0.549909114838	291
Coq.QArith.Qcanon.Qcle_antisym	40	15	search with cache (only 1: auto with *).	2.8550901413	1195
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	8.3.0.0	search with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	0.883418083191	506
Coq.QArith.Qcanon.Qclt_le_weak	40	3.0.0	search with cache (only 1: unfold Qcle; only 1: intros; only 1: auto with *).	0.054062128067	6
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.5.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: eauto).	0.648476839066	229
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	6.0.0.0.1	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).	0.645014047623	218
Coq.QArith.Qcanon.Qcnot_lt_le	40	2.1.0.0.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.nlt_ge; only 1: apply Z.nlt_ge; only 1: apply Z.nlt_ge; only 1: unfold Z.lt; only 1: auto).	0.11462187767	23
Coq.QArith.Qcanon.Qcnot_le_lt	40	0.1.1.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.nle_gt; only 1: unfold Z.le; only 1: easy || now destruct 1).	0.0592851638794	7
Coq.QArith.Qcanon.Qclt_not_le	40	0.4.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.lt_nge; only 1: auto).	0.0585260391235	8
Coq.QArith.Qcanon.Qcle_not_lt	40	0.5.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.le_ngt; only 1: auto).	0.0593869686127	9
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0591058731079	4
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40	0.0.0.1.0.0.2.6	search with cache (only 1: unfold Qcle, Qcopp; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.le_sub_le_add_r, Z.opp_involutive; only 1: reflexivity).	1.93016290665	882
Coq.QArith.Qcanon.Qclt_minus_iff	40	2.0.2.5.0.0.1.7	search with cache (only 1: unfold Qclt; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.lt_sub_lt_add_r, Z.opp_involutive; only 1: reflexivity).	6.21756196022	3451
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	0.1.4.3.3.0.0	search with cache (only 1: unfold Qcle, Qcminus; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	7.06279611588	2716
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	5.12.6.4.0	search with cache (only 1: intros; only 1: qc; only 1: destruct n; only 1: easy; only 1: now simpl in H).	20.2817778587	3426
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.3.2.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.169071912766	61
Coq.QArith.Qreals.IZR_nz	40	4.1	search with cache (only 1: intros; only 1: auto with real).	0.147629022598	43
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.1.0.1.1.0.2.1	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qden, Qnum; only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	3.30340099335	1253
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40	0.0.2.0.0.0.1.0.1.1	search with cache (only 1: unfold Qmult, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qden, Qnum; only 1: simpl; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: do 3 rewrite mult_IZR; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto).	8.12063503265	2920
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	9	search with cache (only 1: now split).	0.103711128235	56
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3.3.1	search with cache (only 1: split; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	0.117852926254	92
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	1.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: now constructor).	0.0371360778809	3
Coq.QArith.QArith_base.Qeq_sym	40	5.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto).	0.0509560108185	12
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.0.5	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0566279888153	9
Coq.QArith.QArith_base.Qeq_bool_iff	40	6.5.3.5.4	search with cache (only 1: intuition; only 1: apply Zeq_is_eq_bool; only 1: trivial; only 1: apply Zeq_is_eq_bool; only 1: now Z.nzsimpl).	3.20274710655	2294
Coq.QArith.QArith_base.Qeq_bool_eq	40	4.2.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Zeq_is_eq_bool; only 1: trivial).	0.202242136002	79
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0307309627533	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	7	search with cache (only 1: apply Zle_is_le_bool).	0.0379440784454	8
Coq.QArith.QArith_base.Qnot_eq_sym	40	1	search with cache (only 1: auto with qarith).	0.0317149162292	2
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0363781452179	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.1.1	search with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: auto with qarith).	0.0550999641418	5
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.1.0.0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.0794298648834	7
Coq.QArith.QArith_base.Qmake_Qdiv	40	0.0.1.4	search with cache (only 1: red; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: trivial).	0.047877073288	9
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	4.2.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).	0.437599897385	54
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	4.7	search with cache (only 1: red; only 1: inversion 1).	0.168954133987	59
Coq.QArith.QArith_base.Qplus_assoc	40	0.1.3.2.1.6	search with cache (only 1: intros A B H; only 1: red; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: auto).	6.12721991539	982
Coq.QArith.QArith_base.Qplus_0_l	40	0.0.1.2.3	search with cache (only 1: intros n; only 1: red; only 1: destruct n; only 1: simpl in *; only 1: ring).	0.722154855728	33
Coq.QArith.QArith_base.Qplus_0_r	40	0.2.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0795798301697	7
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: ring).	0.490504026413	5
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0620548725128	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.2	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.982453107834	50
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: red; only 1: simpl; only 1: trivial).	0.0459079742432	3
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.6.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: ring).	0.0932359695435	18
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.2.1.2.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: destruct n; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.46273708344	289
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.330731153488	33
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.1	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	1.13774108887	144
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.201467037201	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40	5.0.32	search with cache (only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: now Z.nzsimpl).	7.34574508667	4242
Coq.QArith.QArith_base.inject_Z_mult	40	8.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: auto).	0.051500082016	13
Coq.QArith.QArith_base.inject_Z_opp	40	3.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: reflexivity).	0.0390388965607	5
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	1.0.2.1.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring_simplify; only 1: ring).	0.128928899765	10
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0768370628357	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	1.4	search with cache (only 1: red; only 1: now reflexivity).	0.0793538093567	18
Coq.QArith.QArith_base.Qle_antisym	40	30.9.2	search with cache (only 1: red; only 1: unfold Qle; only 1: Z.order).	19.5962162018	12671
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	1.10	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply StrictOrder_Irreflexive).	0.0906550884247	62
Coq.QArith.QArith_base.Qlt_not_eq	40	21.2	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	1.774310112	1325
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	3.3.0	search with cache (only 1: red; only 1: unfold Qeq, Qlt, Qcompare; only 1: now apply Z.lt_le_incl).	0.267277956009	50
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	8.0.12	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: unfold Z.lt; only 1: apply Z.ge_le_iff).	2.81397104263	1356
Coq.QArith.QArith_base.Qnot_le_lt	40	20.1.14	search with cache (only 1: intuition; only 1: red; only 1: Z.order).	4.62911081314	4324
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0336878299713	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0338850021362	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.1.0.2.0.0.13	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	7.67969894409	3084
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.1	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0522408485413	5
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40	1.0.3.2.0.3.1.3.1.0.3	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite <- Hy; only 1: clear y' Hy; only 1: induction y; only 1: reflexivity; only 1: simpl; only 1: rewrite Hx; only 1: reflexivity; only 1: simpl; only 1: rewrite Hx; only 1: reflexivity).	21.0531599522	9138
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	8.5.6	search with cache (only 1: intros; only 1: simpl; only 1: now Z.nzsimpl).	1.43468117714	1218
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.2.0.1	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	1.34135293961	388
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: symmetry in H; only 1: auto with *).	0.226535081863	10
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	1.0.1.0.0.1.0.0.1.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: now destruct n).	6.65172696114	1244
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.1.0.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0861070156097	10
Coq.QArith.Qabs.Qabs_nonneg	40	4.4.1.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	0.23174905777	162
Coq.QArith.Qabs.Zabs_Qabs	40	2.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: auto).	0.0627369880676	6
Coq.QArith.Qabs.Qabs_opp	40	12.0.2.2	search with cache (only 1: red; only 1: intros (n, d); only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	9.50475406647	3255
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	0.12.0.0.0.3	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: congruence).	20.95977211	7580
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	2.21712207794	579
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	1	search with cache (only 1: reflexivity).	0.00372099876404	2
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00282406806946	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00262999534607	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	1.1.11.10.2	search with cache (only 1: unfold relation_equivalence, iffT; only 1: constructor; only 1: destruct 2; only 1: auto; only 1: firstorder).	0.275754928589	841
Coq.Classes.CMorphisms.subrelation_id_proper	40	0.0.0	search with cache (only 1: red; only 1: red; only 1: firstorder).	0.00385189056396	3
Coq.Classes.CMorphisms.subrelation_respectful	40	5	search with cache (only 1: simpl_crelation).	0.013799905777	6
Coq.Classes.CMorphisms.subrelation_refl	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.00373387336731	2
Coq.Classes.CMorphisms.subrelation_proper	40	1.0	search with cache (only 1: hnf; only 1: simpl_crelation).	0.00698304176331	3
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	5	search with cache (only 1: simpl_crelation).	0.0451440811157	11
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00854420661926	1
Coq.Classes.CMorphisms.forall_subrelation	40	1	search with cache (only 1: firstorder).	0.00738596916199	2
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00539803504944	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00368189811707	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00483107566833	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00397920608521	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.00762319564819	2
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	0.0832929611206	5
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	3.33960294724	384
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	1.06290507317	730
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.665490150452	771
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	3.3.0	search with cache (only 1: transitivity y; only 1: firstorder; only 1: firstorder).	2.18685817719	371
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	0.0516529083252	5
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.644057035446	110
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	1.0	search with cache (only 1: unfold relation_equivalence, iffT; only 1: firstorder).	0.00533604621887	3
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	2	search with cache (only 1: firstorder).	0.00748205184937	3
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	0.8	search with cache (only 1: destruct 1; only 1: trivial).	0.00811100006104	10
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00392317771912	1
Coq.Classes.CMorphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.00562500953674	1
Coq.Classes.CMorphisms.flip1	40	2.0.0.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: red in H'; only 1: red in H'; only 1: simpl_crelation).	0.00814390182495	7
Coq.Classes.CMorphisms.flip2	40	2.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: simpl_crelation).	0.00769591331482	5
Coq.Classes.CMorphisms.eq_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00565814971924	1
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0036678314209	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00306987762451	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.0.1.0	search with cache (only 1: intros A x y z H1 H2; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0380630493164	7
Coq.Classes.CMorphisms.proper_normalizes_proper	40	1.0	search with cache (only 1: red; only 1: firstorder).	0.00462889671326	3
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00459790229797	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.0	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation).	0.0102369785309	3
Coq.Classes.CMorphisms.proper_sym_flip_2	40	4.0.2.1	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: unfold respectful, relation_equivalence in *; only 1: intros x y H'; only 1: simpl_crelation).	0.586691856384	151
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.2.4	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: firstorder; only 1: repeat red in Hf; only 1: eauto).	0.0876770019531	28
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.2.3	search with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.0179359912872	30
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0.1	search with cache (only 1: reduce; only 1: trivial).	0.00843596458435	3
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0088849067688	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0106129646301	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.379646062851	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: reflexivity).	0.00359296798706	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00401401519775	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	0	search with cache (only 1: firstorder).	0.00353002548218	1
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	2.1	search with cache (only 1: hnf; only 1: firstorder).	0.00837802886963	5
Coq.Classes.CRelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0122539997101	2
Coq.Classes.CRelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0833840370178	1
Coq.Classes.CRelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0175111293793	2
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0214440822601	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00552487373352	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	2.1	search with cache (only 1: hnf; only 1: firstorder).	0.00419688224792	5
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.0.3	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0038480758667	6
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00422811508179	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00511598587036	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	0.0.0.0.2	search with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.00713896751404	7
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.00924491882324	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0447640419006	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.1.2.3	search with cache (only 1: reduce; only 1: transitivity y; only 1: apply H; only 1: firstorder).	0.0202949047089	31
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40	4.0.8	search with cache (only 1: compute; only 1: intros A R sa x y z Hxy Hyz; only 1: firstorder).	6.03595495224	790
Coq.Classes.Equivalence.pointwise_reflexive	40	0.4	search with cache (only 1: reduce; only 1: trivial).	0.00921201705933	6
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00891089439392	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0105950832367	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.371301174164	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.00739002227783	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00848793983459	2
Coq.Classes.RelationClasses.flip_Reflexive	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.00824618339539	4
Coq.Classes.RelationClasses.flip_Antisymmetric	40	2.1	search with cache (only 1: hnf; only 1: firstorder).	0.0135471820831	5
Coq.Classes.RelationClasses.flip_PreOrder	40	0	search with cache (only 1: firstorder).	0.0970189571381	1
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0249629020691	1
Coq.Classes.RelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0362179279327	1
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0360481739044	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00873589515686	2
Coq.Classes.RelationClasses.complement_Symmetric	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.00928401947021	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	1.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0350770950317	15
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0116620063782	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.1.0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	2.44441485405	49
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.010617017746	2
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0156910419464	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0443911552429	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0163218975067	1
Coq.Classes.Morphisms.eq_proper_proxy	40	4	search with cache (only 1: reflexivity).	0.00336194038391	5
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0036039352417	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00342488288879	1
Coq.Classes.Morphisms.pointwise_pointwise	40
Coq.Classes.Morphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.00298190116882	1
Coq.Classes.Morphisms.subrelation_respectful	40	6	search with cache (only 1: firstorder).	0.00583481788635	7
Coq.Classes.Morphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00373888015747	1
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.00382208824158	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.3.9	search with cache (only 1: reduce_goal; only 1: subst; only 1: firstorder).	0.400449991226	156
Coq.Classes.Morphisms.pointwise_subrelation	40	1	search with cache (only 1: firstorder).	0.00538015365601	2
Coq.Classes.Morphisms.forall_subrelation	40	5.1	search with cache (only 1: intros; only 1: firstorder).	0.010899066925	12
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00423884391785	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00332117080688	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	3	search with cache (only 1: firstorder).	0.00461292266846	4
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0534439086914	1
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	5.00392818451	424
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	2.62418007851	792
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	2.2.0	search with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	0.250095129013	350
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	1.24535989761	179
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.00559782981873	3
Coq.Classes.Morphisms.compose_proper_obligation_1	40	2	search with cache (only 1: firstorder).	0.00854396820068	3
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.2.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.00694894790649	7
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.0038378238678	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0053539276123	1
Coq.Classes.Morphisms.flip1	40	2.0.0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: red in H0; only 1: firstorder).	0.00486087799072	7
Coq.Classes.Morphisms.flip2	40	2.0.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.00427293777466	5
Coq.Classes.Morphisms.eq_subrelation	40	0.0.0.0	search with cache (only 1: unfold subrelation; only 1: firstorder; only 1: subst; only 1: firstorder).	0.00487518310547	4
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00357103347778	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00295305252075	1
Coq.Classes.Morphisms.proper_proper	40	0.0.1.0	search with cache (only 1: intros A x y z H1 H2; only 1: intros; only 1: subst; only 1: firstorder).	0.00602412223816	5
Coq.Classes.Morphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.0042610168457	1
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00473093986511	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.5.1	search with cache (only 1: intros A C h1 h2; only 1: unfold flip, respectful; only 1: firstorder).	0.0495870113373	12
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.2.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).	0.112145900726	16
Coq.Classes.Morphisms.proper_sym_impl_iff	40
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	5	search with cache (only 1: firstorder).	0.0164561271667	6
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0155220031738	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0490951538086	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0151679515839	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	2	search with cache (only 1: firstorder).	0.0171639919281	3
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.259524106979	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.458972930908	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0300090312958	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.02161693573	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0343780517578	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.01744389534	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0175499916077	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0175318717957	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0175151824951	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.2.3	search with cache (only 1: reduce; only 1: compute in *; only 1: firstorder).	0.0699338912964	8
Coq.Classes.DecidableClass.Decidable_sound	40
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.1.13	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	1.46506905556	1142
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	40	search with cache (only 1: apply Nat.eqb_eq).	15.9561579227	21806
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	10	search with cache (only 1: apply Nat.leb_le).	0.309307098389	137
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	12.27	search with cache (only 1: destruct x; only 1: easy || now destruct y).	2.51587796211	6585
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	14	search with cache (only 1: intuition).	0.0168280601501	75
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.00648403167725	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.00639796257019	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	1.12.0	search with cache (only 1: intros; only 1: repeat red; only 1: firstorder).	1.65365386009	750
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.456555843353	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	1	search with cache (only 1: firstorder).	0.0156741142273	2
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0156078338623	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0141978263855	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	1.0.0.1.0	search with cache (only 1: intro; only 1: do 2 red; only 1: unfold subrelation; only 1: intros x y H; only 1: auto).	0.0265221595764	7
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0150768756866	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: reflexivity).	0.0124020576477	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40	5.0.40	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	6.69465303421	28669
Coq.PArith.Pnat.Pos2Nat.is_pos	40	4.43.3	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	4.8090569973	11720
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.1.0.2	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.0233030319214	9
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	14.12.1.0.3.3.0.6.9.2.17	search with cache (only 1: induction n as [| n H]; only 1: reflexivity; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct n; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	28.4410479069	94413
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.018373966217	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	3.3.2.4.1.0.11	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: unfold Pos.to_nat; only 1: now Nat.nzsimpl').	1.14677500725	2909
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.2.0.11.1.9	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	2.821393013	6041
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.1.6	search with cache (only 1: intuition; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H).	0.0827360153198	83
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.1	search with cache (only 1: simpl; only 1: destruct n; only 1: trivial; only 1: f_equal).	0.0214538574219	5
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	2.3.0	search with cache (only 1: intros; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.0492739677429	8
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	2	search with cache (only 1: decide equality).	0.0232381820679	3
Coq.PArith.BinPos.Pos.xI_succ_xO	40	1	search with cache (only 1: trivial).	0.0123720169067	2
Coq.PArith.BinPos.Pos.succ_discr	40	2.3.5.5.36	search with cache (only 1: destruct p; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: congruence).	2.05983090401	4711
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0110201835632	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.1.2.4	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.21964097023	81
Coq.PArith.BinPos.Pos.double_succ	40	0	search with cache (only 1: reflexivity).	0.0112638473511	1
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0281341075897	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0276720523834	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.1.1.1.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	1.09270501137	530
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.1.0.0.0.0.0.10.0.1.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	4.76917910576	4170
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.0140249729156	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0137469768524	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0	search with cache (only 1: trivial).	0.0122449398041	1
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0140450000763	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	1.0	search with cache (only 1: apply succ_inj; only 1: now destruct p).	0.040246963501	30
Coq.PArith.BinPos.Pos.mul_1_r	40	0.2.5.6.2.9	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: trivial).	6.37291812897	9233
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	3.1.0.1.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: rewrite 2!(mul_comm r); only 1: congruence).	0.0764708518982	11
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.0.0.6.7.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: change_no_check p~1 with (p~0 + 1); only 1: now destruct p, q; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	2.98756194115	2740
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.036719083786	1
Coq.PArith.BinPos.Pos.square_xO	40
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	0.1.0.4.4.2.9.2.1.0.2	search with cache (only 1: apply succ_inj; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: rewrite mul_comm; only 1: now f_equal; only 1: simpl; only 1: f_equal).	25.3691999912	28500
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	4.1.18.2	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intros; only 1: auto).	29.7655320168	61495
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0267260074615	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	4.1.20.13	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intros; only 1: auto).	3.64397215843	10226
Coq.PArith.BinPos.Pos.ltb_lt	40	9.5.0	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: intuition).	2.90818786621	3397
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.0.6	search with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: now split).	1.82319688797	541
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.4.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.201342821121	33
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.2.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	1.25642895699	184
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.2.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.121679067612	20
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.6.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	1.35374498367	259
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.1.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.838160037994	167
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.0.1.1.0	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	0.0213310718536	8
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0138230323792	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	1.0.2.1.4	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	0.0871729850769	129
Coq.PArith.BinPos.Pos.compare_xO_xI	40	1.0.2.1.5	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	0.168203115463	171
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.3.1.1.5	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.654224157333	874
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1.0.0.0	search with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0222301483154	6
Coq.PArith.BinPos.Pos.compare_le_iff	40	10	search with cache (only 1: easy').	0.254238843918	75
Coq.PArith.BinPos.Pos.gt_lt_iff	40	5.6	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	1.69222187996	1028
Coq.PArith.BinPos.Pos.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.022999048233	3
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0143508911133	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	6.0	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.153717041016	20
Coq.PArith.BinPos.Pos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0235459804535	2
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0144290924072	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	0.0.2.0.3.3.0	search with cache (only 1: apply ge_le_iff; only 1: cut (1 = 1); only 1: induction p; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	1.16491699219	841
Coq.PArith.BinPos.Pos.nlt_1_r	40	1	search with cache (only 1: now destruct p).	0.0357799530029	2
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0465121269226	22
Coq.PArith.BinPos.Pos.le_nlt	40	6.1	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.200249195099	23
Coq.PArith.BinPos.Pos.lt_nle	40	6.0	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.477205991745	75
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.0.8.2	search with cache (only 1: unfold lt, le; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	1.26075196266	523
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	1.5	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_succ_succ).	0.0483200550079	15
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	2.1.1	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.0191640853882	7
Coq.PArith.BinPos.Pos.lt_compat	40	5	search with cache (only 1: solve_proper).	0.253165006638	22
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	2.6	search with cache (only 1: apply le_lteq; only 1: intuition).	0.221299886703	37
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	8.5.3	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.964273929596	787
Coq.PArith.BinPos.Pos.le_partorder	40	1.13.3	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: trivial).	0.764302968979	729
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	1.0.1.0.0.0.5.0	search with cache (only 1: unfold lt, gt; only 1: revert p q r; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	1.81711506844	1129
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.3.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0375671386719	24
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.3.1	search with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: reflexivity).	0.0419089794159	7
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.5.0	search with cache (only 1: unfold le; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0369639396667	21
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.2.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0233871936798	6
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.5.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.150752067566	8
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.0.7.0	search with cache (only 1: unfold le; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.169761896133	51
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0196290016174	3
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.0.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.0261580944061	7
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0169579982758	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40	6.8	search with cache (only 1: fix gcd_divide 1; only 1: trivial).	0.0772879123688	147
Coq.PArith.BinPos.Pos.sub_mask_pos	40	2.0.1.3	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.057296037674	33
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	1.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.024472951889	6
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.024432182312	6
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.1.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.0404839515686	16
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.2.1.0.0.0.1.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.5540599823	258
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.7.5.2.2.0.0	search with cache (only 1: unfold le, min; only 1: intros x y; only 1: rewrite compare_gt_iff; only 1: case compare_spec; only 1: trivial; only 1: intuition; only 1: trivial).	4.6038441658	5041
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	1.1	search with cache (only 1: apply max_l; only 1: apply le_1_l).	0.0380520820618	32
Coq.PArith.BinPos.Pos.min_1_l	40	1.2	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.020015001297	5
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.1.2.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.057904958725	50
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	1.2.3.2.11	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).	3.87366104126	3251
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.17	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	2.26362991333	2385
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.14	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	1.57018589973	1362
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	1.7.5.0.5	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: easy || now destruct 1).	8.19420814514	5360
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.4	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.186848163605	63
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.10	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	1.02749609947	673
Coq.PArith.BinPos.Pos.iter_op_succ	40	0.1.3.2.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: congruence; only 1: now symmetry; only 1: now symmetry).	0.414264917374	175
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	4.7.0.11.2.10.0.24.13	search with cache (only 1: intro H1; only 1: destruct n; only 1: PeanoNat.Nat.order_nz; only 1: simpl; only 1: f_equal; only 1: induction n; only 1: auto; only 1: simpl; only 1: now rewrite IHn).	17.2277629375	50023
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	10.2.0	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.745307922363	791
Coq.PArith.BinPos.Pos.divide_xO_xI	40	7.5.1	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.71135187149	682
Coq.PArith.BinPos.Pos.divide_xO_xO	40	8.11.7	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	2.66735696793	2746
Coq.PArith.BinPos.Pos.divide_mul_l	40	9.3.4	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.53738617897	644
Coq.PArith.BinPos.Pos.divide_mul_r	40	10.3.2	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.76690483093	1743
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	0.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.248532056808	125
Coq.PArith.BinPos.Pos.ggcd_gcd	40	2.12	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.361055135727	196
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	1.20	search with cache (only 1: fix gcd_divide 1; only 1: auto with *).	2.64450502396	2284
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	9.2	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.0720000267029	123
Coq.PArith.BinPos.Pos.gcd_divide_r	40	6.0.5	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros a b; only 1: trivial).	1.79828596115	1729
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40	2.1.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros x y z; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	3.73819088936	3817
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0.0.0.0	search with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.029226064682	6
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	3.3.3.20.30	search with cache (only 1: intros H; only 1: destruct H; only 1: now intuition; only 1: now intuition; only 1: now intuition).	4.13067388535	5092
Coq.Arith.Le.le_n_0_eq	40	3.10	search with cache (only 1: inversion 1; only 1: now subst).	0.149585962296	202
Coq.Arith.Le.le_elim_rel	40	9.3.0.2	search with cache (only 1: intros a Ha; only 1: intros b Hb IH; only 1: fix le_div2 1; only 1: trivial).	1.11129903793	1875
Coq.Arith.Even.even_equiv	40	2.0.8	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: trivial).	0.454288005829	209
Coq.Arith.Even.odd_equiv	40	10.2.0	search with cache (only 1: fix even_equiv 1; only 1: intros; only 1: trivial).	0.602874994278	728
Coq.Arith.Even.even_or_odd	40	8.7.3.19.0.4	search with cache (only 1: Nat.induct n; only 1: left; only 1: constructor; only 1: intros x; only 1: fix odd_equiv 1; only 1: trivial).	2.17114591599	5179
Coq.Arith.Even.even_odd_dec	40	1.1.1.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.059947013855	44
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.142613887787	1
Coq.Arith.Even.even_even_plus	40	0	search with cache (only 1: parity_binop).	0.0796208381653	1
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0738091468811	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.078705072403	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0846991539001	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.26477599144	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0917611122131	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0952408313751	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.206760883331	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0803370475769	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0966069698334	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.108813047409	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0727298259735	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.073734998703	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.267845153809	1
Coq.Arith.Even.even_mult_l	40	0	search with cache (only 1: parity_binop).	0.049348115921	1
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.048033952713	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0707850456238	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0689949989319	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.100301027298	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0505499839783	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0499060153961	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0133669376373	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0352010726929	1
Coq.Arith.Minus.minus_diag_reverse	40
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	4.3.11	search with cache (only 1: Nat.induct ltac:(p); only 1: now Nat.nzsimpl; only 1: auto).	6.4549279213	4904
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	2.2.3.1.3	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros; only 1: now Nat.nzsimpl; only 1: trivial).	0.6479139328	272
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40	0.1.9	search with cache (only 1: fix le_div2 1; only 1: intros n m LE; only 1: auto with arith).	0.509794950485	547
Coq.Arith.Between.between_restr	40	0.1.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0185420513153	4
Coq.Arith.Between.exists_le_S	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0207190513611	4
Coq.Arith.Between.exists_S_le	40	12.3	search with cache (only 1: fix le_div2 1; only 1: trivial).	0.417583942413	1052
Coq.Arith.Between.in_int_intro	40	0.3.16	search with cache (only 1: intros a n H; only 1: repeat red; only 1: auto).	0.763263940811	1362
Coq.Arith.Between.in_int_lt	40
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	1.5	search with cache (only 1: intros * []; only 1: auto with arith).	0.0401248931885	54
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.015280008316	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	0.2.1.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0217089653015	7
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40	0.23.22	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	8.72323489189	14549
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40	3.28.48	search with cache (only 1: revert n; only 1: fix odd_equiv 1; only 1: trivial).	14.4562561512	40368
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	21	search with cache (only 1: intuition).	2.51914310455	2380
Coq.Arith.Div2.double_S	40	10.3.58.38	search with cache (only 1: Nat.bitwise; only 1: revert n; only 1: fix ind_0_1_SS 1; only 1: trivial).	6.56191086769	21050
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.10	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.0355041027069	60
Coq.Arith.Div2.odd_S2n	40	2.0.1	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0172140598297	6
Coq.Arith.Div2.div2_double	40	5.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: apply Nat.div2_double).	0.300294160843	44
Coq.Arith.Div2.div2_double_plus_one	40	0.3.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: trivial).	0.0343520641327	24
Coq.Arith.Plus.plus_assoc_reverse	40	5.1.0.0.1.0.0	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros; only 1: now Nat.nzsimpl; only 1: simpl; only 1: intros; only 1: auto).	2.39097690582	1050
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	1	search with cache (only 1: apply Nat.add_le_mono_l).	0.0232720375061	2
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0134909152985	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	11	search with cache (only 1: apply Nat.add_le_mono).	0.025682926178	33
Coq.Arith.Plus.plus_lt_compat	40	0.6.7.14	search with cache (only 1: intros; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order; only 1: assumption).	0.259397983551	603
Coq.Arith.Plus.le_plus_l	40	21.3.8.3.0.6.0.27	search with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: Nat.nzsimpl; only 1: trivial; only 1: intro p; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	22.3727760315	37923
Coq.Arith.Plus.le_plus_r	40	6.2.1.5.12	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intro n; only 1: trivial; only 1: now constructor).	0.599738121033	849
Coq.Arith.Plus.le_plus_trans	40	14.0.11	search with cache (only 1: transitivity m; only 1: trivial; only 1: apply Nat.le_add_r).	1.75706505775	1750
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	11.0.0.0.0.3	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: intros n IH; only 1: Nat.nzsimpl; only 1: now Nat.nzsimpl).	3.95925092697	1961
Coq.Arith.Plus.plus_is_one	40	12.6.6.5.3.4.1.2	search with cache (only 1: destruct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: destruct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: Nat.nzsimpl; only 1: discriminate).	12.3547670841	10880
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	2	search with cache (only 1: trivial).	0.010812997818	3
Coq.Arith.Lt.lt_n_Sm_le	40	1	search with cache (only 1: apply le_S_n).	0.0108590126038	2
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0109870433807	1
Coq.Arith.Lt.le_not_lt	40	0	search with cache (only 1: Nat.order).	0.0121428966522	1
Coq.Arith.Lt.lt_not_le	40	0	search with cache (only 1: Nat.order).	0.0117540359497	1
Coq.Arith.Lt.neq_0_lt	40	0	search with cache (only 1: Nat.auto').	0.0197849273682	1
Coq.Arith.Lt.lt_0_neq	40	1	search with cache (only 1: Nat.auto').	0.0932438373566	2
Coq.Arith.Lt.lt_n_S	40	8	search with cache (only 1: apply Nat.lt_succ_r).	0.011775970459	9
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0110459327698	1
Coq.Arith.Lt.S_pred	40	1.4.22.12	search with cache (only 1: revert m; only 1: induction n; only 1: now Nat.nzsimpl; only 1: reflexivity).	1.84865093231	2667
Coq.Arith.Lt.S_pred_pos	40
Coq.Arith.Lt.lt_pred	40	0.38.13	search with cache (only 1: destruct m; only 1: now Nat.nzsimpl'; only 1: apply Nat.succ_lt_mono).	1.64875912666	3830
Coq.Arith.Lt.lt_pred_n_n	40	10.1.0.2	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: auto).	0.143093109131	397
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	9.88634514809	18616
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	5.847260952	9625
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.0996389389038	113
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.011127948761	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.011766910553	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0121619701385	1
Coq.Arith.Wf_nat.gt_wf_rec	40	3	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0235600471497	20
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.1.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.100065946579	44
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40	0.0.0.0.0.6.51	search with cache (only 1: apply Nat.lt_gt_cases; only 1: right; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	3.45445895195	6746
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	3.0.0.15	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.164916038513	300
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.2.2.0.1.0.2.4.3	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	2.23844194412	1422
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	2.2.1.3.1.12.3.11	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	5.67768096924	13135
Coq.Arith.Compare_dec.le_ge_dec	40	1.0.0.4.0.0.0.8	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	0.484494924545	584
Coq.Arith.Compare_dec.le_gt_dec	40	8	search with cache (only 1: exact (le_lt_dec n m)).	0.0257019996643	35
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	2.5.8	search with cache (only 1: elim (le_lt_dec n m); only 1: auto; only 1: auto with arith).	0.186151981354	194
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	7	search with cache (only 1: apply le_dec).	0.00960683822632	13
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.00536298751831	2
Coq.Arith.Compare_dec.dec_le	40	0.0.0.0.2.16	search with cache (only 1: elim (le_lt_dec n m); only 1: left; only 1: trivial; only 1: right; only 1: apply Nat.lt_nge; only 1: trivial).	1.59920692444	2375
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	8	search with cache (only 1: apply Nat.le_decidable).	0.0139811038971	12
Coq.Arith.Compare_dec.dec_ge	40	21	search with cache (only 1: apply Nat.le_decidable).	0.0622541904449	211
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.00546407699585	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0053448677063	1
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0054349899292	1
Coq.Arith.Compare_dec.not_ge	40	9	search with cache (only 1: Nat.order).	0.0363969802856	23
Coq.Arith.Compare_dec.not_lt	40	5	search with cache (only 1: apply Nat.le_ngt).	0.0309641361237	22
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	2.3.0.1.1.0.0.1.1.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto with arith).	1.90960288048	2916
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	2	search with cache (only 1: apply Nat.compare_lt_iff).	0.00642704963684	3
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	1	search with cache (only 1: apply Nat.compare_gt_iff).	0.00634598731995	2
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40	2.0.1.0.0.0.1.1.0.0.3	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: auto with arith).	0.402863025665	1172
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00564217567444	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0122821331024	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.00609588623047	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	4.2.37.9	search with cache (only 1: repeat red; only 1: induction n as [| n IH]; only 1: split; only 1: trivial).	0.271517038345	2631
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	1.0.0.0.0.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply eq_nat_refl).	0.0371789932251	79
Coq.Arith.EqNat.eq_nat_eq	40	2	search with cache (only 1: apply eq_nat_is_eq).	0.178673028946	85
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40
Coq.Arith.EqNat.beq_nat_true	40	1.2.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	0.377038002014	438
Coq.Arith.EqNat.beq_nat_false	40	1.2.2.0.3.0.3.0.6	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: now try Nat.order'; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	1.70405912399	2171
Coq.Arith.EqNat.beq_nat_eq	40	1.2.0.0.0.0.0.2	search with cache (only 1: induction n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	4.95526194572	3381
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	12.1.5	search with cache (only 1: induction n; only 1: auto; only 1: firstorder).	2.303992033	1660
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	1	search with cache (only 1: constructor).	0.00944185256958	2
Coq.Arith.PeanoNat.Nat.recursion_succ	40	5.4.1.1.5.0	search with cache (only 1: intros A A_wd A0 AS; only 1: intros; only 1: simpl; only 1: induction n; only 1: firstorder; only 1: firstorder).	2.0550570488	3380
Coq.Arith.PeanoNat.Nat.pred_succ	40	1	search with cache (only 1: reflexivity).	0.016312122345	2
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0175938606262	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.0162999629974	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0159578323364	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.0150060653687	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.0120441913605	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.0158078670502	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	5.2.2.0.8.0.4	search with cache (only 1: revert m; only 1: split; only 1: exact (le_pred (S n) (S m)); only 1: revert m; only 1: induction 1; only 1: constructor; only 1: auto).	4.14871883392	9545
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0320558547974	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	1.0.11.0.0.0.1.0.0.1.0	search with cache (only 1: revert m; only 1: simpl_relation; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: destruct (IHn m); only 1: auto).	22.0869581699	36456
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	3.0.2.0.1.0.0.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: reflexivity; only 1: simpl; only 1: auto).	0.961274147034	2095
Coq.Arith.PeanoNat.Nat.compare_succ	40	0.1.0.0.0	search with cache (only 1: revert m; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: auto).	0.0252621173859	6
Coq.Arith.PeanoNat.Nat.max_l	40	0.1.0.0.0.0.1.1.0.1.1	search with cache (only 1: induction n; only 1: destruct m; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.0207400322	1335
Coq.Arith.PeanoNat.Nat.max_r	40	1.4.5.1.0.1.1.2.1	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	21.8108289242	56704
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.7.0.0.0.0.2	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: destr_bool; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.81166696548	3453
Coq.Arith.PeanoNat.Nat.min_r	40	1.4.5.1.2.1.1.0.0.1.5	search with cache (only 1: induction n; only 1: destruct m; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	23.9492599964	67604
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	3.4	search with cache (only 1: intro; only 1: false_hyp H nlt_0_r).	0.022096157074	9
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.011617898941	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0	search with cache (only 1: trivial).	0.019250869751	1
Coq.Arith.PeanoNat.Nat.square_spec	40	5.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: auto with *).	0.415126085281	46
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.1.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0306851863861	16
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	2.0.0.1.0.0.1.0.6.0.0.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: simpl; only 1: now nzsimpl; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	19.253207922	10621
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	7.0	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.0581851005554	48
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.0133929252625	1
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	3.0.1.20	search with cache (only 1: inversion 1; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: auto).	0.951164007187	1671
Coq.Arith.PeanoNat.Nat.gcd_divide	40	5.12	search with cache (only 1: fix even_spec 1; only 1: tauto).	1.17140603065	539
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.0.0.0.0.5.0.1	search with cache (only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: simpl; only 1: fold (b mod S a); only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	0.791335821152	762
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0117008686066	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	11.0.3	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	2.30499601364	1045
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	7	search with cache (only 1: apply le_0_l).	0.034255027771	26
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0238938331604	7
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	6.1.6.3.4	search with cache (only 1: induct n; only 1: order; only 1: fix le_div2 1; only 1: intros n IH H; only 1: auto).	7.03664207458	3343
Coq.Arith.PeanoNat.Nat.div2_decr	40	6.1.1	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.0389049053192	61
Coq.Arith.PeanoNat.Nat.double_twice	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0293991565704	2
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.0.14.0	search with cache (only 1: destr_bool; only 1: induction n; only 1: now constructor; only 1: easy).	12.2977929115	323
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	1.4.2.5.0.0.13.15.2	search with cache (only 1: nzsimpl'; only 1: simpl; only 1: apply eq_true_iff_eq; only 1: unfold odd; only 1: simpl; only 1: split; only 1: trivial; only 1: fix odd_spec 1; only 1: assumption).	14.8107831478	16532
Coq.Arith.PeanoNat.Nat.testbit_even_0	40	2.0.6.5.11.11.7.0	search with cache (only 1: unfold testbit; only 1: nzsimpl'; only 1: apply eq_true_iff_eq; only 1: split; only 1: unfold odd; only 1: fix odd_spec 1; only 1: assumption; only 1: easy).	20.9822180271	27121
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	1.15.2.7	search with cache (only 1: nzsimpl; only 1: revert n; only 1: fix le_div2 1; only 1: destr_bool).	9.60401582718	12545
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	1.9	search with cache (only 1: fix gcd_greatest 1; only 1: now induction n).	5.73794293404	449
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	4.5	search with cache (only 1: fix le_div2 1; only 1: trivial).	0.508251905441	220
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	7.2.8	search with cache (only 1: intro; only 1: fix le_div2 1; only 1: destr_bool).	4.56766200066	4571
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	5.6.1.1	search with cache (only 1: intros n1 n2 H; only 1: unfold odd; only 1: fix odd_spec 1; only 1: trivial).	7.16289901733	3087
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0215349197388	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0199677944183	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.0141689777374	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	2	search with cache (only 1: Nat.order).	0.025661945343	20
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	3	search with cache (only 1: apply Nat.succ_lt_mono).	0.014368057251	4
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0129837989807	1
Coq.Arith.Gt.gt_S	40	5.9.2	search with cache (only 1: intros EQ; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	0.320160865784	519
Coq.Arith.Gt.gt_pred	40	2	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0157580375671	3
Coq.Arith.Gt.le_not_gt	40	0.0.3.2	search with cache (only 1: intro H; only 1: apply Nat.lt_nge; only 1: apply Nat.lt_succ_r; only 1: trivial).	0.0197291374207	9
Coq.Arith.Gt.gt_not_le	40	5	search with cache (only 1: apply Nat.lt_nge).	0.0269618034363	19
Coq.Arith.Gt.le_S_gt	40	1	search with cache (only 1: trivial).	0.0121638774872	2
Coq.Arith.Gt.gt_S_le	40	4	search with cache (only 1: apply Nat.lt_succ_r).	0.0254700183868	5
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0128839015961	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0133190155029	1
Coq.Arith.Gt.le_gt_trans	40	0.0.23.2.1.4.2	search with cache (only 1: intros; only 1: apply Nat.le_ngt; only 1: apply Nat.le_ngt; only 1: apply Nat.le_succ_l; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: trivial).	4.41888189316	9181
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40	13.4.0.23.6	search with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: auto; only 1: apply Nat.succ_le_mono; only 1: now constructor).	29.7436540127	79786
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40	3	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0376200675964	12
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0141658782959	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40	0.0.0.0.1.1.1.0.3.6	search with cache (only 1: intros ReprFunChoice A B; only 1: apply setoid_functional_choice_first_characterization; only 1: split; only 1: exact choice; only 1: split; only 1: exact extensional_function_representative; only 1: exact classic; only 1: auto; only 1: firstorder; only 1: firstorder).	13.6014389992	943
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.10	search with cache (only 1: destruct 1; only 1: auto).	0.019581079483	108
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00832009315491	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00796794891357	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00812697410583	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00896310806274	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00919508934021	4
Coq.Logic.JMeq.JMeq_congr	40
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00848698616028	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00789403915405	2
Coq.Logic.JMeq.eq_dep_JMeq	40	1.1	search with cache (only 1: intros * []; only 1: auto).	0.0101981163025	13
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0102031230927	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	9.0	search with cache (only 1: intros; only 1: tauto).	0.021723985672	30
Coq.Logic.Classical_Prop.not_imply_elim	40	4.1.0.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: destruct (classic P); only 1: auto; only 1: tauto).	0.0537569522858	59
Coq.Logic.Classical_Prop.not_imply_elim2	40	2.1.1.0.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: destruct (classic P); only 1: auto; only 1: apply H; only 1: auto).	0.0420520305634	53
Coq.Logic.Classical_Prop.imply_to_or	40	2.2.1	search with cache (only 1: intros A; only 1: intros; only 1: tauto).	0.153120040894	59
Coq.Logic.Classical_Prop.imply_to_and	40	3.0.0.0.0.1	search with cache (only 1: intros; only 1: apply NNPP; only 1: apply NNPP; only 1: apply NNPP; only 1: apply NNPP; only 1: tauto).	0.0355298519135	21
Coq.Logic.Classical_Prop.or_to_imply	40	1	search with cache (only 1: tauto).	0.0517041683197	74
Coq.Logic.Classical_Prop.not_and_or	40	1.1.1.0.0.0	search with cache (only 1: intros; only 1: elim (classic P); only 1: elim (classic P); only 1: auto; only 1: auto; only 1: auto).	0.0987620353699	77
Coq.Logic.Classical_Prop.or_not_and	40	1	search with cache (only 1: tauto).	0.101144075394	88
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.014769077301	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.0144500732422	1
Coq.Logic.Classical_Prop.imply_and_or	40	3	search with cache (only 1: tauto).	0.0835499763489	100
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0161798000336	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	1.0.3.0.1.0.0.0.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	0.509464025497	1265
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40	14.1	search with cache (only 1: intros x y H; only 1: firstorder).	0.482277154922	307
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	39	search with cache (only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).	1.38360595703	2771
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	0.0.0.0.0.11.0.0.0.0.0.1	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: destruct H as [x Hx]; only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: firstorder; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	3.60246801376	4499
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	2.1.1.0.2.0.1	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0992751121521	299
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.2.0.2.0.1	search with cache (only 1: intros D_epsilon A P H; only 1: destruct H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.0262589454651	60
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	2.1.2.7	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.422257900238	969
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0.0.0.0.1.4	search with cache (only 1: Record.split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	19.1517760754	37441
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	1.1.2.7	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.848560810089	1175
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	0.8	search with cache (only 1: intros a b; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.7579228878	10
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	1.1.0.0.2	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intros; only 1: firstorder).	0.173762083054	28
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.5.2.0.0.0.1.1	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: pose (D := A * B); only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: pose (R := fun z z' : D => let x := fst z in let x' := fst z' in let y := snd z in let y' := snd z' in x = x' /\ (T x y -> y = y' \/ T x y') /\ (T x y' -> y = y' \/ T x y)); only 1: firstorder; only 1: exists f; only 1: firstorder).	24.3086941242	6910
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	7.9.1	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: easy).	0.127506017685	467
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	1.0.1.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0156810283661	7
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	2.0.1.0.5.8.1	search with cache (only 1: intros P notall; only 1: intros; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: apply abs).	4.46681904793	13380
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	6.1	search with cache (only 1: unfold not; only 1: firstorder).	0.160910129547	100
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0109670162201	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0383319854736	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00412511825562	2
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	1.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.00481796264648	4
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00529098510742	4
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00506281852722	4
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.14.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.0780930519104	459
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00352716445923	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: reflexivity).	0.00285887718201	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.1.0.1	search with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: trivial).	0.0127449035645	25
Coq.Logic.HLevels.false_hprop	40	2.2	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00863194465637	6
Coq.Logic.HLevels.true_hprop	40	6.4.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: reflexivity).	0.0194079875946	91
Coq.Logic.HLevels.not_hprop	40	0.1.3.0.2	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).	0.0170879364014	54
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	1.0.0.0.1.1	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.0612070560455	11
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.3.0.1.4.0	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	0.596686840057	307
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.8	search with cache (only 1: destruct 1; only 1: auto).	0.0101840496063	16
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00799489021301	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	1.4.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.011223077774	8
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.00969004631042	4
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	1.4.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0115549564362	8
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.4.2.1	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0278680324554	64
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	0.16.10.14.14.2	search with cache (only 1: red; only 1: intro; only 1: intro; only 1: intro UIP; only 1: rewrite H; only 1: trivial).	0.854419946671	10073
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	9.0.1	search with cache (only 1: red; only 1: intros; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.110537052155	290
Coq.Logic.EqdepFacts.f_eq_dep	40	1.0	search with cache (only 1: destruct 1; only 1: auto).	0.00965905189514	3
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	search with cache (only 1: intros * []; only 1: trivial).	0.0136549472809	13
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	1.0	search with cache (only 1: intros * []; only 1: trivial).	0.00919818878174	3
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	10	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.597320079803	21
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	13	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.622916936874	409
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	0.22.3.2.0	search with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: destruct H; only 1: apply NNPP; only 1: firstorder).	2.07693791389	4512
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40
Coq.Logic.Decidable.dec_True	40	5.4	search with cache (only 1: unfold decidable; only 1: auto).	0.00428700447083	21
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00332117080688	2
Coq.Logic.Decidable.dec_or	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0170631408691	58
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0136890411377	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00580501556396	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0752170085907	2
Coq.Logic.Decidable.dec_iff	40
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00450897216797	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00569701194763	1
Coq.Logic.Decidable.not_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00848889350891	2
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.010488986969	2
Coq.Logic.Decidable.imp_simp	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.00940489768982	3
Coq.Logic.Decidable.not_iff	40	0.2	search with cache (only 1: unfold decidable; only 1: tauto).	0.0611970424652	17
Coq.Logic.Decidable.not_true_iff	40	3.3.10	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0123739242554	158
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00382614135742	1
Coq.Logic.Decidable.not_not_iff	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.00790119171143	19
Coq.Logic.Decidable.contrapositive	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.00916695594788	3
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0105550289154	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0108859539032	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0102617740631	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.010782957077	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0116798877716	2
Coq.Logic.Decidable.not_or_iff	40	4.1	search with cache (only 1: intros; only 1: tauto).	0.00918793678284	26
Coq.Logic.Decidable.not_and_iff	40	2	search with cache (only 1: tauto).	0.00672197341919	3
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0140650272369	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0148138999939	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	5.5.0.0.23	search with cache (only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.581851005554	1338
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	1.0.1.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0713610649109	7
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	14.2.0.4	search with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: auto; only 1: simpl; only 1: intuition_in).	4.54650497437	1789
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.0.1.0.1	search with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0364270210266	8
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.554817914963	615
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0175378322601	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0175909996033	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0455350875854	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	6	search with cache (only 1: eauto with *).	0.0644397735596	18
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2	search with cache (only 1: exact (rmatch _ _ _)).	0.020035982132	3
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0199890136719	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	4	search with cache (only 1: ok).	0.192673206329	35
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	15	search with cache (only 1: firstorder).	0.141569852829	104
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.0.1.0.11.12	search with cache (only 1: intros n; only 1: induction n as [| k Hrec]; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: auto).	0.548225879669	1589
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.0	search with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0256979465485	2
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0243561267853	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0517830848694	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	2.5.21	search with cache (only 1: inversion 1; only 1: auto; only 1: auto).	0.943875074387	1815
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.2.1.18.0.0	search with cache (only 1: destruct 1; only 1: auto; only 1: destruct t as [| [| ] l x r]; only 1: auto; only 1: invrb; only 1: invrb).	4.8371360302	7123
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0431339740753	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	46.11.17.0	search with cache (only 1: unfold singleton; only 1: red; only 1: unfold elt in *; only 1: ok).	5.19384098053	19821
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	2.2.0.1.1.1.1	search with cache (only 1: destruct t; only 1: invrb; only 1: descolor; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	0.975768089294	676
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.1.0.0.0.0.1.0.0.0.0.12	search with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: auto).	6.50424289703	2336
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	3.0.1.0.0.0.0.1.0.0.0.0.10	search with cache (only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: auto).	4.04753303528	2228
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	0.2.4.4.0.2.5	search with cache (only 1: destruct s; only 1: intuition; only 1: simpl; only 1: repeat red; only 1: descolor; only 1: intuition; only 1: auto).	12.6684579849	13789
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.0.0.0.0.1.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0513391494751	9
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	7.0	search with cache (only 1: intros; only 1: auto).	0.0789330005646	32
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0	search with cache (only 1: intro; only 1: auto).	0.0276501178741	2
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.1.1.1.0	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0449960231781	8
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	2.6.4	search with cache (only 1: destruct s; only 1: ok; only 1: ok).	0.169339179993	114
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.1.1.1	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0374071598053	7
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0377178192139	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.3.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.445295095444	264
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.226427078247	94
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0516171455383	9
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.6.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.207333087921	53
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.0.6.0	search with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.065502166748	16
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: trivial).	0.0405058860779	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0	search with cache (only 1: firstorder).	0.0424590110779	1
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	0.18	search with cache (only 1: fix odd_spec 1; only 1: intuition).	1.35179495811	1058
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	6.1.2.5	search with cache (only 1: intros n; only 1: repeat red; only 1: unfold In; only 1: intuition).	0.638873100281	413
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	1.19	search with cache (only 1: fix even_spec 1; only 1: intuition).	7.01693606377	2265
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.0.0.28	search with cache (only 1: intros [| ] [| ]; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.24259185791	1494
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	1.1.0.1.0.0.1.1.0.1.6	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: intros; only 1: intuition; only 1: intros; only 1: intuition; only 1: easy; only 1: intros; only 1: intuition; only 1: easy || now destruct 1).	8.29683089256	4843
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	1.1.1.1.5	search with cache (only 1: intros [| ] [| ]; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.738206863403	240
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.062313079834	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0619630813599	4
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0627229213715	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0611009597778	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0623869895935	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	0.0.9	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: trivial).	0.160993099213	88
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.6.1	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.42572593689	115
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40	16.4	search with cache (only 1: intro; only 1: now rewrite H).	2.5069770813	2533
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.2.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0577840805054	5
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.4.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0783939361572	19
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.15	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.644736051559	370
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0573139190674	2
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	0.1	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0569379329681	3
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0567190647125	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0569059848785	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0629208087921	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.10	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.444925069809	100
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0624718666077	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.1.2	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.347716808319	59
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0713369846344	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.059800863266	5
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	0.0.2.1.1	search with cache (only 1: split; only 1: intros; only 1: apply <- mem_spec; only 1: auto; only 1: apply -> mem_spec).	0.0798001289368	9
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	0.1.0.0.2.0.0	search with cache (only 1: split; only 1: intros; only 1: apply <- equal_spec; only 1: auto; only 1: intros; only 1: apply -> equal_spec; only 1: auto).	0.0898060798645	10
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	0.0.2.1.2	search with cache (only 1: split; only 1: intros; only 1: apply <- subset_spec; only 1: auto; only 1: apply -> subset_spec).	0.0851531028748	10
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	1.2.3	search with cache (only 1: split; only 1: apply <- is_empty_spec; only 1: apply -> is_empty_spec).	0.144562959671	19
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	1.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0558149814606	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	2.5	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.143928050995	31
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	0.11.1.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	1.78275704384	752
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.10	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.499073028564	93
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	0.2.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0667450428009	5
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.07834815979	5
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.159297943115	18
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	6	search with cache (only 1: intuition).	0.0541260242462	7
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	1.1.0.1.0.0.0.1	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	10.0806570053	1564
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	1.1.0.1.0.0.0.3	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	22.6574130058	4055
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	2.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.0568118095398	4
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40	12.4.3.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: now f_equiv).	31.4725949764	3900
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	6.0.0	search with cache (only 1: unfold Equal; only 1: intros x y H s s' H0; only 1: firstorder).	0.0689849853516	9
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	2.2.1	search with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.0643889904022	8
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	5.0.0.7	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	13.0825099945	498
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.0.0.0.0	search with cache (only 1: repeat red; only 1: unfold Empty; only 1: intros s s' E; only 1: setoid_rewrite E; only 1: auto).	0.127954959869	5
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.109210014343	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.108167886734	3
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.170567035675	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.105560064316	3
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.153119087219	3
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	0.0.7.4.2.1	search with cache (only 1: intros x x' Hx s s' Hs; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: now f_equiv; only 1: intuition; only 1: intuition).	5.90786504745	1960
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: auto).	0.0899531841278	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.1.2.2	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.127315998077	10
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	1	search with cache (only 1: reflexivity).	0.0375199317932	2
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	3	search with cache (only 1: fsetdec).	0.141705036163	16
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	1	search with cache (only 1: firstorder).	0.0427398681641	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	1	search with cache (only 1: fsetdec).	0.0470340251923	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	0	search with cache (only 1: fsetdec).	0.067834854126	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	1	search with cache (only 1: fsetdec).	0.0692141056061	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	1	search with cache (only 1: fsetdec).	0.0601789951324	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0498461723328	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	1	search with cache (only 1: fsetdec).	0.0756759643555	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.106940984726	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	1	search with cache (only 1: fsetdec).	0.0913178920746	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0672550201416	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0616509914398	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.0.0.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.128537893295	4
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.0801060199738	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	1	search with cache (only 1: fsetdec).	0.0688228607178	2
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	2	search with cache (only 1: fsetdec).	0.0912380218506	3
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	1	search with cache (only 1: fsetdec).	0.165036916733	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	5	search with cache (only 1: fsetdec).	0.388383865356	82
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	1	search with cache (only 1: fsetdec).	0.119358062744	2
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	1	search with cache (only 1: fsetdec).	0.149437189102	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.140563011169	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0965340137482	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.241364002228	2
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	1	search with cache (only 1: fsetdec).	0.0967819690704	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	1	search with cache (only 1: fsetdec).	0.0886609554291	2
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	1	search with cache (only 1: fsetdec).	0.134876966476	2
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.106094121933	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.160825967789	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.113750934601	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.170253992081	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.261125087738	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	1	search with cache (only 1: fsetdec).	0.244301080704	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	1	search with cache (only 1: fsetdec).	0.0594019889832	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	1	search with cache (only 1: fsetdec).	0.0589699745178	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	1	search with cache (only 1: fsetdec).	0.0786890983582	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0801219940186	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0807728767395	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	1	search with cache (only 1: fsetdec).	0.107407093048	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0864570140839	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	0.0.0.1.1	search with cache (only 1: rewrite union_spec; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.121315002441	7
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0934550762177	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0856289863586	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	1	search with cache (only 1: fsetdec).	0.100808858871	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.101745128632	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.148811817169	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.173400878906	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.183162212372	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	2	search with cache (only 1: fsetdec).	0.168115854263	3
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	2	search with cache (only 1: fsetdec).	0.146670103073	3
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.0743870735168	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	1	search with cache (only 1: fsetdec).	0.0731830596924	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0607430934906	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0598061084747	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	1	search with cache (only 1: fsetdec).	0.0910279750824	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0809659957886	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0899541378021	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0649108886719	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	1	search with cache (only 1: fsetdec).	0.112905025482	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.106356143951	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.167016029358	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.145809173584	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	0.7	search with cache (only 1: expAdd; only 1: fsetdec).	0.225016117096	25
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.217394113541	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	1.5	search with cache (only 1: expAdd; only 1: fsetdec).	0.318248987198	8
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.272166013718	3
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.276944875717	4
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	0.0.0.0.0.1.2	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.113548994064	25
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	1.3.1.1.10.0	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto with set; only 1: auto with *; only 1: intro x; only 1: fsetdec).	2.88218402863	1791
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40	2.0.0.4.13.3	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: now symmetry; only 1: reflexivity; only 1: intros until 3; only 1: fsetdec).	3.1886548996	2384
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	5.2.5.3	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).	0.954221963882	663
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.1.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0837740898132	4
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	0.24.15.6.1	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: auto).	8.41033983231	12687
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	5.1.6.8.11.15.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	5.77306294441	10782
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.2	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0489912033081	4
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	3.9.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.740617990494	288
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	3.0	search with cache (only 1: symmetry; only 1: auto with set).	0.0524520874023	5
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.2.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: fsetdec).	0.333588123322	73
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.2.2	search with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	0.388888120651	86
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0	search with cache (only 1: auto with set).	0.0394639968872	1
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0509641170502	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0488910675049	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	10	search with cache (only 1: eauto with *).	0.0154449939728	21
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	1.1.1.1.38	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	5.6156411171	1604
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.2	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.216824054718	57
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	1.0.0.3	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0637290477753	26
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	1.0.1.0.0.1	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0372319221497	9
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.134548187256	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	22	search with cache (only 1: intuition).	3.08405208588	1333
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	4.2	search with cache (only 1: intros; only 1: auto with set).	0.0688509941101	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	3	search with cache (only 1: intuition).	0.108263969421	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.115660905838	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0926229953766	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.115878105164	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	1	search with cache (only 1: auto with set relations).	0.0436811447144	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0657517910004	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0659410953522	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	1	search with cache (only 1: auto with set).	0.0439438819885	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40	1.3.1.3.1.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: rewrite (equal_2 H); only 1: auto with set).	1.33014702797	343
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	1.1.0.3	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.116222858429	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	0.1.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0574140548706	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	13	search with cache (only 1: auto with set).	0.151624917984	78
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	4	search with cache (only 1: auto with set).	0.0443320274353	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	2	search with cache (only 1: auto with set).	0.0499329566956	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	1	search with cache (only 1: auto with set).	0.0448281764984	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	1	search with cache (only 1: auto with set relations).	0.0442590713501	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	1	search with cache (only 1: auto with set relations).	0.0447719097137	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	1.0.0.0.0.3	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: intuition).	0.17618894577	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0925750732422	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	0	search with cache (only 1: auto with set relations).	0.0442187786102	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.4.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite singleton_spec; only 1: auto with relations).	2.27627801895	534
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	1.10	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.258533000946	161
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1	search with cache (only 1: auto with set).	0.0450019836426	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.157579898834	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	3.1.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0658669471741	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0450899600983	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0444221496582	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0432639122009	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0431280136108	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0433440208435	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	1	search with cache (only 1: auto with set).	0.0439989566803	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.174102067947	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: auto with set).	0.044408082962	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0470578670502	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	1	search with cache (only 1: auto with set).	0.0463531017303	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0445790290833	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0439019203186	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	0	search with cache (only 1: auto with set).	0.042662858963	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0445938110352	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set relations).	0.0437180995941	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40	0.6	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.642136096954	35
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0438029766083	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0433809757233	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.103214979172	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0	search with cache (only 1: auto with set).	0.0430250167847	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	1	search with cache (only 1: auto with set).	0.0470640659332	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0414931774139	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0445890426636	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0443501472473	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	0.0.0.3.0.1.0.2	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: intuition; only 1: intuition; only 1: intuition).	5.51040196419	1149
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.051078081131	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40	0.3.0.0.0.17.3	search with cache (only 1: intuition; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto; only 1: apply -> equal_spec; only 1: auto).	10.9909231663	8202
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40	0.0.2.0.0.0.2.4	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	0.646414041519	342
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.1.0.0.0.6.5	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	0.848752975464	553
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.0442771911621	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.4.1	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	0.089476108551	18
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.2.2.0.1.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto; only 1: auto).	0.56738114357	277
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.4.8.6	search with cache (only 1: intro; only 1: intro; only 1: rewrite <- not_mem_iff; only 1: auto with *).	1.83343601227	1094
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.0.2.1.3.11	search with cache (only 1: intros l1 l2; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with *; only 1: auto with *; only 1: auto with *).	1.72314190865	1478
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1.1	search with cache (only 1: intros; only 1: auto with set).	0.0578000545502	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	11	search with cache (only 1: solve_proper).	0.705722093582	98
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	5.1	search with cache (only 1: intros; only 1: auto with set).	0.0828289985657	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0492198467255	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	0.0.0.0.4.0.0.0.4	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	19.1375010014	1300
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	0.2.0.1.3.1	search with cache (only 1: intros; only 1: apply <- for_all_spec; only 1: red; only 1: intros; only 1: auto with set; only 1: auto).	0.220685005188	103
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40	0.1.21.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	1.49086093903	912
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0560479164124	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.0	search with cache (only 1: intros s s' E; only 1: auto).	0.0493359565735	2
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.192525863647	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0445880889893	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	0.0.2.16.3.16	search with cache (only 1: unfold decidable; only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: auto; only 1: intuition).	7.63439393044	6190
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.116133928299	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.163776874542	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.287828922272	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	1	search with cache (only 1: firstorder).	0.0495312213898	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.109724998474	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	1.0	search with cache (only 1: red; only 1: fsetdec).	0.100839853287	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.151011943817	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	1	search with cache (only 1: fsetdec).	0.456578969955	23
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.160699129105	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	4.0	search with cache (only 1: intros x; only 1: fsetdec).	0.198619127274	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.253953933716	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.322494983673	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	2.6.3	search with cache (only 1: intros x y H s s' H0; only 1: rewrite singleton_spec; only 1: intuition).	0.71116900444	235
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0.5	search with cache (only 1: intros s s' E; only 1: fsetdec).	0.233204126358	14
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	12	search with cache (only 1: fsetdec).	0.576840877533	114
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0957579612732	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	1.18	search with cache (only 1: fix odd_spec 1; only 1: intuition).	27.6378910542	4781
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	0.10.10.4	search with cache (only 1: repeat red; only 1: intros x y z; only 1: fix gcd_divide 1; only 1: auto).	6.98904895782	5689
Coq.MSets.MSetGenTree.Props.In_node_iff	40	6	search with cache (only 1: intuition_in).	0.221476078033	42
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	6	search with cache (only 1: intuition_in).	0.0932290554047	27
Coq.MSets.MSetGenTree.Props.lt_leaf	40	5.1	search with cache (only 1: intros x y z; only 1: intuition_in).	0.04501080513	14
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0317730903625	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	3.6.0	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.448446989059	151
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	1.0.1	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.0665309429169	11
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	1.4.0.1	search with cache (only 1: red; only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.0603740215302	20
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	4.1.1	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.0612559318542	35
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0201849937439	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	1	search with cache (only 1: eauto).	0.0413010120392	18
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	3.11	search with cache (only 1: unfold lt_tree; only 1: solve_proper).	6.55716204643	3945
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0604739189148	20
Coq.MSets.MSetGenTree.Props.empty_spec	40	0.5	search with cache (only 1: intro; only 1: auto).	0.0306441783905	7
Coq.MSets.MSetGenTree.Props.empty_ok	40	2	search with cache (only 1: constructor).	0.023432970047	3
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	4.18.6	search with cache (only 1: red; only 1: fix gcd_divide 1; only 1: auto).	31.1703259945	19837
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.1.0.0.0.0.0.5	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	8.73704504967	3701
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40	2.11.17	search with cache (only 1: red; only 1: fix gcd_divide 1; only 1: intuition_in).	14.3578848839	21812
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	1.8	search with cache (only 1: fix gcd_divide 1; only 1: intuition).	0.0759289264679	49
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	15	search with cache (only 1: firstorder).	0.324550867081	239
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	2.5.5	search with cache (only 1: intros; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	1.03124380112	450
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	3	search with cache (only 1: firstorder).	0.0378558635712	19
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40	2.16.19.7.6	search with cache (only 1: PeanoNat.Nat.bitwise; only 1: apply eq_true_iff_eq; only 1: revert m; only 1: fix odd_spec 1; only 1: intuition).	3.14820098877	7287
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	0.12.0	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: firstorder).	12.1965699196	4203
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	6	search with cache (only 1: firstorder).	0.0247790813446	19
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	5	search with cache (only 1: firstorder).	0.0286891460419	28
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	0.10.5.0	search with cache (only 1: repeat red; only 1: intros a l H; only 1: fix gcd_divide 1; only 1: auto).	5.85253691673	6674
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0759389400482	3
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	search with cache (only 1: compute; only 1: auto with extcore).	0.0739068984985	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	11.1	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	2.58724308014	463
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	2.4.6.3	search with cache (only 1: intro; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	4.20258188248	1997
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	4.0.1.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: Dec.fsetdec; only 1: intuition).	0.213535070419	14
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	1.3.2.0.0.0.0.1.1.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intro; only 1: intro; only 1: red in H; only 1: red in H; only 1: intuition).	26.8297758102	6798
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	0.1.0.1.1.12.0	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: rewrite 2!InA_alt; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	14.287927866	2112
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	0.23	search with cache (only 1: fix even_spec 1; only 1: intuition).	12.1090478897	2825
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.1.1.0.1.0.0.0.0.9	search with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros [? ?]; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	3.4932820797	1500
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	0	search with cache (only 1: firstorder).	0.0106179714203	1
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	0.0216200351715	5
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	0.7	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.0183248519897	17
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.9.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	2.73554587364	141
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	1.1.2	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0507671833038	70
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	2.1	search with cache (only 1: unfold elements; only 1: intuition).	0.00746202468872	5
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.00935888290405	2
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40	19.2.0.6	search with cache (only 1: induction s; only 1: intros; only 1: easy; only 1: simpl_relation).	8.16505289078	16410
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	0.2.0.0.0.0.4	search with cache (only 1: unfold Empty; only 1: destruct s; only 1: red; only 1: intros; only 1: inv; only 1: intros; only 1: discriminate).	0.876247167587	767
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: auto).	0.00834012031555	2
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	3	search with cache (only 1: assumption).	0.0140779018402	4
Coq.MSets.MSetList.MakeRaw.mem_spec	40	1.9	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.556264877319	220
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: simpl; only 1: constructor; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	1.97750806808	1006
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	1	search with cache (only 1: auto).	0.032811164856	14
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	0.2.13.6.15	search with cache (only 1: intro H; only 1: intros; only 1: unfold singleton; only 1: rewrite InA_cons, InA_nil; only 1: tauto).	17.690612793	24088
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.127523183823	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40	3.14	search with cache (only 1: fix even_spec 1; only 1: intuition).	12.5510280132	12439
Coq.MSets.MSetList.MakeRaw.subset_spec	40	5.10	search with cache (only 1: fix odd_spec 1; only 1: intuition).	4.62855386734	3350
Coq.MSets.MSetList.MakeRaw.empty_ok	40	2.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: constructor).	0.021733045578	4
Coq.MSets.MSetList.MakeRaw.empty_spec	40	0.3.0.9	search with cache (only 1: red; only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.364411115646	116
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0.0.2	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0228910446167	5
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.0.0.0.0.0.0.3.0.9	search with cache (only 1: intro l; only 1: intro H; only 1: induction l as [| x xs]; only 1: constructor; only 1: change_no_check (inf x xs && isok xs = true) in H; only 1: rewrite andb_true_iff, <- inf_iff in H; only 1: destruct H; only 1: constructor; only 1: tauto; only 1: tauto).	4.52714395523	4069
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.1.7	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0723669528961	36
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	2.0.0.5.1	search with cache (only 1: induction s as [| x s IH]; only 1: unfold Empty, empty; only 1: intuition; only 1: inv; only 1: easy).	1.70569610596	537
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	2.2.0.5.0.0.3	search with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: inversion 1; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: auto).	14.4250731468	8588
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0	search with cache (only 1: auto).	0.0150828361511	1
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: auto).	0.015820980072	2
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	3.3.1.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: split; only 1: now rewrite Hxx', Hyy'; only 1: now rewrite Hxx', Hyy').	0.107792139053	69
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	1	search with cache (only 1: reflexivity).	0.0872478485107	2
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0102190971375	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.4.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.204662084579	221
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	3.0.3.1.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto with sets; only 1: left; only 1: auto with sets).	0.143430948257	658
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40	0.0.0.2.0.0.3.0.0.0.1.0.0.0.0.0.0.0.3.0	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	6.92036509514	34533
Coq.Relations.Operators_Properties.clos_rt1n_step	40
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.6.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0313138961792	100
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.0.1.0.0	search with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto with sets; only 1: auto with sets).	0.0118689537048	6
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.2.0.0.5.2.0.1.1.1.1.1.5.1.0	search with cache (only 1: intros; only 1: induction H1; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	5.08367085457	31669
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.3.0.1.0.4.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto with sets; only 1: case H; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).	0.943317890167	2816
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	2.0.3.1.0.1.0.6.3.2	search with cache (only 1: intros x y H; only 1: induction 1; only 1: constructor 1; only 1: intro z; only 1: auto; only 1: intro z; only 1: intros; only 1: eauto; only 1: intro z; only 1: auto).	1.24719190598	6395
Coq.Relations.Relations.inverse_image_of_eq	40	0.6.0.5.7.0.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: induction 1; only 1: trivial; only 1: induction 1; only 1: trivial).	0.149090051651	929
Coq.Sets.Uniset.leb_refl	40	3.2	search with cache (only 1: intros; only 1: destr_bool).	0.00979900360107	7
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00969004631042	5
Coq.Sets.Uniset.seq_refl	40	2	search with cache (only 1: auto).	0.0082848072052	3
Coq.Sets.Uniset.seq_trans	40
Coq.Sets.Uniset.seq_sym	40	0.0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: auto).	0.0111401081085	4
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.00979685783386	3
Coq.Sets.Uniset.union_empty_right	40	7.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	0.0486340522766	98
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with bool).	0.0324990749359	30
Coq.Sets.Uniset.seq_left	40	0.1.1.0.0.0.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.376705884933	473
Coq.Sets.Uniset.seq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0153300762177	9
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	0	search with cache (only 1: split).	0.011775970459	1
Coq.Sets.Multiset.meq_trans	40	4	search with cache (only 1: congruence).	0.195291996002	47
Coq.Sets.Multiset.meq_sym	40	1.0.0.0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).	0.0199959278107	7
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: reflexivity).	0.0149810314178	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0158410072327	4
Coq.Sets.Multiset.munion_comm	40	8.1.3.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: destruct y; only 1: simpl; only 1: firstorder).	5.1451280117	4346
Coq.Sets.Multiset.munion_ass	40	0.1.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0253801345825	9
Coq.Sets.Multiset.meq_left	40	0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0250020027161	7
Coq.Sets.Multiset.meq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0269508361816	10
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.028468132019	12
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: auto with sets).	0.00635099411011	1
Coq.Sets.Integers.le_antisym	40	0.0	search with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.00829100608826	2
Coq.Sets.Integers.le_trans	40	0.6.0	search with cache (only 1: red; only 1: intros a b H; only 1: PeanoNat.Nat.order').	0.0192492008209	36
Coq.Sets.Integers.le_Order	40	0.0.0.0.1.1.0.0.0.22	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).	0.28882598877	972
Coq.Sets.Integers.triv_nat	40	3.3	search with cache (only 1: intros; only 1: split).	0.0133759975433	15
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	2.0.4	search with cache (only 1: intros; only 1: intros A C h1 h2; only 1: auto).	0.0105249881744	30
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	3.0.6	search with cache (only 1: intros x y h; only 1: elim h; only 1: auto  10 with sets).	0.213069915771	377
Coq.Sets.Relations_1_facts.contains_is_preorder	40	10	search with cache (only 1: auto  10 with sets).	0.00986504554749	26
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.8.3.1.4	search with cache (only 1: red; only 1: unfold same_relation at 1; only 1: intros x y z h; only 1: elim h; only 1: auto  10 with sets).	0.389966011047	1841
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	3.1.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.0161180496216	26
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	1.1	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0922729969025	48
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1	search with cache (only 1: intuition).	0.00865292549133	2
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto  10 with sets).	0.00760698318481	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.6.3.0.1.0.1	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	2.1738038063	11409
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	1.3.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.00913286209106	7
Coq.Sets.Permut.comm_left	40	3.1.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: trivial).	0.00900197029114	7
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.1.21.7.7	search with cache (only 1: intros P H'; only 1: intros x0 H'0; only 1: exists x0; only 1: auto with sets; only 1: auto with sets).	8.73204803467	25667
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.16.1.0.0.2.5.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: easy; only 1: auto with sets).	5.63940191269	9395
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	0.1.0.7.17.9	search with cache (only 1: intros ReprFunChoice P; only 1: simple destruct 1; only 1: intros x0 H'0; only 1: intros; only 1: exists x0; only 1: auto with sets).	4.56582093239	16694
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	3.0.6	search with cache (only 1: compute; only 1: intros; only 1: intuition).	0.0186400413513	54
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40
Coq.Sets.Powerset.Inclusion_is_transitive	40	2.1.0.0	search with cache (only 1: red; only 1: intro X; only 1: intros x H'; only 1: auto  6 with sets).	0.00851678848267	13
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	2.3	search with cache (only 1: red; only 1: auto  10 with sets).	0.00803804397583	7
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.1.1.0.0.1.0.0.0.2	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).	11.6510870457	1870
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	4.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.010372877121	12
Coq.Sets.Powerset.Union_increases_l	40	1	search with cache (only 1: auto with sets).	0.00654196739197	2
Coq.Sets.Powerset.Union_increases_r	40	1	search with cache (only 1: auto with sets).	0.00562715530396	2
Coq.Sets.Powerset.Intersection_decreases_l	40	1.0.0.4.3.4	search with cache (only 1: intro X; only 1: red; only 1: intro A; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	6.35430693626	2120
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.1	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0122239589691	6
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	10	search with cache (only 1: firstorder).	0.616568088531	120
Coq.Sets.Classical_sets.Subtract_inv	40	8	search with cache (only 1: firstorder).	0.0434489250183	35
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40	2.11.3	search with cache (only 1: intros A NI; only 1: fix gcd_divide 1; only 1: tauto).	5.94524908066	3473
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.2.1.1.0	search with cache (only 1: intros; only 1: red; only 1: intro H'; only 1: elim H'; only 1: auto with sets).	0.0369400978088	9
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40	3.1.6.18.1	search with cache (only 1: compute; only 1: intros A C h1 h2; only 1: intros (x, (Hx, Huni)); only 1: exists x; only 1: auto with sets).	15.3404958248	105689
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	6.0.2.4	search with cache (only 1: intros A NI; only 1: red; only 1: intros; only 1: firstorder).	0.973021030426	1523
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	5.4	search with cache (only 1: intros A B x H'; only 1: firstorder).	0.559163093567	299
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	3.0.0.0.0.0.5.4.0.1.2	search with cache (only 1: unfold Included; only 1: unfold Add at 1; only 1: intros X x H'; only 1: intros t H'1; only 1: elim H'1; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	32.8512909412	69804
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0156800746918	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.11	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.174468040466	113
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto  6 with sets).	0.0144729614258	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0168778896332	1
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	1	search with cache (only 1: auto  6 with sets).	0.0201969146729	2
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.018669128418	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.2.0.0.0.0.2.0.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.924866199493	1620
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	1.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	18.7737100124	28503
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.2.4.0.0.2.4.0.3.4.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets).	1.77842116356	3407
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	1.99380993843	3851
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.3.2	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.138153076172	33
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.3.0.0.5.1.0.0.2.4.4	search with cache (only 1: unfold Add at 1; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: red; only 1: auto with sets).	4.96368718147	14056
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.2.4.2.7.4.2	search with cache (only 1: unfold Add at 1; only 1: intros X x H'; only 1: apply Singleton_inv; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	1.80830717087	4167
Coq.Sets.Powerset_facts.incl_add	40	0.3.3	search with cache (only 1: unfold Add at 1; only 1: unfold Add; only 1: auto with sets).	0.222265005112	44
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	0.0.0	search with cache (only 1: unfold Add at 1; only 1: unfold Add; only 1: auto  9 with sets).	0.042466878891	3
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40	13.0.2.9.0	search with cache (only 1: unfold Add; only 1: intros a b X H' H'0; only 1: apply Extensionality_Ensembles; only 1: red; only 1: auto  10 with sets).	12.4545409679	11566
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.00811004638672	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.01158618927	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0114622116089	7
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	1.0.1.0.0.2.0.3.0.4	search with cache (only 1: intro X; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	1.4186398983	3909
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0173251628876	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: intuition; only 1: intuition).	0.0194010734558	14
Coq.Sets.Constructive_sets.Extension	40
Coq.Sets.Constructive_sets.Noone_in_empty	40	2.0	search with cache (only 1: unfold not; only 1: destruct 1).	0.00759696960449	4
Coq.Sets.Constructive_sets.Included_Empty	40	0.0.1	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.00816082954407	4
Coq.Sets.Constructive_sets.Add_intro1	40
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00798606872559	2
Coq.Sets.Constructive_sets.Inhabited_add	40
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	6.5.7.2.2.7.7.3	search with cache (only 1: red; only 1: intro; only 1: intro H1; only 1: elim H1; only 1: intros B C H'; only 1: elim H1; only 1: rewrite H'; only 1: destruct 1).	3.19593787193	34469
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	3.0.1	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0100178718567	7
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.00907206535339	4
Coq.Sets.Constructive_sets.Union_inv	40	2.2.10.5.5	search with cache (only 1: intro; only 1: intros x H; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.646218061447	3351
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.2	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0104310512543	5
Coq.Sets.Constructive_sets.Couple_inv	40	1.4.0.1.2.1	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial; only 1: right; only 1: auto with sets).	0.165507078171	502
Coq.Sets.Constructive_sets.Setminus_intro	40	1.1.0.0	search with cache (only 1: red; only 1: red; only 1: intros B C x H'; only 1: auto with sets).	0.00893902778625	6
Coq.Sets.Constructive_sets.Strict_Included_intro	40	2.0	search with cache (only 1: intros X H'; only 1: trivial).	0.00828385353088	4
Coq.Sets.Constructive_sets.Strict_Included_strict	40	2.1.2	search with cache (only 1: unfold not; only 1: destruct 1; only 1: auto with sets).	0.0109751224518	8
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.1.4.6.1	search with cache (only 1: intro X; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.299782037735	590
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.26.25	search with cache (only 1: intro x; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	1.34469819069	4845
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40	1.0.6.4	search with cache (only 1: intros a Ha; only 1: fix le_div2 1; only 1: intros n m LE; only 1: auto with arith).	1.11634898186	2065
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	3.1.1	search with cache (only 1: induction 1; only 1: auto; only 1: auto with sets).	0.00899004936218	30