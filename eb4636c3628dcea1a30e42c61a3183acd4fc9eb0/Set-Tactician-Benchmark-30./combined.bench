coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	30	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.344462	13
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	0.149748	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	0.145427	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	0.098719	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	0.058391	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	0.135946	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	0.122761	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	30	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	0.030276	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	0.039117	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	0.052132	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	0.042708	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.147747	14
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	30	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	0.271259	73
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	30	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.159100	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	30	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.235614	44
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	30	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	0.598306	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	30	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.204901	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	30	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.103401	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	30	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	0.105063	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	30	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.419563	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	30	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.186534	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	30	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.152447	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	30	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.777717	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	30	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	1.293981	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	30	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.172774	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	30	0	synth with cache (only 1: reflexivity).	0.276412	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	30
